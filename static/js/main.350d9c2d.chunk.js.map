{"version":3,"sources":["AssetField/AssetField.js","SmartNumber/SmartNumber.js","ChartCustomTooltipRow/ChartCustomTooltipRow.js","PageNotFound/PageNotFound.module.scss","utilities/components/ShortHash.js","LoadingSpinner/LoadingSpinner.js","ButtonLoader/ButtonLoader.js","IconBox/IconBox.js","TransactionListFilters/TransactionListFilters.js","TransactionsList/TransactionsList.js","CustomTooltip/CustomTooltip.js","AllocationChart/AllocationChart.js","CustomTooltip/CustomTooltipRow.js","FlexLoader/FlexLoader.js","ImageButton/ImageButton.js","PortfolioEquity/PortfolioEquity.js","ChartCustomTooltip/ChartCustomTooltip.js","RoundButton/RoundButton.js","ExtLink/ExtLink.js","theme.js","TableCellHeader/TableCellHeader.module.scss","TransactionListFilters/TransactionListFilters.module.scss","utilities/components/ModalCard.module.scss","Web3ConnectionButtons/Web3ConnectionButtons.module.scss","utilities/components/Header.module.scss","TxProgressBar/TxProgressBar.js","AssetSelector/AssetSelector.js","Tos/Tos.module.scss","TransactionField/TransactionField.js","GenericSelector/GenericSelector.js","Title/Title.js","GenericChart/GenericChart.js","DashboardCard/DashboardCard.module.scss","FastBalanceSelector/FastBalanceSelector.js","TokenSwap/TokenSwap.js","SendTxWithBalance/SendTxWithBalance.js","ETHWrapper/ETHWrapper.js","NexusMutual/NexusMutual.js","CustomField/CustomField.js","CustomList/CustomList.js","PortfolioDonut/PortfolioDonut.js","TotalEarningsCounter/TotalEarningsCounter.js","EarningsEstimation/EarningsEstimation.js","DashboardIconButton/DashboardIconButton.js","TotalBalanceCounter/TotalBalanceCounter.js","StrategyPage/StrategyPage.js","BatchDeposit/BatchDeposit.js","CoverProtocol/CoverProtocol.js","TokenMigration/TokenMigration.js","BatchMigration/BatchMigration.js","configs/globalConfigs.js","utilities/IdleGovToken.js","utilities/FunctionsUtil.js","DashboardCard/DashboardCard.js","Tos/Tos.js","theme-dark.js","App/connectors/TorusConnector.js","App/connectors/AuthereumConnector.js","App/connectors/WalletLinkConnector.js","App/connectors/WalletConnectConnector.js","App/connectors.js","utilities/components/WrongNetworkBanner.js","utilities/NetworkUtil.js","utilities/components/NoWeb3BrowserModal.js","utilities/components/NoWalletModal.js","utilities/GeneralUtil.js","utilities/components/WrongNetworkModal.js","utilities/components/TransactionFeeModal.js","Web3ConnectionButtons/Web3ConnectionButtons.js","utilities/components/ConnectionModal.js","utilities/components/ConnectionPendingModal.js","utilities/components/UserRejectedConnectionModal.js","utilities/components/LowFundsModal.js","utilities/ConnectionModalsUtil.js","utilities/components/ConnectionErrorModal.js","utilities/components/TransactionErrorModal.js","utilities/RimbleWeb3.js","utilities/components/Header.js","ScrollToTop/ScrollToTop.js","PageNotFound/PageNotFound.js","utilities/components/NetworkOverview.js","Web3Debugger/Web3Debugger.js","abis/compound/cDAI.js","abis/tokens/ERC20.js","configs/availableTokens.js","utilities/TransactionToastMessages.js","utilities/TransactionToastUtil.js","App/App.js","serviceWorker.js","index.js","TableRow/TableRow.js","TableHeader/TableHeader.js","Migrate/Migrate.js","AssetsList/AssetsList.js","Footer/Footer.module.scss","colors.js","VariationNumber/VariationNumber.js","GenericSelector/GenericSelector.module.scss","LoadingSpinner/LoadingSpinner.module.scss","utilities/components/BuyModal.js","utilities/components/ModalCard.js","Footer/Footer.js","TableCellHeader/TableCellHeader.js","CardIconButton/CardIconButton.js"],"names":["AssetField","state","ready","functionsUtil","componentUnmounted","loadField","_callee","fieldName","isRisk","setState","fieldInfo","fieldProps","decimals","addGovTokens","output","govTokens","getGovTokensDistributionSpeed","tokenPrice","_ref2","oldContractBalanceFormatted","_ref3","redeemableBalanceCurveEnd","redeemableBalanceCurveStart","_ref4","redeemableBalanceEnd","redeemableBalanceStart","_ref5","_ref6","earningsCounter","feePercentage","feesStart","feesEnd","_ref7","_ref8","curveApy","earningsCurveStart","amountLentCurve","earningsCurveEnd","_ref9","_ref10","tokenAPY2","earningsStart","amountLent2","earningsEnd","tokenScore","tokenAPR","oldTokenConfig","tokenAPY","govTokensAprs","allocationChartWidth","allocationChartHeight","resizeAllocationChart","aprChartEndTimestamp","aprChartStartTimestamp","aprChartData","cachedDataKey","cachedData","startTimestamp","y","i","mDate","x","frequencySeconds","newPoint","aprChartWidth","aprChartHeight","resizeAprChart","aprChartType","aprChartProps","firstTokenPrice","firstIdleBlock","performanceChartWidth","performanceChartHeight","resizePerformanceChart","apr_end_date","apr_start_date","apr_start_timestamp","apiResultsPerformanceChart","idleTokenPerformance","performanceChartData","performanceChartType","performanceChartProps","path","_args","arguments","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","wrap","_context","prev","next","length","undefined","_this","props","token","tokenConfig","abrupt","selectedStrategy","name","isMobile","t0","loadAssetField","account","sent","setStateSafe","tokenBalance","toString","getTokenGovTokens","showPrice","fee","checkMigration","amountToMigrate","amountLent","idleTokenBalance","earnings","Promise","all","getTokenFees","Object","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","times","getCurveAPY","gt","div","plus","redeemableBalance","getTokenScore","score","poolSize","earningsPercCurveDirection","parseFloat","earningsPercCurve","toFixed","earningsPerc","earningsPercDirection","showAPR","migration","oldContract","assign","idle","protocols","values","oldProtocols","forEach","oldProtocol","foundProtocol","find","p","protocolPos","indexOf","isNaN","oldAPY","tokenAPYNoGov","curveAvgSlippage","showTooltip","getGovTokensAprs","t1","allocationChartRowElement","document","getElementById","parentId","rowId","$allocationChartRowElement","window","jQuery","innerWidth","css","innerHeight","parseInt","Math","min","removeEventListener","bind","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_9__","addEventListener","getGlobalConfig","max","strToMoment","Date","format","subtract","_d","getTime","concat","address","getCachedData","id","color","join","data","add","random","push","getFrequencySeconds","getTokenApiData","d","timestamp","fixTokenDecimals","idleRate","setCachedData","aprChartRowElement","$aprChartRowElement","Line","pointSize","lineWidth","useMesh","axisLeft","animate","axisBottom","enableArea","areaOpacity","curve","enableGridX","enableGridY","pointBorderWidth","isInteractive","colors","defs","linearGradientDef","offset","enableSlices","yFormat","value","fill","match","margin","top","right","bottom","left","sliceTooltip","slideData","slice","point","points","react__WEBPACK_IMPORTED_MODULE_12___default","createElement","_CustomTooltip_CustomTooltip__WEBPACK_IMPORTED_MODULE_17__","map","protocolName","serieId","protocolEarning","yFormatted","_CustomTooltip_CustomTooltipRow__WEBPACK_IMPORTED_MODULE_20__","key","label","chartProps","keys","PerformanceChartRowElement","$PerformanceChartRowElement","clone","idlePrice","minus","blocknumber","pointLabelYOffset","getArrayPath","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","stop","this","setProps","FunctionsUtil","loadUtils","newState","callback","prevProps","prevState","tokenChanged","accountChanged","mobileChanged","themeModeChanged","themeMode","fieldChanged","contractInitialized","contractsInitialized","transactionsChanged","transactions","filter","tx","status","_this2","oldState","_this3","loader","showLoader","rimble_ui__WEBPACK_IMPORTED_MODULE_21__","size","fontWeight","fontSize","flexProps","justifyContent","funcProps","maxPrecision","minPrecision","icon1","icon","placement","message","tooltipProps","src","icon2","strategyIcon","strategy","strategyName","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_14__","number","react_countup__WEBPACK_IMPORTED_MODULE_11___default","delay","decimal","separator","useEasing","duration","end","start","formattingFn","n","abbreviateNumber","_ref11","countUpRef","style","ref","_ref12","_ref13","_ref14","_ref15","width","alignItems","flexDirection","govTokenConfig","govTokenIndex","distributionFrequency","borderRadius","position","height","ml","zIndex","boxShadow","showDirection","_VariationNumber_VariationNumber__WEBPACK_IMPORTED_MODULE_18__","direction","earningsCurve","governanceTokenName","idleTokenConfig","idleDistribution","userDistributionSpeed","distributionSpeed","iconProps","govToken","tooltipMode","buttonLabel","onClick","handleClick","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_16__","type","_AllocationChart_AllocationChart__WEBPACK_IMPORTED_MODULE_19__","loaderProps","loaderText","selectedToken","inline","CustomComponent","customValue","BNify","SmartNumber","Icon","customFieldName","pop","customFieldProps","Text","formattedValue","_isBigNumber","Component","formattedNumber","formatMoney","precision","showUnit","unitPos","react__WEBPACK_IMPORTED_MODULE_8___default","rimble_ui__WEBPACK_IMPORTED_MODULE_7__","unit","unitProps","ChartCustomTooltipRow","react__WEBPACK_IMPORTED_MODULE_7___default","rimble_ui__WEBPACK_IMPORTED_MODULE_8__","mb","pr","flexBasis","flex","mr","backgroundColor","textAlign","textTransform","whiteSpace","dangerouslySetInnerHTML","__html","module","exports","headerContainer","headerBgFiller","bgContainer","list","textContainer","ShortHash","shortenHash","hash","shortHash","txStart","substr","txEnd","react__WEBPACK_IMPORTED_MODULE_5___default","rimble_ui__WEBPACK_IMPORTED_MODULE_6__","display","React","LoadingSpinner","react_default","index_es","className","styles","mx","ButtonLoader","buttonProps","isLoading","src_LoadingSpinner_LoadingSpinner","buttonText","IconBox","cardProps","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_7__","text","mt","textProps","children","TransactionListFilters","maxWidth","minWidth","maxHeight","isOpened","activeFilters","assets","actions","setFilter","objectSpread","defineProperty","applyFilters","toggle","toggleOpened","resetFilter","resetFilters","DashboardCard","py","px","transition","cursor","overflow","borderTop","theme","divider","filters","filterCategory","filterValues","TableCellHeader","pb","toUpperCase","filterValue","filterLabel","isChecked","my","checked","radioBtn","onChange","e","mainColor","v","filterName","hoverColor","TransactionsList","page","prevTxs","txsPerPage","loading","totalTxs","totalPages","deposit","redeem","send","receive","migrate","swap","swapout","withdraw","completed","pending","failed","renderedTxs","processedTxs","lastBlockNumber","processTxs","availableActions","action","toLowerCase","txsIndexes","includes","sort","b","timeStamp","ceil","availableTokens","date","getTxAction","parsedValue","tokenAmount","amount","momentDate","preventDefault","loadTxs","JSON","stringify","enabledTokens","count","firstBlockNumber","enabledActions","getEtherscanTxs","etherscanTxs","hashKey","lastTx","blockNumber","_this4","hasActiveFilters","m","FlexLoader","minHeight","pt","src_TransactionListFilters_TransactionListFilters","TableHeader","cols","index","txHash","txHashKey","TableRow","rowProps","transaction","open","cardId","fieldComponent","TransactionField","prevPage","nextPage","h3","fontFamily","CustomTooltip","react__WEBPACK_IMPORTED_MODULE_6___default","itemPos","rimble_ui__WEBPACK_IMPORTED_MODULE_5__","xFormatted","AllocationChart","chartData","selectedSlice","totalAllocation","protocolsAllocations","protocolsAllocationsPerc","loadData","getTokenAllocation","padAngle","borderWidth","cornerRadius","motionDamping","innerRadius","motionStiffness","onMouseEnter","onMouseLeave","tooltipFormat","sliceLabel","radialLabel","tooltip","container","background","cardBg","labels","fonts","sansSerif","legends","slicesLabelsSkipAngle","radialLabelsSkipAngle","enableRadialLabels","radialLabelsTextXOffset","slicesLabelsTextColor","radialLabelsTextColor","radialLabelsLinkStrokeWidth","radialLabelsLinkDiagonalLength","radialLabelsLinkHorizontalLength","enableSlicesLabels","radialLabelsLinkColor","from","borderColor","modifiers","protocolInfo","protocolAddr","protocolAllocationPercParsed","globalConfigs","stats","hsl","capitalize","protocolIcon","rimble_ui__WEBPACK_IMPORTED_MODULE_9__","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_10__","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_13__","Pie","CustomTooltipRow","ImageButton","image","imageSrc","imageProps","iconName","caption","isActive","contrastColor","buttonStyle","Fragment","badge","bgColor","captionPos","subcaption","split","lineHeight","PortfolioEquity","startDate","chartwidth","chartHeight","loadChartData","quickDateSelectionChanged","quickDateSelection","componentDidMount","tokensBalance","firstTxTimestamp","asyncForEach","_ref","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","mark","_callee3","filteredTxs","_context3","lt","balance","idleTokens","_x3","apply","currentDate","days","prevBalances","prevTimestamp","minChartValue","maxChartValue","aggregatedBalance","aggregatedBalancesKeys","tokensBalancesPerDate","currTimestamp","tokensData","_callee4","_context4","_x4","foundBalances","tokensBalances","lastTokenData","lastTokenDataUnfiltered","filteredTokenData","tokenDecimals","filteredBalances","lastFilteredTx","newBalance","lastTxBalance","tokenUsdConversionRate","conversionRateField","chartToken","conversionRate","isSameOrAfter","isSameOrBefore","formattedDate","_loop","aggregatedBalances","balances","itemIndex","item","floor","yFormatDecimals","gridYStep","gridYValues","gridYValue","daysCount","daysFrequency","xScale","yScale","stacked","xFormat","legend","tickSize","tickPadding","orient","legendOffset","legendPosition","tickValues","tickRotation","pointLabel","areaBaselineValue","pointColor","axis","ticks","grid","line","stroke","lineChartStroke","strokeDasharray","_ChartCustomTooltip_ChartCustomTooltip__WEBPACK_IMPORTED_MODULE_11__","_ChartCustomTooltipRow_ChartCustomTooltipRow__WEBPACK_IMPORTED_MODULE_12__","formattedBalance","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_10__","parentIdHeight","ChartCustomTooltip","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_9__","RoundButton","ExtLink","target","rel","_colors__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","polished__WEBPACK_IMPORTED_MODULE_1__","__webpack_exports__","breakpoints","fontSizes","fontWeights","letterSpacings","lineHeights","solid","title","copy","serif","counter","space","radii","minWidths","maxWidths","heights","minHeights","maxHeights","borders","borderWidths","shadows","opacity","disabled","primary","blue","base","gradient-bg","primary-light","light","primary-dark","dark","bgBlue","dark-blue","skyBlue","lightBlue","copyColor","subColor","black","baseColors","near-black","dark-gray","mid-gray","gray","grey","silver","light-silver","moon-gray","light-gray","near-white","white","transparent","arrowActive","arrowInactive","selectBgFocused","selectBg","backButtonBg","wrongNetworkBannerBg","dashboardBg","statValue","boxBorder","cellTitle","cellText","menuBg","menuHover","flashColor","menuRightBorder","cardHoverShadow","cardBgHover","cardBorder","boost","curvein","default","curveout","curvedepositin","curvedepositout","actionBg","blacks","whites","zIndices","messageStyle","shade","tint","success","green","warning","yellow","danger","red","info","buttons","--main-color","--contrast-color","normal","buttonSizes","small","padding","medium","large","bg","button","gradientButton","empty","select","selectDark","input","TxProgressBar","error","ended","percentage","processing","txTimestamp","initialized","estimatedTime","remainingTime","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default","initProgressBar","getTransaction","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__","_callee2","resolve","reject","_context2","customLog","web3","eth","err","_x","_x2","getBlockTime","blockTime","axios","get","getPredictionTable","_callee5","predictTable","_context5","getTxEstimatedTime","gasPrice","prediction","gasprice","pdValues","_estimateWait","gas","txMeanSecs","block_time","calculateRemainingTime","_callee6","secondsPassed","timePassed","_context6","setTimeout","updateProgressBar","getTxInfo","_callee7","txProgressBarKey","txProgressBarData","_context7","localStorage","getItem","parse","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","setLocalStorage","_callee8","_context8","clearTimeout","gasoffered","minedProb","expectedWait","sum1","sum2","prob","exp","minutes","seconds","react__WEBPACK_IMPORTED_MODULE_10___default","rimble_ui__WEBPACK_IMPORTED_MODULE_13__","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_11__","textColor","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","endMessage","waitText","span","renderRemainingTime","loadingMessage","sendingMessage","href","cancelTransaction","cancelTextColor","cancelTextHoverColor","AssetSelector","options","defaultValue","CustomOptionValue","CustomValueContainer","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_9__","showCustomField","showBalance","selectProps","innerProps","loadComponents","selectedTokenChanged","_GenericSelector_GenericSelector__WEBPACK_IMPORTED_MODULE_11__","isSearchable","changeToken","hashChanged","textOverflow","rimble_ui__WEBPACK_IMPORTED_MODULE_11__","align","_utilities_components_ShortHash__WEBPACK_IMPORTED_MODULE_12__","border","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_9__","tokenSymbol","GenericSelector","optionsChanged","defaultValueChanged","componentsChanged","ControlComponent","menuIsOpen","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_12__","CustomIndicatorSeparator","CustomMenu","CustomInputContainer","searchInput","searchInputHidden","CustomOption","selectedValue","o","genericSelector","isFocused","react_select__WEBPACK_IMPORTED_MODULE_7__","components","Menu","Option","Control","Input","SingleValue","IndicatorSeparator","Title","HeadingComponent","component","Heading","h1","GenericChart","handleWindowSizeChange","chartContainer","chartWidth","offsetWidth","chartContainerH","ChartType","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_7__","defaultOpacity","hidden","interactive","rainbow","FastBalanceSelector","onMouseDown","replaceArrayProps","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_10__","TokenSwap","selectedFromToken","selectedDestToken","availableDestinationTokens","selectFromToken","baseToken","regenerator_default","selectDestToken","getGlobalConfigs","paymentProvider","providerInfo","initProps","buttonId","initParams","getInitParams","render","sendGoogleAnalyticsEvent","eventCategory","eventAction","eventLabel","enabled","remoteResources","url","j","scriptID","script","remoteResourceParams","precall","readyState","onreadystatechange","onload","async","parentElement","appendChild","head","stylesheetId","loadTokens","toolProps","asyncToGenerator","getContractByName","abi","initContract","fromTokenChanged","destTokenChanged","loadKyberWidget","SendTxWithBalance","inputValue","txSucceeded","buttonDisabled","contractApproved","fastBalanceSelector","changeInputValue","setInputValue","selectedPercentage","getFastBalanceSelector","setFastBalanceSelector","checkButtonDisabled","lte","approve","callbackApprove","callbackReceiptApprove","checkContractApproved","eventData","getTransactionError","transactionHash","enableERC20","contractInfo","executeTx","_amount","params","callbackReceipt","methodName","methodParams","contractName","normalizeTokenAmount","getTransactionParams","eventValue","contractMethodSendWrapper","approveCallback","actionChanged","tokenBalanceChanged","contractChanged","tokenConfigChanged","changeInputCallback","approveEnabled","checkTokenApproved","infoBox","steps","step","stepIndex","link","description","balanceSelectorInfo","required","placeholder","approveDescription","ETHWrapper","balanceETH","balanceWETH","loadBalance","updateActionData","contract","getETHBalance","getTokenBalance","mintLog","txReceipt","logs","log","mintedAmount","withdrawLog","withdrawnAmount","fullWidth","depositOnly","CardIconButton","iconColor","iconBgColor","setAction","src_SendTxWithBalance_SendTxWithBalance","transactionSucceeded","connectAndValidateAccount","NexusMutual","1","2","3","amountValue","periodValue","quoteResponse","changeAmount","changePeriod","makeRequest","textDecoration","activeColor","changeSelectedToken","getQuote","CustomField","componentHasChildren","fieldType","fieldPath","row","Image","Button","CustomList","rows","rowIndex","PortfolioDonut","totalFunds","parentWidth","selectedTokenConfig","loadPortfolio","portfolio","getIdleTokenPrice","convertTokenBalance","getGovTokensUserBalances","govTokensUserBalances","govTokenBalance","tokenPercentage","tokenColorHsl","round","radialLabelsLinkOffset","itemWidth","itemHeight","translateY","symbolSize","anchor","itemTextColor","symbolShape","effects","on","convertToken","TotalEarningsCounter","loadTotalEarnings","availableStrategies","counterStyle","getAccountPortfolio","totalEarnings","totalAmountLent","avgAPY","build_default","EarningsEstimation","tokensEarnings","estimationStepsPerc","estimationStepsOptions","estimationStepsDefaultOption","estimationSteps","0","Month","perc","2 months","3 months","optionName","25","8 months","Year","90","2 Years","5 Years","loadEarnings","aggregatedEarnings","earningsYear","amountDeposited","avgBuyPrice","idleTokenPrice","tokenAprs","earningsPercStep","possibleSteps","maxPossibleStep","getAmountDeposited","getAvgBuyPrice","slicedToArray","getTokenAprs","avgApr","avgApy","orderedTokensEarnings","estimationStep","option","setEstimationStepsPerc","tokenIndex","tokenEarnings","estimationStepPerc","finalEarnings","cursorPerc","tokenRGBColor","estimateIndex","estimationStepEarnings","estimationStepEarningsFormatted","borderRight","wordBreak","gte","pl","src_TotalEarningsCounter_TotalEarningsCounter","estimationLabel","DashboardIconButton","TotalBalanceCounter","counterEnd","counterStart","StrategyPage","tokensToMigrate","aggregatedValues","activeCoverages","depositedTokens","remainingTokens","batchedDeposits","portfolioLoaded","availableGovTokens","portfolioEquityStartDate","batchedDepositsAvailableTokens","portfolioEquityQuickSelection","getActiveCoverages","getBatchedDeposits","getTokensToMigrate","c","statusColors","statusIcon","statusColor","portfolioCoverage","totalBalance","statusIconProps","reduce","batchInfo","deposited","batchDeposits","redeemable","batchRedeems","avgScore","amountLentToken","tokenWeight","getGovTokensUserTotalBalance","govTokensTotalBalance","govTokensUserBalance","govTokensTotalBalanceTooltip","viewOnly","connectorName","apyLong","riskScore","yieldFarming","batchDepositConfig","coverProtocolConfig","src_TotalBalanceCounter_TotalBalanceCounter","totalEarningsPerc","titleProps","src_PortfolioDonut_PortfolioDonut","aligItems","setPortfolioEquityQuickSelection","AssetsList","fields","mobile","parentProps","goToSection","route","borderBottom","h4","desc","toolName","toolIndex","toolConfig","src_DashboardIconButton_DashboardIconButton","src_CustomList_CustomList","fileClaimUrl","openWindow","src_EarningsEstimation_EarningsEstimation","textSize","BatchDeposit","canClaim","batchTotals","canDeposit","execute","claim","usePermit","lastExecution","permitEnabled","hasDeposited","permitSigned","showPermitBox","currBatchIndex","batchCompleted","claimSucceeded","componentLoaded","executeSucceeded","migrationEnabled","migrationSucceeded","batchDepositEnabled","migrationContractApproved","migrationEnabledCallback","migrationCallback","checkBatchs","loadStrategies","urlParams","param2","selectToken","executeSucceededChanged","contractApprovedChanged","callbackExecute","callbackReceiptExecute","migrationContract","migrationContractInfo","getBatchedDepositExecutions","genericContractCall","batchExecutions","functions","functionInfo","nonceMethod","permitContract","methods","batchIndex","batchTotal","batchRedeem","batchDeposit","batchDepositInfo","depositEnabled","availableStrategiesKeys","strategyConfig","selectStrategy","_this5","obj","baseTokenConfig","strategyAvailableTokens","migrateFunction","setStrategyToken","_this6","batchId","callbackClaim","_this7","callbackReceiptClaim","_this8","canExecuteBatch","strategyDefaultValue","s","openTooltipModal","isDisabled","togglePermitEnabled","Migrate","showActions","getTokenPrice","isMigrationTool","showBalanceSelector","migrationIcon","migrationParams","toMigrate","callbackPermit","migrationText","minPoolSize","utc","CoverProtocol","swapInfo","selectedAction","successMessage","defaultCoverage","selectedCoverage","collateral","selectedActionChanged","inputValueChanged","swapInfoChanged","updateData","swapFee","covTokens","tokenAmountOut","getSwapInfo","MAX_UINT256","pow","expirationTimestamp","integerValue","balancerTokenConfig","tokens","dashboardUrl","fixedAmount","mintedClaimLog","mintedNoClaimLog","mintedClaimAmount","mintedNoClaimAmount","claimTokenConfig","claimTokensLog","receivedClaimAmount","balancerPool","noClaimTokenConfig","noClaimTokensLog","receivedNoClaimAmount","apy","collateralAmount","balancerClaimConfig","balancerNoClaimConfig","claimTokenBalance","noClaimTokenBalance","balancerPoolClaimBalance","balancerPoolNoClaimBalance","hasMintedTokens","isClaim","now","apyPrice","currTime","coverages","expirationDate","selectCoverage","coverage","isMint","isBuyClaim","isBuyNoClaim","txAction","BuyModal","showInline","availableMethods","buyToken","TokenMigration","changeFromToken","convertTool","tokenInfo","destTokenConfig","BatchMigration","batchMigrationInfo","batchMigrationDepositEnabled","env","process","appName","version","baseURL","forumURL","darkModeEnabled","betaURL","countries","USA","GBR","AUS","BRA","CHN","CAN","EUR","HKG","IND","MEX","RUS","ZAF","KOR","errorsEnabled","messagesEnabled","connectors","metamask","opera","dapper","coinbase","trustwallet","walletconnect","iconModal","walletlink","fortmatic","portis","authereum","torus","trezor","ledger","custom","newsletterSubscription","endpoint","messages","scoreShort","apyShort","cheapRedeem","curveBonusSlippage","directMint","performanceFee","govTokenApr","govTokenRedeemableBalance","riskScoreShort","batchDepositExecutionSchedule","curveInstructions","analytics","google","events","debugEnabled","addPostfixForTestnet","modals","first_deposit_referral","first_deposit_share","welcome","frequency","dashboard","baseRoute","mode","governance","test","startBlock","tokenName","availableContracts","IDLE","FeeTreasury","PriceOracle","GovernorAlpha","EcosystemFund","IdleController","contracts","delegates","n_coins","imageInactive","rates","poolContract","CurvePool","depositContract","CurveDeposit","gaugeContract","LiquidityGaugeV2","zapContract","CurveZap","idleDAIYield","coinIndex","idleUSDCYield","idleUSDTYield","permit","DAI","EIPVersion","USDC","showAUM","protocol","disabledTokens","aprTooltipMode","COMP","LockedIDLE","Timelock","VesterFactory","EarlyRewards","Comptroller","UniswapRouter","UniswapV2Router02","BalancerExchangeProxy","zeroExInstant","orderSource","assetData","affiliateInfo","feeRecipient","strategies","best","comingSoon","titlePostfix","govTokensEnabled","chartColor","iconInactive","iconInactiveDark","descLong","descShort","risk","new","TTL","tvls","substack","scores","config","headers","REACT_APP_IDLE_KEY","Authorization","versions","v3","additionalProtocols","endTimestamp","showPerformanceTooltip","strategiesParams","enabledStrategies","v4","rgb","hex","chart","labelTextColorModifiers","performanceTooltip","USD","USDT","TUSD","SUSD","WBTC","WETH","idleDAI+idleUSDC+idleUSDT","compound","compoundWithCOMP","rateField","fulcrum","dsr","dydx","iearn","aave","aavev2","skipRebalance","metaTransactionsEnabled","skipMint","minAmountForMint","skipMintCheckboxEnabled","proxyContract","IdleProxyMinter","function","minAmountForRebalance","minAmountForRebalanceMetaTx","redeemGovTokens","rebalance","IdleRebalancerV3","network","availableNetworks","4","42","1337","isForked","requiredNetwork","blocksPerYear","requiredConfirmations","accountBalanceMinimum","providers","infura","etherscan","endpoints","snapshot","whitelist","proposals","urls","biconomy","enableLogin","supportedNetworks","disabledWallets","limits","debug","apiKey","REACT_APP_BICONOMY_KEY","dappId","REACT_APP_BICONOMY_APPID","apiId","terminal","REACT_APP_TERMINAL_KEY","projectId","REACT_APP_TERMINAL_PROJECT_ID","source","web3Version","Web3Versions","one","simpleID","getNetwork","networkId","networkName","appOrigin","location","origin","appId","renderNotifications","notifications","tools","ethWrapper","subComponent","coverProtocol","CoverMint","Claim","CovToken","BalancerPool","NoClaim","claimEnabled","IdleBatchedMint","permitName","batchMigration","IdleTokenV3","IdleBatchConverter","idleSUSDYield","idleTUSDYield","idleWBTCYield","idleDAISafe","idleUSDCSafe","idleUSDTSafe","tokenMigration","IdleConverterPersonalSignV4","oldAddresses","idleDAIv2","IdleTokenV2","cDAI","iDAI","aDAI","yDAIv3","yDAIv2","idleUSDCv2","cUSDC","iUSDC","aUSDC","yUSDCv3","yUSDCv2","cUSDT","iUSDT","aUSDT","yUSDTv3","yUSDTv2","idleSUSDv2","aSUSD","ySUSDv3","idleTUSDv2","aTUSD","yTUSDv3","cWBTC","iWBTC","aWBTC","addFunds","directProps","showAllTokens","insurance","ETH","ens","tokenSwap","USDS","BUSD","EURS","2KEY","ABT","ABYSS","AMPL","ANT","BAM","BAND","BAT","BLZ","BNT","BQX","BTU","CDT","CVC","DAT","DGX","EKG","ELF","ENJ","EQUAD","FXC","GDC","GEN","GHT","GNO","IOST","KEY","KNC","LEND","LINK","LOOM","LRC","MANA","MCO","MET","MFG","MKR","MLN","MTL","MYB","NEXXO","NPXS","OGN","OMG","OST","PAX","PBTC","PLR","PNK","POLY","POWR","PT","QKC","QNT","RAE","REN","REP","REQ","RLC","RSR","RSV","SAN","SNT","SNX","SPIKE","SPN","TKN","TKX","TRYB","UBT","UPP","ZRX","payments","bank","defaultProvider","showDefaultOnly","card","wallet","wyre","supportedMethods","supportedCountries","supportedTokens","envParams","accountId","prod","getInfo","selectedMethod","buyParams","referrerAccountId","dest","destCurrency","redirectUrl","k","encodeURIComponent","iframeBox","innerHTML","body","wyreStyle","ramp","hostAppName","userAddress","hostApiKey","REACT_APP_RAMP_KEY","variant","hostLogoUrl","swapAsset","RampInstantSDK","event","getAccountBalance","getTokenDecimals","payload","purchase","toastProvider","addMessage","secondaryMessage","colorTheme","actionHref","actionText","show","transak","https://global.transak.com/v1/widget.js","REACT_APP_TRANSAK_KEY_TEST","REACT_APP_TRANSAK_KEY_PROD","selectedCountry","fiatCurrency","cryptoCurrencyCode","currencyCode","walletAddress","partnerCustomerId","disableWalletAddressForm","transakGlobal","transakStyle","moonpay","REACT_APP_MOONPAY_KEY_TEST","REACT_APP_MOONPAY_KEY_PROD","baseCurrencyCode","showWalletAddressForm","enabledPaymentMethods","navigator","userAgent","cookie","moonpayStyle","https://instant.0x.org/v3/instant.js","onSuccess","onClose","tokenParams","RimbleWeb3_context","chainId","provider","connector","ethereum","defaultSelectedAssetData","availableAssetDatas","shouldDisableAnalyticsTracking","defaultAssetBuyAmount","kyberSwap","web3Subscription","contractAddress","decodeLogsData","internalType","https://widget.kyber.network/v0.7.5/widget.css","https://widget.kyber.network/v0.7.5/widget.js","querySelectorAll","remove","scripts","lang","paramForwarding","pinnedTokens","defaultPair","commissionId","click","airSwap","https://cdn.airswap.io/airswap-instant-widget.js","onComplete","AirSwapInstant","totle","https://widget.totle.com/latest/dist.js","sourceAssetAddress","sourceAmountDecimal","destinationAssetAddress","destinationAmountDecimal","partnerContractAddress","TotleWidget","nodeId","totleWidgetContainer","run","IdleGovToken","classCallCheck","getBalance","claimRewards","getPriorVotes","priorVotes","_args3","refreshIdleSpeed","getUnclaimedTokens","getAPR","IDLETokenConfig","APR","tokenAllocation","DAITokenConfig","tokenPool","idleDistributedPerYearUSD","_args6","getDistribution","getUniswapConversionRate","totalAllocationWithUnlent","getSpeed","idleTokenAddress","idleSpeeds","getCachedDataWithLocalStorage","setCachedDataWithLocalStorage","_x5","distribution","_x6","getUserDistribution","_callee10","fixByFrequency","totalSpeed","_args10","_context10","_callee9","idleSpeed","userPoolShare","tokenSpeed","_context9","getUserPoolShare","_x7","fixDistributionSpeed","getAvgApr","_callee12","_args12","_context12","_ref16","_callee11","_ref17","_ref18","idleApr","_context11","_x8","ethereumjsABI","require","idleGovToken","trimEth","toBN","utils","BN","toEth","wei","fromWei","toWei","htmlDecode","childNodes","nodeValue","BNify_obj","BigNumber","String","_len","Array","_key","moment","customLogError","_console","_len2","_key2","console","normalizeSimpleIDNotification","replace","str","arr1","arr2","stripHtml","html","tmp","textContent","innerText","scrollTo","to","scrollY","change","currentTime","easeInOutQuad","t","animateScroll","val","depositProxyContractInfo","migrationContractAddr","migrationContractOldAddrs","batchMigrationContractAddr","isMigrationTx","isSendTransferTx","isReceiveTransferTx","isDepositTx","isRedeemTx","isSwapTx","orderedTokensBalance","totalBalanceConverted","tokenBalanceConverted","getCurveAvgSlippage","processedHashes","curveTokensBalance","curveTxs","avgSlippage","totalDeposited","_args4","getCurveAvailableTokens","getCurveTxs","curveTokens","curveTokenPrice","price","received","slippage","getCurveAvgBuyPrice","_args5","prevAvgBuyPrice","idleTokensBalance","getFirstDepositTx","deposits","_args7","firstDepositTx","asyncTimeout","ms","getDepositTimestamp","firstDepositTxs","_args8","acc","userAvgPrice","getAmountLent","amountLents","getEtherscanBaseTxs","endBlockNumber","firstIdleBlockNumber","etherscanInfo","results","etherscanBaseTxs","etherscanBaseEndpoint","etherscanApiUrl","lastCachedTx","lastCachedBlockNumber","etherscanEndpointLastBlock","latestTxs","latestBlockNumbers","txs","requestCount","requestStatus","cachedRequests","_args11","REACT_APP_ETHERSCAN_KEY","getCachedRequest","result","makeCachedRequest","filterEtherscanTxs","toConsumableArray","saveEtherscanTxs","filterCurveTxs","txsToStore","cachedRequest","saveCachedRequest","_callee13","allAvailableTokens","_args13","_context13","processStoredTxs","_ref19","_callee14","_args14","_context14","_ref20","_callee15","curveTransfersTxs","curveTransfersTxsToDelete","curveZapContract","curvePoolContract","curveSwapContract","curveDepositContract","_args15","_context15","tokenMigrationToolParams","curveTokenConfig","idleToken","internalTxs","r","isRightToken","iTx","isBatchMigrationTx","isDepositInternalTx","iTx2","isRedeemInternalTx","isConversionTx","isWithdrawTx","curveTx","isCurveTx","isCurveDepositTx","isCurveRedeemTx","isCurveDepositIn","isCurveDepositOut","isCurveZapIn","isCurveZapOut","isCurveTransferOut","isCurveTransferIn","isSwapOutTx","tokenDecimal","tokenValue","newValue","iTxs","withdrawnValue","processEtherscanTransactions","addStoredTransaction","txKey","tokenKey","storedTxs","getStoredTransactions","updateStoredTransactions","getStoredItem","_ref21","_callee20","txReceipts","baseTokensConfigs","baseTokensAddresses","curveAvailableTokens","_args20","_context20","baseTokenAddress","_ref22","_callee19","minedTxs","_context19","_ref23","_callee18","storedTx","tokensTransfered","_curveTokenPrice","_curveTokenPrice2","curveTxReceipt","filteredLogs","_curveTokenPrice3","_curveTxReceipt","idleTokenDecimals","_filteredLogs","_context18","getCurveTokenPrice","_ref24","_callee16","_context16","getTransactionReceipt","_x11","_x12","topics","baseTokensConfig","t2","_ref25","_callee17","_context17","_x13","_x14","_x9","_x10","_ref26","_callee26","txsToProcess","_args26","_context26","_ref27","_callee25","_context25","_ref28","_callee24","isStoredTx","allowedMethods","pendingStatus","txPending","isMetaTx","methodIsAllowed","realTx","txValue","redeemedValueFixed","executeMetaTransactionReceipt","executeMetaTransactionContractAddr","executeMetaTransactionInternalTransfers","IdleProxyMinterInfo","internalTransfer","metaTxValue","metaTxValueFixed","migrationTxReceipt","migrationTxInternalTransfers","migrationInternalTransfer","decodedLogs","migrationValue","migrationValueFixed","_context24","mintIdleToken","redeemIdleToken","migrateFromToIdle","mintIdleTokensProxy","migrateFromAaveToIdle","migrateFromIearnToIdle","executeMetaTransaction","migrateFromFulcrumToIdle","migrateFromCompoundToIdle","method","created","_ref29","_callee21","_context21","_x19","_x20","_ref30","_callee22","_context22","_x21","_x22","raw","_ref31","_callee23","_context23","_x23","_x24","decodeLog","_token","_x17","_x18","_x16","_x15","alias","getCustomAddress","setCustomAddress","customAddress","_ref32","_callee27","error_callback","_args27","_context27","catch","_x25","_ref33","_callee28","return_data","_args28","_context28","_x26","code","errorCode","array","prop","shift","configs","checkUrlOrigin","checkUrlBeta","_ref34","_callee30","googleEventsInfo","originOk","currentNetwork","_args30","_context30","ga","_ref35","_callee29","_context29","hitCallback","hitCallbackFail","_x28","_x29","_x27","createContract","_ref36","_callee31","_context31","Contract","_x30","_x31","_x32","getWalletProvider","simpleIDPassUserInfo","userInfo","email","initSimpleID","passUserInfo","getEtherscanTransactionUrl","tx_address","getEtherscanAddressUrl","decimalCount","thousands","abs","negativeSign","Number","getSnapshotProposals","_callee34","activeOnly","validProposals","_args34","_context34","addr","msg","_ref38","_callee33","checkedStrategies","_context33","metadata","_ref39","_callee32","_context32","symbol","_x34","_x33","_ref40","_callee35","forceStartTimestamp","order","limit","filteredCachedData","_filteredData","apiInfo","filteredData","_args35","_context35","_x35","_ref41","_callee36","_context36","_x36","aprs","allocations","aprWeighted","allocation","apr","quantity","hour","day","week","getProtocolInfoByAddress","ROUND_FLOOR","normalizeTokenDecimals","normalizedTokenDecimals","exchangeRate","checkContractPaused","_callee37","contractPaused","_args37","_context37","parse_json","return_default","clearStoredData","excludeKeys","clear","storedKeysToRemove","storedKey","removeStoredItem","removeItem","setItem","checkRebalance","_ref43","_callee39","lastAllocationsPromises","protocolIndex","newAllocations","diff","_context39","lastAllocationsPromise","_ref44","_callee38","lastAllocations","_context38","_x38","_x39","alloc","_x37","_ref45","_callee40","oldContractBalance","oldContractTokenDecimals","oldContractName","_context40","getContractBalance","_x40","_x41","_ref46","_callee41","signedParameters","callback_receipt","_contract$methods","_context41","getGasPrice","once","confirmationNumber","receipt","_x42","_x43","_x44","_x45","_x46","getSignatureParameters_v4","signature","isHexStrict","Error","hexToNumber","constructMetaTransactionMessage","nonce","functionSignature","soliditySHA3","toBuffer","checkBiconomyLimits","_ref47","_callee42","biconomyInfo","res","_context42","x-api-key","_x47","sendTxWithPermit","_ref48","_callee43","_contract$methods2","messageToSign","_this$getSignaturePar","_context43","encodeABI","_address","personal","sign","_x48","_x49","_x50","_x51","_x52","_x53","sendBiconomyTxWithPersonalSign","_ref49","_callee44","_this$getSignaturePar2","_context44","getNonce","call","_x54","_x55","_x56","_x57","signPermitEIP2612","_ref50","_callee45","erc20Name","owner","spender","deadline","domain","domainData","_context45","getChainId","verifyingContract","types","EIP712Domain","Permit","primaryType","currentProvider","jsonrpc","substring","_x58","_x59","_x60","_x61","_x62","_x63","_x64","_x65","signPermit","_ref51","_callee46","baseContractName","holder","spenderContractName","expiry","callback_permit","baseContract","spenderContract","permitConfig","_args46","_context46","net","getId","allowed","response","permitParams","methodAbi","_jsonInterface","f","useNonce","inputs","unshift","_x66","_x67","_x68","_x69","_x70","_x71","_x72","_x73","_x74","sendSignedTx","_ref52","_callee47","MetaTransaction","dataToSign","_context47","_x75","_x76","_x77","_x78","_x79","_ref53","_callee48","contractAddr","walletAddr","_ref54","_ref55","allowance","_context48","getAllowance","_x80","_x81","_x82","_ref56","_callee49","_context49","_x83","_x84","_x85","txData","disableERC20","toTwosComplement","_ref57","_callee50","field","addCurveApy","strategyInfo","govTokenAvailableTokens","newTokenConfig","_ref58","_ref59","curveAvgBuyPrice","curveTokenBalance","_ref60","_ref61","amountLentCurve1","redeemableBalanceCurve","_ref62","_ref63","earningPerYear","_ref64","_ref65","amountLent1","redeemableBalance1","depositTimestamp","_idleGovToken","blocksPerDay","blocksPerWeek","blocksPerMonth","_idleGovToken2","_idleGovToken3","tokenApys","curveAPY","_ref66","_ref67","tokenPriceFirstDeposit","_ref68","_ref69","daysFirstDeposit","depositTimestamps","_govTokenConfig","_ref70","_ref71","tokenAPY1","_earningPerYear","_govTokenConfig2","_ref72","_ref73","idleTokenPrice1","idleTokenBalance2","govTokensBalance","_tokenBalance","_ref74","_ref75","amountLentCurve2","redeemableBalanceCurve1","_ref76","_ref77","redeemableBalance2","_args50","_context50","getCurveTokenBalance","getCurveRedeemableIdleTokens","getGovTokenPool","getTokenPool","getCompUserDistribution","getIdleGovToken","t3","getCompDistribution","t4","getCompAvgApr","t5","t6","t7","getUserTokenFees","t8","t9","getGovTokenUserBalance","_x86","_x87","_x88","_x89","getIdleTokenSupply","_ref78","_callee51","idleTokenSupply","_args51","_context51","_x90","getIdleTokenPriceWithFee","_ref79","_callee52","_ref80","_ref81","priceWFee","_args52","_context52","eq","_x91","_x92","_ref82","_callee53","tokenData","beforePrice","afterPrice","tokenPriceBefore","tokenPriceAfter","timeBefore","timeAfter","timeDiff","priceDiff","priceAcceleration","timeDiffFromBeforePrice","_args53","_context53","_x93","clearCachedData","useLocalStorage","_ref83","_callee54","_ref84","_ref85","idleTokensTotalSupply","userShare","_context54","_x94","_x95","_callee56","_args56","_context56","_ref87","_callee55","coverageTokens","protocolImage","_context55","_x96","_ref88","_callee57","etherscanEndpoint","_context57","_x97","_callee59","filter_by_status","_args59","_context59","_ref90","_callee58","_ref91","_ref92","_context58","_x98","_ref93","_callee60","fixDecimals","_args60","_context60","_x99","_ref94","_callee61","_ref95","_ref96","_args61","_context61","_x100","_x101","copyToClipboard","copyText","setSelectionRange","execCommand","loadScript","attr","isValidJSON","checkAddress","_ref97","_callee62","_args62","_context62","_x102","_x103","getProtocolBalance","_ref98","_callee63","_context63","_x104","_x105","getAprs","_ref99","_callee64","_context64","_x106","genericIdleCall","_ref100","_callee65","callParams","_args65","_context65","_x107","estimateGas","_ref101","_callee66","_contract$methods3","_args66","_context66","_x108","_x109","getTxDecodedLogs","_ref102","_callee68","logAddr","decodeLogs","internalTransfers","_context68","_ref103","_callee67","_context67","_x114","_x115","_x110","_x111","_x112","_x113","blocksToSeconds","blocks","blocksPerSeconds","getBlockNumber","_callee69","_context69","getContractPastEvents","_ref105","_callee70","_args70","_context70","getPastEvents","_x116","_x117","_ref106","_callee71","_contract$methods4","_args71","_context71","_x118","_x119","_ref107","_callee72","_args72","_context72","_x120","_x121","apr2apy","getUnlentBalance","_ref108","_callee73","unlentBalance","_context73","_x122","_ref109","_callee74","_args74","_context74","_x123","_ref110","_callee76","protocolsAprs","exchangeRates","protocolsBalances","govTokensBalances","_args76","_context76","totalAllocationConverted","totalAllocationWithUnlentConverted","_ref111","_callee75","_ref112","_ref113","protocolBalance","protocolAllocation","_context75","_x125","_x126","protocolAllocationPerc","getGovTokensBalances","total","getTokenConversionRate","_x124","getUniswapConversionRate_path","_ref114","_callee77","unires","_context77","_x127","_ref115","_callee78","tokenConfigFrom","tokenConfigDest","WETHAddr","_context78","_x128","_x129","getCurveDepositedTokens","_ref116","_callee79","idleTokensBalances","remainingCurveTokens","_args79","_context79","_x130","getCurveUnevenTokenAmounts","_ref117","_callee80","amounts","max_burn_amount","unevenAmounts","_context80","getCurveDepositContract","_x131","_x132","_callee81","curveRatesInfo","_context81","strategyTokens","getCurveAPYContract","_callee82","blocksForPrevTokenPrice","_ref120","_ref121","prevTokenPrice","blocksMultiplier","curveAPR","_context82","getCurveTokenSupply","_callee83","_context83","getCurvePoolContract","_callee84","_args84","_context84","_callee85","_args85","_context85","_ref125","_callee86","_ref126","_ref127","_context86","_x133","_callee87","depositContractInfo","_context87","getCurveZapContract","_callee88","zapContractInfo","_context88","_callee89","poolContractInfo","_context89","getCurveSwapContract","_callee90","_context90","getCurveIdleTokensAmounts","_callee92","max_slippage","curveTokenSupply","curveTokenShare","_args92","_context92","_ref133","_callee91","curveIdleTokens","_context91","_x134","getCurveTokensAmounts","_callee94","useCoinIndex","_args94","_context94","_ref135","_callee93","_ref136","_ref137","totalTokenSupply","_context93","_x135","getCurveAmounts","_ref138","_callee96","_args96","_context96","_ref139","_callee95","_context95","_x138","_x136","_x137","getCurveTokenAmount","_ref140","_callee97","_args97","_context97","_x139","getCurveSlippage","_ref141","_callee98","uneven_amounts","_ref142","_ref143","virtualPrice","Sv","_args98","_context98","_x140","_x141","getCompAPR","_ref144","_callee99","cTokenIdleSupply","compConversionRate","COMPTokenConfig","compAPR","compDistribution","compValue","_args99","_context99","_x142","_x143","getCompSpeed","_ref145","_callee100","cTokenAddress","compSpeed","_context100","_x144","_ref146","_callee101","annualize","cTokenInfo","compoundAllocationPerc","_ref147","_ref148","cTokenTotalSupply","compoundPoolShare","_args101","_context101","_x145","_callee103","_args103","_context103","_ref150","_callee102","_ref151","_ref152","_context102","_x146","_callee105","_args105","_context105","_ref154","_callee104","_ref155","_ref156","compApr","_context104","_x147","getTokensCsv","_callee108","csv","_context108","prototype","sum","pv","cv","avg","_ref158","_callee107","_context107","_ref159","_callee106","header","aprAvg","scoreAvg","lastRow","_context106","protocolsData","p1","p2","rate","idleScore","pInfo","pData","pRate","pScore","defiScore","additionalRate","avgRate","_x149","_x148","_callee110","_args110","_context110","_ref161","_callee109","compTokenBalance","_context109","_x150","speed","getGovTokensUserDistributionSpeed","_ref162","_callee112","govTokensUserDistribution","_args112","_context112","_ref163","_callee111","_context111","_x152","_x151","_ref164","_callee114","govTokensDistribution","_args114","_context114","_ref165","_callee113","govSpeed","_context113","_x154","_x153","_ref166","_callee116","_args116","_context116","_ref167","_callee115","_ref168","_ref169","compoundInfo","_context115","_x157","_x155","_x156","_callee118","_args118","_context118","_ref171","_callee117","tokenConversionRate","fromTokenConfig","_context117","_x158","getGovTokenConfigByAddress","_callee119","checkShowBalance","govTokensEarnings","_args119","_context119","govTokenAmount","_callee122","govTokenConfigForced","_args122","_context122","_ref174","_callee121","govTokensAmounts","_context121","_ref175","_callee120","govTokenAddress","_context120","_x160","_x161","_x159","_callee123","_args123","_context123","_callee124","_ref178","_ref179","gain","fees","_args124","_context124","_ref180","_callee125","_args125","_context125","_x162","getTotalTVL","_callee126","tokensTVL","_context126","getTokensTVL","totalTVL","tokenTVL","_callee130","_context130","_ref183","_callee129","_context129","_ref184","_callee128","oldTokenTVL","idleTokenName","_ref185","_ref186","totalSupply","_ref190","_ref191","oldTokenPrice","oldTotalSupply","_context128","_ref187","_callee127","_ref188","_ref189","govTokenConversionRate","govTokenBalanceConverted","_context127","_x165","_x164","_x163","getSubstackLatestFeed","_callee131","endpointInfo","idleSubstackFeed","latestFeed","_context131","items","getAggregatedStats","_callee132","totalAUM","_args132","_context132","getAggregatedStats_chain","_callee136","avgAPR","_args136","_context136","_ref195","_callee135","_context135","_ref196","_callee134","tokenAUM","oldTokenAllocation","oldTokenTotalAllocation","_context134","_ref197","_callee133","_ref198","_ref199","_context133","_x168","_x167","_x166","getTokenApy","_ref200","_callee137","_context137","_x169","_callee140","_args140","_context140","_ref202","_callee139","_context139","_ref203","_callee138","_ref204","_context138","_x171","_x170","getProtocolsTokensBalances","_callee142","tokenBalances","minTokenBalance","protocolsTokens","_args142","_context142","_ref206","_callee141","tokenContract","_context141","_x172","_ref207","_callee143","_args143","_context143","_x173","_x174","_x175","getAvgAPYStats","_ref208","_callee144","apiResults","_args144","_context144","_x176","_x177","_ref209","_callee145","_conversionRate","_args145","_context145","_x178","_x179","_ref210","_callee146","_ref211","_ref212","_context146","protocolScore","getTokenScoreApi","_x180","_x181","_ref213","_callee147","_context147","_x182","_x183","_ref214","_callee149","Aprs","addresses","protocolsApys","idleGovTokenShowAPR","idleAPR","_args149","_context149","_ref215","_callee148","addrIndex","protocolApr","protocolApy","_context148","_x185","_x186","_x184","isNegative","suffixNum","decimalPart","mod","toPrecision","difference","maxLen","highlightedDecimals","numLen","intPart","decPart","repeat","highlightedDec","highlightedIntPart","mouseOver","isVisible","isRainbow","active","onMouseOut","setMouseOver","onMouseOver","titleParentProps","Tos","h2","listStyle","Footer","theme_dark","TorusConnector","kwargs","Torus","api","rest","objectWithoutProperties","possibleConstructorReturn","getPrototypeOf","buttonPosition","init","login","getUserInfo","getPublicAddress","verifier","verifierId","logout","updateNetworkId","Connector","AuthereumConnector","Authereum","getProvider","enable","getAccounts","accounts","disable","constructor","WalletLinkConnector","WalletLink","infuraUrl","appLogoUrl","walletLink","darkMode","makeWeb3Provider","close","WalletConnectConnector","WalletConnectProvider","infuraId","defaultNetwork","InjectedConnector","Connectors","NetworkOnlyConnector","TrezorConnector","LedgerConnector","FortmaticConnector","PortisConnector","manifestEmail","REACT_APP_TREZOR_MANIFEST_EMAIL","manifestAppUrl","REACT_APP_TREZOR_MANIFEST_URL","fortmaticApiKey","REACT_APP_FORTMATIC_KEY_MAINNET","portisDAppId","REACT_APP_PORTIS_DAPP_ID","portisNetwork","REACT_APP_PORTIS_NETWORK","supportedNetworkURLs","REACT_APP_INFURA_KEY","Injected","Infura","providerURL","Trezor","TrezorApi","Ledger","WalletConnect","bridge","Fortmatic","FortmaticApi","logoutOnDeactivation","Portis","PortisApi","dAppId","AuthereumApi","TorusApi","buildEnv","enableLogging","host","showTorusButton","WrongNetworkBanner","current","NetworkUtil","isCorrectNetwork","components_WrongNetworkBanner","NoWeb3BrowserModal","renderContent","RimbleUtil","isMobileDevice","bold","isOpen","ModalCard","closeFunc","closeModal","Body","NoWalletModal","icononly","Outline","GeneralUtil","hasMetaMask","isMetaMask","isTrustWallet","isTrust","isCoinbaseWallet","hasDapper","DapperEthereum","isDapper","isOpera","isAndroid","isIos","MSStream","WrongNetworkModal","RimbleUtils","TransactionFeeModal","Header","subtitle","subtitle2","Web3ConnectionButtons","context","useWeb3Context","setConnector","walletProvider","connectionCallback","unsetConnector","isMetamask","browserWalletDetected","allowedConnectors","registerPage","registerPageByDefault","basicConnectorsName","connectorInfo","walletIcon","flexWrap","ConnectionModal","validated","showTxFees","currentSection","showInstructions","askCustomAddress","closeRemainingTime","customAddressError","newToEthereumChoice","toggleShowTxFees","setStoredSection","componentDidUpdate","resetModal","closeCountdown","setWalletChoice","choice","setCurrentSection","connectCustomAddress","updateCustomAddress","renderModalContent","TOSacceptance","react_router_dom","newToEthereum","showConnectionButtons","pattern","assertThisInitialized","marginBottom","renderFooter","components_TransactionFeeModal","ConnectionPendingModal","UserRejectedConnectionModal","sendMessageAgain","initAccount","LowFundsModal","showSecondary","toggleQRVisible","alignContent","as","h5","ConnectionModalUtil","components_NoWeb3BrowserModal","closeNoWeb3BrowserModal","noWeb3BrowserModalIsOpen","components_NoWalletModal","closeNoWalletModal","noWalletModalIsOpen","components_WrongNetworkModal","closeWrongNetworkModal","wrongNetworkModalIsOpen","components_ConnectionModal","validateAccount","closeConnectionModal","connectionModalIsOpen","accountValidated","components_ConnectionPendingModal","closeConnectionPendingModal","accountConnectionPending","components_UserRejectedConnectionModal","closeUserRejectedConnectionModal","userRejectedConnect","components_LowFundsModal","closeLowFundsModal","lowFundsModalIsOpen","ConnectionErrorModal","setFirstValidConnector","closeConnectionErrorModal","isLedger","connectionError","TransactionErrorModal","closeTransactionErrorModal","isLedgerError","transactionError","isSlowTxError","INFURA_KEY","RimbleTransactionContext","createContext","web3Infura","accountBalance","initWeb3","accountBalanceLow","accountBalanceToken","checkPreflight","checkNetwork","accountInizialized","rejectValidation","accountValidationPending","initializeContracts","rejectAccountConnect","enableUnderlyingWithdraw","userRejectedValidation","transactionConnectionModalIsOpen","openLowFundsModal","openWrongNetworkModal","openNoWeb3BrowserModal","openConnectionErrorModal","openTransactionErrorModal","openConnectionPendingModal","openUserRejectedConnectionModal","openUserRejectedValidationModal","closeUserRejectedValidationModal","meta","setConnectorName","biconomyLoginProcessing","RimbleTransaction","testTransaction","createTransaction","addTransaction","updateTransaction","errorMessage","isWalletConnectClosedModalError","availableStrategiesChanged","metamaskProvider","connectorNameChanged","web3Host","web3Provider","forceCallback","terminalInfo","TerminalHttpProviderParams","terminalSourceType","terminalHttpProvider","web3Callback","originalWeb3","biconomyWeb3Provider","detectEthereumProvider","autoRefreshOnNetworkChange","Web3","HttpProvider","library","SourceType","customHttpProvider","TerminalHttpProvider","web3Injected","callbackAfterLogin","setCallbackAfterLogin","isLogin","userContract","Biconomy","onEvent","READY","ERROR","useInfuraProvider","simpleIDInfo","simpleIDParams","SimpleID","wallets","shownNotifications","isError","$crisp","notificationId","content","Sentry","increaseAmount","balanceOf","determineAccountLowBalance","openConnectionModal","getRequiredNetwork","getNetworkId","getNetworkName","getNetworkType","contractMethod","gasLimit","_this$state","manualConfirmationTimeoutId","confirmationCallback","manualConfirmation","receiptCallback","isDeniedTx","_args24","confirmationCount","call_callback","confidenceThreshold","recentEvent","timeout","lastUpdated","updatedTransaction","openNoWalletModal","CrispClient","accountBalanceDAI","subscribedTransactions","connectionErrorModalOpened","transactionErrorModalOpened","Provider","ConnectionModalsUtil","components_TransactionErrorModal","components_ConnectionErrorModal","utilities_NetworkUtil","Consumer","governanceEnabled","offsetTop","ScrollToTop","pathname","useLocation","useEffect","PageNotFound","Header_styles","NetworkOverview","getNetworkCircleColor","circleColor","networkCircle","DebuggerButtons","Web3Debugger","components_NetworkOverview","Web3Debugger_DebuggerButtons","node","constant","outputs","payable","stateMutability","anonymous","indexed","ERC20","govTokensDisabled","defiPrime","IdleTokenV4","cToken","yToken","iToken","aToken","CHAI","skipMintForDeposit","TransactionToastMessages","started","confirmed","TransactionToastUtil","collectionHasNewObject","prevCollection","currentCollection","getNewObjectFromCollection","objectKey","getUpdatedObjectFromCollection","object","getTransactionFromCollection","identifier","collection","getUpdatedTransaction","currentTx","prevTx","processTransactionUpdates","showTransactionToast","toastMeta","getTransactionToastMeta","closeElem","transactionToastMeta","transactionAction","charAt","newMessage","Landing","lazy","then","Dashboard","Governance","App","selectedTab","connecting","genericError","selectedTheme","buyModalOpened","toastMessageProps","unsubscribeFromHistory","closeToastMessage","showToastMessage","processCustomParam","cachedKeyFound","storedCachedData","widthChanged","heightChanged","tabIndex","loadAvailableTokens","warn","setThemeMode","closeIframe","w","iFrames","getElementsByTagName","iframe","contentWindow","parents","loadCustomAddress","strategyChanged","self","parent","hasMetamask","store","themeDark","SuspenseLoader","web3_react_dist_default","web3Api","libraryName","web3_react_dist","RimbleWeb3","needsPreflight","react_router","react","fallback","isDashboard","setToken","setStrategy","openBuyModal","handleMenuClick","selectTab","closeBuyModal","isGovernance","components_Header","src_Web3Debugger_Web3Debugger","exact","updateSelectedTab","expires","acceptOnScroll","cookieName","acceptOnScrollPercentage","marginTop","overflowY","src_Tos_Tos","src_PageNotFound_PageNotFound","utilities_TransactionToastUtil","Boolean","hostname","dsn","beforeSend","hint","originalException","ReactDOM","src_App_App","serviceWorker","registration","unregister","FieldComponent","colInfo","colIndex","visible","fieldIndex","colProps","_TableCellHeader_TableCellHeader__WEBPACK_IMPORTED_MODULE_7__","oldTokenName","oldIdleTokens","skipMigration","biconomyLimitReached","toggleSkipMigration","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_5__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_4__","executeAction","idleTokenToRedeem","_clientProtocolAmountsRedeem","gasLimitRedeem","callbackRedeem","callbackReceiptRedeem","toggleMetaTransactionsEnabled","checkMigrationContractApproved","migrationContractName","tokenApproved","oldIdleTokensConverted","oldContractInfo","oldContractABI","biconomyLimits","disapproveMigration","approveMigration","migrationMethod","callbackMigrate","callbackReceiptMigrate","useMetaTx","_skipRebalance","_migrationContract$me","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","biconomyChanged","usePermitChanged","fastBalanceSelectorChanged","batchMigrationEnabled","SkipMigrationComponent","react__WEBPACK_IMPORTED_MODULE_11___default","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_16__","rimble_ui__WEBPACK_IMPORTED_MODULE_20__","biconomyEnabled","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_13__","migrateTextBefore","migrateText","_TransactionField_TransactionField__WEBPACK_IMPORTED_MODULE_18__","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_17__","_FastBalanceSelector_FastBalanceSelector__WEBPACK_IMPORTED_MODULE_19__","functionName","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_14__","migrationImage","migrationTextProps","approveText","_TableHeader_TableHeader__WEBPACK_IMPORTED_MODULE_11__","_TableRow_TableRow__WEBPACK_IMPORTED_MODULE_9__","footer","polished__WEBPACK_IMPORTED_MODULE_0__","darkBlue","blurple","consensysblue","readableColor","VariationNumber","IconDirection","iconSize","iconPos","loading-dots","loading-dots--dot","dot-keyframes","selectedProvider","availableProviders","renderPaymentMethod","currentState","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","goBack","componentWillMount","getProviderInfo","newProviderInfo","getDefaultPaymentProvider","paymentMethod","getAvailablePaymentProviders","providerSupportMethod","providerSupportToken","defaultPaymentProvider","selectProvider","ethAvailable","tokenAvailable","selectMethod","loadRemoteResources","handleCountryChange","getAvailableCountries","availableCountries","countryCode","methodInfo","loadAvailableMethods","InnerComponent","_ImageButton_ImageButton__WEBPACK_IMPORTED_MODULE_12__","imagePropsExtended","react_select__WEBPACK_IMPORTED_MODULE_10__","noOptionsMessage","_ModalCard__WEBPACK_IMPORTED_MODULE_11__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","rimble_ui__WEBPACK_IMPORTED_MODULE_3__","bgLayer","backgroundRepeat","backgroundPosition","backgroundSize","backgroundImage","iconHeight","subtitleProps","BackButton","currYear","getFullYear","columnWidth","react__WEBPACK_IMPORTED_MODULE_9___default","rimble_ui__WEBPACK_IMPORTED_MODULE_12__","_ExtLink_ExtLink__WEBPACK_IMPORTED_MODULE_8__","role","aria-label","react_router_dom__WEBPACK_IMPORTED_MODULE_7__","ColTitle","useIconOnly"],"mappings":"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","file":"static/js/main.350d9c2d.chunk.js","sourcesContent":["import { Line } from '@nivo/line';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport { linearGradientDef } from '@nivo/core'\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport CustomTooltip from '../CustomTooltip/CustomTooltip';\nimport VariationNumber from '../VariationNumber/VariationNumber';\nimport AllocationChart from '../AllocationChart/AllocationChart';\nimport CustomTooltipRow from '../CustomTooltip/CustomTooltipRow';\nimport { Image, Text, Loader, Button, Tooltip, Icon, Flex } from \"rimble-ui\";\n\nclass AssetField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized && this.props.contractsInitialized;\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || accountChanged || transactionsChanged || (contractInitialized && !this.state.ready)){\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.loadField();\n      });\n    } else if (mobileChanged || themeModeChanged){\n      const oldState = Object.assign({},this.state);\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n    // Exit if component unmounted\n    // console.log('loadField',this.props.fieldInfo.name,this.props.account,this.props.token,this.props.tokenConfig);\n\n    if (this.componentUnmounted || !this.props.token || !this.props.tokenConfig){\n      return false;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    // const addCurveApy = typeof this.props.addCurveApy !== 'undefined' ? this.props.addCurveApy : false;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        case 'tokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              tokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'govTokens':\n          const govTokens = this.functionsUtil.getTokenGovTokens(this.props.tokenConfig);\n          const getGovTokensDistributionSpeed = await this.functionsUtil.getGovTokensDistributionSpeed(this.props.tokenConfig);\n          this.setStateSafe({\n            govTokens,\n            getGovTokensDistributionSpeed\n          });\n        break;\n        case 'tokenPrice':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenPrice = '-';\n            if (typeof this.props.tokenConfig.showPrice === 'undefined' || this.props.tokenConfig.showPrice){\n              tokenPrice = output.toString();\n            }\n            this.setStateSafe({\n              tokenPrice\n            });\n          }\n        break;\n        case 'fee':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              fee:output.toString()\n            });\n          }\n        break;\n        case 'amountToMigrate':\n          const {\n            oldContractBalanceFormatted\n          } = await this.functionsUtil.checkMigration(this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (setState && oldContractBalanceFormatted){\n            this.setStateSafe({\n              amountToMigrate:oldContractBalanceFormatted.toString()\n            });\n            output = oldContractBalanceFormatted;\n          }\n        break;\n        case 'amountLent':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              amountLent:output.toString()\n            });\n          }\n        break;\n        case 'idleTokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              idleTokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'redeemableBalanceCounterCurve':\n          const {\n            redeemableBalanceCurveEnd,\n            redeemableBalanceCurveStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceCurveStart && redeemableBalanceCurveEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceCurveEnd,\n                redeemableBalanceCurveStart\n              });\n            }\n\n            output = {\n              redeemableBalanceCurveEnd,\n              redeemableBalanceCurveStart\n            };\n          }\n        break;\n        case 'redeemableBalanceCounter':\n          const {\n            redeemableBalanceEnd,\n            redeemableBalanceStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceStart && redeemableBalanceEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceEnd,\n                redeemableBalanceStart\n              });\n            }\n\n            output = {\n              redeemableBalanceEnd,\n              redeemableBalanceStart\n            };\n          }\n        break;\n        case 'earnings':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earnings:output.toString()\n            });\n          }\n        break;\n        case 'feesCounter':\n          const [earningsCounter,feePercentage] = await Promise.all([\n            this.loadField('earningsCounter'),\n            this.functionsUtil.getTokenFees(this.props.tokenConfig)\n          ]);\n\n          if (earningsCounter && earningsCounter.earningsStart && earningsCounter.earningsEnd && feePercentage){\n\n            const feesStart = earningsCounter.earningsStart.times(feePercentage);\n            const feesEnd = earningsCounter.earningsEnd.times(feePercentage);\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                feesEnd,\n                feesStart\n              });\n            }\n\n            output = {\n              feesEnd,\n              feesStart\n            };\n          }\n        break;\n        case 'earningsCounterCurve':\n          const [curveApy,earningsCurveStart,amountLentCurve] = await Promise.all([\n            this.functionsUtil.getCurveAPY(),\n            this.functionsUtil.loadAssetField('earningsCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLentCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n          if (amountLentCurve && earningsCurveStart && curveApy){\n            const earningsCurveEnd = amountLentCurve.gt(0) ? amountLentCurve.times(curveApy.div(100)).plus(earningsCurveStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsCurveEnd,\n                earningsCurveStart\n              });\n            }\n\n            output = {\n              earningsCurveEnd,\n              earningsCurveStart\n            };\n          }\n        break;\n        case 'earningsCounter':\n          const [tokenAPY2,earningsStart,amountLent2] = await Promise.all([\n            this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('earnings',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLent',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n          if (amountLent2 && earningsStart && tokenAPY2){\n            const earningsEnd = amountLent2.gt(0) ? amountLent2.times(tokenAPY2.div(100)).plus(earningsStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsEnd,\n                earningsStart\n              });\n            }\n\n            output = {\n              earningsEnd,\n              earningsStart\n            };\n          }\n        break;\n        case 'redeemableBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              redeemableBalance:output.toString()\n            });\n          }\n        break;\n        case 'score':\n          const tokenScore = await this.functionsUtil.getTokenScore(this.props.tokenConfig,isRisk);\n          if (setState){\n            this.setStateSafe({\n              score:tokenScore ? tokenScore : false\n            });\n          }\n          output = tokenScore;\n        break;\n        case 'pool':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              poolSize:output.toString()\n            });\n          }\n        break;\n        case 'earningsPercCurve':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPercCurveDirection:parseFloat(output)>0 ? 'up' : 'down',\n              earningsPercCurve:parseFloat(output).toFixed(decimals)\n            });\n          }\n        break;\n        case 'earningsPerc':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPerc:parseFloat(output).toFixed(decimals),\n              earningsPercDirection:parseFloat(output)>0 ? 'up' : 'down'\n            });\n          }\n        break;\n        case 'apr':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenAPR = '-';\n            if (typeof this.props.tokenConfig.showAPR === 'undefined' || this.props.tokenConfig.showAPR){\n              tokenAPR = parseFloat(output).toFixed(decimals);\n            }\n            this.setStateSafe({\n              tokenAPR\n            });\n          }\n        break;\n        case 'oldApy':\n          if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.oldContract){\n            const oldTokenConfig = Object.assign({},this.props.tokenConfig);\n            oldTokenConfig.idle = Object.assign({},this.props.tokenConfig.migration.oldContract);\n            oldTokenConfig.protocols = Object.values(this.props.tokenConfig.protocols);\n\n            // Override token with name\n            oldTokenConfig.idle.token = oldTokenConfig.idle.name;\n\n            // Replace protocols with old protocols\n            if (oldTokenConfig.migration.oldProtocols){\n              oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n                const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n                if (foundProtocol){\n                  const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                  oldTokenConfig.protocols[protocolPos] = oldProtocol;\n                }\n              });\n            }\n\n            output = await this.functionsUtil.loadAssetField('apy',this.props.token,oldTokenConfig,this.props.account,false);\n\n          } else {\n            output = await this.loadField('apyNoGov');\n          }\n\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                oldAPY:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                oldAPY:false\n              });\n            }\n          }\n        break;\n        case 'apyNoGov':\n          output = await this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,false);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                tokenAPYNoGov:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPYNoGov:false\n              });\n            }\n          }\n        break;\n        case 'curveApy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveApy:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveApy:false\n              });\n            }\n          }\n        break;\n        case 'curveAvgSlippage':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveAvgSlippage:(parseFloat(output)*100).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveAvgSlippage:false\n              });\n            }\n          }\n        break;\n\n        case 'apy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              const tokenAPY = parseFloat(output).toFixed(decimals);\n              const showTooltip = !this.props.isMobile && (fieldInfo.showTooltip !== undefined && fieldInfo.showTooltip);\n              const govTokensAprs = showTooltip ? await this.functionsUtil.getGovTokensAprs(this.props.token,this.props.tokenConfig) : null;\n              this.setStateSafe({\n                tokenAPY,\n                govTokensAprs\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPY:false\n              });\n            }\n          }\n        break;\n        case 'allocationChart':\n          let allocationChartWidth = 0;\n          let allocationChartHeight = 0;\n\n          const resizeAllocationChart = () => {\n            const allocationChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (allocationChartRowElement){\n              const $allocationChartRowElement = window.jQuery(allocationChartRowElement);\n              allocationChartWidth = $allocationChartRowElement.innerWidth()-parseFloat($allocationChartRowElement.css('padding-right'))-parseFloat($allocationChartRowElement.css('padding-left'));\n              allocationChartHeight = $allocationChartRowElement.innerHeight();\n\n              // Make it a square\n              allocationChartWidth = parseInt(allocationChartWidth)>0 ? Math.min(allocationChartWidth,allocationChartHeight) : allocationChartHeight;\n              allocationChartHeight = allocationChartWidth;\n\n\n              if (allocationChartWidth !== this.state.allocationChartWidth){\n                if (setState){\n                  this.setStateSafe({\n                    allocationChartWidth,\n                    allocationChartHeight\n                  });\n                }\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAllocationChart();\n          window.removeEventListener('resize', resizeAllocationChart.bind(this));\n          window.addEventListener('resize', resizeAllocationChart.bind(this));\n\n          if (setState){\n            this.setStateSafe({\n              allocationChartWidth,\n              allocationChartHeight\n            });\n          }\n        break;\n        case 'aprChart':\n          // Set start timestamp for v3 tokens\n          const aprChartEndTimestamp = isRisk ? this.functionsUtil.getGlobalConfig(['stats','versions','v3','endTimestamp']) : null;\n          const aprChartStartTimestamp = isRisk ? aprChartEndTimestamp-(7*24*60*60) : Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).format('DD/MM/YYYY 00:00:00'),'DD/MM/YYYY HH:mm:ss').subtract(7,'days')._d.getTime()/1000));\n\n          // Check for cached data\n          let aprChartData = null;\n          const cachedDataKey = `aprChart_${this.props.tokenConfig.address}_${isRisk}`;\n          const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n\n          aprChartData = [{\n            id:this.props.token,\n            color: this.props.color ? this.props.color : 'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'color','hsl']).join(',')+')',\n            data: []\n          }];\n\n          if (cachedData !== null){\n            aprChartData = cachedData;\n          } else {\n\n            // FAKE CHART DATA\n            if (this.props.token === 'COMP'){\n              aprChartData[0].data = [];\n              const startTimestamp = new Date().getTime();\n              let y = 20;\n              for (var i=0; i<=16; i++) {\n                const mDate = this.functionsUtil.strToMoment(startTimestamp).add(i,'day');\n                const x = mDate.format(\"YYYY/MM/DD HH:mm\");\n                // Grow\n                if ((i>=5 && i<=10) || (i>=13)){\n                  y+=Math.random()*4+2; // Risk\n                  // y+=Math.random()*7+4; // Best\n                // Decrease\n                } else {\n                  y-=Math.random()*3+1; // Risk\n                  // y-=Math.random()*3+1; // Best\n                }\n                aprChartData[0].data.push({x,y});\n              }\n            } else {\n              const frequencySeconds = this.functionsUtil.getFrequencySeconds('hour',12);\n              const apiResultsAprChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,aprChartStartTimestamp,aprChartEndTimestamp,false,frequencySeconds);\n\n              // if (isRisk){\n              //   debugger;\n              // }\n\n              apiResultsAprChart.forEach((d,i) => {\n                const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const y = parseFloat(this.functionsUtil.fixTokenDecimals(d.idleRate,18));\n                aprChartData[0].data.push({ x, y });\n              });\n            }\n\n            this.functionsUtil.setCachedData(cachedDataKey,aprChartData);\n          }\n\n\n          // Add same value\n          if (aprChartData[0].data.length === 1){\n            const newPoint = Object.assign({},aprChartData[0].data[0]);\n            newPoint.x = this.functionsUtil.strToMoment(newPoint,\"YYYY/MM/DD HH:mm\").add(1,'hours').format(\"YYYY/MM/DD HH:mm\")\n            aprChartData[0].data.push(newPoint);\n          }\n\n          let aprChartWidth = 0;\n          let aprChartHeight = 0;\n\n          const resizeAprChart = () => {\n            const aprChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (aprChartRowElement){\n              const $aprChartRowElement = window.jQuery(aprChartRowElement);\n              aprChartWidth = $aprChartRowElement.innerWidth()-parseFloat($aprChartRowElement.css('padding-right'))-parseFloat($aprChartRowElement.css('padding-left'));\n              aprChartHeight = $aprChartRowElement.innerHeight();\n              if (aprChartWidth !== this.state.aprChartWidth || !this.state.aprChartHeight){\n                this.setStateSafe({\n                  aprChartWidth,\n                  aprChartHeight: this.state.aprChartHeight ? this.state.aprChartHeight : aprChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAprChart();\n          window.removeEventListener('resize', resizeAprChart.bind(this));\n          window.addEventListener('resize', resizeAprChart.bind(this));\n\n          // Set chart type\n          const aprChartType = Line;\n\n          const aprChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            axisLeft:null,\n            animate:false,\n            axisBottom:null,\n            enableArea:true,\n            areaOpacity:0.1,\n            curve:'monotoneX',\n            enableGridX:false,\n            enableGridY:false,\n            pointBorderWidth:2,\n            isInteractive:true,\n            colors:d => d.color,\n            defs:[\n              linearGradientDef('gradientArea', [\n                  { offset: 0, color: '#faf047' },\n                  { offset: 50, color: '#e4b400' },\n              ])\n            ],\n            enableSlices:this.props.isMobile ? false : 'x',\n            yFormat:value => parseFloat(value).toFixed(2)+'%',\n            fill:[\n              { match: { id: this.props.token } , id: 'gradientArea' },\n            ],\n            margin: { top: 10, right: 0, bottom: 0, left: 0 },\n            sliceTooltip:(slideData) => {\n              const { slice } = slideData;\n              const point = slice.points[0];\n              return (\n                <CustomTooltip\n                  point={point}\n                >\n                  {\n                  typeof slice.points === 'object' && slice.points.length &&\n                    slice.points.map(point => {\n                      const protocolName = point.serieId;\n                      const protocolEarning = point.data.yFormatted;\n                      // const protocolApy = point.data.apy;\n                      return (\n                        <CustomTooltipRow\n                          key={point.id}\n                          color={point.color}\n                          label={protocolName}\n                          value={protocolEarning}\n                        />\n                      );\n                    })\n                  }\n                </CustomTooltip>\n              );\n            }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                aprChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              aprChartType,\n              aprChartData,\n              aprChartProps,\n              aprChartWidth,\n              aprChartHeight\n            });\n          }\n          output = aprChartData;\n        break;\n        case 'performanceChart':\n          let firstTokenPrice = null;\n          let firstIdleBlock = null;\n          /*\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const performanceChartRowElement = document.getElementById(this.props.rowId) ? document.getElementById(this.props.rowId) : document.getElementById(this.props.parentId);\n          if (performanceChartRowElement){\n            performanceChartWidth = parseFloat(performanceChartRowElement.offsetWidth)>0 ? performanceChartRowElement.offsetWidth* (this.props.colProps ? this.props.colProps.width : 1) : 0;\n            performanceChartHeight = parseFloat(performanceChartRowElement.offsetHeight);\n          }\n          */\n\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const resizePerformanceChart = () => {\n            const PerformanceChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (PerformanceChartRowElement){\n              const $PerformanceChartRowElement = window.jQuery(PerformanceChartRowElement);\n              performanceChartWidth = $PerformanceChartRowElement.innerWidth()-parseFloat($PerformanceChartRowElement.css('padding-right'))-parseFloat($PerformanceChartRowElement.css('padding-left'));\n              performanceChartHeight = $PerformanceChartRowElement.innerHeight();\n              if (performanceChartWidth !== this.state.performanceChartWidth || !this.state.performanceChartHeight){\n                this.setStateSafe({\n                  performanceChartWidth,\n                  performanceChartHeight: this.state.performanceChartHeight ? this.state.performanceChartHeight : performanceChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizePerformanceChart();\n          window.removeEventListener('resize', resizePerformanceChart.bind(this));\n          window.addEventListener('resize', resizePerformanceChart.bind(this));\n\n          const apr_end_date = this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).subtract(1,'day').format('YYYY-MM-DD 23:59'),'YYYY-MM-DD HH:mm');\n          const apr_start_date = apr_end_date.clone().subtract(1,'week');\n\n          // Set start timestamp for v3 tokens\n          const apr_start_timestamp =  Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(apr_start_date._d.getTime()/1000));\n          // const apr_end_timestamp = parseInt(apr_end_date._d.getTime()/1000);\n\n          let apiResultsPerformanceChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,apr_start_timestamp,null,false,43200);\n\n          const idleTokenPerformance = apiResultsPerformanceChart.map((d,i) => {\n            let y = 0;\n            const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n            const tokenPrice = this.functionsUtil.fixTokenDecimals(d.idlePrice,this.props.tokenConfig.decimals);\n\n            if (!firstTokenPrice){\n              firstTokenPrice = tokenPrice;\n            } else {\n              y = parseFloat(tokenPrice.div(firstTokenPrice).minus(1).times(100));\n            }\n\n            if (firstIdleBlock === null){\n              firstIdleBlock = parseInt(d.blocknumber);\n            }\n\n            return { x, y };\n          });\n\n          const performanceChartData = [{\n            id:'Idle',\n            color: 'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'color','hsl']).join(',')+')',\n            data: idleTokenPerformance\n          }];\n\n          // Set chart type\n          const performanceChartType = Line;\n\n          const performanceChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            animate:false,\n            axisLeft:null,\n            axisBottom:null,\n            enableArea:true,\n            enableGridX:false,\n            enableGridY:false,\n            curve:'monotoneX',\n            enableSlices:false,\n            pointBorderWidth:1,\n            colors:d => d.color,\n            pointLabelYOffset:-12,\n            margin: { top: 0, right: 0, bottom: 0, left: 0 }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                performanceChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              performanceChartType,\n              performanceChartData,\n              performanceChartProps,\n              performanceChartWidth,\n              performanceChartHeight\n            });\n          }\n          output = performanceChartData;\n        break;\n        case 'custom':\n          const path = fieldInfo.path;\n          output = this.functionsUtil.getArrayPath(path,this.props.tokenConfig);\n          if (output){\n            this.setStateSafe({\n              [fieldName]:output\n            });\n          }\n        break;\n        default:\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              ready:true,\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n    return output;\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n    let output = null;\n\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n      \n    const maxPrecision = fieldProps && fieldProps.maxPrecision ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const minPrecision = fieldProps && fieldProps.minPrecision ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    switch (fieldInfo.name){\n      case 'iconTooltip':\n        const icon1 = this.props.tokenConfig && this.props.tokenConfig.icon ? this.props.tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Tooltip\n            placement={'top'}\n            message={this.props.token}\n            {...fieldInfo.tooltipProps}\n          >\n            <Image src={icon1} {...fieldProps} />\n          </Tooltip>\n        );\n      break;\n      case 'icon':\n        const icon2 = this.props.tokenConfig && this.props.tokenConfig.icon ? this.props.tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Image src={icon2} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        output = (\n          <Text {...fieldProps}>{this.props.token}</Text>\n        );\n      break;\n      case 'strategyIcon':\n        const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'icon']);\n        if (strategyIcon){\n          output = (\n            <Image src={strategyIcon} {...fieldProps} />\n          );\n        }\n      break;\n      case 'strategyName':\n        const strategyName = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'title']);\n        output = (\n          <Text {...fieldProps}>{strategyName}</Text>\n        );\n      break;\n      case 'tokenBalance':\n        output = this.state.tokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenBalance} />\n        ) : loader\n      break;\n      case 'fee':\n        output = this.state.fee ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.fee} />\n        ) : loader\n      break;\n      case 'tokenPrice':\n        output = this.state.tokenPrice ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenPrice} />\n        ) : loader\n      break;\n      case 'amountToMigrate':\n        output = this.state.amountToMigrate ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.amountToMigrate} />\n        ) : loader\n      break;\n      case 'idleTokenBalance':\n        output = this.state.idleTokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.idleTokenBalance} />\n        ) : loader\n      break;\n      case 'redeemableBalanceCounterCurve':\n        output = this.state.ready && this.state.redeemableBalanceCurveStart && this.state.redeemableBalanceCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceCurveEnd)}\n            start={parseFloat(this.state.redeemableBalanceCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalanceCounter':\n        output = this.state.ready && this.state.redeemableBalanceStart && this.state.redeemableBalanceEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceEnd)}\n            start={parseFloat(this.state.redeemableBalanceStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'feesCounter':\n        output = this.state.ready && this.state.feesStart && this.state.feesEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.feesEnd)}\n            start={parseFloat(this.state.feesStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounterCurve':\n        output = this.state.ready && this.state.earningsCurveStart && this.state.earningsCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsCurveEnd)}\n            start={parseFloat(this.state.earningsCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounter':\n        output = this.state.ready && this.state.earningsStart && this.state.earningsEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsEnd)}\n            start={parseFloat(this.state.earningsStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalance':\n        output = this.state.redeemableBalance ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.redeemableBalance} />\n        ) : loader\n      break;\n      case 'govTokens':\n        output = this.state.govTokens ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n          >\n            {\n              Object.values(this.state.govTokens).map( (govTokenConfig,govTokenIndex) => (\n                <AssetField\n                  token={govTokenConfig.token}\n                  tokenConfig={govTokenConfig}\n                  key={`asset_${govTokenIndex}`}\n                  fieldInfo={{\n                    name:'iconTooltip',\n                    tooltipProps:{\n                      message:`${govTokenConfig.token}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govTokenConfig.token] ? `: ${this.state.getGovTokensDistributionSpeed[govTokenConfig.token].toFixed(decimals)}/${govTokenConfig.distributionFrequency} (for the whole pool)` : '')\n                    },\n                    props:{\n                      borderRadius:'50%',\n                      position:'relative',\n                      height:['1.1em','2em'],\n                      ml:govTokenIndex ? '-10px' : 0,\n                      zIndex:Object.values(this.state.govTokens).length-govTokenIndex,\n                      boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                    }\n                  }}\n                />\n              ))\n            }\n          </Flex>\n        ) : loader\n      break;\n      case 'amountLentCurve':\n        output = this.state.amountLentCurve ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLentCurve} />\n        ) : loader\n      break;\n      case 'amountLent':\n        output = this.state.amountLent ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLent} />\n        ) : loader\n      break;\n      case 'pool':\n        output = this.state.poolSize ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.poolSize} />\n        ) : loader\n      break;\n      case 'score':\n        // console.log('score',this.state.score);\n        output = this.state.score !== undefined && this.state.score !== null ? (\n          <SmartNumber {...fieldProps} decimals={1} number={this.state.score} />\n        ) : loader\n      break;\n      case 'earningsPerc':\n        output = this.state.earningsPerc ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsPercCurve':\n        output = this.state.earningsPercCurve ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercCurveDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsCurve':\n        output = this.state.earningsCurve ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earningsCurve}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'earnings':\n        output = this.state.earnings ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earnings}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'idleDistribution':\n        const governanceTokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n        const idleTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',governanceTokenName]);\n        output = this.state.idleDistribution ? (\n          <Text {...fieldProps}>+{this.state.idleDistribution.toFixed(decimals)} IDLE/{idleTokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'userDistributionSpeed':\n        output = this.state.userDistributionSpeed ? (\n          <Text {...fieldProps}>{this.state.userDistributionSpeed.toFixed(decimals)}/{this.props.tokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'distributionSpeed':\n        output = this.state.distributionSpeed ? (\n          <Text {...fieldProps}>{this.state.distributionSpeed.toFixed(decimals)}</Text>\n        ) : loader\n      break;\n      case 'apr':\n        output = this.state.tokenAPR ? (\n          <Text {...fieldProps}>{this.state.tokenAPR}{!isNaN(parseFloat(this.state.tokenAPR)) ? '%' : ''}</Text>\n        ) : loader\n      break;\n      case 'oldApy':\n        output = this.state.oldAPY !== undefined ? (\n          <Text {...fieldProps}>{this.state.oldAPY !== false ? this.state.oldAPY : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apyNoGov':\n        output = this.state.tokenAPYNoGov !== undefined ? (\n          <Text {...fieldProps}>{this.state.tokenAPYNoGov !== false ? this.state.tokenAPYNoGov : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveApy':\n        output = this.state.curveApy !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveApy !== false ? this.state.curveApy : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveAvgSlippage':\n        output = this.state.curveAvgSlippage !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveAvgSlippage !== false ? this.state.curveAvgSlippage : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apy':\n        output = this.state.tokenAPY !== undefined ? (\n          <Flex\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text {...fieldProps}>{this.state.tokenAPY !== false ? this.state.tokenAPY : '-' }<small>%</small></Text>\n            {\n              this.state.govTokensAprs && Object.keys(this.state.govTokensAprs).length>0 && \n                <AssetField\n                  fieldInfo={{\n                    name:'tooltip',\n                    props:{\n                      iconProps:{\n                        ml:1\n                      },\n                      placement:'top',\n                      message:Object.keys(this.state.govTokensAprs).map( govToken => {\n                        const distributionFrequency = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'distributionFrequency']);\n                        const tooltipMode = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'aprTooltipMode']);\n                        let value = this.state.govTokensAprs[govToken].toFixed(decimals);\n                        switch (tooltipMode){\n                          default:\n                          case 'apr':\n                            value += '%';\n                          break;\n                          case 'distribution':\n                            value = `${value}/${distributionFrequency}`;\n                          break;\n                        }\n                        return `${govToken}: ${value}`\n                      }).join('; ')\n                    }\n                  }}\n                />\n            }\n          </Flex>\n        ) : loader\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <Button {...fieldProps} onClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</Button>\n        );\n      break;\n      case 'performanceChart':\n        output = this.state.performanceChartData ? (\n          <GenericChart\n            {...this.state.performanceChartProps}\n            type={this.state.performanceChartType}\n            data={this.state.performanceChartData}\n            width={this.state.performanceChartWidth}\n            height={this.state.performanceChartHeight}\n          />\n        ) : loader\n      break;\n      case 'allocationChart':\n        output = this.state.allocationChartWidth && this.state.allocationChartHeight ? (\n          <AllocationChart\n            {...this.props}\n            loaderProps={{\n              size:'20px'\n            }}\n            loaderText={''}\n            selectedToken={this.props.token}\n            width={this.state.allocationChartWidth}\n            height={this.state.allocationChartHeight}\n            inline={typeof this.props.inline !== 'undefined' ? this.props.inline : true}\n            showLoader={typeof this.props.showLoader !== 'undefined' ? this.props.showLoader : false}\n          />\n        ) : loader\n      break;\n      case 'tooltip':\n        output = (\n          <Tooltip\n            {...fieldProps}\n          >\n            <Icon\n              ml={2}\n              name={\"Info\"}\n              size={'1em'}\n              color={'cellTitle'}\n              {...fieldProps.iconProps}\n            />\n          </Tooltip>\n        );\n      break;\n      case 'aprChart':\n        output = this.state.aprChartData ? (\n          <GenericChart\n            {...this.state.aprChartProps}\n            type={this.state.aprChartType}\n            data={this.state.aprChartData}\n            width={this.state.aprChartWidth}\n            height={this.state.aprChartHeight}\n          />\n        ) : loader\n      break;\n      case 'custom':\n        let CustomComponent = null;\n        let customValue = this.state[fieldInfo.name];\n        switch (fieldInfo.type){\n          case 'number':\n            customValue = this.functionsUtil.BNify(customValue).toString();\n            CustomComponent = SmartNumber;\n            fieldProps.number = customValue;\n          break;\n          case 'icon':\n            CustomComponent = Icon;\n            fieldProps.name = customValue;\n            const customFieldName = Object.values(fieldInfo.path).pop();\n            if (this.props.tokenConfig[`${customFieldName}Props`]){\n              const customFieldProps = this.props.tokenConfig[`${customFieldName}Props`];\n              // Replace props\n              if (customFieldProps && Object.keys(customFieldProps).length){\n                Object.keys(customFieldProps).forEach(p => {\n                  fieldProps[p] = customFieldProps[p];\n                });\n              }\n            }\n          break;\n          default:\n            CustomComponent = Text;\n          break;\n        }\n        output = customValue ? (\n          <CustomComponent {...fieldProps}>{customValue}</CustomComponent>\n        ) : loader\n      break;\n      default:\n        let formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>{formattedValue}</Text>\n        ) : loader\n      break;\n    }\n    return output;\n  }\n}\n\nexport default AssetField;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass SmartNumber extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  render() {\n    let formattedNumber = '-';\n    const number = typeof this.props.number !== 'undefined' && !isNaN(this.props.number) && this.props.number !== false && this.props.number !== null ? this.props.number : null;\n\n    if (number){\n      switch (this.props.type){\n        case 'money':\n          formattedNumber = this.functionsUtil.formatMoney(number,this.props.precision);\n        break;\n        default:\n          formattedNumber = this.functionsUtil.abbreviateNumber(number,this.props.decimals,this.props.maxPrecision,this.props.minPrecision);\n        break;\n      }\n    } else {\n      formattedNumber = '-';\n    }\n\n    const flexProps = {\n      width:1,\n      alignItems:'center',\n      flexDirection:'row',\n      justifyContent:'center'\n    };\n\n    // Replace props\n    if (this.props.flexProps && Object.keys(this.props.flexProps).length){\n      Object.keys(this.props.flexProps).forEach(p => {\n        flexProps[p] = this.props.flexProps[p];\n      });\n    }\n\n    const showUnit = formattedNumber !== '-';\n    const unitPos = this.props.unitPos ? this.props.unitPos : 'right';\n\n    return (\n      <Flex\n        {...flexProps}\n      >\n        {\n          this.props.unit && unitPos === 'left' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n        <Text {...this.props}>{formattedNumber}</Text>\n        {\n          this.props.unit && unitPos === 'right' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SmartNumber;\n","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass ChartCustomTooltipRow extends Component {\n\n  async componentWillMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps,prevState){\n\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default ChartCustomTooltipRow;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"PageNotFound_headerContainer__Ly5Tz\",\"headerBgFiller\":\"PageNotFound_headerBgFiller__1NzlO\",\"bgContainer\":\"PageNotFound_bgContainer__1Racj\",\"list\":\"PageNotFound_list__Cnz-b\",\"textContainer\":\"PageNotFound_textContainer__g_kTm\"};","import React from \"react\";\nimport { Text } from \"rimble-ui\";\n\nclass ShortHash extends React.Component {\n  shortenHash = hash => {\n    let shortHash = hash;\n    const txStart = shortHash.substr(0, 7);\n    const txEnd = shortHash.substr(shortHash.length - 4);\n    shortHash = txStart + \"...\" + txEnd;\n    return shortHash;\n  };\n  render() {\n    const shortHash = this.shortenHash(this.props.hash);\n\n    return <Text display={'inline'} {...this.props}>{shortHash}</Text>;\n  }\n}\n\nexport default ShortHash;\n","import React, { Component } from 'react';\nimport {\n  Flex, Box\n} from \"rimble-ui\";\nimport styles from './LoadingSpinner.module.scss';\n\nclass LoadingSpinner extends Component {\n  render() {\n    return (\n      <Flex\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        <Box className={[styles[\"loading-dots\"]]}>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n        </Box>\n      </Flex>\n    );\n  }\n}\n\nexport default LoadingSpinner;\n","import React, { Component } from 'react';\nimport {\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport LoadingSpinner from '../LoadingSpinner/LoadingSpinner.js';\n\nclass ButtonLoader extends Component {\n  render() {\n    return (\n       <Button\n        onClick={this.props.handleClick}\n         {...this.props.buttonProps}\n       >\n        <Flex flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n          <Flex width={1} display={ this.props.isLoading ? 'flex' : 'none' }>\n            <LoadingSpinner />\n          </Flex>\n          <Flex width={1} display={ this.props.isLoading ? 'none' : 'flex' }>\n            {this.props.buttonText}\n          </Flex>\n        </Flex>\n       </Button>\n    );\n  }\n}\n\nexport default ButtonLoader;\n","import React, { Component } from 'react';\nimport { Icon, Text, Flex } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass IconBox extends Component {\n\n  render() {\n    const cardProps = Object.assign({\n      p:3\n    },this.props.cardProps);\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={this.props.icon ? this.props.icon : 'InfoOutline'}\n            {...this.props.iconProps}\n          />\n          {\n            this.props.text && \n              <Text\n                mt={1}\n                fontSize={2}\n                color={'cellText'}\n                textAlign={'center'}\n                dangerouslySetInnerHTML={{\n                  __html:this.props.text\n                }}\n                {...this.props.textProps}\n              />\n          }\n          {\n            this.props.children\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default IconBox;\n","import theme from '../theme';\nimport React, { Component } from 'react';\nimport styles from './TransactionListFilters.module.scss';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\nimport { Flex, Text, Icon, Radio, Button, Link } from \"rimble-ui\";\n\nclass TransactionListFilters extends Component {\n\n  state = {\n    maxWidth:0.4,\n    minWidth:0.18,\n    maxHeight:425,\n    isOpened:false,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null\n    }\n  }\n\n  setFilter = (filter,value) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:value\n      }\n    }));\n  }\n\n  applyFilters = (toggle=true) => {\n    if (typeof this.props.applyFilters === 'function'){\n      this.props.applyFilters(this.state.activeFilters);\n    }\n    if (toggle){\n      this.toggleOpened();\n    }\n  }\n\n  resetFilter = (filter) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:null\n      }\n    }),() => {\n      this.applyFilters(false);\n    });\n  }\n\n  resetFilters = (toggle=true) => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null\n      }\n    },() => {\n      if (typeof this.props.resetFilters === 'function'){\n        this.props.resetFilters();\n      }\n      if (toggle){\n        this.toggleOpened();\n      }\n    })\n  }\n\n  toggleOpened = () => {\n    this.setState((prevState) => ({\n      isOpened: !prevState.isOpened\n    }));\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={3}\n        top={0}\n        width={1}\n        zIndex={1}\n        flexDirection={'column'}\n        alignItems={'flex-start'}\n        justifyContent={'center'}\n        position={['relative','absolute']}\n      >\n        <DashboardCard\n          cardProps={{\n            py:2,\n            px:3,\n            width:[1, this.state.isOpened ? this.state.maxWidth : this.state.minWidth ],\n            style:{\n              transition:'width 0.3s ease-in-out'\n            }\n          }}\n          isInteractive={ !this.state.isOpened }\n          handleClick={ !this.state.isOpened ? this.toggleOpened : null }\n        >\n          <Flex\n            width={1}\n            style={{\n              cursor:'pointer'\n            }}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'space-between'}\n            onClick={ this.state.isOpened ? this.toggleOpened : null }\n          >\n            <Text\n              fontSize={2}\n              fontWeight={500}\n              color={'copyColor'}\n            >\n              Filters\n            </Text>\n            <Icon\n              color={'copyColor'}\n              size={ this.props.isMobile ? '1.3em' : '1.5em'}\n              name={ this.state.isOpened ? 'Close' : 'Tune' }\n            />\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n            style={{\n              overflow:'hidden',\n              transition:'max-height 0.3s ease-in-out',\n              maxHeight:this.state.isOpened ? this.state.maxHeight : 0\n            }}\n          >\n            <Flex\n              mt={2}\n              py={2}\n              width={1}\n              flexDirection={'row'}\n              borderTop={`1px solid ${theme.colors.divider}`}\n            >\n              {\n                Object.keys(this.props.filters).map((filterCategory) => {\n                  const filterValues = this.props.filters[filterCategory];\n                  return (\n                    <Flex\n                      flexDirection={'column'}\n                      key={`filter_${filterCategory}`}\n                      style={{\n                        flexBasis:'0',\n                        flex:'1 1 0px'\n                      }}\n                    >\n                      <TableCellHeader\n                        pb={2}\n                        fontWeight={3}\n                        fontSize={[0,2]}\n                        color={'cellText'}\n                      >\n                        {filterCategory.toUpperCase()}\n                      </TableCellHeader>\n                      {\n                        Object.keys(filterValues).map((filterValue) => {\n                          const filterLabel = filterValues[filterValue];\n                          const isChecked = this.state.activeFilters[filterCategory]===filterValue;\n                          return (\n                            <Radio\n                              my={2}\n                              fontSize={[0,2]}\n                              label={filterLabel}\n                              checked={isChecked}\n                              className={styles.radioBtn}\n                              key={`filter_${filterCategory}_${filterValue}`}\n                              onChange={ e => this.setFilter(filterCategory,filterValue) }\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                  );\n                })\n              }\n            </Flex>\n            <Flex\n              flexDirection={'row'}\n            >\n              <Button.Text\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.applyFilters}\n              >\n                Apply filters\n              </Button.Text>\n              <Button.Text\n                ml={3}\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.resetFilters}\n              >\n                Reset\n              </Button.Text>\n            </Flex>\n          </Flex>\n        </DashboardCard>\n        {\n          !this.state.isOpened && this.props.activeFilters && Object.values(this.props.activeFilters).filter( v => (v !== null) ).length>0 &&\n            <Flex\n              mt={3}\n              width={1}\n              flexDirection={['column','row']}\n              alignItems={['flex-start','flex-end']}\n              justifyContent={['flex-end','flex-start']}\n            >\n              {\n                Object.keys(this.props.activeFilters).map((filterName) => {\n                  const filterValue = this.props.activeFilters[filterName];\n                  if (filterValue !== null){\n                    const filterLabel = this.props.filters[filterName][filterValue];\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:[2,0],\n                          mr:[0,3],\n                          width:[1,this.state.minWidth]\n                        }}\n                        isInteractive={true}\n                        key={`filter_${filterName}`}\n                      >\n                        <Flex\n                          width={1}\n                          style={{\n                            cursor:'pointer'\n                          }}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                          onClick={e => this.resetFilter(filterName)}\n                        >\n                          <Text\n                            fontSize={2}\n                            fontWeight={500}\n                            color={'cellText'}\n                            style={{\n                              textTransform:'capitalize'\n                            }}\n                          >\n                            {filterLabel}\n                          </Text>\n                          <Icon\n                            name={'Close'}\n                            color={'cellText'}\n                            size={ this.props.isMobile ? '1.3em' : '1.5em'}\n                          />\n                        </Flex>\n                      </DashboardCard>\n                    );\n                  }\n                  return null;\n                })\n              }\n              <Link\n                mt={[2,0]}\n                fontSize={[3,2]}\n                fontWeight={[3]}\n                color={'dark-gray'}\n                hoverColor={'copyColor'}\n                textAlign={['center','left']}\n                onClick={ e => this.resetFilters(false) }\n              >\n                Clear all filters\n              </Link>\n            </Flex>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionListFilters;","import React, { Component } from 'react';\n// import style from './TransactionsList.module.scss';\nimport TableRow from '../TableRow/TableRow';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Heading, Text, Link, Icon } from \"rimble-ui\";\nimport TransactionField from '../TransactionField/TransactionField';\nimport TransactionListFilters from '../TransactionListFilters/TransactionListFilters';\n\nclass TransactionsList extends Component {\n\n  state = {\n    page:1,\n    prevTxs:{},\n    txsPerPage:5,\n    loading:false,\n    totalTxs:null,\n    totalPages:null,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null,\n    },\n    filters:{\n      actions:{\n        deposit:'Deposit',\n        redeem:'Redeem',\n        send:'Send',\n        receive:'Receive',\n        migrate:'Migrate',\n        swap:'Swap-In',\n        swapout:'Swap-Out',\n        withdraw:'Withdraw',\n        // curvein:'CurveIn',\n        // curveout:'CurveOut',\n        // curvezapin:'CurveZapIn',\n        // curvezapout:'CurveZapOut',\n      },\n      status:{\n        completed:'Completed',\n        pending:'Pending',\n        failed:'Failed'\n      },\n      assets:{}\n    },\n    renderedTxs:null,\n    processedTxs:null,\n    lastBlockNumber:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);this.processTxs(page);\n    this.setState({\n      page\n    });\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadTxs();\n  }\n\n  applyFilters = activeFilters => {\n    this.setState({\n      activeFilters\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  resetFilters = () => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null,\n      }\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const transactionsChanged = JSON.stringify(prevProps.transactions) !== JSON.stringify(this.props.transactions);\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n\n    if (tokenChanged || transactionsChanged){\n      this.setState({\n        page:1,\n        prevTxs:{}\n      },()=>{\n        this.loadTxs();\n      })\n      return false;\n    }\n    const pageChanged = prevState.page !== this.state.page;\n    if (pageChanged){\n      this.processTxs();\n    }\n  }\n\n  async loadTxs(count,endBlockNumber='latest'){\n    if (!this.props.account){\n      return false;\n    }\n\n    count = count ? count : 0;\n\n    this.setState({\n      loading:true\n    });\n\n    const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n    // Take last block number, is null take first block number\n    let prevTxs = {...this.state.prevTxs};\n    let lastBlockNumber = Math.max(firstBlockNumber,this.state.lastBlockNumber);\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const assets = {...this.state.filters.assets};\n\n    enabledTokens.forEach((token) => {\n      assets[token] = token;\n    });\n\n    let actions = {...this.state.filters.actions};\n    \n    const enabledActions = typeof this.props.enabledActions !== 'undefined' ? this.props.enabledActions : [];\n\n    if (enabledActions.length){\n      actions = {};\n      enabledActions.forEach( action => {\n        actions[action.toLowerCase()] = action;\n      });\n    }\n\n    const etherscanTxs = await this.functionsUtil.getEtherscanTxs(this.props.account,lastBlockNumber,'latest',enabledTokens);\n\n    // Merge new txs with previous ones\n    if (etherscanTxs && etherscanTxs.length){\n      etherscanTxs.forEach((tx) => {\n        if (tx.hashKey){\n          prevTxs[tx.hashKey] = tx;\n        } else {\n          prevTxs[`t${tx.timeStamp}`] = tx;\n        }\n      });\n    }\n\n    const lastTx = Object.values(prevTxs).pop();\n\n    // Update last block number\n    if (lastTx && lastTx.blockNumber && (!this.state.lastBlockNumber || lastTx.blockNumber>this.state.lastBlockNumber)){\n      lastBlockNumber = parseInt(lastTx.blockNumber)+1;\n    }\n\n    return this.setState( prevState => ({\n      prevTxs,\n      loading:false,\n      lastBlockNumber,\n      filters:{\n        ...prevState.filters,\n        assets,\n        actions\n      }\n    }), () => {\n      this.processTxs()\n    });\n  };\n\n  processTxs = (page=null) => {\n\n    page = page ? page : this.state.page;\n\n    const availableActions = Object.keys(this.state.filters.actions).map( action => (action.toLowerCase()) );\n\n    // Sort prevTxs by timeStamp\n    const txsIndexes = Object.values(this.state.prevTxs)\n                        .filter(tx => (!!parseFloat(tx.value))) // Filter txs with value\n                        .filter(tx => (\n                          (this.state.activeFilters.status === null || (tx.status && tx.status.toLowerCase() === this.state.activeFilters.status.toLowerCase())) && \n                          (this.state.activeFilters.assets === null || (tx.token && tx.token.toLowerCase() === this.state.activeFilters.assets.toLowerCase())) &&\n                          ( tx.action && availableActions.includes(tx.action.toLowerCase()) && (this.state.activeFilters.actions === null || (tx.action.toLowerCase() === this.state.activeFilters.actions.toLowerCase()) ))\n                        )) // Filter by activeFilters\n                        .sort((a,b) => (a.timeStamp > b.timeStamp) ? -1 : 1 );\n\n    // Calculate max number of pages\n    const totalTxs = txsIndexes.length;\n    const totalPages = Math.ceil(totalTxs/this.state.txsPerPage);\n\n    const processedTxs = [];\n\n    // console.log(this.state.prevTxs,txsIndexes);\n\n    txsIndexes.forEach((tx, i) => {\n      const selectedToken = tx.token;\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const decimals = Math.min(tokenConfig.decimals,8);\n      \n      const date = new Date(tx.timeStamp*1000);\n      const action = tx.action ? tx.action : this.functionsUtil.getTxAction(tx,tokenConfig);\n\n      const parsedValue = parseFloat(tx.tokenAmount);\n\n      const amount = parsedValue ? (this.props.isMobile ? parsedValue.toFixed(4) : parsedValue.toFixed(decimals)) : '-';\n      const momentDate = this.functionsUtil.strToMoment(date);\n\n      // Save new params\n      tx.status = tx.status ? tx.status : 'Completed';\n      tx.action = action;\n      tx.momentDate = momentDate;\n      tx.amount = amount;\n\n      if (i>=((page-1)*this.state.txsPerPage) && i<((page-1)*this.state.txsPerPage)+this.state.txsPerPage) {\n        processedTxs.push(tx);\n      }\n    });\n\n    // console.log('processedTxs',this.state.page,txsIndexes,processedTxs);\n\n    const loading = false;\n  \n    this.setState({\n      loading,\n      totalTxs,\n      totalPages,\n      processedTxs\n    });\n  }\n\n  render() {\n\n    const hasActiveFilters = Object.values(this.state.activeFilters).filter( v => (v !== null) ).length>0;\n\n    // console.log('processedTxs',this.state.processedTxs);\n    const processedTxs = this.state.processedTxs ? Object.values(this.state.processedTxs) : null;\n\n    return (\n      <Flex flexDirection={'column'} width={1} m={'0 auto'}>\n        {\n          this.state.loading ? (\n            <FlexLoader\n              flexProps={{\n                flexDirection:'row',\n                minHeight:this.props.height\n              }}\n              loaderProps={{\n                size:'30px'\n              }}\n              textProps={{\n                ml:2\n              }}\n              text={'Loading transactions...'}\n            />\n          ) : (\n            <Flex\n              width={1}\n              position={'relative'}\n              flexDirection={'column'}\n              id={'transactions-list-container'}\n              pt={[0, hasActiveFilters ? '116px' : 5]}\n            >\n              <TransactionListFilters\n                {...this.props}\n                filters={this.state.filters}\n                activeFilters={this.state.activeFilters}\n                resetFilters={this.resetFilters.bind(this)}\n                applyFilters={this.applyFilters.bind(this)}\n              />\n              {\n                processedTxs && processedTxs.length ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <TableHeader\n                      cols={this.props.cols}\n                      isMobile={this.props.isMobile}\n                    />\n                    <Flex\n                      id={'transactions-list'}\n                      flexDirection={'column'}\n                    >\n                      {\n                        processedTxs.map( (tx,index) => {\n                          const txHash = tx.hash;\n                          const txHashKey = tx.hashKey;\n                          const handleClick = (e) => {\n                            return (txHash ? window.open(`https://etherscan.io/tx/${txHash}`) : null);\n                          };\n\n                          return (\n                            <TableRow\n                              {...this.props}\n                              rowProps={{\n                                isInteractive:true\n                              }}\n                              hash={txHash}\n                              transaction={tx}\n                              key={`tx-${index}`}\n                              handleClick={handleClick}\n                              rowId={`tx-col-${txHashKey}`}\n                              cardId={`tx-card-${txHashKey}`}\n                              fieldComponent={TransactionField}\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                    <Flex\n                      height={'50px'}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'flex-end'}\n                      id={'transactions-list-pagination'}\n                    >\n                      <Flex mr={3}>\n                        <Link mr={1} onClick={ e => this.prevPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowLeft'}\n                            size={'2em'}\n                            color={ this.state.page>1 ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                        <Link onClick={ e => this.nextPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowRight'}\n                            size={'2em'}\n                            color={ this.state.page<this.state.totalPages ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                      </Flex>\n                      <Flex alignItems={'center'}>\n                        <Text \n                          fontSize={1}\n                          fontWeight={3}\n                          color={'cellText'}\n                        >\n                          Page {this.state.page} of {this.state.totalPages}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontWeight={2} fontSize={[2]} color={'dark-gray'}>\n                    There are no transactions\n                  </Heading.h3>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionsList;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass CustomTooltip extends Component {\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default CustomTooltip;","import { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport globalConfigs from '../configs/globalConfigs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass AllocationChart extends Component {\n  state = {\n    chartData:null,\n    chartProps:null,\n    selectedSlice:null,\n    totalAllocation:null,\n    protocolsAllocations:null,\n    protocolsAllocationsPerc:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged){\n      this.setStateSafe({\n        chartData:null,\n        chartProps:null,\n        selectedSlice:null,\n        totalAllocation:null,\n        protocolsAllocations:null,\n        protocolsAllocationsPerc:null\n      },() => {\n        this.loadData();\n      });\n    } else if (prevProps.isMobile !== this.props.isMobile){\n      this.loadData()\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n    const {\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    } = await this.functionsUtil.getTokenAllocation(this.props.tokenConfig);\n\n    // console.log('AllocationChart',this.props.token,totalAllocation,protocolsAllocations,protocolsAllocationsPerc);\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => d.value+'%',\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {\n            background: this.props.theme.colors.cardBg\n          } : {\n            display: 'none',\n          }\n        },\n        labels:{\n          text:{\n            fontWeight:600,\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n      margin: this.props.inline ? {top:0,right:15,bottom:0,left:1} : (this.props.isMobile ? { top: 10, right: 15, bottom: 0, left: 15 } : { top: 10, right: 35, bottom: 0, left: 35 }),\n    };\n\n    const chartData = [];\n\n    this.props.tokenConfig.protocols.forEach((protocolInfo,i)=>{\n      const protocolName = protocolInfo.name;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n      if (protocolsAllocationsPerc[protocolAddr]){\n        const protocolAllocationPercParsed = parseFloat(protocolsAllocationsPerc[protocolAddr].times(100).toFixed(2));\n        chartData.push({\n          id:protocolAddr,\n          name:protocolName,\n          value:protocolAllocationPercParsed,\n          color:'hsl('+globalConfigs.stats.protocols[protocolName].color.hsl.join(',')+')',\n          label: globalConfigs.stats.protocols[protocolName].label ? globalConfigs.stats.protocols[protocolName].label : this.functionsUtil.capitalize(protocolName)\n        });\n      }\n\n    });\n\n    this.setStateSafe({\n      chartData,\n      chartProps,\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    });\n  }\n\n  render() {\n    \n    const selectedSlice = this.state.selectedSlice !== null && this.state.protocolsAllocations[this.state.selectedSlice.id] ? this.state.protocolsAllocations[this.state.selectedSlice.id] : false;\n    const protocolIcon = this.state.selectedSlice !== null ? (globalConfigs.stats.protocols[this.state.selectedSlice.name] && globalConfigs.stats.protocols[this.state.selectedSlice.name].icon ? globalConfigs.stats.protocols[this.state.selectedSlice.name].icon : `${this.state.selectedSlice.name}.svg`) : null;\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n      >\n        {\n          this.state.totalAllocation && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/protocols/${protocolIcon}`}\n                    />\n                    <SmartNumber\n                      fontSize={[3,4]}\n                      decimals={3}\n                      fontWeight={4}\n                      maxPrecision={5}\n                      number={selectedSlice}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      Funds in {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/idle-mark.png`}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontWeight:3,\n                        fontSize:[3,4]\n                      }}\n                      decimals={3}\n                      fontWeight={4}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      number={this.state.totalAllocation}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.state.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default AllocationChart;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass CustomTooltipRow extends Component {\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              whiteSpace:'nowrap',\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CustomTooltipRow;","import React, { Component } from 'react';\nimport { Flex, Loader, Text } from \"rimble-ui\";\n\nclass FlexLoader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        justifyContent={'center'}\n        {...this.props.flexProps}\n      >\n        <Loader {...this.props.loaderProps} />\n        {\n          this.props.text &&\n            <Text {...this.props.textProps}>{this.props.text}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default FlexLoader;\n","import React, { Component } from \"react\";\nimport { Button, Image, Flex, Text, Icon, Box } from 'rimble-ui';\n\nclass ImageButton extends Component {\n\n  render() {\n\n    const isMobile = typeof this.props.isMobile !== 'undefined' ? this.props.isMobile : false;\n    const image = this.props.imageSrc ? (<Image width={'auto'} src={this.props.imageSrc} {...this.props.imageProps} />) : ( this.props.iconName ? (<Icon name={this.props.iconName} {...this.props.iconProps} />) : null );\n    const caption = (<Text textAlign={ isMobile ? 'left' : 'center'} fontSize={2} fontWeight={3} color={'dark-gray'}>{this.props.caption}</Text>);\n\n    return (\n        <Button\n          color={'white'}\n          borderRadius={3}\n          px={ isMobile ? [3,4] : 4 }\n          py={ isMobile ? 0 : [3,4] }\n          my={ isMobile ? 2 : [2,2] }\n          mx={ isMobile ? 0 : [0,2] }\n          onClick={ this.props.handleClick }\n          height={ isMobile ? '58px' : ['150px','170px']}\n          mainColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          contrastColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          width={this.props.width ? this.props.width : (isMobile ? '100%' : ['150px','170px'])}\n          style={this.props.buttonStyle ? this.props.buttonStyle : (isMobile ? {justifyContent:'flex-start'} : null)}\n          {...this.props.buttonProps}\n        >\n          <>\n            {\n              this.props.badge && (\n                <Box\n                  position={'absolute'}\n                  borderRadius={'16px'}\n                  backgroundColor={ this.props.badge.bgColor ? this.props.badge.bgColor : 'blue' }\n                  style={ isMobile ? {right:'-25px',top:'-17px'} : {right:'-25px',top:'-25px'} }\n                  px={['5px','7px']}\n                  py={['1px','3px']}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={'10px'}\n                    color={ this.props.badge.color ? this.props.badge.color : '#fff' }\n                  >\n                  {this.props.badge.text}\n                  </Text>\n                </Box>\n              )\n            }\n            <Flex flexDirection={ isMobile ? 'row' : 'column'} justifyContent={ isMobile ? 'flex-start' : 'center'} alignItems={'center'}>\n              <Flex width={ isMobile ? '45px' : 1 } mr={ isMobile ? 2 : 0 } justifyContent={ isMobile ? 'flex-start' : 'center' }>\n                { this.props.captionPos && this.props.captionPos === 'top' ? caption : image }\n              </Flex>\n              <Flex width={ isMobile ? 'auto' : 1 } flexDirection={'column'} justifyContent={ isMobile ? 'flex-start' : 'center' } >\n                { this.props.captionPos && this.props.captionPos === 'top' ? image : caption }\n                {\n                  this.props.subcaption && this.props.subcaption.split('\\n').map((v,i) => {\n                    // Smaller caption for second line\n                    if (i){\n                      v = (<small>{v}</small>);\n                    }\n                    return (\n                      <Text key={`subcaption_${i}`} lineHeight={'1.3'} textAlign={ isMobile ? 'left' : 'center'} color={'darkGray'} fontWeight={1} fontSize={1}>{v}</Text>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </>\n        </Button>\n    );\n  }\n}\nexport default ImageButton;\n","import { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquity extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    if (mobileChanged || themeModeChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const etherscanTxs = await this.functionsUtil.getEtherscanTxs(this.props.account,0,'latest',enabledTokens);\n\n    const chartData = [];\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n          \n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.functionsUtil.BNify(0);\n          }\n\n          const balance = amountLent;\n          const action = tx.action;\n          const timeStamp = parseInt(tx.timeStamp);\n          const tokenPrice = this.functionsUtil.BNify(tx.tokenPrice);\n          const idleTokens = this.functionsUtil.BNify(tx.idleTokens);\n\n          if (!tokenPrice.isNaN() && !tokenPrice.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              timeStamp,\n              tokenPrice,\n              idleTokens,\n              tokenAmount\n            });\n          }\n        });\n      }\n    });\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    const currTimestamp = parseInt(new Date().getTime()/1000)+86400;\n\n    const tokensData = {};\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      tokensData[token] = await this.functionsUtil.getTokenApiData(this.props.availableTokens[token].address,isRisk,firstTxTimestamp,null,false,3600);\n    });\n\n    // debugger;\n\n    const idleTokenBalance = {};\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds){\n\n      const foundBalances = {};\n      const tokensBalances = {};\n      timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach(token => {\n\n        let lastTokenData = null;\n        const lastTokenDataUnfiltered = Object.values(tokensData[token]).pop();\n        const filteredTokenData = tokensData[token].filter(tx => (tx.timestamp>=prevTimestamp && tx.timestamp<=timeStamp));\n        if (filteredTokenData && filteredTokenData.length){\n          lastTokenData = filteredTokenData.pop();\n        }\n\n        if (!idleTokenBalance[token]){\n          idleTokenBalance[token] = this.functionsUtil.BNify(0);\n        }\n\n        const tokenConfig = this.props.availableTokens[token];\n        const tokenDecimals = tokenConfig.decimals;\n        let filteredBalances = tokensBalance[token].filter(tx => (tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n        \n        if (!filteredBalances.length){\n          if (prevBalances && prevBalances[token]){\n            filteredBalances = prevBalances[token];\n            const lastFilteredTx = Object.assign([],filteredBalances).pop();\n            const currentBalance = parseFloat(lastFilteredTx.balance);\n\n            // Take idleToken price from API and calculate new balance\n            if (currentBalance>0 && timeStamp>firstTxTimestamp && lastTokenData){\n              const idleTokens = idleTokenBalance[token];\n              const idlePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.idlePrice,tokenDecimals);\n              let newBalance = idleTokens.times(idlePrice);\n\n              // Set new balance and tokenPrice\n              lastFilteredTx.balance = newBalance;\n              lastFilteredTx.tokenPrice = idlePrice;\n              filteredBalances = [lastFilteredTx];\n            }\n          } else {\n            filteredBalances = [{\n              balance:this.functionsUtil.BNify(0),\n              tokenPrice:this.functionsUtil.BNify(0)\n            }];\n          }\n        } else {\n          filteredBalances.forEach(tx => {\n            switch (tx.action){\n              case 'Swap':\n              case 'Deposit':\n              case 'Migrate':\n              case 'Receive':\n              case 'CurveOut':\n                idleTokenBalance[token] = idleTokenBalance[token].plus(tx.idleTokens);\n              break;\n              default:\n                idleTokenBalance[token] = idleTokenBalance[token].minus(tx.idleTokens);\n                if (idleTokenBalance[token].lt(0)){\n                  idleTokenBalance[token] = this.functionsUtil.BNify(0);\n                }\n              break;\n            }\n          });\n        }\n\n        const lastTx = Object.assign([],filteredBalances).pop();\n        // let lastTxBalance = this.functionsUtil.BNify(lastTx.balance);\n        let lastTxBalance = idleTokenBalance[token].times(lastTx.tokenPrice);\n\n        if (lastTxBalance.gt(0)){\n          // Convert token balance to USD\n          let tokenUsdConversionRate = null;\n          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n          if (!this.props.chartToken && conversionRateField){\n            const conversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : (lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null);\n            if (conversionRate){\n              tokenUsdConversionRate = this.functionsUtil.fixTokenDecimals(conversionRate,18);\n              if (tokenUsdConversionRate.gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n          }\n          \n          tokensBalances[token] = lastTxBalance;\n\n          aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n        }\n\n        foundBalances[token] = filteredBalances;\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || (momentDate.isSameOrAfter(startDate) && momentDate.isSameOrBefore(new Date(),'day'))){\n        \n        // if (momentDate.isAfter(new Date(),'day')){\n        //   momentDate = this.functionsUtil.strToMoment(new Date());\n        // }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n\n        // console.log(formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken,'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        format: '%b %d',\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        legendPosition: 'middle',\n        tickValues:'every '+daysFrequency+' days'\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      areaOpacity:this.props.themeMode === 'light' ? 0.1 : 0.5,\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:this.props.theme.colors.legend,\n              fontFamily:this.props.theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            (typeof point.data.balances === 'object' && Object.keys(point.data.balances).length>0) &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquity;","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ChartCustomTooltip extends Component {\n\n  async componentWillMount(){\n\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    \n  }\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos && this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ChartCustomTooltip;\n","import { Button } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass RoundButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      width:1,\n      fontSize:3,\n      fontWeight:3,\n      height:'45px',\n      boxShadow:null,\n      borderRadius:4,\n      mainColor:'blue'\n    },this.props.buttonProps);\n\n    return (\n       <Button\n        {...buttonProps}\n        onClick={this.props.handleClick}\n       >\n        {this.props.children}\n       </Button>\n    );\n  }\n}\n\nexport default RoundButton;\n","import { Link } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass ExtLink extends Component {\n\n  render() {\n    return (\n      <Link\n        target={'_blank'}\n        rel={'nofollow noopener noreferrer'}\n        {...this.props}\n      >\n        {this.props.children}\n      </Link>\n    );\n  }\n}\n\nexport default ExtLink;\n","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from 'polished';\n\n// theme.js\nexport default {\n  breakpoints: ['52em', '64em'],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5,\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: ['0', '4px', '8px', '16px', '2rem'],\n  width: [0, 16, 32, 64, 128, 256],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, '1px solid #eee','1px solid #b6c2ff'],\n  borderWidths: ['0', '1px', '2px', '4px'],\n  shadows: [\n    '0',\n    '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    '0 7px 14px rgba(50,50,93,.1)',\n    '1px 1px 0px rgba(0,0,0,0.2)',\n    '0px 0px 16px 2px rgba(0,54,255,0.3)'\n  ],\n  opacity: {\n    disabled: 0.4,\n  },\n  colors: {\n    primary: blue.base,\n    'gradient-bg': 'linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)',\n    'primary-light': blue.light[1],\n    'primary-dark': blue.dark[1],\n    bgBlue: '#0030e0',\n    blue: '#0036ff',\n    'dark-blue': '#00219a',\n    skyBlue: '#00abfe',\n    lightBlue: '#79f4e1',\n    copyColor: '#3F3D4B',\n    subColor: '#a7a7a7',\n    black: baseColors.black,\n    'near-black': '#111',\n    'dark-gray': '#4e4e4e',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#f4f4f4',\n    white: '#fff',\n    transparent: 'transparent',\n    /*\n    NEW COLORS\n    */\n    arrowActive:'#4f4f4f',\n    arrowInactive:'#d8d8d8',\n    selectBgFocused:'#fbfbfb',\n    selectBg:'#ffffff',\n    backButtonBg:'#ffffff',\n    lineChartStroke:'#dbdbdb',\n    wrongNetworkBannerBg:'#ffffff',\n    dashboardBg: '#f9fafd',\n    statValue: '#959595',\n    boxBorder: '#eeeeee',\n    cellTitle: '#a3a4a5',\n    cellText: '#a6a6a6',\n    divider: '#d8d8d8',\n    counter: '#5d5d5d',\n    redeem: '#00a9fe',\n    deposit: '#0239ff',\n    migrate: '#00a9fe',\n    legend: '#c9c9c9',\n    menuBg:'#fff',\n    menuHover:'#f3f6ff',\n    cardBg:'#fff',\n    flashColor:'#3f4e9a',\n    menuRightBorder:'#eee',\n    cardHoverShadow:'0px 0px 0px 1px rgba(0, 54, 255, 0.3)',\n    cardBgHover:'#f7f8ff',\n    cardBorder:'#eee',\n    transactions:{\n      action:{\n        send:'#10a0dd',\n        swap:'#3d53c0',\n        boost:'#ffff00',\n        redeem:'#10a0dd',\n        swapout:'#10a0dd',\n        deposit:'#3d53c0',\n        curvein:'#10a0dd',\n        receive:'#3d53c0',\n        migrate:'#3d53c0',\n        default:'#4f4f4f',\n        curveout:'#3d53c0',\n        withdraw:'#10a0dd',\n        curvedepositin:'#10a0dd',\n        curvedepositout:'#3d53c0'\n      },\n      actionBg:{\n        send:'#ceeff6',\n        swap:'#ced6ff',\n        boost:'#ff7979',\n        redeem:'#ceeff6',\n        swapout:'#ceeff6',\n        deposit:'#ced6ff',\n        curvein:'#ceeff6',\n        default:'#dadada',\n        receive:'#ced6ff',\n        migrate:'#ced6ff',\n        withdraw:'#ceeff6',\n        curveout:'#ced6ff',\n        curvedepositin:'#ceeff6',\n        curvedepositout:'#ced6ff'\n      },\n      status:{\n        completed:'#00b84a',\n        pending:'#a5a5a5',\n        failed:'#fa0000'\n      }\n    },\n    blacks: [\n      'rgba(0,0,0,.0125)',\n      'rgba(0,0,0,.025)',\n      'rgba(0,0,0,.05)',\n      'rgba(0,0,0,.1)',\n      'rgba(0,0,0,.2)',\n      'rgba(0,0,0,.3)',\n      'rgba(0,0,0,.4)',\n      'rgba(0,0,0,.5)',\n      'rgba(0,0,0,.6)',\n      'rgba(0,0,0,.7)',\n      'rgba(0,0,0,.8)',\n      'rgba(0,0,0,.9)',\n    ],\n    whites: [\n      'rgba(255,255,255,.0125)',\n      'rgba(255,255,255,.025)',\n      'rgba(255,255,255,.05)',\n      'rgba(255,255,255,.1)',\n      'rgba(255,255,255,.2)',\n      'rgba(255,255,255,.3)',\n      'rgba(255,255,255,.4)',\n      'rgba(255,255,255,.5)',\n      'rgba(255,255,255,.6)',\n      'rgba(255,255,255,.7)',\n      'rgba(255,255,255,.8)',\n      'rgba(255,255,255,.9)',\n    ],\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: shade(0.4, '#AAA'),\n      backgroundColor: tint(0.9, '#AAA'),\n      borderColor: '#AAA',\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base,\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base,\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base,\n    },\n    info: {\n      color: shade(0.4, blue.base),\n      backgroundColor: '#f3f6ff',\n      borderColor: '#b6c2ff',\n    },\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      '--main-color': blue.base,\n      '--contrast-color': blue.text,\n    },\n    normal: {\n      color: baseColors.black,\n      '--contrast-color': baseColors.black,\n    },\n    success: {\n      '--main-color': green.base,\n      '--contrast-color': green.text,\n    },\n    danger: {\n      '--main-color': red.base,\n      '--contrast-color': red.text,\n    },\n  },\n  buttonSizes: {\n    small: {\n      fontSize: '0.75rem',\n      height: '2rem',\n      minWidth: '2rem',\n      padding: '0 1rem',\n    },\n    medium: {\n      fontSize: '1rem',\n      height: '3rem',\n      minWidth: '3rem',\n    },\n    large: {\n      fontSize: '1.5rem',\n      height: '4rem',\n      minWidth: '4rem',\n      borderRadius: '2rem'\n    },\n  },\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tooltip\":\"TableCellHeader_tooltip__3xM3k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radioBtn\":\"TransactionListFilters_radioBtn__1vgHa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bg\":\"ModalCard_bg__3ocwQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Web3ConnectionButtons_button__1Wov0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gradientButton\":\"Header_gradientButton__2mrQl\",\"empty\":\"Header_empty__3fhiX\",\"select\":\"Header_select__27Xyx\",\"selectDark\":\"Header_selectDark__EHAAP\",\"input\":\"Header_input__3dr8P\"};","import axios from 'axios';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Progress, Icon, Link } from 'rimble-ui'\n\nclass TxProgressBar extends Component {\n  state = {\n    error:null,\n    ended:false,\n    percentage:0,\n    processing:true,\n    txTimestamp:null,\n    initialized:false,\n    estimatedTime:null,\n    remainingTime:null\n  };\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n\n    this.componentUnmounted = true;\n\n    var id = window.setTimeout(function() {}, 0);\n\n    while (id--) {\n        window.clearTimeout(id); // will do nothing if no timeout with id is present\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps){\n    this.loadUtils();\n\n    if (!this.state.initialized && this.props.web3){\n      this.initProgressBar();\n    }\n  }\n\n  componentDidMount = async () => {\n    this.initProgressBar();\n  }\n\n  getTransaction = async () => {\n    const transaction = await (new Promise( async (resolve, reject) => {\n      this.functionsUtil.customLog('getTransaction',this.props.hash);\n      this.props.web3.eth.getTransaction(this.props.hash,(err,transaction) => {\n        resolve(transaction);\n      });\n    }));\n\n    const newState = {};\n    if (transaction){\n      newState.transaction = transaction;\n    } else {\n      newState.processing = false;\n      newState.error = 'Unable to find the transaction';\n    }\n\n    this.setState(newState);\n    return transaction;\n  }\n\n  /*\n  Taken from https://ethgasstation.info/calculatorTxV.php\n  */\n  _estimateWait (prediction, gasoffered) {\n    var minedProb;\n    var expectedWait;\n    var sum1, sum2;\n    var intercept = 4.2794;\n    var hpa = .0329;\n    var hgo = -3.2836;\n    var tx = -0.0004;\n    var intercept2 = 7.5375;\n    var hpa_coef = -0.0801;\n    var txatabove_coef= 0.0003;\n    var high_gas_coef = .3532;\n\n    if (gasoffered > 1000000) {    \n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + hgo  + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['hashpower_accepting'] * hpa_coef) + (prediction['tx_atabove'] * txatabove_coef) + high_gas_coef;\n    } else {\n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['tx_atabove'] * txatabove_coef) + (prediction['hashpower_accepting'] * hpa_coef);\n    }\n\n    var factor = Math.exp(- 1 * sum1);\n    const prob = 1 / (1 + factor);\n\n    if (prob > .95) {\n      minedProb = 'Very High';\n    } else if (prob > .9 && prob <= .95) {\n      minedProb = 'Medium'\n    } else {\n      minedProb = 'Low';\n    }\n\n    expectedWait = Math.exp(sum2);\n    if (expectedWait < 2) {\n      expectedWait = 2;\n    }\n\n    if (gasoffered > 2000000) {\n      expectedWait += 100;\n    }\n\n    return [expectedWait, prediction['hashpower_accepting'], prediction['tx_atabove'], minedProb];\n  }\n\n  getBlockTime = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/ethgasAPI.json');\n    if (pt){\n      const blockTime = pt.data;\n      this.setState({\n        blockTime\n      });\n      return blockTime;\n    }\n    return null;\n  }\n\n  getPredictionTable = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/predictTable.json');\n    if (pt){\n      const predictTable = pt.data;\n      this.setState({\n        predictTable\n      });\n      return predictTable;\n    }\n    return null;\n  }\n\n  getTxEstimatedTime = (gasPrice) => {\n    let prediction = null;\n    if (this.state.predictTable){\n      this.state.predictTable.forEach((p,i) => {\n        if (!prediction && parseFloat(p.gasprice)>=parseFloat(gasPrice)){\n          prediction = p;\n          return true;\n        }\n      });\n    }\n\n    if (this.state.blockTime && prediction){\n      const pdValues = this._estimateWait(prediction,this.state.transaction.gas);\n      const blocksWait = pdValues[0];\n      const blockInterval = this.state.blockTime.block_time;\n      let txMeanSecs = blocksWait * blockInterval;\n      txMeanSecs = parseInt(txMeanSecs.toFixed(0));\n      this.functionsUtil.customLog('getTxEstimatedTime',prediction,this.state.transaction.gas,pdValues,txMeanSecs);\n      return txMeanSecs; // Customized\n    }\n\n    return null;\n  }\n\n  calculateRemainingTime = async () => {\n    let remainingTime = 0;\n    let estimatedTime = 0;\n\n    if (!this.state.transaction || this.componentUnmounted){\n      return false;\n    }\n\n    if (!this.state.transaction.blockNumber){\n      const gasPrice = parseFloat(this.functionsUtil.BNify(this.state.transaction.gasPrice).div(1e9).toString());\n      remainingTime = this.getTxEstimatedTime(gasPrice);\n    }\n\n    estimatedTime = remainingTime ? remainingTime : 0;\n\n    if (this.state.txTimestamp){\n      const currTimestamp = new Date().getTime();\n      const secondsPassed = parseInt((currTimestamp-parseInt(this.state.txTimestamp))/1000);\n      \n      // Calculate new remaining time\n      remainingTime -= secondsPassed;\n      remainingTime = Math.max(remainingTime,0);\n\n      this.functionsUtil.customLog('Estimated time',estimatedTime,'secondsPassed',secondsPassed,'New remaining time',remainingTime);\n    }\n\n    const timePassed = estimatedTime-remainingTime;\n    const percentage = estimatedTime>0 ? parseFloat(timePassed/estimatedTime) : 1;\n\n    this.setState({\n      estimatedTime,\n      remainingTime,\n      percentage\n    });\n\n    setTimeout(()=>{this.updateProgressBar()},1000);\n  }\n\n  updateProgressBar = () => {\n\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    let remainingTime = this.state.remainingTime;\n    if (remainingTime){\n      remainingTime--;\n      if (!remainingTime){\n        this.setState({\n          percentage:1,\n          ended:true\n        });\n      } else {\n        const timePassed = this.state.estimatedTime-remainingTime;\n        const percentage = parseFloat(timePassed/this.state.estimatedTime);\n        this.setState({\n          percentage,\n          remainingTime\n        });\n        setTimeout(()=>{this.updateProgressBar()},1000);\n      }\n    } else {\n      this.setState({\n        percentage:1,\n        ended:true\n      });\n    }\n  }\n\n  getTxInfo = async () => {\n\n    // Get tx timestamp\n    const txProgressBarKey = `txProgressBarData`;\n    const txHash = this.props.hash.toLowerCase();\n\n    let txProgressBarData = null;\n    let txTimestamp = null;\n    let newState = {};\n\n    if (localStorage){\n      txProgressBarData = localStorage.getItem(txProgressBarKey);\n      if (txProgressBarData){\n        txProgressBarData = JSON.parse(txProgressBarData);\n      }\n    }\n\n    if (!txProgressBarData || !txProgressBarData[txHash]){\n      txTimestamp = new Date().getTime();\n\n      const [predictTable,blockTime] = await Promise.all([\n        this.getPredictionTable(),\n        this.getBlockTime()\n      ]);\n\n      txProgressBarData = {};\n      txProgressBarData[txHash] = {\n        txTimestamp,\n        blockTime,\n        predictTable\n      };\n\n      // Save progress bar status in localStorage\n      this.functionsUtil.setLocalStorage(txProgressBarKey,JSON.stringify(txProgressBarData));\n\n      newState = txProgressBarData[txHash];\n\n      if (!predictTable || !blockTime){\n        newState.error = 'Processing transaction';\n      }\n    }\n\n    this.setState(newState);\n  }\n\n  initProgressBar = async () => {\n\n    if (!this.props.hash || !this.props.web3){\n      return false;\n    }\n\n    const newState = {\n      initialized:true\n    };\n    this.setState(newState);\n\n    const transaction = await this.getTransaction();\n\n    if (transaction){\n      await this.getTxInfo();\n      try{\n        this.calculateRemainingTime();\n      } catch (err) {\n        newState.error = 'Processing transaction';\n\n        // const errStringified = JSON.stringify(err);\n      }\n\n      this.setState(newState);\n    }\n  }\n\n  renderRemainingTime(){\n    // More than 60 seconds\n    if (this.state.remainingTime>60){\n      const minutes = Math.floor(this.state.remainingTime/60);\n      const seconds = this.state.remainingTime-(minutes*60);\n      return ('0'+minutes).substr(-2)+':'+('0'+seconds).substr(-2)+' min';\n    } else {\n      return this.state.remainingTime+'s';\n    }\n  }\n\n  render() {\n    return (\n      <Flex flexDirection={'column'} alignItems={'center'}>\n        {\n          this.state.remainingTime !== null ? (\n            this.state.ended ? (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={this.props.endMessage ? this.props.endMessage : 'Finalizing transaction...'}\n              />\n            ) : (\n              <Flex\n                mb={2}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Text mb={2} color={ this.props.textColor ? this.props.textColor : 'copyColor'}>{ this.props.waitText ? this.props.waitText : 'Remaining time:' } <Text.span color={ this.props.textColor ? this.props.textColor : 'copyColor'} fontWeight={3}>{ this.renderRemainingTime() }</Text.span></Text>\n                <Progress value={ this.state.percentage } />\n              </Flex>\n            )\n          ) : (\n            this.state.error !== null && !this.state.processing ? (\n              <Flex\n                alignItems={'center'}\n                flexDirection={'column'}\n              >\n                <Icon\n                  size={'2em'}\n                  name={'Warning'}\n                  color={'cellText'}\n                />\n                <Text\n                  mt={0}\n                  fontSize={2}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  {this.state.error}\n                </Text>\n              </Flex>\n            ) : (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={ this.state.error ? this.state.error : (this.props.hash ? (this.props.loadingMessage ? this.props.loadingMessage : 'Calculating estimated time...') : (this.props.sendingMessage ? this.props.sendingMessage : 'Sending transaction...') ) }\n              />\n            )\n          )\n        }\n        {\n          this.props.hash ? (\n            <Link\n              mt={0}\n              target={'_blank'}\n              hoverColor={'dark-gray'}\n              rel={\"nofollow noopener noreferrer\"}\n              href={`https://etherscan.io/tx/${this.props.hash}`}\n              color={this.props.textColor ? this.props.textColor : 'cellText'}\n            >\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <Text\n                  fontSize={0}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  View in Etherscan\n                </Text>\n                <Icon\n                  ml={1}\n                  size={'0.75em'}\n                  name={'OpenInNew'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                />\n              </Flex>\n            </Link>\n          ) : typeof this.props.cancelTransaction === 'function' ? (\n              <Link\n                mt={0}\n                href={`javascript:void(0)`}\n                onClick={ e => this.props.cancelTransaction() }\n                color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                hoverColor={this.props.cancelTextHoverColor ? this.props.cancelTextHoverColor : 'dark-gray'}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'center'}\n                >\n                  <Text\n                    fontSize={0}\n                    textAlign={'center'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  >\n                    Cancel transaction\n                  </Text>\n                  <Icon\n                    ml={1}\n                    size={'0.85em'}\n                    name={'Cancel'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  />\n                </Flex>\n              </Link>\n          ) : null\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TxProgressBar;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass AssetSelector extends Component {\n\n  state = {\n    options:null,\n    defaultValue:null,\n    CustomOptionValue:null,\n    CustomValueContainer:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadComponents(){\n    const options = Object.keys(this.props.availableTokens).map(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      return {\n        value:token,\n        label:token,\n        tokenConfig\n      };\n    });\n\n    const defaultValue = this.props.selectedToken ? options.find(v => (v.value.toUpperCase() === this.props.selectedToken.toUpperCase())) : null;\n\n    const CustomOptionValue = props => {\n      const token = props.value;\n      const tokenConfig = props.data.tokenConfig;\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n          {\n            this.state.props.showCustomField ? (\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:this.state.props.showCustomField,\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n            ) : this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : defaultValue;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const token = selectProps.value;\n      const tokenConfig = selectProps.tokenConfig;\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n\n          {\n            this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    this.setState({\n      options,\n      defaultValue,\n      CustomOptionValue,\n      CustomValueContainer\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadComponents();\n\n    this.setState({\n      props:this.props\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const availableTokensChanged = JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n    if (availableTokensChanged || selectedTokenChanged){\n      this.loadComponents();\n    }\n  }\n\n  render() {\n    if (!this.state.options || !this.state.defaultValue || !this.state.CustomOptionValue || !this.state.CustomValueContainer || !this.props.availableTokens || !Object.keys(this.props.availableTokens).length){\n      return null;\n    }\n\n    return (\n      <GenericSelector\n        {...this.props}\n        name={'assets'}\n        options={this.state.options}\n        innerProps={this.props.innerProps}\n        isSearchable={this.props.isSearchable}\n        defaultValue={this.state.defaultValue}\n        selectedToken={this.props.selectedToken}\n        CustomOptionValue={this.state.CustomOptionValue}\n        CustomValueContainer={this.state.CustomValueContainer}\n        onChange={ this.props.onChange ? this.props.onChange : this.props.changeToken}\n      />\n    );\n  }\n}\n\nexport default AssetSelector;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"Tos_headerContainer__23W_f\",\"headerBgFiller\":\"Tos_headerBgFiller__36Nfk\",\"bgContainer\":\"Tos_bgContainer__rX7uJ\",\"list\":\"Tos_list__3bMLG\",\"textContainer\":\"Tos_textContainer__3hUuq\"};","import theme from '../theme';\nimport React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Icon, Link, Image } from \"rimble-ui\";\nimport ShortHash from \"../utilities/components/ShortHash\";\n\nclass TransactionField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadField();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const hashChanged = prevProps.hash !== this.props.hash;\n    const accountChanged = prevProps.account !== this.props.account;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    if (fieldChanged || hashChanged || accountChanged){\n      this.loadField();\n    }\n  }\n\n  async loadField(){\n    const fieldInfo = this.props.fieldInfo;\n    if (this.props.hash && this.props.account){\n      switch (fieldInfo.name){\n        case 'icon':\n        break;\n        case 'hash':\n          \n        break;\n        case 'action':\n          \n        break;\n        case 'date':\n        break;\n        case 'status':\n        break;\n        case 'amount':\n        break;\n        case 'asset':\n        break;\n        default:\n        break;\n      }\n    }\n  }\n\n  render(){\n    let icon = null;\n    let color = null;\n    let output = null;\n    let bgColor = theme.colors.transactions.actionBg.default;\n    const fieldInfo = this.props.fieldInfo;\n    const transaction = this.props.transaction;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      style:{\n        maxWidth:'100%',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis'\n      },\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    switch (fieldInfo.name){\n      case 'icon':\n        if (transaction.action){\n          color = theme.colors.transactions.action[transaction.action.toLowerCase()] ? theme.colors.transactions.action[transaction.action.toLowerCase()] : color;\n          bgColor = theme.colors.transactions.actionBg[transaction.action.toLowerCase()] ? theme.colors.transactions.actionBg[transaction.action.toLowerCase()] : bgColor;\n        }\n        switch (transaction.action.toLowerCase()) {\n          case 'deposit':\n          case 'curveout':\n          case 'curvezapout':\n          case 'curvedepositout':\n            icon = \"ArrowDownward\";\n          break;\n          case 'boost':\n            icon = \"TrendingUp\";\n          break;\n          case 'redeem':\n          case 'curvein':\n          case 'curvezapin':\n          case 'curvedepositin':\n            icon = \"ArrowUpward\";\n          break;\n          case 'send':\n            icon = \"Send\";\n          break;\n          case 'receive':\n            icon = \"Redo\";\n          break;\n          case 'migrate':\n            // icon = \"Sync\";\n            icon = \"Repeat\";\n          break;\n          case 'swap':\n            icon = \"SwapHoriz\";\n          break;\n          case 'swapout':\n            icon = \"SwapHoriz\";\n          break;\n          case 'withdraw':\n            icon = \"ArrowUpward\";\n          break;\n          default:\n            icon = \"Refresh\";\n          break;\n        }\n        output = (\n          <Flex\n            p={'5px'}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            backgroundColor={bgColor}\n            justifyContent={'center'}\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={this.props.isMobile ? '1em' : '1.4em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'hash':\n        if (transaction.hash){\n          output = (\n            <Link\n              target={'_blank'}\n              rel={'nofollow noopener noreferrer'}\n              href={`https://etherscan.io/tx/${transaction.hash}`}\n            >\n              <ShortHash\n                fontSize={1}\n                color={'white'}\n                {...fieldProps}\n                hash={transaction.hash}\n              />\n            </Link>\n          );\n        }\n      break;\n      case 'action':\n        let action = transaction.action;\n        switch (transaction.action) {\n          case 'Swap':\n            action = \"Swap In\";\n          break;\n          case 'SwapOut':\n            action = \"Swap Out\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Text {...fieldProps}>{action.toUpperCase()}</Text>\n        );\n      break;\n      case 'date':\n        const formattedDate = transaction.momentDate.format('DD MMM, YYYY');\n        output = (\n          <Text {...fieldProps}>{formattedDate}</Text>\n        );\n      break;\n      case 'statusIcon':\n        color = theme.colors.transactions.status[transaction.status.toLowerCase()];\n        switch (transaction.status) {\n          case 'Completed':\n            icon = \"Done\";\n          break;\n          case 'Pending':\n            icon = \"Timelapse\";\n          break;\n          case 'Failed':\n            icon = \"ErrorOutline\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Flex\n            p={[0,'1px']}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            width={['24px','26px']}\n            height={['24px','26px']}\n            justifyContent={'center'}\n            border={ this.props.isMobile ? `1px solid ${color}` : `2px solid ${color}` }\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={ this.props.isMobile ? '1em' : '1.2em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'status':\n        output = (\n          <Text {...fieldProps}>{transaction.status}</Text>\n        );\n      break;\n      case 'amount':\n        output = (\n          <SmartNumber {...fieldProps} number={transaction.amount} />\n        );\n      break;\n      case 'tokenIcon':\n        output = (\n          <Image src={`images/tokens/${transaction.tokenSymbol.toUpperCase()}.svg`} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        output = (\n          <Text {...fieldProps}>{transaction.tokenSymbol}</Text>\n        );\n      break;\n      default:\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TransactionField;\n","import Select from 'react-select';\nimport React, { Component } from 'react';\nimport { Flex, Text, Input } from \"rimble-ui\";\nimport styles from './GenericSelector.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass GenericSelector extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadComponents();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const optionsChanged = JSON.stringify(prevProps.options) !== JSON.stringify(this.props.options);\n    const defaultValueChanged = JSON.stringify(prevProps.defaultValue) !== JSON.stringify(this.props.defaultValue);\n    const componentsChanged = prevProps.CustomOptionValue !== this.props.CustomOptionValue || prevProps.CustomValueContainer !== this.props.CustomValueContainer;\n\n    if (optionsChanged || selectedTokenChanged || defaultValueChanged || componentsChanged){\n      this.loadComponents();\n    }\n  }\n\n  async loadComponents(){\n    \n    const ControlComponent = props => {\n      const cardProps = Object.assign(\n        props.innerProps,\n        {\n          p:2,\n          width:1,\n          style:{cursor:'pointer'}\n        },\n        (this.props.innerProps ? this.props.innerProps : {})\n      );\n\n      if (props.menuIsOpen){\n        cardProps.boxShadow = 4;\n      }\n      return (\n        <DashboardCard\n          isInteractive={true}\n          cardProps={cardProps}\n        >\n          <Flex\n            width={1}\n            flexDirection={'row'}\n          >\n            {props.children}\n          </Flex>\n        </DashboardCard>\n      );\n    };\n\n    const CustomIndicatorSeparator = props => null;\n\n    const CustomMenu = props => {\n      const cardProps = Object.assign(props.innerProps,{\n        mt:2,\n        zIndex:1,\n        boxShadow:null,\n        position:'absolute'\n      });\n      return (\n        <DashboardCard\n          cardProps={cardProps}\n        >\n          {props.children}\n        </DashboardCard>\n      );\n    }\n\n    const CustomValueContainer = this.props.CustomValueContainer ? this.props.CustomValueContainer : props => {\n      return (\n        <Flex\n          {...props.innerProps}\n        >\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text\n              fontWeight={3}\n            >\n              {props.selectProps.value.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomOptionValue = this.props.CustomOptionValue ? this.props.CustomOptionValue : (props) => {\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n        >\n          <Text>\n            {props.label}\n          </Text>\n        </Flex>\n      );\n    };\n\n    const CustomInputContainer = this.props.CustomInputContainer ? this.props.CustomInputContainer : (props) => {\n\n      if (!props.selectProps.isSearchable){\n        return null;\n      }\n\n      return (\n        <Input\n          {...props}\n          fontSize={this.props.theme.fontSizes[2]}\n          color={this.props.theme.colors.copyColor}\n          fontWeight={this.props.theme.fontWeights[3]}\n          fontFamily={this.props.theme.fonts.sansSerif}\n          backgroundColor={this.props.theme.colors.cardBg}\n          className={[styles.searchInput,this.props.themeMode==='dark' ? styles.dark : null,!props.selectProps.menuIsOpen ? styles.searchInputHidden : null]}\n        />\n      );\n    };\n\n    const CustomOption = (props) => {\n\n      const options = props.selectProps.options;\n      let selectedValue = props.selectProps && props.selectProps.value && props.selectProps.value.value;\n\n      // Check if the selectedValue is included in options\n      if (selectedValue && options.map( o => o.value ).indexOf(selectedValue) === -1 && this.props.defaultValue){\n        selectedValue = this.props.defaultValue.value;\n      }\n\n      // Don't show selected value\n      if (selectedValue && selectedValue === props.value){\n        return null;\n      }\n\n      return (\n        <Flex\n          px={3}\n          py={2}\n          width={1}\n          {...props.innerProps}\n          alignItems={'center'}\n          flexDirection={'row'}\n          style={{cursor:'pointer'}}\n          justifyContent={'flex-start'}\n          className={styles.genericSelector}\n          backgroundColor={ props.isFocused ? 'selectBgFocused' : 'selectBg' }\n        >\n          <CustomOptionValue\n            {...props}\n          />\n        </Flex>\n      );\n    }\n\n    await this.setState({\n      CustomMenu,\n      CustomOption,\n      ControlComponent,\n      CustomValueContainer,\n      CustomInputContainer,\n      CustomIndicatorSeparator\n    });\n  }\n\n  render() {\n    const isSearchable = typeof this.props.isSearchable !== 'undefined' ? this.props.isSearchable : false;\n    return (\n      <Select\n        name={this.props.name}\n        isSearchable={isSearchable}\n        options={this.props.options}\n        defaultValue={this.props.defaultValue}\n        onChange={ v => this.props.onChange(v.value) }\n        components={{\n            Menu: this.state.CustomMenu,\n            Option: this.state.CustomOption,\n            Control: this.state.ControlComponent,\n            Input: this.state.CustomInputContainer,\n            SingleValue: this.state.CustomValueContainer,\n            IndicatorSeparator: this.state.CustomIndicatorSeparator\n        }}\n      />\n    );\n  }\n}\n\nexport default GenericSelector;\n","import { Heading } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass Title extends Component {\n  render() {\n    const props = {\n      fontWeight:4,\n      fontSize:[4,6],\n      color:'copyColor',\n      textAlign:'center',\n      lineHeight:'initial',\n    };\n\n    // Replace props\n    if (this.props && Object.keys(this.props).length){\n      Object.keys(this.props).forEach(p => {\n        props[p] = this.props[p];\n      });\n    }\n\n    const HeadingComponent = this.props.component ? this.props.component : Heading.h1;\n\n    return (\n      <HeadingComponent\n        {...props}\n      >\n        {this.props.children}\n      </HeadingComponent>\n    );\n  }\n}\n\nexport default Title;\n","/*\nTheming: https://github.com/plouc/nivo/issues/308\n*/\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n\nclass GenericChart extends Component {\n  state = {\n    width:null,\n    height:null\n  };\n\n  componentUnmounted = false;\n\n  componentWillMount() {\n    window.addEventListener('resize', this.handleWindowSizeChange.bind(this));\n  }\n\n  componentWillUnmount() {\n    this.componentUnmounted = true;\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidMount(){\n    this.handleWindowSizeChange();\n  }\n\n  componentDidUpdate(prevProps){\n    if (prevProps.isMobile !== this.props.isMobile){\n      this.handleWindowSizeChange();\n    }\n  }\n\n  handleWindowSizeChange(){\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    const newState = {...this.state};\n\n    if (this.props.parentId){\n      const chartContainer = document.getElementById(this.props.parentId);\n      if (chartContainer){\n        const chartWidth = parseFloat(chartContainer.offsetWidth)>0 ? chartContainer.offsetWidth : 0;\n\n        if (chartWidth && chartWidth !== newState.width){\n          newState.width = chartWidth;\n        }\n      }\n    }\n\n    if (!newState.width && this.props.width && this.props.width !== newState.width) {\n      newState.width = this.props.width;\n    }\n\n    if (this.props.parentIdHeight){\n      const chartContainerH = document.getElementById(this.props.parentIdHeight);\n      if (chartContainerH){\n        const chartHeight = parseFloat(chartContainerH.offsetWidth)>0 ? chartContainerH.offsetWidth : 0;\n        if (chartHeight && chartHeight !== newState.height){\n          newState.height = chartHeight;\n        }\n      }\n    }\n\n    if (!newState.height && this.props.height && this.props.height !== newState.height) {\n      newState.height = this.props.height;\n    }\n\n    if (Object.keys(newState).length>0){\n      this.setState(newState);\n    }\n  };\n\n  render() {\n    const ChartType = this.props.type;\n\n    const height = this.state.height && !isNaN(this.state.height) ? parseInt(this.state.height) : 350;\n    const width = this.state.width && !isNaN(this.state.width) ? parseInt(this.state.width) : 0;\n\n    let chartProps = Object.assign({},this.props);\n    chartProps = {\n      ...chartProps,\n      height,\n      width\n    }\n\n    return chartProps.showLoader && (!chartProps.data || !width || !height) ? (\n      <FlexLoader\n        flexProps={{\n          flexDirection:'row',\n          minHeight:height\n        }}\n        loaderProps={ this.props.loaderProps ? this.props.loaderProps : {\n          size:'30px'\n        }}\n        textProps={{\n          ml:2\n        }}\n        text={ this.props.loaderText !== undefined ? this.props.loaderText : 'Loading graph data...'}\n      />\n    ) : this.props.data && (\n      <ChartType\n        {...chartProps}\n      />\n    )\n  }\n}\n\nexport default GenericChart;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"defaultOpacity\":\"DashboardCard_defaultOpacity__1B1rs\",\"hidden\":\"DashboardCard_hidden__8pO5t\",\"interactive\":\"DashboardCard_interactive__2adxr\",\"rainbow\":\"DashboardCard_rainbow__3HCI7\",\"disabled\":\"DashboardCard_disabled__uqHO2\"};","import { Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass FastBalanceSelector extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n\n    let cardProps = {\n      p:2,\n      width:0.23,\n      onMouseDown:this.props.onMouseDown\n    };\n\n    let textProps = {\n      fontSize:2,\n      fontWeight:3,\n      textAlign:'center',\n      color:this.props.isActive ? 'copyColor' : 'legend'\n    }\n\n    cardProps = this.functionsUtil.replaceArrayProps(cardProps,this.props.cardProps);\n    textProps = this.functionsUtil.replaceArrayProps(textProps,this.props.textProps);\n\n    return (\n      <DashboardCard\n        isInteractive={true}\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n      >\n        <Text \n          {...textProps}\n        >\n          {this.props.percentage}%\n        </Text>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default FastBalanceSelector;","import React, { Component } from 'react';\nimport { Flex, Box, Text, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\n\nclass TokenSwap extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async loadKyberWidget(){\n\n    if (!this.state.selectedFromToken || !this.state.selectedDestToken){\n      return false;\n    }\n\n    const provider = 'kyberSwap';\n    const providerInfo = this.functionsUtil.getGlobalConfig(['payments','providers',provider]);\n    if (providerInfo.enabled && providerInfo.remoteResources){\n\n      const globalConfigs = this.functionsUtil.getGlobalConfigs();\n      const remoteResources = providerInfo.remoteResources;\n\n      Object.keys(remoteResources).forEach((url,j) => {\n\n        const resourceType = url.split('.').pop().toLowerCase();\n\n        switch (resourceType){\n          case 'js':\n            const scriptID = `script_${provider}_${j}_${this.state.selectedFromToken}_${this.state.selectedDestToken}`;\n\n            if (!document.getElementById(scriptID)){\n              const script = document.createElement(\"script\");\n              const remoteResourceParams = remoteResources[url];\n              const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n              const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n              if (precall && typeof precall === 'function'){\n                const precallProps = {\n                  baseToken:this.state.selectedFromToken,\n                  selectedToken:this.state.selectedDestToken,\n                  buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n                };\n                precall(precallProps,globalConfigs,providerInfo);\n              }\n\n              if (callback && typeof callback === 'function'){\n                if (script.readyState) {  // only required for IE <9\n                  script.onreadystatechange = function() {\n                    if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                      script.onreadystatechange = null;\n                      callback();\n                    }\n                  };\n                } else {  //Others\n                  script.onload = callback;\n                }\n              }\n\n              script.id = scriptID;\n              script.className = `script_${provider}`;\n              script.src = url;\n              script.async = true;\n\n              if (remoteResourceParams && remoteResourceParams.parentElement){\n                remoteResourceParams.parentElement.appendChild(script)\n              } else {\n                document.head.appendChild(script);\n              }\n            }\n          break;\n          case 'css':\n            const stylesheetId = `stylesheet_${provider}_${j}`;\n\n            if (!document.getElementById(stylesheetId)){\n              const style = document.createElement(\"link\");\n\n              style.id = stylesheetId;\n              style.rel = 'stylesheet';\n              style.href = url;\n\n              document.head.appendChild(style);\n            }\n          break;\n          default:\n          break;\n        }\n      });\n    }\n\n    this.setState({\n      providerInfo\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const fromTokenChanged = prevState.selectedFromToken !== this.state.selectedFromToken;\n    const destTokenChanged = prevState.selectedDestToken !== this.state.selectedDestToken;\n    if ((fromTokenChanged ||  destTokenChanged) && this.state.selectedFromToken && this.state.selectedDestToken){\n      this.loadKyberWidget();\n    }\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n    const supportedTokens = this.functionsUtil.getGlobalConfig(['payments','providers','kyberSwap','supportedTokens']);\n\n    supportedTokens.forEach( token => {\n      if (token !== selectedFromToken){\n        if (!selectedDestToken){\n          selectedDestToken = token;\n        }\n        availableDestinationTokens[token] = {\n          token\n        };\n      }\n    });\n\n    const baseToken = this.functionsUtil.getGlobalConfig(['baseToken']);\n    if (baseToken !== selectedFromToken){\n      availableDestinationTokens[baseToken] = {\n        token:baseToken\n      };\n    }\n\n    this.setState({\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n    this.setState({\n      selectedDestToken\n    });\n  }\n\n  swap = () => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    const paymentProvider = this.state.providerInfo;\n    const initProps = {\n      baseToken:this.state.selectedFromToken,\n      selectedToken:this.state.selectedDestToken,\n      buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    };\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(initProps,globalConfigs) : null;\n\n    // Render the Payment Provider\n    if (typeof paymentProvider.render === 'function'){\n      paymentProvider.render(initParams,null,initProps);\n    }\n\n    // Send GA event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Tools',\n      eventAction: 'TokenSwap',\n      eventLabel: `${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to swap:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              showBalance={false}\n              isSearchable={true}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  showBalance={false}\n                  isSearchable={true}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          <Flex\n            mt={2}\n            width={1}\n            justifyContent={'center'}\n          >\n            <Button\n              my={2}\n              mx={[0, 2]}\n              size={'medium'}\n              borderRadius={4}\n              mainColor={'blue'}\n              onClick={ e => this.swap(e) }\n              disabled={ !this.state.selectedFromToken || !this.state.selectedDestToken }\n            >\n              SWAP TOKENS\n            </Button>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenSwap;\n","import React, { Component } from 'react';\nimport IconBox from '../IconBox/IconBox';\nimport ExtLink from '../ExtLink/ExtLink';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Box, Text, Icon, Link, Input } from \"rimble-ui\";\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\n\nclass SendTxWithBalance extends Component {\n\n  state = {\n    processing:{\n      txHash:null,\n      loading:false\n    },\n    inputValue:null,\n    txSucceeded:false,\n    buttonDisabled:true,\n    contractApproved:false,\n    fastBalanceSelector:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    await this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = prevProps.action !== this.props.action;\n    const accountChanged = prevProps.account !== this.props.account;\n    const tokenBalanceChanged = prevProps.tokenBalance !== this.props.tokenBalance;\n    const contractChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    if (actionChanged || accountChanged || tokenBalanceChanged || contractChanged || tokenConfigChanged){\n      await this.loadData();\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    if (contractApprovedChanged){\n      if (typeof this.props.contractApproved === 'function'){\n        this.props.contractApproved(this.state.contractApproved);\n      }\n    }\n\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector !== prevState.fastBalanceSelector;\n    if (fastBalanceSelectorChanged || actionChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      if (typeof this.props.changeInputCallback === 'function'){\n        this.props.changeInputCallback(this.state.inputValue);\n      }\n      this.checkButtonDisabled();\n    }\n  }\n\n  changeInputValue = (e) => {\n    const fastBalanceSelector = null;\n    const inputValue = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n    this.setState((prevState) => ({\n      inputValue,\n      fastBalanceSelector\n    }));\n  }\n\n  setInputValue = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n    const inputValue = this.props.tokenBalance ? this.functionsUtil.BNify(this.props.tokenBalance).times(selectedPercentage) : null;\n    this.setState({\n      inputValue\n    });\n  }\n\n  getFastBalanceSelector = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    return this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n  }\n\n  setFastBalanceSelector = (fastBalanceSelector) => {\n    this.setState({\n      fastBalanceSelector\n    });\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!amount){\n      amount = this.state.inputValue;\n    }\n    amount = this.functionsUtil.BNify(amount);\n    const buttonDisabled = amount.isNaN() || amount.lte(0) || amount.gt(this.props.tokenBalance);\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  approve = async () => {\n    // Check if the migration contract is approved\n    const contractApproved = await this.checkContractApproved();\n\n    if (!contractApproved){\n\n      const callbackApprove = (tx,error) => {\n        // Send Google Analytics event\n        const eventData = {\n          eventAction: 'approve',\n          eventCategory: 'CurveDeposit',\n          eventLabel: tx ? tx.status : null\n        };\n\n        const txSucceeded = tx && tx.status === 'success';\n\n        if (error){\n          eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n        }\n\n        // Send Google Analytics event\n        if (error || eventData.status !== 'error'){\n          this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n        }\n\n        this.setState((prevState) => ({\n          contractApproved: txSucceeded, // True\n          processing: {\n            ...prevState.processing,\n            txHash:null,\n            loading:false\n          }\n        }));\n\n        if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n          this.props.callbackApprove(tx);\n        }\n      };\n\n      const callbackReceiptApprove = (tx) => {\n        const txHash = tx.transactionHash;\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            txHash\n          }\n        }));\n      };\n\n      this.functionsUtil.enableERC20(this.props.tokenConfig.token,this.props.contractInfo.address,callbackApprove,callbackReceiptApprove);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash:null,\n          loading:true\n        },\n        contractApproved:false\n      }));\n    } else {\n      this.setState({\n        contractApproved:true\n      });\n    }\n  }\n\n  executeTx = async () => {\n\n    const inputValue = this.state.inputValue ? this.functionsUtil.BNify(this.state.inputValue) : null;\n    if (!inputValue){\n      return false;\n    }\n\n    const _amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n    const params = await this.props.getTransactionParams(_amount);\n\n    const callback = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventLabel: tx.status,\n        eventCategory: `CurveDeposit`,\n        eventValue: inputValue.toFixed(),\n        eventAction: this.props.tokenConfig.token,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState({\n        txSucceeded,\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      });\n\n      if (txSucceeded){\n        // Reset input\n        this.changeInputValue({\n          target:{\n            value:0\n          }\n        });\n        // Call upper component callback\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx,_amount,params);\n        }\n      }\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    if (params){\n      const {\n        methodName,\n        methodParams\n      } = params;\n\n      const value = params.value || null;\n\n      const contractName = this.props.contractInfo.name;\n      this.props.contractMethodSendWrapper(contractName, methodName, methodParams, value, callback, callbackReceipt);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:true\n        }\n      }));\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async checkContractApproved(){\n\n    if (this.props.approveEnabled !== undefined && !this.props.approveEnabled){\n      return true;\n    }\n\n    const contractInfo = await this.props.initContract(this.props.contractInfo.name,this.props.contractInfo.address,this.props.contractInfo.abi);\n    if (contractInfo){\n      const contractApproved = await this.functionsUtil.checkTokenApproved(this.props.tokenConfig.token,this.props.contractInfo.address,this.props.account);\n      return contractApproved;\n    }\n    return null;\n  }\n\n  async loadData(){\n    const inputValue = null;\n    const contractApproved = await this.checkContractApproved();\n    this.setState({\n      inputValue,\n      contractApproved\n    });\n  }\n\n  approveCallback = () => {\n    this.loadData();\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'stretch'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          this.props.tokenConfig && this.props.tokenBalance && this.functionsUtil.BNify(this.props.tokenBalance).gt(0) ? (\n            <Box\n              width={1}\n            >\n              {\n                this.props.infoBox && (\n                  <IconBox\n                    cardProps={{\n                      mb:3\n                    }}\n                    {...this.props.infoBox}\n                  />\n                )\n              }\n              {\n                this.props.steps && this.props.steps.length>0 && (\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                      px:[2,4]\n                    }}\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    > \n                      {\n                        this.props.steps.map( (step,stepIndex) => (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            key={`step_${stepIndex}`}\n                          >\n                            <Icon\n                              size={'1.5em'}\n                              name={ step.completed ? 'CheckBox' : step.icon}\n                              color={ step.completed ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                            />\n                            {\n                              step.link ? (\n                                <ExtLink\n                                  ml={2}\n                                  fontSize={2}\n                                  color={'blue'}\n                                  fontWeight={1}\n                                  href={step.link}\n                                  textAlign={'left'}\n                                  hoverColor={'blue'}\n                                >\n                                  {step.description}\n                                </ExtLink>\n                              ) : (\n                                <Text\n                                  ml={2}\n                                  fontSize={2}\n                                  fontWeight={1}\n                                  color={'cellText'}\n                                  textAlign={'left'}\n                                >\n                                  {step.description}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        ) )\n                      }\n                    </Flex>\n                  </DashboardCard>\n                )\n              }\n              {\n                !this.state.contractApproved ?\n                  this.state.processing.loading ? (\n                    <Flex\n                      mt={3}\n                      flexDirection={'column'}\n                    >\n                      <TxProgressBar\n                        web3={this.props.web3}\n                        waitText={`Approve estimated in`}\n                        hash={this.state.processing.txHash}\n                        endMessage={`Finalizing approve request...`}\n                        cancelTransaction={this.cancelTransaction.bind(this)}\n                      />\n                    </Flex>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3,\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'LockOpen'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          {this.props.approveDescription}\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:3,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.approve.bind(this)}\n                        >\n                          Approve\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  )\n                : this.state.processing.loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      web3={this.props.web3}\n                      waitText={`Deposit estimated in`}\n                      hash={this.state.processing.txHash}\n                      endMessage={`Finalizing deposit request...`}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                    />\n                  </Flex>\n                ) : (\n                  <Box\n                    mt={2}\n                    width={1}\n                  >\n                    <Flex\n                      mt={2}\n                      mb={3}\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        mb={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                      >\n                        {\n                          this.props.balanceSelectorInfo && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                textAlign={'left'}\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                                color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                              >\n                                {this.props.balanceSelectorInfo.text}\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                        {\n                          this.props.tokenBalance && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'flex-end'}\n                            >\n                              <Link\n                                fontSize={1}\n                                fontWeight={3}\n                                color={'dark-gray'}\n                                textAlign={'right'}\n                                hoverColor={'copyColor'}\n                                onClick={ (e) => this.setFastBalanceSelector(100) }\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                              >\n                                Balance: {this.props.tokenBalance.toFixed(this.props.isMobile ? 2 : 4)} {this.props.tokenConfig.token}\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                      <Input\n                        min={0}\n                        type={\"number\"}\n                        required={true}\n                        height={'3.4em'}\n                        borderRadius={2}\n                        fontWeight={500}\n                        borderColor={'cardBorder'}\n                        backgroundColor={'cardBg'}\n                        boxShadow={'none !important'}\n                        placeholder={`Insert amount`}\n                        onChange={this.changeInputValue.bind(this)}\n                        border={`1px solid ${this.props.theme.colors.divider}`}\n                        value={this.state.inputValue !== null ? this.functionsUtil.BNify(this.state.inputValue).toFixed() : ''}\n                      />\n                      <Flex\n                        mt={2}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        {\n                          [25,50,75,100].map( percentage => (\n                            <FastBalanceSelector\n                              percentage={percentage}\n                              key={`selector_${percentage}`}\n                              onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                              isActive={this.state.fastBalanceSelector === parseInt(percentage)}\n                            />\n                          ))\n                        }\n                      </Flex>\n                      <Flex\n                        mt={2}\n                        justifyContent={'center'}\n                      >\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2],\n                            style:{\n                              textTransform:'capitalize'\n                            },\n                            disabled:this.state.buttonDisabled\n                          }}\n                          handleClick={this.executeTx.bind(this)}\n                        >\n                          {this.props.action}\n                        </RoundButton>\n                      </Flex>\n                    </Flex>\n                  </Box>\n                )\n              }\n            </Box>\n          ) : this.props.children\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SendTxWithBalance;","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass ETHWrapper extends Component {\n\n  state = {\n    action:null,\n    infoBox:null,\n    balanceETH:null,\n    balanceWETH:null,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    approveEnabled:true,\n    approveDescription:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadBalance();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = prevState.action !== this.state.action;\n    if (actionChanged){\n      this.updateActionData();\n    }\n  }\n\n  async loadBalance(){\n\n    // Init Contract\n    await this.props.initContract(this.props.toolProps.contract.name,this.props.toolProps.contract.address,this.props.toolProps.contract.abi);\n\n    // Load Balances\n    const [\n      balanceETH,\n      balanceWETH\n    ] = await Promise.all([\n      this.functionsUtil.getETHBalance(this.props.account),\n      this.functionsUtil.getTokenBalance('WETH',this.props.account)\n    ]);\n\n    const action = this.state.action || 'wrap';\n    const tokenBalance = action === 'wrap' ? balanceETH : balanceWETH;\n\n    this.setState({\n      action,\n      balanceETH,\n      balanceWETH,\n      tokenBalance\n    });\n  }\n\n  updateActionData(){\n    let infoBox = null;\n    let tokenConfig = null;\n    let tokenBalance = null;\n    let selectedToken = null;\n    let approveEnabled = true;\n    let approveDescription = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        selectedToken = 'ETH';\n        approveEnabled = true;\n        tokenConfig = {\n          token:'ETH',\n          decimals:18\n        };\n        tokenBalance = this.state.balanceETH;\n        approveDescription = 'To Mint new WETH you need to approve the Smart-Contract first';\n        infoBox = {\n          icon:'FileDownload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.deposit\n          // },\n          text:`Wrap your ETH and get WETH with a 1:1 ratio`\n        };\n      break;\n      case 'unwrap':\n        selectedToken = 'WETH';\n        approveEnabled = false;\n        tokenBalance = this.state.balanceWETH;\n        tokenConfig = this.props.toolProps.contract;\n        approveDescription = 'To withdraw your ETH you need to approve the Smart-Contract first';\n        infoBox = {\n          icon:'FileUpload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.redeem\n          // },\n          text:`Unwrap your WETH and get back ETH with a 1:1 ratio`\n        };\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      infoBox,\n      tokenConfig,\n      tokenBalance,\n      selectedToken,\n      approveEnabled,\n      approveDescription\n    });\n  }\n\n  setAction(action){\n    this.setState({\n      action\n    });\n  }\n\n  transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        const mintLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.contract.address.toLowerCase() ) : null;\n        let mintedAmount = mintLog ? parseInt(mintLog.data,16) : amount;\n        mintedAmount = this.functionsUtil.fixTokenDecimals(mintedAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${mintedAmount.toFixed(4)} WETH</strong>`\n        }\n      break;\n      case 'unwrap':\n        const withdrawLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.contract.address.toLowerCase() ) : null;\n        let withdrawnAmount = withdrawLog ? parseInt(withdrawLog.data,16) : amount;\n        withdrawnAmount = this.functionsUtil.fixTokenDecimals(withdrawnAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${withdrawnAmount.toFixed(4)} ETH</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Update balances\n    this.loadBalance();\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    const params = {};\n    switch (this.state.action){\n      case 'wrap':\n        params.value = amount;\n        params.methodParams = [];\n        params.methodName = 'deposit';\n      break;\n      case 'unwrap':\n        params.value = null;\n        params.methodParams = [amount];\n        params.methodName = 'withdraw';\n      break;\n      default:\n      break;\n    }\n    return params;\n  }\n\n  render() {\n\n    const fullWidth = !!this.props.fullWidth;\n    const depositOnly = !!this.props.depositOnly;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        mt={[2,fullWidth ? 2 : 3]}\n      >\n        <Flex\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n          width={[1,fullWidth ? 1 : 0.36]}\n        >\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : (\n              <Box\n                width={1}\n              >\n                {\n                  !depositOnly && (\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        mb={2}\n                      >\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Wrap'}\n                          iconColor={'wrap'}\n                          icon={'ArrowDownward'}\n                          iconBgColor={'#ced6ff'}\n                          isActive={ this.state.action === 'wrap' }\n                          handleClick={ e => this.setAction('wrap') }\n                        />\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Unwrap'}\n                          iconColor={'redeem'}\n                          icon={'ArrowUpward'}\n                          iconBgColor={'#ceeff6'}\n                          isActive={ this.state.action === 'unwrap' }\n                          handleClick={ e => this.setAction('unwrap') }\n                        />\n                      </Flex>\n                    </Flex>\n\n                  )\n                }\n                <Box\n                  width={1}\n                  my={fullWidth ? 2 : 3}\n                >\n                  {\n                    this.state.tokenBalance!==null ? (\n                      <SendTxWithBalance\n                        {...this.props}\n                        approveEnabled={false}\n                        action={this.state.action}\n                        infoBox={this.state.infoBox}\n                        tokenConfig={this.state.tokenConfig}\n                        tokenBalance={this.state.tokenBalance}\n                        contractInfo={this.props.toolProps.contract}\n                        callback={this.transactionSucceeded.bind(this)}\n                        approveDescription={this.state.approveDescription}\n                        // changeInputCallback={this.changeInputCallback.bind(this)}\n                        getTransactionParams={this.getTransactionParams.bind(this)}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} to {this.state.action} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </SendTxWithBalance>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                        }}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading Balance...'}\n                        />\n                      </DashboardCard>\n                    )\n                  }\n                </Box>\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default ETHWrapper;\n","import React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ButtonLoader from '../ButtonLoader/ButtonLoader';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport { Flex, Box, Text, Input, Link, Progress } from \"rimble-ui\";\n\nclass NexusMutual extends Component {\n\n  state = {\n    step:1,\n    steps:{\n      1:'Get Quote',\n      2:'Enable NXS',\n      3:'Buy Cover'\n    },\n    loading:false,\n    amountValue:'',\n    periodValue:'',\n    quoteResponse:null,\n    selectedToken:'DAI'\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async changeSelectedToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  changeAmount = (e) => {\n    const amountValue = e.target.value.length && !isNaN(e.target.value) ? e.target.value : '';\n    this.setState({\n      amountValue\n    });\n  }\n\n  changePeriod = (e) => {\n\n    const periodValue = e.target.value.length && !isNaN(e.target.value) ? e.target.value : '';\n    this.setState({\n      periodValue\n    });\n  }\n\n  async getQuote() {\n\n    this.setState({\n      loading:true\n    });\n\n    let quoteResponse = await this.functionsUtil.makeRequest(`https://api.nexusmutual.io/getQuote/${this.state.amountValue}/${this.state.selectedToken}/${this.state.periodValue}/0x78751B12Da02728F467A44eAc40F5cbc16Bd7934/M1`);\n\n    const newState = {\n      loading:false\n    };\n\n    if (quoteResponse){\n      newState.quoteResponse = quoteResponse.data;\n    }\n\n    this.setState({\n      quoteResponse\n    });\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          mb={3}\n          width={[1,0.36]}\n          flexDirection={'column'}\n        >\n          <Flex\n            mb={1}\n            width={1}\n            flexDirection={'row'}\n            justifyContent={'space-between'}\n          >\n            {\n              Object.keys(this.state.steps).map( stepIndex => (\n                <Link\n                  style={{\n                    flexBasis:'0',\n                    flex:'1 1 0px',\n                    textDecoration:'none',\n                    cursor:this.state.step>=stepIndex ? 'pointer' : 'default'\n                  }}\n                  fontSize={2}\n                  textAlign={'center'}\n                  key={`step_${stepIndex}`}\n                  color={ this.state.step>=stepIndex ? 'blue' : 'cellText' }\n                  hoverColor={ this.state.step>=stepIndex ? 'blue' : 'cellText' }\n                  activeColor={ this.state.step>=stepIndex ? 'blue' : 'cellText' }\n                >\n                  {this.state.steps[stepIndex]}\n                </Link>\n              ) )\n            }\n          </Flex>\n          <Flex\n            width={1}\n            flexDirection={'column'}\n          >\n            <Progress\n              style={{\n                width:'100%',\n                height:'15px'\n              }}\n              value={(1/Object.keys(this.state.steps).length)*this.state.step}\n            />\n          </Flex>\n        </Flex>\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text\n              mb={1}>\n              Select asset:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              showBalance={false}\n              selectedToken={this.state.selectedToken}\n              onChange={this.changeSelectedToken.bind(this)}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              How much do you want to cover?\n            </Text>\n            <Input\n              min={0}\n              width={'100%'}\n              type={\"number\"}\n              required={true}\n              height={'3.4em'}\n              borderRadius={2}\n              fontWeight={500}\n              boxShadow={'none !important'}\n              value={this.state.amountValue}\n              onChange={this.changeAmount.bind(this)}\n              border={`1px solid ${this.props.theme.colors.divider}`}\n              placeholder={`Insert ${this.state.selectedToken.toUpperCase()} amount`}\n            />\n          </Box>\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              For how many days?\n            </Text>\n            <Input\n              min={0}\n              width={'100%'}\n              type={\"number\"}\n              required={true}\n              height={'3.4em'}\n              borderRadius={2}\n              fontWeight={500}\n              boxShadow={'none !important'}\n              value={this.state.periodValue}\n              placeholder={'Insert days of coverage'}\n              onChange={this.changePeriod.bind(this)}\n              border={`1px solid ${this.props.theme.colors.divider}`}\n            />\n          </Box>\n          <Flex\n            mt={2}\n            width={1}\n            justifyContent={'center'}\n          >\n            <ButtonLoader\n              buttonProps={{\n                my:2,\n                mx:[0, 2],\n                size:'medium',\n                borderRadius:4,\n                mainColor:'blue',\n                disabled:(!this.state.amountValue || !this.state.selectedToken || !this.state.periodValue)\n              }}\n              buttonText={'GET QUOTE'}\n              isLoading={this.state.loading}\n              handleClick={ e => this.getQuote(e) }\n            />\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default NexusMutual;","import React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport { Text, Icon, Image, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass CustomField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    let CustomComponent = null;\n    let componentHasChildren = false;\n    const fieldType = fieldInfo.type;\n    const fieldPath = fieldInfo.path;\n    let customValue = fieldPath ? this.functionsUtil.getArrayPath(fieldPath,this.props.row) : null;\n\n    switch (fieldType){\n      case 'image':\n        CustomComponent = Image;\n        fieldProps.src = customValue;\n      break;\n      case 'number':\n        customValue = this.functionsUtil.BNify(customValue).toString();\n        CustomComponent = SmartNumber;\n        fieldProps.number = customValue;\n      break;\n      case 'icon':\n        CustomComponent = Icon;\n        fieldProps.name = customValue;\n      break;\n      case 'button':\n        CustomComponent = Button;\n        componentHasChildren = true;\n        customValue = fieldInfo.label;\n        fieldProps.onClick=() => fieldProps.handleClick(this.props)\n      break;\n      default:\n        CustomComponent = Text;\n        componentHasChildren = true;\n      break;\n    }\n\n    if (!customValue){\n      return null;\n    }\n\n    // Add custom field extra props\n    if (fieldPath){\n      const customFieldName = Object.values(fieldPath).pop();\n      if (this.props.row[`${customFieldName}Props`]){\n        const customFieldProps = this.props.row[`${customFieldName}Props`];\n        // Replace props\n        if (customFieldProps && Object.keys(customFieldProps).length){\n          Object.keys(customFieldProps).forEach(p => {\n            fieldProps[p] = customFieldProps[p];\n          });\n        }\n      }\n    }\n\n    return CustomComponent ? (componentHasChildren ? (<CustomComponent {...fieldProps}>{customValue}</CustomComponent>) : (<CustomComponent {...fieldProps} />) ) : null;\n  }\n}\n\nexport default CustomField;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport CustomField from '../CustomField/CustomField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass CustomList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    return (\n      <Flex id=\"custom-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"custom-list\" flexDirection={'column'}>\n          {\n            this.props.rows.map( (row,rowIndex) => {\n              return (\n                <TableRow\n                  row={row}\n                  {...this.props}\n                  key={`asset-${rowIndex}`}\n                  fieldComponent={CustomField}\n                  rowId={`asset-col-${rowIndex}`}\n                  cardId={`asset-card-${rowIndex}`}\n                />\n              );\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CustomList;","import theme from '../theme';\nimport { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport AssetField from '../AssetField/AssetField';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass PortfolioDonut extends Component {\n  state = {\n    chartData:null,\n    totalFunds:null,\n    parentWidth:null,\n    selectedToken:null,\n    selectedTokenConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentWillUnmount() {\n    \n  }\n\n  async componentDidMount(){\n    this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  async loadPortfolio() {\n\n    const portfolio = {};\n    let totalFunds = this.functionsUtil.BNify(0);\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.availableTokens),async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const idleTokenBalance = await this.functionsUtil.getTokenBalance(tokenConfig.idle.token,this.props.account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.functionsUtil.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = await this.functionsUtil.convertTokenBalance(idleTokenBalance.times(tokenPrice),token,tokenConfig,isRisk);\n\n        if (tokenBalance.gt(0)){\n          portfolio[token] = tokenBalance;\n\n          // Increment total balance\n          totalFunds = totalFunds.plus(tokenBalance);\n        }\n      }\n    });\n\n    // Add Gov Tokens\n    const govTokensUserBalances = await this.functionsUtil.getGovTokensUserBalances(this.props.account,this.props.availableTokens,'DAI',null,true);\n    if (govTokensUserBalances){\n      Object.keys(govTokensUserBalances).forEach( govToken => {\n        const govTokenBalance = this.functionsUtil.BNify(govTokensUserBalances[govToken]);\n        portfolio[govToken] = govTokenBalance;\n        totalFunds = totalFunds.plus(govTokenBalance);\n      });\n    }\n\n    const chartData = [];\n\n    Object.keys(portfolio).forEach(token => {\n      const tokenBalance = portfolio[token];\n      if (tokenBalance.gt(0)){\n        const tokenPercentage = tokenBalance.div(totalFunds).times(100);\n        let tokenColorHsl = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','hsl']);\n        tokenColorHsl = tokenColorHsl ? tokenColorHsl.join(',') : '0,0%,0%';\n        chartData.push({\n          id:token,\n          label:token.substr(0,1).toUpperCase()+token.substr(1),\n          value:Math.round(tokenPercentage),\n          color:'hsl('+tokenColorHsl+')'\n        });\n      }\n    });\n\n    this.setState({\n      portfolio,\n      chartData,\n      totalFunds\n    });\n  }\n\n  render() {\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth:0,\n      cornerRadius:0,\n      innerRadius:0.65,\n      motionDamping:15,\n      motionStiffness:90,\n      colors:d => d.color,\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => {\n        if (parseFloat(d.value)>=5){\n          return d.value+'%';\n        } else {\n          return null;\n        }\n      },\n      radialLabel: d => {\n        return null;//Object.keys(this.props.availableTokens).indexOf(d.label.toUpperCase());\n      },\n      theme:{\n        tooltip: {\n          container: {\n            display: 'none'\n          },\n        },\n        labels:{\n          text:{\n            fontSize:16,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsTextColor:'#333',\n      radialLabelsSkipAngle:10,\n      radialLabelsTextXOffset:0,\n      radialLabelsLinkOffset:-parseInt(this.state.parentWidth*0.2),\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      radialLabelsLinkColor:{ from: 'color' },\n      margin: this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 },\n      onMouseEnter:(data, e) => {\n        const selectedToken = data.id;\n        const selectedTokenConfig = selectedToken ? this.props.availableTokens[selectedToken] || this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken]) : null;\n        this.setState({\n          selectedToken,\n          selectedTokenConfig\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setState({\n          selectedToken:null,\n          selectedTokenConfig:null\n        });\n      },\n      legends:[\n        {\n          itemWidth: 60,\n          itemHeight: 18,\n          translateY: this.props.isMobile ? 25 : 50,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          itemTextColor: theme.colors.legend,\n          symbolShape: 'circle',\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        }\n      ]\n    };\n\n    const selectedToken = this.state.selectedToken !== null && this.state.portfolio[this.state.selectedToken] ? this.state.portfolio[this.state.selectedToken] : false;\n    const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'icon']);\n    const convertToken = this.state.selectedToken ? this.functionsUtil.getGlobalConfig(['stats','tokens',this.state.selectedToken,'conversionRateField']) : false;\n\n    return (\n      <Flex\n        width={1}\n      >\n        { \n          (this.state.totalFunds || selectedToken) && \n            <Flex\n              zIndex={0}\n              top={['32%','35%']}\n              left={['23%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              width={['55%','46%']}\n              position={'absolute'}\n              height={['40%','35%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedToken ? (\n                  <>\n                    <AssetField\n                      fieldInfo={{\n                        name:'icon',\n                        props:{\n                          mb:1,\n                          height:'2.2em'\n                        }\n                      }}\n                      token={this.state.selectedToken}\n                      tokenConfig={this.state.selectedTokenConfig}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      unit={ convertToken ? '$' : null}\n                      number={this.state.portfolio[this.state.selectedToken]}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedToken}\n                    </Text>\n                  </>\n                ) : (\n                  <>\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={strategyIcon}\n                    />\n                    <SmartNumber\n                      unit={'$'}\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      number={this.state.totalFunds}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          {...chartProps}\n          showLoader={true}\n          data={this.state.chartData}\n          parentId={this.props.parentId}\n          parentIdHeight={this.props.parentId}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default PortfolioDonut;\n","import CountUp from 'react-countup';\nimport { Flex, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalEarningsCounter extends Component {\n\n  state = {\n    earningsEnd:null,\n    earningsStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        earningsEnd:null,\n        earningsStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    const earningsStart = portfolio.totalEarnings;\n    const earningsEnd = portfolio.totalAmountLent.times(portfolio.avgAPY.div(100));\n\n    this.setState({\n      earningsEnd,\n      earningsStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const unit = this.props.unit || '$ ';\n    const decimals = this.props.decimals || 8;\n\n    return this.state.earningsStart && this.state.earningsEnd ? (\n      <Flex\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.earningsEnd)}\n          start={parseFloat(this.state.earningsStart)}\n          formattingFn={ n => unit+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Flex>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalEarningsCounter;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport { Card, Flex, Image, Text } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\n\nclass EarningsEstimation extends Component {\n  state = {\n    tokensEarnings:null,\n    estimationStepsPerc:null,\n    estimationStepsOptions:null,\n    estimationStepsDefaultOption:null,\n    estimationSteps:{\n      0:{\n        'Month':{\n          perc:1/12,\n          width:1/3\n        },\n        '2 months':{\n          perc:1/6,\n          width:1/3\n        },\n        '3 months':{\n          perc:1/4,\n          width:1/3,\n          optionName:'3M'\n        }\n      },\n      25:{\n        '3 months':{\n          perc:3/12,\n          width:3/12\n        },\n        '8 months':{\n          perc:8/12,\n          width:5/12\n        },\n        'Year':{\n          perc:1,\n          width:4/12,\n          optionName:'1Y'\n        }\n      },\n      90:{\n        'Year':{\n          perc:1,\n          width:1/3,\n        },\n        '2 Years':{\n          perc:2,\n          width:1/3,\n        },\n        '5 Years':{\n          perc:5,\n          width:3/5,\n          optionName:'5Y'\n        }\n      }\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  setEstimationStepsPerc(estimationStepsPerc){\n    this.setState({\n      estimationStepsPerc\n    });\n  }\n\n  async loadEarnings(){\n    let tokensEarnings = {};\n    let estimationStepsPerc = 0;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const aggregatedEarnings = {\n      earnings:this.functionsUtil.BNify(0),\n      amountLent:this.functionsUtil.BNify(0),\n      earningsYear:this.functionsUtil.BNify(0),\n    };\n\n    await this.functionsUtil.asyncForEach(this.props.enabledTokens,async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const amountDeposited = await this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account);\n\n      const [amountLent,avgBuyPrice,idleTokenPrice] = await Promise.all([\n        this.functionsUtil.convertTokenBalance(amountDeposited,token,tokenConfig,isRisk),\n        this.functionsUtil.getAvgBuyPrice([token],this.props.account),\n        this.functionsUtil.getIdleTokenPrice(tokenConfig)\n      ]);\n\n      const earningsPerc = idleTokenPrice.div(avgBuyPrice[token]).minus(1);\n      const earnings = amountLent.times(earningsPerc);\n\n      let earningsYear = 0;\n      let tokenAPY = 0;\n      const tokenAprs = await this.functionsUtil.getTokenAprs(tokenConfig);\n      if (tokenAprs && tokenAprs.avgApr !== null){\n        tokenAPY = tokenAprs.avgApy;\n        earningsYear = amountLent.times(tokenAPY.div(100));\n      }\n\n      const earningsPercStep = Math.floor(earnings.div(earningsYear).times(100));\n      \n      const possibleSteps = Object.keys(this.state.estimationSteps).filter(perc => perc<earningsPercStep);\n      const maxPossibleStep = parseInt(possibleSteps.pop());\n      estimationStepsPerc = Math.max(estimationStepsPerc,maxPossibleStep);\n\n      // console.log(token,amountLent.toFixed(5),earnings.toFixed(5),earningsYear.toFixed(5),tokenConfig,tokenAprs,tokenAPR.toFixed(5),tokenAPY.toFixed(5),earningsPercStep,maxPossibleStep,estimationStepsPerc);\n\n      if (!this.functionsUtil.BNify(amountLent).isNaN() && !this.functionsUtil.BNify(idleTokenPrice).isNaN() && !this.functionsUtil.BNify(earnings).isNaN() && !this.functionsUtil.BNify(earningsYear).isNaN()){\n        tokensEarnings[token] = {\n          earnings,\n          amountLent,\n          earningsYear,\n          idleTokenPrice\n        };\n\n        // const earningsUSD = await this.functionsUtil.convertTokenBalance(earningsYearings,token,tokenConfig,isRisk);\n        // const amountLentUSD = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n        // const earningsYearUSD = await this.functionsUtil.convertTokenBalance(earningsYear,token,tokenConfig,isRisk);\n\n        aggregatedEarnings.earnings = aggregatedEarnings.earnings.plus(earnings);\n        aggregatedEarnings.amountLent = aggregatedEarnings.amountLent.plus(amountLent);\n        aggregatedEarnings.earningsYear = aggregatedEarnings.earningsYear.plus(earningsYear);\n      }\n    });\n\n    const orderedTokensEarnings = {};\n    this.props.enabledTokens.forEach( token => {\n      if (tokensEarnings[token]){\n        orderedTokensEarnings[token] = tokensEarnings[token];\n      }\n    });\n\n    tokensEarnings = orderedTokensEarnings;\n\n    // Add USD aggregated earnings\n    if (Object.keys(tokensEarnings).length>1){\n      tokensEarnings['USD'] = aggregatedEarnings;\n    }\n\n    let estimationStepsDefaultOption = null;\n    const estimationStepsOptions = Object.keys(this.state.estimationSteps).map( step => {\n      const estimationStep = Object.values(this.state.estimationSteps[step]).pop();\n      const label = estimationStep.optionName ? estimationStep.optionName : Object.keys(this.state.estimationSteps[step]).pop();\n      const value = parseInt(step);\n      const option = { value, label };\n\n      if (value === estimationStepsPerc){\n        estimationStepsDefaultOption = option;\n      }\n      return option;\n    });\n\n    // console.log(estimationStepsOptions,estimationStepsDefaultOption)\n\n    this.setState({\n      tokensEarnings,\n      estimationStepsPerc,\n      estimationStepsOptions,\n      estimationStepsDefaultOption,\n    });\n  }\n\n  render() {\n\n    if (!this.state.tokensEarnings){\n      return (\n        <FlexLoader\n          flexProps={{\n            flexDirection:'row',\n            minHeight:this.props.height\n          }}\n          loaderProps={{\n            size:'30px'\n          }}\n          textProps={{\n            ml:2\n          }}\n          text={'Loading estimations...'}\n        />\n      );\n    }\n\n    const estimationSteps = this.state.estimationSteps[this.state.estimationStepsPerc] ? this.state.estimationSteps[this.state.estimationStepsPerc] : this.state.estimationSteps[0];\n\n    return (\n      <Card\n        pr={0}\n        my={1}\n        width={1}\n        px={[3,4]}\n        py={[2,3]}\n        boxShadow={1}\n        borderRadius={2}\n        borderColor={'cardBorder'}\n        backgroundColor={'cardBg'}\n      >\n        <Flex\n          mt={2}\n          mb={3}\n          zIndex={9999}\n          justifyContent={'flex-end'}\n        >\n          <Flex\n            zIndex={9999}\n            width={[1,0.2]}\n            flexDirection={'column'}\n          >\n            <GenericSelector\n              innerProps={{\n                p:0,\n                px:1\n              }}\n              name={'estimation-step'}\n              options={this.state.estimationStepsOptions}\n              onChange={ v => this.setEstimationStepsPerc(v) }\n              defaultValue={this.state.estimationStepsDefaultOption}\n            />\n          </Flex>\n        </Flex>\n        {\n          Object.keys(this.state.tokensEarnings).map((token,tokenIndex) => {\n            const tokenConfig = this.props.availableTokens[token];\n            const tokenEarnings = this.state.tokensEarnings[token];\n            const estimationStepPerc = this.functionsUtil.BNify(Object.values(estimationSteps).pop().perc);\n            const finalEarnings = tokenEarnings.earningsYear.times(estimationStepPerc);\n            const cursorPerc = Math.min(1,parseFloat(tokenEarnings.earnings.div(finalEarnings)));\n            const tokenRGBColor = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','rgb']).join(',');\n            // console.log(tokenEarnings.earnings.toFixed(10),tokenEarnings.earningsYear.toFixed(10),finalEarnings.toFixed(10),cursorPerc.toFixed(10),estimationStepPerc.toFixed(10));\n            return (\n              <Flex\n                id={`asset-${token}`}\n                flexDirection={'row'}\n                key={`asset-${token}`}\n                borderTop={ token === 'USD' ? `1px solid ${this.props.theme.colors.divider}` : null }\n              >\n                <Flex\n                  width={[1,0.93]}\n                  position={'relative'}\n                >\n                  <Flex\n                    width={1}\n                    height={'100%'}\n                    position={'absolute'}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                    >\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      height={'100%'}\n                      flexDirection={'row'}\n                    >\n                      {\n                        Object.keys(estimationSteps).map((label,estimateIndex) => {\n                          const estimationStep = estimationSteps[label];\n                          const estimationStepEarnings = tokenEarnings.earningsYear.times(this.functionsUtil.BNify(estimationStep.perc));\n                          let estimationStepEarningsFormatted = this.functionsUtil.formatMoney(estimationStepEarnings,this.props.isMobile ? 2 : estimationStepEarnings.lt(1) ? 3 : 2);\n                          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n                          if (conversionRateField){\n                            estimationStepEarningsFormatted = '$ '+estimationStepEarningsFormatted;\n                          }\n                          return (\n                            <Flex\n                              pr={2}\n                              justifyContent={'flex-end'}\n                              width={estimationStep.width}\n                              pt={ token === 'USD' ? 2 : null }\n                              key={`asset-estimate-${token}-${estimateIndex}`}\n                              borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              {\n                                (token === 'USD' || (estimateIndex === Object.keys(estimationSteps).length-1)) && \n                                  <Text\n                                    fontWeight={3}\n                                    fontSize={[0,'1em']}\n                                    style={{\n                                      wordBreak:'break-all'\n                                    }}\n                                    color={tokenEarnings.earnings.gte(estimationStepEarnings) ? 'copyColor' : 'legend'}\n                                  >\n                                    {estimationStepEarningsFormatted}\n                                  </Text>\n                              }\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                  <Flex\n                    width={1}\n                    zIndex={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                    pt={ token === 'USD' ? ['2em','2.8em'] : '1.4em' }\n                    pb={ tokenIndex<Object.keys(this.state.tokensEarnings).length-1 ? '1em' : 0 }\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                      justifyContent={['flex-start','flex-end']}\n                    >\n                      <Text\n                        pr={[0,2]}\n                        fontSize={[0,3]}\n                        fontWeight={[3,4]}\n                      >\n                        {token}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      height={['20px','35px']}\n                      justifyContent={'flex-start'}\n                    >\n                      <Flex\n                        height={'100%'}\n                        width={cursorPerc}\n                        backgroundColor={'cardBg'}\n                      >\n                        <Flex\n                          height={'100%'}\n                          width={'100%'}\n                          borderRadius={['0 20px 20px 0','0 35px 35px 0']}\n                          style={{background:`linear-gradient(90deg, rgba(${tokenRGBColor},0) 0%, rgba(${tokenRGBColor},0.1) 30%, rgba(${tokenRGBColor},1) 100%)`}}\n                        ></Flex>\n                      </Flex>\n                      <Flex\n                        pl={2}\n                        width={'auto'}\n                        height={'100%'}\n                        alignItems={'center'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Image src={`images/tokens/${token}.svg`} height={['1.4em','2.2em']} />\n                      </Flex>\n                      {\n                        <Flex\n                          pl={2}\n                          alignItems={'center'}\n                        >\n                          {\n                            token !== 'USD' ? (\n                              <AssetField\n                                {...this.props}\n                                token={token}\n                                tokenConfig={tokenConfig}\n                                fieldInfo={{\n                                  name:'earningsCounter',\n                                  props:{\n                                    decimals:this.props.isMobile ? 6 : 7,\n                                    maxPrecision:this.props.isMobile ? 9 : 10,\n                                    style:{\n                                      color:this.props.theme.colors.copyColor,\n                                      fontWeight:this.props.isMobile ? 500 : 700,\n                                      fontSize:this.props.isMobile ? '14px' : '22px',\n                                    }\n                                  }\n                                }}\n                              />\n                            ) : (\n                              <TotalEarningsCounter\n                                {...this.props}\n                                decimals={this.props.isMobile ? 6 : 7}\n                                maxPrecision={this.props.isMobile ? 9 : 10}\n                                counterStyle={{\n                                  color:this.props.theme.colors.copyColor,\n                                  fontWeight:this.props.isMobile ? 500 : 700,\n                                  fontFamily:this.props.theme.fonts.sansSerif,\n                                  fontSize:this.props.isMobile ? '14px' : '22px',\n                                }}\n                              />\n                            )\n                          }\n                        </Flex>\n                      }\n                    </Flex>\n                  </Flex>\n                </Flex>\n                {\n                  !this.props.isMobile && \n                    <Flex width={0.07} alignItems={'flex-start'} justifyContent={'flex-end'}>\n                    </Flex>\n                }\n              </Flex>\n            )\n          })\n        }\n        <Flex\n          flexDirection={'row'}\n        >\n          <Flex\n            width={[1,0.93]}\n            position={'relative'}\n          >\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <Flex width={[0.15,0.1]}></Flex>\n              <Flex\n                width={[0.85,0.9]}\n                flexDirection={'row'}\n              >\n                {\n                  Object.keys(estimationSteps).map((estimationLabel,estimateIndex) => {\n                    const estimationStep = estimationSteps[estimationLabel];\n                    return (\n                      <Flex\n                        pt={2}\n                        pr={[1,2]}\n                        justifyContent={'flex-end'}\n                        width={estimationStep.width}\n                        key={`estimate-label-${estimateIndex}`}\n                        borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                      >\n                        <Text\n                          fontWeight={3}\n                          fontSize={[0,2]}\n                          color={'legend'}\n                        >\n                          {estimationLabel}\n                        </Text>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </Flex>\n          {\n            !this.props.isMobile && \n              <Flex width={0.07} alignItems={'flex-start'} justifyContent={'center'}>\n                <Text fontWeight={4} fontSize={3}></Text>\n              </Flex>\n          }\n        </Flex>\n      </Card>\n    );\n  }\n}\n\nexport default EarningsEstimation;\n","import React, { Component } from 'react';\nimport { Flex, Icon, Text, Image } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass DashboardIconButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          pr:2,\n          py:[2,3],\n          pl:[2,3],\n        }}\n        isActive={false}\n        isInteractive={true}\n        handleClick={this.props.handleClick}\n      >\n        <Flex\n          height={'100%'}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'center'}\n        > \n          <Flex\n            px={[1,0]}\n          >\n            {\n              this.props.icon ? (\n                <Icon\n                  name={this.props.icon}\n                  size={this.props.isMobile ? '1.8em' : '3em'}\n                  color={this.props.iconColor ? this.props.iconColor : 'redeem'}\n                />\n              ) : this.props.image && (\n                <Image\n                  src={this.props.image}\n                  width={this.props.isMobile ? '1.8em' : '2.7em'}\n                  height={this.props.isMobile ? '1.8em' : '2.7em'}\n                />\n              )\n            }\n          </Flex>\n          <Flex\n            ml={[2,3]}\n            flexDirection={'column'}\n            alignItems={'flex-start'}\n            justifyContent={'center'}\n          >\n            <Text\n              fontWeight={3}\n              fontSize={[1,3]}\n            >\n              {this.props.title}\n            </Text>\n            <Text\n              fontWeight={2}\n              fontSize={[0,2]}\n              color={'cellText'}\n            >\n              {this.props.text}\n            </Text>\n          </Flex>\n          <Icon\n            align={'center'}\n            color={'cellText'}\n            name={'KeyboardArrowRight'}\n            size={this.props.isMobile ? '1.8em' : '2.5em'}\n          />\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default DashboardIconButton;\n","import CountUp from 'react-countup';\nimport { Box, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalBalanceCounter extends Component {\n\n  state = {\n    counterEnd:null,\n    counterStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        counterEnd:null,\n        counterStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    const counterStart = portfolio.totalAmountLent.plus(portfolio.totalEarnings);\n    const counterEnd = counterStart.plus(counterStart.times(portfolio.avgAPY.div(100)));\n\n    this.setState({\n      counterEnd,\n      counterStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const decimals = this.props.decimals || 8;\n\n    return this.state.counterStart && this.state.counterEnd ? (\n      <Box\n        width={1}\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.counterEnd)}\n          start={parseFloat(this.state.counterStart)}\n          formattingFn={ n => '$ '+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Box>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalBalanceCounter;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetsList from '../AssetsList/AssetsList';\nimport CustomList from '../CustomList/CustomList';\n// import RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport PortfolioDonut from '../PortfolioDonut/PortfolioDonut';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport PortfolioEquity from '../PortfolioEquity/PortfolioEquity';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport EarningsEstimation from '../EarningsEstimation/EarningsEstimation';\nimport { Flex, Box, Heading, Text, Tooltip, Icon, Loader } from \"rimble-ui\";\nimport DashboardIconButton from '../DashboardIconButton/DashboardIconButton';\nimport TotalBalanceCounter from '../TotalBalanceCounter/TotalBalanceCounter';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\n\n// const env = process.env;\n\nclass StrategyPage extends Component {\n\n  state = {\n    portfolio:null,\n    tokensToMigrate:{},\n    aggregatedValues:[],\n    activeCoverages:null,\n    depositedTokens:null,\n    remainingTokens:null,\n    batchedDeposits:null,\n    portfolioLoaded:false,\n    availableGovTokens:null,\n    portfolioEquityStartDate:null,\n    batchedDepositsAvailableTokens:null,\n    portfolioEquityQuickSelection:'week'\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    await this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    if (accountChanged){\n      this.setState({\n        portfolioLoaded:false\n      },() => {\n        this.loadPortfolio();\n      });\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setStateSafe({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  async loadPortfolio(){\n    const availableTokens = this.props.availableTokens || {};\n\n    if (this.state.portfolioLoaded){\n      return false;\n    }\n\n    // Load portfolio if account is set\n    if (this.props.account){\n      const newState = {};\n      const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n      // Load data\n      const [\n        activeCoverages,\n        batchedDeposits,\n        tokensToMigrate,\n        portfolio\n      ] = await Promise.all([\n        // Load active coverages\n        this.functionsUtil.getActiveCoverages(this.props.account),\n        // Load claimable batches\n        this.functionsUtil.getBatchedDeposits(this.props.account),\n        // Load tokens to be migrated\n        this.functionsUtil.getTokensToMigrate(this.props.selectedStrategy),\n        // Load portfolio\n        this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account),\n        // Load and process Etherscan Txs\n        this.functionsUtil.getEtherscanTxs(this.props.account,firstBlockNumber,'latest',Object.keys(availableTokens))\n      ]);\n\n      newState.portfolio = portfolio;\n\n      newState.activeCoverages = activeCoverages && activeCoverages.length>0 ? activeCoverages.map( c => {\n        const statusColors = this.props.theme.colors.transactions.status;\n        const statusIcon = c.status === 'Expired' ? 'Error' : 'VerifiedUser';\n        const statusColor = c.status === 'Expired' ? statusColors.failed : statusColors.completed;\n        const portfolioCoverage = portfolio.totalBalance.gt(0) ? c.balance.div(portfolio.totalBalance).times(100).toFixed(2)+'%' : 'N/A';\n        const statusIconProps = {\n          color:statusColor\n        };\n        return Object.assign(c,{\n          statusIcon,\n          statusIconProps,\n          portfolioCoverage\n        });\n      }) : null;\n\n      newState.batchedDeposits = batchedDeposits && Object.keys(batchedDeposits).length>0 ? batchedDeposits : null;\n\n      if (newState.batchedDeposits){\n        newState.batchedDepositsAvailableTokens = Object.keys(newState.batchedDeposits).reduce( (batchedDepositsAvailableTokens,token) => {\n          const batchInfo = newState.batchedDeposits[token];\n          const tokenConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit','props','availableTokens',token]);\n          if (tokenConfig.strategy === this.props.selectedStrategy){\n            switch (batchInfo.status){\n              case 'pending':\n                tokenConfig.statusIcon = 'Timelapse';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.pending\n                };\n              break;\n              case 'executed':\n                tokenConfig.statusIcon = 'Done';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.completed\n                };\n              break;\n              default:\n              break;\n            }\n            tokenConfig.token = token;\n            tokenConfig.status = batchInfo.status;\n            tokenConfig.deposited = batchInfo.batchDeposits;\n            tokenConfig.redeemable = batchInfo.batchRedeems;\n            batchedDepositsAvailableTokens[tokenConfig.baseToken] = tokenConfig;\n          }\n          return batchedDepositsAvailableTokens;\n        },{});\n      }\n\n\n      if (portfolio){\n        const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.functionsUtil.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n        newState.depositedTokens = depositedTokens;\n\n        const isRisk = this.props.selectedStrategy === 'risk';\n\n        let avgAPY = this.functionsUtil.BNify(0);\n        let avgScore = this.functionsUtil.BNify(0);\n        let totalAmountLent = this.functionsUtil.BNify(0);\n\n        await this.functionsUtil.asyncForEach(depositedTokens,async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          const [\n            tokenAprs,\n            tokenScore,\n            amountLent,\n          ] = await Promise.all([\n            this.functionsUtil.getTokenAprs(tokenConfig),\n            this.functionsUtil.getTokenScore(tokenConfig,isRisk),\n            this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account)\n          ]);\n\n          const amountLentToken = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n\n          const tokenAPY = this.functionsUtil.BNify(tokenAprs.avgApy);\n          const tokenWeight = portfolio.tokensBalance[token].tokenBalance.div(portfolio.totalBalance);\n\n          if (tokenAPY){\n            avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n          }\n\n          if (tokenScore){\n            avgScore = avgScore.plus(tokenScore.times(tokenWeight));\n          }\n\n          if (amountLentToken){\n            totalAmountLent = totalAmountLent.plus(amountLentToken);\n          }\n        });\n\n        // Add gov tokens to earnings\n        const govTokensTotalBalance = await this.functionsUtil.getGovTokensUserTotalBalance(this.props.account,availableTokens,'DAI');\n        const govTokensUserBalance = await this.functionsUtil.getGovTokensUserBalances(this.props.account,availableTokens,null);\n        const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n          const balance = govTokensUserBalance[govToken];\n          if (balance.gt(0)){\n            return `+${balance.toFixed(2)} ${govToken}`;\n          } else {\n            return null;\n          }\n        }).filter(v => (v !== null)) : null;\n\n        newState.avgAPY = avgAPY;\n        newState.avgScore = avgScore;\n        newState.govTokensTotalBalance = govTokensTotalBalance;\n        newState.govTokensTotalBalanceTooltip = govTokensTotalBalanceTooltip;\n      }\n\n      newState.tokensToMigrate = tokensToMigrate;\n      newState.portfolioLoaded = true;\n\n      const remainingTokens = Object.keys(availableTokens).filter(token => (!newState.depositedTokens.includes(token) && !Object.keys(newState.tokensToMigrate).includes(token)) );\n      newState.remainingTokens = remainingTokens;\n\n      // Portfolio loaded\n      this.setStateSafe(newState);\n    // Show available assets for not logged users\n    } else {\n      this.setStateSafe({\n        tokensToMigrate:{},\n        depositedTokens:[],\n        portfolioLoaded:true,\n        remainingTokens:Object.keys(availableTokens),\n      });\n    }\n  }\n\n  render(){\n    const viewOnly = this.props.connectorName === 'custom';\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    const apyLong = this.functionsUtil.getGlobalConfig(['messages','apyLong']);\n    const riskScore = this.functionsUtil.getGlobalConfig(['messages','riskScore']);\n    const yieldFarming = this.functionsUtil.getGlobalConfig(['messages','yieldFarming']);\n    const batchDepositConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    const coverProtocolConfig = this.functionsUtil.getGlobalConfig(['tools','coverProtocol']);\n\n    return (\n      <Box\n        width={1}\n      >\n        <Title\n          mb={3}\n        >\n          {this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'title'])} strategy\n        </Title>\n        {\n          !this.state.portfolioLoaded ? (\n            <FlexLoader\n              textProps={{\n                textSize:4,\n                fontWeight:2\n              }}\n              loaderProps={{\n                mb:3,\n                size:'40px'\n              }}\n              flexProps={{\n                minHeight:'50vh',\n                flexDirection:'column'\n              }}\n              text={'Loading portfolio...'}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              {\n                this.props.account && this.state.depositedTokens.length>0 ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.avgAPY ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.avgAPY.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg APY\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <TotalBalanceCounter\n                                    decimals={5}\n                                    {...this.props}\n                                    portfolio={this.state.portfolio}\n                                  />\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-end'}\n                                    >\n                                      <Text\n                                        fontSize={1}\n                                        fontWeight={3}\n                                        fontFamily={this.props.theme.fonts.counter}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        +{this.state.portfolio.totalEarningsPerc.toFixed(2)}%\n                                      </Text>\n                                    </Flex>\n                                    <Text\n                                      mx={1}\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      fontFamily={this.props.theme.fonts.counter}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    >|</Text>\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-start'}\n                                    >\n                                      <TotalEarningsCounter\n                                        {...this.props}\n                                        unit={'+$'}\n                                        decimals={4}\n                                        counterStyle={{\n                                          fontSize:14,\n                                          fontWeight:600,\n                                          color:this.props.theme.colors.transactions.status.completed\n                                        }}\n                                        portfolio={this.state.portfolio}\n                                      />\n                                    </Flex>\n                                  </Flex>\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Balance\n                              </Text>\n                              {\n                                this.state.govTokensTotalBalance && (\n                                  <Tooltip\n                                    placement={'bottom'}\n                                    message={'Total Balance does not include accrued governance tokens: '+(this.state.govTokensTotalBalance && this.state.govTokensTotalBalance.gt(0) ? ` (${this.state.govTokensTotalBalanceTooltip.join(' / ')})` : '')}\n                                  >\n                                    <Icon\n                                      ml={2}\n                                      name={\"Info\"}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                    />\n                                  </Tooltip>\n                                )\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.avgScore ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.avgScore.toFixed(2) }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg Risk Score\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','riskScoreShort'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.328]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <PortfolioDonut\n                            {...this.props}\n                            parentId={'portfolio-composition'}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.666]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquity\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mb={3}\n                    mx={'auto'}\n                    width={[1,0.8]}\n                    aligItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontWeight={2}\n                      fontSize={[1,2]}\n                      textAlign={'center'}\n                    >\n                      {\n                        this.props.isMobile ?\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descShort'])\n                        :\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descLong'])\n                      }\n                    </Text>\n                  </Flex>\n                )\n              }\n              {\n                /*\n                !this.state.activeCoverages && coverProtocolConfig.enabled && this.state.portfolio && this.state.portfolio.totalBalance.gt(0) && (\n                  <Flex\n                    width={1}\n                    mt={[3,4]}\n                    alignItems={'center'}\n                    id={'no-active-cover'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:[3,4],\n                        width:[1,'auto'],\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Image\n                          mb={2}\n                          height={['1.8em','2.2em']}\n                          src={coverProtocolConfig.image}\n                        />\n                        <Text\n                          mb={1}\n                          fontSize={[2,4]}\n                          fontWeight={500}\n                          textAlign={'center'}\n                        >\n                          You don't have an active coverage\n                        </Text>\n                        <Text\n                          mb={2}\n                          color={'blue'}\n                          fontSize={[1,2]}\n                          fontWeight={500}\n                          hoverColor={'blue'}\n                          textAlign={'center'}\n                        >\n                          Cover Protocol provides coverage against Smart-Contract attacks\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:1,\n                            width:'auto',\n                            minHeight:'40px',\n                            mainColor:'redeem',\n                            size:this.props.isMobile ? 'small' : 'medium'\n                          }}\n                          handleClick={ e => this.props.goToSection(`tools/${coverProtocolConfig.route}`) }\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <Text\n                              color={'white'}\n                              fontSize={[1,2]}\n                              fontWeight={500}\n                            >\n                              Get Covered\n                            </Text>\n                            <Icon\n                              ml={1}\n                              size={'1.3em'}\n                              name={'KeyboardArrowRight'}\n                            />\n                          </Flex>\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                )\n                */\n              }\n              {\n                this.state.batchedDeposits && (\n                  <Flex\n                    width={1}\n                    mb={[0,3]}\n                    id={'batched-deposits'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Batched Deposits</Title>\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.batchedDepositsAvailableTokens)}\n                        cols={[\n                          {\n                            title:'TOKEN',\n                            props:{\n                              width:[0.3,0.2]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.33, 0.21],\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['deposited'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                name:'tokenName',\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'REDEEMABLE',\n                            props:{\n                              width:[0.44,0.23],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['redeemable'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                type:'text',\n                                name:'custom',\n                                path:['token'],\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'STATUS',\n                            props:{\n                              width:[0.26,0.19],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'icon',\n                                mobile:false,\n                                name:'custom',\n                                path:['statusIcon'],\n                                props:{\n                                  mr:2,\n                                  size:this.props.isMobile ? '1.2em' : '1.8em'\n                                }\n                              },\n                              {\n                                name:'custom',\n                                path:['status'],\n                                props:{\n                                  style:{\n                                    textTransform:'capitalize'\n                                  }\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[0.35,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Claim',\n                                funcProps:{\n                                  disabled:(props) => (props.tokenConfig.status === 'pending')\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.goToSection(`tools/${batchDepositConfig.route}/${props.tokenConfig.token}`)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                        availableTokens={this.state.batchedDepositsAvailableTokens}\n                      />\n                    </Flex>\n                  </Flex>\n                )\n              }\n              <Flex\n                width={1}\n                id={'available-assets'}\n                flexDirection={'column'}\n                mb={!this.state.depositedTokens.length ? 4 : 0}\n              >\n                {\n                  (this.state.depositedTokens.length>0 || Object.keys(this.state.tokensToMigrate).length>0 || this.state.remainingTokens.length>0 ) &&\n                    <Title my={[3,4]}>Available assets</Title>\n                }\n                <Flex width={1} flexDirection={'column'}>\n                  {\n                    Object.keys(this.state.tokensToMigrate).length>0 &&\n                    <Flex\n                      width={1}\n                      mb={[3,4]}\n                      id={\"migrate-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Assets to migrate\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.tokensToMigrate)}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.15]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.12],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.29,0.15],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.21,0.12],\n                            },\n                            fields:[\n                              {\n                                name:'score'\n                              }\n                            ]\n                          },\n                          {\n                            title:'BALANCE',\n                            mobile:false,\n                            props:{\n                              width:[0.16,0.14],\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'amountToMigrate',\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.15],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens'\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.29 : 0 ,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: 'Migrate',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                  this.state.depositedTokens.length>0 &&\n                    <Flex\n                      mb={ this.state.remainingTokens.length>0 ? [3,4] : 0 }\n                      width={1}\n                      id={\"deposited-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Deposited assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.depositedTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            mobile:false,\n                            props:{\n                              width:[0.12,0.09],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.30,0.14],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.21,0.10],\n                            },\n                            parentProps:{\n                              alignItems:['center','flex-start'],\n                            },\n                            fields:[\n                              {\n                                name:'score',\n                              }\n                            ]\n                          },\n                          {\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.22,0.13],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'amountLent'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.11],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'EARNINGS',\n                            props:{\n                              width:[0.15,0.13],\n                              textAlign:'center'\n                            },\n                            parentProps:{\n                              alignItems:'center',\n                              flexDirection:'column',\n                            },\n                            fields:[\n                              {\n                                name:'earnings',\n                                props:{\n                                  decimals:3\n                                }\n                              },\n                              {\n                                name:'earningsPerc',\n                                showLoader:false,\n                                showDirection:false,\n                                props:{\n                                  fontSize:0,\n                                  decimals:3\n                                }\n                              }\n                            ]\n                          },\n                          /*\n                          {\n                            title:'EARNINGS %',\n                            props:{\n                              width:[0.27,0.14],\n                            },\n                            fields:[\n                              {\n                                name:'earningsPerc'\n                              }\n                            ]\n                          },\n                          */\n                          {\n                            title:'',\n                            mobile:false,\n                            props:{\n                              width:0.17,\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Manage',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'redeem',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                    this.state.remainingTokens.length>0 &&\n                    <Flex id=\"remaining-assets\" width={1} flexDirection={'column'}>\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Available assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.remainingTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.10],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.31,this.state.depositedTokens.length>0 ? 0.14 : 0.14],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.22,0.10],\n                            },\n                            fields:[\n                              {\n                                name:'score'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.11],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APR LAST WEEK',\n                            mobile:false,\n                            props:{\n                              width:0.25,\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'aprChart',\n                                style:{\n                                  overflow:'visible',\n                                },\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.26 : 0 , 0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: (props) => {\n                                  return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'Migrate' : 'Deposit';\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                },\n                                funcProps:{\n                                  mainColor: (props) => {\n                                    return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'migrate' : 'deposit'\n                                  }\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                </Flex>\n              </Flex>\n              {\n                !viewOnly && this.props.account && coverProtocolConfig.enabled && (\n                  <Flex\n                    mt={3}\n                    width={1}\n                    id={\"tools\"}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      pb={2}\n                      width={1}\n                      mb={[2,3]}\n                      borderColor={'divider'}\n                      borderBottom={'1px solid transparent'}\n                    >\n                      <Heading.h4\n                        fontSize={[2,4]}\n                        fontWeight={[3,4]}\n                      >\n                        Tools\n                      </Heading.h4>\n                    </Flex>\n                    <Flex\n                      flexDirection={['column','row']}\n                    >\n                      {\n                        ['addFunds','coverProtocol','tokenSwap'].map( (toolName,toolIndex) => {\n                          const toolConfig = this.functionsUtil.getGlobalConfig(['tools',toolName]);\n                          return (\n                            <Flex\n                              width={[1,1/3]}\n                              key={`tool_${toolIndex}`}\n                              mb={toolIndex<2 ? [2,0] : 0}\n                              pr={toolIndex<2 ? [0,3] : 0}\n                            >\n                              <DashboardIconButton\n                                {...this.props}  \n                                icon={toolConfig.icon}\n                                text={toolConfig.desc}\n                                image={toolConfig.image}\n                                title={toolConfig.label}\n                                handleClick={ e => this.props.goToSection(`tools/${toolConfig.route}`) }\n                              />\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                )\n              }\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id={\"yield-farming\"}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Yield Farming</Title>\n                    <AssetsList\n                      enabledTokens={Object.keys(govTokens)}\n                      cols={[\n                        {\n                          title:'TOKEN',\n                          props:{\n                            width:[0.3,0.15]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:2,\n                                height:['1.4em','2.3em']\n                              }\n                            },\n                            {\n                              name:'tokenName'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'BALANCE',\n                          props:{\n                            width:[0.33, 0.25],\n                          },\n                          fields:[\n                            {\n                              name:'tokenBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            }\n                          ]\n                        },\n                        {\n                          title:'REDEEMABLE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                          props:{\n                            width:[0.35,0.30],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'redeemableBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            },\n                          ]\n                        },\n                        {\n                          title:'DISTRIBUTION',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                          props:{\n                            width:[0.35,0.30],\n                          },\n                          fields:[\n                            {\n                              name:'userDistributionSpeed',\n                              props:{\n                                decimals:6\n                              }\n                            }\n                          ]\n                        },\n                        /*\n                        {\n                          mobile:false,\n                          title:'APR',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenApr']),\n                          props:{\n                            width:[0.2,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'apr',\n                            }\n                          ]\n                        },\n                        {\n                          title:'TOKEN PRICE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','tokenPrice']),\n                          mobile:false,\n                          props:{\n                            width: 0.17,\n                          },\n                          parentProps:{\n                            width:1,\n                            pr:[2,4]\n                          },\n                          fields:[\n                            {\n                              name:'tokenPrice',\n                              props:{\n                                unit:'$',\n                                unitPos:'left',\n                                unitProps:{\n                                  mr:1,\n                                  fontWeight:3,\n                                  fontSize:[0,2],\n                                  color:'cellText'\n                                }\n                              }\n                            }\n                          ]\n                        },\n                        */\n                      ]}\n                      {...this.props}\n                      availableTokens={govTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.state.activeCoverages && (\n                  <Flex\n                    width={1}\n                    mb={[0,3]}\n                    id={'active-coverages'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Coverages</Title>\n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <CustomList\n                        rows={this.state.activeCoverages}\n                        handleClick={ this.props.isMobile ? (props) => props.row.status!=='Expired' && props.row.fileClaimUrl && this.functionsUtil.openWindow(props.row.fileClaimUrl) : null }\n                        cols={[\n                          {\n                            title:'PROTOCOL',\n                            props:{\n                              width:[0.42,0.17]\n                            },\n                            fields:[\n                              {\n                                type:'image',\n                                path:['protocolImage'],\n                                props:{\n                                  mr:[1,2],\n                                  size:this.props.isMobile ? '1.2em' : '1.8em'\n                                }\n                              },\n                              {\n                                type:'text',\n                                path:['protocolName'],\n                              }\n                            ]\n                          },\n                          {\n                            title:'BALANCE',\n                            props:{\n                              width:[0.34, 0.15],\n                            },\n                            fields:[\n                              {\n                                type:'number',\n                                path:['balance'],\n                                props:{\n                                  decimals: 4,\n                                }\n                              },\n                              {\n                                type:'text',\n                                path:['token'],\n                                props:{\n                                  ml:[1,2],\n                                  style:{\n                                    textTransform:'uppercase'\n                                  }\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'EXPIRATION DATE',\n                            props:{\n                              width:0.23,\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'text',\n                                path:['expirationDate'],\n                                props:{\n                                  \n                                }\n                              },\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'COVERAGE',\n                            props:{\n                              width:0.15,\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'text',\n                                path:['portfolioCoverage'],\n                                props:{\n                                  \n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'STATUS',\n                            props:{\n                              width:[0.24,0.15],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'icon',\n                                name:'custom',\n                                path:['statusIcon'],\n                                props:{\n                                  mr:[1,2],\n                                  size:this.props.isMobile ? '1.2em' : '1.8em'\n                                }\n                              },\n                              {\n                                name:'custom',\n                                path:['status'],\n                                props:{\n                                  style:{\n                                    textTransform:'capitalize'\n                                  }\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:false,\n                            props:{\n                              width:0.17,\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                type:'button',\n                                name:'custom',\n                                label:'File Claim',\n                                funcProps:{\n                                  disabled:(props) => (props.row.status==='Expired')\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'redeem',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => props.row.status!=='Expired' && props.row.fileClaimUrl && this.functionsUtil.openWindow(props.row.fileClaimUrl)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  </Flex>\n                )\n              }\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id=\"earnings-estimation\"\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Estimated earnings</Title>\n                    <EarningsEstimation\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.props.account && this.state.depositedTokens.length>0 && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={[]}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.15,0.24]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.15,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.32,0.23],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.22],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:0.19,\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.15,0.20],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','1.6em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default StrategyPage;","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TransactionField from '../TransactionField/TransactionField';\nimport { Flex, Box, Text, Icon, Link, Checkbox, Tooltip } from \"rimble-ui\";\n\nclass BatchDeposit extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      execute:{\n        txHash:null,\n        loading:false\n      },\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    usePermit:false,\n    batchRedeems:{},\n    lastExecution:null,\n    permitEnabled:true,\n    hasDeposited:false,\n    permitSigned:false,\n    selectedToken:null,\n    showPermitBox:false,\n    currBatchIndex:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    availableTokens:null,\n    selectedStrategy:null,\n    componentLoaded:false,\n    executeSucceeded:false,\n    migrationEnabled:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    availableStrategies:null,\n    batchDepositEnabled:false,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadStrategies();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      this.setState({\n        componentLoaded:false\n      },async () => {\n        await this.loadTokens();\n      });\n    }\n\n    const selectedStrategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    if (selectedStrategyChanged){\n      const selectedToken = Object.keys(this.state.availableTokens)[0];\n      this.selectToken(selectedToken);\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const executeSucceededChanged = prevState.executeSucceeded !== this.state.executeSucceeded;\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (selectedTokenChanged || contractApprovedChanged || executeSucceededChanged){\n      this.checkBatchs();\n    }\n\n  }\n\n  async execute () {\n\n    const loading = true;\n\n    const callbackExecute = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Execute',\n        eventCategory: 'BatchDeposit',\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        executeSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          execute:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptExecute = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          execute:{\n            ...prevState.processing.execute,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'executeBatch', [true], null, callbackExecute, callbackReceiptExecute);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        execute:{\n          ...prevState.processing.execute,\n          loading\n        }\n      }\n    }));\n  }\n\n  async checkBatchs(migrationSucceeded=false){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.tokenConfig.name,this.state.tokenConfig.address,this.state.tokenConfig.abi)\n    ]);\n\n    let [\n      batchExecutions,\n      currBatchIndex,\n      migrationContractApproved\n    ] = await Promise.all([\n      this.functionsUtil.getBatchedDepositExecutions(migrationContractInfo.address),\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.tokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    // If use Permit don't ask for Approve\n    let usePermit = false;\n    if (!migrationContractApproved && migrationContractInfo.functions && migrationContractInfo.functions.length === 1){\n      const functionInfo = migrationContractInfo.functions[0];\n      usePermit = typeof functionInfo.usePermit !== 'undefined' ? functionInfo.usePermit : false;\n      const nonceMethod = this.functionsUtil.getGlobalConfig(['permit',this.state.tokenConfig.name,'nonceMethod']);\n      const permitContract = this.functionsUtil.getContractByName(this.state.tokenConfig.name);\n      usePermit = usePermit && permitContract && (!nonceMethod || permitContract.methods[nonceMethod] !== undefined);\n    }\n\n    const newState = {};\n    const batchTotals = {};\n    const batchRedeems = {};\n    const batchDeposits = {};\n    let batchCompleted = false;\n\n    currBatchIndex = currBatchIndex || 0;\n    for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex) ; batchIndex++){\n      let [\n        batchTotal,\n        batchRedeem,\n        batchDeposit\n      ] = await Promise.all([\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchRedeemedTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n      ]);\n      if (batchTotal && batchTotal !== null){\n        batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.tokenConfig.decimals);\n      }\n      if (batchDeposit !== null){\n        batchRedeem = this.functionsUtil.fixTokenDecimals(batchRedeem,18);\n        batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.tokenConfig.decimals);\n        if (batchDeposit.gt(0)){\n          batchDeposits[batchIndex] = batchDeposit;\n          // Calculate redeemable idleTokens\n          batchRedeems[batchIndex] = batchDeposit.times(batchRedeem).div(batchTotals[batchIndex]);\n          if (batchRedeems[batchIndex].gt(batchRedeem)){\n            batchRedeems[batchIndex] = batchRedeem;\n          }\n          // Check claimable\n          if (batchIndex < currBatchIndex){\n            batchCompleted = true;\n          }\n        }\n      }\n    }\n\n    newState.batchDeposits = batchDeposits;\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n    const batchDepositInfo = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    const batchDepositEnabled = batchDepositInfo.depositEnabled;\n\n    newState.usePermit = usePermit;\n    newState.showPermitBox = false;\n    newState.claimSucceeded = false;\n    newState.componentLoaded = true;\n    newState.executeSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.hasDeposited = hasDeposited;\n    newState.batchRedeems = batchRedeems;\n    newState.lastExecution = lastExecution;\n    newState.currBatchIndex = currBatchIndex;\n    newState.batchCompleted = batchCompleted;\n    newState.migrationSucceeded = migrationSucceeded;\n    newState.batchDepositEnabled = batchDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    // Prevent user to deposit if the batch has been completed\n    newState.canDeposit = batchDepositEnabled && !batchCompleted;\n    newState.migrationContractApproved = migrationContractApproved;\n    newState.action = hasDeposited || newState.canClaim ? 'redeem' : 'deposit';\n\n    this.setState(newState);\n  }\n\n  async loadStrategies(){\n\n    // Init tokens contracts\n    const availableStrategiesKeys = {};\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n      availableStrategiesKeys[tokenConfig.strategy] = true;\n    });\n\n    const availableStrategies = Object.keys(availableStrategiesKeys).map( strategy => {\n      const strategyConfig = this.functionsUtil.getGlobalConfig(['strategies',strategy]);\n      return {\n        value:strategy,\n        icon:strategyConfig.icon,\n        label:strategyConfig.title\n      };\n    });\n\n    // console.log('availableStrategies',availableStrategies);\n\n    if (availableStrategies && availableStrategies.length>0){\n      let selectedStrategy = availableStrategies[0].value;\n      let selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n      if (selectedToken){\n        const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n        selectedToken = selectedTokenConfig.baseToken;\n        selectedStrategy = selectedTokenConfig.strategy;\n      }\n\n      this.setState({\n        availableStrategies\n      },() => {\n        this.selectStrategy(selectedStrategy,selectedToken);\n      });\n    }\n  }\n\n  /*\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n    if (selectedToken){\n      this.selectToken(selectedToken);\n    }\n  }\n  */\n\n  async selectStrategy (selectedStrategy,selectedToken=null) {\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens)\n      .filter(key => this.props.toolProps.availableTokens[key].strategy === selectedStrategy )\n      .reduce((obj, key) => {\n        const tokenConfig = this.props.toolProps.availableTokens[key];\n        const baseTokenConfig = this.props.availableStrategies[selectedStrategy][tokenConfig.baseToken];\n\n        tokenConfig.abi = baseTokenConfig.abi;\n        tokenConfig.token = baseTokenConfig.token;\n        tokenConfig.address = baseTokenConfig.address;\n        tokenConfig.decimals = baseTokenConfig.decimals;\n        obj[tokenConfig.baseToken] = tokenConfig;\n        return obj;\n      }, {});\n\n    this.setState({\n      availableTokens,\n      selectedStrategy\n    },() => {\n      if (selectedToken){\n        this.selectToken(selectedToken);\n      }\n    });\n  }\n\n  async selectToken (selectedToken) {\n    const selectedTokenConfig = this.state.availableTokens[selectedToken];\n    const strategyAvailableTokens = this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.token];\n\n    const tokenConfig = {\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address,\n      decimals:baseTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:baseTokenConfig.abi,\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.token);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    },() => {\n      // Select strategy and available tokens\n      if (selectedTokenConfig.strategy !== this.state.selectedStrategy){\n        const selectedStrategy = selectedTokenConfig.strategy;\n        this.selectStrategy(selectedStrategy);\n      }\n    });\n  }\n\n  async claim () {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Claim',\n        eventCategory: `BatchDeposit`,\n        eventValue: parseInt(claimableValue),\n        eventLabel: this.props.selectedToken,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  async callbackPermit(){\n    this.setState({\n      permitSigned:true\n    });\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  async callbackApprove(migrationContractApproved){\n    // console.log('callbackApprove',this.state.migrationContractApproved,migrationContractApproved);\n    if (migrationContractApproved !== this.state.migrationContractApproved){\n      this.setState({\n        migrationContractApproved\n      });\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      const migrationSucceeded = false;\n      this.setState({\n        action,\n        migrationSucceeded\n      });\n    }\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  migrationEnabledCallback = (migrationEnabled) => {\n    this.setState({\n      migrationEnabled\n    });\n  }\n\n  migrationCallback = (tx) => {\n    this.checkBatchs(true);\n  }\n\n  render() {\n\n    if (!this.state.selectedStrategy){\n      return null;\n    }\n\n    const usePermit = this.state.permitEnabled && this.state.usePermit;\n    // const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchRedeem = this.state.batchRedeems && Object.values(this.state.batchRedeems).length>0 ? Object.values(this.state.batchRedeems)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n    const contractApproved = (usePermit && this.state.permitSigned) || (!usePermit && this.state.migrationContractApproved);\n    const canExecuteBatch = this.state.batchTotals && this.state.batchTotals[this.state.currBatchIndex] && this.state.batchTotals[this.state.currBatchIndex].gt(0);\n    const strategyDefaultValue = this.state.selectedStrategy ? this.state.availableStrategies.find( s => s.value === this.state.selectedStrategy ) : this.state.availableStrategies[0];\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Choose the strategy:\n            </Text>\n            <GenericSelector\n              {...this.props}\n              name={'strategy'}\n              isSearchable={false}\n              defaultValue={strategyDefaultValue}\n              CustomOptionValue={CustomOptionValue}\n              options={this.state.availableStrategies}\n              onChange={this.selectStrategy.bind(this)}\n              CustomValueContainer={CustomValueContainer}\n            />\n          </Box>\n          {\n            this.state.availableTokens && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select asset to deposit:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-from'}\n                  showBalance={true}\n                  isSearchable={false}\n                  onChange={this.selectToken.bind(this)}\n                  selectedToken={this.state.selectedToken}\n                  availableTokens={this.state.availableTokens}\n                />\n              </Box>\n          }\n          {\n            !this.state.componentLoaded && (\n              <Flex\n                mt={4}\n                flexDirection={'column'}\n              >\n                <FlexLoader\n                  flexProps={{\n                    flexDirection:'row'\n                  }}\n                  loaderProps={{\n                    size:'30px'\n                  }}\n                  textProps={{\n                    ml:2\n                  }}\n                  text={'Loading asset info...'}\n                />\n              </Flex>\n            )\n          }\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : this.state.componentLoaded &&  this.state.selectedTokenConfig && (this.state.canDeposit || this.state.canClaim) && (\n              <Box\n                width={1}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                    px:4,\n                    mt:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  > \n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ contractApproved ? 'CheckBox' : 'LooksOne'}\n                        color={ contractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        {\n                          usePermit ? 'Sign Approve message' : 'Approve the batch deposit contract'\n                        }\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ (this.state.hasDeposited || this.state.batchCompleted) ? 'CheckBox' : 'LooksTwo'}\n                        color={ (this.state.hasDeposited || this.state.batchCompleted) ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Deposit your {this.state.selectedToken}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                        color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Wait for batch execution\n                        <Link\n                          ml={1}\n                          fontWeight={2}\n                          color={'primary'}\n                          display={'inline'}\n                          hoverColor={'primary'}\n                          onClick={ e => this.props.openTooltipModal('Batch Execution Schedule',this.functionsUtil.getGlobalConfig(['messages','batchDepositExecutionSchedule'])) }\n                        >\n                          (Read More)\n                        </Link>\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                        color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Text\n                          ml={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'left'}\n                        >\n                          Claim your {this.state.tokenConfig.idle.token}\n                        </Text>\n                        <Tooltip\n                          placement={'top'}\n                          message={`You will start earning gov tokens after the batch is executed and you claim your ${this.state.tokenConfig.idle.token}`}\n                        >\n                          <Icon\n                            ml={1}\n                            size={'1.2em'}\n                            name={'Warning'}\n                            color={'#ffe000'}\n                            style={{\n                              cursor:'pointer'\n                            }}\n                          />\n                        </Tooltip>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                </DashboardCard>\n              </Box>\n            )\n          }\n          {\n            this.state.componentLoaded && this.props.account && this.state.availableTokens && this.state.selectedToken && (\n              <Box width={1}>\n                {\n                  (contractApproved || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:2,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          color={'cellText'}\n                          name={'LightbulbOutline'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          {this.state.selectedToken} supports Approve and Deposit in a single transaction, disable this feature and try again if you can't deposit in the batch.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded && (\n                    <Flex\n                      p={0}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Batch Deposit?\n                      </Link>\n                    </Flex>\n                  )\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    this.state.batchDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        showActions={false}\n                        usePermit={usePermit}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        showBalanceSelector={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        migrationParams={toMigrate => [toMigrate]}\n                        selectedStrategy={this.props.selectedStrategy}\n                        callbackPermit={this.callbackPermit.bind(this)}\n                        callbackApprove={this.callbackApprove.bind(this)}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationEnabledCallback={this.migrationEnabledCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedToken} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch Deposit is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar web3={this.props.web3} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.tokenConfig.idle.token}!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!<br />You can now claim your {batchRedeem.toFixed(4)} {this.state.tokenConfig.idle.token}\n                            </Text>\n                            <Text\n                              fontSize={1}\n                              color={'#ff9900'}\n                              textAlign={'center'}\n                            >\n                              (You need to claim your {this.state.tokenConfig.idle.token} to start earning Gov Tokens)\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:2,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'1.8em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited <strong>{batchDeposit.toFixed(4)} {this.state.selectedToken}</strong>, please wait until the batch is executed to claim your {this.state.tokenConfig.idle.token}.\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n                {\n                  this.state.batchTotals[this.state.currBatchIndex] && \n                    <DashboardCard\n                      cardProps={{\n                        p:2,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.execute.loading ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <TxProgressBar web3={this.props.web3} waitText={`Batch execution estimated in`} endMessage={`Finalizing batch execution request...`} hash={this.state.processing.execute.txHash} />\n                          </Flex>\n                        ) : this.state.executeSucceeded ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Text\n                              fontWeight={500}\n                              color={'copyColor'}\n                              textAlign={'center'}\n                            >\n                              Batch Pool: {this.state.batchTotals[this.state.currBatchIndex].toFixed(4)} {this.state.selectedToken}\n                            </Text>\n                            {\n                              canExecuteBatch && \n                                <Link\n                                  textAlign={'center'}\n                                  hoverColor={'primary'}\n                                  onClick={this.execute.bind(this)}\n                                >\n                                  Execute Batch\n                                </Link>\n                            }\n                            {\n                              this.state.batchTotals[this.state.currBatchIndex].lt(this.state.selectedTokenConfig.minPoolSize) && (\n                                <Text\n                                  mb={1}\n                                  fontSize={1}\n                                  color={'#ff9900'}\n                                  textAlign={'center'}\n                                >\n                                  (The pool size has to reach at least {this.functionsUtil.formatMoney(this.state.selectedTokenConfig.minPoolSize,0)} {this.state.selectedToken} to be executed)\n                                </Text>\n                              )\n                            }\n                            {\n                              this.state.lastExecution && (\n                                <Text\n                                  fontSize={0}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Last Batch Execution: {this.functionsUtil.strToMoment(this.state.lastExecution.timeStamp*1000).utc().format('YYYY-MM-DD HH:mm UTC')}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchDeposit;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass CoverProtocol extends Component {\n\n  state = {\n    steps:null,\n    infoBox:null,\n    swapInfo:null,\n    portfolio:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedAction:null,\n    successMessage:null,\n    activeCoverages:null,\n    defaultCoverage:null,\n    selectedCoverage:null,\n    contractApproved:false,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedCoverageChanged = prevState.selectedCoverage !== this.state.selectedCoverage;\n    if (selectedCoverageChanged){\n      const selectedToken = this.state.selectedCoverage.collateral;\n      const tokenConfig = Object.values(this.props.availableStrategies)[0][selectedToken];\n      const tokenBalance = await this.functionsUtil.getTokenBalance(selectedToken,this.props.account);\n      const selectedAction = !this.state.selectedAction ? (this.props.urlParams.param2 || 'Claim') : this.state.selectedAction;\n      this.setState({\n        tokenConfig,\n        tokenBalance,\n        selectedToken,\n        selectedAction\n      });\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue && this.state.inputValue.gt(0);\n    const swapInfoChanged = JSON.stringify(prevState.swapInfo) !== JSON.stringify(this.state.swapInfo) && this.state.inputValue && this.state.inputValue.gt(0);\n    if (selectedActionChanged || inputValueChanged || swapInfoChanged || contractApprovedChanged){\n      this.updateData();\n    }\n\n    const contractInfoChanged = JSON.stringify(prevState.contractInfo) !== JSON.stringify(this.state.contractInfo);\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async getSwapInfo(amount){\n    amount = this.functionsUtil.BNify(amount);\n    if (!amount.isNaN() && amount.gt(0)){\n      // console.log('getSwapInfo',this.state.contractInfo.name,this.state.tokenConfig.address,balancerTokenConfig.address,swapFee,covTokens,tokenPrice);\n\n      if (this.state.tokenPrice && this.state.swapFee && this.state.covTokens){\n\n        const swapFee = this.state.swapFee;\n        const tokenPrice = this.state.tokenPrice;\n        let tokenAmountOut = amount.div(tokenPrice);\n        tokenAmountOut = tokenAmountOut.minus(tokenAmountOut.times(swapFee));\n\n        return {\n          amount,\n          tokenAmountOut\n        };\n      }\n    }\n\n    return null;\n  }\n\n  async changeInputCallback(inputValue=null){\n    let swapInfo = null;\n    let balanceSelectorInfo = null;\n    inputValue = inputValue || this.state.inputValue;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      switch (this.state.selectedAction){\n        case 'Mint':\n          balanceSelectorInfo = {\n            color:this.props.theme.colors.transactions.status.completed,\n            text:`You will Mint: ${inputValue.toFixed(4)} CLAIM and NOCLAIM`\n          };\n        break;\n        case 'Claim':\n        case 'NoClaim':\n          const amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.state.tokenConfig.decimals);\n          swapInfo = await this.getSwapInfo(amount);\n          if (swapInfo){\n            if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n              balanceSelectorInfo = {\n                color:this.props.theme.colors.transactions.status.completed,\n                text:`You will Buy: ~${this.functionsUtil.fixTokenDecimals(swapInfo.tokenAmountOut,18).toFixed(4)} ${this.state.selectedAction}`\n              };\n            } else {\n              balanceSelectorInfo = {\n                text:`Not enough liquidity`,\n                color:this.props.theme.colors.transactions.status.failed,\n              };\n            }\n          }\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      swapInfo,\n      inputValue,\n      balanceSelectorInfo\n    });\n  }\n\n  async getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n    amount = this.functionsUtil.BNify(amount);\n    const MAX_UINT256 = this.functionsUtil.BNify(2).pow(256).minus(1).toFixed(0);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        methodName = 'addCover';\n        methodParams = [this.state.tokenConfig.address,parseInt(this.state.selectedCoverage.expirationTimestamp),this.functionsUtil.integerValue(amount)];\n      break;\n      case 'Claim':\n      case 'NoClaim':\n        methodName = 'swapExactAmountOut';\n        const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const swapInfo = await this.getSwapInfo(amount);\n        if (swapInfo){\n          if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n            methodParams = [this.state.tokenConfig.address,this.functionsUtil.integerValue(amount),balancerTokenConfig.address, this.functionsUtil.integerValue(swapInfo.tokenAmountOut), MAX_UINT256];\n          } else {\n            return null;\n          }\n        }\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n    const dashboardUrl = `#${this.functionsUtil.getGlobalConfig(['dashboard','baseRoute'])}/best`;\n    const fixedAmount = this.functionsUtil.fixTokenDecimals(amount,this.state.tokenConfig.decimals);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        const mintedClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['Claim'].address ) : null;\n        const mintedNoClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['NoClaim'].address ) : null;\n        const mintedClaimAmount = mintedClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        const mintedNoClaimAmount = mintedNoClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedNoClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully minted <strong>${mintedClaimAmount.toFixed(4)} CLAIM</strong> and <strong>${mintedNoClaimAmount.toFixed(4)} NOCLAIM</strong> tokens<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'Claim':\n        const claimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const claimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === claimTokenConfig.address ) : null;\n        const receivedClaimAmount = claimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(claimTokensLog.data,16),claimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],claimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you are now covered in the event that there is a successful attack on the protocol<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'NoClaim':\n        debugger;\n        const noClaimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const noClaimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === noClaimTokenConfig.address ) : null;\n        const receivedNoClaimAmount = noClaimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(noClaimTokensLog.data,16),noClaimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],noClaimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedNoClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you will be rewarded if there is no successful attack on the protocol by the expiry date<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Set second step completed\n    let steps = this.state.steps;\n    steps[1].completed = true;\n\n    const transactionSucceeded = true;\n    const tokenBalance = await this.functionsUtil.getTokenBalance(this.state.selectedToken,this.props.account);\n\n    // console.log('transactionSucceeded',infoBox);\n\n    this.setState({\n      steps,\n      infoBox,\n      tokenBalance,\n      transactionSucceeded\n    });\n  }\n\n  async updateData(){\n    let apy = null;\n    const steps = [];\n    let infoBox = null;\n    let swapFee = null;\n    let covTokens = null;\n    let tokenPrice = null;\n    let tokenAmount = null;\n    let contractInfo = null;\n    let collateralAmount = null;\n    let approveDescription = null;\n\n    const claimTokenConfig = this.state.selectedCoverage.tokens['Claim'];\n    const noClaimTokenConfig = this.state.selectedCoverage.tokens['NoClaim'];\n    const balancerClaimConfig = claimTokenConfig.balancerPool;\n    const balancerNoClaimConfig = noClaimTokenConfig.balancerPool;\n\n    await Promise.all([\n      this.props.initContract(claimTokenConfig.name,claimTokenConfig.address,claimTokenConfig.abi),\n      this.props.initContract(noClaimTokenConfig.name,noClaimTokenConfig.address,noClaimTokenConfig.abi),\n      this.props.initContract(balancerClaimConfig.name,balancerClaimConfig.address,balancerClaimConfig.abi),\n      this.props.initContract(balancerNoClaimConfig.name,balancerNoClaimConfig.address,balancerNoClaimConfig.abi)\n    ]);\n\n    const [\n      claimTokenBalance,\n      noClaimTokenBalance,\n      balancerPoolClaimBalance,\n      balancerPoolNoClaimBalance\n    ] = await Promise.all([\n      // Get Claim token balance\n      this.functionsUtil.getTokenBalance(claimTokenConfig.name,this.props.account),\n      // Get NOCLAIM token balance\n      this.functionsUtil.getTokenBalance(noClaimTokenConfig.name,this.props.account),\n      // Get Balancer Claim token Pool balance\n      this.functionsUtil.getTokenBalance(balancerClaimConfig.name,this.props.account),\n      // Get Balancer NOCLAIM token Pool balance\n      this.functionsUtil.getTokenBalance(balancerNoClaimConfig.name,this.props.account)\n    ]);\n\n    // Check if user has both Claim and NOCLAIM tokens\n    const hasMintedTokens = claimTokenBalance && noClaimTokenBalance && claimTokenBalance.gt(0) && noClaimTokenBalance.gt(0);\n\n    // Set Contract Info\n    switch (this.state.selectedAction){\n      case 'Mint':\n        contractInfo = this.props.toolProps.contract;\n      break;\n      case 'NoClaim':\n        contractInfo = noClaimTokenConfig.balancerPool;\n      break;\n      case 'Claim':\n        contractInfo = claimTokenConfig.balancerPool;\n      break;\n      default:\n      break;\n    }\n\n    const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n\n    if (contractInfo){\n      if (balancerTokenConfig){\n        [\n          swapFee,\n          covTokens,\n          tokenPrice\n        ] = await Promise.all([\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSwapFee'),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getBalance',[balancerTokenConfig.address]),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSpotPrice',[this.state.tokenConfig.address,balancerTokenConfig.address])\n        ]);\n\n        // Calculate yearly returns\n        if (tokenPrice){\n          const isClaim = this.state.selectedAction === 'Claim';\n          const expirationTimestamp = this.state.selectedCoverage.expirationTimestamp;\n          const days =  (expirationTimestamp*1000 - Date.now())/(60 * 60 * 24 * 1000);\n          tokenPrice = this.functionsUtil.fixTokenDecimals(tokenPrice,this.state.tokenConfig.decimals);\n          const apyPrice = isClaim ? tokenPrice : this.functionsUtil.BNify(1).minus(tokenPrice).div(tokenPrice);\n          apy = this.functionsUtil.BNify(100).times(apyPrice).times(365).div(days);\n        }\n\n        // Fix swap Fees\n        if (swapFee){\n          swapFee = this.functionsUtil.fixTokenDecimals(swapFee,18);\n        }\n      }\n\n      switch (this.state.selectedAction){\n        case 'Mint':\n          approveDescription = `Approve the Cover Protocol contract`;\n          infoBox = {\n            icon:'MonetizationOn',\n            text:`Stake ${this.state.selectedToken} to mint both CLAIM and NOCLAIM tokens in a 1:1 ratio then add them to the respective Balancer Pool to earn trading fees.<br /><small>Prior to expiry or an accepted claim, users can redeem back their collateral with both their CLAIM and NOCLAIM tokens. <a href=\"https://docs.coverprotocol.com/user-guide/redemption\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a></small>`\n          };\n          // Add Approve Step\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:hasMintedTokens,\n            description:`Mint CLAIM and NOCLAIM tokens`\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks3',\n            description:`Add your CLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolClaimBalance && balancerPoolClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['Claim'].balancerPool.address}/`,\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks4',\n            description:`Add your NOCLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolNoClaimBalance && balancerPoolNoClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['NoClaim'].balancerPool.address}/`,\n          });\n        break;\n        case 'NoClaim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your NOCLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong> if there is no successful attack on the protocol by the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`NOCLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold if there is no successful attack on the protocol by the expiry date.`\n            };\n          }\n\n          // Add Yearly cost and read more\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly return of buying and holding NOCLAIM until expiration is <strong>${apy.toFixed(2)}%</strong>` : null}</span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the NOCLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:noClaimTokenBalance && noClaimTokenBalance.gt(0),\n            description:`Buy NOCLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        case 'Claim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            const portfolioCoveredPerc = 32;//this.state.portfolio && this.state.portfolio.totalBalance.gt(0) ? tokenAmount.div(this.state.portfolio.totalBalance).times(100) : null;\n            infoBox = {\n              icon:'BeachAccess',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your CLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong>${ portfolioCoveredPerc ? ` <strong>(${portfolioCoveredPerc}% of your portfolio)</strong>` : '' } in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'BeachAccess',\n              text:`CLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          }\n\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly cost of buying and holding CLAIM until expiration is <strong>${apy.toFixed(2)}%` : null}</strong></span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the CLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:claimTokenBalance && claimTokenBalance.gt(0),\n            description:`Buy CLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        default:\n        break;\n      }\n\n      const transactionSucceeded = false;\n      this.setState({\n        apy,\n        steps,\n        infoBox,\n        swapFee,\n        covTokens,\n        tokenPrice,\n        contractInfo,\n        approveDescription,\n        transactionSucceeded\n      });\n    }\n  }\n\n  async loadData(){\n    const currTime = parseInt(Date.now()/1000);\n    const activeCoverages = this.props.toolProps.coverages.reduce( (output,c,index) => {\n      if (c.expirationTimestamp>currTime){\n        const expirationDate = this.functionsUtil.strToMoment(c.expirationTimestamp*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n        const icon = `images/tokens/${c.collateral}.svg`;\n        const label = `Collateral: ${c.collateral} - Expiration: ${expirationDate}`;\n        output.push({\n          icon,\n          label,\n          data:c,\n          value:expirationDate,\n        });\n      }\n      return output;\n    },[]);\n\n    const portfolio = await this.functionsUtil.getAccountPortfolio();\n    const defaultCoverage = activeCoverages.length ? activeCoverages[0] : null;\n\n    this.setState({\n      portfolio,\n      defaultCoverage,\n      activeCoverages\n    },() => {\n      if (defaultCoverage){\n        this.selectCoverage(defaultCoverage);\n      }\n    });\n  }\n\n  async selectCoverage(coverage){\n    const selectedCoverage = coverage.data;\n    this.setState({\n      selectedCoverage\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n\n    const isMint = this.state.selectedAction === 'Mint';\n    const isBuyClaim = this.state.selectedAction === 'Claim';\n    const isBuyNoClaim = this.state.selectedAction === 'NoClaim';\n    const txAction = isMint ? this.state.selectedAction : `Buy ${this.state.selectedAction}`;\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.activeCoverages ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading active coverages...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.activeCoverages.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active coverages.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text mb={1}>\n                        Select Coverage:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'strategy'}\n                        isSearchable={false}\n                        options={this.state.activeCoverages}\n                        CustomOptionValue={CustomOptionValue}\n                        defaultValue={this.state.defaultCoverage}\n                        onChange={this.selectCoverage.bind(this)}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      this.state.selectedCoverage && (\n                        <Box\n                          mt={3}\n                          width={1}\n                        >\n                          <Text mb={1}>\n                            Select Action:\n                          </Text>\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={['column','row']}\n                            justifyContent={'space-between'}\n                          >\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isMint ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Add Liquidity'}\n                              imageSrc={'images/mint.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'mint CLAIM and NOCLAIM\\nand stake in Balancer Pool'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isMint}\n                              handleClick={ e => this.setAction('Mint') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy CLAIM'}\n                              imageSrc={'images/claim.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'protect in case of attacks\\nagainst the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyClaim}\n                              handleClick={ e => this.setAction('Claim') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyNoClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy NOCLAIM'}\n                              isMobile={this.props.isMobile}\n                              imageSrc={'images/noclaim.svg'}\n                              subcaption={'get rewarded if no attack\\noccurs on the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyNoClaim}\n                              handleClick={ e => this.setAction('NoClaim') }\n                            />\n                          </Flex>\n                          {\n                            this.state.tokenConfig && this.state.tokenBalance && this.state.contractInfo &&\n                              <Box\n                                mt={2}\n                                mb={3}\n                                width={1}\n                              >\n                                <SendTxWithBalance\n                                  {...this.props}\n                                  action={txAction}\n                                  error={this.state.error}\n                                  steps={this.state.steps}\n                                  infoBox={this.state.infoBox}\n                                  tokenConfig={this.state.tokenConfig}\n                                  tokenBalance={this.state.tokenBalance}\n                                  contractInfo={this.state.contractInfo}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractApproved={this.contractApproved.bind(this)}\n                                  approveDescription={this.state.approveDescription}\n                                  balanceSelectorInfo={this.state.balanceSelectorInfo}\n                                  changeInputCallback={this.changeInputCallback.bind(this)}\n                                  getTransactionParams={this.getTransactionParams.bind(this)}\n                                >\n                                  <BuyModal\n                                    {...this.props}\n                                    showInline={true}\n                                    availableMethods={[]}\n                                    buyToken={this.state.selectedToken}\n                                  />\n                                </SendTxWithBalance>\n                              </Box>\n                          }\n                        </Box>\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default CoverProtocol;\n","import Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TokenMigration extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    migrationSucceeded:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    if (selectedFromToken && selectedFromToken !== this.props.urlParams.param2){\n      this.changeFromToken(selectedFromToken);\n    }\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n  }\n\n  changeFromToken = (selectedToken) => {\n    const convertTool = this.functionsUtil.getGlobalConfig(['tools','tokenMigration']);\n    this.props.goToSection(`tools/${convertTool.route}/${selectedToken}`);\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    const tokenInfo = this.props.toolProps.availableTokens[selectedFromToken];\n\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n\n    const availableStrategies = typeof this.props.toolProps.availableStrategies !== 'undefined' ? this.props.toolProps.availableStrategies : Object.keys(this.props.availableStrategies);\n\n    availableStrategies.forEach( strategy => {\n      const strategyAvailableTokens =  this.props.availableStrategies[strategy];\n      const baseTokenConfig = strategyAvailableTokens[tokenInfo.baseToken];\n      if (!baseTokenConfig){\n        return false;\n      }\n\n      // Remove icon\n      delete baseTokenConfig.icon;\n\n      if (!selectedDestToken){\n        selectedDestToken = baseTokenConfig.idle.token;\n      }\n      baseTokenConfig.strategy = strategy;\n      baseTokenConfig.baseToken = tokenInfo.baseToken;\n      availableDestinationTokens[baseTokenConfig.idle.token] = baseTokenConfig;\n    });\n\n    this.setState({\n      tokenConfig:null,\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n\n    const destTokenConfig = this.state.availableDestinationTokens[selectedDestToken];\n    const tokenInfo = this.props.toolProps.availableTokens[this.state.selectedFromToken];\n\n    const tokenConfig = {\n      token:destTokenConfig.baseToken,\n      address:destTokenConfig.address,\n      decimals:destTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = destTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:tokenInfo.abi,\n      name:tokenInfo.token,\n      token:tokenInfo.token,\n      address:tokenInfo.address\n    };\n    \n    const migrationContract = this.props.toolProps.migrationContract;\n\n    // Add migration function\n    if (tokenInfo.migrateFunction){\n      migrationContract.functions[0].name = tokenInfo.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(destTokenConfig.strategy,tokenInfo.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedDestToken\n    });\n  }\n\n  migrationCallback = () => {\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={true}\n              onChange={this.changeFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-dest'}\n                  showBalance={false}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          {\n            this.state.selectedFromToken && this.state.selectedDestToken ? (\n              <Migrate\n                {...this.props}\n                showActions={false}\n                getTokenPrice={false}\n                isMigrationTool={true}\n                tokenConfig={this.state.tokenConfig}\n                migrationCallback={this.migrationCallback}\n                selectedToken={this.state.selectedFromToken}\n                selectedStrategy={this.props.selectedStrategy}\n              >\n                {\n                  !this.props.account ? (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'Input'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={2}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Please connect with your wallet interact with Idle.\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.props.connectAndValidateAccount}\n                        >\n                          Connect\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.migrationSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              Your {this.state.selectedFromToken} have been successfully migrated!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedFromToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Migrate>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenMigration;\n","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Box, Text, Icon, Link } from \"rimble-ui\";\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\n\nclass BatchMigration extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    hasDeposited:false,\n    selectedToken:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async checkBatchs(){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.selectedTokenConfig.name,this.state.selectedTokenConfig.address,this.state.selectedTokenConfig.abi)\n    ]);\n\n    const [currBatchIndex,migrationContractApproved] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.selectedTokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    const newState = {};\n    const batchDeposits = {};\n    const batchTotals = {};\n    let batchCompleted = false;\n\n    if (currBatchIndex !== null){\n      for (let batchIndex = 0; batchIndex <= currBatchIndex ; batchIndex++){\n        let [batchTotal,batchDeposit] = await Promise.all([\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n        if (batchTotal && batchTotal !== null){\n          batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.selectedTokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.selectedTokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n\n            batchDeposits[batchIndex] = batchDeposit;\n            // Check claimable\n            if (batchIndex < currBatchIndex){\n              batchCompleted = true;\n            }\n          }\n        }\n      }\n\n      newState.batchDeposits = batchDeposits;\n    }\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    newState.claimSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.batchCompleted = batchCompleted;\n    newState.hasDeposited = hasDeposited;\n    newState.canDeposit = !hasDeposited && batchMigrationDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    newState.action = hasDeposited ? 'redeem' : 'deposit';\n    newState.migrationContractApproved = migrationContractApproved;\n\n    this.setState(newState);\n  }\n\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      this.checkBatchs();\n    }\n  }\n\n  selectFromToken = async (selectedToken) => {\n\n    const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const strategyAvailableTokens =  this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.baseToken];\n\n    const tokenConfig = {\n      token:selectedTokenConfig.baseToken,\n      address:selectedTokenConfig.address,\n      decimals:selectedTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:selectedTokenConfig.abi,\n      name:selectedTokenConfig.name,\n      token:selectedTokenConfig.token,\n      address:selectedTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    });\n  }\n\n  claim = async () => {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: `BatchMigration`,\n        eventAction: 'Claim',\n        eventLabel: this.props.selectedToken,\n        eventValue: parseInt(claimableValue)\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  migrationCallback = () => {\n    this.checkBatchs();\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedToken){\n      return null;\n    }\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={false}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            (this.state.canDeposit || this.state.canClaim) && \n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  px:4,\n                  mt:3,\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                > \n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.migrationContractApproved ? 'CheckBox' : 'LooksOne'}\n                      color={ this.state.migrationContractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Approve the batch migration contract\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.hasDeposited ? 'CheckBox' : 'LooksTwo'}\n                      color={ this.state.hasDeposited ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Deposit your {this.state.selectedTokenConfig.token}\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                      color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Wait for the batch to be migrated\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                      color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Claim your {this.state.selectedToken}V4\n                    </Text>\n                  </Flex>\n                </Flex>\n              </DashboardCard>\n          }\n          {\n            this.state.selectedToken ? (\n              <Box width={1}>\n                {\n                  this.state.migrationContractApproved && (this.state.canDeposit || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    batchMigrationDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        showActions={false}\n                        migrationParams={[]}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        callbackApprove={this.checkBatchs.bind(this)}\n                        selectedStrategy={this.props.selectedStrategy}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedTokenConfig.token} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        {\n                          !this.props.account ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3\n                              }}\n                            >\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  size={'2.3em'}\n                                  name={'Input'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Please connect with your wallet interact with Idle.\n                                </Text>\n                                <RoundButton\n                                  buttonProps={{\n                                    mt:2,\n                                    width:[1,1/2]\n                                  }}\n                                  handleClick={this.props.connectAndValidateAccount}\n                                >\n                                  Connect\n                                </RoundButton>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                my:3\n                              }}\n                            >\n                              {\n                                batchId ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      color={'cellText'}\n                                      name={'HourglassEmpty'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      {\n                                        this.state.batchCompleted ? (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >The batch has been migrated, click on the \"Claim\" button to withdraw your tokens.</Text.span>\n                                        ) : (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >\n                                            You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your tokens.\n                                            {\n                                              typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                              <Text.span\n                                                color={'cellText'}\n                                              >\n                                                <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                              </Text.span>\n                                            }\n                                          </Text.span>\n                                        )\n                                      }\n                                    </Text>\n                                  </Flex>\n                                ) : this.state.migrationSucceeded ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'DoneAll'}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You have successfully deposited your {this.state.selectedTokenConfig.token} into the batch!\n                                    </Text>\n                                  </Flex>\n                                ) : (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'MoneyOff'}\n                                      color={'cellText'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You don't have any {this.state.selectedTokenConfig.token} in your wallet.\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                            </DashboardCard>\n                          )\n                        }\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch migration is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar web3={this.props.web3} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.selectedToken} V4!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The batch has been migrated!<br />You can now claim your {this.state.tokenConfig.idle.token} V4.\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:3,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your V4 tokens.\n                                {\n                                  typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                  </Text.span>\n                                }\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Box>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchMigration;","import IDLE from '../contracts/IDLE.json';\nimport WETH from '../abis/tokens/WETH.json';\nimport COMP from '../abis/compound/COMP.json';\nimport TokenSwap from '../TokenSwap/TokenSwap';\nimport yDAIv3 from '../abis/iearn/yDAIv3.json';\nimport yUSDCv3 from '../abis/iearn/yUSDCv3.json';\nimport yUSDTv3 from '../abis/iearn/yUSDTv3.json';\nimport ySUSDv3 from '../abis/iearn/ySUSDv3.json';\nimport yTUSDv3 from '../abis/iearn/yTUSDv3.json';\nimport ETHWrapper from '../ETHWrapper/ETHWrapper';\nimport Timelock from '../contracts/Timelock.json';\nimport CurveZap from '../abis/curve/CurveZap.json';\nimport CovToken from '../abis/cover/CovToken.json';\n// import CurveSwap from '../abis/curve/CurveSwap.json';\nimport CurvePool from '../abis/curve/CurvePool.json';\nimport NexusMutual from '../NexusMutual/NexusMutual';\nimport CoverMint from '../abis/cover/CoverMint.json';\nimport LockedIDLE from '../contracts/LockedIDLE.json';\nimport { Web3Versions } from '@terminal-packages/sdk';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport PriceOracle from '../contracts/PriceOracle.json';\nimport FeeTreasury from '../contracts/FeeTreasury.json';\nimport IdleTokenV2 from '../contracts/IdleTokenV2.json';\nimport StrategyPage from '../StrategyPage/StrategyPage';\nimport BuyModal from '../utilities/components/BuyModal';\nimport IdleTokenV3 from '../contracts/IdleTokenV3.json';\nimport BatchDeposit from '../BatchDeposit/BatchDeposit';\nimport EarlyRewards from '../contracts/EarlyRewards.json';\nimport CoverProtocol from '../CoverProtocol/CoverProtocol';\nimport CurveDeposit from '../abis/curve/CurveDeposit.json';\nimport VesterFactory from '../contracts/VesterFactory.json';\nimport GovernorAlpha from '../contracts/GovernorAlpha.json';\nimport EcosystemFund from '../contracts/EcosystemFund.json';\nimport Comptroller from '../abis/compound/Comptroller.json';\nimport BalancerPool from '../abis/balancer/BalancerPool.json';\nimport IdleController from '../contracts/IdleController.json';\nimport TokenMigration from '../TokenMigration/TokenMigration';\nimport BatchMigration from '../BatchMigration/BatchMigration';\nimport IdleBatchedMint from '../contracts/IdleBatchedMint.json';\nimport { RampInstantSDK } from '@ramp-network/ramp-instant-sdk';\nimport IdleProxyMinter from '../contracts/IdleProxyMinter.json';\nimport IdleRebalancerV3 from '../contracts/IdleRebalancerV3.json';\nimport LiquidityGaugeV2 from '../abis/curve/LiquidityGaugeV2.json';\nimport IdleBatchConverter from '../contracts/IdleBatchConverter.json';\nimport UniswapV2Router02 from '../abis/uniswap/UniswapV2Router02.json';\nimport BalancerExchangeProxy from '../abis/balancer/BalancerExchangeProxy.json';\nimport IdleConverterPersonalSignV4 from '../contracts/IdleConverterPersonalSignV4.json';\n\nconst env = process.env;\n\nconst globalConfigs = {\n  appName: 'Idle',\n  version: 'v5.6',\n  baseToken: 'ETH',\n  baseURL: 'https://idle.finance',\n  forumURL:'https://gov.idle.finance',\n  theme:{\n    darkModeEnabled:true\n  },\n  betaURL: 'https://beta.idle.finance',\n  countries:{\n    'USA':'United States of America',\n    'GBR':'United Kingdom',\n    'AUS':'Australia',\n    'BRA':'Brazil',\n    'CHN':'China',\n    'CAN':'Canada',\n    'EUR':'Europe',\n    'HKG':'Hong Kong',\n    'IND':'India',\n    'MEX':'Mexico',\n    'RUS':'Russia',\n    'ZAF':'South Africa',\n    'KOR':'South Korea'\n  },\n  logs:{ // Enable logs levels\n    errorsEnabled:false,\n    messagesEnabled:false,\n  },\n  connectors:{ // Connectors props\n    metamask:{\n      enabled:true,\n      subcaption:'Browser extension'\n    },\n    opera:{\n      enabled:true,\n      subcaption:'Opera injected wallet'\n    },\n    dapper:{\n      enabled:true,\n      icon:'dapper.png',\n      subcaption:'Browser extension',\n    },\n    coinbase:{\n      enabled:true,\n      icon:'coinbase.png',\n      subcaption:'Connect with Coinbase wallet'\n    },\n    trustwallet:{\n      enabled:true,\n      subcaption:'Connect with Trust Wallet'\n    },\n    walletconnect:{\n      enabled:true,\n      iconModal:'walletconnect.png',\n      subcaption:'Connect with QR code'\n    },\n    walletlink:{\n      enabled:true,\n      icon:'coinbase.png',\n      name:'Coinbase Wallet',\n      subcaption:'Connect with QR code'\n    },\n    fortmatic:{\n      enabled:true,\n      subcaption:'Login with phone-number'\n    },\n    portis:{\n      enabled:true,\n      subcaption:'Login with e-mail'\n    },\n    authereum:{\n      enabled:true,\n      subcaption:'Cross-device wallet'\n    },\n    torus:{\n      enabled:true,\n      icon:'torus.png',\n      subcaption:'One-Click login for Web 3.0'\n    },\n    trezor:{\n      enabled:true,\n      subcaption:'Hardware wallet'\n    },\n    ledger:{\n      enabled:true,\n      subcaption:'Hardware wallet'\n    },\n    custom:{\n      enabled:true,\n      icon:'tokens/ETH.svg',\n      subcaption:'Custom address'\n    }\n  },\n  newsletterSubscription:{\n    endpoint:'https://dev.lapisgroup.it/idle/newsletter.php'\n  },\n  messages:{\n    scoreShort:'Protocol Risk Score',\n    apyShort:'Annual Percentage Yield',\n    tokenPrice:'The token price is calculated using Uniswap spot prices.',\n    cheapRedeem:'Amount of unlent funds available for low gas fees redeem',\n    curveBonusSlippage:'Slippage or bonus depending on if the coin is low or high in the Curve Pool',\n    distributionSpeed:'The distribution indicates the amount of tokens distributed for the entire pool.',\n    directMint:'Pay an additional gas fee to rebalance the pool and help all users gain an additional APR',\n    performanceFee:'This fee is charged on positive returns generated by Idle including accrued gov tokens except IDLE',\n    govTokenApr:'Governance Token APR is calculated using the spot price from Uniswap and the current distribution speed for the specific pool.',\n    userDistributionSpeed:'The distribution indicates the amount of tokens distributed for your account based on your current pool share.',\n    govTokenRedeemableBalance:'The redeemable balance is re-calculated on every interaction with the smart-contract so, the shown balance may be lower than the real one.',\n    riskScoreShort:'It\\'s a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.',\n    batchDepositExecutionSchedule:'Batches are executed twice a week, usually on Sunday and Wednesday, and only when the pool size reaches at least 20,000$. The time of each execution will vary depending on the gas price of the Ethereum network.',\n    apyLong:'APY is based on (I) the current yield advertised by the underlying protocol, (II) the current distribution rate of governance tokens provided by underlying lending protocols (III) the current estimated price of governance tokens from Uniswap spot prices. (IV) IDLE token distribution is referred to the entire pool.',\n    yieldFarming:'Strategies in Idle now will be able to support and distribute a vast range of yield opportunities across multiple protocols. Users will be able to receive their equivalent share of governance token that the protocol is receiving while allocating liquidity to yield farming opportunities. <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://idlefinance.medium.com/idle-yield-farming-upgrade-18e4bc483c8f\">Read more here</a>.',\n    riskScore:`It's a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.<br /><br />The model outputs a 0-10 score, where <strong>0 is the most risky and 10 is the most safe.</strong> Visit <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://defiscore.io/overview\">https://defiscore.io/overview</a> for further information.`,\n    curveInstructions:`<strong>Depositing into the pool:</strong><br />By depositing your funds into the Curve Pool you may incur in slippage or bonus depending on if the coin is low or high in the pool.<br /><br /><strong>Withdrawing share from the pool:</strong><br />When you redeem your tokens previously deposited in the Curve Pool you get back an uneven amounts of tokens, that can give slippage or bonus depending on if the coin is low or high in the pool.`\n  },\n  analytics:{\n    google:{\n      events:{\n        enabled:true, // Enable Google Analytics events\n        debugEnabled:false, // Enable sending for test environments\n        addPostfixForTestnet:true // Append testnet to eventCategory\n      }\n    }\n  },\n  modals:{ // Enable modals\n    first_deposit_referral:false, // Referral share modal\n    first_deposit_share:true, // First deposit share modal\n    migrate:{\n      enabled:true\n    },\n    welcome:{ // Welcome modal\n      enabled:true,\n      frequency:604800 // One week\n    }\n  },\n  dashboard:{\n    baseRoute:'/dashboard',\n    theme:{\n      mode:'light',\n      darkModeEnabled:true\n    },\n  },\n  governance:{\n    test:false,\n    enabled:true,\n    startBlock:11333729,\n    baseRoute:'/governance',\n    props:{\n      tokenName:'IDLE',\n      availableContracts:{\n        IDLE,\n        FeeTreasury,\n        PriceOracle,\n        GovernorAlpha,\n        EcosystemFund,\n        IdleController\n      }\n    },\n    contracts:{\n      delegates:'IDLE',\n      governance:'GovernorAlpha',\n    }\n  },\n  curve:{\n    enabled:false,\n    params:{\n      n_coins:3,\n      label:'Curve',\n      route:'/dashboard/curve',\n      image:'images/protocols/curve.svg',\n      imageInactive:'images/protocols/curve-off.svg',\n    },\n    rates:{\n      path:['apy','day','idle'],\n      endpoint:'https://www.curve.fi/raw-stats/apys.json'\n    },\n    poolContract:{\n      decimals:18,\n      abi:CurvePool,\n      name:'idleDAI+idleUSDC+idleUSDT',\n      token:'idleDAI+idleUSDC+idleUSDT',\n      address:'0x09f4b84a87fc81fc84220fd7287b613b8a9d4c05'\n    },\n    depositContract:{\n      abi:CurveDeposit,\n      name:'idleCurveDeposit',\n      address:'0x83f252f036761a1e3d10daca8e16d7b21e3744d7'\n    },\n    gaugeContract:{\n      abi:LiquidityGaugeV2,\n      name:'LiquidityGaugeV2',\n      address:'0xd69ac8d9D25e99446171B5D0B3E4234dAd294890'\n    },\n    zapContract:{\n      abi:CurveZap,\n      name:'idleCurveZap',\n      address:'0x456974df1042ba7a46fd49512a8778ac3b840a21'\n    },\n    migrationContract:{\n      abi:CurveDeposit,\n      name:'idleCurveDeposit',\n      address:'0x83f252f036761a1e3d10daca8e16d7b21e3744d7',\n      functions:[\n        {\n          label:'Deposit',\n          name:'add_liquidity'\n        },\n      ]\n    },\n    availableTokens:{\n      idleDAIYield:{\n        decimals:18,\n        enabled:true,\n        baseToken:'DAI',\n        token:'idleDAIYield',\n        address:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        migrationParams:{\n          n_coins:3,\n          coinIndex:0\n        },\n      },\n      idleUSDCYield:{\n        decimals:18,\n        enabled:true,\n        baseToken:'USDC',\n        token:'idleUSDCYield',\n        address:'0x5274891bEC421B39D23760c04A6755eCB444797C',\n        migrationParams:{\n          n_coins:3,\n          coinIndex:1\n        },\n      },\n      idleUSDTYield:{\n        decimals:18,\n        enabled:true,\n        baseToken:'USDT',\n        token:'idleUSDTYield',\n        address:'0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        migrationParams:{\n          n_coins:3,\n          coinIndex:2\n        },\n      },\n    }\n  },\n  permit:{\n    DAI:{\n      version:1,\n      EIPVersion:null,\n      nonceMethod:'nonces',\n      name:'Dai Stablecoin',\n      type:[\n        { name: \"holder\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"expiry\", type: \"uint256\" },\n        { name: \"allowed\", type: \"bool\" },\n      ]\n    },\n    USDC:{\n      version:2,\n      name:'USD Coin',\n      EIPVersion:2612,\n      nonceMethod:'nonces',\n      type:[\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" },\n      ]\n    }\n  },\n  govTokens:{\n    IDLE:{\n      abi:IDLE,\n      decimals:18,\n      token:'IDLE',\n      enabled:true,\n      showAUM:false, // Include IDLE balance in AUM\n      showAPR:false, // Include IDLE Apr\n      protocol:'idle',\n      showPrice:false, // Show price in Yield Farming section\n      disabledTokens:[], // Disable IDLE distribution for idleToken\n      showBalance:false, // Include IDLE balance in Portfolio Donut\n      aprTooltipMode:false,\n      distributionFrequency:'day', // Multiply distribution per block\n      color:'hsl(162, 100%, 41%)',\n      icon:'images/tokens/IDLE.png',\n      address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e' // MAIN\n      // address:'0xAB6Bdb5CCF38ECDa7A92d04E86f7c53Eb72833dF', // KOVAN\n    },\n    COMP:{\n      abi:COMP,\n      decimals:18,\n      token:'COMP',\n      enabled:true,\n      showAUM:true, // Include IDLE balance in AUM\n      showAPR:true, // Include COMP Apr\n      showPrice:true,\n      showBalance:true, // Include COMP balance in Portfolio Donut\n      disabledTokens:[],\n      protocol:'compound',\n      aprTooltipMode:false,\n      distributionFrequency:'day',\n      color:'hsl(162, 100%, 41%)',\n      address:'0xc00e94cb662c3520282e6f5717214004a7f26888', // MAIN\n      // address:'0x61460874a7196d6a22d1ee4922473664b3e95270' // KOVAN\n    }\n  },\n  contracts:{\n    LockedIDLE:{\n      abi:LockedIDLE,\n      address:'0xF241a0151841AE2E6ea750D50C5794b5EDC31D99'\n    },\n    FeeTreasury:{\n      abi:FeeTreasury,\n      address:'0x69a62c24f16d4914a48919613e8ee330641bcb94' // MAIN\n    },\n    PriceOracle:{\n      abi:PriceOracle,\n      address:'0x972A64d108e250dF98dbeac8170678501f5EF181' // MAIN\n      // address:'0xCab5760688db837Bb453FE1DFBC5eDeE6fa8F0FF' // KOVAN\n    },\n    Timelock:{\n      abi:Timelock,\n      address:'0xD6dABBc2b275114a2366555d6C481EF08FDC2556' // MAIN\n      // address:'0xfD88D7E737a06Aa9c62B950C1cB5eE63DA379AFd' // KOVAN\n    },\n    EcosystemFund:{\n      abi:EcosystemFund,\n      address:'0xb0aA1f98523Ec15932dd5fAAC5d86e57115571C7' // MAIN\n      // address:'0x125d3D6A8e546BD13802c309429CBB4db5737d57' // KOVAN\n    },\n    VesterFactory:{\n      abi:VesterFactory,\n      address:'0xbF875f2C6e4Cc1688dfe4ECf79583193B6089972' // MAIN\n      // address:'0x9b52f91578c8AfA8e2DF07d4D7726bB6b73Ec1FE' // KOVAN\n    },\n    IdleController:{\n      abi:IdleController,\n      address:'0x275DA8e61ea8E02d51EDd8d0DC5c0E62b4CDB0BE' // MAIN\n      // address:'0x8Ad5F0644b17208c81bA5BDBe689c9bcc7143d87' // KOVAN\n    },\n    EarlyRewards:{\n        abi:EarlyRewards,\n        address:'0xa1F71ED24ABA6c8Da8ca8C046bBc9804625d88Fc' // MAIN\n        // address:'0x07A94A60B54c6b2Da19e23D6E9123180Bf92ED40' // KOVAN\n    },\n    GovernorAlpha:{\n      abi:GovernorAlpha,\n      address:'0x2256b25CFC8E35c3135664FD03E77595042fe31B' // MAIN\n      // address:'0x782cB1dbd0bD4df95c2497819be3984EeA5c2c25' // KOVAN\n    },\n    Comptroller:{\n      abi:Comptroller,\n      address:'0x3d9819210a31b4961b30ef54be2aed79b9c9cd3b', // Main\n      // address:'0x5eae89dc1c671724a672ff0630122ee834098657' // Kovan\n    },\n    UniswapRouter:{\n      abi:UniswapV2Router02,\n      address:'0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\n    },\n    BalancerExchangeProxy:{\n      abi:BalancerExchangeProxy,\n      address:'0x3E66B66Fd1d0b02fDa6C811Da9E0547970DB2f21'\n    }\n  },\n  tokens:{\n    DAI:{\n      zeroExInstant:{\n        orderSource: 'https://api.0x.org/sra/',\n        assetData:'0xf47261b00000000000000000000000006b175474e89094c44da98b954eedeac495271d0f',\n        affiliateInfo: {\n            feeRecipient: '0x4215606a720477178AdFCd5A59775C63138711e8',\n            feePercentage: 0.0025\n        },\n      },\n    },\n    USDC:{\n      zeroExInstant:{\n        orderSource: 'https://api.0x.org/sra/',\n        assetData:'0xf47261b0000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        affiliateInfo: {\n            feeRecipient: '0x4215606a720477178AdFCd5A59775C63138711e8',\n            feePercentage: 0.0025\n        },\n      },\n    },\n  },\n  strategies:{\n    best:{\n      token:'DAI',\n      color:'#f32121',\n      comingSoon:false,\n      addGovTokens:true,\n      titlePostfix:null,\n      title:'Best-Yield',\n      iconName:'Whatshot',\n      govTokensEnabled:true,\n      component: StrategyPage,\n      chartColor:'hsl(40,95%,59%)',\n      icon:'images/strategies/best-on.svg',\n      iconInactive:'images/strategies/best-off.svg',\n      iconInactiveDark:'images/strategies/best-white.svg',\n      desc:'Maximize your returns across DeFi protocols',\n      descLong:'The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.',\n      descShort:'The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.'\n    },\n    risk:{\n      token:'DAI',\n      color:'#2196F3',\n      comingSoon:false,\n      titlePostfix:null,\n      addGovTokens:true,\n      iconName:'Security',\n      title:'Risk-Adjusted',\n      govTokensEnabled:true,\n      component: StrategyPage,\n      chartColor:'hsl(211,67%,47%)',\n      icon:'images/strategies/risk-on.svg',\n      iconInactive:'images/strategies/risk-off.svg',\n      iconInactiveDark:'images/strategies/risk-white.svg',\n      desc:'Optimize your risk exposure across DeFi protocols',\n      descLong:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.',\n      descShort:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.'\n    },\n    new:{\n      token:'DAI',\n      color:'#2196F3',\n      comingSoon:true,\n      addGovTokens:true,\n      iconName:'Adjust',\n      title:'Coming Soon',\n      chartColor:'hsl(211,67%,47%)',\n      icon:'images/strategies/solr-on.svg',\n      desc:'More strategies are coming soon!',\n      iconInactive:'images/strategies/solr-off.svg',\n      descLong:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.',\n      descShort:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.'\n    }\n  },\n  stats:{\n    enabled:true, // Enable endpoint\n    rates:{\n      TTL:300, // 5 minutes\n      endpoint:'https://api.idle.finance/rates/'\n    },\n    tvls:{\n      TTL:120,\n      endpoint:'https://api.idle.finance/tvls/'\n    },\n    substack:{\n      TTL:1800,\n      endpoint:'https://api.idle.finance/substack/'\n    },\n    scores:{\n      TTL:300, // 5 minutes\n      endpoint:'https://api.idle.finance/scores/'\n    },\n    config:{\n      headers: env.REACT_APP_IDLE_KEY ? { Authorization: `Bearer ${env.REACT_APP_IDLE_KEY}` } : {}\n    },\n    versions:{\n      /*\n      v2:{\n        label:'Idle V2',\n        startTimestamp:null,\n        additionalProtocols:[],\n        endTimestamp:1589752999,\n        enabledStrategies:['best'],\n        showPerformanceTooltip:false,\n        enabledTokens:['DAI','USDC'],\n      },\n      */\n      v3:{\n        label:'Idle V3',\n        additionalProtocols:[],\n        endTimestamp:1597237542,\n        startTimestamp:1589801874,\n        showPerformanceTooltip:false,\n        strategiesParams:{\n          risk:{\n            endTimestamp:1597233922,\n          }\n        },\n        enabledStrategies:['best','risk'],\n        enabledTokens:['DAI','USDC','USDT','TUSD','SUSD','WBTC'],\n      },\n      v4:{\n        label:'Idle V4',\n        endTimestamp:null,\n        startTimestamp:1597442400, // 1598220000\n        enabledStrategies:['best','risk'],\n        showPerformanceTooltip:true,\n        strategiesParams:{\n          risk:{\n            startTimestamp:1599183170,\n          }\n        },\n        enabledTokens:['DAI','USDC','USDT','TUSD','SUSD','WBTC','WETH'],\n        additionalProtocols:[\n          {\n            decimals:16,\n            protocol:'compound',\n            name:'compoundWithCOMP',\n          }\n        ]\n      }\n    },\n    tokens:{\n      DAI:{\n        decimals:18,\n        enabled:true,\n        color:{\n          rgb:[250,184,51],\n          hex:'#F7B24A',\n          hsl:['40', '95%', '59%']\n        },\n        chart:{\n          labelTextColorModifiers:['darker', 2]\n        },\n        startTimestamp:'2020-02-11',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      USD:{\n        enabled:true,\n        color:{\n          hex:'#85bb65',\n          rgb:[133, 187, 101],\n          hsl:['98', '39%', '56%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 2]\n        },\n        address:null,\n        startTimestamp:'2020-02-04',\n      },\n      USDC:{\n        decimals:6,\n        enabled:true,\n        color:{\n          hex:'#2875C8',\n          rgb:[40,117,200],\n          hsl:['211', '67%', '47%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 2]\n        },\n        startTimestamp:'2020-02-04',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      USDT:{\n        decimals:6,\n        enabled:true,\n        color:{\n          hex:'#22a079',\n          rgb:[34, 160, 121],\n          hsl:['161', '65%', '38%']\n        },\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        startTimestamp:'2020-02-04',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      TUSD:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'0340a1',\n          rgb:[3, 64, 161],\n          hsl:['217', '96%', '32%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 5]\n        },\n        startTimestamp:'2020-06-22',\n        address:'0x0000000000085d4780b73119b644ae5ecd22b376',\n      },\n      SUSD:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#1e1a31',\n          rgb:[30, 26, 49],\n          hsl:['250', '31%', '15%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 5]\n        },\n        startTimestamp:'2020-06-22',\n        address:'0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n      },\n      WBTC:{\n        decimals:8,\n        enabled:true,\n        color:{\n          hex:'#eb9444',\n          rgb:[235, 148, 68],\n          hsl:['29', '81%', '59%']\n        },\n        startTimestamp:'2020-06-15',\n        conversionRateField:'wbtcDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4],\n        },\n        address:'0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      WETH:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#ee1f79',\n          rgb:[238, 31, 121],\n          hsl:['334', '86%', '53%']\n        },\n        startTimestamp:'2021-02-16',\n        conversionRateField:'wethDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4],\n        },\n        address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      COMP:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#00d395',\n          rgb:[0, 211, 149],\n          hsl:['162', '100%', '41%']\n        },\n        startTimestamp:'2020-06-15',\n        conversionRateField:'compDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0xc00e94cb662c3520282e6f5717214004a7f26888',\n      },\n      IDLE:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#0d55bb',\n          rgb:[13, 85, 187],\n          hsl:['215', '87%', '39%']\n        },\n        startTimestamp:'2020-11-10',\n        icon:'images/tokens/IDLE.png',\n        conversionRateField:'idleDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0xc00e94cb662c3520282e6f5717214004a7f26888',\n      },\n      'idleDAI+idleUSDC+idleUSDT':{\n        decimals:18,\n        enabled:false,\n        name:'Curve.fi',\n        color:{\n          hex:'#ff0000',\n          rgb:[255, 0, 0],\n          hsl:['0', '100%', '50%']\n        },\n        startTimestamp:'2020-06-15',\n      },\n    },\n    protocols:{\n      compound:{\n        legend:true,\n        enabled:true,\n        label:'Compound',\n        color:{\n          rgb:[0, 209, 146],\n          hsl:['162', '100%', '41%']\n        }\n      },\n      compoundWithCOMP:{\n        enabled:true,\n        rateField:['rate','compoundAdditionalAPR'],\n        label:'Compound + COMP',\n        color:{\n          rgb:[0, 153, 107],\n          hsl:['162', '100%', '30%']\n        }\n      },\n      fulcrum:{\n        legend:false,\n        enabled:false,\n        label:'Fulcrum',\n        color:{\n          rgb:[2, 138, 192],\n          hsl:['197', '98%', '38%']\n        }\n      },\n      dsr:{\n        label:'DSR',\n        enabled:false,\n        icon:'CHAI.png',\n        color:{\n          rgb:[222, 52, 67],\n          hsl:['355', '72%', '54%']\n        }\n      },\n      dydx:{\n        legend:true,\n        label:'DyDx',\n        enabled:true,\n        color:{\n          rgb:[87, 87, 90],\n          hsl:['240', '2%', '35%']\n        }\n      },\n      iearn:{\n        label:'Yearn',\n        enabled:true,\n      },\n      aave:{\n        label:'Aave V1',\n        legend:true,\n        enabled:true,\n        color:{\n          rgb:[230, 131, 206],\n          hsl:['315', '66%', '71%']\n        }\n      },\n      aavev2:{\n        legend:true,\n        enabled:true,\n        icon:'aave.svg',\n        label:'Aave V2',\n        color:{\n          rgb:[151, 79, 141],\n          hsl:['308', '31%', '45%']\n        }\n      },\n      curve:{\n        label:'',\n        enabled:true,\n        color:{\n          rgb:[0, 55, 255],\n          hsl:['227', '100%', '50%']\n        }\n      },\n      idle:{\n        label:'Idle',\n        enabled:true,\n        color:{\n          rgb:[0, 55, 255],\n          hsl:['227', '100%', '50%']\n        }\n      }\n    }\n  },\n  contract:{\n    methods:{\n      redeem:{\n        skipRebalance:true,\n        metaTransactionsEnabled:false\n      },\n      deposit:{\n        skipMint:true,\n        minAmountForMint:100000,\n        skipMintCheckboxEnabled:true,\n        metaTransactionsEnabled:false,\n        proxyContract:{\n          enabled:false,\n          abi:IdleProxyMinter,\n          name:'IdleProxyMinter',\n          function:'mintIdleTokensProxy',\n          address:'0x7C4414aA6B0c6CB1Bc7e5BFb7433138426AC637a',\n        }\n      },\n      migrate:{\n        skipRebalance:true,\n        minAmountForRebalance:10000,\n        minAmountForRebalanceMetaTx:10000\n      },\n      redeemGovTokens:{\n        enabled:true\n      },\n      rebalance:{\n        enabled:true,\n        abi:IdleRebalancerV3\n      }\n    }\n  },\n  network:{ // Network configurations\n    availableNetworks:{\n      1:'Mainnet',\n      3:'Ropsten',\n      4:'Rinkeby',\n      42:'Kovan',\n      1337:'Hardhat'\n    },\n    isForked:false, // If TRUE the tx confirmation callback is fired on the receipt\n    requiredNetwork:1, // { 1: Mainnet, 3: Ropsten, 42: Kovan }\n    blocksPerYear:2371428,\n    firstBlockNumber:8119247,\n    requiredConfirmations: 1,\n    accountBalanceMinimum: 0, // in ETH for gas fees\n    providers:{\n      infura:{\n        42: 'https://kovan.infura.io/v3/',\n        1: 'https://mainnet.infura.io/v3/',\n        1337: 'https://mainnet.infura.io/v3/'\n      },\n      etherscan:{\n        enabled:true, // False for empty txs list (try new wallet)\n        endpoints:{\n          1: 'https://api.etherscan.io/api',\n          1337: 'https://api.etherscan.io/api',\n          42: 'https://api-kovan.etherscan.io/api'\n        }\n      },\n      snapshot:{\n        whitelist:[\n          '0x9993ADB62085AcB05Fc493f7A1D10C11227A78fa',\n          '0xf12ce5807e3d3128B876aa1Cec0632D63547E22E'\n        ],\n        endpoints:{\n          proposals:'https://hub.snapshot.page/api/idlefinance.eth/proposals'\n        },\n        urls:{\n          proposals:'https://signal.idle.finance/#/idlefinance.eth/proposal/'\n        }\n      },\n      biconomy:{\n        enabled:false,\n        enableLogin:false,\n        supportedNetworks:[1,42],\n        disabledWallets:['authereum'],\n        endpoints:{\n          limits:'https://api.biconomy.io/api/v1/dapp/checkLimits'\n        },\n        params:{\n          debug: false,\n          apiKey: env.REACT_APP_BICONOMY_KEY,\n          dappId: env.REACT_APP_BICONOMY_APPID,\n          apiId: '36572ec9-ae5c-4c4a-9530-f3ae7c7ac829'\n        }\n      },\n      terminal:{\n        enabled:false,\n        supportedNetworks:[1,42],\n        params:{\n          apiKey: env.REACT_APP_TERMINAL_KEY,\n          projectId: env.REACT_APP_TERMINAL_PROJECT_ID,\n          source: null,\n          web3Version: Web3Versions.one\n        }\n      },\n      simpleID:{\n        enabled:false,\n        supportedNetworks:[1],\n        getNetwork:(networkId,availableNetworks) => {\n          let networkName = null;\n          switch (networkId){\n            case 1:\n              networkName = 'mainnet';\n            break;\n            default:\n              networkName = availableNetworks[networkId] ? availableNetworks[networkId].toLowerCase() : 'mainnet';\n            break;\n          }\n          return networkName;\n        },\n        params:{\n          appOrigin: window.location.origin,\n          appName: \"Idle\",\n          appId: \"eb4d1754-a76e-4c58-8422-54b5ca2395e7\",\n          renderNotifications: false,\n          network: 'mainnet'\n        }\n      }\n    }\n  },\n  notifications:[\n    {\n      enabled:false,\n      end:1612282726374,\n      start:1611677841027,\n      date:'Jan 26, 2021 16:18 UTC',\n      title:'Cover Protocol Available',\n      hash:'/dashboard/tools/cover-protocol',\n      image:'/images/protocols/cover-logo.svg',\n      text:'Protect your portfolio with Cover Protocol',\n    }\n  ],\n  tools:{\n    ethWrapper:{\n      enabled:true,\n      label:'ETH Wrapper',\n      route:'eth-wrapper',\n      subComponent:ETHWrapper,\n      image:'images/tokens/WETH.svg',\n      desc:'Wrap your ETH and get WETH. Unwrap your WETH and get back ETH.',\n      props:{\n        contract:{\n          abi:WETH,\n          name:'WETH',\n          decimals:18,\n          token:'WETH',\n          address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2'\n        },\n      }\n    },\n    coverProtocol:{\n      enabled:false,\n      label:'Cover Protocol',\n      route:'cover-protocol',\n      subComponent:CoverProtocol,\n      image:'images/protocols/cover-logo.svg',\n      desc:'Get your Idle Portfolio covered against Smart Contract risk',\n      fileClaimUrl:'https://app.coverprotocol.com/app/claims/new?protocol=IDLE',\n      props:{\n        contract:{\n          decimals:18,\n          abi:CoverMint,\n          name:'CoverMint',\n          address:'0x46f2f34742c1d9b9b220aabf0ff26bf59ec9f8a0'\n        },\n        coverages:[\n          {\n            collateral:'DAI',\n            expirationTimestamp:1614470400,\n            tokens:{\n              Claim:{\n                abi:CovToken,\n                name:'COVER_IDLE_2021_02_28_DAI_0_CLAIM',\n                address:'0xa7dac6774e5e40f56a0bf06af6cf9b1f3d037bcc',\n                balancerPool:{\n                  decimals:18,\n                  abi:BalancerPool,\n                  name:'BAL_COVER_IDLE_2021_02_28_DAI_0_CLAIM',\n                  address:'0xeb2b9959c7943eb3c0bdb69ede25247bab4d1c6c',\n                }\n              },\n              NoClaim:{\n                abi:CovToken,\n                name:'COVER_IDLE_2021_02_28_DAI_0_NOCLAIM',\n                address:'0x53df0bfa014b7522299c129c5a7b318f02adb469',\n                balancerPool:{\n                  decimals:18,\n                  abi:BalancerPool,\n                  name:'BAL_COVER_IDLE_2021_02_28_DAI_0_NOCLAIM',\n                  address:'0xce0e9e7a1163badb7ee79cfe96b5148e178cab73',\n                }\n              }\n            }\n          },\n        ],\n      }\n    },\n    batchDeposit:{\n      enabled:true,\n      icon:'Storage',\n      claimEnabled:true,\n      depositEnabled:true,\n      route:'batch-deposit',\n      label:'Batch Deposit',\n      subComponent:BatchDeposit,\n      desc:'Deposit your tokens in the batch and wait until its execution to claim your Idle Tokens V4',\n      props:{\n        availableTokens:{\n          idleDAIYield:{\n            decimals:18,\n            strategy:'best',\n            baseToken:'DAI',\n            minPoolSize:20000,\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintDAI',\n              address:'0x633fb4d38B24dC890b11Db2AE2B248D13F996A79', // Main\n              // address:'0x1B7bA0361A15CCF62521cF7d2Cbb2Ba90b1521a7', // Kovan\n              functions:[\n                {\n                  name:'deposit',\n                  usePermit:true,\n                  label:'Deposit',\n                  permitName:'permitAndDeposit'\n                },\n              ]\n            },\n          },\n          idleUSDCYield:{\n            decimals:6,\n            strategy:'best',\n            baseToken:'USDC',\n            minPoolSize:20000,\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDC',\n              address:'0x562C4fd96F0652F5Fcfa96b0a33088B5a6eAeE9B', // Main\n              // address:'0x3F35eB839f91b614195a47A593dB46b14cd7EaF8', // Kovan\n              functions:[\n                {\n                  name:'deposit',\n                  label:'Deposit',\n                  usePermit:true,\n                  permitName:'permitEIP2612AndDepositUnlimited'\n                },\n              ]\n            },\n          },\n          /*\n          idleUSDTYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDT',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDT',\n              address:'0xee5c50c7c49dec47dde2f9b0233b9e14a8f00cf2',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleSUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'SUSD',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintSUSD',\n              address:'0xE2eE519399a49f1A2004a25DA61e82867A69b9b1',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleTUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'TUSD',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintTUSD',\n              address:'0x174a273f0ea28e55b6dd13259aa43d262b863a86',\n              functions:[\n                {\n                  usePermit:true,\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleWBTCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'WBTC',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintWBTC',\n              address:'0xbfDC7d97559173B52EF2A2f1bC9BeCf97B0D401D',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleDAISafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'DAI',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintDAISafe',\n              address:'0x08db226d63cE724A6091Ba82D28dFc76ceCa23d8',\n              functions:[\n                {\n                  name:'deposit',\n                  label:'Deposit',\n                  usePermit:true,\n                },\n              ]\n            },\n          },\n          idleUSDCSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDC',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDCSafe',\n              address:'0xA6C89A31D59f9C68D9Cba28d690C5E52058fb472',\n              functions:[\n                {\n                  name:'deposit',\n                  label:'Deposit',\n                  usePermit:true,\n                },\n              ]\n            },\n          },\n          idleUSDTSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDT',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDTSafe',\n              address:'0xd47B96Fb33b79a4Dd81a2bfa676eBB669166f619',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          }\n          */\n        }\n      }\n    },\n    batchMigration:{\n      enabled:true,\n      claimEnabled:true,\n      depositEnabled:false,\n      icon:'FileDownload',\n      route:'batch-migration',\n      label:'Batch Migration',\n      subComponent:BatchMigration,\n      desc:'Deposit your Idle Tokens V3 into a batch and wait until its conversion to the Idle Token V4',\n      props:{\n        availableTokens:{\n          idleDAIYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'DAI',\n            name:'idleDAIYieldV3',\n            token:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterDAI',\n              address:'0xe0BfD08dA4DAf8f8BA11d1c3802009E75f963497',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDC',\n            name:'idleUSDCYieldV3',\n            token:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDC',\n              address:'0x86c8b56d124c2a8e7ea8a9e6a7f8ed99dde5cca8',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDTYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDT',\n            name:'idleUSDTYieldV3',\n            token:'idleUSDTYieldV3',\n            address:'0x63D27B3DA94A9E871222CB0A32232674B02D2f2D',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDT',\n              address:'0xee5c50c7c49dec47dde2f9b0233b9e14a8f00cf2',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleSUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'SUSD',\n            name:'idleSUSDYieldV3',\n            token:'idleSUSDYieldV3',\n            address:'0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterSUSD',\n              address:'0xE2eE519399a49f1A2004a25DA61e82867A69b9b1',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleTUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'TUSD',\n            name:'idleTUSDYieldV3',\n            token:'idleTUSDYieldV3',\n            address:'0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterTUSD',\n              address:'0x174a273f0ea28e55b6dd13259aa43d262b863a86',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleWBTCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'WBTC',\n            name:'idleWBTCYieldV3',\n            token:'idleWBTCYieldV3',\n            address:'0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterWBTC',\n              address:'0xbfDC7d97559173B52EF2A2f1bC9BeCf97B0D401D',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleDAISafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'DAI',\n            name:'idleDAISafeV3',\n            token:'idleDAISafeV3',\n            address:'0x1846bdfDB6A0f5c473dEc610144513bd071999fB',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterDAISafe',\n              address:'0x08db226d63cE724A6091Ba82D28dFc76ceCa23d8',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDCSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDC',\n            name:'idleUSDCSafeV3',\n            token:'idleUSDCSafeV3',\n            address:'0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDCSafe',\n              address:'0xA6C89A31D59f9C68D9Cba28d690C5E52058fb472',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDTSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDT',\n            name:'idleUSDTSafeV3',\n            token:'idleUSDTSafeV3',\n            address:'0x42740698959761baf1b06baa51efbd88cb1d862b',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDTSafe',\n              address:'0xd47B96Fb33b79a4Dd81a2bfa676eBB669166f619',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          }\n        }\n      }\n    },\n    tokenMigration:{\n      enabled:true,\n      icon:'SwapHoriz',\n      route:'convert',\n      label:'Token Migration',\n      desc:'Easily convert your Compound, Fulcrum, Aave and iEarn tokens into Idle',\n      subComponent:TokenMigration,\n      props:{\n        migrationContract:{\n          name:'IdleConverterV4',\n          abi:IdleConverterPersonalSignV4,\n          address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n          oldAddresses:[],\n          functions:[\n            {\n              label:'Migrate',\n              name:'migrateFromToIdle'\n            },\n          ]\n        },\n        availableStrategies:['best','risk'],\n        availableTokens:{\n          idleDAIv2:{\n            decimals:18,\n            enabled:true,\n            protocol:'idle',\n            baseToken:'DAI',\n            abi:IdleTokenV2,\n            token:'idleDAIOld',\n            icon:'images/tokens/idleDAI.svg',\n            migrateFunction:'migrateFromToIdle',\n            address:'0x10eC0D497824e342bCB0EDcE00959142aAa766dD',\n          },\n          cDAI:{\n            decimals:8,\n            enabled:true,\n            token:\"cDAI\",\n            baseToken:'DAI',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643\",\n          },\n          iDAI:{\n            decimals:18,\n            enabled:false,\n            token:\"iDAI\",\n            baseToken:'DAI',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0x493c57c4763932315a328269e1adad09653b9081\",\n          },\n          aDAI:{\n            decimals:18,\n            enabled:true,\n            token:\"aDAI\",\n            protocol:\"aave\",\n            baseToken:'DAI',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d\",\n          },\n          yDAIv3:{\n            decimals:18,\n            enabled:true,\n            token:\"yDAIv3\",\n            abi:yDAIv3.abi,\n            baseToken:'DAI',\n            protocol:\"iearn\",\n            icon:'images/tokens/yDAI.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xC2cB1040220768554cf699b0d863A3cd4324ce32\",\n          },\n          yDAIv2:{\n            decimals:18,\n            enabled:true,\n            token:\"yDAIv2\",\n            baseToken:'DAI',\n            abi:yDAIv3.abi,\n            protocol:\"iearn\",\n            icon:'images/tokens/yDAI.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x16de59092dAE5CcF4A1E6439D611fd0653f0Bd01\",\n          },\n          idleUSDCv2:{\n            decimals:18,\n            enabled:true,\n            protocol:'idle',\n            abi:IdleTokenV2,\n            baseToken:'USDC',\n            token:'idleUSDCOld',\n            icon:'images/tokens/idleUSDC.svg',\n            migrateFunction:'migrateFromToIdle',\n            address:'0xeB66ACc3d011056B00ea521F8203580C2E5d3991',\n          },\n          cUSDC:{\n            decimals:8,\n            enabled:true,\n            token:\"cUSDC\",\n            baseToken:'USDC',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0x39aa39c021dfbae8fac545936693ac917d5e7563\",\n          },\n          iUSDC:{\n            decimals:6,\n            enabled:false,\n            token:\"iUSDC\",\n            baseToken:'USDC',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0xf013406a0b1d544238083df0b93ad0d2cbe0f65f\",\n          },\n          aUSDC:{\n            decimals:6,\n            enabled:true,\n            token:\"aUSDC\",\n            protocol:\"aave\",\n            baseToken:'USDC',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x9bA00D6856a4eDF4665BcA2C2309936572473B7E\",\n          },\n          yUSDCv3:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDCv3\",\n            protocol:\"iearn\",\n            abi:yUSDCv3.abi,\n            baseToken:'USDC',\n            icon:'images/tokens/yUSDC.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x26EA744E5B887E5205727f55dFBE8685e3b21951\",\n          },\n          yUSDCv2:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDCv2\",\n            protocol:\"iearn\",\n            abi:yUSDCv3.abi,\n            baseToken:'USDC',\n            icon:'images/tokens/yUSDC.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xd6aD7a6750A7593E092a9B218d66C0A814a3436e\",\n          },\n          cUSDT:{\n            decimals:8,\n            enabled:true,\n            token:\"cUSDT\",\n            baseToken:'USDT',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9\",\n          },\n          iUSDT:{\n            decimals:6,\n            enabled:false,\n            token:\"iUSDT\",\n            baseToken:'USDT',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0x8326645f3aa6de6420102fdb7da9e3a91855045b\",\n          },\n          aUSDT:{\n            decimals:6,\n            enabled:true,\n            token:\"aUSDT\",\n            protocol:\"aave\",\n            baseToken:'USDT',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x71fc860F7D3A592A4a98740e39dB31d25db65ae8\",\n          },\n          yUSDTv3:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDTv3\",\n            abi:yUSDTv3.abi,\n            protocol:\"iearn\",\n            baseToken:'USDT',\n            icon:'images/tokens/yUSDT.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xE6354ed5bC4b393a5Aad09f21c46E101e692d447\",\n          },\n          yUSDTv2:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDTv2\",\n            abi:yUSDTv3.abi,\n            protocol:\"iearn\",\n            baseToken:'USDT',\n            icon:'images/tokens/yUSDT.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x83f798e925BcD4017Eb265844FDDAbb448f1707D\",\n          },\n          idleSUSDv2:{\n            decimals:18,\n            enabled:true,\n            abi:IdleTokenV2,\n            protocol:'idle',\n            baseToken:'SUSD',\n            token:'idleSUSDYieldOld',\n            availableStrategies:['best'],\n            migrateFunction:'migrateFromToIdle',\n            icon:'images/tokens/idleSUSDYield.svg',\n            address:'0xb39ca0261a1b2986a6a9Fe38d344B56374963dE5',\n          },\n          aSUSD:{\n            decimals:6,\n            enabled:true,\n            token:\"aSUSD\",\n            protocol:\"aave\",\n            baseToken:'SUSD',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x625aE63000f46200499120B906716420bd059240\",\n          },\n          ySUSDv3:{\n            decimals:18,\n            enabled:true,\n            token:\"ySUSDv3\",\n            abi:ySUSDv3,\n            baseToken:'SUSD',\n            protocol:\"iearn\",\n            availableStrategies:['best'],\n            icon:'images/tokens/ySUSDv3.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xf61718057901f84c4eec4339ef8f0d86d2b45600\",\n          },\n          idleTUSDv2:{\n            decimals:18,\n            enabled:true,\n            abi:IdleTokenV2,\n            protocol:'idle',\n            baseToken:'TUSD',\n            token:'idleTUSDYieldOld',\n            availableStrategies:['best'],\n            migrateFunction:'migrateFromToIdle',\n            icon:'images/tokens/idleTUSDYield.svg',\n            address:'0x7DB7A4a50b26602E56536189Aa94678C80F8E5b6',\n          },\n          aTUSD:{\n            decimals:6,\n            enabled:true,\n            token:\"aTUSD\",\n            protocol:\"aave\",\n            baseToken:'TUSD',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x4DA9b813057D04BAef4e5800E36083717b4a0341\",\n          },\n          yTUSDv3:{\n            decimals:18,\n            enabled:true,\n            abi:yTUSDv3,\n            token:\"yTUSDv3\",\n            baseToken:'TUSD',\n            protocol:\"iearn\",\n            icon:'images/tokens/yTUSDv3.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x73a052500105205d34daf004eab301916da8190f\",\n          },\n          cWBTC:{\n            decimals:8,\n            enabled:true,\n            token:\"cWBTC\",\n            baseToken:'WBTC',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0xc11b1268c1a384e55c48c2391d8d480264a3a7f4\",\n          },\n          iWBTC:{\n            decimals:8,\n            enabled:false,\n            token:\"iWBTC\",\n            baseToken:'WBTC',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0xba9262578efef8b3aff7f60cd629d6cc8859c8b5\",\n          },\n          aWBTC:{\n            decimals:8,\n            enabled:true,\n            token:\"aWBTC\",\n            protocol:\"aave\",\n            baseToken:'WBTC',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0xfc4b8ed459e00e5400be803a9bb3954234fd50e3\",\n          },\n        }\n      }\n    },\n    addFunds:{\n      enabled:true,\n      icon:'AddCircleOutline',\n      route:'add-funds',\n      label:'Add Funds',\n      desc:'Buy tokens with your Bank account, Credit card or Ethereum Wallet',\n      subComponent:BuyModal,\n      directProps:{\n        showInline:true,\n        showAllTokens:true\n      }\n    },\n    insurance:{\n      enabled:false,\n      icon:'Security',\n      route:'nexus-mutual',\n      label:'Nexus Mutual',\n      desc:'Buy tokens with Bank account or Credit card',\n      subComponent:NexusMutual,\n      props:{\n        availableTokens:{\n          \"ETH\":{\"token\":\"ETH\"},\n          \"DAI\":{\"token\":\"DAI\"},\n        }\n      },\n      directProps:{\n        ens:'idlefinancev3.nexusmutual.eth',\n        address:'0x78751B12Da02728F467A44eAc40F5cbc16Bd7934'\n      }\n    },\n    tokenSwap:{\n      enabled:true,\n      icon:'Sync',\n      route:'token-swap',\n      label:'Token Swap',\n      desc:'Easily swap your tokens using Kyber Swap widget',\n      subComponent:TokenSwap,\n      props:{\n        availableTokens:{\n          \"ETH\":{\"token\":\"ETH\"},\n          \"DAI\":{\"token\":\"DAI\"},\n          \"SUSD\":{\"token\":\"SUSD\"},\n          \"TUSD\":{\"token\":\"TUSD\"},\n          \"USDC\":{\"token\":\"USDC\"},\n          \"USDS\":{\"token\":\"USDS\"},\n          \"USDT\":{\"token\":\"USDT\"},\n          \"WBTC\":{\"token\":\"WBTC\"},\n          \"WETH\":{\"token\":\"WETH\"},\n          \"BUSD\":{\"token\":\"BUSD\"},\n          \"EURS\":{\"token\":\"EURS\"},\n          \"2KEY\":{\"token\":\"2KEY\"},\n          \"ABT\":{\"token\":\"ABT\"},\n          \"ABYSS\":{\"token\":\"ABYSS\"},\n          \"AMPL\":{\"token\":\"AMPL\"},\n          \"ANT\":{\"token\":\"ANT\"},\n          \"BAM\":{\"token\":\"BAM\"},\n          \"BAND\":{\"token\":\"BAND\"},\n          \"BAT\":{\"token\":\"BAT\"},\n          \"BLZ\":{\"token\":\"BLZ\"},\n          \"BNT\":{\"token\":\"BNT\"},\n          \"BQX\":{\"token\":\"BQX\"},\n          \"BTU\":{\"token\":\"BTU\"},\n          \"CDT\":{\"token\":\"CDT\"},\n          \"CVC\":{\"token\":\"CVC\"},\n          \"DAT\":{\"token\":\"DAT\"},\n          \"DGX\":{\"token\":\"DGX\"},\n          \"EKG\":{\"token\":\"EKG\"},\n          \"ELF\":{\"token\":\"ELF\"},\n          \"ENJ\":{\"token\":\"ENJ\"},\n          \"EQUAD\":{\"token\":\"EQUAD\"},\n          \"FXC\":{\"token\":\"FXC\"},\n          \"GDC\":{\"token\":\"GDC\"},\n          \"GEN\":{\"token\":\"GEN\"},\n          \"GHT\":{\"token\":\"GHT\"},\n          \"GNO\":{\"token\":\"GNO\"},\n          \"IOST\":{\"token\":\"IOST\"},\n          \"KEY\":{\"token\":\"KEY\"},\n          \"KNC\":{\"token\":\"KNC\"},\n          \"LEND\":{\"token\":\"LEND\"},\n          \"LINK\":{\"token\":\"LINK\"},\n          \"LOOM\":{\"token\":\"LOOM\"},\n          \"LRC\":{\"token\":\"LRC\"},\n          \"MANA\":{\"token\":\"MANA\"},\n          \"MCO\":{\"token\":\"MCO\"},\n          \"MET\":{\"token\":\"MET\"},\n          \"MFG\":{\"token\":\"MFG\"},\n          \"MKR\":{\"token\":\"MKR\"},\n          \"MLN\":{\"token\":\"MLN\"},\n          \"MTL\":{\"token\":\"MTL\"},\n          \"MYB\":{\"token\":\"MYB\"},\n          \"NEXXO\":{\"token\":\"NEXXO\"},\n          \"NPXS\":{\"token\":\"NPXS\"},\n          \"OGN\":{\"token\":\"OGN\"},\n          \"OMG\":{\"token\":\"OMG\"},\n          \"OST\":{\"token\":\"OST\"},\n          \"PAX\":{\"token\":\"PAX\"},\n          \"PBTC\":{\"token\":\"PBTC\"},\n          \"PLR\":{\"token\":\"PLR\"},\n          \"PNK\":{\"token\":\"PNK\"},\n          \"POLY\":{\"token\":\"POLY\"},\n          \"POWR\":{\"token\":\"POWR\"},\n          \"PT\":{\"token\":\"PT\"},\n          \"QKC\":{\"token\":\"QKC\"},\n          \"QNT\":{\"token\":\"QNT\"},\n          \"RAE\":{\"token\":\"RAE\"},\n          \"REN\":{\"token\":\"REN\"},\n          \"REP\":{\"token\":\"REP\"},\n          \"REQ\":{\"token\":\"REQ\"},\n          \"RLC\":{\"token\":\"RLC\"},\n          \"RSR\":{\"token\":\"RSR\"},\n          \"RSV\":{\"token\":\"RSV\"},\n          \"SAN\":{\"token\":\"SAN\"},\n          \"SNT\":{\"token\":\"SNT\"},\n          \"SNX\":{\"token\":\"SNX\"},\n          \"SPIKE\":{\"token\":\"SPIKE\"},\n          \"SPN\":{\"token\":\"SPN\"},\n          \"TKN\":{\"token\":\"TKN\"},\n          \"TKX\":{\"token\":\"TKX\"},\n          \"TRYB\":{\"token\":\"TRYB\"},\n          \"UBT\":{\"token\":\"UBT\"},\n          \"UPP\":{\"token\":\"UPP\"},\n          \"ZRX\":{\"token\":\"ZRX\"}\n        }\n      },\n      directProps:{\n      }\n    }\n  },\n  payments: { // Payment methods & providers\n    methods:{\n      bank:{\n        defaultProvider:null,\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/bank.png',\n          caption:'Bank Account'\n        }\n      },\n      card:{\n        defaultProvider:null,\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/debit-card.png',\n          caption:'Credit Card'\n        }\n      },\n      wallet:{\n        defaultProvider:'zeroExInstant',\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/ethereum-wallet.svg',\n          caption:'Ethereum Wallet',\n          imageProps:{\n            padding:['0','5px']\n          }\n        }\n      },\n    },\n    providers: {\n      wyre: {\n        enabled: true,\n        imageSrc: 'images/payments/wyre.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0.75% fee ~',\n        supportedMethods:['card'],\n        supportedCountries:['USA','GBR','AUS','BRA','CHN','MEX','EUR'],\n        supportedTokens:['USDC','DAI','ETH'],\n        remoteResources:{},\n        env:'prod',\n        envParams:{\n          test:{\n            accountId:'AC_Q2Y4AARC3TP'\n          },\n          prod:{\n            accountId:'AC_PQQBX33XVEQ'\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod){\n            switch (props.selectedMethod){\n              case 'bank':\n                info.subcaption = `~ 0.75% fee ~\\nKYC REQUIRED`;\n              break;\n              case 'card':\n                info.subcaption = `~ 3.2% fee ~\\n$250.00/day`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.wyre.env;\n          const envParams = globalConfigs.payments.providers.wyre.envParams[env];\n          const referrerAccountId = envParams.accountId;\n          const url = 'https://pay.sendwyre.com/purchase';\n\n          const params = {\n            dest: `ethereum:${props.account}`,\n            destCurrency: buyParams.selectedToken ? buyParams.selectedToken : ( props.tokenConfig.wyre && props.tokenConfig.wyre.destCurrency ? props.tokenConfig.wyre.destCurrency : props.selectedToken ),\n            referrerAccountId,\n            redirectUrl:globalConfigs.baseURL\n            // failureRedirectUrl:globalConfigs.baseURL\n          };\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          const wyreWidget = document.getElementById('wyre-widget');\n          if (!wyreWidget){\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"wyre-widget\" class=\"wyre-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"wyre-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                <a class=\"wyre-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('wyre-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                <div id=\"wyre-widget-container\" style=\"position:relative;z-index:2;width:400px;height:650px\">\n                  <iframe\n                    style=\"position:relative;z-index:2;\"\n                    frameborder=\"0\"\n                    height=\"100%\"\n                    src=\"${initParams}\"\n                    width=\"100%\"\n                  >\n                    <p>Your browser does not support iframes.</p>\n                  </iframe>\n                  <div id=\"wyre-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                    <div style=\"display:flex;flex-direction:row;align-items:center\">\n                      <img src=\"${globalConfigs.payments.providers.wyre.imageSrc}\" style=\"height:50px;\" />\n                      <h3 style=\"font-weight:600;font-style:italic;color:#000;padding-left:10px\">is loading...</h3>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add wyre Widget style (mobile)\n            if (!document.getElementById('wyreWidget_style')){\n              const wyreStyle = document.createElement('style');\n              wyreStyle.id = 'wyreWidget_style';\n              wyreStyle.innerHTML = `\n              @media (max-width: 40em){\n                #wyre-widget {\n                  align-items: flex-start !important;\n                }\n                #wyre-widget-overlay{\n                  background:#fff !important;\n                }\n                #wyre-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(wyreStyle);\n            }\n          }\n        },\n      },\n      ramp: {\n        enabled:true,\n        imageSrc: 'images/payments/ramp.png',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption:`~ 2.5% fee ~\\nEUR / GBP`,\n        supportedMethods:['bank','card'],\n        badge: {\n          text:'NO ID REQUIRED',\n          color:'#fff',\n          bgColor:'#0cade4'\n        },\n        supportedTokens:['ETH','DAI','USDC'],\n        supportedCountries:['USA','GBR','AUS','BRA','CAN','EUR','HKG','IND','MEX','RUS','ZAF','KOR'],\n        getInfo: (props) => {\n          const info = {};\n            switch (props.selectedMethod){\n              case 'bank':\n                info.supportedCountries = ['GBR','EUR'];\n                info.subcaption = `~ 1.49-1.99% fee ~`;\n              break;\n              case 'card':\n                info.supportedCountries = ['USA','GBR','AUS','BRA','CAN','EUR','HKG','IND','MEX','RUS','ZAF','KOR'];\n                info.subcaption = `~ 2.90% fee ~`;\n              break;\n              default:\n              break;\n            }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n        \treturn {\n\t          hostAppName: 'Idle',\n            userAddress: props.account,\n            hostApiKey: env.REACT_APP_RAMP_KEY,\n            variant: props.isMobile ? 'mobile' : 'desktop',\n            hostLogoUrl: `${globalConfigs.baseURL}/images/idle-round.png`,\n            swapAsset: buyParams.selectedToken ? buyParams.selectedToken : ( props.tokenConfig.ramp && props.tokenConfig.ramp.swapAsset ? props.tokenConfig.ramp.swapAsset : props.selectedToken )\n        \t};\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          new RampInstantSDK(initParams)\n            .on('*', async (event) => {\n              const functionsUtil = new FunctionsUtil(props);\n              let tokenDecimals = null;\n              let tokenAmount = null;\n\n              switch (event.type){\n                case 'PURCHASE_SUCCESSFUL':\n                  // Update balance\n                  props.getAccountBalance();\n\n                  tokenDecimals = await props.getTokenDecimals();\n\n                  tokenAmount = event.payload.purchase.tokenAmount;\n                  tokenAmount = functionsUtil.BNify(tokenAmount.toString()).div(functionsUtil.BNify(Math.pow(10,parseInt(tokenDecimals)).toString())).toString();\n\n                  // Toast message\n                  window.toastProvider.addMessage(`Payment completed`, {\n                    secondaryMessage: `${tokenAmount} ${props.selectedToken} are now in your wallet`,\n                    colorTheme: 'light',\n                    actionHref: \"\",\n                    actionText: \"\",\n                    variant: \"success\",\n                  });\n\n                break;\n                default:\n                break;\n              }\n            })\n            .show();\n        }\n      },\n      transak: {\n        enabled:true,\n        imageSrc: 'images/payments/transak.png',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption:`~ 1.5% fee ~\\nALL CURRENCIES`,\n        supportedMethods:['bank','card'],\n        supportedCountries:['USA','GBR','AUS','BRA','CHN','MEX','EUR','IND'],\n        supportedTokens:['ETH','DAI','USDC','USDT','TUSD','SUSD','WBTC'],\n        remoteResources:{'https://global.transak.com/v1/widget.js':{}},\n        env:'prod',\n        badge:{\n          text:'INSTANT',\n          bgColor:'#0069ee'\n        },\n        envParams:{\n          test:{\n            apiKey:env.REACT_APP_TRANSAK_KEY_TEST,\n            url:'https://global.transak.com'\n          },\n          prod:{\n            apiKey:env.REACT_APP_TRANSAK_KEY_PROD,\n            url:'https://global.transak.com'\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n\n          const selectedMethod = props.selectedMethod && props.selectedMethod;\n          let fee = selectedMethod === 'bank' ? '1.5%' : '4.5%';\n\n          if (props.selectedCountry && props.selectedCountry.value){\n            switch (props.selectedCountry.value.toUpperCase()){\n              case 'GBR':\n                info.badge = {\n                  text:'INSTANT',\n                  bgColor:'#0069ee'\n                };\n                info.subcaption = `~ ${fee} fee ~\\nGBP ONLY`;\n              break;\n              case 'IND':\n                fee = '1.0%';\n                info.badge = {\n                  text:'INSTANT',\n                  bgColor:'#0069ee'\n                };\n                info.subcaption = `~ ${fee} fee ~\\nINR ONLY`;\n              break;\n              case 'EUR':\n                if (selectedMethod === 'bank'){\n                  info.badge = {\n                    text:'SEPA',\n                    color:'#f7cb05 ',\n                    bgColor:'#10288a'\n                  };\n                } else {\n                  info.badge = {\n                    text:'INSTANT',\n                    bgColor:'#0069ee'\n                  };\n                }\n                info.subcaption = `~ ${fee} fee ~\\nEUR ONLY`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.transak.env;\n          const envParams = globalConfigs.payments.providers.transak.envParams[env];\n\n          let fiatCurrency = null;\n\n          if (buyParams.selectedCountry && buyParams.selectedCountry.value){\n            switch (buyParams.selectedCountry.value.toUpperCase()){\n              case 'IND':\n                fiatCurrency = 'INR';\n              break;\n              case 'GBR':\n                fiatCurrency = 'GBP';\n              break;\n              case 'EUR':\n                fiatCurrency = 'EUR';\n              break;\n              case 'USA':\n                fiatCurrency = 'USD';\n              break;\n              default:\n                fiatCurrency = 'GBP';\n              break;\n            }\n          }\n\n          let cryptoCurrencyCode = buyParams.selectedToken ? buyParams.selectedToken.toLowerCase() : ( props.tokenConfig.transak && props.tokenConfig.transak.currencyCode ? props.tokenConfig.transak.currencyCode : props.selectedToken);\n          cryptoCurrencyCode = cryptoCurrencyCode.toUpperCase();\n\n          const apiKey = envParams.apiKey;\n          const walletAddress = props.account;\n          const partnerCustomerId = props.account;\n          const disableWalletAddressForm = false;\n\n          return {\n            apiKey,\n            cryptoCurrencyCode,\n            walletAddress,\n            fiatCurrency,\n            partnerCustomerId,\n            disableWalletAddressForm,\n            width:'100%',\n            height:'100%'\n            // email,\n          };\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          if (window.transakGlobal){\n\n            const transakWidget = document.getElementById('transak-widget');\n            if (!transakWidget){\n              const iframeBox = document.createElement(\"div\");\n              iframeBox.innerHTML = `\n                <div id=\"transak-widget\" class=\"transak-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                  <div id=\"transak-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\" onclick=\"document.getElementById('transak-widget').remove();\"></div>\n                  <a class=\"transak-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('transak-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                  <div class=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\">\n                    <div id=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\"></div>\n                    <div id=\"transak-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:center\">\n                        <img src=\"${globalConfigs.payments.providers.transak.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"font-weight:600;font-style:italic;color:#0040ca\">is loading...</h3>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              `;\n              document.body.appendChild(iframeBox);\n\n              // Add transak Widget style (mobile)\n              if (!document.getElementById('transakWidget_style')){\n                const transakStyle = document.createElement('style');\n                transakStyle.id = 'transakWidget_style';\n                transakStyle.innerHTML = `\n                @media (max-width: 40em){\n                  #transak-widget {\n                    align-items: flex-start !important;\n                  }\n                  #transak-widget-overlay{\n                    background:#fff !important;\n                  }\n                  #transak-widget-container{\n                    width:100vw;\n                    min-height: calc( 100vh - 60px ) !important;\n                  }\n                }`;\n                document.body.appendChild(transakStyle);\n              }\n            }\n\n            window.transakGlobal.render(initParams, 'transak-widget-container');\n          }\n        }\n      },\n      moonpay: {\n        enabled:true,\n        imageSrc: 'images/payments/moonpay.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 4.5% fee ~',\n        supportedMethods:['card','bank'],\n        supportedCountries:['GBR','EUR','AUS','BRA','CHN','MEX','CAN','HKG','RUS','ZAF','KOR'],\n        supportedTokens:['USDC','DAI','ETH'],\n        env:'prod',\n        envParams:{\n          test:{\n            url:'https://buy-staging.moonpay.io',\n            apiKey:env.REACT_APP_MOONPAY_KEY_TEST\n          },\n          prod:{\n            url:'https://buy.moonpay.io',\n            apiKey:env.REACT_APP_MOONPAY_KEY_PROD\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod){\n            switch (props.selectedMethod){\n              case 'bank':\n                if (props.selectedCountry && props.selectedCountry.value){\n                  switch (props.selectedCountry.value.toUpperCase()){\n                    case 'EUR':\n                      info.badge = {\n                        text:'SEPA',\n                        color:'#f7cb05 ',\n                        bgColor:'#10288a'\n                      }\n                      info.subcaption = `~ 1.5% fee ~\\nEUR ONLY`;\n                    break;\n                    case 'GBR':\n                      info.badge = {\n                        text:'GBP',\n                      }\n                      info.subcaption = `~ 1.5% fee ~\\nGBP ONLY`;\n                    break;\n                    default:\n                      info.badge = null;\n                      info.subcaption = `~ 1.5% fee ~\\nEUR/GBP ONLY`;\n                    break;\n                  }\n                }\n              break;\n              case 'card':\n                info.badge = null;\n                info.subcaption = `~ 5% fee ~`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.moonpay.env;\n          const envParams = globalConfigs.payments.providers.moonpay.envParams[env];\n          const apiKey = envParams.apiKey;\n          const params = {\n            apiKey,\n            currencyCode: buyParams.selectedToken ? buyParams.selectedToken.toLowerCase() : ( props.tokenConfig.moonpay && props.tokenConfig.moonpay.currencyCode ? props.tokenConfig.moonpay.currencyCode : props.selectedToken.toLowerCase()),\n            walletAddress:props.account,\n            baseCurrencyCode:'USD',\n            showWalletAddressForm: true\n          };\n\n          const methods = {\n            'bank':{\n              'GBR':'gbp_bank_transfer',\n              'EUR':'sepa_bank_transfer'\n            },\n            'card':'credit_debit_card'\n          };\n\n          const selectedCountry = buyParams.selectedCountry && buyParams.selectedCountry.value ? buyParams.selectedCountry.value.toUpperCase() : null;\n\n          // Set payment method\n          if (buyParams.selectedMethod){\n            switch (buyParams.selectedMethod){\n              case 'bank':\n                params.enabledPaymentMethods = methods[buyParams.selectedMethod]['EUR'];\n                switch (selectedCountry){\n                  case 'GBR':\n                  case 'EUR':\n                    params.enabledPaymentMethods = methods[buyParams.selectedMethod][selectedCountry];\n                  break;\n                  default:\n                    params.enabledPaymentMethods = Object.values(methods[buyParams.selectedMethod]).join(',');\n                  break;\n                }\n              break;\n              case 'card':\n              default:\n                params.enabledPaymentMethods = methods[buyParams.selectedMethod];\n              break;\n            }\n          }\n\n          // Set baseCurrencyCode\n          switch (selectedCountry){\n            case 'GBR':\n              params.baseCurrencyCode = 'GBP';\n            break;\n            case 'EUR':\n              params.baseCurrencyCode = 'EUR';\n            break;\n            default:\n              params.baseCurrencyCode = 'USD';\n            break;\n          }\n\n          let url = envParams.url;\n\n          // Safari Fix\n          var isSafari = navigator.userAgent.indexOf(\"Safari\") > -1;\n          if (isSafari) {\n            if (!document.cookie.match(/^(.*;)?\\s*moonpay-fixed\\s*=\\s*[^;]+(.*)?$/)) {\n              document.cookie = \"moonpay-fixed=fixed; expires=Tue, 19 Jan 2038 03:14:07 UTC; path=/\";\n              url += \"/safari_fix\";\n            }\n          }\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          const moonpayWidget = document.getElementById('moonpay-widget');\n          if (!moonpayWidget){\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"moonpay-widget\" class=\"moonpay-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"moonpay-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                  <div id=\"moonpay-widget-container\" style=\"position:relative;z-index:2;width:500px;height:490px\">\n                    <iframe\n                      style=\"position:relative;z-index:2;\"\n                      frameborder=\"0\"\n                      height=\"100%\"\n                      src=\"${initParams}\"\n                      width=\"100%\"\n                    >\n                      <p>Your browser does not support iframes.</p>\n                    </iframe>\n                    <div id=\"moonpay-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:end\">\n                        <img src=\"${globalConfigs.payments.providers.moonpay.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"padding-left:5px;font-weight:600;font-style:italic;\">is loading...</h3>\n                      </div>\n                    </div>\n                    <div id=\"moonpay-widget-footer\" style=\"position:relative;display:flex;justify-content:center;align-items:center;padding:8px 16px;width:100%;background:#fff;top:-20px;z-index:3\">\n                      <button style=\"background:#000;color:#fff;text-align:center;border-radius:5px;width:100%;height:51px;line-height:51px;font-weight:500;border:0;cursor:pointer\" onclick=\"document.getElementById('moonpay-widget').remove();\">Close</button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add Moonpay Widget style (mobile)\n            if (!document.getElementById('moonpayWidget_style')){\n              const moonpayStyle = document.createElement('style');\n              moonpayStyle.id = 'moonpayWidget_style';\n              moonpayStyle.innerHTML = `\n              @media (max-width: 40em){\n                #moonpay-widget {\n                  align-items: flex-start !important;\n                }\n                #moonpay-widget-overlay{\n                  background:#fff !important;\n                }\n                #moonpay-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(moonpayStyle);\n            }\n          }\n        }\n      },\n      zeroExInstant: {\n        enabled: true,\n        imageSrc: 'images/payments/zeroexinstant.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0.25% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        remoteResources:{'https://instant.0x.org/v3/instant.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onSuccess,onClose) => {\n\n          const tokenParams = globalConfigs.tokens[buyParams.selectedToken];\n          const connectorName = window.RimbleWeb3_context ? window.RimbleWeb3_context.connectorName : null;\n\n          if (!tokenParams.zeroExInstant){\n            return null;\n          }\n\n          return {\n            networkId: globalConfigs.network.requiredNetwork,\n            chainId: globalConfigs.network.requiredNetwork,\n            provider: connectorName && connectorName!=='Injected' && window.RimbleWeb3_context.connector[connectorName.toLowerCase()] ? window.RimbleWeb3_context.connector[window.RimbleWeb3_context.connectorName.toLowerCase()].provider : window.ethereum,\n            orderSource: tokenParams.zeroExInstant.orderSource,\n            affiliateInfo: tokenParams.zeroExInstant.affiliateInfo,\n            defaultSelectedAssetData: tokenParams.zeroExInstant.assetData,\n            availableAssetDatas: [tokenParams.zeroExInstant.assetData],\n            shouldDisableAnalyticsTracking: true,\n            onSuccess: onSuccess ? onSuccess : () => {},\n            onClose: onClose ? onClose : () => {}\n          };\n        },\n        render: (initParams,amount) => {\n          if (window.zeroExInstant && initParams){\n            if (amount){\n              initParams.defaultAssetBuyAmount = parseFloat(amount);\n            }\n            window.zeroExInstant.render(initParams, 'body');\n          }\n        }\n      },\n      kyberSwap: {\n        enabled: true,\n        imageSrc: 'images/payments/kyber.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Swap with',\n        captionPos: 'top',\n        subcaption: '~ 0.25% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['WETH','USDC','DAI','USDT','TUSD','SUSD','WBTC'],\n        web3Subscription:{ // Data for web3 subscription\n          enabled: true,\n          contractAddress: '0x818e6fecd516ecc3849daf6845e3ec868087b755',\n          decodeLogsData: [\n            {\n              \"internalType\": \"address\",\n              \"name\": \"_startAddress\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"address\",\n              \"name\": \"_tokenAddress\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"_startAmount\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"_tokenAmount\",\n              \"type\": \"uint256\"\n            },\n          ],\n        },\n        remoteResources:{\n          'https://widget.kyber.network/v0.7.5/widget.css':{},\n          'https://widget.kyber.network/v0.7.5/widget.js':{\n            parentElement:document.body,\n            precall: (props,globalConfigs,providerInfo) => {\n\n              // Remove previous elements\n              const buttons = document.querySelectorAll('.kyber-widget-button');\n              for (let i=0;i<buttons.length;i++){\n                buttons[i].remove();\n              }\n\n              // const kyberWidgetScript = document.getElementById('kyber-widget-script');\n              // if (kyberWidgetScript){\n              //   kyberWidgetScript.remove();\n              // }\n\n              const scripts = document.querySelectorAll('.script_kyberSwap');\n              for (let i=0;i<scripts.length;i++){\n                scripts[i].remove();\n              }\n\n              const buttonId = props.buttonId ? props.buttonId : `kyber-swapper-${props.selectedToken}`;\n              if (!document.getElementById(buttonId)){\n                const a = document.createElement('a');\n                a.id = buttonId;\n                a.href = providerInfo.getInitParams(props,globalConfigs);\n                a.target = '_blank';\n                a.rel = 'nofollow noopener noreferrer';\n                a.className = 'kyber-widget-button theme-ocean theme-supported';\n                a.title = 'Swap with Kyber';\n                a.style = 'display:none;';\n                document.body.appendChild(a);\n              }\n            }\n          }\n        },\n        getInitParams: (props,globalConfigs,buyParams=null) => {\n          const baseToken = props.baseToken ? props.baseToken : 'ETH';\n          const params = {\n            lang:'en',\n            type:'swap',\n            mode:'iframe',\n            theme:'theme-ocean',\n            paramForwarding:true,\n            // callback:globalConfigs.baseURL,\n            pinnedTokens:`${baseToken}_${props.selectedToken}`,\n            title:`Swap ${baseToken} for ${props.selectedToken}`,\n            defaultPair:`${baseToken}_${props.selectedToken}`,\n            commissionId:'0x4215606a720477178AdFCd5A59775C63138711e8',\n            network: globalConfigs.network.requiredNetwork === 1 ? 'mainnet' : 'test',\n          };\n\n          const url  = 'https://widget.kyber.network/v0.7.5/';\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props) => {\n          const buttonId = props.buttonId ? props.buttonId :`kyber-swapper-${props.selectedToken}`;\n          const a = document.getElementById(buttonId);\n          if (a){\n            a.click();\n\n            // Observe for pending transaction\n            /*\n            if (window.MutationObserver){\n              setTimeout(() => {\n\n                const observer = new window.MutationObserver(function(mutations) {\n                  mutations.forEach((m,i) => {\n                    if (m.addedNodes.length && m.target.className === 'kyber_widget-broadcast'){\n                      \n                      // Show persistent toast message\n                      window.showToastMessage({\n                        variant:'processing',\n                        message:'Pending deposit',\n                        secondaryMessage:'kyberSwap is processing your request'\n                      });\n\n                      observer.disconnect();\n                    } else if (m.target.id === 'kyber-widget' && m.removedNodes.length && m.removedNodes[0].firstChild.className.includes('kyber_widget-widget-container')) {\n                      observer.disconnect();\n                    }\n                  });\n                });\n                const target = document.querySelector('#kyber-widget');\n                observer.observe(target, { childList: true, subtree: true });\n              },1000);\n            }\n            */\n          }\n        }\n      },\n      airSwap: {\n        enabled: false,\n        imageSrc: 'images/payments/airswap.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        env:'production',\n        remoteResources:{'https://cdn.airswap.io/airswap-instant-widget.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onComplete,onClose) => {\n          return {\n            env: 'production',\n            mode: 'buy',\n            token: props.tokenConfig.address,\n            baseToken: 'ETH',\n            onComplete: onComplete ? onComplete : () => {},\n            onClose: onClose ? onClose : () => {}\n          };\n        },\n        render: (initParams,amount,props) => {\n          if (window.AirSwapInstant){\n            if (amount){\n              initParams.amount = amount.toString();\n            }\n            window.AirSwapInstant.render(initParams,'body');\n          }\n        }\n      },\n      totle: {\n        enabled: false,\n        imageSrc: 'images/payments/totle.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        env:'production',\n        remoteResources:{'https://widget.totle.com/latest/dist.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onComplete,onClose) => {\n          return {\n            sourceAssetAddress: null,\n            sourceAmountDecimal: null,\n            destinationAssetAddress: null,\n            destinationAmountDecimal: null,\n            apiKey: null,\n            partnerContractAddress: null,\n          };\n        },\n        render: (initParams,amount,props) => {\n          if (window.TotleWidget){\n            const nodeId = 'totle-widget';\n            if (!document.getElementById(nodeId)){\n              const totleWidgetContainer = document.createElement(\"div\");\n              totleWidgetContainer.id = nodeId;\n              document.body.appendChild(totleWidgetContainer);\n            }\n\n            window.TotleWidget.default.run(initParams,document.getElementById(nodeId));\n          }\n        }\n      }\n    }\n  }\n};\n\nexport default globalConfigs;","import FunctionsUtil from './FunctionsUtil';\n\nclass IdleGovToken{\n  // Attributes\n  props = {};\n  tokenName = null;\n  tokenConfig = null;\n  functionsUtil = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.tokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n    this.tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n  }\n\n  getBalance = async () => {\n    let balance = await this.functionsUtil.getTokenBalance(this.tokenName,this.props.account);\n    if (!balance || this.functionsUtil.BNify(balance).isNaN()){\n      balance = this.functionsUtil.BNify(0);\n    }\n    return balance;\n  }\n\n  claimRewards = async (callback,callbackReceipt) => {\n    return this.functionsUtil.contractMethodSendWrapper('EarlyRewards', 'claim', [], callback, callbackReceipt);\n  }\n\n  getPriorVotes = async (account=null) => {\n    account = account ? account : this.props.account;\n    let priorVotes = await this.functionsUtil.genericContractCall(this.tokenName,'getPriorVotes',[account]);\n    if (priorVotes){\n      return this.functionsUtil.BNify(priorVotes);\n    }\n    return null;\n  }\n\n  refreshIdleSpeed = async () => {\n    return this.functionsUtil.genericContractCall('IdleController','refreshIdleSpeeds');\n  }\n\n  getUnclaimedTokens = async () => {\n    /*\n    let rewards =  await this.functionsUtil.genericContractCall('EarlyRewards','rewards',[this.props.account]);\n    if (rewards){\n      return this.functionsUtil.fixTokenDecimals(rewards,this.tokenConfig.decimals);\n    }\n    */\n    return this.functionsUtil.BNify(0);\n  }\n\n  getAPR = async (token,tokenConfig,conversionRate=null) => {\n    const IDLETokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n    if (!IDLETokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getIdleAPR_${tokenConfig.idle.token}_${conversionRate}`;\n    /*\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n    */\n\n    let APR = this.functionsUtil.BNify(0);\n\n    const [\n      idleDistribution,\n      tokenAllocation\n    ] = await Promise.all([\n      this.getDistribution(tokenConfig),\n      this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    if (idleDistribution && tokenAllocation){\n\n      const DAITokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get IDLE oconversion rate\n      if (!conversionRate){\n        try {\n          conversionRate = await this.functionsUtil.getUniswapConversionRate(DAITokenConfig,IDLETokenConfig);\n        } catch (error) {\n\n        }\n        if (!conversionRate || conversionRate.isNaN()){\n          conversionRate = this.functionsUtil.BNify(0);\n        }\n      }\n\n      if (!conversionRate || this.functionsUtil.BNify(conversionRate).lte(0)){\n        return this.functionsUtil.BNify(0);\n      }\n\n      const tokenPool = await this.functionsUtil.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig);\n\n      const idleDistributedPerYearUSD = this.functionsUtil.BNify(conversionRate).times(idleDistribution);\n      APR = idleDistributedPerYearUSD.div(tokenPool).times(100);\n\n      // console.log(tokenConfig.idle.token,idleDistributedPerYearUSD.toFixed(5),conversionRate.toFixed(5),APR.toFixed(5));\n\n      return this.functionsUtil.setCachedData(cachedDataKey,APR);\n    }\n\n    return APR;\n  }\n\n  // Get IDLE distribution speed\n  getSpeed = async (idleTokenAddress) => {\n\n    const cachedDataKey = `getIdleSpeed_${idleTokenAddress}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    let idleSpeeds = await this.functionsUtil.genericContractCall('IdleController','idleSpeeds',[idleTokenAddress]);\n    if (idleSpeeds && !this.functionsUtil.BNify(idleSpeeds).isNaN()){\n      idleSpeeds = this.functionsUtil.BNify(idleSpeeds);\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,idleSpeeds);\n    }\n    return null;\n  }\n\n  getDistribution = async (tokenConfig) => {\n\n    const cachedDataKey = `getIdleDistribution_${tokenConfig.idle.token}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    // Get IDLE distribution speed and Total Supply\n    const idleSpeeds = await this.getSpeed(tokenConfig.idle.address);\n\n    if (idleSpeeds){\n\n      // Get IDLE distribution for Idle in a Year\n      const blocksPerYear = this.functionsUtil.getGlobalConfig(['network','blocksPerYear']);\n\n      // Take 50% of distrubution for lenders side\n      const distribution = this.functionsUtil.BNify(idleSpeeds).times(this.functionsUtil.BNify(blocksPerYear)).div(1e18);\n\n      if (!this.functionsUtil.BNify(distribution).isNaN()){\n        return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,distribution);\n      }\n    }\n\n    return null;\n  }\n\n  getUserDistribution = async (account=null,availableTokens=null,fixByFrequency=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    let totalSpeed = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n\n      if (this.tokenConfig && this.tokenConfig.disabledTokens.includes(tokenConfig.idle.token)){\n        return;\n      }\n\n      const [\n        idleSpeed,\n        userPoolShare\n      ] = await Promise.all([\n        this.getSpeed(tokenConfig.idle.address),\n        this.functionsUtil.getUserPoolShare(account,tokenConfig)\n      ]);\n\n      if (idleSpeed && userPoolShare){\n        const tokenSpeed = idleSpeed.times(userPoolShare);\n        totalSpeed = totalSpeed.plus(tokenSpeed);\n      }\n    });\n\n    if (fixByFrequency){\n      totalSpeed = this.functionsUtil.fixTokenDecimals(totalSpeed,this.tokenConfig.decimals);\n      totalSpeed = this.functionsUtil.fixDistributionSpeed(totalSpeed,this.tokenConfig.distributionFrequency)\n    }\n\n    return totalSpeed;\n  }\n\n  getAvgApr = async (availableTokens=null) => {\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.functionsUtil.BNify(0);\n    let totalAllocation = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [idleApr,tokenAllocation] = await Promise.all([\n        this.getAPR(token,tokenConfig),\n        this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (idleApr && tokenAllocation){\n        output = output.plus(idleApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n\n}\n\nexport default IdleGovToken;","import React from \"react\";\nimport axios from 'axios';\nimport moment from 'moment';\nimport { Text } from \"rimble-ui\";\nimport BigNumber from 'bignumber.js';\nimport IdleGovToken from './IdleGovToken';\nimport { toBuffer } from \"ethereumjs-util\";\nimport globalConfigs from '../configs/globalConfigs';\n\nconst ethereumjsABI = require('ethereumjs-abi');\nconst env = process.env;\n\nclass FunctionsUtil {\n\n  // Attributes\n  props = {};\n  idleGovToken = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n  }\n  trimEth = eth => {\n    return this.BNify(eth).toFixed(6);\n  }\n  toBN = n => new this.props.web3.utils.BN(n)\n  toEth = wei => {\n    if (!this.props.web3){\n      return null;\n    }\n    return this.props.web3.utils.fromWei(\n      (wei || 0).toString(),\n      \"ether\"\n    );\n  }\n  toWei = eth => {\n    if (!this.props.web3){\n      return null;\n    }\n    return this.props.web3.utils.toWei(\n      (eth || 0).toString(),\n      \"ether\"\n    );\n  }\n  htmlDecode = input => {\n    var e = document.createElement('textarea');\n    e.innerHTML = input;\n    return e.childNodes.length === 0 ? '' : e.childNodes[0].nodeValue;\n  }\n  BNify_obj = s => new BigNumber(s)\n  BNify = s => new BigNumber( typeof s === 'object' ? s : String(s) )\n  customLog = (...props) => { if (globalConfigs.logs.messagesEnabled) this.customLog(moment().format('HH:mm:ss'),...props); }\n  customLogError = (...props) => { if (globalConfigs.logs.errorsEnabled) console.error(moment().format('HH:mm:ss'),...props); }\n  getContractByName = (contractName) => {\n    const contract = this.props.contracts.find(c => c.name === contractName);\n    if (!contract) {\n      return false;\n    }\n    return contract.contract;\n  }\n  normalizeSimpleIDNotification = (n) => {\n    return n.replace(/<\\/p><p>/g,\"\\n\")\n            .replace(/<p>/g,\"\")\n            .replace(/<br>/g,\"\")\n            .replace(/&nbsp;/g,\" \")\n            .replace(/<\\/p>/g,\"\");\n  }\n  capitalize = (str) => {\n    return str.substr(0,1).toUpperCase()+str.substr(1);\n  }\n  strToMoment = (date,format=null) => {\n    return moment(date,format);\n  }\n  replaceArrayProps = (arr1,arr2) => {\n    if (arr2 && Object.keys(arr2).length){\n      Object.keys(arr2).forEach(p => {\n        arr1[p] = arr2[p];\n      });\n    }\n\n    return arr1;\n  }\n  stripHtml = (html) => {\n     var tmp = document.createElement(\"DIV\");\n     tmp.innerHTML = html;\n     return tmp.textContent || tmp.innerText || \"\";\n  }\n  // VanillaJS function for smooth scroll\n  scrollTo = (to, duration) => {\n    const start = window.scrollY;\n    const change = to - start;\n    const increment = 20;\n    let currentTime = 0;\n\n    Math.easeInOutQuad = function (t, b, c, d) {\n      t /= d/2;\n      if (t < 1) return c/2*t*t + b;\n      t--;\n      return -c/2 * (t*(t-2) - 1) + b;\n    };\n\n    const animateScroll = () => {\n        currentTime += increment;\n        var val = Math.easeInOutQuad(currentTime, start, change, duration);\n        window.scrollTo(0,val);\n        if(currentTime < duration) {\n          window.setTimeout(animateScroll, increment);\n        }\n    };\n\n    animateScroll();\n  }\n  getTxAction = (tx,tokenConfig) => {\n\n    const idleTokenAddress = tokenConfig.idle.address;\n    const depositProxyContractInfo = this.getGlobalConfig(['contract','methods','deposit','proxyContract']);\n    const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n    const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n    const batchMigration = this.getGlobalConfig(['tools','batchMigration','props','availableTokens',tokenConfig.idle.token]);\n    const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n    const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();    \n    const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).indexOf(tx.from.toLowerCase()) !== -1 ) && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase());\n    const isSendTransferTx = !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isReceiveTransferTx = !isMigrationTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isDepositTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && (tx.to.toLowerCase() === idleTokenAddress.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase()));\n    const isRedeemTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && tx.to.toLowerCase() === this.props.account.toLowerCase();\n    const isSwapTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && !isDepositTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n\n    let action = null;\n\n    if (isDepositTx){\n      action = 'Deposit';\n    } else if (isRedeemTx){\n      action = 'Redeem';\n    } else if (isMigrationTx){\n      action = 'Migrate';\n    } else if (isSendTransferTx){\n      action = 'Send';\n    } else if (isReceiveTransferTx){\n      action = 'Receive';\n    } else if (isSwapTx){\n      action = 'Swap';\n    } else if (isSwapTx){\n      action = 'SwapOut';\n    }\n\n    return action;\n  }\n  getAccountPortfolio = async (availableTokens=null,account=null) => {\n    const portfolio = {\n      tokensBalance:{},\n      avgAPY:this.BNify(0),\n      totalBalance:this.BNify(0),\n      totalEarnings:this.BNify(0),\n      totalAmountLent:this.BNify(0),\n      totalEarningsPerc:this.BNify(0),\n      totalBalanceConverted:this.BNify(0)\n    };\n\n    availableTokens = availableTokens ? availableTokens : this.props.availableTokens;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTokens){\n      return portfolio;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const idleTokenBalance = await this.getTokenBalance(tokenConfig.idle.token,account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = idleTokenBalance.times(tokenPrice);\n        const tokenBalanceConverted = await this.convertTokenBalance(tokenBalance,token,tokenConfig,isRisk);\n\n        if (!tokenPrice.isNaN() && !tokenBalance.isNaN()){\n          portfolio.tokensBalance[token] = {\n            tokenPrice,\n            tokenBalance,\n            idleTokenBalance,\n            tokenBalanceConverted\n          };\n\n          // Increment total balance\n          portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalance);\n          portfolio.totalBalanceConverted = portfolio.totalBalanceConverted.plus(tokenBalanceConverted);\n        }\n      }\n    });\n\n    const orderedTokensBalance = {};\n    Object.keys(availableTokens).forEach( token => {\n      if (portfolio.tokensBalance[token]){\n        orderedTokensBalance[token] = portfolio.tokensBalance[token];\n      }\n    });\n\n    portfolio.tokensBalance = orderedTokensBalance;\n\n    const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n    let avgAPY = this.BNify(0);\n    let totalEarnings = this.BNify(0);\n    let totalAmountLent = this.BNify(0);\n    let totalEarningsPerc = this.BNify(0);\n    // const amountLents = await this.getAmountLent(depositedTokens,this.props.account);\n\n    await this.asyncForEach(depositedTokens,async (token) => {\n      const tokenConfig = availableTokens[token];\n      const amountDeposited = await this.getAmountDeposited(tokenConfig,account);\n\n      // console.log(token,'amountDeposited',amountDeposited.toString(),'amountLent',amountLents[token].toString());\n\n      const tokenBalanceConverted = portfolio.tokensBalance[token].tokenBalanceConverted;\n      const [\n        tokenAprs\n        // tokenEarnings\n      ] = await Promise.all([\n        this.getTokenAprs(tokenConfig)\n        // this.loadAssetField('earnings',token,tokenConfig,this.props.account,false),\n      ]);\n\n      const tokenAPY = this.BNify(tokenAprs.avgApy);\n      const tokenWeight = tokenBalanceConverted.div(portfolio.totalBalanceConverted);\n      const amountLentToken = await this.convertTokenBalance(amountDeposited,token,tokenConfig,isRisk);\n      const tokenEarnings = tokenBalanceConverted.minus(amountLentToken);\n\n      if (tokenEarnings){\n        totalEarnings = totalEarnings.plus(tokenEarnings);\n      }\n\n      if (tokenAPY){\n        avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n      }\n\n      if (amountLentToken){\n        totalAmountLent = totalAmountLent.plus(amountLentToken);\n      }\n\n      // console.log(token,amountLentToken.toFixed(),tokenEarnings.toFixed(),tokenBalanceConverted.toFixed());\n    });\n\n    if (totalAmountLent.gt(0)){\n      totalEarningsPerc = totalEarnings.div(totalAmountLent).times(100);\n    }\n\n    portfolio.avgAPY = avgAPY;\n    portfolio.totalEarnings = totalEarnings;\n    portfolio.totalAmountLent = totalAmountLent;\n    portfolio.totalEarningsPerc = totalEarningsPerc;\n\n    // debugger;\n\n    return portfolio;\n  }\n  getCurveAvgSlippage = async (enabledTokens=[],account=null,fixDecimals=true) => {\n    account = account ? account : this.props.account;\n\n    if (!account){\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    let processedTxs = {};\n    const processedHashes = {};\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    if (curveTxs && curveTxs.length){\n\n      curveTxs.forEach((tx,index) => {\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice){\n          return false;\n        }\n\n        const tokenAmount = this.BNify(tx.tokenAmount);\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        switch (tx.action){\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn'){\n              if (index>0 && curveTokensBalance.gt(0)){\n                return;\n              }\n            }\n\n            if (!processedTxs[tx.hash]){\n              processedTxs[tx.hash] = {\n                price:null,\n                received:null,\n                slippage:null,\n                deposited:this.BNify(0),\n              };\n            }\n\n            processedTxs[tx.hash].deposited = processedTxs[tx.hash].deposited.plus(tokenAmount);\n            if (processedTxs[tx.hash].received === null){\n              processedTxs[tx.hash].price = curveTokenPrice;\n              processedTxs[tx.hash].received = curveTokens.times(curveTokenPrice);\n            }\n\n            // this.customLog('getCurveAvgSlippage',tx.action,tx.hash,tx.blockNumber,curveTokens.toFixed(6),curveTokenPrice.toFixed(6),processedTxs[tx.hash].deposited.toFixed(6),processedTxs[tx.hash].received.toFixed(6));\n          break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n          break;\n          default:\n          break;\n        }\n\n        // Update curveTokens balance\n        if (!processedHashes[tx.hash]){\n          curveTokensBalance = curveTokensBalance.plus(curveTokens);\n          if (curveTokensBalance.lte(0)){\n            curveTokensBalance = this.BNify(0);\n\n            // Reset processed transactions\n            // processedTxs = {};\n          }\n          processedHashes[tx.hash] = true;\n        }\n      });\n    }\n\n    // this.customLog('processedTxs',processedTxs);\n\n    let avgSlippage = this.BNify(0);\n    let totalDeposited = this.BNify(0);\n    Object.values(processedTxs).forEach( tx => {\n      const slippage = tx.received.div(tx.deposited).minus(1);\n      avgSlippage = avgSlippage.plus(slippage.times(tx.deposited));\n      totalDeposited = totalDeposited.plus(tx.deposited);\n    });\n\n    avgSlippage = avgSlippage.div(totalDeposited).times(-1);\n\n    // debugger;\n    // this.customLog('avgSlippage',avgSlippage.toString());\n\n    return avgSlippage;\n  }\n  getCurveAvgBuyPrice = async (enabledTokens=[],account=null) => {\n    account = account ? account : this.props.account;\n\n    if (!account){\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const processedTxs = {};\n    let avgBuyPrice = this.BNify(0);\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    // this.customLog('curveTxs',curveTxs);\n\n    if (curveTxs && curveTxs.length){\n\n      curveTxs.forEach((tx,index) => {\n\n        if (!processedTxs[tx.hash]){\n          processedTxs[tx.hash] = [];\n        }\n\n        if (processedTxs[tx.hash].includes(tx.action)){\n          return;\n        }\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice){\n          return false;\n        }\n\n        const prevAvgBuyPrice = avgBuyPrice;\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        // Deposited\n        switch (tx.action){\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn'){\n              if (index>0 && curveTokensBalance.gt(0)){\n                return;\n              }\n            }\n            avgBuyPrice = curveTokens.times(curveTokenPrice).plus(prevAvgBuyPrice.times(curveTokensBalance)).div(curveTokensBalance.plus(curveTokens));\n          break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n          // case 'CurveTransferOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n          break;\n          default:\n          break;\n        }\n        \n        // Update curveTokens balance\n        curveTokensBalance = curveTokensBalance.plus(curveTokens);\n        if (curveTokensBalance.lte(0)){\n          avgBuyPrice = this.BNify(0);\n          curveTokensBalance = this.BNify(0);\n        }\n\n        processedTxs[tx.hash].push(tx.action);\n\n        // this.customLog('getCurveAvgBuyPrice',tx.action,tx.hash,tx.blockNumber,curveTokens.toString(),curveTokenPrice.toString(),curveTokensBalance.toString(),avgBuyPrice.toString());\n      });\n    }\n\n    // this.customLog('avgCurveBuyPrice',avgBuyPrice.toString());\n\n    return avgBuyPrice;\n  }\n  getAvgBuyPrice = async (enabledTokens=[],account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const output = {};\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens);\n\n    enabledTokens.forEach( selectedToken => {\n\n      output[selectedToken] = [];\n      let avgBuyPrice = this.BNify(0);\n\n      let idleTokensBalance= this.BNify(0);\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.idleTokens || !tx.tokenPrice){\n            return false;\n          }\n\n          const prevAvgBuyPrice = avgBuyPrice;\n          let idleTokens = this.BNify(tx.idleTokens);\n          const tokenPrice = this.BNify(tx.tokenPrice);\n\n          // Deposited\n          switch (tx.action){\n            case 'Deposit':\n            case 'Receive':\n            case 'Swap':\n            case 'Migrate':\n            case 'CurveOut':\n              avgBuyPrice = idleTokens.times(tokenPrice).plus(prevAvgBuyPrice.times(idleTokensBalance)).div(idleTokensBalance.plus(idleTokens));\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              idleTokens = idleTokens.times(this.BNify(-1));\n            break;\n            default:\n            break;\n          }\n\n          // Update idleTokens balance\n          idleTokensBalance = idleTokensBalance.plus(idleTokens);\n          if (idleTokensBalance.lte(0)){\n            avgBuyPrice = this.BNify(0);\n            idleTokensBalance = this.BNify(0);\n          }\n\n        });\n      }\n\n      // Add token Data\n      output[selectedToken] = avgBuyPrice;\n    });\n\n    return output;\n  }\n  getFirstDepositTx = async (enabledTokens=[],account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens);\n\n    const deposits = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      let firstDepositTx = null;\n      deposits[selectedToken] = firstDepositTx;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount){\n            return false;\n          }\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n              amountLent = amountLent.plus(tx.tokenAmount);\n              if (!firstDepositTx){\n                firstDepositTx = tx;\n              }\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.BNify(0);\n            firstDepositTx = null;\n          }\n        });\n      }\n\n      // Add token Data\n      deposits[selectedToken] = firstDepositTx;\n    });\n\n    return deposits;\n  }\n  asyncTimeout = (ms) => {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n  getDepositTimestamp = async (enabledTokens=[],account) => {\n    const firstDepositTxs = await this.getFirstDepositTx(enabledTokens,account);\n    if (firstDepositTxs){\n      return Object.keys(firstDepositTxs).reduce( (acc,token) => {\n        if (firstDepositTxs[token]){\n          acc[token] = firstDepositTxs[token].timeStamp;\n        }\n        return acc;\n      },{});\n    }\n\n    return null;\n  }\n  getAmountDeposited = async (tokenConfig,account) => {\n    let [tokenBalance,userAvgPrice] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token,account),\n      this.genericContractCall(tokenConfig.idle.token, 'userAvgPrices', [account])\n    ]);\n\n    if (tokenBalance && userAvgPrice){\n      userAvgPrice = this.fixTokenDecimals(userAvgPrice,tokenConfig.decimals);\n      const amountDeposited = tokenBalance.times(userAvgPrice);\n      return amountDeposited;\n    }\n\n    return null;\n  }\n  getAmountLent = async (enabledTokens=[],account) => {\n\n    account = account || this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens,false);\n\n    const amountLents = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      amountLents[selectedToken] = amountLent;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount){\n            return false;\n          }\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tx.tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.BNify(0);\n          }\n        });\n      }\n\n      // Add token Data\n      amountLents[selectedToken] = amountLent;\n    });\n\n    // debugger;\n\n    return amountLents;\n  }\n  getEtherscanBaseTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[],debug=false) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length){\n      return [];\n    }\n\n    account = account.toLowerCase();\n\n    const selectedStrategy = this.props.selectedStrategy;\n\n    // Check if firstBlockNumber is less that firstIdleBlockNumber\n    const firstIdleBlockNumber = this.getGlobalConfig(['network','firstBlockNumber']);\n    firstBlockNumber = Math.max(firstIdleBlockNumber,firstBlockNumber);\n\n    const requiredNetwork = this.getGlobalConfig(['network','requiredNetwork']);\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n\n    let results = [];\n    let etherscanBaseTxs = null;\n    let etherscanBaseEndpoint = null;\n\n    // Check if etherscan is enabled for the required network\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]){\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n\n      // Get base endpoint cached transactions\n      etherscanBaseEndpoint = `${etherscanApiUrl}?strategy=${selectedStrategy}&apikey=${env.REACT_APP_ETHERSCAN_KEY}&module=account&action=tokentx&address=${account}&startblock=${firstIdleBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n      etherscanBaseTxs = this.getCachedRequest(etherscanBaseEndpoint);\n\n      if (debug){\n        console.log('DEBUG - CACHED - etherscanBaseTxs',etherscanBaseTxs);\n      }\n\n      // Check if the latest blockNumber is actually the latest one\n      if (etherscanBaseTxs && etherscanBaseTxs.data.result && Object.values(etherscanBaseTxs.data.result).length){\n\n        const lastCachedTx = Object.values(etherscanBaseTxs.data.result).pop();\n        const lastCachedBlockNumber = lastCachedTx && lastCachedTx.blockNumber ? parseInt(lastCachedTx.blockNumber)+1 : firstBlockNumber;\n\n        const etherscanEndpointLastBlock = `${etherscanApiUrl}?strategy=${selectedStrategy}&apikey=${env.REACT_APP_ETHERSCAN_KEY}&module=account&action=tokentx&address=${account}&startblock=${lastCachedBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n        let latestTxs = await this.makeCachedRequest(etherscanEndpointLastBlock,15);\n\n        if (latestTxs && latestTxs.data.result && latestTxs.data.result.length){\n          \n          latestTxs = await this.filterEtherscanTxs(latestTxs.data.result,enabledTokens,true,false);\n\n          if (latestTxs && Object.values(latestTxs).length){\n\n            const latestBlockNumbers = Object.values(latestTxs).map( lastTx => (parseInt(lastTx.blockNumber)) );\n            const lastRealBlockNumber = Math.max(...latestBlockNumbers);\n\n            // If real tx blockNumber differs from last blockNumber\n            if (lastRealBlockNumber>=lastCachedBlockNumber){\n              // Merge latest Txs with etherscanBaseTxs\n              Object.values(latestTxs).forEach((tx) => {\n                const txFound = Object.keys(etherscanBaseTxs.data.result).includes(tx.hashKey);\n                if (!txFound){\n                  etherscanBaseTxs.data.result[tx.hashKey] = tx;\n                }\n              });\n\n              // Save etherscan txs\n              this.saveEtherscanTxs(etherscanBaseEndpoint,etherscanBaseTxs.data.result);\n            }\n          }\n        }\n      } else {\n        etherscanBaseTxs = null;\n      }\n\n      let txs = etherscanBaseTxs;\n\n      if (debug){\n        console.log('DEBUG - txs',txs);\n      }\n\n      if (!txs){\n        // Make request\n        txs = await this.makeRequest(etherscanBaseEndpoint);\n\n        // console.log('makeRequest 1',account,etherscanBaseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n\n        if (!txs || !txs.data || parseInt(txs.data.status)===0){\n          let requestCount = 0;\n          let requestStatus = false;\n          do {\n            await this.asyncTimeout(500);\n            txs = await this.makeRequest(etherscanBaseEndpoint);\n            requestCount++;\n            requestStatus = txs && txs.data ? parseInt(txs.data.status) : false;\n            // console.log('makeRequest '+(requestCount+1),account,etherscanBaseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n          } while (requestCount<5 && !requestStatus);\n        }\n\n        // Cache request\n        if (txs && txs.data && parseInt(txs.data.status)>0){\n          const timestamp = parseInt(Date.now()/1000);\n          const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n          cachedRequests[etherscanBaseEndpoint] = {\n            data:txs,\n            timestamp\n          };\n          this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n        }\n      }\n\n      if (txs && txs.data && txs.data.result){\n        results = txs.data.result;\n      } else {\n        return [];\n      }\n    }\n\n    return {\n      results,\n      etherscanBaseTxs,\n      etherscanBaseEndpoint\n    };\n  }\n  getCurveTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[]) => {\n    const results = await this.getEtherscanTxs(account,firstBlockNumber,endBlockNumber,enabledTokens);\n    // results = results ? Object.values(results) : [];\n    return this.filterCurveTxs(results,enabledTokens);\n  }\n  saveEtherscanTxs = (endpoint,txs) => {\n    const txsToStore = {};\n    Object.keys(txs).forEach(txHash => {\n      const tx = txs[txHash];\n      if (tx.blockNumber && (!tx.status || tx.status.toLowerCase() !== 'pending')){\n        txsToStore[txHash] = tx;\n      }\n    });\n\n    // Save new cached data\n    const cachedRequest = {\n      data:{\n        result:txsToStore\n      }\n    };\n    this.saveCachedRequest(endpoint,false,cachedRequest);\n  }\n  getEtherscanTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[],debug=false) => {\n    const {\n      results,\n      etherscanBaseTxs,\n      etherscanBaseEndpoint\n    } = await this.getEtherscanBaseTxs(account,firstBlockNumber,endBlockNumber,enabledTokens,debug);\n\n    // Initialize prevTxs\n    let etherscanTxs = {};\n    if (etherscanBaseTxs){\n      // Filter txs for token\n      etherscanTxs = await this.processStoredTxs(results,enabledTokens);\n    } else {\n      const allAvailableTokens = Object.keys(this.props.availableTokens);\n      // Save base endpoint with all available tokens\n      etherscanTxs = await this.filterEtherscanTxs(results,allAvailableTokens);\n\n      // Store filtered txs\n      if (etherscanTxs && Object.keys(etherscanTxs).length){\n        this.saveEtherscanTxs(etherscanBaseEndpoint,etherscanTxs);\n      }\n    }\n\n    if (debug){\n      console.log('DEBUG - getEtherscanTxs -',etherscanTxs);\n    }\n\n    return Object\n            .values(etherscanTxs)\n            .filter(tx => (tx.token && enabledTokens.includes(tx.token.toUpperCase())))\n            .sort((a,b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n  }\n  filterCurveTxs = async (results,enabledTokens=[]) => {\n\n    if (!results || !results.length || typeof results.forEach !== 'function'){\n      return [];\n    }\n\n    const availableTokens = this.props.availableTokens ? this.props.availableTokens : this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const curveTxs = results.filter( tx => (enabledTokens.includes(tx.token) && ['CurveIn','CurveOut','CurveZapIn','CurveZapOut','CurveTransferIn','CurveTransferOut','CurveDepositIn','CurveDepositOut'].includes(tx.action)) );\n\n    if (curveTxs.length){\n      curveTxs.sort((a,b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n    }\n\n    return curveTxs;\n  }\n  filterEtherscanTxs = async (results,enabledTokens=[],processTxs=true,processStoredTxs=true) => {\n    if (!this.props.account || !results || !results.length || typeof results.forEach !== 'function'){\n      return [];\n    }\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let etherscanTxs = {};\n    let curveTransfersTxs = [];\n    let curveTransfersTxsToDelete = [];\n\n    // const idleTokensAddresses = Object.values(this.props.availableTokens).map( tokenConfig => (tokenConfig.idle.address) );\n    const curveZapContract = this.getGlobalConfig(['curve','zapContract']);\n    const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    // this.customLog('filterEtherscanTxs',enabledTokens,results);\n\n    enabledTokens.forEach(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      const depositProxyContractInfo = this.getGlobalConfig(['contract','methods','deposit','proxyContract']);\n      const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n      const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n      const tokenMigrationToolParams = this.getGlobalConfig(['tools','tokenMigration','props','migrationContract']);\n\n      const batchMigration = this.getGlobalConfig(['tools','batchMigration','props','availableTokens',tokenConfig.idle.token]);\n      const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n      // const curveEnabled = this.getGlobalConfig(['curve','enabled']);\n      const curveTokenConfig = this.getGlobalConfig(['curve','availableTokens',tokenConfig.idle.token]);\n\n      results.forEach( tx => {\n        let tokenDecimals = tokenConfig.decimals;\n        const idleToken = tokenConfig.idle.token;\n        const internalTxs = results.filter(r => r.hash === tx.hash);\n        const isRightToken = internalTxs.length>1 && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase()).length>0;\n        const isSendTransferTx = internalTxs.length === 1 && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isReceiveTransferTx = internalTxs.length === 1 && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isDepositInternalTx = isRightToken && internalTxs.find( iTx => iTx.from.toLowerCase() === this.props.account.toLowerCase() && (iTx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && iTx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length>0 )) );\n        const isRedeemInternalTx = isRightToken && internalTxs.find( iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && iTx.to.toLowerCase() === this.props.account.toLowerCase() );\n\n        const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase()) ) && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase());\n        const isConversionTx = tokenMigrationToolParams && (tx.from.toLowerCase() === tokenMigrationToolParams.address.toLowerCase() || tokenMigrationToolParams.oldAddresses.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase())) && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isDepositTx = isRightToken && !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && (tx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length>0 ));\n        const isRedeemTx = isRightToken && !isMigrationTx && !isDepositInternalTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && tx.to.toLowerCase() === this.props.account.toLowerCase();\n        const isWithdrawTx = internalTxs.length>1 && internalTxs.filter(iTx => tokenConfig.protocols.map(p => p.address.toLowerCase()).includes(iTx.contractAddress.toLowerCase()) ).length>0 && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // const curveDepositTx = internalTxs.find( iTx => (iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && iTx.from.toLowerCase() === this.props.account.toLowerCase()) );\n        const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n        // Check Curve\n        const curveTx = internalTxs.find( tx => (tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && (tx.to.toLowerCase() === this.props.account.toLowerCase() || tx.from.toLowerCase() === this.props.account.toLowerCase()) ) );\n        const isCurveTx = curveTx !== undefined;\n\n        const isCurveDepositTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === curveSwapContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveRedeemTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveSwapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveDepositIn = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveDepositOut = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveZapIn = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveZapOut = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveTransferOut = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapOut && !isCurveRedeemTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.from.toLowerCase() === this.props.account.toLowerCase();\n        const isCurveTransferIn = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapIn && !isCurveDepositTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isSwapOutTx = !isCurveTx && !isSendTransferTx && !isWithdrawTx && !isRedeemInternalTx && !etherscanTxs[tx.hash] && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isSwapTx = !isCurveTx && !isReceiveTransferTx && !isConversionTx && !isDepositInternalTx && !etherscanTxs[tx.hash] && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // if (tx.hash.toLowerCase() === '0x599a2e7b0094b0a943ffb1d520cb47598dcf3764145c33824e3b032d91ccc489'.toLowerCase()){\n        //   debugger;\n        // }\n\n        if (isSendTransferTx || isReceiveTransferTx || isMigrationTx || isDepositTx || isRedeemTx || isSwapTx || isSwapOutTx || isWithdrawTx || isConversionTx || isCurveDepositTx || isCurveRedeemTx || isCurveZapIn || isCurveZapOut || isCurveTransferOut || isCurveTransferIn || isCurveDepositIn || isCurveDepositOut){\n\n          let action = null;\n          let hashKey = tx.hash;\n\n          if (isDepositTx){\n            action = 'Deposit';\n          } else if (isRedeemTx){\n            action = 'Redeem';\n          } else if (isMigrationTx || isConversionTx){\n            action = 'Migrate';\n          } else if (isSendTransferTx){\n            action = 'Send';\n          } else if (isReceiveTransferTx){\n            action = 'Receive';\n          } else if (isSwapTx){\n            action = 'Swap';\n          } else if (isSwapOutTx){\n            action = 'SwapOut';\n          } else if (isWithdrawTx){\n            action = 'Withdraw';\n          } else if (isCurveDepositTx){\n            action = 'CurveIn';\n          } else if (isCurveRedeemTx){\n            action = 'CurveOut';\n          } else if (isCurveZapIn){\n            action = 'CurveZapIn';\n          } else if (isCurveZapOut){\n            action = 'CurveZapOut';\n          } else if (isCurveDepositIn){\n            action = 'CurveDepositIn';\n          } else if (isCurveDepositOut){\n            action = 'CurveDepositOut';\n          } else if (isCurveTransferIn){\n            action = 'CurveTransferIn';\n          } else if (isCurveTransferOut){\n            action = 'CurveTransferOut';\n          }\n\n          let curveTokens = null;\n          if (isCurveTx){\n            hashKey += '_'+tx.tokenSymbol;\n            curveTokens = this.fixTokenDecimals(curveTx.value,curvePoolContract.decimals);\n\n            // Add action for curve tokens transfers\n            if ((isCurveTransferIn || isCurveTransferOut)){\n              hashKey+='_'+action;\n            }\n          }\n\n          // this.customLog('SAVE!',action);\n\n          if (tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()){\n            tokenDecimals = 18;\n          } else if (isCurveTx){\n            tokenDecimals = parseInt(tx.tokenDecimal);\n          }\n\n          // Sum the value if already processed\n          if (etherscanTxs[hashKey]){\n            // Prevent second internal tx to sum SwapOut original value\n            switch (etherscanTxs[hashKey].action){\n              case 'SwapOut':\n                if (etherscanTxs[hashKey].action !== action && isRedeemTx){\n                  etherscanTxs[hashKey].tokenValue = this.fixTokenDecimals(tx.value,tokenDecimals);\n                }\n              break;\n              default:\n                if (!curveTx){\n                  const newValue = etherscanTxs[hashKey].value.plus(this.fixTokenDecimals(tx.value,tokenDecimals));\n                  etherscanTxs[hashKey].value = newValue;\n                }\n              break;\n            }\n          } else {\n            // Insert tx in curve transfers buffer\n            if (isCurveTransferIn || isCurveTransferOut){\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n                curveTokens = this.fixTokenDecimals(tx.value,curvePoolContract.decimals);\n                curveTransfersTxs.push({...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value,tokenDecimals)});\n              }\n            } else {\n              etherscanTxs[hashKey] = ({...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value,tokenDecimals)});\n\n              // Delete curveTransfers\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n                curveTransfersTxsToDelete.push(tx.hash.toLowerCase());\n              }\n\n              // Take right tokenSymbol\n              switch (action){\n                case 'Withdraw':\n                  const iTxs = internalTxs.filter(iTx => (iTx !== tx));\n                  if (iTxs.length>0){\n                    const iTx = iTxs[0];\n                    etherscanTxs[hashKey].withdrawnValue = this.fixTokenDecimals(iTx.value,iTx.tokenDecimal);\n                    etherscanTxs[hashKey].tokenSymbol = iTx.tokenSymbol;\n                  }\n                break;\n                case 'CurveIn':\n                case 'CurveOut':\n                case 'CurveZapIn':\n                case 'CurveZapOut':\n                case 'CurveDepositIn':\n                case 'CurveDepositOut':\n                  etherscanTxs[hashKey].tokenSymbol = token;\n                break;\n                default:\n                break;\n              }\n            }   \n          }\n        }\n      });\n    });\n    \n    curveTransfersTxs.forEach( tx => {\n      if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n        etherscanTxs[tx.hashKey] = tx;\n      }\n    });\n  \n    if (processTxs){\n      etherscanTxs = await this.processEtherscanTransactions(etherscanTxs,enabledTokens,processStoredTxs);\n    }\n\n    // console.log('etherscanTxs',etherscanTxs);\n\n    return etherscanTxs;\n  }\n  addStoredTransaction = (txKey,transaction) => {\n\n    const account = this.props && this.props.account ? this.props.account : null;\n    const selectedToken = this.props && this.props.selectedToken ? this.props.selectedToken : null;\n\n    if (!account || !selectedToken || !this.props.availableTokens || !this.props.availableTokens[selectedToken]){\n      return false;\n    }\n\n    const tokenConfig = this.props.availableTokens[selectedToken];\n    const tokenKey = tokenConfig.idle.token;\n\n    let storedTxs = this.getStoredTransactions();\n    if (!storedTxs[account]){\n      storedTxs[account] = {};\n    }\n\n    if (!storedTxs[account][tokenKey]){\n      storedTxs[account][tokenKey] = {};\n    }\n\n    storedTxs[account][tokenKey][txKey] = transaction;\n    this.updateStoredTransactions(storedTxs);\n  }\n  updateStoredTransactions = transactions => {\n    this.setLocalStorage('transactions',JSON.stringify(transactions));\n  }\n  /*\n  Merge storedTxs with this.props.transactions\n  */\n  getStoredTransactions = (account=null,tokenKey=null,selectedToken=null) => {\n    const storedTxs = this.getStoredItem('transactions',true,{});\n    const transactions = this.props.transactions ? { ...this.props.transactions } : {};\n    let output = storedTxs;\n\n    if (account){\n      if (storedTxs[account]){\n        output = storedTxs[account];\n        if (tokenKey){\n          output = output[tokenKey] ? output[tokenKey] : {};\n\n          if (selectedToken){\n            Object.keys(transactions).forEach(txKey => {\n              const tx = transactions[txKey];\n              if (!output[txKey] && tx.token && tx.token.toUpperCase() === selectedToken.toUpperCase()){\n                output[txKey] = transactions[txKey];\n              }\n            });\n          }\n        }\n      } else {\n        output = {};\n      }\n    }\n\n    return output;\n  }\n  processEtherscanTransactions = async (etherscanTxs,enabledTokens=[],processStoredTxs=true) => {\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let txReceipts = {};\n    let storedTxs = this.getStoredTransactions();\n\n    // Init storedTxs for pair account-token if empty\n    if (typeof storedTxs[this.props.account] !== 'object'){\n      storedTxs[this.props.account] = {};\n    }\n\n    // Take base tokens addresses and configs\n    const baseTokensConfigs = {};\n    const baseTokensAddresses = [];\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n    Object.keys(curveAvailableTokens).forEach( token => {\n      const curveTokenConfig = curveAvailableTokens[token];\n      const baseTokenConfig = this.getGlobalConfig(['stats','tokens',curveTokenConfig.baseToken]);\n      const baseTokenAddress = baseTokenConfig.address.toLowerCase();\n      baseTokensConfigs[baseTokenAddress] = baseTokenConfig;\n      baseTokensConfigs[baseTokenAddress].token = curveTokenConfig.baseToken;\n      baseTokensAddresses.push(baseTokenAddress);\n    });\n\n    const curveZapContract = this.getGlobalConfig(['curve','zapContract']);\n    // const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    // const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    // const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    await this.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n      const idleToken = tokenConfig.idle.token;\n\n      // Init storedTxs for pair account-token if empty\n      if (typeof storedTxs[this.props.account][tokenKey] !== 'object'){\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      const minedTxs = {...storedTxs[this.props.account][tokenKey]};\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        await this.asyncForEach(filteredTxs,async (tx,index) => {\n          const txKey = `tx${tx.timeStamp}000`;\n          const storedTx = storedTxs[this.props.account][tokenKey][txKey] ? storedTxs[this.props.account][tokenKey][txKey] : tx;\n\n          let tokenPrice = null;\n          \n          if (storedTx.tokenPrice && !this.BNify(storedTx.tokenPrice).isNaN()){\n            tokenPrice = this.BNify(storedTx.tokenPrice);\n          } else {\n            tokenPrice = await this.getIdleTokenPrice(tokenConfig,tx.blockNumber,tx.timeStamp);\n            storedTx.tokenPrice = tokenPrice;\n          }\n\n          let idleTokens = this.BNify(tx.value);\n          let tokensTransfered = tokenPrice.times(idleTokens);\n\n          // Add transactionHash to storedTx\n          if (!storedTx.transactionHash){\n            storedTx.transactionHash = tx.hash;\n          }\n\n          // Deposited\n          switch (tx.action){\n            case 'Send':\n            case 'Receive':\n            case 'Swap':\n            case 'SwapOut':\n            case 'Migrate':\n              if (!storedTx.tokenAmount){\n                storedTx.idleTokens = idleTokens;\n                storedTx.value = tokensTransfered;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.tokenSymbol = selectedToken;\n              }\n            break;\n            case 'Deposit':\n            case 'Redeem':\n              if (!storedTx.tokenAmount){\n                storedTx.value = idleTokens;\n                storedTx.tokenAmount = idleTokens;\n                storedTx.idleTokens = idleTokens.div(tokenPrice);\n              }\n            break;\n            case 'Withdraw':\n              if (!storedTx.tokenAmount){\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.value = storedTx.withdrawnValue;\n              }\n            break;\n            case 'CurveIn':\n            case 'CurveOut':\n              if (!storedTx.tokenAmount){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n            break;\n            case 'CurveTransferIn':\n            case 'CurveTransferOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n                storedTx.tokenAmount = this.BNify(storedTx.curveTokens).times(storedTx.curveTokenPrice);\n              }\n\n              storedTx.idleTokens = this.BNify(0);\n            break;\n            case 'CurveZapIn':\n            case 'CurveZapOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              if (!storedTx.tokenAmount){\n\n                storedTx.tokenAmount = this.BNify(0);\n                storedTx.idleTokens = this.BNify(0);\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise( async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n                    if (err){\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt){\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]){\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter( log => (baseTokensAddresses.includes(log.address.toLowerCase()) && log.topics[log.topics.length-1].toLowerCase() === `0x00000000000000000000000${curveZapContract.address.replace('x','').toLowerCase()}` ) );\n\n                  this.customLog('filteredLogs',filteredLogs);\n\n                  if (filteredLogs && filteredLogs.length){\n                    filteredLogs.forEach( log => {\n                      let tokenAmount = parseInt(log.data,16);\n                      const baseTokensConfig = baseTokensConfigs[log.address.toLowerCase()];\n                      const tokenDecimals = baseTokensConfig.decimals;\n                      tokenAmount = this.fixTokenDecimals(tokenAmount,tokenDecimals);\n                      storedTx.tokenAmount = storedTx.tokenAmount.plus(tokenAmount);\n                      this.customLog('Add tokenAmount ('+tx.hash+')',baseTokensConfig.token,tokenAmount.toFixed(5),storedTx.tokenAmount.toFixed(5));\n                    });\n                  }\n                }\n              }\n            break;\n            case 'CurveDepositIn':\n            case 'CurveDepositOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              storedTx.tokenAmount = this.BNify(storedTx.value);\n\n              if (!storedTx.idleTokens){\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise( async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n                    if (err){\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt){\n                  const curveTokenConfig = this.getGlobalConfig(['curve','availableTokens',idleToken]);\n                  const idleTokenDecimals = curveTokenConfig && curveTokenConfig.decimals ? curveTokenConfig.decimals : 18;\n                  const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]){\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter( log => (log.address.toLowerCase()===idleTokenAddress ) );\n                  if (filteredLogs && filteredLogs.length){\n                    idleTokens = parseInt(filteredLogs[0].data,16);\n                    idleTokens = this.fixTokenDecimals(idleTokens,idleTokenDecimals);\n                    storedTx.idleTokens = idleTokens;\n                  }\n                }\n              }\n            break;\n            default:\n            break;\n          }\n            \n          // Save token for future filtering\n          storedTx.token = selectedToken;\n\n          // Save processed tx\n          etherscanTxs[tx.hashKey] = storedTx;\n\n          // Store processed Tx\n          storedTxs[this.props.account][tokenKey][txKey] = storedTx;\n\n          // Remove from minted Txs\n          delete minedTxs[txKey];\n        });\n      }\n\n      // Process Stored txs\n      if (processStoredTxs){\n        etherscanTxs = await this.processStoredTxs(etherscanTxs,[selectedToken],this.props.transactions);\n      }\n    });\n\n    // Update Stored txs\n    if (storedTxs){\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  processStoredTxs = async (etherscanTxs,enabledTokens=[],txsToProcess=null) => {\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let storedTxs = this.getStoredItem('transactions',true,{})\n\n    // Init storedTxs\n    if (!storedTxs[this.props.account]){\n      storedTxs[this.props.account] = {};\n    }\n\n    etherscanTxs = Object.assign({},etherscanTxs);\n\n    const networkId = this.getGlobalConfig(['network','requiredNetwork']);\n\n    // this.customLog('Processing stored txs',enabledTokens);\n\n    await this.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n\n      // Init storedTxs\n      if (!storedTxs[this.props.account][tokenKey]){\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      txsToProcess = txsToProcess && Object.values(txsToProcess).length ? txsToProcess : this.getStoredTransactions(this.props.account,tokenKey,selectedToken);\n      \n      // this.customLog('txsToProcess',selectedToken,txsToProcess);\n\n      // if (!Object.values(txsToProcess).length && selectedToken==='DAI' && Object.values(this.props.transactions).length>0){\n      //   debugger;\n      // }\n\n      // Debug transactions\n      /*\n      txsToProcess['xxxxx'] = {\n        status:'success',\n        created:Date.now(),\n        method:'executeMetaTransaction',\n        token:selectedToken.toUpperCase(),\n        transactionHash:'0x000000000000000000000000000'\n      };\n      */\n\n      await this.asyncForEach(Object.keys(txsToProcess),async (txKey,i) => {\n        const tx = txsToProcess[txKey];\n\n        // Skip wrong token\n        if (!tx || !tx.token || tx.token.toUpperCase() !== selectedToken.toUpperCase() || (tx.networkId && parseInt(tx.networkId) !== parseInt(networkId))){\n          return false;\n        }\n\n        const isStoredTx = storedTxs && storedTxs[this.props.account] && storedTxs[this.props.account][tokenKey] && storedTxs[this.props.account][tokenKey][txKey];\n\n        const allowedMethods = {\n          mintIdleToken:'Deposit',\n          redeemIdleToken:'Redeem',\n          migrateFromToIdle:'Migrate',\n          mintIdleTokensProxy:'Deposit',\n          migrateFromAaveToIdle:'Migrate',\n          migrateFromIearnToIdle:'Migrate',\n          executeMetaTransaction:'Migrate',\n          migrateFromFulcrumToIdle:'Migrate',\n          migrateFromCompoundToIdle:'Migrate',\n        };\n        const pendingStatus = ['pending','started'];\n        const txSucceeded = tx.status === 'success';\n        const txPending = pendingStatus.includes(tx.status);\n        const isMetaTx = tx.method === 'executeMetaTransaction';\n        const txHash = tx.transactionHash ? tx.transactionHash : null;\n        const methodIsAllowed = Object.keys(allowedMethods).includes(tx.method);\n\n        // Skip transaction if already present in etherscanTxs with same status\n        if (txHash && etherscanTxs[txHash] && etherscanTxs[txHash].tokenPrice){\n          return false;\n        }\n\n        if (txPending && txHash && !etherscanTxs[txHash] && methodIsAllowed && tx.params.length){\n          // this.customLog('processStoredTxs',tx.method,tx.status,tx.params);\n          const isMigrationTx = allowedMethods[tx.method] === 'Migrate';\n          const decimals = isMigrationTx ? 18 : tokenConfig.decimals;\n          etherscanTxs[`t${tx.created}`] = {\n            status:'Pending',\n            token:selectedToken,\n            action:allowedMethods[tx.method],\n            timeStamp:parseInt(tx.created/1000),\n            hash:txHash ? tx.transactionHash : null,\n            tokenSymbol:isMigrationTx ? tokenConfig.idle.token : selectedToken,\n            value: tx.value ? tx.value : this.fixTokenDecimals(tx.params[0],decimals).toString()\n          };\n\n          return false;\n        }\n\n        // Skip invalid txs\n        if (!txSucceeded || !txHash || !methodIsAllowed){\n          return false;\n        }\n\n        let realTx = tx.realTx ? tx.realTx : null;\n\n        if (!realTx){\n          // this.customLog('loadTxs - getTransaction',tx.transactionHash);\n          realTx = await (new Promise( async (resolve, reject) => {\n            this.props.web3.eth.getTransaction(tx.transactionHash,(err,txReceipt)=>{\n              if (err){\n                reject(err);\n              }\n              resolve(txReceipt);\n            });\n          }));\n        }\n\n        // this.customLog('realTx (localStorage)',realTx);\n\n        // Skip txs from other wallets if not meta-txs\n        if (!realTx || (!isMetaTx && realTx.from.toLowerCase() !== this.props.account.toLowerCase())){\n          return false;\n        }\n\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig,realTx.blockNumber,realTx.timeStamp);\n\n        realTx.status = 'Completed';\n        realTx.action = allowedMethods[tx.method];\n        realTx.contractAddress = tokenConfig.address;\n        realTx.timeStamp = parseInt(tx.created/1000);\n\n        let txValue = null;\n        switch (tx.method){\n          case 'mintIdleToken':\n          case 'mintIdleTokensProxy':\n            if (!tx.params){\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (realTx.to.toLowerCase() !== tokenConfig.idle.address.toLowerCase()){\n              // Remove wrong contract tx\n              if (isStoredTx){\n                delete storedTxs[this.props.account][tokenKey][txKey];\n              }\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - wrong contract');\n              return false;\n            }\n\n            txValue = tx.params ? this.fixTokenDecimals(tx.params[0],tokenConfig.decimals).toString() : 0;\n            if (!txValue){\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - value is zero ('+txValue+')');\n              return false;\n            }\n\n            realTx.value = txValue;\n            realTx.tokenAmount = txValue;\n          break;\n          case 'redeemIdleToken':\n            if (!tx.params){\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (!realTx.tokenPrice){\n              const redeemedValueFixed = this.fixTokenDecimals(tx.params[0],18).times(tokenPrice);\n              realTx.tokenPrice = tokenPrice;\n              realTx.value = redeemedValueFixed;\n              realTx.tokenAmount = redeemedValueFixed;\n            }\n          break;\n          case 'executeMetaTransaction':\n            let executeMetaTransactionReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!executeMetaTransactionReceipt){\n              executeMetaTransactionReceipt = await (new Promise( async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash,(err,tx)=>{\n                  if (err){\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!executeMetaTransactionReceipt){\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt){\n              tx.txReceipt = executeMetaTransactionReceipt;\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            let action = null;\n            let executeMetaTransactionContractAddr = null;\n            let executeMetaTransactionInternalTransfers = [];\n            const IdleProxyMinterInfo = this.getGlobalConfig(['contract','deposit','proxyContract']);\n\n            // Handle migration tx\n            if (tokenConfig.migration && tokenConfig.migration.oldContract){\n              if (executeMetaTransactionReceipt.logs){\n                executeMetaTransactionContractAddr = tokenConfig.migration.oldContract.address.replace('x','').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n              } else if (executeMetaTransactionReceipt.events){\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length){\n                action = 'Migrate';\n              }\n            }\n\n            // Handle deposit tx\n            if (!executeMetaTransactionInternalTransfers.length){\n              if (executeMetaTransactionReceipt.logs){\n                executeMetaTransactionContractAddr = tokenConfig.idle.address.replace('x','').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n\n                // Handle deposit made with proxy contract\n                if (!executeMetaTransactionInternalTransfers.length && IdleProxyMinterInfo){\n                  executeMetaTransactionContractAddr = IdleProxyMinterInfo.address.replace('x','').toLowerCase();\n                  executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n                }\n              } else if (executeMetaTransactionReceipt.events){\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length){\n                action = 'Deposit';\n              }\n            }\n\n            if (!executeMetaTransactionInternalTransfers.length){\n              return false;\n            }\n\n            const internalTransfer = executeMetaTransactionInternalTransfers[0];\n\n            const metaTxValue = internalTransfer.data ? parseInt(internalTransfer.data,16) : (internalTransfer.raw && internalTransfer.raw.data) ? parseInt(internalTransfer.raw.data,16) : null;\n\n            if (!metaTxValue){\n              return false;\n            }\n\n            const metaTxValueFixed = this.fixTokenDecimals(metaTxValue,tokenConfig.decimals);\n            realTx.action = action;\n            realTx.value = metaTxValueFixed;\n            realTx.tokenAmount = metaTxValueFixed;\n            // this.customLog(metaTxValueFixed.toString());\n          break;\n          case 'migrateFromCompoundToIdle':\n          case 'migrateFromFulcrumToIdle':\n          case 'migrateFromAaveToIdle':\n          case 'migrateFromIearnToIdle':\n          case 'migrateFromToIdle':\n            if (!tokenConfig.migration || !tokenConfig.migration.oldContract){\n              return false;\n            }\n\n            let migrationTxReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!migrationTxReceipt){\n              migrationTxReceipt = await (new Promise( async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash,(err,tx)=>{\n                  if (err){\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!migrationTxReceipt){\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt){\n              tx.txReceipt = migrationTxReceipt;\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            const migrationContractAddr = tokenConfig.migration.migrationContract.address.toLowerCase().replace('x','');\n            const contractAddress = tokenConfig.idle.address.toLowerCase().replace('x','');\n            const migrationTxInternalTransfers = migrationTxReceipt.logs.filter((tx) => { return tx.topics.length>=3 && tx.topics[tx.topics.length-2].toLowerCase() === `0x00000000000000000000000${migrationContractAddr}` && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${contractAddress}`; });\n\n            if (!migrationTxInternalTransfers.length){\n              return false;\n            }\n\n            const migrationInternalTransfer = migrationTxInternalTransfers.pop();\n\n            const decodedLogs = this.props.web3.eth.abi.decodeLog([\n              {\n                internalType: \"uint256\",\n                name: \"_token\",\n                type: \"uint256\"\n              },\n            ],migrationInternalTransfer.data,migrationInternalTransfer.topics);\n\n            if (!decodedLogs || !decodedLogs._token){\n              return false;\n            }\n\n            const migrationValue = decodedLogs._token;\n            const migrationValueFixed = this.fixTokenDecimals(migrationValue,tokenConfig.decimals);\n            realTx.value = migrationValueFixed.toString();\n          break;\n          default:\n          break;\n        }\n\n        realTx.tokenPrice = tokenPrice;\n        realTx.token = selectedToken;\n        realTx.tokenSymbol = selectedToken;\n        realTx.idleTokens = tokenPrice.times(this.BNify(realTx.value));\n\n        // Save processed tx\n        etherscanTxs[txHash] = realTx;\n        // etherscanTxs.push(realTx);\n\n        // Store processed Tx\n        if (!tx.realTx){\n          tx.realTx = realTx;\n          storedTxs[this.props.account][tokenKey][txKey] = tx;\n        }\n      });\n    });\n\n    // Update Stored Txs\n    if (storedTxs){\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  saveCachedRequest = (endpoint,alias=false,data) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    const timestamp = parseInt(Date.now()/1000);\n    cachedRequests[key] = {\n      data,\n      timestamp\n    };\n    return this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n  }\n  getCustomAddress = () => {\n    return this.getStoredItem('customAddress',false);\n  }\n  setCustomAddress = (customAddress) => {\n    return this.setLocalStorage('customAddress',customAddress);\n  }\n  getCachedRequest = (endpoint,alias=false) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key]){\n      return cachedRequests[key].data;\n    }\n    return null;\n  }\n  makeRequest = async(endpoint,error_callback=false,config=null) => {\n    const data = await axios\n                  .get(endpoint,config)\n                  .catch(err => {\n                    if (typeof error_callback === 'function'){\n                      error_callback(err);\n                    }\n                  });\n    return data;\n  }\n  makeCachedRequest = async (endpoint,TTL=60,return_data=false,alias=false,config=null) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now()/1000);\n    \n    // Check if already exists\n    const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key] && cachedRequests[key].timestamp && timestamp-cachedRequests[key].timestamp<TTL){\n      return (cachedRequests[key].data && return_data ? cachedRequests[key].data.data : cachedRequests[key].data);\n    }\n\n    const data = await this.makeRequest(endpoint,false,config);\n\n    cachedRequests[key] = {\n      data,\n      timestamp\n    };\n    this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n    return (data && return_data ? data.data : data);\n  }\n  getTransactionError = error => {\n    let output = 'error';\n    if (parseInt(error.code)){\n      const errorCode = parseInt(error.code);\n      switch (errorCode){\n        case 4001:\n          output = 'denied';\n        break;\n        default:\n          output = `error_${errorCode}`;\n        break;\n      }\n    } else if (error.message){\n      output = error.message.split(\"\\n\")[0]; // Take just the first line of the error\n    }\n\n    return output;\n  }\n  getGlobalConfigs = () => {\n    return globalConfigs;\n  }\n  getArrayPath = (path,array) => {\n    path = Object.assign([],path);\n    if (path.length>0){\n      const prop = path.shift();\n      if (!path.length){\n        return array[prop] ? array[prop] : null;\n      } else if (array[prop]) {\n        return this.getArrayPath(path,array[prop]);\n      }\n    }\n    return null;\n  }\n  getGlobalConfig = (path,configs=false) => {\n    configs = configs ? configs : globalConfigs;\n    if (path.length>0){\n      const prop = path.shift();\n      if (!path.length){\n        return configs[prop] ? configs[prop] : null;\n      } else if (configs[prop]) {\n        return this.getGlobalConfig(path,configs[prop]);\n      }\n    }\n    return null;\n  }\n  checkUrlOrigin = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n  }\n  checkUrlBeta = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.betaURL.toLowerCase());\n  }\n  sendGoogleAnalyticsEvent = async (eventData,callback=null) => {\n\n    const googleEventsInfo = globalConfigs.analytics.google.events;\n    const debugEnabled = googleEventsInfo.debugEnabled;\n    const originOk = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n\n    if (googleEventsInfo.enabled && window.ga && ( debugEnabled || originOk)){\n\n      // Check if testnet postfix required\n      if (googleEventsInfo.addPostfixForTestnet){\n        // Postfix network name if not mainnet\n        if (globalConfigs.network.requiredNetwork !== 1){\n          const currentNetwork = globalConfigs.network.availableNetworks[globalConfigs.network.requiredNetwork];\n          eventData.eventCategory += `_${currentNetwork}`;\n        // Postfix test for debug\n        } else if (debugEnabled && !originOk) {\n          eventData.eventCategory += '_test';\n        }\n      }\n\n      await (new Promise( async (resolve, reject) => {\n        eventData.hitCallback = () => {\n          resolve(true);\n        };\n        eventData.hitCallbackFail = () => {\n          reject();\n        };\n\n        window.ga('send', 'event', eventData);\n      }));\n\n      if (typeof callback === 'function'){\n        callback();\n      }\n    }\n\n    if (typeof callback === 'function'){\n      callback();\n    }\n\n    return false;\n  }\n  createContract = async (name, address, abi) => {\n    try {\n      const contract = new this.props.web3.eth.Contract(abi, address);\n      return {name, contract};\n    } catch (error) {\n      this.customLogError(\"Could not create contract.\",name,address,error);\n    }\n    return null;\n  }\n  getWalletProvider = (defaultProvider=null) => {\n    return this.getStoredItem('walletProvider',false,defaultProvider);\n  }\n  simpleIDPassUserInfo = (userInfo,simpleID) => {\n    if (!userInfo.address && this.props.account){\n      userInfo.address = this.props.account;\n    }\n    if (!userInfo.provider){\n      userInfo.provider = this.getWalletProvider();\n    }\n    if (typeof userInfo.email !== 'undefined' && !userInfo.email){\n      delete userInfo.email;\n    }\n    if (!userInfo.address){\n      return false;\n    }\n    simpleID = simpleID ? simpleID : (this.props.simpleID ? this.props.simpleID : (typeof this.props.initSimpleID === 'function' ? this.props.initSimpleID() : null));\n    if (simpleID){\n      return simpleID.passUserInfo(userInfo);\n    }\n    return false;\n  }\n  getEtherscanTransactionUrl = (tx_address) => {\n    return tx_address ? 'https://etherscan.io/tx/'+tx_address : null;\n  }\n  getEtherscanAddressUrl = (address) => {\n    return address ? 'https://etherscan.io/address/'+address : null;\n  }\n  formatMoney = (amount, decimalCount = 2, decimal = \".\", thousands = \",\") => {\n    try {\n      decimalCount = Math.abs(decimalCount);\n      decimalCount = isNaN(decimalCount) ? 2 : decimalCount;\n\n      const negativeSign = amount < 0 ? \"-\" : \"\";\n\n      let i = parseInt(amount = Math.abs(Number(amount) || 0).toFixed(decimalCount)).toString();\n      let j = (i.length > 3) ? i.length % 3 : 0;\n\n      return negativeSign + (j ? i.substr(0, j) + thousands : '') + i.substr(j).replace(/(\\d{3})(?=\\d)/g, \"$1\" + thousands) + (decimalCount ? decimal + Math.abs(amount - i).toFixed(decimalCount).slice(2) : \"\");\n    } catch (e) {\n      return null;\n    }\n  }\n  getSnapshotProposals = async (activeOnly=false) => {\n\n    const cachedDataKey = `snapshotProposals_${activeOnly}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const whitelist = this.getGlobalConfig(['network','providers','snapshot','whitelist']).map( addr => addr.toLowerCase() );\n    const endpoint = this.getGlobalConfig(['network','providers','snapshot','endpoints','proposals']);\n    let proposals = await this.makeCachedRequest(endpoint,1440,true);\n\n    if (proposals){\n      proposals = Object.values(proposals);\n\n      const currTime = parseInt(Date.now()/1000);\n      if (activeOnly){\n        proposals =  proposals.filter( p => (p.msg.payload.start<=currTime && p.msg.payload.end>currTime) );\n      }\n\n      // console.log(proposals);\n\n      const validProposals = [];\n      await this.asyncForEach(proposals, async (p) => {\n        // Add proposal if ended\n        if (p.msg.payload.end<=currTime || whitelist.includes(p.address.toLowerCase())){\n          validProposals.push(p);\n        } else {\n          const blockNumber = p.msg.payload.snapshot;\n\n          let checkedStrategies = false;\n          await this.asyncForEach( p.msg.payload.metadata.strategies, async (s) => {\n            if (checkedStrategies){\n              return;\n            }\n            if (s.name==='erc20-balance-of'){\n              const tokenName = s.params.symbol;\n              const tokenContract = this.getContractByName(tokenName);\n              if (tokenContract){\n                const tokenBalance = await this.getTokenBalance(tokenName,p.address,true,blockNumber);\n                // console.log(p.relayerIpfsHash,s.name,tokenBalance ? tokenBalance.toFixed() : null);\n                if (tokenBalance && this.BNify(tokenBalance).gt(100)){\n                  checkedStrategies = true;\n                }\n              }\n            } else {\n              // checkedStrategies = true;\n            }\n\n            // console.log(p.relayerIpfsHash,s.name,checkedStrategies);\n          });\n\n          // Add proposal is passed token balances check\n          if (checkedStrategies){\n            validProposals.push(p);\n          }\n        }\n      });\n\n      return this.setCachedData(cachedDataKey,validProposals);\n    }\n\n  }\n  getTokenApiData = async (address,isRisk=null,startTimestamp=null,endTimestamp=null,forceStartTimestamp=false,frequency=null,order=null,limit=null) => {\n    if (globalConfigs.network.requiredNetwork!==1 || !globalConfigs.stats.enabled){\n      return [];\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenApiData_${address}_${isRisk}_${frequency}_${order}_${limit}`;\n    let cachedData = this.getCachedData(cachedDataKey);\n\n    if (cachedData){\n      // Check for fittable start and end time\n      const filteredCachedData = cachedData.filter( c => ( (c.startTimestamp===null || (startTimestamp && c.startTimestamp<=startTimestamp)) && (c.endTimestamp===null || (endTimestamp && c.endTimestamp>=endTimestamp)) ) )\n\n      if (filteredCachedData && filteredCachedData.length>0){\n        const filteredData = filteredCachedData.pop().data;\n        if (filteredData){\n          return filteredData.filter( d => ((!startTimestamp || d.timestamp>=startTimestamp) && (!endTimestamp || d.timestamp<=endTimestamp)) );\n        }\n        return null;\n      }\n    // Initialize cachedData\n    } else {\n      cachedData = [];\n    }\n\n    const apiInfo = globalConfigs.stats.rates;\n    let endpoint = `${apiInfo.endpoint}${address}`;\n\n    if (startTimestamp || endTimestamp || isRisk !== null || frequency !== null){\n      const params = [];\n\n      if (startTimestamp && parseInt(startTimestamp)){\n        if (forceStartTimestamp){\n          params.push(`start=${startTimestamp}`);\n        } else {\n          const start = startTimestamp-(60*60*24*2); // Minus 1 day for Volume graph\n          params.push(`start=${start}`);\n        }\n      }\n\n      if (endTimestamp && parseInt(endTimestamp)){\n        params.push(`end=${endTimestamp}`);\n      }\n\n      if (isRisk !== null){\n        params.push(`isRisk=${isRisk}`);\n      }\n\n      if (frequency !== null && parseInt(frequency)){\n        params.push(`frequency=${frequency}`);\n      }\n\n      if (order !== null){\n        params.push(`order=${order}`);\n      }\n\n      if (limit !== null && parseInt(limit)){\n        params.push(`limit=${limit}`);\n      }\n\n      if (params.length){\n        endpoint += '?'+params.join('&');\n      }\n    }\n\n    const config = this.getGlobalConfig(['stats','config']);\n    let output = await this.makeRequest(endpoint,false,config);\n    if (!output){\n      return [];\n    }\n\n    const data = output.data;\n\n    let filteredData = null;\n    if (isRisk !== null){\n      filteredData = data.filter( d => ( d.isRisk === isRisk ) );\n    }\n\n    cachedData.push({\n      isRisk,\n      endTimestamp,\n      startTimestamp,\n      data:filteredData,\n    });\n\n    this.setCachedData(cachedDataKey,cachedData);\n\n    return data;\n  }\n  getTokenDecimals = async (contractName) => {\n    contractName = contractName ? contractName : this.props.selectedToken;\n    return await this.genericContractCall(contractName,'decimals');\n  }\n  getAvgApr = (aprs,allocations,totalAllocation) => {\n    if (aprs && allocations && totalAllocation){\n      let avgApr = Object.keys(aprs).reduce((aprWeighted,protocolAddr) => {\n        const allocation = this.BNify(allocations[protocolAddr]);\n        const apr = this.BNify(aprs[protocolAddr]);\n        return this.BNify(aprWeighted).plus(allocation.times(apr));\n      },0);\n\n      if (avgApr){\n        return this.BNify(avgApr).div(totalAllocation);\n      }\n    }\n    return null;\n  }\n  getFrequencySeconds = (frequency,quantity=1) => {\n    const frequency_seconds = {\n      hour:3600,\n      day:86400,\n      week:604800\n    };\n    return frequency_seconds[frequency]*quantity;\n  }\n  getProtocolInfoByAddress = (addr) => {\n    return this.props.tokenConfig.protocols.find(c => c.address.toLowerCase() === addr.toLowerCase());\n  }\n  integerValue = value => {\n    return this.BNify(value).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  normalizeTokenDecimals = tokenDecimals => {\n    return this.BNify(`1e${tokenDecimals}`);\n  }\n  normalizeTokenAmount = (tokenBalance,tokenDecimals,round=true) => {\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    return this.BNify(tokenBalance).times(normalizedTokenDecimals).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  fixTokenDecimals = (tokenBalance,tokenDecimals,exchangeRate=null) => {\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    let balance = this.BNify(tokenBalance).div(normalizedTokenDecimals);\n    if (exchangeRate && !exchangeRate.isNaN()){\n      balance = balance.times(exchangeRate);\n    }\n    return balance;\n  }\n  checkContractPaused = async (contractName=null) => {\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const contractPaused = await this.genericContractCall(contractName, 'paused', [], {}).catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n    // this.customLog('checkContractPaused',this.props.tokenConfig.idle.token,contractPaused);\n    return contractPaused;\n  }\n  getStoredItem = (key,parse_json=true,return_default=null) => {\n    let output = return_default;\n    if (window.localStorage){\n      const item = localStorage.getItem(key);\n      if (item){\n        output = item;\n        if (parse_json){\n          output = JSON.parse(item);\n        }\n      }\n    }\n    if (!output){\n      return return_default;\n    }\n    return output;\n  }\n  clearStoredData = (excludeKeys=[]) => {\n    if (window.localStorage){\n\n      if (!excludeKeys || !excludeKeys.length){\n        return window.localStorage.clear();\n      }\n\n      const storedKeysToRemove = [];\n      for (let i=0;i<window.localStorage.length;i++){\n        const storedKey = window.localStorage.key(i);\n        if (!excludeKeys.includes(storedKey)){\n          storedKeysToRemove.push(storedKey);\n        }\n      }\n      storedKeysToRemove.forEach((storedKey) => {\n        this.removeStoredItem(storedKey)\n      });\n    }\n  }\n  removeStoredItem = (key) => {\n    if (window.localStorage){\n      window.localStorage.removeItem(key);\n      return true;\n    }\n    return false;\n  }\n  setLocalStorage = (key,value,stringify=false) => {\n    if (window.localStorage){\n      try {\n        value = stringify ? JSON.stringify(value) : value;\n        window.localStorage.setItem(key,value);\n        return true;\n      } catch (error) {\n        // this.customLog('setLocalStorage',error);\n        window.localStorage.removeItem(key);\n      }\n    }\n    return false;\n  }\n  checkRebalance = async (tokenConfig) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!tokenConfig){\n      return false;\n    }\n\n    const lastAllocationsPromises = [];\n    const allocations = await this.genericContractCall(tokenConfig.idle.token, 'getAllocations');\n\n    if (!allocations || !allocations.length){\n      return false;\n    }\n\n    for (let protocolIndex=0;protocolIndex<allocations.length;protocolIndex++){\n      const lastAllocationsPromise = new Promise( async (resolve, reject) => {\n        try{\n          const lastAllocations = await this.genericContractCall(tokenConfig.idle.token, 'lastAllocations',[protocolIndex]);\n          resolve(lastAllocations);\n        } catch (error){\n          console.log(error);\n          resolve(null);\n        }\n      });\n      lastAllocationsPromises.push(lastAllocationsPromise);\n    }\n\n    const newAllocations = await Promise.all(lastAllocationsPromises);\n\n    if (!allocations || !newAllocations){\n      return true;\n    }\n\n    const diff = allocations.filter( (alloc,index) => alloc !== newAllocations[index] );\n\n    return diff.length>0;\n  }\n  checkMigration = async (tokenConfig,account) => {\n\n    if (!tokenConfig || !account){\n      return false;\n    }\n\n    let migrationEnabled = false;\n    let oldContractBalance = null;\n    let oldContractTokenDecimals = null;\n    // let migrationContractApproved = false;\n    let oldContractBalanceFormatted = null;\n\n    // Check migration contract enabled and balance\n    if (tokenConfig.migration && tokenConfig.migration.enabled){\n      const oldContractName = tokenConfig.migration.oldContract.name;\n      const oldContract = this.getContractByName(oldContractName);\n      const migrationContract = this.getContractByName(tokenConfig.migration.migrationContract.name);\n\n      // this.customLog(oldContractName,tokenConfig.migration.migrationContract.name);\n\n      if (oldContract && migrationContract){\n        // Get old contract token decimals\n        oldContractTokenDecimals = await this.getTokenDecimals(oldContractName);\n\n        // this.customLog('Migration - token decimals',oldContractTokenDecimals ? oldContractTokenDecimals.toString() : null);\n\n        // Check migration contract approval\n        // migrationContractApproved = await this.checkMigrationContractApproved();\n\n        // this.customLog('Migration - approved',migrationContractApproved ? migrationContractApproved.toString() : null);\n\n        // Check old contractBalance\n        oldContractBalance = await this.getContractBalance(oldContractName,account);\n\n        if (oldContractBalance){\n          oldContractBalanceFormatted = this.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.BNify(oldContractBalance).gt(0);\n        }\n\n        // this.customLog('Migration - oldContractBalance',oldContractName,account,oldContractBalance,oldContractBalanceFormatted);\n      }\n    }\n\n    // Set migration contract balance\n    return {\n      migrationEnabled,\n      oldContractBalance,\n      oldContractTokenDecimals,\n      oldContractBalanceFormatted,\n    };\n  }\n\n  executeMetaTransaction = async (contract, userAddress, signedParameters, callback, callback_receipt) => {\n    try {\n\n      // const gasLimit = await contract.methods\n      //   .executeMetaTransaction(userAddress, ...signedParameters)\n      //   .estimateGas({ from: userAddress });\n\n      // this.customLog(gasLimit);\n\n      const gasPrice = await this.props.web3.eth.getGasPrice();\n\n      const tx = contract.methods\n        .executeMetaTransaction(userAddress, ...signedParameters)\n        .send({\n          from: userAddress,\n          gasPrice\n          // gasLimit\n        });\n\n      tx.on(\"transactionHash\", function(hash) {\n        this.customLog(`Transaction sent by relayer with hash ${hash}`);\n        callback_receipt()\n      }).once(\"confirmation\", function(confirmationNumber, receipt) {\n        this.customLog(\"Transaction confirmed on chain\",receipt);\n        callback_receipt(receipt);\n      });\n    } catch (error) {\n      this.customLog(error);\n      callback(null,error);\n    }\n  }\n\n  getSignatureParameters_v4 = signature => {\n    if (!this.props.web3.utils.isHexStrict(signature)) {\n      throw new Error(\n        'Given value \"'.concat(signature, '\" is not a valid hex string.')\n      );\n    }\n    var r = signature.slice(0, 66);\n    var s = \"0x\".concat(signature.slice(66, 130));\n    var v = \"0x\".concat(signature.slice(130, 132));\n    v = this.props.web3.utils.hexToNumber(v);\n    if (![27, 28].includes(v)) v += 27;\n    return {\n      r: r,\n      s: s,\n      v: v\n    };\n  };\n\n  constructMetaTransactionMessage = (nonce, chainId, functionSignature, contractAddress) => {\n    return ethereumjsABI.soliditySHA3(\n      [\"uint256\",\"address\",\"uint256\",\"bytes\"],\n      [nonce, contractAddress, chainId, toBuffer(functionSignature)]\n    );\n  }\n\n  checkBiconomyLimits = async (userAddress) => {\n    const biconomyInfo = this.getGlobalConfig(['network','providers','biconomy']);\n    const res = await this.makeRequest(`${biconomyInfo.endpoints.limits}?userAddress=${userAddress}&apiId=${biconomyInfo.params.apiId}`,null,{\n      headers:{\n        'x-api-key':biconomyInfo.params.apiKey\n      }\n    });\n\n    if (res && res.data){\n      return res.data;\n    }\n\n    return null;\n  }\n\n  sendTxWithPermit = async (contractName,methodName,methodParams,nonce,callback,callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    if (!contract.methods[methodName]){\n      callback(null,'Method not found');\n      return false;\n    }\n\n    const functionSignature = contract.methods[methodName](...methodParams).encodeABI();\n\n    try{\n      const userAddress = this.props.account;\n      const chainId = this.getGlobalConfig(['network','requiredNetwork']);\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, methodName, methodParams.concat([nonce, r, s, v]), callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      console.error(error);\n      callback(null,error);\n      return false;\n    }\n  }\n\n  sendBiconomyTxWithPersonalSign = async (contractName,functionSignature,callback,callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    try{\n\n      const userAddress = this.props.account;\n      const nonce = await contract.methods.getNonce(userAddress).call();\n      const chainId = this.getGlobalConfig(['network','requiredNetwork']);\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      console.error(error);\n      callback(null,error);\n      return false;\n    }\n  }\n\n  signPermitEIP2612 = async (contractAddress, erc20Name, owner, spender, value, nonce, deadline, chainId) => {\n    if (chainId === undefined) {\n      const result = await this.props.web3.eth.getChainId();\n      chainId = parseInt(result);\n    }\n\n    const domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permit = [\n      { name: \"owner\", type: \"address\" },\n      { name: \"spender\", type: \"address\" },\n      { name: \"value\", type: \"uint256\" },\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"deadline\", type: \"uint256\" },\n    ];\n\n    const domainData = {\n      version: \"2\",\n      name: erc20Name,\n      chainId: chainId,\n      verifyingContract: contractAddress\n    };\n\n    const message = {\n      owner,\n      spender,\n      value,\n      nonce,\n      deadline,\n    };\n\n    const data = JSON.stringify({\n      types: {\n        EIP712Domain: domain,\n        Permit: permit,\n      },\n      primaryType: \"Permit\",\n      domain: domainData,\n      message: message\n    });\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        jsonrpc: '2.0',\n        id: Date.now().toString().substring(9),\n        method: \"eth_signTypedData_v4\",\n        params: [owner, data],\n        from: owner\n      }, (error, res) => {\n        if (error) {\n          return reject(error);\n        }\n\n        resolve(res.result);\n      });\n    });\n  }\n\n  signPermit = async (baseContractName, holder, spenderContractName, methodName, methodParams, nonce, expiry, callback, callback_receipt, callback_permit=null) => {\n\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract){\n      callback(null,'Contract not found');\n      return false\n    }\n\n    const result = await this.props.web3.eth.net.getId();\n    let chainId = parseInt(result);\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permitConfig = this.getGlobalConfig(['permit',baseContractName]);\n\n    const Permit = permitConfig.type;\n    const EIPVersion = permitConfig.EIPVersion;\n\n    const spender = spenderContract._address;\n    const verifyingContract = baseContract._address;\n\n    const permitName = permitConfig.name || baseContractName;\n\n    const domain = {\n      chainId,\n      name: permitName,\n      verifyingContract,\n      version: permitConfig.version.toString() || '1',\n    };\n\n    let message = {};\n\n    switch (EIPVersion){\n      case 2612:\n        const owner = holder;\n        const deadline = expiry;\n        // Unlimited allowance\n        const value = this.integerValue(this.BNify(2).pow(256).minus(1));\n        message = {\n          value,\n          nonce,\n          owner,\n          spender,\n          deadline\n        };\n      break;\n      default:\n        message = {\n          holder,\n          nonce,\n          expiry,\n          spender,\n          allowed: true,\n        };\n      break;\n    }\n\n    const data = JSON.stringify({\n      domain,\n      message,\n      types: {\n        Permit,\n        EIP712Domain\n      },\n      primaryType: 'Permit',\n    });\n\n    this.props.web3.currentProvider.send({\n      from: holder,\n      jsonrpc: '2.0',\n      params: [holder, data],\n      method: 'eth_signTypedData_v4',\n      id: Date.now().toString().substring(9),\n    }, (error, response) => {\n      if (error || (response && response.error)) {\n        return callback(null,error);\n      } else if (response && response.result) {\n        if (typeof callback_permit === 'function'){\n          callback_permit();\n        }\n        const signedParameters = this.getSignatureParameters_v4(response.result);\n        const { r, s, v } = signedParameters;\n        const permitParams = [expiry, v, r, s];\n\n        const methodAbi = spenderContract._jsonInterface.find( f => f.name === methodName );\n        const useNonce = methodAbi ? methodAbi.inputs.find( i => i.name === 'nonce' ) : true;\n        if (!isNaN(parseInt(nonce)) && useNonce){\n          permitParams.unshift(nonce);\n        }\n        const params = methodParams.concat(permitParams);\n        this.contractMethodSendWrapper(spenderContractName, methodName, params, callback, callback_receipt);\n      }\n    });\n  }\n\n  sendSignedTx = async (contractName,contractAddress,functionSignature,callback,callback_receipt) => {\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const MetaTransaction = [\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"from\", type: \"address\" },\n      { name: \"functionSignature\", type: \"bytes\" }\n    ];\n\n    const chainId = await this.props.web3.eth.getChainId();\n\n    const domainData = {\n      chainId,\n      version: '1',\n      name: contractName,\n      verifyingContract: contractAddress\n    };\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false\n    }\n\n    let userAddress = this.props.account;\n    let nonce = await contract.methods.getNonce(userAddress).call();\n    let message = {};\n    message.nonce = nonce;\n    message.from = userAddress;\n    message.functionSignature = functionSignature;\n\n    const dataToSign = JSON.stringify({\n      types: {\n        EIP712Domain,\n        MetaTransaction\n      },\n      domain: domainData,\n      primaryType: \"MetaTransaction\",\n      message\n    });\n\n    // this.customLog('dataToSign',dataToSign);\n\n    this.props.web3.currentProvider.send(\n      {\n        jsonrpc: \"2.0\",\n        id: 999999999999,\n        from: userAddress,\n        method: \"eth_signTypedData_v4\",\n        params: [userAddress, dataToSign]\n      },\n      (error, response) => {\n        if (error || (response && response.error)) {\n          return callback(null,error);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          const { r, s, v } = signedParameters;\n            \n          this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n        }\n      }\n    );\n  }\n\n  checkTokenApproved = async (contractName,contractAddr,walletAddr) => {\n    const [\n      balance,\n      allowance\n    ] = await Promise.all([\n      this.getTokenBalance(contractName,walletAddr,false),\n      this.getAllowance(contractName,contractAddr,walletAddr)\n    ]);\n    this.customLog('checkTokenApproved',contractName,this.BNify(allowance).toFixed(),this.BNify(balance).toFixed(),(allowance && this.BNify(allowance).gte(this.BNify(balance))));\n    return allowance && this.BNify(allowance).gte(this.BNify(balance));\n  }\n  getAllowance = async (contractName,contractAddr,walletAddr) => {\n    if (!contractName || !contractAddr || !walletAddr){\n      return false;\n    }\n    this.customLog('getAllowance',contractName,contractAddr,walletAddr);\n    return await this.genericContractCall(\n      contractName, 'allowance', [walletAddr, contractAddr]\n    );\n  }\n  contractMethodSendWrapper = (contractName,methodName,params,callback,callback_receipt,txData) => {\n    this.props.contractMethodSendWrapper(contractName, methodName, params, null, (tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    }, null, txData);\n  }\n  disableERC20 = (contractName,address,callback,callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('0') // max uint solidity\n    ],null,(tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    });\n  }\n  enableERC20 = (contractName,address,callback,callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('-1') // max uint solidity\n    ],null,(tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    });\n  }\n  loadAssetField = async (field,token,tokenConfig,account,addGovTokens=true,addCurveApy=false) => {\n\n    let output = null;\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    // Remove gov tokens for risk adjusted strategy\n    const strategyInfo = this.getGlobalConfig(['strategies',this.props.selectedStrategy]);\n    if (addGovTokens && strategyInfo && typeof strategyInfo.addGovTokens !== 'undefined'){\n      addGovTokens = strategyInfo.addGovTokens;\n    }\n\n    // Take available tokens for gov tokens fields\n    let govTokenAvailableTokens = null;\n    if (this.props.selectedStrategy && this.props.selectedToken){\n      const newTokenConfig = this.props.availableStrategies[this.props.selectedStrategy][this.props.selectedToken];\n      if (newTokenConfig){\n        govTokenAvailableTokens = {};\n        govTokenAvailableTokens[newTokenConfig.token] = newTokenConfig;\n      }\n    } else if (!Object.keys(govTokens).includes(token)){\n      govTokenAvailableTokens = {};\n      govTokenAvailableTokens[token] = tokenConfig;\n    }\n\n    switch (field){\n      case 'amountLentCurve':\n        const [\n          curveAvgSlippage,\n          curveAvgBuyPrice,\n          curveTokenBalance,\n        ] = await Promise.all([\n          this.getCurveAvgSlippage(),\n          this.getCurveAvgBuyPrice([],account),\n          this.getCurveTokenBalance(account,true),\n        ]);\n\n        if (curveAvgBuyPrice && curveTokenBalance){\n          output = this.BNify(curveTokenBalance).times(curveAvgBuyPrice);\n          if (curveAvgSlippage){\n            output = output.minus(output.times(curveAvgSlippage));\n          }\n          // this.customLog('amountLentCurve',curveTokenBalance.toFixed(6),curveAvgBuyPrice.toFixed(6),curveAvgSlippage.toString(),output.toFixed(6));\n        }\n      break;\n      case 'earningsPercCurve':\n        let [amountLentCurve1,redeemableBalanceCurve] = await Promise.all([\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account)\n        ]);\n\n        if (amountLentCurve1 && redeemableBalanceCurve && amountLentCurve1.gt(0) && redeemableBalanceCurve.gt(0)){\n          output = redeemableBalanceCurve.div(amountLentCurve1).minus(1).times(100);\n          // this.customLog('earningsPercCurve',redeemableBalanceCurve.toFixed(6),amountLentCurve1.toFixed(6),output.toFixed(6));\n        }\n      break;\n      case 'curveApy':\n        output = await this.getCurveAPY();\n      break;\n      case 'curveAvgSlippage':\n        output = await this.getCurveAvgSlippage();\n      break;\n      case 'redeemableBalanceCurve':\n        output = await this.getCurveRedeemableIdleTokens(account);\n        // this.customLog('earningsPercCurve',output.toFixed(6));\n      break;\n      case 'redeemableBalanceCounterCurve':\n        let [\n          curveApy,\n          amountLentCurve,\n          redeemableBalanceCurveStart\n        ] = await Promise.all([\n          this.loadAssetField('curveApy',token,tokenConfig,account),\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account),\n        ]);\n\n        let redeemableBalanceCurveEnd = null;\n\n        if (redeemableBalanceCurveStart && curveApy && amountLentCurve){\n          const earningPerYear = amountLentCurve.times(curveApy.div(100));\n          redeemableBalanceCurveEnd = redeemableBalanceCurveStart.plus(earningPerYear);\n          // this.customLog('redeemableBalanceCounterCurve',amountLentCurve.toFixed(6),redeemableBalanceCurveStart.toFixed(6),redeemableBalanceCurveEnd.toFixed(6));\n        }\n\n        output = {\n          redeemableBalanceCurveEnd,\n          redeemableBalanceCurveStart\n        };\n      break;\n      case 'earningsPerc':\n        let [amountLent1,redeemableBalance1] = await Promise.all([\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false)\n        ]);\n\n        if (amountLent1 && redeemableBalance1 && amountLent1.gt(0)){\n          output = redeemableBalance1.div(amountLent1).minus(1).times(100);\n        }\n      break;\n      case 'daysFirstDeposit':\n        const depositTimestamp = await this.loadAssetField('depositTimestamp',token,tokenConfig,account);\n        if (depositTimestamp){\n          const currTimestamp = parseInt(Date.now()/1000);\n          output = (currTimestamp-depositTimestamp)/86400;\n        }\n      break;\n      case 'pool':\n        if (Object.keys(govTokens).includes(token)){\n          output = await this.getGovTokenPool(token, govTokenAvailableTokens);\n        } else {\n          output = await this.getTokenPool(tokenConfig,addGovTokens);\n        }\n      break;\n      case 'userDistributionSpeed':\n        switch (token){\n          case 'COMP':\n            output = await this.getCompUserDistribution(account,govTokenAvailableTokens);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getUserDistribution(account,govTokenAvailableTokens);\n          break;\n          default:\n          break;\n        }\n        if (output && !this.BNify(output).isNaN()){\n          output = this.BNify(output).div(1e18);\n          if (output){\n            output = this.fixDistributionSpeed(output,tokenConfig.distributionFrequency);\n          }\n        }\n      break;\n      case 'idleDistribution':\n        const idleGovToken = this.getIdleGovToken();\n        const tokenName = this.getGlobalConfig(['governance','props','tokenName']);\n        const govTokenConfig = this.getGlobalConfig(['govTokens',tokenName]);\n        output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n\n        if (output){\n\n          output = this.fixTokenDecimals(output,govTokenConfig.decimals);\n\n          const blocksPerYear = this.BNify(this.getGlobalConfig(['network','blocksPerYear']));\n          switch (govTokenConfig.distributionFrequency){\n            case 'day':\n              const blocksPerDay = blocksPerYear.div(365.242199);\n              output = output.times(blocksPerDay);\n            break;\n            case 'week':\n              const blocksPerWeek = blocksPerYear.div(52.1429);\n              output = output.times(blocksPerWeek);\n            break;\n            case 'month':\n              const blocksPerMonth = blocksPerYear.div(12);\n              output = output.times(blocksPerMonth);\n            break;\n            case 'year':\n              output = output.times(blocksPerYear);\n            break;\n            default:\n            break;\n          }\n        }\n      break;\n      case 'distributionSpeed':\n        const selectedTokenConfig = govTokenAvailableTokens[this.props.selectedToken];\n        switch (token){\n          case 'COMP':\n            output = await this.getCompDistribution(selectedTokenConfig);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getSpeed(selectedTokenConfig.idle.address);\n          break;\n          default:\n          break;\n        }\n        if (output && !this.BNify(output).isNaN()){\n          output = this.BNify(output).div(1e18);\n        }\n      break;\n      case 'apr':\n        switch (token){\n          case 'COMP':\n            output = await this.getCompAvgApr(govTokenAvailableTokens);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getAvgApr(govTokenAvailableTokens);\n          break;\n          default:\n            const tokenAprs = await this.getTokenAprs(tokenConfig,false,addGovTokens);\n            if (tokenAprs && tokenAprs.avgApr !== null){\n              output = tokenAprs.avgApr;\n            }\n          break;\n        }\n      break;\n      case 'apy':\n        const tokenApys = await this.getTokenAprs(tokenConfig,false,addGovTokens);\n\n        // console.log('apr',token,tokenApys.avgApr ? tokenApys.avgApr.toString() : null,tokenApys.avgApy ? tokenApys.avgApy.toString() : null);\n\n        if (tokenApys && tokenApys.avgApy !== null){\n          output = tokenApys.avgApy;\n\n          if (addCurveApy){\n            const curveAPY = await this.getCurveAPY();\n            if (curveAPY){\n              output = output.plus(curveAPY);\n            }\n          }\n        }\n      break;\n      case 'avgAPY':\n        const [\n          tokenPrice,\n          firstDepositTx,\n          days\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getFirstDepositTx([token],account),\n          this.loadAssetField('daysFirstDeposit',token,tokenConfig,account)\n        ]);\n\n        if (tokenPrice && firstDepositTx && firstDepositTx[token]){\n          const tokenPriceFirstDeposit = await this.getIdleTokenPrice(tokenConfig,firstDepositTx[token].blockNumber);\n          output = this.BNify(tokenPrice).div(tokenPriceFirstDeposit).minus(1).times(365).div(days).times(100);\n        }\n      break;\n      case 'avgAPY_old':\n        const [\n          daysFirstDeposit,\n          earningsPerc\n        ] = await Promise.all([\n          this.loadAssetField('daysFirstDeposit',token,tokenConfig,account),\n          this.loadAssetField('earningsPerc',token,tokenConfig,account), // Take earnings perc instead of earnings\n        ]);\n\n        if (daysFirstDeposit && earningsPerc){\n          output = earningsPerc.times(365).div(daysFirstDeposit);\n        }\n      break;\n      case 'depositTimestamp':\n        const depositTimestamps = account ? await this.getDepositTimestamp([token],account) : false;\n        if (depositTimestamps && depositTimestamps[token]){\n          output = depositTimestamps[token];\n        }\n      break;\n      case 'amountLent':\n        output = account ? await this.getAmountDeposited(tokenConfig,account) : false;\n        // const amountLents = account ? await this.getAmountLent([token],account) : false;\n        // if (amountLents && amountLents[token]){\n        //   output = amountLents[token];\n        // }\n      break;\n      case 'tokenPrice':\n        if (Object.keys(govTokens).includes(token)){\n          const govTokenConfig = govTokens[token];\n          const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n          try {\n            output = await this.getUniswapConversionRate(DAITokenConfig,govTokenConfig);\n          } catch (error) {\n\n          }\n          if (!output || this.BNify(output).isNaN()){\n            output = '-';\n          }\n        } else {\n          output = await this.genericContractCall(tokenConfig.idle.token, 'tokenPrice');\n        }\n      break;\n      case 'fee':\n        output = await this.getUserTokenFees(tokenConfig,account);\n      break;\n      case 'tokenBalance':\n        if (Object.keys(govTokens).includes(token)){\n          output = await this.getTokenBalance(token,account);\n          if (!output || output.isNaN()){\n            output = '-';\n          }\n        } else {\n          let tokenBalance = account ? await this.getTokenBalance(tokenConfig.token,account) : false;\n          if (!tokenBalance || tokenBalance.isNaN()){\n            tokenBalance = '-';\n          }\n          output = tokenBalance;\n        }\n      break;\n      case 'idleTokenBalance':\n        const idleTokenBalance = account ? await this.getTokenBalance(tokenConfig.idle.token,account) : false;\n        if (idleTokenBalance){\n          output = idleTokenBalance;\n        }\n      break;\n      case 'redeemableBalanceCounter':\n        let [tokenAPY1,amountLent2,redeemableBalanceStart] = await Promise.all([\n          this.loadAssetField('apy',token,tokenConfig,account,false),\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false),\n        ]);\n\n        let redeemableBalanceEnd = null;\n\n        if (redeemableBalanceStart && tokenAPY1 && amountLent2){\n          const earningPerYear = amountLent2.times(tokenAPY1.div(100));\n          redeemableBalanceEnd = redeemableBalanceStart.plus(earningPerYear);\n        }\n\n        // this.customLog('redeemableBalanceCounter',token,parseFloat(redeemableBalanceStart),parseFloat(redeemableBalanceEnd));\n\n        output = {\n          redeemableBalanceEnd,\n          redeemableBalanceStart\n        };\n      break;\n      case 'redeemableBalance':\n        if (Object.keys(govTokens).includes(token)){\n          const govTokenConfig = govTokens[token];\n          output = await this.getGovTokenUserBalance(govTokenConfig,account,govTokenAvailableTokens);\n        } else {\n          let [\n            idleTokenPrice1,\n            idleTokenBalance2,\n            govTokensBalance\n          ] = await Promise.all([\n            this.getIdleTokenPrice(tokenConfig),\n            this.loadAssetField('idleTokenBalance',token,tokenConfig,account),\n            addGovTokens ? this.getGovTokensUserTotalBalance(account,govTokenAvailableTokens,token) : null,\n          ]);\n\n          if (idleTokenBalance2 && idleTokenPrice1){\n            const tokenBalance = idleTokenBalance2.times(idleTokenPrice1);\n            let redeemableBalance = tokenBalance;\n            if (govTokensBalance && !this.BNify(govTokensBalance).isNaN()){\n              redeemableBalance = redeemableBalance.plus(this.BNify(govTokensBalance));\n            }\n            output = redeemableBalance;\n            // console.log('redeemableBalance',token,idleTokenBalance2.toFixed(4),idleTokenPrice1.toFixed(4),tokenBalance.toFixed(4),govTokensBalance ? govTokensBalance.toFixed(4) : null,output.toFixed(4));\n          }\n        }\n      break;\n      case 'earningsCurve':\n        let [amountLentCurve2,redeemableBalanceCurve1] = await Promise.all([\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account)\n        ]);\n\n        if (!amountLentCurve2){\n          amountLentCurve2 = this.BNify(0);\n        }\n\n        if (!redeemableBalanceCurve1){\n          redeemableBalanceCurve1 = this.BNify(0);\n        }\n\n        output = redeemableBalanceCurve1.minus(amountLentCurve2);\n      break;\n      case 'earnings':\n        let [amountLent,redeemableBalance2] = await Promise.all([\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false)\n        ]);\n\n        if (!amountLent){\n          amountLent = this.BNify(0);\n        }\n        if (!redeemableBalance2){\n          redeemableBalance2 = this.BNify(0);\n        }\n\n        output = redeemableBalance2.minus(amountLent);\n\n        // console.log('earnings',token,amountLent.toFixed(5),redeemableBalance2.toFixed(5),output.toFixed(5));\n\n        if (output.lt(this.BNify(0))){\n          output = this.BNify(0);\n        }\n      break;\n      default:\n      break;\n    }\n\n    return output;\n  }\n  getIdleTokenSupply = async (idleToken,blockNumber='latest') => {\n    const cachedDataKey = `idleTokenSupply_${idleToken}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let idleTokenSupply = await this.genericContractCall(idleToken,'totalSupply',[],{},blockNumber);\n    if (idleTokenSupply){\n      idleTokenSupply = this.BNify(idleTokenSupply);\n      return this.setCachedDataWithLocalStorage(cachedDataKey,idleTokenSupply);\n    }\n\n    return null;\n  }\n  getIdleTokenPriceWithFee = async (tokenConfig,account,blockNumber='latest') => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n\n    let [\n      fee,\n      tokenPrice,\n      userAvgPrice\n    ] = await Promise.all([\n      this.genericContractCall(tokenConfig.idle.token, 'fee', [], {}, blockNumber),\n      this.genericContractCall(tokenConfig.idle.token, 'tokenPrice', [], {}, blockNumber),\n      this.genericContractCall(tokenConfig.idle.token, 'userAvgPrices', [account], {}, blockNumber)\n    ]);\n    \n    fee = this.BNify(fee);\n    tokenPrice = this.BNify(tokenPrice);\n    userAvgPrice = this.BNify(userAvgPrice);\n\n    if (!tokenPrice.isNaN() && !userAvgPrice.isNaN() && !fee.isNaN() && !this.BNify(userAvgPrice).eq(0) && this.BNify(tokenPrice).gt(this.BNify(userAvgPrice))){\n      const priceWFee = this.integerValue(this.BNify(tokenPrice).minus(parseInt(fee.div(1e5).times(tokenPrice.minus(userAvgPrice)))));\n      return priceWFee;\n    }\n\n    return tokenPrice;\n  }\n  getIdleTokenPrice = async (tokenConfig,blockNumber='latest',timestamp=false) => {\n\n    const cachedDataKey = `idleTokenPrice_${tokenConfig.idle.token}_${blockNumber}`;\n    // if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()){\n        return this.BNify(cachedData);\n      }\n    // }\n\n    let decimals = tokenConfig.decimals;\n\n    let tokenPrice = await this.genericContractCall(tokenConfig.idle.token,'tokenPrice',[],{},blockNumber);\n\n    // If price is NaN try to take it from APIs\n    if (!tokenPrice && timestamp){\n      const isRisk = this.props.selectedStrategy === 'risk';\n      const startTimestamp = parseInt(timestamp)-(60*60);\n      const endTimestamp = parseInt(timestamp)+(60*60);\n      const tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,startTimestamp,endTimestamp,true);\n\n      let beforePrice = {\n        data:null,\n        timeDiff:null\n      };\n\n      let afterPrice = {\n        data:null,\n        timeDiff:null\n      };\n\n      tokenData.forEach( d => {\n        const timeDiff = Math.abs(parseInt(d.timestamp)-parseInt(timestamp));\n        if (parseInt(d.timestamp)<parseInt(timestamp) && (!beforePrice.timeDiff || timeDiff<beforePrice.timeDiff)){\n          beforePrice.timeDiff = timeDiff;\n          beforePrice.data = d;\n        }\n\n        if (parseInt(d.timestamp)>parseInt(timestamp) && !afterPrice.timeDiff){\n          afterPrice.timeDiff = timeDiff;\n          afterPrice.data = d;\n        }\n      });\n\n      // Take before and after and calculate correct tokenPrice based from price acceleration\n      if (beforePrice.data && afterPrice.data){\n        const tokenPriceBefore = this.BNify(beforePrice.data.idlePrice);\n        const tokenPriceAfter = this.BNify(afterPrice.data.idlePrice);\n        const timeBefore = this.BNify(beforePrice.data.timestamp);\n        const timeAfter = this.BNify(afterPrice.data.timestamp);\n        const timeDiff = timeAfter.minus(timeBefore);\n        const priceDiff = tokenPriceAfter.minus(tokenPriceBefore);\n        const priceAcceleration = priceDiff.div(timeDiff);\n        const timeDiffFromBeforePrice = this.BNify(timestamp).minus(timeBefore);\n        tokenPrice = tokenPriceBefore.plus(priceAcceleration.times(timeDiffFromBeforePrice));\n      }\n    }\n\n    // Fix token price decimals\n    if (tokenPrice && !this.BNify(tokenPrice).isNaN()){\n      tokenPrice = this.fixTokenDecimals(tokenPrice,decimals);\n    }\n\n    // If price is NaN then return 1\n    if (!tokenPrice || this.BNify(tokenPrice).isNaN() || this.BNify(tokenPrice).lt(1)){\n      tokenPrice = this.BNify(1);\n    }\n\n    // if (blockNumber !== 'latest'){\n      this.setCachedDataWithLocalStorage(cachedDataKey,tokenPrice);\n    // }\n\n    // this.customLog('getIdleTokenPrice',tokenPrice.toString());\n\n    return tokenPrice;\n  }\n  clearCachedData = () => {\n    if (this.props.clearCachedData && typeof this.props.clearCachedData === 'function'){\n      // this.customLog('clearCachedData',this.props.clearCachedData,typeof this.props.clearCachedData === 'function');\n      this.props.clearCachedData();\n    } else {\n      // this.customLog('clearCachedData - Function not found!');\n    }\n    return false;\n  }\n  /*\n  Cache data locally for 5 minutes\n  */\n  setCachedData = (key,data,TTL=180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function'){\n      this.props.setCachedData(key,data,TTL);\n    }\n    return data;\n  }\n  setCachedDataWithLocalStorage = (key,data,TTL=180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function'){\n      this.props.setCachedData(key,data,TTL,true);\n    }\n    return data;\n  }\n  getCachedDataWithLocalStorage = (key,defaultValue=null) => {\n    return this.getCachedData(key,defaultValue,true);\n  }\n  getCachedData = (key,defaultValue=null,useLocalStorage=false) => {\n    let cachedData = null;\n    key = key.toLowerCase();\n    // Get cache from current session\n    if (this.props.cachedData && this.props.cachedData[key]){\n      cachedData = this.props.cachedData[key];\n    // Get cache from local storage\n    } else if (useLocalStorage) {\n      cachedData = this.getStoredItem('cachedData');\n      if (cachedData && cachedData[key]){\n        cachedData = cachedData[key];\n      } else {\n        cachedData = null;\n      }\n    }\n\n    if (cachedData && cachedData.data && (!cachedData.expirationDate || cachedData.expirationDate>=parseInt(Date.now()/1000))){\n      return cachedData.data;\n    }\n    return defaultValue;\n  }\n  getUserPoolShare = async (walletAddr,tokenConfig) => {\n    const [\n      idleTokensBalance,\n      idleTokensTotalSupply\n    ] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token,walletAddr,false),\n      this.genericContractCall(tokenConfig.idle.token,'totalSupply')\n    ]);\n\n    let userShare = this.BNify(0);\n    if (idleTokensBalance && idleTokensTotalSupply){\n      userShare = this.BNify(idleTokensBalance).div(this.BNify(idleTokensTotalSupply));\n    }\n\n    return userShare;\n  }\n  openWindow = (url) => {\n    return window.open(url,'_blank','noopener');\n  }\n  getActiveCoverages = async (account=null) => {\n    const activeCoverages = [];\n    account = account || this.props.account;\n\n    if (!account){\n      return activeCoverages;\n    }\n\n    const currTimestamp = parseInt(Date.now()/1000);\n    const coverProtocolConfig = this.getGlobalConfig(['tools','coverProtocol']);\n    if (coverProtocolConfig.enabled){\n      await this.asyncForEach(coverProtocolConfig.props.coverages, async (coverage) => {\n        const token = 'Claim';\n        const coverageTokens = coverage.tokens;\n        const tokenConfig = coverageTokens[token];\n        // Initialize coverage contract\n        await this.props.initContract(tokenConfig.name,tokenConfig.address,tokenConfig.abi);\n        // Take balance\n        const balance = await this.getTokenBalance(tokenConfig.name,account);\n        if (balance && balance.gt(0)){\n          const collateral = coverage.collateral;\n          const protocolName = coverProtocolConfig.label;\n          const protocolImage = coverProtocolConfig.image;\n          const fileClaimUrl = coverProtocolConfig.fileClaimUrl;\n          const status = coverage.expirationTimestamp<=currTimestamp ? 'Expired' : 'Active';\n          const expirationDate = moment(coverage.expirationTimestamp*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n          activeCoverages.push({\n            token,\n            status,\n            balance,\n            collateral,\n            protocolName,\n            fileClaimUrl,\n            protocolImage,\n            expirationDate\n          });\n        }\n      });\n    }\n\n    return activeCoverages;\n  }\n  getBatchedDepositExecutions = async (contractAddress) => {\n    const requiredNetwork = this.getGlobalConfig(['network','requiredNetwork']);\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]){\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n      const etherscanEndpoint = `${etherscanApiUrl}?&apikey=${env.REACT_APP_ETHERSCAN_KEY}&module=account&action=tokentx&address=${contractAddress}&sort=desc`;\n      const transactions = await this.makeCachedRequest(etherscanEndpoint,1800,true);\n      if (transactions && typeof transactions.result === 'object'){\n        return transactions.result.filter( tx => tx.from === '0x0000000000000000000000000000000000000000' && tx.to.toLowerCase() === contractAddress.toLowerCase() );\n      }\n    }\n    return null;\n  }\n  getBatchedDeposits = async (account=null,filter_by_status=null) => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n\n    const batchDepositConfig = this.getGlobalConfig(['tools','batchDeposit']);\n    if (!batchDepositConfig.enabled){\n      return null;\n    }\n\n    const cachedDataKey = `batchedDeposits_${account}_${filter_by_status}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const batchedDeposits = {};\n    const availableTokens = batchDepositConfig.props.availableTokens;\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const migrationContract = tokenConfig.migrationContract;\n      await this.props.initContract(migrationContract.name,migrationContract.address,migrationContract.abi);\n      const currBatchIndex = await this.genericContractCall(migrationContract.name,'currBatch');\n      for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex) ; batchIndex++){\n        let [\n          batchExecutions,\n          batchTotal,\n          batchRedeem,\n          batchDeposit\n        ] = await Promise.all([\n          this.getBatchedDepositExecutions(migrationContract.address),\n          this.genericContractCall(migrationContract.name,'batchTotals',[batchIndex]),\n          this.genericContractCall(migrationContract.name,'batchRedeemedTotals',[batchIndex]),\n          this.genericContractCall(migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n        let batchTotals = null;\n        let batchRedeems = null;\n        let batchDeposits = null;\n        if (batchTotal && batchTotal !== null){\n          batchTotals = this.fixTokenDecimals(batchTotal,tokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchRedeem = this.fixTokenDecimals(batchRedeem,18);\n          batchDeposit = this.fixTokenDecimals(batchDeposit,tokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n            batchDeposits = batchDeposit;\n\n            // Calculate redeemable idleTokens\n            batchRedeems = batchDeposit.times(batchRedeem).div(batchTotals);\n            if (batchRedeems.gt(batchRedeem)){\n              batchRedeems = batchRedeem;\n            }\n\n            const status = batchIndex < currBatchIndex && batchRedeems.gt(0) ? 'executed' : 'pending';\n\n            if (filter_by_status !== null && filter_by_status.toLowerCase() !== status){\n              return;\n            }\n\n            const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n\n            batchedDeposits[token] = {\n              status,\n              batchTotals,\n              batchRedeems,\n              batchDeposits,\n              lastExecution\n            };\n          }\n        }\n      }\n    });\n\n    return this.setCachedData(cachedDataKey,batchedDeposits);\n  }\n  getETHBalance = async (walletAddr,fixDecimals=true,blockNumber='latest') => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `ethBalance_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()){\n        return this.BNify(cachedData);\n      }\n    }\n\n    let tokenBalance = await this.props.web3.eth.getBalance(walletAddr);\n\n    if (tokenBalance){\n      if (fixDecimals){\n        tokenBalance = this.fixTokenDecimals(tokenBalance,18);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()){\n        if (blockNumber !== 'latest'){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,tokenBalance);\n        } else {\n          return tokenBalance;\n        }\n      }\n    }\n    return null;\n  }\n  getTokenBalance = async (contractName,walletAddr,fixDecimals=true,blockNumber='latest') => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenBalance_${contractName}_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()){\n        return this.BNify(cachedData);\n      }\n    }\n\n    let [\n      tokenDecimals,\n      tokenBalance\n    ] = await Promise.all([\n      this.getTokenDecimals(contractName),\n      this.getContractBalance(contractName,walletAddr,blockNumber)\n    ]);\n\n    if (tokenBalance){\n      if (fixDecimals){\n        tokenBalance = this.fixTokenDecimals(tokenBalance,tokenDecimals);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()){\n        if (blockNumber !== 'latest'){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,tokenBalance);\n        } else {\n          return tokenBalance;\n        }\n      }\n    } else {\n      this.customLogError('Error on getting balance for ',contractName);\n    }\n    return null;\n  }\n  copyToClipboard = (copyText) => {\n    if (typeof copyText.select === 'function'){\n      copyText.select();\n      copyText.setSelectionRange(0, 99999); // Select\n      const res = document.execCommand(\"copy\");\n      copyText.setSelectionRange(0, 0); // Deselect\n      return res;\n    }\n    return false;\n  }\n  loadScript = (url,props,callback) => {\n    const script = document.createElement(\"script\");\n    script.src = url;\n\n    // Append props\n    if (props){\n      Object.keys(props).forEach((attr,i) => {\n        script[attr] = props[attr];\n      });\n    }\n\n    if (typeof callback === 'function'){\n      if (script.readyState) {  // only required for IE <9\n        script.onreadystatechange = function() {\n          if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n            script.onreadystatechange = null;\n            callback();\n          }\n        };\n      } else {  //Others\n        script.onload = callback;\n      }\n    }\n\n    if (!script.id || !document.getElementById(script.id)){\n      document.body.appendChild(script);\n    }\n  }\n  isValidJSON = str => {\n    try {\n      JSON.parse(str);\n    } catch (e) {\n      return false;\n    }\n    return true;\n  }\n  checkAddress = (address) => {\n    return address ? address.match(/^0x[a-fA-F0-9]{40}$/) !== null : false;\n  }\n  getContractBalance = async (contractName,address,blockNumber='latest') => {\n    address = address ? address : this.props.tokenConfig.idle.address;\n    return await this.genericContractCall(contractName, 'balanceOf', [address], {}, blockNumber);\n  }\n  getProtocolBalance = async (contractName,address) => {\n    address = address ? address : this.props.tokenConfig.idle.address;\n    return await this.genericContractCall(contractName, 'balanceOf', [address]);\n  }\n  getAprs = async (contractName) => {\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    return await this.genericContractCall(contractName, 'getAPRs');\n  }\n  genericIdleCall = async (methodName, params = [], callParams = {}) => {\n    return await this.genericContractCall(this.props.tokenConfig.idle.token, methodName, params, callParams).catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n  }\n  estimateGas = async (contractName, methodName, params = [], callParams = {}) => {\n    let contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.methods[methodName](...params).estimateGas(callParams);\n  }\n  getTxDecodedLogs = async (tx,logAddr,decodeLogs,storedTx) => {\n\n    let txReceipt = storedTx && storedTx.txReceipt ? storedTx.txReceipt : null;\n\n    if (!txReceipt){\n      txReceipt = await (new Promise( async (resolve, reject) => {\n        this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n          if (err){\n            reject(err);\n          }\n          resolve(tx);\n        });\n      }));\n\n    }\n\n    if (!txReceipt){\n      return null;\n    }\n\n    const internalTransfers = txReceipt.logs.filter((tx) => { return tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${logAddr}`; });\n\n    if (!internalTransfers.length){\n      return null;\n    }\n\n    try {\n      return [\n        txReceipt,\n        this.props.web3.eth.abi.decodeLog(decodeLogs,internalTransfers[0].data,internalTransfers[0].topics)\n      ];\n    } catch (error) {\n      return null;\n    }\n  }\n  blocksToSeconds = (blocks) => {\n    const blocksPerSeconds = this.BNify(this.getGlobalConfig(['network','blocksPerYear'])).div(365.2422).div(86400);\n    return this.BNify(blocks).div(blocksPerSeconds);\n  }\n  getBlockNumber = async () => {\n    return await this.props.web3.eth.getBlockNumber();\n  }\n  getContractPastEvents = async (contractName,methodName,params = {}) => {\n    if (!contractName){\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.getPastEvents(methodName, params);\n  }\n  genericContractCall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest') => {\n\n    if (!contractName){\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLog('Wrong contract name', contractName);\n      return null;\n    }\n\n    if (!contract.methods[methodName]) {\n      this.customLog('Wrong method name', methodName);\n      return null;\n    }\n\n    blockNumber = blockNumber !== 'latest' && blockNumber && !isNaN(blockNumber) ? parseInt(blockNumber) : blockNumber;\n\n    try{\n      this.customLog(`genericContractCall - ${contractName} - ${methodName}`);\n      const value = await contract.methods[methodName](...params).call(callParams,blockNumber).catch(error => {\n        this.customLog(`${contractName} contract method ${methodName} error: `, error);\n      });\n      this.customLog(`genericContractCall - ${contractName} - ${methodName} : ${value}`);\n      return value;\n    } catch (error) {\n      this.customLog(\"genericContractCall error\", error);\n    }\n  }\n  asyncForEach = async (array, callback, async=true) => {\n    if (async){\n      await Promise.all(array.map( (c,index) => {\n        return callback(c, index, array);\n      }));\n    } else {\n      for (let index = 0; index < array.length; index++) {\n        await callback(array[index], index, array);\n      }\n    }\n  }\n  apr2apy = (apr) => {\n    return (this.BNify(1).plus(this.BNify(apr).div(12))).pow(12).minus(1);\n  }\n  getUnlentBalance = async (tokenConfig) => {\n    let unlentBalance = await this.getProtocolBalance(tokenConfig.token,tokenConfig.idle.address);\n    if (unlentBalance){\n      unlentBalance = this.fixTokenDecimals(unlentBalance,tokenConfig.decimals);\n    }\n    return unlentBalance;\n  }\n  getTokenPool = async (tokenConfig,addGovTokens=true) => {\n    // Check for cached data\n    const cachedDataKey = `tokenPool_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN() ) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,addGovTokens);\n    if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent){\n      const tokenPool = tokenAllocation.totalAllocationWithUnlent;\n      if (!this.BNify(tokenPool).isNaN()){\n        return this.setCachedDataWithLocalStorage(cachedDataKey,tokenPool);\n      }\n    }\n\n    return null;\n  }\n  /*\n  Get idleToken allocation between protocols\n  */\n  getTokenAllocation = async (tokenConfig,protocolsAprs=false,addGovTokens=true) => {\n\n    if (!tokenConfig.idle){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAllocation_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    let totalAllocation = this.BNify(0);\n\n    const tokenAllocation = {\n      avgApr: null,\n      unlentBalance:null,\n      totalAllocation:null,\n      protocolsBalances:{},\n      protocolsAllocations:null,\n      protocolsAllocationsPerc:null,\n      totalAllocationConverted:null,\n      totalAllocationWithUnlent:null,\n      totalAllocationWithUnlentConverted:null,\n    };\n\n    const exchangeRates = {};\n    const protocolsBalances = {};\n    const protocolsAllocations = {};\n    const protocolsAllocationsPerc = {};\n\n    await this.asyncForEach(tokenConfig.protocols,async (protocolInfo,i) => {\n      const contractName = protocolInfo.token;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n\n      let [\n        tokenDecimals,\n        protocolBalance,\n        exchangeRate\n      ] = await Promise.all([\n        this.getTokenDecimals(contractName),\n        this.getProtocolBalance(contractName,tokenConfig.idle.address),\n        ( protocolInfo.functions.exchangeRate ? this.genericContractCall(contractName,protocolInfo.functions.exchangeRate.name,protocolInfo.functions.exchangeRate.params) : null )\n      ]);\n\n      if (!protocolBalance){\n        return;\n      }\n\n      if (exchangeRate && protocolInfo.decimals){\n        exchangeRates[protocolAddr] = exchangeRate;\n        exchangeRate = this.fixTokenDecimals(exchangeRate,protocolInfo.decimals);\n      }\n\n      let protocolAllocation = this.fixTokenDecimals(protocolBalance,tokenDecimals,exchangeRate);\n\n      if (protocolAllocation.lt(this.BNify(0.00000001))){\n        protocolBalance = this.BNify(0);\n        protocolAllocation = this.BNify(0);\n      }\n\n      protocolsBalances[protocolAddr] = protocolBalance;\n      protocolsAllocations[protocolAddr] = protocolAllocation;\n      totalAllocation = totalAllocation.plus(protocolAllocation);\n\n      // console.log('getTokenAllocation',contractName,protocolAddr,protocolAllocation.toFixed(5),exchangeRate ? exchangeRate.toFixed(5) : null,totalAllocation.toFixed(5));\n    });\n\n    tokenAllocation.unlentBalance = this.BNify(0);\n    tokenAllocation.totalAllocationWithUnlent = this.BNify(totalAllocation);\n\n    // Add unlent balance to the pool\n    let unlentBalance = await this.getUnlentBalance(tokenConfig);\n    if (unlentBalance){\n      tokenAllocation.unlentBalance = unlentBalance;\n      tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(unlentBalance);\n    }\n\n    // console.log('totalAllocationWithUnlent 1',addGovTokens,tokenAllocation.totalAllocationWithUnlent.toFixed(5));\n\n    Object.keys(protocolsAllocations).forEach((protocolAddr,i) => {\n      const protocolAllocation = protocolsAllocations[protocolAddr];\n      const protocolAllocationPerc = protocolAllocation.div(totalAllocation);\n      protocolsAllocationsPerc[protocolAddr] = protocolAllocationPerc;\n    });\n\n    tokenAllocation.totalAllocation = totalAllocation;\n    tokenAllocation.protocolsAllocations = protocolsAllocations;\n    tokenAllocation.protocolsAllocationsPerc = protocolsAllocationsPerc;\n\n    if (addGovTokens){\n      const govTokensBalances = await this.getGovTokensBalances(tokenConfig.idle.address);\n\n      // Sum gov tokens balances\n      if (govTokensBalances.total){\n        const tokenUsdConversionRate = await this.getTokenConversionRate(tokenConfig,false);\n        if (tokenUsdConversionRate){\n          govTokensBalances.total = govTokensBalances.total.div(tokenUsdConversionRate);\n        }\n\n        tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(govTokensBalances.total);\n\n        // console.log('totalAllocationWithUnlent 2',govTokensBalances.total.toFixed(5),tokenAllocation.totalAllocationWithUnlent.toFixed(5));\n      }\n    }\n\n    tokenAllocation.totalAllocationConverted = await this.convertTokenBalance(tokenAllocation.totalAllocation,tokenConfig.token,tokenConfig);\n    tokenAllocation.totalAllocationWithUnlentConverted = await this.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,tokenConfig.token,tokenConfig);\n\n    if (protocolsAprs){\n      tokenAllocation.avgApr = this.getAvgApr(protocolsAprs,protocolsAllocations,totalAllocation);\n    }\n\n    return this.setCachedData(cachedDataKey,tokenAllocation);\n  }\n  getUniswapConversionRate_path = async (path) => {\n    const one = this.normalizeTokenDecimals(18);\n    const unires = await this.genericContractCall('UniswapRouter','getAmountsIn',[one.toFixed(),path]);\n    return unires;\n  }\n  getUniswapConversionRate = async (tokenConfigFrom,tokenConfigDest) => {\n\n    // Check for cached data\n    const cachedDataKey = `uniswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = this.getGlobalConfig(['stats','tokens','WETH','address']);\n      const one = this.normalizeTokenDecimals(18);\n\n      const path = [];\n      path.push(tokenConfigFrom.address);\n      // Don't pass through weth if i'm converting weth\n      if (WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()){\n        path.push(WETHAddr);\n      }\n      path.push(tokenConfigDest.address);\n\n      const unires = await this.genericContractCall('UniswapRouter','getAmountsIn',[one.toFixed(),path]);\n\n      // console.log('getUniswapConversionRate',tokenConfigFrom,tokenConfigDest,path,unires);\n\n      if (unires){\n        const price = this.BNify(unires[0]).div(one);\n        return this.setCachedDataWithLocalStorage(cachedDataKey,price);\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  /*\n  getUniswapConversionRate_old = async (tokenConfigFrom,tokenConfigDest) => {\n    const cachedDataKey = `compUniswapConverstionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    const tokenFrom = new Token(ChainId.MAINNET, tokenConfigFrom.address, tokenConfigFrom.decimals);\n    const tokenTo = new Token(ChainId.MAINNET, tokenConfigDest.address, tokenConfigDest.decimals);\n\n    const pair = await Fetcher.fetchPairData(tokenFrom, tokenTo);\n    const route = new Route([pair], tokenTo);\n\n    let output = null;\n    if (route && route.midPrice){\n      output = this.BNify(route.midPrice.toSignificant(tokenConfigDest.decimals));\n      this.setCachedData(cachedDataKey,output);\n    }\n    return output;\n  }\n  */\n  getCurveDepositedTokens = async (account,enabledTokens=[]) => {\n    account = account ? account : this.props.account;\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    if (!account || !enabledTokens || !enabledTokens.length){\n      return [];\n    }\n\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    const idleTokensBalances = {};\n    let remainingCurveTokens = this.BNify(0);\n\n    // this.customLog('getCurveDepositedTokens',curveTxs);\n\n    curveTxs.forEach( tx => {\n\n      const idleToken = tx.idleToken;\n      const idleTokens = this.BNify(tx.idleTokens);\n\n      if (!idleTokensBalances[idleToken]){\n        idleTokensBalances[idleToken] = this.BNify(0);\n      }\n\n      switch (tx.action){\n        case 'CurveIn':\n        case 'CurveZapIn':\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].plus(idleTokens);\n        break;\n        case 'CurveOut':\n        case 'CurveZapOut':\n          if (idleTokens.gt(idleTokensBalances[idleToken])){\n            remainingCurveTokens = remainingCurveTokens.plus(idleTokens.minus(idleTokensBalances[idleToken]));\n          }\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].minus(idleTokens);\n          if (idleTokensBalances[idleToken].lt(0)){\n            idleTokensBalances[idleToken] = this.BNify(0);\n          }\n        break;\n        default:\n        break;\n      }\n\n      // this.customLog(this.strToMoment(tx.timeStamp*1000).format('DD-MM-YYYY HH:mm:ss'),tx.blockNumber,idleToken,tx.action,idleTokens.toFixed(6),idleTokensBalances[idleToken].toFixed(6),remainingCurveTokens.toFixed(6));\n\n      // Scalo il remaining tokens\n      if (remainingCurveTokens.gt(0)){\n        Object.keys(idleTokensBalances).forEach( token => {\n          const tokenBalance = idleTokensBalances[token];\n          if (tokenBalance && tokenBalance.gt(0)){\n            if (tokenBalance.gt(remainingCurveTokens)){\n              idleTokensBalances[token] = idleTokensBalances[token].minus(remainingCurveTokens);\n            } else {\n              remainingCurveTokens = remainingCurveTokens.minus(idleTokensBalances[token]);\n              idleTokensBalances[token] = 0;\n            }\n          }\n        });\n      }\n    });\n\n    // this.customLog('idleTokensBalances',idleTokensBalances);\n  }\n  getCurveUnevenTokenAmounts = async (amounts,max_burn_amount) => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract){\n      const unevenAmounts = await this.genericContractCall(curveSwapContract.name, 'remove_liquidity_imbalance', [amounts, max_burn_amount]);\n      // this.customLog('getCurveUnevenTokenAmounts',amounts,max_burn_amount,unevenAmounts);\n      return unevenAmounts;\n    }\n    return null;\n  }\n  getCurveAPY = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getCurveAPY`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const curveRatesInfo = this.getGlobalConfig(['curve','rates']);\n    if (curveRatesInfo){\n      const results = await this.makeRequest(curveRatesInfo.endpoint);\n      if (results && results.data){\n        const path = Object.values(curveRatesInfo.path);\n        let curveApy = this.getArrayPath(path,results.data);\n        if (curveApy){\n          curveApy = this.BNify(curveApy).times(100);\n          if (!this.BNify(curveApy).isNaN()){\n            return this.setCachedDataWithLocalStorage(cachedDataKey,curveApy);\n          }\n        }\n      }\n    }\n    return null;\n  }\n  getCurveAvailableTokens = () => {\n    if (!this.props.availableStrategies){\n      return false;\n    }\n    const curveTokens = this.getGlobalConfig(['curve','availableTokens']);\n    const strategyTokens = this.props.availableStrategies['best'];\n    const availableTokens = Object.keys(strategyTokens).reduce( (availableTokens,token) => {\n      const tokenConfig = strategyTokens[token];\n      if (Object.keys(curveTokens).includes(tokenConfig.idle.token) && curveTokens[tokenConfig.idle.token].enabled){\n        availableTokens[token] = tokenConfig;\n      }\n      return availableTokens;\n    },{});\n\n    return availableTokens;\n  }\n  getCurveAPYContract = async () => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract){\n      const blockNumber = await this.getBlockNumber();\n      if (blockNumber){\n        const blocksForPrevTokenPrice = 10;\n        let [tokenPrice,prevTokenPrice] = await Promise.all([\n          this.genericContractCall(curveSwapContract.name,'get_virtual_price'),\n          this.genericContractCall(curveSwapContract.name,'get_virtual_price',[],{},blockNumber-blocksForPrevTokenPrice)\n        ]);\n\n        if (tokenPrice && prevTokenPrice){\n\n          const blocksMultiplier = this.BNify(this.getGlobalConfig(['network','blocksPerYear'])).div(blocksForPrevTokenPrice);\n          const curveAPR = this.BNify(tokenPrice).div(prevTokenPrice).minus(1).times(blocksMultiplier);\n          return this.apr2apy(curveAPR).times(100);\n        }\n      }\n    }\n    return null;\n  }\n  getCurveTokenSupply = async () => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract){\n      return await this.genericContractCall(curvePoolContract.name,'totalSupply');\n    }\n    return null;\n  }\n  getCurveTokenBalance = async (account=null,fixDecimals=true) => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract){\n      account = account ? account : this.props.account;\n      return await this.getTokenBalance(curvePoolContract.name,account,fixDecimals);\n    }\n    return null;\n  }\n  getCurveTokenPrice = async (blockNumber='latest',fixDecimals=true) => {\n    const migrationContract = await this.getCurveDepositContract();\n    let curveTokenPrice = await this.genericContractCall(migrationContract.name,'get_virtual_price',[],{},blockNumber);\n    if (curveTokenPrice){\n      curveTokenPrice = this.BNify(curveTokenPrice);\n      if (fixDecimals){\n        const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n        curveTokenPrice = this.fixTokenDecimals(curveTokenPrice,curvePoolContract.decimals);\n      }\n      return curveTokenPrice;\n    }\n    return null;\n  }\n  getCurveRedeemableIdleTokens = async (account) => {\n    let [curveTokenPrice,curveTokenBalance] = await Promise.all([\n      this.getCurveTokenPrice('latest'),\n      this.getCurveTokenBalance(account),\n    ]);\n    if (curveTokenBalance && curveTokenPrice){\n      return this.BNify(curveTokenBalance).times(curveTokenPrice);\n    }\n    return null;\n  }\n  getCurveDepositContract = async () => {\n    const depositContractInfo = this.getGlobalConfig(['curve','depositContract']);\n    if (depositContractInfo){\n      let curveDepositContract = this.getContractByName(depositContractInfo.name);\n      if (!curveDepositContract && depositContractInfo.abi){\n        curveDepositContract = await this.props.initContract(depositContractInfo.name,depositContractInfo.address,depositContractInfo.abi);\n      }\n    }\n    return depositContractInfo;\n  }\n  getCurveZapContract = async () => {\n    const zapContractInfo = this.getGlobalConfig(['curve','zapContract']);\n    if (zapContractInfo){\n      let curveZapContract = this.getContractByName(zapContractInfo.name);\n      if (!curveZapContract && zapContractInfo.abi){\n        curveZapContract = await this.props.initContract(zapContractInfo.name,zapContractInfo.address,zapContractInfo.abi);\n      }\n    }\n    return zapContractInfo;\n  }\n  getCurvePoolContract = async () => {\n    const poolContractInfo = this.getGlobalConfig(['curve','poolContract']);\n    if (poolContractInfo){\n      let curvePoolContract = this.getContractByName(poolContractInfo.name);\n      if (!curvePoolContract && poolContractInfo.abi){\n        curvePoolContract = await this.props.initContract(poolContractInfo.name,poolContractInfo.address,poolContractInfo.abi);\n      }\n    }\n    return poolContractInfo;\n  }\n  getCurveSwapContract = async () => {\n    const migrationContractInfo = this.getGlobalConfig(['curve','migrationContract']);\n    if (migrationContractInfo){\n      let migrationContract = this.getContractByName(migrationContractInfo.name);\n      if (!migrationContract && migrationContractInfo.abi){\n        migrationContract = await this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi);\n      }\n    }\n    return migrationContractInfo;\n  }\n  getCurveIdleTokensAmounts = async (account=null,curveTokenBalance=null,max_slippage=null) => {\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account){\n      return null;\n    }\n\n    const tokensBalances = {};\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance){\n      curveTokenBalance = await this.getCurveTokenBalance(account,false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply){\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n      const n_coins = Object.keys(curveAvailableTokens).length;\n\n      if (max_slippage){\n        max_slippage = this.BNify(max_slippage).div(n_coins);\n      }\n\n      // this.customLog('curveTokenShare',this.BNify(curveTokenBalance).toString(),this.BNify(curveTokenSupply).toString(),curveTokenShare.toString());\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const curveIdleTokens = await this.genericContractCall(curveSwapContract.name,'balances',[coinIndex]);\n        if (curveIdleTokens){\n          let idleTokenBalance = this.BNify(curveIdleTokens).times(curveTokenShare);\n          if (max_slippage){\n            // this.customLog('getCurveIdleTokensAmounts',idleTokenBalance.toFixed());\n            idleTokenBalance = idleTokenBalance.minus(idleTokenBalance.times(max_slippage));\n          }\n          tokensBalances[coinIndex] = this.integerValue(idleTokenBalance);\n        }\n      });\n    }\n\n    return Object.values(tokensBalances);\n  }\n\n  // Get amounts of underlying tokens in the curve pool\n  getCurveTokensAmounts = async (account=null,curveTokenBalance=null,fixDecimals=false,useCoinIndex=false) => {\n\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account){\n      return null;\n    }\n\n    const tokensBalances = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance){\n      curveTokenBalance = await this.getCurveTokenBalance(account,false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply){\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        const [\n          idleTokenPrice,\n          idleTokenBalance\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.genericContractCall(curveSwapContract.name,'balances',[coinIndex]),\n        ]);\n\n        const totalTokenSupply = this.BNify(idleTokenBalance).times(this.BNify(idleTokenPrice));\n        let tokenBalance = totalTokenSupply.times(curveTokenShare);\n        if (fixDecimals){\n          tokenBalance = this.fixTokenDecimals(tokenBalance,18);\n        }\n\n        tokensBalances[curveTokenConfig.baseToken] = useCoinIndex ? this.integerValue(tokenBalance) : tokenBalance;\n      });\n    }\n\n    return useCoinIndex ? Object.values(tokensBalances) : tokensBalances;\n  }\n\n  // Compile amounts array for Curve\n  getCurveAmounts = async (token,amount,deposit=false) => {\n    const amounts = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    await this.asyncForEach(Object.keys(curveAvailableTokens), async (idleToken) => {\n      const curveTokenConfig = curveAvailableTokens[idleToken];\n      const migrationParams = curveTokenConfig.migrationParams;\n      const coinIndex = migrationParams.coinIndex;\n      if (idleToken === token && parseFloat(amount)>0){\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        amount = this.fixTokenDecimals(amount,18);\n        if (!deposit){\n          const idleTokenPrice = await this.getIdleTokenPrice(tokenConfig);\n          amount = amount.div(idleTokenPrice);\n        }\n        amount = this.normalizeTokenAmount(amount,curveTokenConfig.decimals);\n        amounts[coinIndex] = amount;\n      } else {\n        amounts[coinIndex] = 0;\n      }\n    });\n\n    return Object.values(amounts);\n  }\n  getCurveTokenAmount = async (amounts,deposit=true) => {\n    const migrationContract = await this.getCurveSwapContract();\n    if (migrationContract){\n      return await this.genericContractCall(migrationContract.name,'calc_token_amount',[amounts,deposit]);\n    }\n    return null;\n  }\n  getCurveSlippage = async (token,amount,deposit=true,uneven_amounts=null) => {\n    let slippage = null;\n    const depositContract = await this.getCurveDepositContract();\n    if (depositContract){\n\n      const n_coins = this.getGlobalConfig(['curve','params','n_coins']);\n\n      amount = this.BNify(amount)\n      if (!amount || amount.isNaN() || amount.lte(0)){\n        return null;\n      }\n\n      let amounts = uneven_amounts;\n      if (!amounts || amounts.length !== n_coins){\n        amounts = await this.getCurveAmounts(token,amount);\n      }\n\n      let [\n        virtualPrice,\n        tokenAmount\n      ] = await Promise.all([\n        this.genericContractCall(depositContract.name,'get_virtual_price'),\n        this.genericContractCall(depositContract.name,'calc_token_amount',[amounts,deposit]),\n      ]);\n\n      if (virtualPrice && tokenAmount){\n        amount = this.fixTokenDecimals(amount,18);\n        virtualPrice = this.fixTokenDecimals(virtualPrice,18);\n        tokenAmount = this.fixTokenDecimals(tokenAmount,18);\n        const Sv = tokenAmount.times(virtualPrice);\n\n        // Handle redeem in uneven amounts (Slippage 0%)\n        if (uneven_amounts && !deposit){\n          amount = amount.times(virtualPrice);\n        }\n\n        if (deposit){\n          slippage = Sv.div(amount).minus(1).times(-1);\n        } else {\n          slippage = amount.div(Sv).minus(1).times(-1);\n        }\n\n        // console.log('getCurveSlippage',token,deposit,amounts,tokenAmount.toFixed(6),virtualPrice.toFixed(6),Sv.toFixed(6),amount.toFixed(6),slippage.toFixed(6));\n\n        return slippage;\n      }\n    }\n    return null;\n  }\n  getCompAPR = async (token,tokenConfig,cTokenIdleSupply=null,compConversionRate=null) => {\n    const COMPTokenConfig = this.getGlobalConfig(['govTokens','COMP']);\n    if (!COMPTokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getCompAPR_${tokenConfig.idle.token}_${cTokenIdleSupply}_${compConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let compAPR = this.BNify(0);\n    const compDistribution = await this.getCompDistribution(tokenConfig,cTokenIdleSupply);\n\n    if (compDistribution){\n\n      const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get COMP conversion rate\n      if (!compConversionRate){\n        try {\n          compConversionRate = await this.getUniswapConversionRate(DAITokenConfig,COMPTokenConfig);\n        } catch (error) {\n\n        }\n        if (!compConversionRate || compConversionRate.isNaN()){\n          compConversionRate = this.BNify(1);\n        }\n      }\n\n      const compValue = this.BNify(compConversionRate).times(compDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n\n      if (tokenAllocation){\n        compAPR = compValue.div(tokenAllocation.totalAllocationConverted).times(100);\n        if (!this.BNify(compAPR).isNaN()){\n          this.setCachedDataWithLocalStorage(cachedDataKey,compAPR);\n        }\n      }\n    }\n\n    return compAPR;\n  }\n  getCompSpeed = async (cTokenAddress) => {\n    let compSpeed = await this.genericContractCall('Comptroller','compSpeeds',[cTokenAddress]);\n    if (compSpeed){\n      return this.BNify(compSpeed);\n    }\n    return null;\n  }\n  getCompDistribution = async (tokenConfig,cTokenIdleSupply=null,annualize=true) => {\n\n    const cachedDataKey = `getCompDistribution_${tokenConfig.idle.token}_${cTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n    if (cTokenInfo){\n\n      // Get IdleToken allocation in compound\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n      const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenInfo.address.toLowerCase()];\n\n      // Calculate distribution if compound allocation >= 0.1%\n      if (compoundAllocationPerc && compoundAllocationPerc.gte(0.001)){\n\n        // Get COMP distribution speed and Total Supply\n        const [\n          compSpeed,\n          cTokenTotalSupply\n        ] = await Promise.all([\n          this.getCompSpeed(cTokenInfo.address),\n          this.genericContractCall(cTokenInfo.token,'totalSupply'),\n        ]);\n\n        if (compSpeed && cTokenTotalSupply){\n\n          // Get Idle liquidity supply\n          if (!cTokenIdleSupply){\n            cTokenIdleSupply = await this.genericContractCall(cTokenInfo.token,'balanceOf',[tokenConfig.idle.address]);\n          }\n\n          if (cTokenIdleSupply){\n\n            // Get COMP distribution for Idle in a Year\n            const blocksPerYear = this.getGlobalConfig(['network','blocksPerYear']);\n\n            // Take 50% of distrubution for lenders side\n            const compoundPoolShare = this.BNify(cTokenIdleSupply).div(this.BNify(cTokenTotalSupply));\n            let compDistribution = this.BNify(compSpeed).times(compoundPoolShare);\n\n            if (annualize){\n              compDistribution = compDistribution.div(1e18).times(this.BNify(blocksPerYear));\n            }\n\n            if (!this.BNify(compDistribution).isNaN()){\n              return this.setCachedDataWithLocalStorage(cachedDataKey,compDistribution);\n            }\n          }\n        }\n      }\n    }\n\n    return null;\n  }\n  getCompUserDistribution = async (account=null,availableTokens=null) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n      if (cTokenInfo){\n        const [\n          userPoolShare,\n          compDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account,tokenConfig,false),\n          this.getCompDistribution(tokenConfig,null,false),\n        ]);\n\n        if (compDistribution && userPoolShare){\n          output = output.plus(compDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getCompAvgApr = async (availableTokens=null) => {\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.BNify(0);\n    let totalAllocation = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [compApr,tokenAllocation] = await Promise.all([\n        this.getCompAPR(token,tokenConfig),\n        this.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (compApr && tokenAllocation){\n        output = output.plus(compApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n        // this.customLog(token,compApr.toString(),tokenAllocation.totalAllocation.toString(),output.toString(),totalAllocation.toString());\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n  getTokensCsv = async () => {\n\n    // eslint-disable-next-line\n    Array.prototype.sum = function() {\n      return this.reduce(function(pv, cv) { return pv + cv; }, 0);\n    };\n    // eslint-disable-next-line\n    Array.prototype.max = function() {\n      return Math.max.apply(null, this);\n    };\n    // eslint-disable-next-line\n    Array.prototype.avg = function() {\n      return this.sum()/this.length;\n    };\n\n    const csv = [];\n    const availableStrategies = this.props.availableStrategies;\n    await this.asyncForEach(Object.keys(availableStrategies), async (strategy) => {\n      const availableTokens = availableStrategies[strategy];\n      const isRisk = strategy === 'risk';\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n        const tokenConfig = availableTokens[token];\n        const rates = await this.getTokenApiData(tokenConfig.address,isRisk,null,null,false,7200,'ASC');\n        const header = [];\n        let protocols = null;\n        const rows = [];\n        const aprAvg = {};\n        const scoreAvg = {};\n\n        const lastRow = rates[rates.length-1];\n\n        rates.forEach( r => {\n          if (!protocols){\n            header.push('Token');\n            header.push('Date');\n\n            // Get protocols\n            protocols = [];\n            lastRow.protocolsData.forEach( p1 => {\n              const foundProtocol = tokenConfig.protocols.find( p2 => ( p2.address.toLowerCase() === p1.protocolAddr.toLowerCase() ) );\n              if (foundProtocol){\n                protocols.push(foundProtocol);\n              }\n            });\n\n            // Add APR columns\n            header.push('APR Idle');\n            header.push('SCORE Idle');\n\n            aprAvg['idle'] = [];\n            scoreAvg['idle'] = [];\n\n            protocols.forEach( p => {\n              header.push('APR '+p.name);\n              header.push('SCORE '+p.name);\n\n              aprAvg[p.name] = [];\n              scoreAvg[p.name] = [];\n            });\n\n            rows.push(header.join(','));\n          }\n\n          const date = moment(r.timestamp*1000).format('YYYY-MM-DD');\n          const rate = this.BNify(r.idleRate).div(1e18).toFixed(5);\n          const score = parseFloat(r.idleScore);\n\n          const row = [];\n          row.push(`${token}-${strategy}`);\n          row.push(date);\n          row.push(rate);\n          row.push(score);\n\n          if (date>='2020-09-15'/* && date<='2020-11-09'*/){\n            aprAvg['idle'].push(parseFloat(rate));\n            scoreAvg['idle'].push(parseFloat(score));\n          }\n\n          protocols.forEach( pInfo => {\n            const pData = r.protocolsData.find( p => (p.protocolAddr.toLowerCase() === pInfo.address.toLowerCase()) );\n            let pRate = '';\n            let pScore = '';\n            if (pData){\n              pScore = !this.BNify(pData.defiScore).isNaN() ? parseFloat(pData.defiScore) : '0.00000';\n              pRate = !this.BNify(pData.rate).isNaN() ? this.BNify(pData.rate).div(1e18) : '0.00000';\n              if (typeof pData[`${pInfo.name}AdditionalAPR`] !== 'undefined'){\n                const additionalRate = this.BNify(pData[`${pInfo.name}AdditionalAPR`]).div(1e18);\n                if (!additionalRate.isNaN()){\n                  pRate = pRate.plus(additionalRate);\n                }\n              }\n\n              if (date>='2020-09-15'/* && date<='2020-11-09'*/){\n                if (!isNaN(parseFloat(pRate))){\n                  aprAvg[pInfo.name].push(parseFloat(pRate));\n                }\n                if (!isNaN(parseFloat(pScore))){\n                  scoreAvg[pInfo.name].push(parseFloat(pScore));\n                }\n              }\n            }\n\n            row.push(pRate);\n            row.push(pScore);\n          });\n\n          rows.push(row.join(','));\n        });\n\n        Object.keys(aprAvg).forEach( p => {\n          const avgRate = aprAvg[p].sum()/aprAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Rate: ${avgRate}`);\n        });\n\n        Object.keys(scoreAvg).forEach( p => {\n          const avgScore = scoreAvg[p].sum()/scoreAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Score: ${avgScore}`);\n        });\n\n        // if (token==='DAI' && isRisk){\n        //   debugger;\n        // }\n\n        csv.push(rows.join('\\n'));\n      });\n    });\n\n    this.customLog(csv.join('\\n'));\n  }\n  getGovTokenPool = async (govToken=null,availableTokens=null,convertToken=null) => {\n    let output = this.BNify(0);\n\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const enabledTokens = govToken ? [govToken] : null;\n      const compTokenBalance = await this.getGovTokensBalances(tokenConfig.idle.address,convertToken,enabledTokens);\n      if (compTokenBalance && compTokenBalance.total){\n        output = output.plus(compTokenBalance.total);\n      }\n    });\n    return output;\n  }\n  getIdleGovToken = () => {\n    if (!this.idleGovToken){\n      this.idleGovToken = new IdleGovToken(this.props);\n    }\n    return this.idleGovToken;\n  }\n  getTokenGovTokens = (tokenConfig) => {\n    const output = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    Object.keys(govTokens).forEach( govToken => {\n      const govTokenConfig = govTokens[govToken];\n      if (!govTokenConfig.enabled){\n        return;\n      }\n      if (govTokenConfig.protocol === 'idle'){\n        if (!govTokenConfig.disabledTokens.includes(tokenConfig.idle.token)){\n          output[govToken] = govTokenConfig;\n        }\n      } else {\n        const foundProtocol = tokenConfig.protocols.find( p => (p.enabled && p.name.toLowerCase() === govTokenConfig.protocol.toLowerCase()) )\n        if (foundProtocol){\n          output[govToken] = govTokenConfig;\n        }\n      }\n    });\n    return output;\n  }\n  fixDistributionSpeed = (speed,frequency) => {\n    const blocksPerYear = this.BNify(this.getGlobalConfig(['network','blocksPerYear']));\n    speed = this.BNify(speed);\n    if (speed && !speed.isNaN()){\n      switch (frequency){\n        case 'day':\n          const blocksPerDay = blocksPerYear.div(365.242199);\n          speed = speed.times(blocksPerDay);\n        break;\n        case 'week':\n          const blocksPerWeek = blocksPerYear.div(52.1429);\n          speed = speed.times(blocksPerWeek);\n        break;\n        case 'month':\n          const blocksPerMonth = blocksPerYear.div(12);\n          speed = speed.times(blocksPerMonth);\n        break;\n        case 'year':\n          speed = speed.times(blocksPerYear);\n        break;\n        default:\n        break;\n      }\n      return speed;\n    }\n    return null;\n  }\n  getGovTokensUserDistributionSpeed = async (account,tokenConfig=null,enabledTokens=null) => {\n    const govTokensUserDistribution = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      const availableTokens = {};\n      availableTokens[tokenConfig.token] = tokenConfig;\n\n      let output = null;\n      switch (govToken){\n        case 'COMP':\n          output = await this.getCompUserDistribution(account,availableTokens);\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          output = await idleGovToken.getUserDistribution(account,availableTokens);\n        break;\n        default:\n        break;\n      }\n\n      if (output){\n        output = output.div(1e18);\n        if (govTokenConfig.distributionFrequency){\n          output = this.fixDistributionSpeed(output,govTokenConfig.distributionFrequency);\n        }\n        govTokensUserDistribution[govToken] = output;\n      }\n    });\n\n    return govTokensUserDistribution;\n  }\n  getGovTokensDistributionSpeed = async (tokenConfig,enabledTokens=null) => {\n    const govTokensDistribution = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      let govSpeed = null;\n      switch (govToken){\n        case 'COMP':\n          const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n          if (cTokenInfo){\n            govSpeed = await this.getCompDistribution(tokenConfig,null,false);\n          }\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          govSpeed = await idleGovToken.getSpeed(tokenConfig.idle.address);\n        break;\n        default:\n        break;\n      }\n\n      if (govSpeed){\n        govSpeed = govSpeed.div(1e18);\n        if (govTokenConfig.distributionFrequency){\n          govSpeed = this.fixDistributionSpeed(govSpeed,govTokenConfig.distributionFrequency);\n        }\n        govTokensDistribution[govToken] = govSpeed;\n      }\n    });\n\n    return govTokensDistribution;\n  }\n  getGovTokensAprs = async (token,tokenConfig,enabledTokens=null) => {\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensAprs = {}\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled || govTokenConfig.aprTooltipMode === false){\n        return;\n      }\n\n      let output = null;\n      let tokenAllocation = null;\n\n      switch (govToken){\n        case 'COMP':\n          switch (govTokenConfig.aprTooltipMode){\n            default:\n            case 'apr':\n              [output,tokenAllocation] = await Promise.all([\n                this.getCompAPR(token,tokenConfig),\n                this.getTokenAllocation(tokenConfig,false,false)\n              ]);\n\n              // Cut the COMP token proportionally on Idle funds allocation in compound\n              if (tokenAllocation){\n                const compoundInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n                if (compoundInfo){\n                  if (tokenAllocation.protocolsAllocationsPerc[compoundInfo.address.toLowerCase()]){\n                    const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[compoundInfo.address.toLowerCase()];\n                    output = output.times(compoundAllocationPerc);\n                  }\n                }\n              }\n            break;\n          }\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          switch (govTokenConfig.aprTooltipMode){\n            case 'apr':\n              output = await idleGovToken.getAPR(token,tokenConfig);\n            break;\n            case 'distribution':\n              output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n              if (output){\n                output = this.fixTokenDecimals(output,18);\n                output = this.fixDistributionSpeed(output,govTokenConfig.distributionFrequency);\n              }\n            break;\n            case 'userDistribution':\n              output = await idleGovToken.getUserDistribution(tokenConfig);\n            break;\n            default:\n            break;\n          }\n        break;\n        default:\n        break;\n      }\n\n      if (output !== null && this.BNify(output).gt(0)){\n        govTokensAprs[govToken] = output;\n      }\n    });\n\n    return govTokensAprs;\n  }\n  getGovTokensBalances = async (address=null,convertToken='DAI',enabledTokens=null) => {\n    if (!address){\n      address = this.props.tokenConfig.idle.address;\n    }\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensBalances = {}\n\n    await this.asyncForEach(Object.keys(govTokens),async (token) => {\n\n      if (enabledTokens && !enabledTokens.includes(token)){\n        return;\n      }\n      \n      const govTokenConfig = govTokens[token];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      // Get gov token balance\n      let govTokenBalance = await this.getProtocolBalance(token,address);\n\n      if (govTokenBalance){\n        // Get gov token conversion rate\n        let tokenConversionRate = null;\n        if (convertToken){\n          const fromTokenConfig = this.getGlobalConfig(['stats','tokens',convertToken]);\n          try {\n            tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig,govTokenConfig);\n          } catch (error) {\n            \n          }\n        }\n\n        // Fix token decimals and convert\n        govTokensBalances[token] = this.fixTokenDecimals(govTokenBalance,govTokens[token].decimals,tokenConversionRate);\n\n        // Initialize Total gov Tokens\n        if (!govTokensBalances.total){\n          govTokensBalances.total = this.BNify(0);\n        }\n\n        // Sum Total gov Tokens\n        govTokensBalances.total = govTokensBalances.total.plus(govTokensBalances[token]);\n      }\n    });\n\n    return govTokensBalances;\n  }\n  getGovTokenConfigByAddress = (address) => {\n    if (!address){\n      return false;\n    }\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    return Object.values(govTokens).find( tokenConfig => (tokenConfig.enabled && tokenConfig.address.toLowerCase() === address.toLowerCase()) );\n  }\n  getGovTokensUserTotalBalance = async (account=null,availableTokens=null,convertToken=null,checkShowBalance=true) => {\n\n    // Check for cached data\n    const cachedDataKey = `govTokensUserTotalBalance_${account}_${JSON.stringify(availableTokens)}_${convertToken}_${checkShowBalance}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account,availableTokens,convertToken,null,checkShowBalance);\n    if (govTokensUserBalances){\n      const govTokensEarnings = Object.values(govTokensUserBalances).reduce( (acc, govTokenAmount) => {\n        acc = acc.plus(this.BNify(govTokenAmount));\n        return acc;\n      }, this.BNify(0));\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey,govTokensEarnings);\n    }\n    return this.BNify(0);\n  }\n  getGovTokensUserBalances = async (account=null,availableTokens=null,convertToken=null,govTokenConfigForced=null,checkShowBalance=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.availableStrategies && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    const output = {};\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const idleTokenConfig = availableTokens[token].idle;\n\n      // Get govTokens amounts\n      const govTokensAmounts = await this.genericContractCall(idleTokenConfig.token,'getGovTokensAmounts',[account]);\n\n      if (govTokensAmounts){\n        await this.asyncForEach(govTokensAmounts, async (govTokenAmount,govTokenIndex) => {\n          govTokenAmount = this.BNify(govTokenAmount);\n          // Get gov Token config by index\n          const govTokenAddress = await this.genericContractCall(idleTokenConfig.token,'govTokens',[govTokenIndex]);\n\n          if (govTokenAddress){\n            const govTokenConfig = govTokenConfigForced ? govTokenConfigForced : this.getGovTokenConfigByAddress(govTokenAddress);\n\n            if (govTokenConfig && (!checkShowBalance || govTokenConfig.showBalance) && govTokenConfig.address && govTokenConfig.address.toLowerCase() === govTokenAddress.toLowerCase()){\n\n              // Get gov token conversion rate\n              let tokenConversionRate = null;\n              if (convertToken){\n                const fromTokenConfig = this.getGlobalConfig(['stats','tokens',convertToken]);\n                if (fromTokenConfig){\n                  try {\n                    tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig,govTokenConfig);\n                  } catch (error) {\n                    \n                  }\n                }\n              }\n\n              govTokenAmount = this.fixTokenDecimals(govTokenAmount,govTokenConfig.decimals,tokenConversionRate);\n\n              // Initialize govToken balance\n              if (!output[govTokenConfig.token]){\n                output[govTokenConfig.token] = this.BNify(0); // this.BNify(1) for testing\n              }\n\n              // Add govTokens balance\n              output[govTokenConfig.token] = output[govTokenConfig.token].plus(govTokenAmount);\n            }\n          }\n        });\n      }\n    });\n\n    return output;\n  }\n  getTokenFees = async (tokenConfig=null) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    const fee = await this.genericContractCall(tokenConfig.idle.token, 'fee');\n    if (fee){\n      return this.BNify(fee).div(this.BNify(100000));\n    }\n    return null;\n  }\n  getUserTokenFees = async (tokenConfig=null,account=null) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account || !tokenConfig){\n      return null;\n    }\n\n    let [\n      feePercentage,\n      amountLent,\n      redeemableBalance\n    ] = await Promise.all([\n      this.getTokenFees(tokenConfig),\n      this.loadAssetField('amountLent',tokenConfig.token,tokenConfig,account),\n      this.loadAssetField('redeemableBalance',tokenConfig.token,tokenConfig,account)\n    ]);\n\n    if (feePercentage && amountLent && redeemableBalance){\n      const gain = redeemableBalance.minus(amountLent);\n      const fees = gain.times(feePercentage);\n\n      // this.customLog('fees',tokenConfig.token,amountLent.toString(),redeemableBalance.toString(),gain.toString(),fees.toString());\n\n      return fees;\n    }\n\n    return null;\n  }\n  getGovTokenUserBalance = async (govTokenConfig,account=null,availableTokens=null,convertToken=null) => {\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account,availableTokens,convertToken,govTokenConfig);\n    return govTokensUserBalances && govTokensUserBalances[govTokenConfig.token] ? govTokensUserBalances[govTokenConfig.token] : this.BNify(0);\n  }\n  getTotalTVL = async () => {\n    const tokensTVL = await this.getTokensTVL();\n    return Object.values(tokensTVL).reduce( (totalTVL,tokenInfo) => {\n      const tokenTVL = this.BNify(tokenInfo.totalTVL);\n      if (tokenTVL && !tokenTVL.isNaN()){\n        totalTVL = totalTVL.plus(tokenTVL);\n      }\n      return totalTVL;\n    },this.BNify(0));\n  }\n  getTokensTVL = async () => {\n    const output = {};\n    const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n\n        let tokenTVL = this.BNify(0);\n        let totalTVL = this.BNify(0);\n        let oldTokenTVL = this.BNify(0);\n        const tokenConfig = availableTokens[token];\n        const idleTokenName = tokenConfig.idle.token;\n\n        output[idleTokenName] = {\n          tokenTVL,\n          totalTVL,\n          oldTokenTVL,\n          govTokens:{},\n        };\n\n        const [\n          tokenPrice,\n          totalSupply\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getIdleTokenSupply(tokenConfig)\n        ]);\n\n        tokenTVL = this.fixTokenDecimals(totalSupply,18).times(tokenPrice);\n        tokenTVL = await this.convertTokenBalance(tokenTVL,token,tokenConfig,isRisk);\n\n        output[idleTokenName].tokenTVL = tokenTVL;\n        totalTVL = totalTVL.plus(tokenTVL);\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens){\n          await this.asyncForEach(Object.keys(govTokens).filter( govToken => (govTokens[govToken].showAUM) ), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              govTokenBalance,\n              govTokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken,tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig,govTokenConfig)\n            ]);\n            \n            if (govTokenBalance && govTokenConversionRate){\n              const govTokenBalanceConverted = this.fixTokenDecimals(govTokenBalance,govTokenConfig.decimals).times(this.BNify(govTokenConversionRate));\n              if (govTokenBalanceConverted && !govTokenBalanceConverted.isNaN()){\n                totalTVL = totalTVL.plus(govTokenBalanceConverted);\n                output[idleTokenName].govTokens[govToken] = govTokenBalanceConverted;\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract){\n          const oldTokenConfig = Object.assign({},tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({},tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols){\n            oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n              if (foundProtocol){\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const [\n            oldTokenPrice,\n            oldTotalSupply\n          ] = await Promise.all([\n            this.getIdleTokenPrice(oldTokenConfig),\n            this.getIdleTokenSupply(oldTokenConfig.idle.name)\n          ]);\n\n          if (oldTokenPrice && oldTotalSupply){\n            oldTokenTVL = this.fixTokenDecimals(oldTotalSupply,18).times(oldTokenPrice);\n            oldTokenTVL = await this.convertTokenBalance(oldTokenTVL,token,oldTokenConfig,isRisk);\n            if (oldTokenTVL && !oldTokenTVL.isNaN()){\n              output[idleTokenName].oldTokenTVL = oldTokenTVL;\n              totalTVL = totalTVL.plus(oldTokenTVL);\n            }\n          }\n        }\n\n        output[idleTokenName].totalTVL = totalTVL;\n      });\n    });\n\n    return output;\n  }\n  getSubstackLatestFeed = async () => {\n    const cachedDataKey = `substackLatestFeed`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpointInfo = this.getGlobalConfig(['stats','substack']);\n    const idleSubstackFeed = await this.makeRequest(endpointInfo.endpoint,false,config);\n\n    if (idleSubstackFeed && idleSubstackFeed.data && idleSubstackFeed.data.items && idleSubstackFeed.data.items.length>0){\n      const latestFeed = idleSubstackFeed.data.items[0];\n      return this.setCachedDataWithLocalStorage(cachedDataKey,latestFeed,endpointInfo.TTL);\n    }\n\n    return null;\n  }\n  getAggregatedStats = async (addGovTokens=true) => {\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpointInfo = this.getGlobalConfig(['stats','tvls']);\n    const tvls = await this.makeCachedRequest(endpointInfo.endpoint,endpointInfo.TTL,true,false,config);\n\n    if (tvls){\n      const avgAPY = this.BNify(tvls.avgAPY);\n      const totalAUM = this.BNify(tvls.totalTVL);\n      return {\n        avgAPY,\n        totalAUM\n      };\n    } else {\n      return await this.getAggregatedStats_chain();\n    }\n  }\n  getAggregatedStats_chain = async (addGovTokens=true) => {\n\n    // Check for cached data\n    const cachedDataKey = `getAggregatedStats_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && (cachedData.avgAPR && !this.BNify(cachedData.avgAPR).isNaN()) && (cachedData.avgAPY && !this.BNify(cachedData.avgAPY).isNaN()) && (cachedData.totalAUM && !this.BNify(cachedData.totalAUM).isNaN())){\n      return {\n        avgAPR:this.BNify(cachedData.avgAPR),\n        avgAPY:this.BNify(cachedData.avgAPY),\n        totalAUM:this.BNify(cachedData.totalAUM)\n      };\n    }\n\n    let avgAPR = this.BNify(0);\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n    const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,addGovTokens);\n        const tokenAprs = await this.getTokenAprs(tokenConfig,tokenAllocation,addGovTokens);\n        if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent && !tokenAllocation.totalAllocationWithUnlent.isNaN()){\n          const tokenAUM = await this.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig,isRisk);\n          totalAUM = totalAUM.plus(tokenAUM);\n          // console.log(tokenConfig.idle.token+'V4',tokenAUM.toFixed());\n          if (tokenAprs && tokenAprs.avgApr && !tokenAprs.avgApr.isNaN()){\n            avgAPR = avgAPR.plus(tokenAUM.times(tokenAprs.avgApr));\n            avgAPY = avgAPY.plus(tokenAUM.times(tokenAprs.avgApy));\n          }\n        }\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens){\n          await this.asyncForEach(Object.keys(govTokens).filter( govToken => (govTokens[govToken].showAUM) ), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              tokenBalance,\n              tokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken,tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig,govTokenConfig)\n            ]);\n            \n            if (tokenBalance && tokenConversionRate){\n              const tokenBalanceConverted = this.fixTokenDecimals(tokenBalance,govTokenConfig.decimals).times(this.BNify(tokenConversionRate));\n              if (tokenBalanceConverted && !tokenBalanceConverted.isNaN()){\n                // console.log(tokenConfig.idle.token+'V4 - COMP',tokenBalanceConverted.toFixed());\n                totalAUM = totalAUM.plus(tokenBalanceConverted);\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract){\n          const oldTokenConfig = Object.assign({},tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({},tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols){\n            oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n              if (foundProtocol){\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const oldTokenAllocation = await this.getTokenAllocation(oldTokenConfig,false,false);\n          if (oldTokenAllocation && oldTokenAllocation.totalAllocation && !oldTokenAllocation.totalAllocation.isNaN()){\n            const oldTokenTotalAllocation = await this.convertTokenBalance(oldTokenAllocation.totalAllocation,token,oldTokenConfig,isRisk);\n            totalAUM = totalAUM.plus(oldTokenTotalAllocation);\n            // console.log(oldTokenConfig.idle.name,oldTokenTotalAllocation.toFixed(5));\n          }\n        }\n      });\n    });\n\n    avgAPR = avgAPR.div(totalAUM);\n    avgAPY = avgAPY.div(totalAUM);\n\n    const output = {\n      avgAPR,\n      avgAPY,\n      totalAUM\n    };\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,output);\n  }\n  getTokenApy = async (tokenConfig) => {\n    const tokenAprs = await this.getTokenAprs(tokenConfig);\n    if (tokenAprs && tokenAprs.avgApy !== null){\n      return tokenAprs.avgApy;\n    }\n    return null;\n  }\n  getTokensToMigrate = async (selectedStrategy=null) => {\n\n    if (!this.props.availableStrategies || !this.props.account){\n      return false;\n    }\n\n    const tokensToMigrate = {};\n\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      if (selectedStrategy && selectedStrategy !== strategy){\n        return;\n      }\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const {\n          migrationEnabled,\n          oldContractBalanceFormatted\n        } = await this.checkMigration(tokenConfig,this.props.account);\n        \n        if (migrationEnabled){\n          const tokenKey = selectedStrategy ? token : tokenConfig.idle.token;\n          tokensToMigrate[tokenKey] = {\n            token,\n            strategy,\n            tokenConfig,\n            oldContractBalanceFormatted\n          }\n        }\n      });\n    });\n\n    return tokensToMigrate;\n  }\n  /*\n  Get protocols tokens balances\n  */\n  getProtocolsTokensBalances = async (protocol=null) => {\n    if (!this.props.account){\n      return false;\n    }\n    const tokenBalances = {};\n    const minTokenBalance = this.BNify(1).div(1e4);\n    const protocolsTokens = this.getGlobalConfig(['tools','tokenMigration','props','availableTokens']);\n    if (protocolsTokens){\n      await this.asyncForEach(Object.keys(protocolsTokens),async (token) => {\n        const tokenConfig = protocolsTokens[token];\n        if (protocol !== null && tokenConfig.protocol.toLowerCase() !== protocol.toLowerCase() ){\n          return;\n        }\n        let tokenContract = this.getContractByName(tokenConfig.token);\n        if (!tokenContract && tokenConfig.abi){\n          tokenContract = await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n        }\n        if (tokenContract){\n          const tokenBalance = await this.getTokenBalance(tokenConfig.token,this.props.account);\n          if (tokenBalance && tokenBalance.gte(minTokenBalance)){\n            tokenBalances[token] = {\n              tokenConfig,\n              balance:tokenBalance,\n            };\n          }\n        }\n      });\n    }\n\n    return tokenBalances;\n  }\n  /*\n  Convert token Balance\n  */\n  convertTokenBalance = async (tokenBalance,token,tokenConfig,isRisk=false) => {\n    // Check for USD conversion rate\n    tokenBalance = this.BNify(tokenBalance);\n    if (tokenBalance.gt(0)){\n      const tokenUsdConversionRate = await this.getTokenConversionRate(tokenConfig,isRisk);\n      if (tokenUsdConversionRate){\n        tokenBalance = tokenBalance.times(tokenUsdConversionRate);\n      }\n    }\n    return tokenBalance;\n  }\n\n  getAvgAPYStats = async (address,isRisk,startTimestamp=null,endTimestamp=null) => {\n\n    const apiResults = await this.getTokenApiData(address,isRisk,startTimestamp,endTimestamp,true,7200);\n\n    if (apiResults && apiResults.length){\n      const apr = apiResults.reduce( (sum,r) => {\n        const idleRate = this.fixTokenDecimals(r.idleRate,18);\n        return sum.plus(idleRate);\n      },this.BNify(0));\n\n      // Calculate average\n      return apr.div(apiResults.length);\n    }\n\n    return null;\n  }\n\n  /*\n  Get idleToken conversion rate\n  */\n  getTokenConversionRate = async (tokenConfig,isRisk,conversionRateField=null,count=0) => {\n\n    if (!conversionRateField){\n      conversionRateField = this.getGlobalConfig(['stats','tokens',tokenConfig.token,'conversionRateField']);\n      if (!conversionRateField){\n        return null;\n      }\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenConversionRate_${tokenConfig.address}_${isRisk}_${conversionRateField}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      // console.log('CACHED -',count,cachedDataKey,this.BNify(cachedData).toFixed());\n      return this.BNify(cachedData);\n    }\n\n    let tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,null,null,false,null,'desc',1);\n\n    // console.log('TOKEN DATA - ',tokenConfig.address,isRisk,tokenData);\n\n    if (tokenData && tokenData.length){\n      tokenData = tokenData.pop();\n      if (tokenData && !this.BNify(tokenData[conversionRateField]).isNaN()){\n        const conversionRate = this.fixTokenDecimals(tokenData[conversionRateField],18);\n        if (!this.BNify(conversionRate).isNaN()){\n          // console.log('NOT CACHED -',count,cachedDataKey,this.BNify(conversionRate).toFixed());\n          return this.setCachedDataWithLocalStorage(cachedDataKey,conversionRate);\n        }\n      }\n    } else {\n      const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n      const conversionRate = await this.getUniswapConversionRate(DAITokenConfig,tokenConfig);\n      if (!this.BNify(conversionRate).isNaN()){\n        // console.log('NOT CACHED -',count,cachedDataKey,this.BNify(conversionRate).toFixed());\n        return this.setCachedDataWithLocalStorage(cachedDataKey,conversionRate);\n      }\n    }\n\n    if (count<3){\n      return await this.getTokenConversionRate(tokenConfig,isRisk,conversionRateField,count+1); \n    }\n\n    return null;\n  }\n\n  getTokenScore = async (tokenConfig,isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScore_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const apiInfo = globalConfigs.stats.rates;\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpoint = `${apiInfo.endpoint}${tokenConfig.address}?isRisk=${isRisk}&limit=1&order=DESC`;\n    const [\n      tokenData,\n      tokenAllocation\n    ] = await Promise.all([\n      this.makeCachedRequest(endpoint,apiInfo.TTL,true,false,config),\n      this.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    let tokenScore = this.BNify(0);\n\n    if (tokenData && tokenAllocation){\n      Object.keys(tokenAllocation.protocolsAllocationsPerc).forEach( protocolAddr => {\n        const protocolAllocationPerc = this.BNify(tokenAllocation.protocolsAllocationsPerc[protocolAddr]);\n        if (protocolAllocationPerc.gt(0.001) && tokenData.length>0){\n          const protocolInfo = tokenData[0].protocolsData.find( p => (p.protocolAddr.toLowerCase() === protocolAddr.toLowerCase()) );\n          if (protocolInfo){\n            const protocolScore = this.BNify(protocolInfo.defiScore);\n            if (!protocolScore.isNaN()){\n              tokenScore = tokenScore.plus(protocolScore.times(protocolAllocationPerc));\n              // this.customLog(protocolAddr,tokenAllocation.protocolsAllocationsPerc[protocolAddr].toFixed(6),protocolScore.toFixed(6),tokenScore.toFixed(6));\n            }\n          }\n        }\n      });\n    }\n\n    // Fallback\n    if (!tokenScore || tokenScore.isNaN() || tokenScore.lte(0)){\n      tokenScore = this.getTokenScoreApi(tokenConfig,isRisk);\n    }\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,tokenScore);\n  }\n\n  /*\n  Get idleToken score\n  */\n  getTokenScoreApi = async (tokenConfig,isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScoreApi_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const apiInfo = globalConfigs.stats.scores;\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpoint = `${apiInfo.endpoint}${tokenConfig.address}?isRisk=${isRisk}`;\n    let tokenData = await this.makeCachedRequest(endpoint,apiInfo.TTL,true,false,config);\n\n    if (tokenData){\n      let tokenScore = this.BNify(tokenData[0].idleScore);\n      if (tokenScore && tokenScore.gt(0)){\n        // Set cached data\n        return this.setCachedData(cachedDataKey,tokenScore);\n      // Take latest historical valid score\n      } else {\n        const timestamp = parseInt(Date.now()/1000);\n        const startTimestamp = parseInt(timestamp)-(60*60*24);\n        tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,startTimestamp,null,true,null,'DESC');\n\n        const filteredTokenData = tokenData.filter( d => (this.BNify(d.idleScore).gt(0)) );\n        if (filteredTokenData.length){\n          tokenScore = this.BNify(filteredTokenData[0].idleScore);\n          if (!this.BNify(tokenScore).isNaN()){\n            return this.setCachedDataWithLocalStorage(cachedDataKey,tokenScore);\n          }\n        }\n      }\n    }\n\n    return null;\n  }\n  /*\n  Get idleTokens aggregated APR\n  */\n  getTokenAprs = async (tokenConfig,tokenAllocation=false,addGovTokens=true) => {\n\n    if (!tokenConfig.idle){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAprs_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && (cachedData.avgApr && !this.BNify(cachedData.avgApr).isNaN()) && (cachedData.avgApy && !this.BNify(cachedData.avgApy).isNaN()) ){\n      return {\n        avgApr:this.BNify(cachedData.avgApr),\n        avgApy:this.BNify(cachedData.avgApy)\n      };\n    }\n\n    const Aprs = await this.getAprs(tokenConfig.idle.token);\n\n    if (!Aprs){\n      return false;\n    }\n\n    if (!tokenAllocation){\n      tokenAllocation = await this.getTokenAllocation(tokenConfig);\n    }\n\n    if (!tokenAllocation){\n      return false;\n    }\n\n    const addresses = Aprs.addresses.map((addr,i) => { return addr.toString().toLowerCase() });\n    const aprs = Aprs.aprs;\n\n    const protocolsAprs = {};\n    const protocolsApys = {};\n    let compAPR = null;\n\n    await this.asyncForEach(tokenConfig.protocols,async (protocolInfo,i) => {\n      const protocolAddr = protocolInfo.address.toString().toLowerCase();\n      const addrIndex = addresses.indexOf(protocolAddr);\n      if ( addrIndex !== -1 ) {\n        let protocolApr = this.BNify(+this.toEth(aprs[addrIndex]));\n        let protocolApy = this.apr2apy(protocolApr.div(100)).times(100);\n\n        if (addGovTokens && protocolInfo.name === 'compound'){\n          compAPR = await this.getCompAPR(tokenConfig.token,tokenConfig);\n        }\n\n        protocolsApys[protocolAddr] = protocolApy;\n        protocolsAprs[protocolAddr] = protocolApr;\n      }\n    });\n\n    const tokenAprs = {\n      avgApr: null,\n      avgApy: null\n    };\n\n    if (tokenAllocation){\n      tokenAprs.avgApr = this.getAvgApr(protocolsAprs,tokenAllocation.protocolsAllocations,tokenAllocation.totalAllocation);\n      tokenAprs.avgApy = this.getAvgApr(protocolsApys,tokenAllocation.protocolsAllocations,tokenAllocation.totalAllocation);\n\n      if (compAPR){\n        tokenAprs.avgApr = tokenAprs.avgApr.plus(compAPR);\n        tokenAprs.avgApy = tokenAprs.avgApy.plus(compAPR);\n      }\n\n      // Add $IDLE token APR\n      const idleGovTokenShowAPR = this.getGlobalConfig(['govTokens','IDLE','showAPR']);\n      const idleGovTokenEnabled = this.getGlobalConfig(['govTokens','IDLE','enabled']);\n      if (idleGovTokenEnabled && idleGovTokenShowAPR){\n        const idleGovToken = this.getIdleGovToken();\n        const idleAPR = await idleGovToken.getAPR(tokenConfig.token,tokenConfig);\n        if (idleAPR){\n          tokenAprs.avgApr = tokenAprs.avgApr.plus(idleAPR);\n          tokenAprs.avgApy = tokenAprs.avgApy.plus(idleAPR);\n        }\n      }\n      return this.setCachedDataWithLocalStorage(cachedDataKey,tokenAprs);\n    }\n\n    return null;\n  }\n  abbreviateNumber(value,decimals=3,maxPrecision=5,minPrecision=0){\n\n    const isNegative = parseFloat(value)<0;\n    let newValue = this.BNify(value).abs();\n    const suffixes = [\"\", \"K\", \"M\", \"B\",\"T\"];\n    let suffixNum = 0;\n    while (newValue.gte(1000)) {\n      newValue = newValue.div(1000);\n      suffixNum++;\n    }\n\n    maxPrecision = Math.max(1,maxPrecision);\n\n    // Prevent decimals on integer number\n    if (value>=1000){\n      const decimalPart = decimals ? newValue.mod(1).toFixed(maxPrecision).substr(2,decimals) : null;\n      newValue = parseInt(newValue).toString()+( decimalPart ? '.'+decimalPart : '' );\n    } else {\n      newValue = newValue.toFixed(decimals);\n    }\n\n    // Adjust number precision\n    if (newValue>=1 && (newValue.length-1)>maxPrecision){\n      newValue = parseFloat(newValue).toPrecision(maxPrecision);\n    } else if ((newValue.length-1)<minPrecision) {\n      const difference = minPrecision-(newValue.length-1);\n      const append = this.BNify(value).abs().toString().replace('.','').substr((newValue.length-1),difference);\n      newValue += append;\n    }\n\n    // Add minus if number is negative\n    if (isNegative){\n      newValue = '-'+newValue;\n    }\n\n    newValue += suffixes[suffixNum];\n\n    return newValue;\n  }\n  getFormattedBalance(balance,label,decimals,maxLen,highlightedDecimals){\n    const defaultValue = '-';\n    decimals = !isNaN(decimals) ? decimals : 6;\n    maxLen = !isNaN(maxLen) ? maxLen : 10;\n    highlightedDecimals = !isNaN(highlightedDecimals) ? highlightedDecimals : 0;\n    balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n\n    const numLen = balance.toString().replace('.','').length;\n    if (numLen>maxLen){\n      decimals = Math.max(0,decimals-(numLen-maxLen));\n      balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n    }\n\n    const intPart = Math.floor(balance);\n    let decPart = (balance%1).toPrecision(decimals).substr(2,decimals);;\n    decPart = (decPart+(\"0\".repeat(decimals))).substr(0,decimals);\n\n    if (highlightedDecimals){\n      const highlightedDec = decPart.substr(0,highlightedDecimals);\n      decPart = decPart.substr(highlightedDecimals);\n      const highlightedIntPart = (<Text.span fontSize={'100%'} color={'blue'} fontWeight={'inerith'}>{intPart}.{highlightedDec}</Text.span>);\n      return !isNaN(this.trimEth(balance)) ? ( <>{highlightedIntPart}<small style={{fontSize:'70%'}}>{decPart}</small> <Text.span fontSize={[1,2]}>{label}</Text.span></> ) : defaultValue;\n    } else {\n      return !isNaN(this.trimEth(balance)) ? ( <>{intPart}<small>.{decPart}</small>{ label !== '%' ? ' ' : null }{ label ? <Text.span fontSize={[1,2]}>{label}</Text.span> : null }</> ) : defaultValue;\n    }\n  }\n};\n\nexport default FunctionsUtil;","import React, { Component } from 'react';\nimport styles from './DashboardCard.module.scss';\nimport { Flex, Icon, Heading, Card, Tooltip } from \"rimble-ui\";\n\nclass DashboardCard extends Component {\n\n  state = {\n    mouseOver:false\n  }\n\n  setMouseOver(mouseOver){\n    this.setState({\n      mouseOver\n    });\n  }\n\n  render() {\n    const isDisabled = this.props.isDisabled;\n    const isActive = this.props.isActive && !isDisabled;\n    const isInteractive = this.props.isInteractive && !isDisabled;\n    const isVisible = typeof this.props.isVisible !== 'undefined' ? this.props.isVisible : true;\n    const isRainbow = typeof this.props.isRainbow !== 'undefined' ? this.props.isRainbow : false;\n\n    const cardProps = {\n      p:0,\n      border:1,\n      boxShadow:1,\n      borderRadius:2,\n      borderColor:null,\n      position:'relative',\n      minHeight:'initial',\n      backgroundColor:'cardBg'\n    };\n\n    if (isActive || (isInteractive && this.state.mouseOver)){\n      cardProps.border = 2;\n      cardProps.boxShadow = null;\n      cardProps.backgroundColor = 'cardBgHover';\n    }\n\n    // Replace props\n    if (this.props.cardProps && Object.keys(this.props.cardProps).length){\n      Object.keys(this.props.cardProps).forEach(p => {\n        cardProps[p] = this.props.cardProps[p];\n      });\n    }\n\n    const className = [\n      styles.defaultOpacity,\n      isActive ? styles.active : null,\n      !isVisible ? styles.hidden : null,\n      isRainbow ? styles.rainbow : null,\n      isDisabled ? styles.disabled : null,\n      isInteractive ? styles.interactive : null,\n    ];\n\n    if (this.props.className && styles[this.props.className]){\n      className.push(styles[this.props.className]);\n    }\n\n    return (\n      <Card\n        {...cardProps}\n        className={className}\n        onClick={this.props.handleClick}\n        onMouseOut={(e) => this.setMouseOver(false)}\n        onMouseOver={(e) => this.setMouseOver(true)}\n      >\n        {\n          this.props.title && this.props.title.length>0 &&\n            <Flex\n              mt={[3,4]}\n              ml={[3,4]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              {...this.props.titleParentProps}\n            >\n              <Heading.h4\n                fontWeight={4}\n                fontSize={[2,3]}\n                textAlign={'left'}\n                color={'dark-gray'}\n                lineHeight={'initial'}\n                {...this.props.titleProps}\n              >\n                {this.props.title}\n              </Heading.h4>\n              {\n                this.props.description && this.props.description.length>0 &&\n                  <Tooltip\n                    placement={'top'}\n                    message={this.props.description}\n                  >\n                    <Icon\n                      ml={2}\n                      name={\"Info\"}\n                      size={'1em'}\n                      color={'cellTitle'}\n                    />\n                  </Tooltip>\n              }\n            </Flex>\n        }\n        {this.props.children}\n      </Card>\n    );\n  }\n}\n\nexport default DashboardCard;","import Footer from '../Footer/Footer';\nimport styles from './Tos.module.scss';\nimport React, { Component } from 'react';\nimport { Box, Flex, Text, Heading } from 'rimble-ui'\n\nclass Tos extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} pb={[3,5]} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} pb={3} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.2em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                Terms of Service\n              </Heading.h1>\n              <Heading.h2 fontWeight={'400'} lineHeight={['1.4em', '2em']} fontSize={[2,3]} textAlign={'center'} color={'white'}>\n                Updated: November 28, 2019\n              </Heading.h2>\n            </Flex>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"70em\"]} mx={'auto'} textAlign={'center'}>\n              <Box className={styles.textContainer} alignItems={'center'} width={'100%'} minHeight={['auto','20em']} backgroundColor={'white'} color={'dark-gray'} p={[3,4]} boxShadow={'0 0 25px 5px rgba(102, 139, 255, 0.7)'} borderRadius={'15px'} style={{position:'relative'}}>\n                <Box id={'first-paragraph'} pb={3}>\n                  <Text pb={3}>\n                    These terms of service, together with any documents and additional terms they expressly incorporate by reference (collectively, these “Terms”), are entered into between Idle Labs Inc. (“Idle,” “we,” “us” and “our”) and you or the company or other legal entity you represent (“you” or “your”), and constitute a binding legal agreement.\n                  </Text>\n                  <Text pb={3}>\n                    Please read these Terms carefully, as these Terms govern your use of our Portal and our Services, and expressly cover your rights and obligations, and our disclaimers and limitations of legal liability, relating to such use. By accessing or using the Interface, you signify that you have read, understand, and agree to be bound by and to comply with these Terms, including the mandatory arbitration provision in Section 12. If you do not agree to these Terms, you must not access or use our Portal or the Services.\n                  </Text>\n                  <Text pb={3}>\n                    You must be able to form a legally binding contract online either on behalf of a company or as an individual. Accordingly, you represent that: (a) if you are agreeing to these Terms on behalf of a company or other legal entity, you have the legal authority to bind the company or other legal entity to these Terms; and (b) you are at least 18 years old (or the age of majority where you reside, whichever is older), can form a legally binding contract online, and have the full, right, power and authority to enter into and to comply with the obligations under these Terms.\n                  </Text>\n                  <Text pb={3}>\n                    In addition to the foregoing, you also represent and warrant that you are not a citizen or resident of a state, country, territory or other jurisdiction that is embargoed by the United States or where your use of the Portal or the Services would be illegal or otherwise violate any applicable law.  Specifically, you represent that you are not located in, organized in, or a resident of New York, Cuba, Iran, Syria, North Korea, the Crimea region, Venezuela, or any other jurisdiction where Applicable law prohibits you from accessing or using the Services; and you represent that you are not be named on the Office of Foreign Asset Control of the U.S. Department of the Treasury’s Specially Designated and Blocked Persons List.\n                   </Text>\n                  <Text>\n                    Please carefully review the disclosures and disclaimers set forth in Section 9 in their entirety before using any software developed by Idle. The information in Section 9 provides important details about the legal obligations associated with your use of the Idle open-source software. By accessing or using our Portal or our Services, you agree that Idle is a provider of open-source software that optimizes the allocation of your digital assets to third-party decentralized web protocols.  Idle is not affiliated with and has no control over these third-party protocols and is not responsible for any losses that occur as a result of interconnection with these third-party protocols. The Protocol is open-source software deployed on the Ethereum Blockchain.  While Idle developed and deployed the Protocol, the software operates in an autonomous fashion on a decentralized network and, as a result, Idle has no control over user transactions. You accordingly acknowledge that you use the Services at your own risk and agree that Idle will not be responsible for any losses that occur as a result of your use of the Services.\n                  </Text>\n                </Box>\n\n                <Box id={'key-definitions'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    1. KEY DEFINITIONS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    For the purpose of these Terms, the following capitalized terms shall have the following meanings:\n                  </Text>\n\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>1.1. “Affiliate”</strong> means, with respect to a party to these Terms, any legal entity that, directly or indirectly controls, is controlled by, or is under common control with such party.\n                    </li>\n                    <li>\n                      <strong>1.2. “Applicable Law”</strong> means any domestic or foreign law, rule, statute, regulation, by-law, order, protocol, code, decree, or other directive, requirement or guideline, published or in force which applies to or is otherwise intended to govern or regulate any person, property, transaction, activity, event or other matter, including any rule, order, judgment, directive or other requirement or guideline issued by any Governmental Authority having jurisdiction over Idle, you, the Portal or the Services, or as otherwise duly enacted, enforceable by law, the common law or equity.\n                    </li>\n                    <li>\n                      <strong>1.3. “Ether”</strong> means the Ethereum Blockchain utility token that may be used to purchase computational resources to run decentralized applications or perform actions on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.4. “Ethereum Address”</strong> means the unique public key digital asset identifier that points to an Ethereum-compatible wallet to which Ether may be sent or stored.\n                    </li>\n                    <li>\n                      <strong>1.5. “Ethereum Blockchain”</strong> means the underlying blockchain infrastructure which the Portal leverages to perform portions of the Services.\n                    </li>\n                    <li>\n                      <strong>1.6. “Governmental Authority”</strong> includes any domestic or foreign federal, provincial or state, municipal, local or other governmental, regulatory, judicial or administrative authority.\n                    </li>\n                    <li>\n                      <strong>1.7. “Portal”</strong> means the Idle site located at https://idle.finance and all associated sites linked thereto by Idle and its Affiliates, which includes, for certainty, Idle’s decentralized application layer on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.8. “Protocol”</strong> means the Idle decentralized web protocol, which optimizes the allocation of users’ digital assets to third-party decentralized web protocols.\n                    </li>\n                    <li>\n                      <strong>1.9. “Token”</strong> means an “ERC-20” digital asset issued on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.10. “Services”</strong> has the meaning set out in Section 3.1.\n                    </li>\n                    <li>\n                      <strong>1.11. “Third-Parties Services”</strong> means other services (such as fiat-to-token gateway, or token-to-token swap) provided by third parties services running on Ethereum Blockchain.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'modifications-terms'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    2. MODIFICATIONS TO THESE TERMS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    We reserve the right, in our sole discretion, to modify these Terms from time to time. If we make changes, we will provide you with notice of such changes, such as by sending an email, providing a notice through our Services or updating the date at the top of these Terms. Unless we say otherwise in our notice, any and all such modifications are effective immediately, and your continued use of our Services after we provide such notice will confirm your acceptance of the changes. If you do not agree to the amended Terms, you must stop using our Services.\n                  </Text>\n                </Box>\n\n                <Box id={'services'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    3. SERVICES\n                  </Heading.h3>\n                </Box>\n\n                <ul className={styles.list}>\n                  <li>\n                    <strong>3.1. Services</strong><br />\n                    The primary purpose of the Portal and Protocol is to enable users to interact with smart contracts that allocate their digital assets to third-party decentralized web protocols and enable users to receive an optimized allocation of digital assets from these protocols in return (the “Services”).\n                  </li>\n                  <li>\n                    <strong>3.2. Fees</strong><br />\n                    Use of the Services is provided to you at no charge. Fees are charged on-top of Third-Parties.\n                  </li>\n                  <li>\n                    <strong>3.3. Ethereum Gas Charges</strong><br />\n                    Some Services involve the use of the Ethereum Blockchain, which may require that you pay a fee, commonly known as “Ethereum Gas Charges,” for the computational resources required to perform a transaction on the Ethereum Blockchain. You acknowledge and agree that Idle has no control over: (a) any Ethereum Blockchain transactions; (b) the method of payment of any Ethereum Gas Charges; or (c) any actual payments of Ethereum Gas Charges. Accordingly, you must ensure that you have a sufficient balance of Ether stored at your Ethereum Address to complete any transaction on the Ethereum Blockchain before initiating such Ethereum Blockchain transaction. We will make reasonable efforts to notify you of any Ethereum Gas Charges before initiating any Services that require the use of the Ethereum Blockchain.\n                  </li>\n                  <li>\n                    <strong>3.4. Conditions and Restrictions</strong><br />\n                    We may, at any time and in our sole discretion, restrict your access to, or otherwise impose conditions or restrictions upon your use of, the Services or the Portal, with or without prior notice.\n                  </li>\n                  <li>\n                    <strong>3.5. No Broker, Legal or Fiduciary Relationship</strong><br />\n                    Idle is not your broker, lawyer, intermediary, agent, or advisor and has no fiduciary relationship or obligation to you regarding any other decisions or activities that you effect when using the Portal or the Services. Neither our communications nor any information that we provide to you is intended as, or shall be considered or construed as, advice.\n                  </li>\n                  <li>\n                    <strong>3.6. Your Responsibilities</strong><br />\n                    As a condition to accessing or using the Services or the Portal, you shall:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>only use the Services and the Portal for lawful purposes and in accordance with these Terms;</li>\n                      <li>ensure that, at all times, all information that you provide on the Portal is current, complete and accurate; and maintain the security and confidentiality of your Ethereum Address.</li>\n                      <li>shall be responsible for payment of all applicable taxes, if any, to which the Services might be subject and any and all other taxes which may apply to you.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.7. Unacceptable Use or Conduct</strong><br />\n                    As a condition to accessing or using the Portal or the Services, you will not:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>violate any Applicable Law, including, without limitation, any relevant and applicable anti-money laundering and anti-terrorist financing laws, such as the Bank Secrecy Act, each as may be amended;</li>\n                      <li>infringe on or misappropriate any contract, intellectual property or other third-party right, or commit a tort while using the Portal or the Services;</li>\n                      <li>use the Services in any manner that could interfere with, disrupt, negatively affect, or inhibit other users from fully enjoying the Services, or that could damage, disable, overburden, or impair the functioning of the Services in any manner;</li>\n                      <li>attempt to circumvent any content filtering techniques or security measures that Idle employs on the Portal, or attempt to access any service or area of the Portal or the Services that you are not authorized to access;</li>\n                      <li>use the Services to pay for, support, or otherwise engage in any illegal gambling activities, fraud, money-laundering, or terrorist activities, or other illegal activities;</li>\n                      <li>use any robot, spider, crawler, scraper, or other automated means or interface not provided by us, to access the Services or to extract data;</li>\n                      <li>introduce any malware, virus, Trojan horse, worm, logic bomb, drop-dead device, backdoor, shutdown mechanism or other harmful material into the Portal or the Services;</li>\n                      <li>provide false, inaccurate, or misleading information;</li>\n                      <li>post content or communications on the Portal that are, in our sole discretion, libelous, defamatory, profane, obscene, pornographic, sexually explicit, indecent, lewd, vulgar, suggestive, harassing, hateful, threatening, offensive, discriminatory, bigoted, abusive, inflammatory, fraudulent, deceptive or otherwise objectionable;</li>\n                      <li>post content on the Portal containing unsolicited promotions, political campaigning, or commercial messages or any chain messages or user content designed to deceive or trick the user of the Service;</li>\n                      <li>use the Portal or the Services from a jurisdiction that we have, in our sole discretion, or a relevant Governmental Authority has determined is a jurisdiction where the use of the Portal or the Services is prohibited; or</li>\n                      <li>encourage or induce any third party to engage in any of the activities prohibited under this Section 3.7.</li>\n                    </ul>\n                  </li>\n\n                  <li>\n                    <strong>3.8. Your Assumption of Risks</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>have the necessary technical expertise and ability to review and evaluate the security, integrity and operation of any transactions that you engage in through the Protocol;</li>\n                      <li>have the knowledge, experience, understanding, professional advice and information to make your own evaluation of the merits, risks and applicable compliance requirements under Applicable Law of engaging in transactions through the Protocol;</li>\n                      <li>acknowledge and understand that the Protocol allocates your digital assets to third-party decentralized web protocols to facilitate your lending and borrowing through these third-party protocols and that Idle is not responsible or liable for these transactions or the operation of these third-party protocols;</li>\n                      <li>know, understand and accept the risks associated with your Ethereum Address, the Ethereum Blockchain, Ether and Tokens; and</li>\n                      <li>accept the risks associated with lending, borrowing and trading Ether and Tokens, and are responsible for conducting your own independent analysis of the risks specific to any Ether and Tokens lent, borrowed or traded by you and your use of the Services.</li>\n                    </ul>\n                    You hereby assume, and agree that Idle will have no responsibility or liability for, such risks. You hereby irrevocably waive, release and discharge all claims, whether known or unknown to you, against Idle, its affiliates and their respective shareholders, members, directors, officers, employees, agents and representatives related to any of the risks set forth herein.\n                  </li>\n                  <li>\n                    <strong>3.9. Additional Representations</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>are not using the Protocol to engage in the leveraged, margined, or financed purchase of digital assets; and</li>\n                      <li>are using the Protocol for the purpose of accessing third-party decentralized web protocols.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.10. Your Content</strong><br />\n                    You hereby grant to us a royalty-free, fully paid-up, sublicensable, transferable, perpetual, irrevocable, non-exclusive, worldwide license to use, copy, modify, create derivative works of, display, perform, publish and distribute, in any form, medium or manner, any content that is available to other users via the Idle Platform as a result of your use of the Portal (collectively, “Your Content”) through your use of the Services or the Portal, including, without limitation, for promoting Idle (or its Affiliates), the Services or the Portal. You represent and warrant that: (a) you own Your Content or have the right to grant the rights and licenses in these Terms; and (b) Your Content and our use of Your Content, as licensed herein, does not and will not violate, misappropriate or infringe on any third party’s rights.\n                  </li>\n                </ul>\n\n                <Box id={'privacy-policy'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    4. PRIVACY POLICY\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please refer to our privacy policy available at https://idle.finance/privacy-policy for information about how we collect, use, share and otherwise process information about you.\n                  </Text>\n                </Box>\n\n                <Box id={'proprietary-rights'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    5. PROPRIETARY RIGHTS\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>5.1. Ownership of Services; License to Services</strong><br />\n                      Excluding any open source software (as further described in Section 5.2) or third-party software that the Portal or the Services incorporates, as between you and Idle, Idle owns the Portal and the Services, including all technology, content and other materials used, displayed or provided on the Portal or in connection with the Services (including all intellectual property rights subsisting therein), and hereby grants you a limited, revocable, transferable, license to access and use those portions of the Portal and the Services that are proprietary to Idle.\n                    </li>\n                    <li>\n                      <strong>5.2. Idle License; Open Source Software License; Limitations</strong><br />\n                      The Portal and the Services are governed by the most recent version of the open source license commonly known as the Apache 2.0 a copy of which (as it applies to the Portal and the Services) can be found at:  https://apache.org/licenses/LICENSE-2.0 (as of the date these Terms were last updated) and any other applicable licensing terms for the Portal and the Services in these Terms (collectively, the “Idle License”). You acknowledge that the Portal or the Services may use, incorporate or link to certain open-source components and that your use of the Portal or Services is subject to, and you will comply with any, applicable open-source licenses that govern any such open-source components (collectively, “Open-Source Licenses”). Without limiting the generality of the foregoing, you may not: (a) resell, lease, lend, share, distribute or otherwise permit any third party to use the Portal or the Services; (b) use the Portal or the Services for time-sharing or service bureau purposes; or (c) otherwise use the Portal or the Services in a manner that violates the Idle License or any other Open-Source Licenses.\n                    </li>\n                    <li>\n                      <strong>5.3. Trademarks</strong><br />\n                      Any of Idle’s product or service names, logos, and other marks used in the Portal or as a part of the Services, including Idle's name and logo are trademarks owned by Idle, its Affiliates or its applicable licensors. You may not copy, imitate or use them without Idle’s (or the applicable licensor’s) prior written consent.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'changes-suspension-termination'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    6. CHANGES; SUSPENSION; TERMINATION\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>6.1. Changes to Services</strong><br />\n                      We may, at our sole discretion, from time to time and with or without prior notice to you, modify, suspend or disable, temporarily or permanently, the Services, in whole or in part, for any reason whatsoever, including, but not limited to, as a result of a security incident.\n                    </li>\n                    <li>\n                      <strong>6.2. No Liability</strong><br />\n                      We will not be liable for any losses suffered by you resulting from any modification to any Services or from any suspension or termination, for any reason, of your access to all or any portion of the Portal or the Services.\n                    </li>\n                    <li>\n                      <strong>6.3. Survival</strong><br />\n                      The following sections will survive any termination of your access to the Portal or the Services, regardless of the reasons for its expiration or termination, in addition to any other provision which by law or by its nature should survive: Sections 1, 4, 5, 6.3, and 7-14.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'electronic-notices'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    7. ELECTRONIC NOTICES\n                  </Heading.h3>\n                  <Text py={2}>\n                    You consent to receive all communications, agreements, documents, receipts, notices, and disclosures electronically (collectively, our “Communications”) that we provide in connection with these Terms or any Services. You agree that we may provide our Communications to you by posting them on the Portal or by emailing them to you at the email address you provide in connection with using the Services, if any. You should maintain copies of our Communications by printing a paper copy or saving an electronic copy. You may also contact our support team to request additional electronic copies of our Communications by filing a support request at info@idle.finance.\n                  </Text>\n                </Box>\n\n                <Box id={'indemnification'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    8. INDEMNIFICATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    You will defend, indemnify, and hold harmless us, our Affiliates, and our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers and contractors (collectively, “Indemnified Parties”) from any claim, demand, lawsuit, action, proceeding, investigation, liability, damage, loss, cost or expense, including without limitation reasonable attorneys’ fees, arising out of or relating to (a) your use of, or conduct in connection with, the Portal, Services or Margin Tokens; (b) Ethereum Blockchain assets associated with your Ethereum Address; (c) any feedback or user content you provide to the Portal, if any; (d) your violation of these Terms; or (e) your infringement or misappropriation of the rights of any other person or entity. If you are obligated to indemnify any Indemnified Party, Idle (or, at its discretion, the applicable Indemnified Party) will have the right, in its sole discretion, to control any action or proceeding and to determine whether Idle wishes to settle, and if so, on what terms.\n                  </Text>\n                </Box>\n\n                <Box id={'disclosures-disclaimers'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    9. Disclosures; DISCLAIMERS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Idle is a developer of open-source software. Idle does not operate a digital asset exchange platform or execute peer-to-peer transactions through its Protocol and therefore has no oversight, involvement, or control with respect to your transactions, which are executed through third-party protocols and the Ethereum Blockchain.  The Protocol is an autonomous decentralized web protocol deployed to the Ethereum Blockchain that operates in a disintermediated fashion, and, as such, Idle does not participate in any of these transactions.  In each instance, when you interact with the Protocol, you are interacting with a smart contract that transfers your digital assets to a third-party protocol.\n                  </Text>\n                  <Text py={2}>\n                    [Under U.S. federal law, unless you are an “eligible contract participant” as defined in 7 U.S.C. § 1a(18), your transaction must settle within 28 days. Individuals who do not have more than $10 million invested on a discretionary basis (or $5 million if the transaction is for the purpose of managing risk associated with an asset owned or liability incurred, or reasonably likely to be owned or incurred) are not eligible contract participants and may not enter into transactions using the Idle open-source software that do not result in actual delivery of digital assets within 28 days.]\n                  </Text>\n                  <Text py={2}>\n                    You are responsible for complying with all laws and regulations applicable to your transactions, including, but not limited to, the Commodity Exchange Act and the regulations promulgated thereunder by the U.S. Commodity Futures Trading Commission (“CFTC”), and the federal securities laws and the regulations promulgated thereunder by the U.S. Securities and Exchange Commission (“SEC”).\n                  </Text>\n                  <Text py={2}>\n                    You understand that Idle is not registered or licensed by the CFTC, SEC, the Financial Crimes Enforcement Network or any financial regulatory authority. No financial regulatory authority has reviewed or approved the use of the Idle open-source software. This website and the Idle open-source software do not constitute advice or a recommendation concerning any commodity, security or other asset. Idle is not acting as an investment adviser or commodity trading adviser to any person.\n                  </Text>\n                  <Text py={2}>\n                    Idle does not own or control the underlying software protocols that enable the Protocol to function. In general, the underlying protocols are open-source and anyone can use, copy, modify, and distribute them. Idle is not responsible for operation of the underlying protocols, and Idle makes no guarantee of their functionality, security, or availability.\n                  </Text>\n                  <Text py={2}>\n                    To the maximum extent permitted under Applicable Law, the Portal and the Services (and any of their content or functionality) provided by or on behalf of us are provided on an “AS IS” and “AS AVAILABLE” basis, and we expressly disclaim, and you hereby waive, any representations, conditions or warranties of any kind, whether express or implied, legal, statutory or otherwise, or arising from statute, otherwise in law, course of dealing, or usage of trade, including, without limitation, the implied or legal warranties and conditions of merchantability, merchantable quality, quality or fitness for a particular purpose, title, security, availability, reliability, accuracy, quiet enjoyment and non-infringement of third party rights. Without limiting the foregoing, we do not represent or warrant that the Portal or the Services (including any data relating thereto) will be uninterrupted, available at any particular time or error-free. Further, we do not warrant that errors in the Portal or the Service are correctable or will be correctable.\n                  </Text>\n                  <Text py={2}>\n                    You acknowledge that your data on the Portal may become irretrievably lost or corrupted or temporarily unavailable due to a variety of causes, and agree that, to the maximum extent permitted under Applicable Law, we will not be liable for any loss or damage caused by denial-of-service attacks, software failures, viruses or other technologically harmful materials (including those which may infect your computer equipment), protocol changes by third party providers, Internet outages, force majeure events or other disasters, scheduled or unscheduled maintenance, or other causes either within or outside our control.\n                  </Text>\n                  <Text py={2}>\n                    The disclaimer of implied warranties contained herein may not apply if and to the extent such warranties cannot be excluded or limited under the Applicable Law of the jurisdiction in which you reside.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    10. EXCLUSION OF CONSEQUENTIAL AND RELATED DAMAGES\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall we (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) be liable for any incidental, indirect, special, punitive, consequential or similar damages or liabilities whatsoever (including, without limitation, damages for loss of data, information, revenue, goodwill, profits or other business or financial benefit) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any execution or settlement of a transaction, any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability, breach of warranties, or under any other theory of liability, and whether or not we have been advised of, knew of or should have known of the possibility of such damages and notwithstanding any failure of the essential purpose of these Terms or any limited remedy hereunder nor is Idle in any way responsible for the execution or settlement of transactions between users of Idle open-source software.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    11. LIMITATION OF LIABILITY\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall our aggregate liability (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability or other theory of liability exceed the amount of fees paid by you to us under these Terms, if any, in the twelve (12) month period immediately preceding the event giving rise to the claim for liability.\n                  </Text>\n                </Box>\n\n                <Box id={'dispute-resolution-arbitration'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    12. DISPUTE RESOLUTION AND ARBITRATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please read the following section carefully because it requires you to arbitrate certain disputes and claims with Idle and limits the manner in which you can seek relief from us, unless you opt out of arbitration by following the instructions set forth below. In addition, arbitration precludes you from suing in court or having a jury trial.\n                    You and Idle agree that any dispute arising out of or related to these Terms or our Services is personal to you and Idle and that any dispute will be resolved solely through individual action, and will not be brought as a class arbitration, class action or any other type of representative proceeding.\n                  </Text>\n                  <Text py={2}>\n                    Except for small claims disputes in which you or Idle seeks to bring an individual action in small claims court located in the county of your billing address or disputes in which you or Idle seeks injunctive or other equitable relief for the alleged unlawful use of intellectual property, you and Idle waive your rights to a jury trial and to have any dispute arising out of or related to these Terms or our Services resolved in court. Instead, for any dispute or claim that you have against Idle or relating in any way to the Services, you agree to first contact Idle and attempt to resolve the claim informally by sending a written notice of your claim (“Notice”) to Idle by email at info@idle.finance or by certified mail addressed to info@idle.finance. The Notice must (a) include your name, residence address, email address, and telephone number; (b) describe the nature and basis of the claim; (c) set forth the specific relief sought. Our notice to you will be similar in form to that described above. If you and Idle cannot reach an agreement to resolve the claim within thirty (30) days after such Notice is received, then either party may submit the dispute to binding arbitration administered by JAMS or, under the limited circumstances set forth above, in court. All disputes submitted to JAMS will be resolved through confidential, binding arbitration before one arbitrator. Arbitration proceedings will be held in New York City, New York, in accordance with the JAMS Streamlined Arbitration Rules and Procedures (“JAMS Rules”). The most recent version of the JAMS Rules are available on the JAMS website and are hereby incorporated by reference. You either acknowledge and agree that you have read and understand the JAMS Rules or waive your opportunity to read the JAMS Rules and waive any claim that the JAMS Rules are unfair or should not apply for any reason.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that these Terms affect interstate commerce and that the enforceability of this Section 12 will be substantively and procedurally governed by the Federal Arbitration Act, 9 U.S.C. § 1, et seq. (the “FAA”), to the maximum extent permitted by applicable law. As limited by the FAA, these Terms and the JAMS Rules, the arbitrator will have exclusive authority to make all procedural and substantive decisions regarding any dispute and to grant any remedy that would otherwise be available in court, including the power to determine the question of arbitrability. The arbitrator may conduct only an individual arbitration and may not consolidate more than one individual’s claims, preside over any type of class or representative proceeding or preside over any proceeding involving more than one individual.\n                  </Text>\n                  <Text py={2}>\n                    The arbitrator, Idle, and you will maintain the confidentiality of any arbitration proceedings, judgments and awards, including, but not limited to, all information gathered, prepared and presented for purposes of the arbitration or related to the dispute(s) therein. The arbitrator will have the authority to make appropriate rulings to safeguard confidentiality, unless the law provides to the contrary. The duty of confidentiality does not apply to the extent that disclosure is necessary to prepare for or conduct the arbitration hearing on the merits, in connection with a court application for a preliminary remedy or in connection with a judicial challenge to an arbitration award or its enforcement, or to the extent that disclosure is otherwise required by law or judicial decision.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that for any arbitration you initiate, you will pay the filing fee and Idle will pay the remaining JAMS fees and costs. For any arbitration initiated by Idle, Idle will pay all JAMS fees and costs. You and Idle agree that the state or federal courts of the State of New York and the United States sitting in New York City, New York have exclusive jurisdiction over any appeals and the enforcement of an arbitration award.\n                  </Text>\n                  <Text py={2}>\n                    Any claim arising out of or related to these Terms or our Services must be filed within one year after such claim arose; otherwise, the claim is permanently barred, which means that you and Idle will not have the right to assert the claim.\n                  </Text>\n                  <Text py={2}>\n                    You have the right to opt out of binding arbitration within 30 days of the date you first accepted the terms of this Section 12 by emailing us at info@idle.finance. In order to be effective, the opt-out notice must include your full name and address and clearly indicate your intent to opt out of binding arbitration. By opting out of binding arbitration, you are agreeing to resolve disputes in accordance with Section 13.\n                  </Text>\n                  <Text py={2}>\n                    If any portion of this Section 12 is found to be unenforceable or unlawful for any reason, (a) the unenforceable or unlawful provision shall be severed from these Terms; (b) severance of the unenforceable or unlawful provision shall have no impact whatsoever on the remainder of this Section 12 or the parties’ ability to compel arbitration of any remaining claims on an individual basis pursuant to this Section 12; and (c) to the extent that any claims must therefore proceed on a class, collective, consolidated, or representative basis, such claims must be litigated in a civil court of competent jurisdiction and not in arbitration, and the parties agree that litigation of those claims shall be stayed pending the outcome of any individual claims in arbitration. Further, if any part of this Section 12 is found to prohibit an individual claim seeking public injunctive relief, that provision will have no effect to the extent such relief is allowed to be sought out of arbitration, and the remainder of this Section 12 will be enforceable.\n                  </Text>\n                </Box>\n\n                <Box id={'governing-law'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    13. GOVERNING LAW\n                  </Heading.h3>\n                  <Text py={2}>\n                    The interpretation and enforcement of these Terms, and any dispute related to these Terms, the Portal or the Services, will be governed by and construed and enforced in accordance with the laws of the State of Delaware, as applicable, without regard to conflict of law rules or principles (whether of the State of Delaware or any other jurisdiction) that would cause the application of the laws of any other jurisdiction. You agree that we may initiate a proceeding related to the enforcement or validity of our intellectual property rights in any court having jurisdiction. With respect to any other proceeding that is not subject to arbitration under these Terms, the state and federal courts located in Wilmington, Delaware, will have exclusive jurisdiction. You waive any objection to venue in any such courts.\n                  </Text>\n                </Box>\n\n                <Box id={'miscellaneous'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    14. MISCELLANEOUS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Any right or remedy of Idle set forth in these Terms is in addition to, and not in lieu of, any other right or remedy whether described in these Terms, under Applicable Law, at law or in equity. Our failure or delay in exercising any right, power, or privilege under these Terms shall not operate as a waiver thereof. The invalidity or unenforceability of any of these Terms shall not affect the validity or enforceability of any other of these Terms, all of which shall remain in full force and effect. We will have no responsibility or liability for any failure or delay in performance of the Portal or any of the Services, or any loss or damage that you may incur, due to any circumstance or event beyond our control, including without limitation any flood, extraordinary weather conditions, earthquake, or other act of God, fire, war, insurrection, riot, labor dispute, accident, action of government, communications, power failure, or equipment or software malfunction. You may not assign or transfer any right to use the Portal or the Services, or any of your rights or obligations under these Terms, without our express prior written consent, including by operation of law or in connection with any change of control. We may assign or transfer any or all of our rights or obligations under these Terms, in whole or in part, without notice or obtaining your consent or approval. Headings of sections are for convenience only and shall not be used to limit or construe such sections. These Terms contain the entire agreement and supersede all prior and contemporaneous understandings between the parties regarding the Portal and the Services. In the event of any conflict between these Terms and any other agreement you may have with us, these Terms will control unless the other agreement specifically identifies these Terms and declares that the other agreement supersedes these Terms.\n                  </Text>\n                </Box>\n\n              </Box>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default Tos;\n","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from 'polished';\n\n// theme.js\nexport default {\n  breakpoints: ['52em', '64em'],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5,\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: ['0', '4px', '8px', '16px', '2rem'],\n  width: [0, 16, 32, 64, 128, 256],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, '1px solid #0d2034','1px solid #475d7c'],\n  borderWidths: ['0', '1px', '2px', '4px'],\n  shadows: [\n    '0',\n    '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    '0 7px 14px rgba(50,50,93,.1)',\n    '1px 1px 0px rgba(0,0,0,0.2)',\n    '0px 0px 16px 2px rgb(71,93,123,0.6)'\n  ],\n  opacity: {\n    disabled: 0.4,\n  },\n  colors: {\n    primary: '#fcfcfc',\n    'gradient-bg': 'linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)',\n    'primary-light': blue.light[1],\n    'primary-dark': blue.dark[1],\n    bgBlue: '#0030e0',\n    blue: '#0036ff',\n    'dark-blue': '#00219a',\n    skyBlue: '#00abfe',\n    lightBlue: '#79f4e1',\n    copyColor: '#fcfcfc',\n    subColor: '#a7a7a7',\n    black: baseColors.black,\n    'near-black': '#1e3657',\n    'dark-gray': '#fcfcfc',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#a4aec6',\n    white: '#fff',\n    transparent: 'transparent',\n    /*\n    NEW COLORS\n    */\n    arrowActive:'#d8d8d8',\n    arrowInactive:'#4f4f4f',\n    selectBgFocused:'#1e3657',\n    selectBg:'#162e4d',\n    backButtonBg:'#162e4d',\n    lineChartStroke:'#a4aec6',\n    wrongNetworkBannerBg:'#0e2133',\n    dashboardBg: '#13273f',\n    statValue: '#a4aec6',\n    boxBorder: '#eeeeee',\n    cellTitle: '#a4aec6',\n    cellText: '#a4aec6',\n    divider: '#a4aec6',\n    counter: '#a4aec6',\n    redeem: '#00a9fe',\n    deposit: '#0239ff',\n    migrate: '#00a9fe',\n    legend: '#c9c9c9',\n    cardBg:'#162e4d',\n    menuBg:'#162e4d',\n    menuHover:'#1e3657',\n    flashColor:'#bac5ff',\n    cardBgHover:'#1e3657',\n    cardBorder:'#0d2034',\n    menuRightBorder:'#0d2034',\n    cardHoverShadow:'0px 0px 0px 1px rgb(45 74 114)',\n    transactions:{\n      action:{\n        send:'#10a0dd',\n        swap:'#3d53c0',\n        boost:'#ffff00',\n        redeem:'#10a0dd',\n        swapout:'#10a0dd',\n        deposit:'#3d53c0',\n        curvein:'#10a0dd',\n        receive:'#3d53c0',\n        migrate:'#3d53c0',\n        default:'#4f4f4f',\n        curveout:'#3d53c0',\n        withdraw:'#10a0dd',\n        curvedepositin:'#10a0dd',\n        curvedepositout:'#3d53c0'\n      },\n      actionBg:{\n        send:'#ceeff6',\n        swap:'#ced6ff',\n        boost:'#ff7979',\n        redeem:'#ceeff6',\n        swapout:'#ceeff6',\n        deposit:'#ced6ff',\n        curvein:'#ceeff6',\n        default:'#dadada',\n        receive:'#ced6ff',\n        migrate:'#ced6ff',\n        withdraw:'#ceeff6',\n        curveout:'#ced6ff',\n        curvedepositin:'#ceeff6',\n        curvedepositout:'#ced6ff'\n      },\n      status:{\n        completed:'#00b84a',\n        pending:'#a5a5a5',\n        failed:'#fa0000'\n      }\n    },\n    blacks: [\n      'rgba(0,0,0,.0125)',\n      'rgba(0,0,0,.025)',\n      'rgba(0,0,0,.05)',\n      'rgba(0,0,0,.1)',\n      'rgba(0,0,0,.2)',\n      'rgba(0,0,0,.3)',\n      'rgba(0,0,0,.4)',\n      'rgba(0,0,0,.5)',\n      'rgba(0,0,0,.6)',\n      'rgba(0,0,0,.7)',\n      'rgba(0,0,0,.8)',\n      'rgba(0,0,0,.9)',\n    ],\n    whites: [\n      'rgba(255,255,255,.0125)',\n      'rgba(255,255,255,.025)',\n      'rgba(255,255,255,.05)',\n      'rgba(255,255,255,.1)',\n      'rgba(255,255,255,.2)',\n      'rgba(255,255,255,.3)',\n      'rgba(255,255,255,.4)',\n      'rgba(255,255,255,.5)',\n      'rgba(255,255,255,.6)',\n      'rgba(255,255,255,.7)',\n      'rgba(255,255,255,.8)',\n      'rgba(255,255,255,.9)',\n    ],\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base,\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base,\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base,\n    },\n    info: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      '--main-color': blue.base,\n      '--contrast-color': blue.text,\n    },\n    normal: {\n      color: baseColors.black,\n      '--contrast-color': baseColors.black,\n    },\n    success: {\n      '--main-color': green.base,\n      '--contrast-color': green.text,\n    },\n    danger: {\n      '--main-color': red.base,\n      '--contrast-color': red.text,\n    },\n  },\n  buttonSizes: {\n    small: {\n      fontSize: '0.75rem',\n      height: '2rem',\n      minWidth: '2rem',\n      padding: '0 1rem',\n    },\n    medium: {\n      fontSize: '1rem',\n      height: '3rem',\n      minWidth: '3rem',\n    },\n    large: {\n      fontSize: '1.5rem',\n      height: '4rem',\n      minWidth: '4rem',\n      borderRadius: '2rem'\n    },\n  },\n};\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class TorusConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Torus, initParams, ...rest } = kwargs;\n    super(rest);\n\n    this.torus = null;\n    this.Torus = Torus;\n    this.initParams = initParams;\n  }\n\n  async onActivation() {\n    if (!this.torus) {\n      this.torus = new this.Torus({\n        buttonPosition: \"bottom-right\" // default: bottom-left\n      });\n    }\n    await this.torus.init();\n    await this.torus.login();\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.torus.provider);\n    });\n  }\n\n  async getAccount(provider) {\n    const userInfo = await this.torus.getUserInfo();\n    if (userInfo){\n      return await this.torus.getPublicAddress({\n        verifier:userInfo.verifier,\n        verifierId:userInfo.verifierId\n      });\n    }\n    return null;\n  }\n\n  async onDeactivation() {\n    await this.torus.logout();\n  }\n\n  changeNetwork(network) {\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class AuthereumConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Authereum, network, ...rest } = kwargs;\n    super(rest);\n\n    this.authereum = null;\n    this.Authereum = Authereum;\n    this.network = network;\n  }\n\n  async onActivation() {\n    if (!this.authereum) {\n      this.authereum = new this.Authereum(this.network);\n    }\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.authereum.getProvider());\n    });\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      const accounts = await provider.getAccounts();\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.disable();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      api: this.Authereum,\n      network\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletLinkConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletLink, appName, infuraUrl, chainId, appLogoUrl, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.walletLink = null;\n    this.appName = appName;\n    this.chainId = chainId;\n    this.infuraUrl = infuraUrl;\n    this.appLogoUrl = appLogoUrl;\n    this.WalletLink = WalletLink;\n  }\n\n  async onActivation() {\n    if (!this.walletLink){\n      this.walletLink = new this.WalletLink({\n        darkMode: false,\n        appName: this.appName,\n        infuraUrl: this.infuraUrl,\n        appLogoUrl: this.appLogoUrl,\n      });\n    }\n\n    const provider = this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  getProvider(){\n    if (!this.provider){\n      this.provider = this.walletLink.makeWeb3Provider(this.infuraUrl, this.chainId);\n    }\n    return this.provider;\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      // Use eth_RequestAccounts\n      const accounts = await provider.send('eth_requestAccounts');\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = this.getProvider();\n    if (provider){\n      await provider.close();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      network,\n      api: this.WalletLink,\n      appName: this.appName,\n      chainId: this.chainId,\n      infuraUrl: this.infuraUrl,\n      appLogoUrl: this.appLogoUrl,\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletConnectConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletConnectProvider, defaultNetwork, infuraId, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.WalletConnectProvider = WalletConnectProvider;\n    this.infuraId = infuraId;\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.WalletConnectProvider({\n        infuraId:this.infuraId\n      });\n    }\n\n    // console.log('onActivation',this.provider);\n\n    if (this.provider){\n\n      await this.provider.enable();\n\n      /*\n      // Subscribe to accounts change\n      this.provider.on(\"accountsChanged\", (accounts) => {\n        console.log('accountsChanged',accounts);\n      });\n\n      // Subscribe to chainId change\n      this.provider.on(\"chainChanged\", (chainId) => {\n        console.log('chainChanged',chainId);\n      });\n\n      // Subscribe to networkId change\n      this.provider.on(\"networkChanged\", (networkId) => {\n        console.log('networkChanged',networkId);\n      });\n\n      // Subscribe to session connection/open\n      this.provider.on(\"open\", () => {\n        console.log('open');\n      });\n\n      // Subscribe to session disconnection/close\n      this.provider.on(\"close\", (code, reason) => {\n        console.log('close',code, reason);\n      });\n      */\n\n      return this.provider;\n    }\n  }\n\n  async getProvider(){\n    return this.provider;\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.close();\n      return this.provider;\n    }\n  }\n}\n","import WalletLink from 'walletlink';\nimport AuthereumApi from 'authereum';\nimport PortisApi from \"@portis/web3\";\nimport FortmaticApi from \"fortmatic\";\nimport TrezorApi from \"trezor-connect\";\nimport { Connectors } from \"web3-react\";\nimport TorusApi from '@toruslabs/torus-embed';\nimport globalConfigs from '../configs/globalConfigs';\nimport TorusConnector from './connectors/TorusConnector';\nimport AuthereumConnector from './connectors/AuthereumConnector';\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport WalletLinkConnector from './connectors/WalletLinkConnector';\nimport WalletConnectConnector from './connectors/WalletConnectConnector';\n\nconst {\n  InjectedConnector,\n  NetworkOnlyConnector,\n  TrezorConnector,\n  LedgerConnector,\n  FortmaticConnector,\n  PortisConnector\n} = Connectors;\n\nconst env = process.env;\n\nconst manifestEmail = env.REACT_APP_TREZOR_MANIFEST_EMAIL; // trezor\nconst manifestAppUrl = env.REACT_APP_TREZOR_MANIFEST_URL; // trezor\nconst defaultNetwork = globalConfigs.network.requiredNetwork;\nconst fortmaticApiKey = env.REACT_APP_FORTMATIC_KEY_MAINNET;\nconst portisDAppId = env.REACT_APP_PORTIS_DAPP_ID;\nconst portisNetwork = env.REACT_APP_PORTIS_NETWORK;\n\nconst supportedNetworkURLs = {};\n  \nObject.keys(globalConfigs.network.providers.infura).forEach((networkId,index) => {\n  supportedNetworkURLs[networkId] = globalConfigs.network.providers.infura[networkId]+env.REACT_APP_INFURA_KEY;\n});\n\nconst Injected = new InjectedConnector({\n  supportedNetworks: [defaultNetwork]\n});\n\nconst Infura = new NetworkOnlyConnector({\n  providerURL: globalConfigs.network.providers.infura[defaultNetwork]+env.REACT_APP_INFURA_KEY\n});\n\n\nconst Trezor = new TrezorConnector({\n  api: TrezorApi,\n  supportedNetworkURLs,\n  defaultNetwork,\n  manifestEmail,\n  manifestAppUrl\n});\n\nconst Ledger = new LedgerConnector({\n  supportedNetworkURLs,\n  defaultNetwork\n});\n\nconst WalletConnect = new WalletConnectConnector({\n  defaultNetwork,\n  supportedNetworkURLs,\n  api: WalletConnectProvider,\n  infuraId:env.REACT_APP_INFURA_KEY,\n  bridge: \"https://bridge.walletconnect.org\",\n});\n\nconst Fortmatic = new FortmaticConnector({\n  api: FortmaticApi,\n  apiKey: fortmaticApiKey,\n  logoutOnDeactivation: false\n});\n\nconst Portis = new PortisConnector({\n  api: PortisApi,\n  dAppId: portisDAppId,\n  network: portisNetwork\n});\n\nconst Authereum = new AuthereumConnector({\n  api: AuthereumApi,\n  network: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase()\n});\n\nconst walletLink = new WalletLinkConnector({\n  api: WalletLink,\n  darkMode: false,\n  chainId: defaultNetwork,\n  appName: globalConfigs.appName,\n  infuraUrl: supportedNetworkURLs[defaultNetwork],\n  appLogoUrl: 'https://idle.finance/images/idle-mark.png',\n});\n\nconst Torus = new TorusConnector({\n  api: TorusApi,\n  initParams:{\n    buildEnv: 'production', // default: production\n    enableLogging: false, // default: false\n    network: {\n      host: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase(), // default: mainnet\n      chainId: defaultNetwork, // default: 1\n      networkName: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase() // default: Main Ethereum Network\n    },\n    showTorusButton: false // default: true\n  }\n});\n\nexport default {\n  Injected,\n  Infura,\n  WalletConnect,\n  walletLink,\n  Fortmatic,\n  Portis,\n  Authereum,\n  Torus,\n  Trezor,\n  Ledger,\n};","import React from \"react\";\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\n\nclass WrongNetworkBanner extends React.Component {\n  render() {\n    const bannerStyle = {\n      position: \"fixed\",\n      bottom: 0,\n      left: 0,\n      right: 0,\n      width: \"100%\",\n      zIndex: 9999\n    };\n\n    return (\n      <Box style={bannerStyle} backgroundColor={'wrongNetworkBannerBg'} p={3}>\n        <Flex alignItems={\"center\"}>\n          <Box p={4}>\n            <Icon name=\"Warning\" color=\"gold\" size=\"30\" />\n          </Box>\n          <Flex flexDirection={\"column\"}>\n            <Text fontWeight={\"bold\"}>\n              Looks like you're on the wrong network\n            </Text>\n            <Text>\n              You should be on the {this.props.network.required.name} Ethereum\n              network. You are currently connected to the{\" \"}\n              <Text.span style={{ textTransform: \"capitalize\" }}>\n                {this.props.network.current.name}\n              </Text.span>{\" \"}\n              Network - please switch to the correct network.\n            </Text>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default WrongNetworkBanner;\n","import React from \"react\";\n\nimport WrongNetworkBanner from \"./components/WrongNetworkBanner\";\n\nclass NetworkUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        { this.props.network.isCorrectNetwork === false && this.props.web3\n          ?\n            <WrongNetworkBanner\n              network={this.props.network}\n            />\n          :\n            null\n        }\n      </div>\n    );\n  }\n}\n\nexport default NetworkUtil;\n","import React from \"react\";\nimport { Box, Heading, Text, Modal, Link } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport RimbleUtil from \"@rimble/utils\";\n\nclass NoWeb3BrowserModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2\n          fontSize={4}\n          fontWeight={3}\n          lineHeight={\"1.375em\"}\n          my={3}\n        >\n          Switch browsers to use the Idle App\n        </Heading.h2>\n\n        {RimbleUtil.isMobileDevice() ? (\n          <Text my={4}>\n            You can't use our blockchain features, like increasing the count\n            value, in this browser. We recommend using{\" \"}\n            <Link\n              href=\"https://status.im/\"\n              title=\"status.im website\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Status\n            </Link>\n            ,{\" \"}\n            <Link\n              href=\"https://www.cipherbrowser.com/\"\n              title=\"Cipher Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Cipher\n            </Link>{\" \"}\n            or{\" \"}\n            <Link\n              href=\"https://wallet.coinbase.com/\"\n              title=\"Coinbase Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Coinbase wallet\n            </Link>{\" \"}\n            browsers.\n          </Text>\n        ) : (\n          <Box>\n            <Text my={4}>\n              You can't use our blockchain features, like increasing the\n              count value, in this browser. Switch to{\" \"}\n              <Link\n                href=\"https://brave.com/download/\"\n                title=\"Download Brave browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Brave\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.mozilla.org/\"\n                title=\"Download FireFox browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                FireFox\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.opera.com/download\"\n                title=\"Download Opera Browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Opera\n              </Link>\n              , or{\" \"}\n              <Link\n                href=\"https://www.google.com/chrome/\"\n                title=\"Download Chrome browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Chrome\n              </Link>{\" \"}\n              to continue.\n            </Text>\n\n            <Text>\n              <Text.span bold>Rather use your phone?</Text.span> You can use\n              the Idle App in mobile browser wallets like{\" \"}\n              <Link\n                href=\"https://status.im/\"\n                title=\"status.im website\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Status\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.cipherbrowser.com/\"\n                title=\"Cipher Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Cipher\n              </Link>{\" \"}\n              or{\" \"}\n              <Link\n                href=\"https://wallet.coinbase.com/\"\n                title=\"Coinbase Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Coinbase wallet\n              </Link>\n              .\n            </Text>\n          </Box>\n        )}\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWeb3BrowserModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Flex,\n  Icon,\n  Modal,\n  Link,\n  Button\n} from \"rimble-ui\";\n\nclass NoWalletModal extends React.Component {\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card p={5} maxWidth={\"600px\"}>\n          <Button.Text\n            icononly\n            icon={\"Close\"}\n            color={\"moon-gray\"}\n            position={\"absolute\"}\n            top={0}\n            right={0}\n            mt={3}\n            mr={3}\n            onClick={this.props.closeModal}\n          />\n\n          <Flex flexDirection={\"column\"} justifyContent={\"space-between\"}>\n            <Flex justifyContent={\"center\"} my={4}>\n              <Icon name=\"Warning\" color=\"gold\" size=\"40\" />\n            </Flex>\n\n            <Heading.h2 my={3}>No Wallet Available</Heading.h2>\n\n            <Text my={4}>\n              Your current browser does not have a blockchain connected wallet.\n              Try using MetaMask, Fortmatic, Portis.\n            </Text>\n\n            <Link\n              href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              <Button.Outline size=\"small\">Get MetaMask Extension</Button.Outline>\n            </Link>\n          </Flex>\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWalletModal;\n","// Checks for MetaMask\nconst GeneralUtil = {\n  hasMetaMask: () => {\n    let hasMetaMask = false;\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasMetaMask = typeof window.ethereum.isMetaMask !== \"undefined\";\n    } else if (typeof window.web3 !== 'undefined') {\n      hasMetaMask = typeof window.web3.currentProvider.isMetaMask !== 'undefined' && window.web3.currentProvider.isMetaMask;\n    }\n\n    return hasMetaMask;\n  },\n  isTrustWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isTrust !== 'undefined' && window.web3.currentProvider.isTrust;\n    }\n    return false;\n  },\n  isCoinbaseWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isCoinbaseWallet !== 'undefined' && window.web3.currentProvider.isCoinbaseWallet;\n    }\n    return false;\n  },\n  hasDapper: () => {\n    let hasDapper = typeof window.DapperEthereum !== 'undefined';\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasDapper = typeof window.ethereum.isDapper !== \"undefined\" && window.ethereum.isDapper;\n    }\n\n    return hasDapper;\n  },\n  isOpera: () => {\n    return /Opera|OPR\\//.test(navigator.userAgent);\n  },\n  // Current device is Android\n  isAndroid: () => {\n    const isAndroid = /android/i.test(navigator.userAgent) ? true : false;\n\n    return isAndroid;\n  },\n  // Current device is iOS\n  isIos() {\n    const isIos =\n      /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream\n        ? true\n        : false;\n\n    return isIos;\n  }\n};\n\nexport default GeneralUtil;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Flex,\n  Modal,\n  Button,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\nimport RimbleUtils from \"@rimble/utils\";\n\nclass WrongNetworkModal extends React.Component {\n  renderContent = () => {\n    return (\n      <ModalCard.Body>\n        <Heading.h2 my={3}>\n          Switch to the {this.props.network.required.name} network in{\" \"}\n          {GeneralUtil.hasMetaMask() ? `MetaMask` : `Settings`}\n        </Heading.h2>\n\n        <Text my={4}>\n          The Idle App only works on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {this.props.network.required.name}\n          </Text.span>{\" \"}\n          network. You’re currently on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {\" \"}\n            {this.props.network.current.name}\n          </Text.span>{\" \"}\n          network.\n        </Text>\n\n        {GeneralUtil.hasMetaMask() && !RimbleUtils.isMobileDevice() ? (\n          <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n            <Flex alignItems={\"center\"}>\n              <Box position={\"relative\"} width={\"4em\"}>\n                <Box>\n                  <Loader size={\"3em\"} />\n                </Box>\n              </Box>\n              <Box>\n                <Text fontWeight={4}>Waiting for the right network...</Text>\n                <Text fontWeight={2}>\n                  Go to your Wallet and to switch\n                </Text>\n              </Box>\n            </Flex>\n          </Box>\n        ) : null}\n\n        <Box display={[\"block\", \"none\"]}>\n          <Button onClick={this.props.closeModal} width={1}>\n            OK\n          </Button>\n        </Box>\n      </ModalCard.Body>\n    )\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <React.Fragment>\n            {this.renderContent()}\n          </React.Fragment>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default WrongNetworkModal;\n","import React from \"react\";\nimport { Heading, Text, Box, Flex, Icon } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nfunction TransactionFeeModal(props) {\n  return (\n    <Box>\n      <ModalCard.Header title={'Transaction fees, what are you paying for?'} subtitle={'You need to pay a fee to use the Ethereum blockchain.'} subtitle2={'This pays for someone to process your transaction and store the data.'}></ModalCard.Header>\n      <ModalCard.Body>\n        <Flex flexDirection={['column', 'row']}\n          justifyContent={\"space-between\"}\n          my={[0, 4]}>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"Fingerprint\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Undeniable proof</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You get a public record of any funds you send or receive, a bit like\n              a deed for a house.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"EnhancedEncryption\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unbreakable encryption</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              Your funds can only ever go to your intended recipients.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"AccountBalance\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n              <Icon\n                name=\"NotInterested\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unparalleled control</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You can pay or get paid without using any banks or companies.\n            </Text>\n          </Box>\n        </Flex>\n      </ModalCard.Body>\n    </Box>\n  );\n}\n\nexport default TransactionFeeModal;\n","import React from 'react'\nimport moment from 'moment';\nimport connectors from '../App/connectors';\nimport { useWeb3Context } from 'web3-react';\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport globalConfigs from '../configs/globalConfigs';\nimport styles from './Web3ConnectionButtons.module.scss';\nimport { Button, Box, Text, Flex, Link } from 'rimble-ui';\n\nconst LOG_ENABLED = false;\nconst customLog = (...props) => { if (LOG_ENABLED) console.log(moment().format('HH:mm:ss'),...props); };\n\nexport default function Web3ConnectionButtons(props) {\n  const context = useWeb3Context();\n\n  if (!context.active && !context.error) {\n    customLog('context loading', context);\n  } else if (context.error) {\n    customLog('context error', context);\n  } else {\n    customLog('context success', context);\n  }\n\n  const setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n    if (localStorage) {\n      localStorage.setItem('walletProvider', walletProvider);\n      localStorage.setItem('connectorName', connectorName);\n    }\n\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector(connectorName,walletProvider);\n    }\n    \n    // Close modal\n    if (typeof props.connectionCallback === 'function'){\n      props.connectionCallback();\n    }\n\n    return connectorName;\n    // return await context.setConnector(connectorName);\n  };\n  const unsetConnector = async () => {\n    context.unsetConnector();\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector('Infura','Infura');\n    }\n  };\n\n  // Show provider fields to detect in-app browser\n  // alert(JSON.stringify(Object.keys(window.web3.currentProvider)));\n    \n  const isOpera = GeneralUtil.isOpera();\n  const isDapper = GeneralUtil.hasDapper();\n  const isMetamask = GeneralUtil.hasMetaMask();\n  const isTrustWallet = GeneralUtil.isTrustWallet();\n  const isCoinbaseWallet = GeneralUtil.isCoinbaseWallet();\n  const browserWalletDetected = isMetamask || isOpera || isDapper || isCoinbaseWallet || isTrustWallet;\n  \n  const allowedConnectors = props.allowedConnectors;\n  const registerPage = props.registerPage;\n\n  if (connectors.Portis) {\n    if (registerPage) {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = true;\n    } else {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = false;\n    }\n  }\n\n  let basicConnectorsName = Object.keys(connectors).filter(c => c !== 'Infura');\n\n  if (allowedConnectors) {\n    basicConnectorsName = basicConnectorsName.filter(n => allowedConnectors.map((v) => { return v.toLowerCase(); }).indexOf(n.toLowerCase()) !== -1 );\n  }\n\n  const buttons = basicConnectorsName.map(connectorName => {\n\n    switch (connectorName) {\n      case 'Injected':\n        if (browserWalletDetected) {\n          let name = null;\n          if (isMetamask) {\n            name = 'Metamask';\n          } else if (isOpera) {\n            name = 'Opera';\n          } else if (isDapper){\n            name = 'Dapper';\n          } else if (isCoinbaseWallet){\n            name = 'Coinbase';\n          } else if (isTrustWallet){\n            name = 'TrustWallet';\n          }\n\n          const connectorInfo = globalConfigs.connectors[name.toLowerCase()];\n          if (connectorInfo && connectorInfo.enabled){\n            const walletIcon = connectorInfo.icon ? connectorInfo.icon : `${name.toLowerCase()}.svg`;\n            return (\n              <Flex\n                width={1}\n                key={`wallet_${name}`}\n                justifyContent={'space-between'}\n                style={{\n                  flex:'0 100%',\n                }}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={name}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  imageSrc={`images/${walletIcon}`}\n                  imageProps={{width:'auto',height:'42px'}}\n                  handleClick={ async () => await setConnector(connectorName,name)}\n                  subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${name}` }\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  caption={'Watch Address'}\n                  imageSrc={`images/tokens/ETH.svg`}\n                  subcaption={'Watch an Ethereum address'}\n                  imageProps={{width:'auto',height:'42px'}}\n                  handleClick={ e => props.setCustomAddress(true) }\n                />\n              </Flex>\n            )\n          }\n          return null;\n        } else {\n          const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={'Browser Wallet'}\n              key={`wallet_${connectorName}`}\n              imageSrc={`images/browser-wallet.png`}\n              imageProps={{width:'auto',height:'42px'}}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using a browser wallet`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n      default:\n        const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n        if (connectorInfo && connectorInfo.enabled){\n          const walletIcon = connectorInfo.iconModal ? connectorInfo.iconModal : (connectorInfo.icon ? connectorInfo.icon : `${connectorName.toLowerCase()}.svg`);\n\n          let caption = connectorInfo.name ? connectorInfo.name : connectorName;\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={caption}\n              key={`wallet_${connectorName}`}\n              imageSrc={`images/${walletIcon}`}\n              imageProps={{width:'auto',height:'42px'}}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${connectorName}`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n        return null;\n    }\n  });\n\n  return (\n    <Box width={[1]}>\n      <Flex flexDirection={'column'} alignItems={\"center\"}>\n        {context.error && (\n          <Text.p textAlign=\"center\">\n            An error occurred, are you using an Ethereum browser such as\n            <Link href=\"https://metamask.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Metamask &nbsp;\n            </Link>\n             or\n            <Link href=\"https://www.meetdapper.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Dapper\n            </Link>\n            ?\n            If you do not have an Ethereum wallet follow the\n            \"I'm new to Ethereum\" flow when connecting.\n            If you do have a wallet, click Reset and retry one of the wallet listed below,\n            Generic wallet option is used for Ethereum browsers only.\n          </Text.p>\n        )}\n        {(context.active || (context.error && context.connectorName)) && context.connectorName !== 'Infura' && (\n          <Button.Outline\n            width={[1/2]}\n            className={[styles.button]}\n            mb={[1, 3]}\n            size={'large'}\n            key={'reset'}\n            onClick={async () => await unsetConnector()}\n          >\n            {context.active ? \"Deactivate Connector\" : \"Reset\"}\n          </Button.Outline>\n        )}\n      </Flex>\n      <Flex\n        flexWrap={'wrap'}\n        flexDirection={'row'}\n        justifyContent={'space-between'}\n      >\n        {buttons}\n      </Flex>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport {\n  Box,\n  Text,\n  Link,\n  Icon,\n  Flex,\n  Field,\n  Modal,\n  Input,\n  Loader,\n  Button,\n  Heading\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard.js';\nimport styles from './Header.module.scss';\nimport FunctionsUtil from '../FunctionsUtil.js';\nimport ImageButton from '../../ImageButton/ImageButton.js';\nimport TransactionFeeModal from \"./TransactionFeeModal.js\";\nimport Web3ConnectionButtons from \"../../Web3ConnectionButtons/Web3ConnectionButtons.js\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass ConnectionModal extends React.Component {\n  // TODO save pref in localstorage and do not show 'Before connecting' info every time\n  state = {\n    validated:false,\n    showTxFees:false,\n    customAddress:'',\n    currentSection:null,\n    showInstructions:false,\n    askCustomAddress:false,\n    closeRemainingTime:null,\n    customAddressError:false,\n    newToEthereumChoice:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  toggleShowTxFees = e => {\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  }\n\n  setStoredSection = () => {\n    let currentSection = null;\n    if (localStorage){\n      currentSection = localStorage.getItem('currentSection');\n      if (currentSection){\n        this.setState({\n          currentSection\n        });\n      }\n    }\n    return currentSection;\n  }\n\n  componentDidMount = () => {\n    this.loadUtils();\n    this.setStoredSection();\n  }\n\n  componentDidUpdate = () => {\n    this.loadUtils();\n  }\n\n  resetModal = e => {\n    this.setState({\n      showTxFees: false,\n      currentSection:null,\n      askCustomAddress:false,\n      showInstructions: false,\n      newToEthereumChoice:null,\n    });\n  }\n\n  setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory:'Connect',\n      eventLabel:walletProvider,\n      eventAction:'select_wallet'\n    });\n\n    if (this.props.setConnector && typeof this.props.setConnector === 'function'){\n      this.props.setConnector(connectorName,walletProvider);\n    }\n\n    // Set Wallet choice\n    this.setState({\n      newToEthereumChoice: connectorName\n    });\n\n    this.closeCountdown();\n\n    return connectorName;\n\n    // return await window.RimbleWeb3_context.setConnector(connectorName);\n  }\n\n  closeCountdown = () => {\n    const closeRemainingTime = this.state.closeRemainingTime ? this.state.closeRemainingTime-1 : 5;\n    if (!closeRemainingTime){\n      this.closeModal();\n    } else {\n      setTimeout(() => { this.closeCountdown() },1000);\n    }\n    this.setState({\n      closeRemainingTime\n    });\n  }\n\n  setWalletChoice = (e,choice) => {\n    e.preventDefault();\n    this.setState({\n      newToEthereumChoice: choice\n    });\n  }\n\n  closeModal = () => {\n    // Reset modal\n    this.resetModal();\n    // Set latest stored sections\n    this.setStoredSection();\n    // Close modal\n    this.props.closeModal();\n  }\n\n  setCurrentSection = (e,currentSection) => {\n    e.preventDefault();\n    this.setState({\n      currentSection\n    });\n\n    if (currentSection!=='instructions'){\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Connect',\n        eventAction: 'select_mode',\n        eventLabel: currentSection\n      });\n\n      this.functionsUtil.setLocalStorage('currentSection',currentSection);\n    }\n  }\n\n  connectCustomAddress = () => {\n    const addressValid = this.functionsUtil.checkAddress(this.state.customAddress);\n    if (addressValid){\n      this.setCustomAddress(false);\n      this.functionsUtil.setCustomAddress(this.state.customAddress);\n      this.setConnector('custom','custom');\n      setTimeout(() => { this.closeModal() },1000);\n      return true;\n    } else {\n      return this.setState({\n        customAddressError:true\n      });\n    }\n  }\n\n  updateCustomAddress = (e) => {\n    const customAddressError = false;\n    const customAddress = e.target.value;\n    const validated = this.functionsUtil.checkAddress(customAddress);\n    this.setState({\n      validated,\n      customAddress,\n      customAddressError\n    });\n  }\n\n  setCustomAddress = (askCustomAddress) => {\n    this.setState({\n      askCustomAddress\n    });\n  }\n\n  renderModalContent = () => {\n\n    const TOSacceptance = (\n      <Box>\n        <Text textAlign={'center'} fontSize={1} py={[2,3]}>By connecting, I accept Idle's <RouterLink to=\"/terms-of-service\" color={'primary'} style={{color:this.props.theme.colors.primary,textDecoration:'underline'}} target={'_blank'} rel=\"nofollow noopener noreferrer\">Terms of Service</RouterLink></Text>\n      </Box>\n    );\n\n    const newToEthereum = this.state.currentSection === 'new';\n    const showConnectionButtons = this.state.currentSection === 'wallet';\n    const showInstructions = this.state.currentSection === 'instructions';\n\n    if (showInstructions){\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Before you connect'} subtitle={'Connecting lets you use Idle via your Ethereum account.'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              flexDirection={['column', 'row']}\n              justifyContent={\"space-between\"}\n              my={[0, 3]}\n            >\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"Public\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>The blockchain is public</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  Your Ethereum account activity is public on the\n                  blockchain. Choose an account you don’t mind being\n                  linked with your activity here.\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"AccountBalanceWallet\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have some Ether for fees</Heading>\n                <Text fontSize={1} mb={3} textAlign={'center'}>\n                  You’ll need Ether to pay transaction fees. Buy Ether\n                  from exchanges like Coinbase or directly via enabled wallet\n                  such as Portis or Dapper.<br />\n                  <Link\n                    title=\"Learn about Ethereum transaction fees\"\n                    fontWeight={'0'}\n                    color={'blue'}\n                    textAlign={'center'}\n                    hoverColor={'blue'}\n                    href=\"#\"\n                    onClick={this.toggleShowTxFees}\n                  >\n                    What are transaction fees?\n                  </Link>\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"People\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have the right account ready</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  If you have multiple Ethereum accounts, check that the\n                  one you want to use is active in your browser.\n                </Text>\n              </Box>\n            </Flex>\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    if (this.state.askCustomAddress){\n      return (\n        <Box>\n          <ModalCard.Header\n            title={'Connect ETH wallet'}\n            icon={'images/idle-mark.png'}\n            subtitle={'And get started with Idle.'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              minWidth={[1,'30em']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Field\n                width={1}\n                label={'Ethereum address'}\n              >\n                <Input\n                  required\n                  width={1}\n                  type={'text'}\n                  className={styles.input}\n                  borderColor={'cardBorder'}\n                  backgroundColor={'cardBg'}\n                  pattern={'^0x[a-fA-F0-9]{40}$'}\n                  value={this.state.customAddress}\n                  onChange={ e => this.updateCustomAddress(e) }\n                  placeholder={'Insert a valid Ethereum address'}\n                />\n              </Field>\n              {\n                this.state.customAddressError && (\n                  <Text\n                    mb={2}\n                    fontSize={2}\n                    color={'red'}\n                    fontWeight={3}\n                    textAlign={'center'}\n                  >\n                    Insert a valid Ethereum Address\n                  </Text>\n                )\n              }\n              <Button\n                px={[3,4]}\n                mx={'auto'}\n                fontWeight={3}\n                size={'medium'}\n                fontSize={[2,2]}\n                borderRadius={4}\n                contrastColor={'primary'}\n                className={[styles.gradientButton]}\n                onClick={ e => this.connectCustomAddress() }\n              >\n                CONNECT\n              </Button>\n            </Flex>\n            <Flex\n              pt={3}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Link\n                hoverColor={'blue'}\n                textAlign={'center'}\n                onClick={ e => this.setCustomAddress(false) }\n              >\n                Select another Wallet\n              </Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (showConnectionButtons) {\n      return (\n        <Box>\n          <ModalCard.Header title={'Select your Wallet'} subtitle={'And get started with Idle.'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex width={1} px={[0,5]} flexDirection={'column'} justifyContent={'center'}>\n              <Web3ConnectionButtons\n                width={1/2}\n                isMobile={this.props.isMobile}\n                setConnector={this.setConnector}\n                connectionCallback={this.closeModal}\n                size={this.props.isMobile ? 'medium' : 'large'}\n                setCustomAddress={this.setCustomAddress.bind(this)}\n              />\n            </Flex>\n            <Flex pt={3} alignItems={'center'} justifyContent={'center'}>\n              <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'new') }>I don't have a wallet</Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (newToEthereum) {\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Let\\'s create your first Ethereum wallet'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            {\n              !this.state.newToEthereumChoice ? (\n                <Flex width={1} px={[0,4]} flexDirection={'column'} justifyContent={'center'}>\n                  <Box mb={3}>\n                    <Text fontSize={[2,3]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                      Connect with e-mail or phone number?\n                    </Text>\n                  </Box>\n                  <Flex mb={3} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use e-mail'}\n                      imageSrc={'images/email.svg'}\n                      isMobile={this.props.isMobile}\n                      subcaption={'Powered by Portis'}\n                      handleClick={ e => this.setConnector('Portis','Portis') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use phone number'}\n                      isMobile={this.props.isMobile}\n                      imageSrc={'images/mobile.svg'}\n                      subcaption={'Powered by Fortmatic'}\n                      handleClick={ e => this.setConnector('Fortmatic','Fortmatic') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                  </Flex>\n                  <Flex alignItems={'center'} justifyContent={'center'}>\n                    <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'wallet') }>I already have a wallet</Link>\n                  </Flex>\n                </Flex>\n              ) : (\n                <Box>\n                  <Text fontSize={3} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                    We are connecting you to {this.state.newToEthereumChoice} wallet provider...\n                  </Text>\n                  <Flex\n                    mt={2}\n                    justifyContent={'center'}\n                    alignItems={'center'}\n                    textAlign={'center'}>\n                    <Loader size=\"40px\" /> <Text ml={2} color={'dark-gray'}>Closing in {this.state.closeRemainingTime} seconds...</Text>\n                  </Flex>\n                </Box>\n              )\n            }\n            { TOSacceptance }\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    return (\n      <React.Fragment>\n        <ModalCard.Header title={'Connect to Idle'} icon={'images/idle-mark.png'}></ModalCard.Header>\n        <ModalCard.Body>\n          {\n            <Flex\n              width={1}\n              px={[0,4]}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Box mb={3}>\n                <Text\n                  fontWeight={2}\n                  fontSize={[2,3]}\n                  lineHeight={1.5}\n                  textAlign={'center'}\n                >\n                  How do you want to connect to Idle?\n                </Text>\n              </Box>\n              <Flex\n                mb={[2,3]}\n                alignItems={'center'}\n                justifyContent={'center'}\n                flexDirection={['column','row']}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`Ethereum wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Choose your favourite'}\n                  imageSrc={'images/ethereum-wallet.svg'}\n                  handleClick={ e => this.setCurrentSection(e,'wallet') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`New wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Use email / phone'}\n                  imageSrc={'images/new-wallet.png'}\n                  handleClick={ e => this.setCurrentSection(e,'new') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n              </Flex>\n              <Flex\n                alignItems={'center'}\n                justifyContent={'center'}\n              >\n                <Link\n                  color={'primary'}\n                  hoverColor={'primary'}\n                  onClick={ e => this.setCustomAddress(true) }\n                >\n                  Watch Ethereum Address\n                </Link>\n              </Flex>\n            </Flex>\n          }\n          { TOSacceptance }\n        </ModalCard.Body>\n      </React.Fragment>\n    );\n  }\n\n  renderFooter = () => {\n\n    if (this.state.newToEthereumChoice || (this.state.currentSection && this.state.askCustomAddress)){\n      return null;\n    }\n\n    return (\n      <ModalCard.Footer>\n        { !this.state.currentSection ? (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={ e => this.setCurrentSection(e,'instructions') }\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              READ INSTRUCTIONS\n            </Button>\n          ) : (!this.state.askCustomAddress || this.state.currentSection==='instructions') && (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={this.resetModal}\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              BACK\n            </Button>\n          )\n        }\n      </ModalCard.Footer>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          {this.state.showTxFees === false ? (\n            <React.Fragment>\n              {this.renderModalContent()}\n              {this.renderFooter()}\n            </React.Fragment>\n          ) : (\n            <Box>\n              <TransactionFeeModal />\n              {this.renderFooter()}\n            </Box>\n          )}\n\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionModal;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Modal,\n  Flex,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\n\nclass ConnectionPendingModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>Connect Ethereum account</Heading.h2>\n\n        <Text my={4}>\n          Confirm the request that's just appeared. If you can't see a\n          request, open your{\" \"}\n          {GeneralUtil.hasMetaMask()\n            ? `MetaMask extension`\n            : `eth wallet settings`}\n          .\n        </Text>\n\n        <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n          <Flex alignItems={\"center\"}>\n            <Box position={\"relative\"} width={\"4em\"}>\n              <Box>\n                <Loader size={\"3em\"} />\n              </Box>\n            </Box>\n            <Box>\n              <Text fontWeight={4}>\n                Waiting for connection confirmation...\n              </Text>\n              <Text fontWeight={2}>This won’t cost you any Ether</Text>\n            </Box>\n          </Flex>\n        </Box>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionPendingModal;\n","import React from \"react\";\nimport { Heading, Text, Flex, Button, Modal } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nclass UserRejectedConnectionModal extends React.Component {\n  sendMessageAgain = event => {\n    this.props.closeModal();\n    this.props.initAccount();\n  };\n\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>\n          You can't continue without connecting your account\n        </Heading.h2>\n\n        <Text my={4}>\n          To use our blockchain features you need to confirm the connection\n          request.\n        </Text>\n\n        <Flex flexDirection={['column', 'row']} justifyContent={\"flex-end\"} mt={4}>\n          <Button.Outline onClick={this.props.closeModal} mr={[0, 3]} mb={[3, 0]}>\n            Cancel connection\n          </Button.Outline>\n          <Button onClick={this.sendMessageAgain}>\n            Try again\n          </Button>\n        </Flex>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default UserRejectedConnectionModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Modal,\n  Flex,\n  Box,\n  Button,\n  EthAddress,\n  QR,\n  Link\n} from \"rimble-ui\";\nimport TransactionFeeModal from \"./TransactionFeeModal\";\n\nclass LowFundsModal extends React.Component {\n  state = {\n    showSecondary: false,\n    showTxFees: false\n  };\n\n  toggleQRVisible = () => {\n    this.setState({\n      showSecondary: !this.state.showSecondary\n    });\n  };\n\n  toggleShowTxFees = e => {\n    console.log(\"showTxFees\", this.state.showTxFees);\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  };\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card\n          pr={[0, 5]}\n          pl={[0, 5]}\n          pt={[\"48px\", 5]}\n          pb={[\"97px\", 4]}\n          maxWidth={\"960px\"}\n          overflow={\"hidden\"}\n          position={\"relative\"}\n        >\n          <Box position={\"relative\"}>\n            <Flex\n              justifyContent={\"flex-end\"}\n              mr={[0, -5]}\n              mt={[\"-48px\", -5]}\n              position={\"absolute\"}\n              top={\"0\"}\n              left={\"0\"}\n              right={\"0\"}\n              bg={\"white\"}\n              zIndex={\"1\"}\n            >\n              <Button.Text\n                icononly\n                icon={\"Close\"}\n                color={\"moon-gray\"}\n                onClick={this.props.closeModal}\n              />\n            </Flex>\n          </Box>\n\n          {this.state.showSecondary === false &&\n          this.state.showTxFees === false ? (\n            <Box>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start primary content */}\n\n                  <Box alignContent=\"center\" py={3}>\n                    <Heading.h2>\n                      Not enough Ether for transaction fees\n                    </Heading.h2>\n                  </Box>\n                  <Text mb={4}>\n                    This is a blockchain action so you’ll have to pay a\n                    transaction fee. A few dollars worth of Ether should be\n                    enough but fees do change based on how busy the network is.{\" \"}\n                    <strong>Fund your account and try again.</strong>{\" \"}\n                    <Link\n                      title=\"Learn about Ethereum transaction fees\"\n                      as={\"a\"}\n                      href=\"#\"\n                      onClick={this.toggleShowTxFees}\n                    >\n                      What are transaction fees?\n                    </Link>\n                  </Text>\n\n                  <Heading.h3>How to add funds</Heading.h3>\n\n                  <Flex\n                    alignItems={\"stretch\"}\n                    mx={0}\n                    mb={[4, 5]}\n                    mt={[3, 4]}\n                    flexWrap={[\"wrap\", \"no-wrap\"]}\n                  >\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>Buy ETH from an exchange</Heading.h5>\n                          <Text fontSize=\"1\">\n                            You can buy ETH from exchanges like Coinbase and\n                            send it to your account. If you don’t already have\n                            a Coinbase account, it can take a while to get set\n                            up.\n                          </Text>\n                        </Box>\n\n                        <Button.Outline my={3}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"OpenInNew\" mr={2} />\n                            Go to CoinBase\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>\n                            Send ETH from another account\n                          </Heading.h5>\n                          <Text fontSize=\"1\">\n                            If you have ETH in another Ethereum account, you\n                            can send it to this account using your public\n                            Ethereum address or QR code.\n                          </Text>\n                        </Box>\n                        <Button.Outline my={3} onClick={this.toggleQRVisible}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"FilterCenterFocus\" mr={2} />\n                            Show account QR code\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                  </Flex>\n                  {/* End primary content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex pt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button onClick={this.props.closeModal} width={[1, \"auto\"]}>\n                    Back to Idle\n                  </Button>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showSecondary ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start secondary content */}\n                  <Flex my={3} justifyContent={\"center\"}>\n                    <QR\n                      size={130}\n                      value={\n                        this.props.account ? this.props.account : \"1234512345\"\n                      }\n                    />\n                  </Flex>\n\n                  <EthAddress my={4} address={this.props.account} />\n                  <Flex mb={3} />\n                  {/* End secondary content */}\n                </Box>\n              </Box>\n\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start secondary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex mt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleQRVisible}\n                  >\n                    Go back\n                  </Button.Outline>\n                </Flex>\n                {/* End secondary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showTxFees ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start tx fee content */}\n                  <TransactionFeeModal />\n                  {/* End tx fee content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex\n                  pt={4}\n                  justifyContent={[\"center\", \"flex-end\"]}\n                  borderTop={1}\n                  borderColor={\"#eee\"}\n                >\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleShowTxFees}\n                  >\n                    Go Back\n                  </Button.Outline>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default LowFundsModal;\n","import React from \"react\";\n\nimport NoWeb3BrowserModal from \"./components/NoWeb3BrowserModal\";\nimport NoWalletModal from \"./components/NoWalletModal\";\nimport WrongNetworkModal from \"./components/WrongNetworkModal\";\n\nimport ConnectionModal from \"./components/ConnectionModal\";\nimport ConnectionPendingModal from \"./components/ConnectionPendingModal\";\nimport UserRejectedConnectionModal from \"./components/UserRejectedConnectionModal\";\n\nimport LowFundsModal from \"./components/LowFundsModal\";\n\nclass ConnectionModalUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        <NoWeb3BrowserModal\n          closeModal={this.props.modals.methods.closeNoWeb3BrowserModal}\n          isOpen={this.props.modals.data.noWeb3BrowserModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <NoWalletModal\n          closeModal={this.props.modals.methods.closeNoWalletModal}\n          isOpen={this.props.modals.data.noWalletModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <WrongNetworkModal\n          closeModal={this.props.modals.methods.closeWrongNetworkModal}\n          isOpen={this.props.modals.data.wrongNetworkModalIsOpen}\n          network={this.props.network}\n        />\n\n        <ConnectionModal\n          {...this.props}\n          isMobile={this.props.isMobile}\n          setConnector={this.props.setConnector}\n          currentNetwork={this.props.network.current}\n          validateAccount={this.props.validateAccount}\n          closeModal={this.props.modals.methods.closeConnectionModal}\n          isOpen={ this.props.modals.data.connectionModalIsOpen && !this.props.accountValidated }\n        />\n\n        <ConnectionPendingModal\n          closeModal={this.props.modals.methods.closeConnectionPendingModal}\n          isOpen={this.props.modals.data.accountConnectionPending}\n          currentNetwork={this.props.network.current}\n        />\n        <UserRejectedConnectionModal\n          closeModal={\n            this.props.modals.methods.closeUserRejectedConnectionModal\n          }\n          isOpen={this.props.modals.data.userRejectedConnect}\n          initAccount={this.props.initAccount}\n        />\n\n        <LowFundsModal\n          closeModal={this.props.modals.methods.closeLowFundsModal}\n          isOpen={this.props.modals.data.lowFundsModalIsOpen}\n          currentNetwork={this.props.network.current}\n          account={this.props.account}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ConnectionModalUtil;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ConnectionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    // Disconnect to Infura only if the wallet is not logged\n    if (!this.props.account){\n      await this.props.context.setFirstValidConnector(['Infura']);\n      this.props.setConnector('Infura',null);\n    }\n    this.props.modals.methods.closeConnectionErrorModal();\n  }\n\n  render() {\n\n    const walletProvider = this.functionsUtil.getWalletProvider();\n    const isLedger = (walletProvider && walletProvider.toLowerCase() === 'ledger') || (typeof this.props.modals.data.connectionError === 'string' && this.props.modals.data.connectionError.toLowerCase().includes('ledger'));\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ isLedger ? 'Ledger Error' : `Connection Error` } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to connect with your { isLedger ? 'Ledger' : 'account' }:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.connectionError}\"</Text.span><br />\n                {\n                  isLedger ? (\n                    <Text.span>\n                      Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n\n                    </Text.span>\n                  ) : 'Make sure that your wallet is unlocked and try again.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionErrorModal;","import React from \"react\";\nimport {\n  Text,\n  Link,\n  Flex,\n  Modal,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass TransactionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    this.props.modals.methods.closeTransactionErrorModal();\n  }\n\n  render() {\n\n    const isLedgerError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('ledger');\n    const isSlowTxError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('not mined within 50 blocks');\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ 'Transaction Error' } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to send a transaction:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.transactionError}\"</Text.span><br />\n                {\n                  isLedgerError ? (\n                    <Text.span\n                      fontSize={1}\n                    >\n                      <br />Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n                      We also suggest you to connect your Ledger with Metamask, read the <Link fontSize={1} color={'blue'} hoverColor={'blue'} target={'_blank'} rel={\"nofollow noopener noreferrer\"} href={'https://metamask.zendesk.com/hc/en-us/articles/360020394612-How-to-connect-a-Trezor-or-Ledger-Hardware-Wallet'}>instructions here</Link>.\n                    </Text.span>\n                  ) : isSlowTxError ? 'This could happen when the gas price is low, check the transaction status with your Wallet.' : 'Make sure that your have enough funds in your wallet.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default TransactionErrorModal;","import Web3 from \"web3\";\nimport React from 'react';\nimport BigNumber from 'bignumber.js';\nimport Biconomy from \"@biconomy/mexa\";\nimport SimpleID from 'simpleid-js-sdk';\nimport NetworkUtil from \"./NetworkUtil\";\nimport * as Sentry from '@sentry/browser';\nimport FunctionsUtil from './FunctionsUtil';\nimport globalConfigs from '../configs/globalConfigs';\nimport ConnectionModalUtil from \"./ConnectionModalsUtil\";\nimport detectEthereumProvider from '@metamask/detect-provider';\nimport ConnectionErrorModal from './components/ConnectionErrorModal';\nimport TransactionErrorModal from './components/TransactionErrorModal';\nimport { TerminalHttpProvider, SourceType } from '@terminal-packages/sdk';\n\nrequire('dotenv').config();\nconst INFURA_KEY = process.env[\"REACT_APP_INFURA_KEY\"];\n\nconst RimbleTransactionContext = React.createContext({\n  web3: {},\n  account: {},\n  biconomy: {},\n  simpleID: {},\n  contracts: [],\n  web3Infura: {},\n  tokenConfig: {},\n  transactions: {},\n  accountBalance: {},\n  initWeb3: () => {},\n  accountValidated: {},\n  initAccount: () => {},\n  accountBalanceLow: {},\n  initSimpleID: () => {},\n  initContract: () => {},\n  accountBalanceToken: {},\n  checkPreflight: () => {},\n  validateAccount: () => {},\n  network: {\n    current: {},\n    required: {},\n    checkNetwork: () => {},\n    isCorrectNetwork: null,\n  },\n  accountInizialized: false,\n  getTokenDecimals: () => {},\n  rejectValidation: () => {},\n  getAccountBalance: () => {},\n  contractsInitialized: false,\n  accountValidationPending: {},\n  initializeContracts: () => {},\n  rejectAccountConnect: () => {},\n  enableUnderlyingWithdraw: false,\n  connectAndValidateAccount: () => {},\n  modals: {\n    data: {\n      connectionError: {},\n      lowFundsModalIsOpen: {},\n      noWalletModalIsOpen: {},\n      userRejectedConnect: {},\n      connectionModalIsOpen: {},\n      userRejectedValidation: {},\n      wrongNetworkModalIsOpen: {},\n      accountValidationPending: {},\n      accountConnectionPending: {},\n      noWeb3BrowserModalIsOpen: {},\n      transactionConnectionModalIsOpen: {},\n    },\n    methods: {\n      openLowFundsModal: () => {},\n      closeLowFundsModal: () => {},\n      openWrongNetworkModal: () => {},\n      closeWrongNetworkModal: () => {},\n      openNoWeb3BrowserModal: () => {},\n      closeNoWeb3BrowserModal: () => {},\n      openConnectionErrorModal: () => {},\n      closeConnectionErrorModal: () => {},\n      openTransactionErrorModal: () => {},\n      closeTransactionErrorModal: () => {},\n      openConnectionPendingModal: () => {},\n      closeConnectionPendingModal: () => {},\n      openUserRejectedConnectionModal: () => {},\n      openUserRejectedValidationModal: () => {},\n      closeUserRejectedConnectionModal: () => {},\n      closeUserRejectedValidationModal: () => {},\n    }\n  },\n  transaction: {\n    data: {\n      transactions: {}\n    },\n    meta: {},\n    methods: {}\n  }\n});\n\nlet setConnectorName = null;\nlet biconomyLoginProcessing = false;\n\nclass RimbleTransaction extends React.Component {\n  static Consumer = RimbleTransactionContext.Consumer;\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    const props = Object.assign({},this.props);\n    props.contracts = this.state.contracts;\n    if (this.functionsUtil){\n      props.account = this.state.account;\n      this.functionsUtil.setProps(props);\n    } else {\n      props.account = this.state.account;\n      this.functionsUtil = new FunctionsUtil(props);\n    }\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n    window.initWeb3 = this.initWeb3;\n  }\n\n  componentDidMount = async () => {\n    this.initSimpleID();\n\n    // this.functionsUtil.customLog('RimbleWeb3 componentDidMount');\n    this.initWeb3();\n\n    // TEST - Manually triggers transaction error\n    // this.openTransactionErrorModal(null,'Your Ledger device is Ineligible');\n\n    window.testTransaction = (method) => {\n      const transaction = this.createTransaction();\n      transaction.method = method;\n      this.addTransaction(transaction);\n      return transaction;\n    }\n\n    window.updateTransaction = (transaction,hash,status,params) => {\n      // Add meta data to transaction\n      transaction.type = \"contract\";\n      transaction.status = status;\n      transaction.params = params;\n      transaction.transactionHash = hash;\n      this.updateTransaction(transaction);\n      return transaction;\n    }\n  }\n\n  componentDidUpdate = async (prevProps, prevState) => {\n\n    this.loadUtils();\n\n    // this.functionsUtil.customLog('componentDidUpdate',prevProps.connectorName,this.props.connectorName,this.props.context.connectorName,this.props.context.active,(this.props.context.error ? this.props.context.error.message : null));\n\n    if (prevProps.connectorName !== this.props.connectorName && this.props.connectorName){\n      this.initWeb3();\n    } else if ( prevProps.context !== this.props.context ){\n      if (this.props.context.error instanceof Error && this.props.context.error.message.length){\n        const errorMessage = this.props.context.error.message;\n        const isWalletConnectClosedModalError = (errorMessage === 'User closed WalletConnect modal' || errorMessage === 'User closed modal');\n        // this.functionsUtil.customLog('componentDidUpdate',setConnectorName,errorMessage);\n        if (setConnectorName === 'WalletConnect' && isWalletConnectClosedModalError){\n          // this.functionsUtil.customLog('WalletConnect disconnected! Set Infura connector');\n          this.props.setConnector('Infura',null);\n          // this.functionsUtil.removeStoredItem('walletProvider');\n          // this.functionsUtil.removeStoredItem('connectorName');\n          // this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:'Infura'}));\n          setConnectorName = null;\n          // await this.props.context.setConnector('Infura');\n        } else if (!isWalletConnectClosedModalError) {\n          this.openConnectionErrorModal(null,errorMessage);\n        } else {\n          this.initWeb3();\n        }\n      // WalletConnect double trigger initWeb3\n      } else if (this.props.context.active && this.props.context.connectorName!=='WalletConnect' && this.props.connectorName==='WalletConnect') {\n        this.initWeb3();\n      }\n    } else if ( (this.props.context.connectorName && this.props.context.connectorName !== this.props.connectorName) || prevProps.customAddress !== this.props.customAddress){\n      this.initWeb3();\n    }\n\n    const customAddressChanged = prevProps.customAddress !== this.props.customAddress;\n    if (customAddressChanged){\n      this.initAccount();\n    }\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    // const availableTokensChanged = prevProps.availableTokens && this.props.availableTokens && JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n    const availableStrategiesChanged = prevProps.availableStrategies && this.props.availableStrategies && JSON.stringify(Object.keys(prevProps.availableStrategies)) !== JSON.stringify(Object.keys(this.props.availableStrategies));\n\n    // Reset tokenDecimals if token is changed\n    if (tokenChanged){\n      this.setState({\n        tokenDecimals: null\n      });\n    }\n\n    // this.functionsUtil.customLog(prevProps.enableUnderlyingWithdraw,this.props.enableUnderlyingWithdraw,this.state.enableUnderlyingWithdraw);\n    if (prevProps.enableUnderlyingWithdraw !== this.props.enableUnderlyingWithdraw){\n      this.setState({\n        enableUnderlyingWithdraw:this.props.enableUnderlyingWithdraw\n      });\n    }\n\n    if (localStorage){\n      const context = JSON.parse(localStorage.getItem('context'));\n      if (!context || (this.props.context.active !== context.active || this.props.context.connectorName !== context.connectorName)){\n        this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:this.props.context.connectorName}));\n      }\n    }\n\n    if (tokenChanged/* || availableTokensChanged*/ || availableStrategiesChanged){\n      await this.initializeContracts();\n    }\n  }\n\n  // Initialize a web3 provider\n  initWeb3 = async (connectorName=null) => {\n\n    // Detect ethereum provider\n    const metamaskProvider = await detectEthereumProvider();\n    if (metamaskProvider && (!window.ethereum || window.ethereum !== metamaskProvider)){\n      window.ethereum = metamaskProvider;\n    }\n\n    // Suppress console warning\n    if (window.ethereum && window.ethereum.autoRefreshOnNetworkChange) {\n      window.ethereum.autoRefreshOnNetworkChange = false;\n    }\n\n    const context = this.props.context;\n\n    const web3Infura = new Web3(new Web3.providers.HttpProvider(globalConfigs.network.providers.infura[globalConfigs.network.requiredNetwork]+INFURA_KEY));\n\n    let web3 = context.library;\n\n    // 0x Instant Wallet Provider Injection\n    if (!window.RimbleWeb3_context || context.connectorName !== window.RimbleWeb3_context.connectorName){\n      window.RimbleWeb3_context = context;\n    }\n\n    // Reset setConnectorName if force connectorName\n    if (connectorName){\n      setConnectorName = null;\n    } else {\n      connectorName = this.props.connectorName;\n    }\n\n    // const last_context = localStorage ? JSON.parse(localStorage.getItem('context')) : null;\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorName,context.connectorName,context.connector,(web3 && web3.currentProvider ? web3.currentProvider.disable : null),(context.connector ? context.connector.disable : null));\n    if (context && connectorName === 'Infura' && connectorName !== context.connectorName){\n      if (web3 && typeof web3.currentProvider.disable === 'function'){\n        web3.currentProvider.disable();\n      } else if (context.connector && typeof context.connector.disable === 'function'){\n        context.connector.disable();\n      }\n      web3 = null;\n      setConnectorName = null;\n    }\n\n    const connectorNameChanged = (context.connectorName && context.connectorName !== connectorName) || (connectorName !== 'Infura' && connectorName !== setConnectorName);\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorNameChanged,context.connectorName,connectorName,setConnectorName);\n\n    if (!context.active || connectorNameChanged) {\n      // Select preferred web3 provider\n      if (connectorName && connectorNameChanged){\n        // this.functionsUtil.customLog('initWeb3 set connector',connectorName);\n        setConnectorName = connectorName;\n        await context.setConnector(connectorName);\n        // await context.setFirstValidConnector([connectorName, 'Infura']);\n        return web3;\n      }\n      /*\n      else if (setConnectorName){\n        // Catch WalletConnect unexpected disconnect and fallback to Infura\n        if (connectorName === 'WalletConnect' && connectorName === setConnectorName && last_context && last_context.active && last_context.connectorName==='WalletConnect' && !context.connectorName){\n          this.functionsUtil.customLog('WalletConnect disconnected! Set Infura connector');\n          this.props.setConnector('Infura',null);\n          this.functionsUtil.removeStoredItem('walletProvider');\n          this.functionsUtil.removeStoredItem('connectorName');\n          this.functionsUtil.setLocalStorage('context',JSON.stringify({active:context.active,connectorName:context.connectorName}));\n          setConnectorName = null;\n          await context.setConnector('Infura');\n          if (context.connector && typeof context.connector.disable === 'function'){\n            await context.connector.disable();\n          }\n        }\n\n        this.functionsUtil.customLog('initWeb3 skip due to setConnectorName ('+setConnectorName+') already set');\n        return web3;\n      }\n      */\n    }\n    /* else if (context.connectorName === \"WalletConnect\") {\n      if (!context.account) {\n\n        // WalletConnect already opened\n        if (document.getElementById('walletconnect-wrapper')){\n          return web3;\n        }\n\n        WalletConnectQRCodeModal.open(\n          context.connector.walletConnector.uri,\n          async () => {\n            document.getElementById('walletconnect-wrapper').remove();\n            this.props.setConnector('Infura',null);\n            await context.setConnector('Infura');\n            setConnectorName = null;\n          }\n        );\n      } else {\n        try {\n          WalletConnectQRCodeModal.close();\n        } catch {}\n      }\n    // Reset web3 if Infura\n    } */\n    /*\n    else if (context.active && (connectorName === 'Infura' || context.connectorName === \"Infura\")){\n      if (typeof web3.currentProvider.disable === 'function'){\n        await web3.currentProvider.disable();\n      } else if (context.connector && typeof context.connector.disable === 'function'){\n        await context.connector.disable();\n      }\n      web3 = null;\n      setConnectorName = null;\n    }\n    */\n\n    let web3Host = null;\n    let web3Provider = null;\n\n    if (!web3) { // safety web3 implementation\n      if (window.ethereum) {\n        this.functionsUtil.customLog(\"Using modern web3 provider.\");\n        web3Provider = window.ethereum;\n      } else if (window.web3) {\n        this.functionsUtil.customLog(\"Legacy web3 provider. Try updating.\");\n        web3Provider = window.web3;\n      } else {\n        this.functionsUtil.customLog(\"Non-Ethereum browser detected. Using Infura fallback.\");\n        web3Host = globalConfigs.network.providers.infura[globalConfigs.network.requiredNetwork]+INFURA_KEY;\n      }\n    } else {\n      web3Provider = web3.currentProvider;\n    }\n\n    let forceCallback = false;\n\n    if ((!connectorName || connectorName === 'Infura') && web3Provider && typeof web3Provider.enable === 'function'){\n      try {\n        await web3Provider.enable();\n      } catch (connectionError){\n        web3Provider = null;\n        web3Host = globalConfigs.network.providers.infura[globalConfigs.network.requiredNetwork]+INFURA_KEY;\n        forceCallback = true;\n      }\n    }\n\n    const terminalInfo = globalConfigs.network.providers.terminal;\n\n    if (terminalInfo && terminalInfo.enabled && terminalInfo.supportedNetworks.indexOf(globalConfigs.network.requiredNetwork) !== -1 ){\n      const TerminalHttpProviderParams = terminalInfo.params;\n      const terminalSourceType = localStorage && localStorage.getItem('walletProvider') ? localStorage.getItem('walletProvider') : SourceType.Infura;\n      TerminalHttpProviderParams.source = terminalSourceType;\n\n      if (web3Provider){\n        TerminalHttpProviderParams.customHttpProvider = web3Provider;\n      } else if (web3Host){\n        TerminalHttpProviderParams.host = web3Host;\n      }\n\n      const terminalHttpProvider = new TerminalHttpProvider(TerminalHttpProviderParams);\n      web3 = new Web3(terminalHttpProvider);\n    } else {\n      // Injected web3 provider\n      if (web3Provider){\n        web3 = new Web3(web3Provider);\n      // Infura\n      } else if (web3Host) {\n        web3 = new Web3(new Web3.providers.HttpProvider(web3Host));\n        if (connectorName !== 'Infura'){\n          this.props.setConnector('Infura',null);\n        }\n      }\n    }\n\n    const web3Callback = async () => {\n\n      window.web3Injected = this.state.web3;\n      // window.web3InfuraInjected = this.state.web3Infura;\n\n      if (typeof this.props.callbackAfterLogin === 'function'){\n        this.props.callbackAfterLogin();\n        this.props.setCallbackAfterLogin(null);\n      }\n\n      // After setting the web3 provider, check network\n      try {\n        await this.checkNetwork();\n        if (this.state.network.isCorrectNetwork){\n\n          if (!this.state.contractsInitialized){\n            await this.initializeContracts();\n          }\n\n          if (context.account){\n            // Login with biconomy\n            if (this.state.biconomy){\n              const biconomy = this.state.biconomy;\n              const biconomyInfo = globalConfigs.network.providers.biconomy;\n              if (biconomyInfo.enableLogin && !biconomy.isLogin && !biconomyLoginProcessing){\n                biconomyLoginProcessing = true;\n                biconomy.login(context.account, (error, response) => {\n                  // this.functionsUtil.customLog('biconomy login',error,response);\n                  // Failed to login with Biconomy\n                  if (error) {\n                    return this.setState({\n                      biconomy:false,\n                    },() => {\n                      this.initAccount(context.account);\n                    });\n                  }\n\n                  biconomyLoginProcessing = false;\n\n                  if (response.transactionHash) {\n                    this.initAccount(context.account);\n                  } else if(response.userContract) {\n                    this.initAccount(context.account);\n                  }\n                });\n                return false;\n              }\n            }\n\n            await this.initAccount(context.account);\n          } else {\n            await this.setState({\n              accountInizialized: true,\n              account: this.props.customAddress\n            });\n          }\n        }\n      // Initialize Infura Web3 and display error\n      } catch (error) {\n        this.openConnectionErrorModal(null,error.message);\n      }\n    }\n\n    // Save original web3 connector in case Mexa initialization fails\n    const originalWeb3 = web3;\n    const biconomyInfo = globalConfigs.network.providers.biconomy;\n    const walletProvider = this.functionsUtil.getWalletProvider();\n\n    if (connectorName !== 'Infura' && biconomyInfo && biconomyInfo.enabled && biconomyInfo.supportedNetworks.includes(globalConfigs.network.requiredNetwork) && (!walletProvider || !biconomyInfo.disabledWallets.includes(walletProvider.toLowerCase()))){\n\n      if (this.state.biconomy === null){\n        const biconomyWeb3Provider = web3Provider ? web3Provider : web3Host;\n        const biconomy = new Biconomy(biconomyWeb3Provider,biconomyInfo.params);\n\n        if (biconomy && typeof biconomy.onEvent === 'function'){\n          web3 = new Web3(biconomy);\n          biconomy.onEvent(biconomy.READY, () => {\n            if (this.componentUnmounted || this.state.biconomy === false || this.state.biconomy === biconomy){\n              return false;\n            }\n\n            const newState = {\n              web3,\n              biconomy,\n              web3Infura\n            };\n            if (web3 !== this.state.web3){\n              this.setState(newState, web3Callback);\n            }\n          }).onEvent(biconomy.ERROR, (error, message) => {\n            // this.functionsUtil.customLog('Biconomy error',error,message,this.state.biconomy);\n            web3 = originalWeb3;\n            // Handle error while initializing mexa\n            if (this.state.biconomy !== false){\n              this.setState({\n                web3,\n                web3Infura,\n                biconomy:false\n              }, web3Callback);\n            }\n          });\n        } else {\n          this.setState({\n            web3,\n            web3Infura,\n            biconomy:false\n          }, web3Callback);\n        }\n      }\n    } else {\n      if (web3 !== this.state.web3){\n        this.setState({\n          web3,\n          web3Infura,\n        }, web3Callback);\n      } else if (context.account || forceCallback){\n        web3Callback();\n      }\n    }\n\n    return web3;\n  }\n\n  initContract = async (name, address, abi, useInfuraProvider=false) => {\n    this.functionsUtil.customLog(`Init contract: ${name}`);\n    return await this.createContract(name, address, abi, useInfuraProvider);\n  }\n\n  createContract = async (name, address, abi, useInfuraProvider=false) => {\n    this.functionsUtil.customLog(`creating contract ${name} - addr: ${address}`);\n\n    const web3Provider = useInfuraProvider && this.state.web3Infura ? this.state.web3Infura : this.state.web3;\n\n    if (!web3Provider){\n      return null;\n    }\n\n    // Create contract on initialized web3 provider with given abi and address\n    try {\n      const contract = new web3Provider.eth.Contract(abi, address);\n      this.setState(state => ({\n        ...state,\n        contracts: [...state.contracts, {name, contract}]\n      }));\n      return {name, contract};\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Could not create contract.\",name,address,error);\n    }\n\n    return null;\n  }\n\n  initSimpleID = () => {\n\n    if (this.state.simpleID){\n      return this.state.simpleID;\n    }\n\n    const simpleIDInfo = globalConfigs.network.providers.simpleID;\n    let simpleID = null;\n\n    if (simpleIDInfo && simpleIDInfo.enabled && simpleIDInfo.supportedNetworks.indexOf(globalConfigs.network.requiredNetwork) !== -1 ){\n      const simpleIDParams = simpleIDInfo.params;\n      simpleIDParams.network = simpleIDInfo.getNetwork(this.state.network.current.id,globalConfigs.network.availableNetworks);\n      simpleID = new SimpleID(simpleIDParams);\n    }\n\n    window.simpleID = simpleID;\n\n    this.setState({\n      simpleID\n    });\n\n    return simpleID;\n  }\n\n  initAccount = async (account=false) => {\n    \n    const customAddress = this.props.customAddress;\n    const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n\n    if (customAddress){\n      // Set custom account\n      this.setState({\n        account:customAddress,\n        accountInizialized:true,\n      });\n\n      // After account is complete, get the balance\n      this.getAccountBalance();\n\n      return false;\n    }\n\n    try {\n      if (!account){\n        const wallets = await this.state.web3.eth.getAccounts();\n        if (wallets && wallets.length){\n          account = wallets[0];\n        }\n      }\n\n      if (!account || this.state.account === account){\n        this.setState({\n          accountInizialized: true\n        });\n        return false;\n      }\n\n      // Request account access if needed\n      if (account && walletProvider !== 'Infura'){\n\n        if (walletProvider === 'Infura'){\n          this.setState({\n            accountInizialized: true,\n            account:this.props.customAddress\n          });\n          return false;\n        }\n\n        // Send address info to SimpleID\n        const simpleID = this.initSimpleID();\n\n        if (simpleID){\n\n          const notifications = await simpleID.notifications();\n\n          if (notifications && notifications.length && window.$crisp){\n\n            let shownNotifications = [];\n            if (localStorage){\n              shownNotifications = localStorage.getItem('shownNotifications') && JSON.parse(localStorage.getItem('shownNotifications')) ? JSON.parse(localStorage.getItem('shownNotifications')) : [];\n            }\n\n            notifications.forEach((n,i) => {\n\n              const notificationId = n.name;\n\n              // Show notification if not shown already\n              if (shownNotifications.indexOf(notificationId) === -1){\n                window.$crisp.push([\"do\", \"message:show\", [\"text\", this.functionsUtil.normalizeSimpleIDNotification(n.content) ]]);\n\n                // Save notification id\n                shownNotifications.push(notificationId);\n              }\n            });\n\n            // Store shown notification\n            if (localStorage){\n              this.functionsUtil.setLocalStorage('shownNotifications',JSON.stringify(shownNotifications));\n            }\n          }\n        }\n\n        // Send Google Analytics connection event\n        this.functionsUtil.sendGoogleAnalyticsEvent({\n          eventCategory: 'Connect',\n          eventAction: 'connected',\n          eventLabel: walletProvider\n        });\n\n        /*\n        // Unsubscribes to all subscriptions\n        if (this.state.web3SocketProvider && typeof this.state.web3SocketProvider.clearSubscriptions === 'function'){\n          this.functionsUtil.customLog('Clear all web3SocketProvider subscriptions');\n          this.state.web3SocketProvider.clearSubscriptions();\n        }\n\n        const networkName = globalConfigs.network.availableNetworks[globalConfigs.network.requiredNetwork].toLowerCase();\n        const web3SocketProvider = new Web3(new Web3.providers.WebsocketProvider(`wss://${networkName}.infura.io/ws/v3/${INFURA_KEY}`));\n\n        // Subscribe to logs\n        const addressTopic = '0x00000000000000000000000'+account.toLowerCase().replace('x','');\n\n        // Subscribe for payment methods\n        const paymentProviders = Object.keys(globalConfigs.payments.providers).filter((providerName,i) => { const providerInfo = globalConfigs.payments.providers[providerName]; return providerInfo.enabled && providerInfo.web3Subscription && providerInfo.web3Subscription.enabled  })\n        if (paymentProviders && paymentProviders.length){\n          paymentProviders.forEach((providerName,i) => {\n            const providerInfo = globalConfigs.payments.providers[providerName];\n\n            this.functionsUtil.customLog(`Subscribe to ${providerName} logs`);\n\n            // Subscribe for deposit transactions\n            web3SocketProvider.eth.subscribe('logs', {\n                address: [account,providerInfo.web3Subscription.contractAddress],\n                topics: [null,[addressTopic]]\n            }, function(error, result){\n              \n            })\n            .on(\"data\", async (log) => {\n              this.functionsUtil.customLog(providerName,'logs',log);\n\n              if (log){\n                const txHash = log.transactionHash;\n                const subscribedTransactions = this.state.subscribedTransactions;\n                const walletAddressFound = log.topics.filter((addr,i) => { return addr.toLowerCase().includes(addressTopic); });\n\n                this.functionsUtil.customLog(providerName,txHash,walletAddressFound);\n\n                if (!subscribedTransactions[txHash] && walletAddressFound.length){\n                  const decodedLogs = web3SocketProvider.eth.abi.decodeLog(providerInfo.web3Subscription.decodeLogsData,log.data,log.topics);\n\n                  this.functionsUtil.customLog(providerName,txHash,decodedLogs);\n\n                  if (decodedLogs && decodedLogs._tokenAmount && decodedLogs._tokenAddress && decodedLogs._tokenAddress.toLowerCase() === this.props.tokenConfig.address.toLowerCase()){\n\n                    const receiptCallback = async (tx,decodedLogs) => {\n                      const tokenDecimals = await this.getTokenDecimals();\n                      const tokenAmount = this.functionsUtil.BNify(decodedLogs._tokenAmount);\n                      const tokenAmountFixed = this.functionsUtil.fixTokenDecimals(tokenAmount,tokenDecimals);\n                      const tokenAmountFormatted = parseFloat(tokenAmountFixed.toString()).toFixed(2);\n                      const isProviderTx = tx.from.toLowerCase() === account.toLowerCase() && tx.to.toLowerCase() === providerInfo.web3Subscription.contractAddress.toLowerCase();\n\n                      if (isProviderTx){\n\n                        // Mined\n                        if (tx.blockNumber && tx.status){\n                          // Toast message\n                          window.showToastMessage({\n                            variant:'success',\n                            message:'Deposit completed',\n                            secondaryMessage:`${providerName} sent you ${tokenAmountFormatted} ${this.props.selectedToken}`,\n                          });\n\n                          // Update User Balance\n                          this.getAccountBalance(tokenAmount);\n                        } else {\n                          // Toast message\n                          window.showToastMessage({\n                            variant:'processing',\n                            message:'Deposit pending',\n                            secondaryMessage:`${providerName} is sending ${tokenAmountFormatted} ${this.props.selectedToken}`,\n                          });\n                        }\n                      }\n                    }\n\n                    let checkTransactionReceiptTimeoutID = null;\n\n                    const checkTransactionReceipt = (txHash,decodedLogs) => {\n                      if (checkTransactionReceiptTimeoutID){\n                        window.clearTimeout(checkTransactionReceiptTimeoutID);\n                      }\n                      web3SocketProvider.eth.getTransactionReceipt(txHash,(err,txReceipt)=>{\n                        if (!err){\n                          if (txReceipt){\n                            receiptCallback(txReceipt,decodedLogs);\n                          } else{\n                            checkTransactionReceiptTimeoutID = window.setTimeout(() => { checkTransactionReceipt(txHash,decodedLogs) },3000);\n                          }\n                        }\n                      });\n                    }\n\n                    checkTransactionReceipt(txHash,decodedLogs);\n\n                    subscribedTransactions[txHash] = log;\n                    this.setState({subscribedTransactions});\n                  }\n                }\n              }\n            });\n          })\n        }\n\n        // Subscribe for deposit transactions\n        web3SocketProvider.eth.subscribe('logs', {\n            address: [account,this.props.tokenConfig.address],\n            topics: [null,null,[addressTopic]]\n        }, function(error, result){\n\n        })\n        .on(\"data\", async (log) => {\n          if (log){\n            const txHash = log.transactionHash;\n            const subscribedTransactions = this.state.subscribedTransactions;\n            const walletAddressFound = log.topics.filter((addr,i) => { return addr.toLowerCase().includes(addressTopic); });\n\n            if (!subscribedTransactions[txHash] && walletAddressFound.length){\n              const decodedLogs = web3SocketProvider.eth.abi.decodeLog([\n                {\n                  \"internalType\": \"uint256\",\n                  \"name\": \"_tokenAmount\",\n                  \"type\": \"uint256\"\n                },\n              ],log.data,log.topics);\n\n              if (decodedLogs && decodedLogs._tokenAmount){\n\n                const receiptCallback = async (tx,decodedLogs) => {\n                  const tokenDecimals = await this.getTokenDecimals();\n                  const tokenAmount = this.functionsUtil.BNify(decodedLogs._tokenAmount);\n                  const tokenAmountFixed = this.functionsUtil.fixTokenDecimals(tokenAmount,tokenDecimals);\n                  const tokenAmountFormatted = parseFloat(tokenAmountFixed.toString()).toFixed(2);\n                  const isDepositTokenTx = tx.to.toLowerCase() === this.props.tokenConfig.address.toLowerCase();\n\n                  if (isDepositTokenTx){\n\n                    // Mined\n                    if (tx.blockNumber && tx.status){\n                      // Toast message\n                      window.showToastMessage({\n                        message:'Deposit completed',\n                        secondaryMessage: `${tokenAmountFormatted} ${this.props.selectedToken} has been deposited`,\n                        variant: \"success\",\n                      });\n\n                      // Update User Balance\n                      this.getAccountBalance(tokenAmount);\n                    } else {\n                      // Toast message\n                      window.showToastMessage({\n                        message:'Deposit pending',\n                        secondaryMessage: `${tokenAmountFormatted} ${this.props.selectedToken} are on the way`,\n                        variant: \"processing\",\n                      });\n                    }\n                  }\n                }\n\n                let checkTransactionReceiptTimeoutID = null;\n\n                const checkTransactionReceipt = (txHash,decodedLogs) => {\n                  if (checkTransactionReceiptTimeoutID){\n                    window.clearTimeout(checkTransactionReceiptTimeoutID);\n                  }\n                  web3SocketProvider.eth.getTransactionReceipt(txHash,(err,txReceipt)=>{\n                    if (!err){\n                      if (txReceipt){\n                        receiptCallback(txReceipt,decodedLogs);\n                      } else{\n                        checkTransactionReceiptTimeoutID = window.setTimeout(() => { checkTransactionReceipt(txHash,decodedLogs) },3000);\n                      }\n                    }\n                  });\n                }\n\n                checkTransactionReceipt(txHash,decodedLogs);\n\n                subscribedTransactions[txHash] = log;\n                this.setState({subscribedTransactions});\n              }\n            }\n          }\n        })\n        .on(\"changed\", log => {\n          \n        });\n        */\n\n        // this.functionsUtil.customLog('initAccount',account);\n\n        // Set custom account\n        this.setState({\n          account,\n          // web3SocketProvider,\n          accountInizialized: true\n        });\n\n        // After account is complete, get the balance\n        this.getAccountBalance();\n\n        // TODO subscribe for account changes, no polling\n        // set a state flag which indicates if the subscribe handler has been\n        // called at least once\n      }\n    } catch (error) {\n\n      this.setState({\n        accountInizialized: true\n      });\n\n      // User denied account access...\n      this.functionsUtil.customLog(\"User cancelled connect request. Error:\", error);\n\n      // this.functionsUtil.customLog(error);\n\n      // Catch ledger error\n      if (error && error.message && error.message.includes('MULTIPLE_OPEN_CONNECTIONS_DISALLOWED')) {\n        return;\n      }\n\n      // Send Sentry connection error\n      const isError = error instanceof Error;\n      if (this.functionsUtil.checkUrlOrigin() && isError){\n        Sentry.captureException(error);\n      }\n\n      // Reject Connect\n      // this.rejectAccountConnect(error);\n    }\n  }\n\n  // TODO: Can this be moved/combined?\n  rejectAccountConnect = error => {\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  getAccountBalance = async (increaseAmount) => {\n\n    increaseAmount = increaseAmount ? this.functionsUtil.BNify(increaseAmount) : null;\n\n    try {\n\n      let [accountBalance,accountBalanceToken,tokenDecimals] = await Promise.all([\n        this.state.web3.eth.getBalance(this.state.account), // Get ETH balance\n        this.getTokenBalance(this.state.account), // Get token balance\n        this.getTokenDecimals()\n      ]);\n\n      if (accountBalance) {\n\n        // Convert to wei if decimals found\n        if (accountBalance.toString().includes('.')){\n          accountBalance = this.state.web3.utils.toWei(accountBalance);\n        }\n\n        // Convert to Eth amount\n        accountBalance = this.state.web3.utils.fromWei(\n          accountBalance,\n          'ether'\n        );\n\n        accountBalance = this.functionsUtil.BNify(accountBalance).toString();\n\n        this.setState({\n          accountBalance\n        });\n\n        this.functionsUtil.customLog(\"account balance: \", accountBalance);\n      }\n\n      // this.functionsUtil.customLog('accountBalance',res,(accountBalanceToken ? accountBalanceToken.toString() : null),tokenDecimals,increaseAmount);\n\n      if (accountBalanceToken) {\n\n        accountBalanceToken = this.functionsUtil.BNify(accountBalanceToken);\n\n        // Increase balance amount if passed and balance didn't change\n        if (increaseAmount && this.state.accountBalanceToken && this.functionsUtil.normalizeTokenAmount(this.state.accountBalanceToken,tokenDecimals).toString() === accountBalanceToken.toString()){\n          accountBalanceToken = accountBalanceToken.plus(increaseAmount);\n        }\n        \n        accountBalanceToken = this.functionsUtil.fixTokenDecimals(accountBalanceToken,tokenDecimals).toString();\n\n        // this.functionsUtil.customLog('increaseAmount',(increaseAmount ? increaseAmount.toString() : '0'),(this.state.accountBalanceToken ? this.state.accountBalanceToken.toString() : '0'),(accountBalanceToken ? accountBalanceToken.toString() : 'ERROR'));\n        // this.functionsUtil.customLog(`account balance ${this.props.selectedToken}: `, accountBalanceToken);\n\n        this.setState({\n          accountBalanceToken,\n          [`accountBalance${this.props.selectedToken}`]:accountBalanceToken\n        });\n\n      } else {\n        this.functionsUtil.customLog('accountBalanceToken is not set:',accountBalanceToken);\n      }\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Failed to get account balance.\", error);\n    }\n  }\n\n  initializeContracts = async () => {\n\n    const contracts = this.functionsUtil.getGlobalConfig(['contracts']);\n    await this.functionsUtil.asyncForEach(Object.keys(contracts),async (contractName) => {\n      const contractInfo = contracts[contractName];\n      if (contractInfo.address !== null && contractInfo.abi !== null){\n        this.functionsUtil.customLog('initializeContracts, init contract', contractName, contractInfo.address);\n        await this.initContract(contractName, contractInfo.address, contractInfo.abi);\n      }\n    });\n\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    await this.functionsUtil.asyncForEach(Object.keys(govTokens),async (token) => {\n      const govTokenConfig = govTokens[token];\n      if (!govTokenConfig.enabled){\n        return;\n      }\n      // Initialize govToken contracts\n      let foundGovTokenContract = this.state.contracts.find(c => c.name === token);\n      if (!foundGovTokenContract) {\n        this.functionsUtil.customLog('initializeContracts, init contract', token, govTokenConfig.address);\n        await this.initContract(token, govTokenConfig.address, govTokenConfig.abi);\n      }\n    });\n\n    if (this.props.availableStrategies){\n      // Initialize Tokens Contracts\n      await this.functionsUtil.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n        \n        const availableTokens = this.props.availableStrategies[strategy];\n\n        await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          let foundTokenContract = this.state.contracts.find(c => c.name === token);\n          if (!foundTokenContract) {\n            this.functionsUtil.customLog('initializeContracts, init contract',token, tokenConfig.address);\n            await this.initContract(token, tokenConfig.address, tokenConfig.abi);\n          }\n\n          // Initialize idleTokens contracts\n          let foundIdleTokenContract = this.state.contracts.find(c => c.name === tokenConfig.idle.token);\n          if (!foundIdleTokenContract) {\n            this.functionsUtil.customLog('initializeContracts, init contract',tokenConfig.idle.token, tokenConfig.idle.address);\n            await this.initContract(tokenConfig.idle.token, tokenConfig.idle.address, tokenConfig.idle.abi);\n          }\n\n          // Initialize protocols contracts\n          tokenConfig.protocols.forEach(async (p,i) => {\n            let foundProtocolContract = this.state.contracts.find(c => c.name === p.token);\n            if (!foundProtocolContract) {\n              this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n              await this.initContract(p.token, p.address, p.abi);\n            }\n          });\n\n          // Check migration contract\n          if (tokenConfig.migration){\n\n            if (tokenConfig.migration.oldContract){\n              const oldContract = tokenConfig.migration.oldContract;\n              this.functionsUtil.customLog('initializeContracts, init '+oldContract.name+' contract',oldContract);\n              await this.initContract(oldContract.name, oldContract.address, oldContract.abi);\n            }\n\n            // Initialize protocols contracts\n            if (tokenConfig.migration.oldProtocols){\n              tokenConfig.migration.oldProtocols.forEach(async (p,i) => {\n                let foundProtocolContract = this.state.contracts.find(c => c.name === p.token);\n                if (!foundProtocolContract) {\n                  this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n                  await this.initContract(p.token, p.address, p.abi);\n                }\n              });\n            }\n\n            if (tokenConfig.migration.migrationContract){\n              const migrationContract = tokenConfig.migration.migrationContract;\n              this.functionsUtil.customLog('initializeContracts, init '+migrationContract.name+' contract',migrationContract);\n              await this.initContract(migrationContract.name, migrationContract.address, migrationContract.abi);\n            }\n          }\n        })\n      });\n    }\n\n    return this.setState({\n      contractsInitialized:true\n    });\n  }\n\n  getContractByName = async (contractName) => {\n    let contract = this.state.contracts.find(c => c.name === contractName);\n\n    if (!contract && this.props.tokenConfig) {\n      const tokenConfig = this.props.tokenConfig;\n      contract = await this.initContract(contractName, tokenConfig.address, tokenConfig.abi);\n    }\n\n    return contract ? contract.contract : null;\n  }\n\n  getTokenDecimals = async () => {\n    let tokenDecimals = null;\n\n    if (!this.state.tokenDecimals){\n\n      tokenDecimals = await this.functionsUtil.getTokenDecimals(this.props.selectedToken);\n\n      this.setState({\n        tokenDecimals\n      });\n    } else {\n      tokenDecimals = await (new Promise( async (resolve, reject) => {\n        resolve(this.state.tokenDecimals);\n      }));\n    }\n\n    return tokenDecimals;\n  }\n\n  getTokenBalance = async (account) => {\n    const contract = await this.getContractByName(this.props.selectedToken);\n\n    if (!contract) {\n      this.functionsUtil.customLogError('Wrong contract name', this.props.selectedToken);\n      return null;\n    }\n\n    if (!contract.methods['balanceOf']){\n      this.customLogError('Wrong method name balanceOf');\n      return null;\n    }\n\n    return await contract.methods.balanceOf(account).call().catch(error => {\n      this.functionsUtil.customLog(`Failed to get ${this.props.selectedToken} balance`, error);\n    });\n  }\n\n  determineAccountLowBalance = () => {\n    // If provided a minimum from config then use it, else default to 1\n    const accountBalanceMinimum =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.accountBalanceMinimum !== \"undefined\"\n        ? this.props.config.accountBalanceMinimum\n        : 1;\n    // Determine if the account balance is low\n    const accountBalanceLow =\n      this.state.accountBalance < accountBalanceMinimum;\n\n    this.setState({\n      accountBalanceLow\n    });\n  }\n\n  connectAndValidateAccount = async (callbackAfterLogin) => {\n    // Check for account\n    if (!this.state.account) {\n      this.props.setCallbackAfterLogin(callbackAfterLogin);\n      // Show modal to connect account\n      this.openConnectionModal();\n    }\n  }\n\n  getRequiredNetwork = () => {\n\n    const networkId =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.requiredNetwork !== \"undefined\"\n        ? this.props.config.requiredNetwork\n        : globalConfigs.network.requiredNetwork;\n\n    let networkName = globalConfigs.network.availableNetworks[networkId] ? globalConfigs.network.availableNetworks[networkId] : 'unknown';\n\n    let requiredNetwork = {\n      name: networkName,\n      id: networkId\n    };\n\n    let network = { ...this.state.network };\n    network.required = requiredNetwork;\n\n    this.setState({ network });\n  }\n\n  getNetworkId = async () => {\n    try {\n      return this.state.web3.eth.net.getId((error, networkId) => {\n        let current = { ...this.state.network.current };\n        current.id = networkId;\n        let network = { ...this.state.network };\n        network.current = current;\n        this.setState({ network });\n      });\n    } catch (error) {\n      this.functionsUtil.customLog(\"Could not get network ID: \", error);\n    }\n  }\n\n  getNetworkName = async () => {\n    try {\n      return this.state.web3.eth.net.getNetworkType((error, networkName) => {\n        let current = { ...this.state.network.current };\n        current.name = networkName;\n        let network = { ...this.state.network };\n        network.current = current;\n        this.setState({ network });\n      });\n    } catch (error) {\n      this.functionsUtil.customLog(\"Could not get network Name: \", error);\n    }\n  }\n\n  checkNetwork = async () => {\n    this.getRequiredNetwork();\n\n    await Promise.all([\n      this.getNetworkId(),\n      this.getNetworkName()\n    ]);\n\n    let network = { ...this.state.network };\n    network.isCorrectNetwork = this.state.network.current.id === this.state.network.required.id;\n\n    // console.log('checkNetwork',this.state.network.current.id,this.state.network.required.id);\n\n    // To do, check window.web3.currentProvider.networkVersion to see if Metamask is in the requiredNetwork\n\n    this.setState({ network });\n  }\n\n  contractMethodSendWrapper = async (contractName, contractMethod, params = [], value = null, callback = null, callback_receipt = null, gasLimit = null, txData = null) => {\n    // Is it on the correct network?\n    if (!this.state.network.isCorrectNetwork) {\n      // wrong network modal\n      this.state.modals.methods.openWrongNetworkModal();\n      return false;\n    }\n\n    // Is a wallet connected and verified?\n    if (!this.state.account) {\n      this.openConnectionModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_not_connected');\n      }\n      return false;\n    }\n\n    // Are there a minimum amount of funds?\n    if (this.state.accountBalanceLow) {\n      this.openLowFundsModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_balance_low');\n      }\n      return false;\n    }\n\n    // Is the contract loaded?\n\n    // Create new tx and add to collection\n    // Maybe this needs to get moved out of the wrapper?\n    let transaction = this.createTransaction(txData);\n    transaction.method = contractMethod;\n\n    this.addTransaction(transaction);\n\n    // Add meta data to transaction\n    transaction.type = \"contract\";\n    transaction.status = \"started\";\n    transaction.params = params;\n\n    // Show toast for starting transaction\n    this.updateTransaction(transaction);\n\n    const { account, contracts } = this.state;\n    let contract = contracts.find(c => c.name === contractName);\n    if (!contract) {\n      if (typeof callback === 'function') {\n        callback(null,'contract_not_found');\n      }\n      return this.functionsUtil.customLog(`No contract with name ${contractName}`);\n    }\n\n    contract = contract.contract;\n\n    // Does the method exists?\n    // if (typeof contract.methods[contractMethod] === 'undefined'){\n    //   return false;\n    // }\n\n    let manualConfirmationTimeoutId = null;\n\n    try {\n\n      if (!value){\n        value = this.functionsUtil.BNify(0);\n      }\n\n      this.functionsUtil.customLog('contractMethodSendWrapper',contractName,contract._address,account,contractMethod,params,(value ? { from: account, value } : { from: account }));\n\n      // estimate gas price\n      let gas = await contract.methods[contractMethod](...params)\n        .estimateGas(value ? { from: account, value } : { from: account })\n        .catch(e => console.error(e));\n\n      if (gas) {\n\n        gas = this.functionsUtil.BNify(gas);\n        gas = gas.plus(gas.times(this.functionsUtil.BNify('0.2'))); // Increase 20% of enstimation\n\n        // Check if gas is under the gasLimit param\n        if (gasLimit && gas.lt(this.functionsUtil.BNify(gasLimit))){\n          gas = this.functionsUtil.BNify(gasLimit);\n        }\n\n        // Convert gasLimit toBN with web3 utils\n        gas = this.state.web3.utils.toBN(gas.integerValue(BigNumber.ROUND_FLOOR));\n      }\n\n      const confirmationCallback = (confirmationNumber, receipt) => {\n\n        // this.functionsUtil.customLog('confirmationCallback', confirmationNumber, receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // this.functionsUtil.customLog('txOnConfirmation', receipt);\n        // Update confirmation count on each subsequent confirmation that's received\n        transaction.confirmationCount += 1;\n\n        const call_callback = !globalConfigs.network.isForked && typeof callback === 'function' && transaction.confirmationCount===1;\n\n        // How many confirmations should be received before informing the user\n        const confidenceThreshold = this.props.config.requiredConfirmations || 1;\n\n        if (transaction.confirmationCount === 1) {\n          // Initial confirmation receipt\n          transaction.status = \"confirmed\";\n        } else if (transaction.confirmationCount < confidenceThreshold) {\n          // Not enough confirmations to match threshold\n        }\n\n        if (transaction.confirmationCount === confidenceThreshold) {\n          // Confirmations match threshold\n          // Check the status from result since we are confident in the result\n          if (receipt.status) {\n            transaction.status = \"success\";\n          } else if (!receipt.status) {\n            transaction.status = \"error\";\n          }\n        } else if (transaction.confirmationCount > confidenceThreshold) {\n          // Confidence threshold met\n        }\n\n\n        if (call_callback){\n          // Update transaction with receipt details\n          if (receipt){\n            transaction.txReceipt = receipt;\n          }\n          transaction.recentEvent = \"confirmation\";\n          this.updateTransaction(transaction);\n          \n          callback(transaction);\n\n          this.functionsUtil.customLog('Confirmed', confirmationNumber, receipt, transaction);\n        }\n      };\n\n      const manualConfirmation = (transactionHash,timeout) => {\n        if (!transactionHash){\n          return false;\n        }\n        this.state.web3.eth.getTransactionReceipt(transactionHash,(err,txReceipt) => {\n          if (txReceipt && txReceipt.status){\n            this.functionsUtil.customLog('Tx manualConfirmation', txReceipt);\n            confirmationCallback(1,txReceipt);\n          } else {\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(transactionHash,timeout) , timeout);\n          }\n        });\n      };\n\n      const receiptCallback = receipt => {\n\n        // this.functionsUtil.customLog('txOnReceipt', receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // Received receipt, met total number of confirmations\n        if (receipt){\n          transaction.txReceipt = receipt;\n        }\n        transaction.recentEvent = \"receipt\";\n\n        // If the network is forked use the receipt for confirmation\n        if (globalConfigs.network.isForked){\n          transaction.status = \"success\";\n          if (typeof callback === 'function') {\n            callback(transaction);\n          }\n        } else {\n          this.updateTransaction(transaction);\n\n          // Transaction mined, wait for manual confirmation\n          if (receipt.status){\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(receipt.transactionHash,4000), 2000);\n          }\n        }\n      };\n\n      // const networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n      // const common = { customChain:{ chainId: 1, networkId } };\n\n      return contract.methods[contractMethod](...params)\n        .send(value ? { from: account, value, gas } : { from: account, gas })\n        .on(\"transactionHash\", hash => {\n          this.functionsUtil.customLog('txOnTransactionHash', hash);\n\n          if (!hash){\n            this.functionsUtil.customLog('Skip transactionHash due to hash empty', hash);\n            return false;\n          }\n\n          transaction.transactionHash = hash;\n          transaction.status = \"pending\";\n          transaction.recentEvent = \"transactionHash\";\n          this.updateTransaction(transaction);\n\n          if (callback_receipt){\n            callback_receipt(transaction);\n          }\n\n          // Wait for manual confirmation only for mobile\n          if (this.props.isMobile){\n            if (manualConfirmationTimeoutId){\n              window.clearTimeout(manualConfirmationTimeoutId);\n            }\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(hash,60000), 20000);\n          }\n        })\n        .on(\"receipt\", receiptCallback)\n        .on(\"confirmation\", confirmationCallback)\n        .on(\"error\", error => {\n\n          console.log('Tx error',error);\n          \n          const isDeniedTx = error && error.message && typeof error.message.includes === 'function' ? error.message.includes('User denied transaction signature') : false;\n          \n          // Set error on transaction\n          transaction.status = \"error\";\n          transaction.recentEvent = \"error\";\n          this.updateTransaction(transaction);\n\n\n          // Show ToastProvider\n          if (!isDeniedTx){\n            window.toastProvider.addMessage(\"Something went wrong\", {\n              icon: 'Block',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n              colorTheme: 'light',\n              secondaryMessage: \"Please retry\",\n            });\n\n            const isError = error instanceof Error;\n\n            if (typeof error.message !== 'undefined'){\n              this.openTransactionErrorModal(null,error.message);\n            } else if (this.functionsUtil.checkUrlOrigin() && isError){\n              Sentry.captureException(error);\n            }\n          }\n\n          if (typeof callback === 'function') {\n            callback(transaction,error);\n          }\n        });\n    } catch (error) {\n\n      console.log('Tx catch error',error);\n\n      transaction.status = \"error\";\n      this.updateTransaction(transaction);\n\n      // TODO: should this be a custom error? What is the error here?\n      // TODO: determine how to handle error messages globally\n      window.toastProvider.addMessage(\"Something went really wrong, we are sorry\", {\n        icon: 'Block',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"failure\",\n        colorTheme: 'light',\n        secondaryMessage: \"Try refreshing the page :(\",\n      });\n\n      const isDeniedTx = error && error.message ? error.message.includes('User denied transaction signature') : false;\n\n      const isError = error instanceof Error;\n      if ( this.functionsUtil.checkUrlOrigin() && isError && !isDeniedTx){\n        Sentry.captureException(error);\n      }\n\n      if (typeof callback === 'function') {\n        // this.functionsUtil.customLog('Tx Failed',error,transaction,typeof callback);\n        callback(transaction,error);\n      }\n\n      return false;\n    }\n  }\n\n  // Create tx\n  createTransaction = (txData=null) => {\n    let transaction = {\n      ...txData\n    };\n    transaction.txReceipt = {};\n    transaction.created = Date.now();\n    transaction.confirmationCount = 0;\n    transaction.status = \"initialized\";\n    transaction.lastUpdated = Date.now();\n    transaction.token = this.props.selectedToken;\n    transaction.strategy = this.props.selectedStrategy;\n    transaction.networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    return transaction;\n  }\n\n  addTransaction = transaction => {\n    const transactions = { ...this.state.transactions };\n    transactions[`tx${transaction.created}`] = transaction;\n    this.setState({ transactions });\n  }\n\n  // Add/update transaction in state\n  updateTransaction = updatedTransaction => {\n    const transactions = { ...this.state.transactions };\n    const transaction = { ...updatedTransaction };\n    transaction.lastUpdated = Date.now();\n    transactions[`tx${updatedTransaction.created}`] = transaction;\n    this.setState({ transactions });\n\n    // this.functionsUtil.customLog('updateTransaction',transactions);\n\n    // Save transactions in localStorage only if pending or succeeded\n    // console.log('updateTransaction',transaction.transactionHash,transaction.status.toLowerCase());\n    if (transaction.transactionHash){\n      // Clear cached data\n      this.functionsUtil.clearCachedData();\n\n      // Store transaction\n      this.functionsUtil.addStoredTransaction(`tx${transaction.created}`,transaction);\n    }\n\n    return transaction;\n  }\n\n  // CONNECTION MODAL METHODS\n  closeConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = false;\n    // this.functionsUtil.customLog(\"this.state\", this.state);\n    this.setState({ modals });\n  }\n\n  openConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = true;\n    this.setState({ modals: modals });\n  }\n\n  closeConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    this.setState({ modals });\n  }\n\n  openConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = true;\n    modals.data.transactionConnectionModalIsOpen = false;\n    modals.data.connectionModalIsOpen = false;\n\n    this.setState({ modals });\n  }\n\n  closeTransactionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = false;\n    this.setState({ modals });\n  }\n\n  openTransactionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = error;\n\n    this.setState({ modals });\n  }\n\n  closeConnectionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionError = false;\n    this.setState({ modals });\n  }\n\n  openConnectionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n\n    // Handle generic error\n    if (error==='[object Object]'){\n      error = 'Unable to access to the wallet.'\n    }\n\n    // this.functionsUtil.customLog('openConnectionErrorModal',typeof error,typeof error === 'object' ? JSON.stringify(error) : error);\n\n    modals.data.connectionError = error;\n\n    this.setState({ modals });\n  }\n\n  closeUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = false;\n    this.setState({ modals });\n  }\n\n  openUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  closeNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  state = {\n    web3: null,\n    context:null,\n    account: null,\n    contracts: [],\n    biconomy: null,\n    simpleID: null,\n    web3Infura:null,\n    transactions: {},\n    CrispClient: null,\n    tokenDecimals:null,\n    accountBalance: null,\n    web3Subscription: null,\n    accountValidated: null,\n    accountBalanceDAI: null,\n    initWeb3: this.initWeb3,\n    accountBalanceLow: null,\n    accountInizialized:false,\n    subscribedTransactions:{},\n    contractsInitialized:false,\n    initAccount: this.initAccount,\n    accountValidationPending: null,\n    initSimpleID: this.initSimpleID,\n    initContract: this.initContract,\n    checkPreflight: this.checkPreflight,\n    validateAccount: this.validateAccount,\n    rejectValidation: this.rejectValidation,\n    getTokenDecimals: this.getTokenDecimals,\n    getAccountBalance: this.getAccountBalance,\n    initializeContracts: this.initializeContracts,\n    rejectAccountConnect: this.rejectAccountConnect,\n    contractMethodSendWrapper: this.contractMethodSendWrapper,\n    connectAndValidateAccount: this.connectAndValidateAccount,\n    enableUnderlyingWithdraw: this.props.enableUnderlyingWithdraw,\n    network: {\n      current: {},\n      required: {},\n      isCorrectNetwork: null,\n      checkNetwork: this.checkNetwork\n    },\n    modals: {\n      data: {\n        connectionError: null,\n        lowFundsModalIsOpen: null,\n        userRejectedConnect: null,\n        connectionModalIsOpen: null,\n        userRejectedValidation: null,\n        wrongNetworkModalIsOpen: null,\n        accountConnectionPending: null,\n        accountValidationPending: null,\n        transactionConnectionModalIsOpen: null,\n        noWalletModalIsOpen: this.noWalletModalIsOpen,\n        noWeb3BrowserModalIsOpen: this.noWeb3BrowserModalIsOpen,\n      },\n      methods: {\n        openLowFundsModal: this.openLowFundsModal,\n        openNoWalletModal: this.openNoWalletModal,\n        closeNoWalletModal: this.closeNoWalletModal,\n        closeLowFundsModal: this.closeLowFundsModal,\n        openConnectionModal: this.openConnectionModal,\n        closeConnectionModal: this.closeConnectionModal,\n        openWrongNetworkModal: this.openWrongNetworkModal,\n        closeWrongNetworkModal: this.closeWrongNetworkModal,\n        openNoWeb3BrowserModal: this.openNoWeb3BrowserModal,\n        closeNoWeb3BrowserModal: this.closeNoWeb3BrowserModal,\n        openConnectionErrorModal: this.openConnectionErrorModal,\n        closeConnectionErrorModal: this.closeConnectionErrorModal,\n        openTransactionErrorModal: this.openTransactionErrorModal,\n        closeTransactionErrorModal: this.closeTransactionErrorModal,\n        openConnectionPendingModal: this.openConnectionPendingModal,\n        closeConnectionPendingModal: this.closeConnectionPendingModal,\n        openUserRejectedValidationModal: this.openUserRejectedValidationModal,\n        openUserRejectedConnectionModal: this.openUserRejectedConnectionModal,\n        closeUserRejectedValidationModal: this.closeUserRejectedValidationModal,\n        closeUserRejectedConnectionModal: this.closeUserRejectedConnectionModal,\n      }\n    },\n    transaction: {\n      data: {\n        transactions: null\n      },\n      meta: {},\n      methods: {}\n    }\n  }\n\n  render() {\n    const connectionErrorModalOpened = typeof this.state.modals.data.connectionError === 'string' && this.state.modals.data.connectionError.length>0;\n    const transactionErrorModalOpened = typeof this.state.modals.data.transactionError === 'string' && this.state.modals.data.transactionError.length>0;\n    return (\n      <div>\n        <RimbleTransactionContext.Provider\n          {...this.props}\n          value={this.state}\n        />\n        <ConnectionModalUtil\n          {...this.props}\n          modals={this.state.modals}\n          network={this.state.network}\n          account={this.state.account}\n          isMobile={this.props.isMobile}\n          initAccount={this.state.initAccount}\n          setConnector={this.props.setConnector}\n          validateAccount={this.state.validateAccount}\n          accountValidated={this.state.accountValidated}\n          accountConnectionPending={this.state.accountConnectionPending}\n          accountValidationPending={this.state.accountValidationPending}\n        />\n        <TransactionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={transactionErrorModalOpened}\n        />\n        <ConnectionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={connectionErrorModalOpened}\n          setConnector={this.props.setConnector}\n        />\n        <NetworkUtil\n          web3={this.state.web3}\n          theme={this.props.theme}\n          network={this.state.network}\n        />\n      </div>\n    );\n  }\n}\n\nexport default RimbleTransaction;\n","import React from \"react\";\nimport ExtLink from '../../ExtLink/ExtLink';\nimport FunctionsUtil from '../FunctionsUtil';\nimport { Box, Flex, Image, Text, Link, Icon } from \"rimble-ui\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass Header extends React.Component {\n  state = {\n\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidMount() {\n\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n\n    this.loadUtils();\n\n    if (this.props.network && !this.props.network.isCorrectNetwork){\n      return false;\n    }\n  }\n\n  render() {\n\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n\n    return (\n      <Box\n        style={{\n          left: '0',\n          right: '0',\n          zIndex: 99,\n          position: 'absolute',\n        }}\n      >\n        <Flex\n          p={2}\n          alignItems={'center'}\n          justifyContent={'center'}\n          backgroundColor={'dark-blue'}\n          flexDirection={['column','row']}\n        >\n          <Text\n            color={'white'}\n            textAlign={'center'}\n          >\n            IDLE Governance Token is now live!\n          </Text>\n          <ExtLink\n            pr={2}\n            py={1}\n            mt={[1,0]}\n            ml={[0,2]}\n            pl={'12px'}\n            color={'white'}\n            style={{\n              display:'flex',\n              borderRadius:'8px',\n              flexDirection:'row',\n              alignItems:'flex-end'\n            }}\n            backgroundColor={'#0037ff'}\n            href={'https://idlefinance.medium.com/idle-governance-is-live-9b55e8f407d7'}\n          >\n            Read More\n            <Icon\n              ml={1}\n              size={'1.3em'}\n              color={'white'}\n              name={'KeyboardArrowRight'}\n            >\n            </Icon>\n          </ExtLink>\n        </Flex>\n        <Flex\n          pt={[3,4]}\n          mx={'auto'}\n          bg={\"transparent\"}\n          width={['98%','100%']}\n          maxWidth={['100%','100em']}\n          alignItems={['center','flex-start']}\n        >\n          <Flex\n            ml={[3, 5]}\n            width={[0.5, 3/12]}\n          >\n            <RouterLink\n              to=\"/\"\n            >\n              <Image\n                position={'relative'}\n                src={'images/logo.svg'}\n                height={['35px','48px']}\n              />\n            </RouterLink>\n          </Flex>\n            <Flex\n              width={[0.5,8/12]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={\"flex-end\"}\n            >\n              {\n                governanceEnabled && \n                  <Link\n                    mr={4}\n                    fontSize={3}\n                    color={'white'}\n                    hoverColor={'white'}\n                    fontFamily={'sansSerif'}\n                    textAlign={['center','left']}\n                    onClick={ (e) => window.location.hash='#/governance' }\n                  >\n                    Governance\n                  </Link>\n              }\n              {\n                !this.props.isMobile &&\n                  <>\n                    <Link\n                      mr={4}\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('contacts').offsetTop,300)}}\n                    >\n                      Contact Us\n                    </Link>\n                    <Link\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('faq').offsetTop,300)}}\n                    >\n                      FAQs\n                    </Link>\n                  </>\n              }\n            </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default Header;\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}","import Footer from '../Footer/Footer';\nimport React, { Component } from 'react';\nimport styles from './PageNotFound.module.scss';\nimport { Box, Flex, Heading, Button } from 'rimble-ui'\nimport Header_styles from '../utilities/components/Header.module.scss';\nimport {\n  Link as RouterLink,\n} from \"react-router-dom\";\n\nclass PageNotFound extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.3em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                This page doesn't exist!\n              </Heading.h1>\n              <Heading.h3 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.6em'} fontWeight={2} fontSize={['1.5em',4]} textAlign={'center'} color={'white'}>\n                Sorry, the page you are looking for cannot be found.\n              </Heading.h3>\n              <RouterLink to=\"/\" style={{textDecoration:'none'}}>\n                <Button\n                  className={Header_styles.gradientButton}\n                  borderRadius={4}\n                  size={this.props.isMobile ? 'medium' : 'medium'}\n                  mainColor={'blue'}\n                  contrastColor={'white'}\n                  fontWeight={3}\n                  fontSize={[2,2]}\n                  mx={'auto'}\n                  px={[4,5]}\n                  mt={2}\n                >\n                  GO TO HOMEPAGE\n                </Button>\n              </RouterLink>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default PageNotFound;\n","import React from \"react\";\nimport { Box, Flex, Text } from \"rimble-ui\";\n\nclass NetworkOverview extends React.Component {\n  getNetworkCircleColor = () => {\n    let circleColor = \"#333\";\n    if (this.props.network) {\n      switch (this.props.network.id) {\n        case 1:\n          circleColor = \"#56b3ae\";\n          break;\n        case 2:\n          circleColor = \"#000\";\n          break;\n        case 3:\n          circleColor = \"#ed5a8d\";\n          break;\n        case 4:\n          circleColor = \"#efc35c\";\n          break;\n        case 42:\n          circleColor = \"#6a5ff6\";\n          break;\n        default:\n          circleColor = \"#ccc\";\n      }\n    }\n\n    return circleColor;\n  };\n\n  render() {\n    const networkCircle = {\n      borderRadius: \"50%\",\n      backgroundColor: this.getNetworkCircleColor(),\n      height: \"1em\",\n      width: \"1em\"\n    };\n\n    return (\n      <Flex alignItems={\"center\"}>\n        <Box style={networkCircle} mr={2} />\n        <Text style={{ textTransform: \"capitalize\" }}>\n          {this.props.network.name}\n        </Text>\n      </Flex>\n    );\n  }\n}\n\nexport default NetworkOverview;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Flex,\n  ToastMessage,\n  Box,\n  Button,\n  Link\n} from \"rimble-ui\";\nimport NetworkOverview from \"../utilities/components/NetworkOverview\";\n\nconst DebuggerButtons = props => (\n  <Box mt={4} borderTop={1} borderColor=\"#E8E8E8\" pt={3}>\n    <Heading.h4 textAlign={\"center\"}>Show Modal</Heading.h4>\n    <Button\n      onClick={props.modals.methods.openWrongNetworkModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Blocking Wrong Network\n    </Button>\n\n    <Button\n      onClick={props.modals.methods.openConnectionModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Connection\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openConnectionPendingModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Pending\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openUserRejectedConnectionModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Rejected\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={event => {\n        props.modals.methods.openLowFundsModal(event);\n      }}\n      mr={2}\n      mb={2}\n    >\n      Low Funds\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWeb3BrowserModal}\n      mr={2}\n      mb={2}\n    >\n      Not Web3 Browser\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWalletModal}\n      mr={2}\n      mb={2}\n    >\n      No Wallet\n    </Button>\n  </Box>\n);\n\nclass Web3Debugger extends React.Component {\n  render() {\n    return (\n      <Card width={\"600px\"} mx={\"auto\"} px={4}>\n        <Heading.h3 textAlign={\"center\"}>Get Connected</Heading.h3>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            <Icon name=\"Check\" color={\"green\"} mr={2} />\n            <Text>Modern & Web3 Capable Browser</Text>\n          </Flex>\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.web3 ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Browser-connected Wallet</Text>\n          </Flex>\n\n          {!this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">You do not have a wallet.</Text>\n              </Flex>\n\n              <Link\n                href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                <Button.Outline size=\"small\">\n                  Get MetaMask Extension\n                </Button.Outline>\n              </Link>\n            </Flex>\n          ) : null}\n        </Box>\n\n        {this.props.web3 ? (\n          <Flex\n            py={3}\n            my={3}\n            borderTop={1}\n            borderBottom={1}\n            borderColor={\"#E8E8E8\"}\n            textAlign={\"center\"}\n            justifyContent={\"space-around\"}\n            alignItems={\"center\"}\n          >\n            <Button\n              size=\"small\"\n              onClick={this.props.connectAndValidateAccount}\n              disabled={!this.props.web3}\n            >\n              Connect and verify\n            </Button>\n            <Text>- or -</Text>\n            <Button size=\"small\" disabled>\n              Initiate On-Chain Action\n            </Button>\n          </Flex>\n        ) : null}\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.network.isCorrectNetwork ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Correct Network</Text>\n          </Flex>\n\n          {this.props.web3 && !this.props.network.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Box>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Current network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.current} />\n                  </Flex>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Required network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.required} />\n                  </Flex>\n                </Box>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.checkNetwork}>\n                Check Network\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.web3 && this.props.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <NetworkOverview network={this.props.network.current} />\n            </Flex>\n          ) : null}\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.account && this.props.accountValidated ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Wallet connected and verified</Text>\n          </Flex>\n\n          {!this.props.account &&\n          this.props.web3 &&\n          !this.props.userRejectedConnect ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Not connected to this dApp.</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.account && this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n              <Box>\n                <Text color=\"#999\">Connected wallet {this.props.account}</Text>\n                <Text color={this.props.accountBalanceLow ? \"red\" : \"#999\"}>\n                  Account balance {this.props.accountBalance}\n                </Text>\n              </Box>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedConnect ? (\n            <Flex ml={4} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">User rejected Connect request</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {(this.props.accountValidated === null ||\n            this.props.accountValidated === false) &&\n          this.props.web3 ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.accountValidated === false ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedValidation === false ? (\n            <Flex ml={4}>\n              <Icon name=\"Error\" mr={2} color=\"red\" />\n              <Text color=\"red\">Account not verified</Text>\n            </Flex>\n          ) : null}\n        </Box>\n\n        <DebuggerButtons {...this.props} />\n\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </Card>\n    );\n  }\n}\n\nexport default Web3Debugger;\n","const address = '0xf5dce57282a584d2746faf1593d3121fcac444dc'; // mainnet\nconst abi = [\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"name\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x06fdde03\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"approve\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x095ea7b3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"reserveFactorMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x173b9904\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x17bfdfbc\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalSupply\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x18160ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"exchangeRateStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x182df0f5\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"src\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transferFrom\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x23b872dd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"pendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x26782247\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"decimals\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x313ce567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOfUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3af9e669\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"getCash\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3b1d21a2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setComptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x4576b5db\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalBorrows\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x47bd3718\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"comptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x5fe3b567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_reduceReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x601a0bf1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"initialExchangeRateMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x675d972c\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"accrualBlockNumber\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6c540baf\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"underlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6f307dc3\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x70a08231\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"totalBorrowsCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x73acee98\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x8f840ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"symbol\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95d89b41\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95dd9193\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"accrueInterest\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa6afed95\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transfer\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa9059cbb\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowIndex\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xaa5af0fd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"supplyRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xae9d70b0\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"seize\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb2a02ff1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setPendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb71d1a0c\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"exchangeRateCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xbd6d894d\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"getAccountSnapshot\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc37f68e2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"allowance\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdd62ed3e\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"_acceptAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xe9c714f2\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setInterestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf2b3abbd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"interestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf3fdb15a\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"admin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf851a440\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf8f9da28\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_setReserveFactor\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfca7820b\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"isCToken\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfe9c44ae\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"name\": \"underlying_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"comptroller_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"interestRateModel_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"initialExchangeRateMantissa_\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"name_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"symbol_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"decimals_\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"constructor\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"interestAccumulated\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowIndex\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"AccrueInterest\",\n    \"signature\": \"0x875352fb3fadeb8c0be7cbbe8ff761b308fa7033470cd0287f02f3436fd76cb9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"minter\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Mint\",\n    \"signature\": \"0x4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"redeemer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Redeem\",\n    \"signature\": \"0xe5b754fb1abb7f01b499791d0b820ae3b6af3424ac1c59768edb53f4ec31a929\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Borrow\",\n    \"signature\": \"0x13ed6866d4e1ee6da46f845c46d7e54120883d75c5ea9a2dacc1c4ca8984ab80\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"payer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"RepayBorrow\",\n    \"signature\": \"0x1a2a22cb034d26d1854bdc6666a5b91fe25efbbb5dcad3b0355478d6f5c362a1\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"LiquidateBorrow\",\n    \"signature\": \"0x298637f684da70674f26509b10f07ec2fbc77a335ab1e7d6215a4b2484d8bb52\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldPendingAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewPendingAdmin\",\n    \"signature\": \"0xca4f2f25d0898edd99413412fb94012f9e54ec8142f9b093e7720646a95b16a9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewAdmin\",\n    \"signature\": \"0xf9ffabca9c8276e99321725bcb43fb076a6c66a54b7f21c4e8146d8519b417dc\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldComptroller\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewComptroller\",\n    \"signature\": \"0x7ac369dbd14fa5ea3f473ed67cc9d598964a77501540ba6751eb0b3decf5870d\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldInterestRateModel\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewMarketInterestRateModel\",\n    \"signature\": \"0xedffc32e068c7c95dfd4bdfd5c4d939a084d6b11c4199eac8436ed234d72f926\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"NewReserveFactor\",\n    \"signature\": \"0xaaa68312e2ea9d50e16af5068410ab56e1a1fd06037b1a35664812c30f821460\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"admin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newTotalReserves\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"ReservesReduced\",\n    \"signature\": \"0x3bad0c59cf2f06e7314077049f48a93578cd16f5ef92329f1dab1420a99c177e\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"error\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"info\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"detail\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Failure\",\n    \"signature\": \"0x45b96fe442630264581b197e84bbada861235052c5a1aadfff9ea4e40a969aa0\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Transfer\",\n    \"signature\": \"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Approval\",\n    \"signature\": \"0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\",\n    \"type\": \"event\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"mint\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa0712d68\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeem\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdb006a75\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeemUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x852a12e3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"borrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc5ebeaec\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x0e752702\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrowBehalf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x2608f818\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"liquidateBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf5e3c462\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }\n];\nexport default { address, abi };\n","const address = '0x5592EC0cfb4dbc12D3aB100b257153436a1f0FEa'; // rinkeby\nconst abi = [{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"stop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"name_\",\"type\":\"bytes32\"}],\"name\":\"setName\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stopped\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"authority_\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"push\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"move\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"start\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"pull\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"symbol_\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"LogSetAuthority\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"LogSetOwner\",\"type\":\"event\"},{\"anonymous\":true,\"inputs\":[{\"indexed\":true,\"name\":\"sig\",\"type\":\"bytes4\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"foo\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"bar\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"fax\",\"type\":\"bytes\"}],\"name\":\"LogNote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}];\nexport default { address, abi };\n","import DAI from '../abis/tokens/DAI.json';\nimport CHAI from '../abis/chai/CHAI.json';\nimport cToken from '../abis/compound/cDAI';\nimport WETH from '../abis/tokens/WETH.json';\nimport USDC from '../abis/tokens/USDC.json';\nimport ERC20 from '../abis/tokens/ERC20.js';\nimport aToken from '../abis/aave/AToken.json';\nimport yToken from '../abis/dydx/yToken.json';\nimport iToken from '../abis/fulcrum/iToken.json';\nimport IdleTokenV3 from '../contracts/IdleTokenV3.json';\nimport IdleTokenV4 from '../contracts/IdleTokenV4.json';\nimport IdleConverterPersonalSignV4 from '../contracts/IdleConverterPersonalSignV4.json';\n\nconst availableTokens = {\n  42:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x4f96fe3b7a6cf9725f59d353f723c1bdb64ca6aa',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x295CA5bC5153698162dDbcE5dF50E436a58BA21e',\n        },\n        protocols:[\n          {\n            decimals:28,\n            token:'cDAI',\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xf0d0eb522cfa50b716b3b1604c4f0fa6f04376ad',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        token:'USDC',\n        decimals:6,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xb7a4f3e9097c08da09517b5ab877f7a917224ede',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        ramp:{\n          swapAsset:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x0de23D3bc385a74E2196cfE827C8a640B8774B9f',\n        },\n        protocols:[\n          {\n            decimals:16,\n            enabled:true,\n            token:'cUSDC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4a92e71227d294f041bd82dd8f78591b75140d63',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n    },\n  },\n  1337:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            token:'idleDAI',\n            abi:IdleConverterPersonalSignV4,\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            enabled:false,\n            name:'fulcrum',\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:CHAI,\n            name:'dsr',\n            enabled:true,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:yToken,\n            name:'dydx',\n            enabled:true,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        abi:USDC,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols:[\n            {\n              abi:yToken,\n              name:'dydx',\n              enabled:true,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      WETH:{\n        abi:WETH,\n        token:'WETH',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WETH'\n        },\n        ramp:{\n          swapAsset:'WETH'\n        },\n        defiPrime:{\n          token:'weth'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWETHYield',\n          address:'0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token:'cETH',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            address:'0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token:'aWETH',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n    }\n  },\n  1:{ // Mainnet\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            token:'idleDAI',\n            abi:IdleConverterPersonalSignV4,\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            enabled:false,\n            name:'fulcrum',\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            address:'0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token:'aDAIv2',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:CHAI,\n            name:'dsr',\n            enabled:true,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:yToken,\n            name:'dydx',\n            enabled:true,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols:[\n            {\n              abi:yToken,\n              name:'dydx',\n              enabled:true,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            enabled:true,\n            name:'aavev2',\n            token:'aUSDCv2',\n            address:'0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTYield',\n          address:'0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTYieldV3',\n            address:'0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDT',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            name:'aavev2',\n            enabled:true,\n            token:'aUSDTv2',\n            address:'0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      SUSD:{\n        decimals:18,\n        token:'SUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address:'0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre:{\n          destCurrency:'SUSD'\n        },\n        defiPrime:{\n          token:'susd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleSUSDYield',\n          address:'0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleSUSD',\n            name:'idleSUSDYieldV3',\n            address:'0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleSUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x625aE63000f46200499120B906716420bd059240',\n            token:'aSUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'aavev2',\n            enabled:true,\n            abi:aToken,\n            address:'0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token:'aSUSDv2',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      TUSD:{\n        decimals:18,\n        token:'TUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(217, 100%, 20%)',\n        address:'0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre:{\n          destCurrency:'TUSD'\n        },\n        defiPrime:{\n          token:'tusd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleTUSDYield',\n          address:'0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleTUSD',\n            name:'idleTUSDYieldV3',\n            address:'0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleTUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token:'aTUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            enabled:true,\n            name:'aavev2',\n            token:'aTUSDv2',\n            address:'0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      WETH:{\n        abi:WETH,\n        token:'WETH',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WETH'\n        },\n        ramp:{\n          swapAsset:'WETH'\n        },\n        defiPrime:{\n          token:'weth'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWETHYield',\n          address:'0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token:'cETH',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            address:'0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token:'aWETH',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      WBTC:{\n        decimals:8,\n        token:'WBTC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(29, 81%, 59%)',\n        address:'0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WBTC'\n        },\n        defiPrime:{\n          token:'wbtc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWBTCYield',\n          address:'0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleWBTC',\n            name:'idleWBTCYieldV3',\n            address:'0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleWBTC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            token:'cWBTC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xc11b1268c1a384e55c48c2391d8d480264a3a7f4',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            decimals:18,\n            token:'iWBTC',\n            enabled:false,\n            name:'fulcrum',\n            address:'0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            token:'aWBTC',\n            address:'0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            enabled:true,\n            name:'aavev2',\n            token:'aWBTCv2',\n            address:'0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      }\n    },\n    risk:{\n      DAI:{\n        abi:DAI,\n        decimals:18,\n        token:'DAI',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAISafe',\n          address:'0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAISafeV3',\n            address:'0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dsr',\n            enabled:true,\n            abi:CHAI,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCSafe',\n          address:'0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCSafeV3',\n            address:'0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTSafe',\n          address:'0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTSafeV3',\n            address:'0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      }\n    }\n  }\n};\n\nexport default availableTokens;","const TransactionToastMessages = {\n    initialized: {\n      message: \"{action} request initialized\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    started: {\n      message: \"{action} request submitted\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    pending: {\n      message: \"Processing {action} request...\",\n      secondaryMessage: \"This may take a few minutes\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: \"InfoOutline\"\n    },\n    confirmed: {\n      message: \"First block confirmed\",\n      secondaryMessage: \"Your {action} request is in progress\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: 'CheckCircle'\n    },\n    success: {\n      message: \"{action} request completed\",\n      variant: \"success\",\n      icon: 'CheckCircle'\n    },\n    error: {\n      message: \"{action} request failed\",\n      secondaryMessage: \"Could not complete transaction.\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"failure\",\n      icon: \"Block\"\n    }\n  };\n\n  export default TransactionToastMessages;\n","import React from \"react\";\nimport { ToastMessage } from \"rimble-ui\";\nimport TransactionToastMessages from \"./TransactionToastMessages\";\n\nclass TransactionToastUtil extends React.Component {\n  // Determines if collections are same size\n  collectionHasNewObject = (prevCollection, currentCollection) => {\n    return (\n      typeof prevCollection === \"undefined\" ||\n      Object.keys(prevCollection).length !==\n        Object.keys(currentCollection).length\n    );\n  };\n\n  // Returns object from currentCollection that doesn't exist in prevCollection\n  getNewObjectFromCollection = (prevCollection, currentCollection) => {\n    if (typeof prevCollection !== \"undefined\") {\n      const objectKey = Object.keys(currentCollection).filter(key => {\n        return !Object.keys(prevCollection).includes(key);\n      });\n      return currentCollection[objectKey];\n    } else {\n      return Object.keys(currentCollection).map(key => {\n        return currentCollection[key];\n      });\n    }\n  };\n\n  // Compare two collections of objects, return single object from current collection that differs from prev collection\n  getUpdatedObjectFromCollection = (prevCollection, currentCollection) => {\n    const updatedTransaction = Object.keys(prevCollection)\n      .map(key => {\n        if (\n          prevCollection[key].lastUpdated !== currentCollection[key].lastUpdated\n        ) {\n          return currentCollection[key];\n        } else {\n          return null;\n        }\n      })\n      .filter(object => object !== null);\n    return updatedTransaction[0];\n  };\n\n  // Returns an transaction from a collection based on a given identifier\n  getTransactionFromCollection = (identifier, collection) => {\n    const object = collection[`tx${identifier}`];\n    return object;\n  };\n\n  // Returns either a new object or finds an updated object in a collection against a previous collection\n  getUpdatedTransaction = (prevCollection, currentCollection) => {\n    let tx = null;\n    let currentTx = {};\n    let prevTx = {};\n\n    if (this.collectionHasNewObject(prevCollection, currentCollection)) {\n      tx = this.getNewObjectFromCollection(prevCollection, currentCollection);\n    } else {\n      currentTx = this.getUpdatedObjectFromCollection(\n        prevCollection,\n        currentCollection\n      );\n      if (currentTx) {\n        prevTx = this.getTransactionFromCollection(\n          currentTx.created,\n          prevCollection\n        );\n      } else {\n        return false;\n      }\n\n      if (currentTx.status !== prevTx.status) {\n        tx = currentTx;\n      }\n    }\n    return tx;\n  };\n\n  // Check for updates to the transactions collection\n  processTransactionUpdates = prevProps => {\n    let tx = null;\n    if (Object.keys(this.props.transactions).length) {\n      tx = this.getUpdatedTransaction(\n        prevProps.transactions,\n        this.props.transactions\n      );\n    }\n\n    if (tx) {\n      this.showTransactionToast(tx);\n    }\n  };\n\n  showTransactionToast = transaction => {\n    // console.log(\"showTransactionToast: \", { ...transaction });\n    // Get text info for toast\n    let toastMeta = this.getTransactionToastMeta(transaction);\n    toastMeta.colorTheme = this.props.themeMode;\n    toastMeta.closeElem = true;\n    // console.log('toastMeta',toastMeta);\n\n    // Show toast\n    window.toastProvider.addMessage(\".\", toastMeta);\n  };\n\n  getTransactionToastMeta = transaction => {\n    let transactionToastMeta = {};\n    let status = transaction.status;\n\n    switch (status) {\n      case \"initialized\":\n        transactionToastMeta = TransactionToastMessages.initialized;\n        break;\n      case \"started\":\n        transactionToastMeta = TransactionToastMessages.started;\n        break;\n      case \"pending\":\n        transactionToastMeta = TransactionToastMessages.pending;\n        break;\n      case \"confirmed\":\n        transactionToastMeta = TransactionToastMessages.confirmed;\n        break;\n      case \"success\":\n        transactionToastMeta = TransactionToastMessages.success;\n        break;\n      case \"error\":\n        transactionToastMeta = TransactionToastMessages.error;\n        break;\n      default:\n        // do nothing\n        break;\n    }\n\n    let transactionAction = '';\n    switch (transaction.method){\n      case 'redeemIdleToken':\n        transactionAction = 'Redeem';\n      break;\n      case 'redeemGovTokens':\n        transactionAction = 'Redeem (Gov Tokens)';\n      break;\n      case 'mintIdleToken':\n      case 'mintIdleTokensProxy':\n        transactionAction = 'Lending';\n      break;\n      case 'migrateFromToIdle':\n      case 'migrateFromCompoundToIdle':\n      case 'migrateFromFulcrumToIdle':\n      case 'migrateFromAaveToIdle':\n      case 'migrateFromIearnToIdle':\n      case 'bridgeIdleV1ToIdleV2':\n        transactionAction = 'Migration';\n      break;\n      case 'executeMetaTransaction':\n        transactionAction = 'Meta-Tx';\n      break;\n      case 'approve':\n        transactionAction = 'Approve';\n      break;\n      case 'rebalance':\n        transactionAction = 'Rebalance';\n      break;\n      default:\n        transactionAction = transaction.method.charAt(0).toUpperCase() + transaction.method.substr(1);\n      break;\n    }\n\n    transactionToastMeta = JSON.parse(JSON.stringify(transactionToastMeta));\n\n    let newMessage = transactionToastMeta.message.replace('{action}',transactionAction);\n    newMessage = newMessage.charAt(0).toUpperCase() + newMessage.slice(1);\n    transactionToastMeta.message = newMessage;\n    transactionToastMeta.closeElem = true;\n    transactionToastMeta.colorTheme = this.props.themeMode;\n\n    return transactionToastMeta;\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    this.processTransactionUpdates(prevProps);\n  }\n\n  render() {\n    return (\n      <div>\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </div>\n    );\n  }\n}\n\nexport default TransactionToastUtil;\n","import Web3 from \"web3\";\nimport jQuery from 'jquery';\nimport theme from \"../theme\";\nimport Tos from \"../Tos/Tos\";\nimport themeDark from \"../theme-dark\";\nimport connectors from './connectors';\nimport Web3Provider from 'web3-react';\nimport { Web3Consumer } from 'web3-react';\nimport CookieConsent from \"react-cookie-consent\";\nimport RimbleWeb3 from \"../utilities/RimbleWeb3\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport React, { Component, Suspense } from \"react\";\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport Header from \"../utilities/components/Header\";\nimport globalConfigs from '../configs/globalConfigs';\nimport ScrollToTop from \"../ScrollToTop/ScrollToTop\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport PageNotFound from \"../PageNotFound/PageNotFound\";\nimport Web3Debugger from \"../Web3Debugger/Web3Debugger\";\nimport availableTokens from '../configs/availableTokens';\nimport TransactionToastUtil from \"../utilities/TransactionToastUtil\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { ThemeProvider, Box, Text, Link, Image, Flex } from 'rimble-ui';\n\n// Lazy Loading\nconst Landing = React.lazy(() => import(\"../Landing/Landing\"));\nconst Dashboard = React.lazy(() => import('../Dashboard/Dashboard'));\nconst Governance = React.lazy(() => import('../Governance/Governance'));\n\nclass App extends Component {\n  state = {\n    cachedData:{},\n    buyToken: null,\n    selectedTab: '1',\n    route: \"default\", // or 'onboarding'\n    themeMode:'light',\n    connecting: false,\n    tokenConfig: null,\n    genericError: null,\n    customAddress: null,\n    connectorName: null,\n    selectedToken: null,\n    selectedTheme:theme,\n    currentSection:null,\n    walletProvider: null,\n    availableTokens: null,\n    buyModalOpened: false,\n    selectedStrategy: null,\n    toastMessageProps: null,\n    callbackAfterLogin: null,\n    width: window.innerWidth,\n    availableStrategies: null,\n    height: window.innerHeight,\n    unsubscribeFromHistory: null,\n    enableUnderlyingWithdraw: false,\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  closeToastMessage = (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    this.setState({\n      toastMessageProps:null\n    });\n  }\n\n  showToastMessage = (props) => {\n    this.setState({\n      toastMessageProps:props\n    });\n  }\n\n  processCustomParam = (props,prevProps) => {\n    // const params = props ? props.match.params : null;\n    // const prevParams = prevProps ? prevProps.match.params : null;\n\n    // Reset params\n    /*\n    if ( prevParams && params && prevParams.customParam !== params.customParam && (!params || !params.customParam || params.customParam === undefined)){\n      this.setState({\n        customAddress:null,\n        enableUnderlyingWithdraw:false\n      });\n    } else if (params && typeof params.customParam === 'string') {\n      // Check if custom address\n      if (params.customParam.toLowerCase().match(/0x[\\w]{40}/) && this.state.customAddress !== params.customParam){\n        this.setCustomAddress(params.customParam);\n      } else if (params && params.customParam === 'withdraw' && !this.state.enableUnderlyingWithdraw){\n        this.setState({\n          customAddress:null,\n          enableUnderlyingWithdraw:true\n        });\n      }\n    }\n    */\n  }\n\n  clearCachedData = () => {\n    this.functionsUtil.setLocalStorage('cachedData',{},true);\n    this.setState({\n      cachedData:{}\n    });\n    return true;\n  }\n\n  setCachedData = (key,data,TTL=null,useLocalStorage=false) => {\n\n    key = key.toLowerCase();\n    const cachedKeyFound = this.state.cachedData[key];\n    const currentTime = parseInt(Date.now()/1000);\n\n    const update_key = !cachedKeyFound || ( (!cachedKeyFound.expirationDate || cachedKeyFound.expirationDate>=currentTime) || JSON.stringify(cachedKeyFound.data) !== JSON.stringify(data));\n\n    let output = false;\n\n    if (update_key){\n      const expirationDate = TTL ? currentTime+(TTL) : null;\n\n      // Save cached data in local storage\n      if (useLocalStorage){\n        let storedCachedData = this.functionsUtil.getStoredItem('cachedData');\n        if (!storedCachedData){\n          storedCachedData = {};\n        }\n        storedCachedData = {\n          ...storedCachedData,\n          [key]:{\n            data,\n            expirationDate\n          }\n        };\n        // console.log('STORED CACHE - INSERT KEY',key,data);\n        this.functionsUtil.setLocalStorage('cachedData',storedCachedData,true);\n      }\n\n      // Set new cached data state\n      this.setState((prevState) => ({\n        cachedData: {\n          ...prevState.cachedData,\n          [key]:{\n            data,\n            expirationDate\n          }\n        }\n      }));\n\n      output = true;\n    }\n\n    return output;\n  }\n\n  setCallbackAfterLogin = (callbackAfterLogin) => {\n    this.setState({\n      callbackAfterLogin\n    });\n  }\n\n  setCustomAddress = (customAddress) => {\n    // Reset customAddress if not well formatted\n    if (customAddress && !customAddress.toLowerCase().match(/0x[\\w]{40}/)){\n      customAddress = null;\n    }\n\n    if (customAddress !== this.state.customAddress){\n      this.setState({\n        customAddress,\n        enableUnderlyingWithdraw:false\n      });\n    }\n  }\n\n  async selectTab(e, tabIndex) {\n    return this.setState(state => ({...state, selectedTab: tabIndex}));\n  }\n\n  async loadAvailableTokens() {\n    const newState = {};\n    const availableStrategies = {};\n    const requiredNetwork = globalConfigs.network.requiredNetwork;\n\n    // Load available strategies\n    Object.keys(availableTokens[requiredNetwork]).forEach((strategy) => {\n      availableStrategies[strategy] = availableTokens[requiredNetwork][strategy];\n    });\n\n    newState.availableStrategies = availableStrategies;\n\n    // Load strategy\n    const selectedStrategy = this.state.selectedStrategy;\n    if (selectedStrategy && this.state.availableStrategies[selectedStrategy]){\n      newState.availableTokens = this.state.availableStrategies[selectedStrategy];\n\n      // Load token\n      const selectedToken = this.state.selectedToken;\n      if (selectedToken && newState.availableTokens[selectedToken]){\n        newState.tokenConfig = newState.availableTokens[selectedToken];\n      }\n    }\n\n    // console.log('loadAvailableTokens',newState);\n\n    await this.setState(newState);\n  }\n\n  async setStrategyToken(selectedStrategy,selectedToken){\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    const newState = {\n      tokenConfig:!selectedToken ? null : this.state.tokenConfig,\n      availableTokens:!selectedToken ? null : this.state.availableTokens,\n      selectedToken:!selectedToken ? selectedToken :this.state.selectedToken,\n      selectedStrategy:!selectedStrategy ? selectedStrategy :this.state.selectedStrategy,\n    };\n\n    if (selectedStrategy && this.state.availableStrategies && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())){\n      newState.selectedStrategy = selectedStrategy.toLowerCase();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken) {\n      if ( this.state.availableTokens && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase()) ){\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableTokens[selectedToken];\n      } else if (this.state.availableStrategies && Object.keys(this.state.availableStrategies[selectedStrategy]).includes(selectedToken.toUpperCase())) {\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableStrategies[selectedStrategy][newState.selectedToken];\n        newState.availableTokens = this.state.availableStrategies[selectedStrategy];\n      }\n    }\n\n    // console.log('setStrategyToken',newState);\n\n    await this.setState(newState,callback);\n  }\n\n  async setStrategy(selectedStrategy) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedStrategy && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())){\n      selectedStrategy = selectedStrategy.toLowerCase();\n      await this.setState({\n        selectedStrategy\n      },callback);\n    } else if (!selectedStrategy) {\n      await this.setState({\n        selectedStrategy\n      },callback);\n    }\n  }\n\n  async setToken(selectedToken) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase())){\n      selectedToken = selectedToken.toUpperCase();\n      const newState = {\n        selectedToken\n      };\n      newState.tokenConfig = this.state.availableTokens[selectedToken];\n      await this.setState(newState,callback);\n    } else if(!selectedToken) {\n      await this.setState({\n        selectedToken,\n        tokenConfig:null\n      },callback);\n    }\n  }\n\n  async componentWillMount() {\n\n    this.loadUtils();\n\n    window.BNify = this.functionsUtil.BNify;\n\n    // Suppress warnings and errors in production\n    const isProduction = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n    if (isProduction){\n      window.console.error = () => {};\n      window.console.warn = () => {};\n    }\n\n    window.jQuery = jQuery;\n\n    if (window.localStorage){\n      this.functionsUtil.removeStoredItem('context');\n\n      // Clear all localStorage data except walletProvider and connectorName if version has changed\n      const version = this.functionsUtil.getStoredItem('version',false);\n      if (version !== globalConfigs.version){\n        this.functionsUtil.clearStoredData(['walletProvider','connectorName']);\n        this.functionsUtil.setLocalStorage('version',globalConfigs.version);\n      }\n    }\n\n    const themeMode = this.functionsUtil.getStoredItem('themeMode',false);\n    if (themeMode){\n      this.setThemeMode(themeMode);\n    }\n\n    window.closeIframe = (w) => {\n      const iFrames = document.getElementsByTagName('iframe');\n      for (let i=0;i<iFrames.length;i++){\n        const iframe = iFrames[i];\n        if (iframe.contentWindow === w){\n          window.jQuery(iframe).parents('.iframe-container')[0].remove();\n        }\n      }\n    }\n\n    window.addEventListener('resize', this.handleWindowSizeChange);\n\n    this.loadCustomAddress();\n    this.loadAvailableTokens();\n  }\n\n  loadCustomAddress(){\n    if (!this.state.customAddress){\n      const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n      if (walletProvider === 'custom'){\n        const customAddress = this.functionsUtil.getCustomAddress();\n        if (customAddress && customAddress !== this.state.customAddress){\n          this.setState({\n            customAddress\n          });\n        }\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const currentSectionChanged = prevState.currentSection !== this.state.currentSection;\n    if (currentSectionChanged){\n      if (this.state.currentSection === 'landing'){\n        this.setThemeMode('light',false);\n      } else {\n        // Get stored Mode\n        const themeMode = this.functionsUtil.getStoredItem('themeMode',false) || this.functionsUtil.getGlobalConfig(['dashboard','theme','mode']);\n        this.setThemeMode(themeMode);\n      }\n    }\n\n    const tokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const strategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n\n    if (tokenChanged || strategyChanged){\n      this.loadAvailableTokens();\n    }\n  }\n\n  componentDidMount() {\n\n    // Close iFrame\n    if (window.self !== window.top && window.top.location.href.indexOf(globalConfigs.baseURL) !== -1 && typeof window.parent.closeIframe === 'function' ){\n      window.parent.closeIframe(window.self);\n    }\n\n    window.showToastMessage = this.showToastMessage;\n    window.closeToastMessage = this.closeToastMessage;\n\n    if (localStorage){\n      const connectorName = localStorage.getItem('connectorName') ? localStorage.getItem('connectorName') : 'Infura';\n      const walletProvider = localStorage.getItem('walletProvider') ? localStorage.getItem('walletProvider') : 'Infura';\n\n      this.setConnector(connectorName,walletProvider);\n    }\n  }\n\n  handleWindowSizeChange = () => {\n    const newState = {\n      width:this.state.width,\n      height:this.state.height,\n    };\n\n    const widthChanged = window.innerWidth !== this.state.width;\n    const heightChanged = window.innerHeight !== this.state.height;\n\n    if (widthChanged || heightChanged){\n      if (widthChanged){\n        newState.width = window.innerWidth;\n      }\n      if (heightChanged){\n        newState.height = window.innerHeight;\n      }\n      return this.setState(newState);\n    }\n\n    return null;\n  };\n\n  // Optional parameters to pass into RimbleWeb3\n  config = globalConfigs.network;\n\n  showRoute(route) {\n    return this.setState({ route });\n  }\n\n  closeBuyModal(e) {\n    if (e){\n      e.preventDefault();\n    }\n    return this.setState({\n      buyToken:null,\n      buyModalOpened:false\n    });\n  }\n\n  openBuyModal(e,buyToken) {\n    e.preventDefault();\n\n    return this.setState({\n      buyToken,\n      buyModalOpened:true\n    });\n  }\n\n  async logout(){\n    // Reset Custom Address\n    this.setState({\n      customAddress:null\n    });\n    // Reset Localstorage\n    this.functionsUtil.clearStoredData(['version','themeMode','lastLogin']);\n  }\n\n  setConnector(connectorName,walletProvider){\n\n    let connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n    if (!connectorInfo && walletProvider){\n      connectorInfo = globalConfigs.connectors[walletProvider.toLowerCase()];\n    }\n\n    if ( (connectorInfo && !connectorInfo.enabled) || (connectorName !== 'Injected' && !Object.keys(globalConfigs.connectors).includes(connectorName.toLowerCase())) || (walletProvider && !Object.keys(globalConfigs.connectors).includes(walletProvider.toLowerCase()))) {\n      connectorName = 'Infura';\n      walletProvider = 'Infura';\n    } else if ( connectorName === 'Injected' ){\n      const hasMetamask = GeneralUtil.hasMetaMask();\n      const hasDapper = GeneralUtil.hasDapper()\n\n      // Check if injected connector is valid\n      switch (walletProvider){\n        case 'Metamask':\n          if (!hasMetamask && hasDapper){\n            walletProvider = 'Dapper';\n          }\n        break;\n        case 'Dapper':\n          if (!hasDapper && hasMetamask){\n            walletProvider = 'Metamask';\n          }\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.functionsUtil.setLocalStorage('connectorName', connectorName);\n    this.functionsUtil.setLocalStorage('walletProvider', walletProvider);\n\n    return this.setState({\n      connectorName,\n      walletProvider\n    },() => {\n      this.loadCustomAddress();\n    });\n  }\n\n  setThemeMode(themeMode,store=true){\n    let selectedTheme = null;\n\n    // Check Dark Mode Enabled\n    const darkModeEnabled = this.functionsUtil.getGlobalConfig(['dashboard','theme','darkModeEnabled']);\n    if (themeMode === 'dark' && !darkModeEnabled){\n      themeMode = 'light';\n    }\n\n    switch (themeMode){\n      default:\n      case 'light':\n        selectedTheme = theme;\n      break;\n      case 'dark':\n        selectedTheme = themeDark;\n      break;\n    }\n\n    if (store){\n      this.functionsUtil.setLocalStorage('themeMode',themeMode);\n    }\n\n    this.setState({\n      themeMode,\n      selectedTheme\n    });\n  }\n\n  setCurrentSection(currentSection){\n    this.setState({\n      currentSection\n    });\n  }\n\n  render() {\n    const isMobile = this.state.width <= 768;\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n\n    // console.log(this.state.selectedToken,this.state.tokenConfig);\n\n    const SuspenseLoader = (\n      <Flex\n        width={1}\n        minHeight={'100vh'}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        backgroundColor={'selectBg'}\n      >\n        <FlexLoader\n          textProps={{\n            textSize:4,\n            fontWeight:2\n          }}\n          loaderProps={{\n            mb:3,\n            size:'80px',\n            color:'primary'\n          }}\n          flexProps={{\n            my:3,\n            flexDirection:'column'\n          }}\n          text={''}\n        />\n      </Flex>\n    );\n\n    return (\n      <Router>\n        <ScrollToTop />\n        <ThemeProvider\n          theme={this.state.selectedTheme}\n        >\n          <Web3Provider\n            web3Api={Web3}\n            connectors={connectors}\n            libraryName={'web3.js'}\n          >\n            <Web3Consumer>\n              {context => {\n                return (\n                  <RimbleWeb3\n                    context={context}\n                    isMobile={isMobile}\n                    config={this.config}\n                    connectors={connectors}\n                    theme={this.state.selectedTheme}\n                    cachedData={this.state.cachedData}\n                    tokenConfig={this.state.tokenConfig}\n                    customAddress={this.state.customAddress}\n                    selectedToken={this.state.selectedToken}\n                    connectorName={this.state.connectorName}\n                    walletProvider={this.state.walletProvider}\n                    setConnector={this.setConnector.bind(this)}\n                    availableTokens={this.state.availableTokens}\n                    setCachedData={this.setCachedData.bind(this)}\n                    clearCachedData={this.clearCachedData.bind(this)}\n                    callbackAfterLogin={this.state.callbackAfterLogin}\n                    availableStrategies={this.state.availableStrategies}\n                    setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                    enableUnderlyingWithdraw={this.state.enableUnderlyingWithdraw}\n                  >\n                    <RimbleWeb3.Consumer>\n                      {({\n                        web3,\n                        modals,\n                        network,\n                        account,\n                        initWeb3,\n                        simpleID,\n                        biconomy,\n                        contracts,\n                        transaction,\n                        initAccount,\n                        initContract,\n                        transactions,\n                        initSimpleID,\n                        tokenDecimals,\n                        accountBalance,\n                        needsPreflight,\n                        validateAccount,\n                        rejectValidation,\n                        accountValidated,\n                        getTokenDecimals,\n                        getAccountBalance,\n                        accountBalanceLow,\n                        accountInizialized,\n                        accountBalanceToken,\n                        userRejectedConnect,\n                        initializeContracts,\n                        rejectAccountConnect,\n                        contractsInitialized,\n                        userRejectedValidation,\n                        accountValidationPending,\n                        connectAndValidateAccount,\n                        contractMethodSendWrapper\n                      }) => {\n                        return (\n                        <Box>\n                          <Switch>\n                            <Route\n                              path=\"/dashboard/:section?/:param1?/:param2?\"\n                              render={\n                                (props) => \n                                  <Suspense\n                                    fallback={SuspenseLoader}\n                                  >\n                                    <Dashboard\n                                      {...props}\n                                      web3={web3}\n                                      modals={modals}\n                                      network={network}\n                                      context={context}\n                                      account={account}\n                                      isDashboard={true}\n                                      initWeb3={initWeb3}\n                                      biconomy={biconomy}\n                                      isMobile={isMobile}\n                                      simpleID={simpleID}\n                                      contracts={contracts}\n                                      initAccount={initAccount}\n                                      initSimpleID={initSimpleID}\n                                      initContract={initContract}\n                                      transactions={transactions}\n                                      buyToken={this.state.buyToken}\n                                      logout={this.logout.bind(this)}\n                                      accountBalance={accountBalance}\n                                      themeMode={this.state.themeMode}\n                                      theme={this.state.selectedTheme}\n                                      validateAccount={validateAccount}\n                                      connecting={this.state.connecting}\n                                      cachedData={this.state.cachedData}\n                                      setToken={this.setToken.bind(this)}\n                                      accountValidated={accountValidated}\n                                      getTokenDecimals={getTokenDecimals}\n                                      rejectValidation={rejectValidation}\n                                      tokenConfig={this.state.tokenConfig}\n                                      getAccountBalance={getAccountBalance}\n                                      accountBalanceLow={accountBalanceLow}\n                                      accountInizialized={accountInizialized}\n                                      selectedToken={this.state.selectedToken}\n                                      connectorName={this.state.connectorName}\n                                      setStrategy={this.setStrategy.bind(this)}\n                                      userRejectedConnect={userRejectedConnect}\n                                      accountBalanceToken={accountBalanceToken}\n                                      initializeContracts={initializeContracts}\n                                      walletProvider={this.state.walletProvider}\n                                      buyModalOpened={this.state.buyModalOpened}\n                                      contractsInitialized={contractsInitialized}\n                                      openBuyModal={this.openBuyModal.bind(this)}\n                                      rejectAccountConnect={rejectAccountConnect}\n                                      handleMenuClick={this.selectTab.bind(this)}\n                                      setConnector={this.setConnector.bind(this)}\n                                      setThemeMode={this.setThemeMode.bind(this)}\n                                      availableTokens={this.state.availableTokens}\n                                      closeBuyModal={this.closeBuyModal.bind(this)}\n                                      setCachedData={this.setCachedData.bind(this)}\n                                      selectedStrategy={this.state.selectedStrategy}\n                                      userRejectedValidation={userRejectedValidation}\n                                      clearCachedData={this.clearCachedData.bind(this)}\n                                      setStrategyToken={this.setStrategyToken.bind(this)}\n                                      accountValidationPending={accountValidationPending}\n                                      availableStrategies={this.state.availableStrategies}\n                                      setCurrentSection={this.setCurrentSection.bind(this)}\n                                      connectAndValidateAccount={connectAndValidateAccount}\n                                      contractMethodSendWrapper={contractMethodSendWrapper}\n                                      setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                    />\n                                  </Suspense>\n\n                              }\n                            >\n                            </Route>\n                            {\n                              governanceEnabled && \n                                <Route\n                                  path=\"/governance/:section?/:item_id?\"\n                                  render={\n                                    (props) =>\n                                      <Suspense\n                                        fallback={SuspenseLoader}\n                                      >\n                                        <Governance\n                                          {...props}\n                                          web3={web3}\n                                          modals={modals}\n                                          network={network}\n                                          context={context}\n                                          account={account}\n                                          initWeb3={initWeb3}\n                                          biconomy={biconomy}\n                                          isMobile={isMobile}\n                                          simpleID={simpleID}\n                                          isGovernance={true}\n                                          contracts={contracts}\n                                          initAccount={initAccount}\n                                          initSimpleID={initSimpleID}\n                                          initContract={initContract}\n                                          transactions={transactions}\n                                          buyToken={this.state.buyToken}\n                                          logout={this.logout.bind(this)}\n                                          accountBalance={accountBalance}\n                                          themeMode={this.state.themeMode}\n                                          theme={this.state.selectedTheme}\n                                          validateAccount={validateAccount}\n                                          connecting={this.state.connecting}\n                                          cachedData={this.state.cachedData}\n                                          setToken={this.setToken.bind(this)}\n                                          accountValidated={accountValidated}\n                                          getTokenDecimals={getTokenDecimals}\n                                          rejectValidation={rejectValidation}\n                                          tokenConfig={this.state.tokenConfig}\n                                          getAccountBalance={getAccountBalance}\n                                          accountBalanceLow={accountBalanceLow}\n                                          accountInizialized={accountInizialized}\n                                          selectedToken={this.state.selectedToken}\n                                          connectorName={this.state.connectorName}\n                                          setStrategy={this.setStrategy.bind(this)}\n                                          userRejectedConnect={userRejectedConnect}\n                                          accountBalanceToken={accountBalanceToken}\n                                          initializeContracts={initializeContracts}\n                                          walletProvider={this.state.walletProvider}\n                                          buyModalOpened={this.state.buyModalOpened}\n                                          contractsInitialized={contractsInitialized}\n                                          openBuyModal={this.openBuyModal.bind(this)}\n                                          rejectAccountConnect={rejectAccountConnect}\n                                          handleMenuClick={this.selectTab.bind(this)}\n                                          setConnector={this.setConnector.bind(this)}\n                                          setThemeMode={this.setThemeMode.bind(this)}\n                                          availableTokens={this.state.availableTokens}\n                                          closeBuyModal={this.closeBuyModal.bind(this)}\n                                          setCachedData={this.setCachedData.bind(this)}\n                                          selectedStrategy={this.state.selectedStrategy}\n                                          userRejectedValidation={userRejectedValidation}\n                                          clearCachedData={this.clearCachedData.bind(this)}\n                                          setStrategyToken={this.setStrategyToken.bind(this)}\n                                          accountValidationPending={accountValidationPending}\n                                          availableStrategies={this.state.availableStrategies}\n                                          setCurrentSection={this.setCurrentSection.bind(this)}\n                                          connectAndValidateAccount={connectAndValidateAccount}\n                                          contractMethodSendWrapper={contractMethodSendWrapper}\n                                          setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                        />\n                                      </Suspense>\n                                  }\n                                >\n                                </Route>\n                            }\n                            <Route>\n                              <Header\n                                modals={modals}\n                                network={network}\n                                context={context}\n                                account={account}\n                                initWeb3={initWeb3}\n                                isMobile={isMobile}\n                                contracts={contracts}\n                                initAccount={initAccount}\n                                initContract={initContract}\n                                buyToken={this.state.buyToken}\n                                accountBalance={accountBalance}\n                                logout={this.logout.bind(this)}\n                                validateAccount={validateAccount}\n                                connecting={this.state.connecting}\n                                accountValidated={accountValidated}\n                                getTokenDecimals={getTokenDecimals}\n                                rejectValidation={rejectValidation}\n                                tokenConfig={this.state.tokenConfig}\n                                getAccountBalance={getAccountBalance}\n                                accountBalanceLow={accountBalanceLow}\n                                selectedToken={this.state.selectedToken}\n                                connectorName={this.state.connectorName}\n                                userRejectedConnect={userRejectedConnect}\n                                accountBalanceToken={accountBalanceToken}\n                                walletProvider={this.state.walletProvider}\n                                buyModalOpened={this.state.buyModalOpened}\n                                contractsInitialized={contractsInitialized}\n                                openBuyModal={this.openBuyModal.bind(this)}\n                                rejectAccountConnect={rejectAccountConnect}\n                                handleMenuClick={this.selectTab.bind(this)}\n                                setConnector={this.setConnector.bind(this)}\n                                availableTokens={this.state.availableTokens}\n                                closeBuyModal={this.closeBuyModal.bind(this)}\n                                userRejectedValidation={userRejectedValidation}\n                                accountValidationPending={accountValidationPending}\n                                connectAndValidateAccount={connectAndValidateAccount}\n                                setToken={ e => { this.setToken(e) } }\n                              />\n\n                              {this.state.route === \"onboarding\" ? (\n                                <Web3Debugger\n                                  web3={web3}\n                                  account={account}\n                                  accountBalance={accountBalance}\n                                  accountBalanceToken={accountBalanceToken}\n                                  accountBalanceLow={accountBalanceLow}\n                                  initAccount={initAccount}\n                                  rejectAccountConnect={rejectAccountConnect}\n                                  userRejectedConnect={userRejectedConnect}\n                                  accountValidated={accountValidated}\n                                  accountValidationPending={accountValidationPending}\n                                  rejectValidation={rejectValidation}\n                                  userRejectedValidation={userRejectedValidation}\n                                  validateAccount={validateAccount}\n                                  connectAndValidateAccount={connectAndValidateAccount}\n                                  modals={modals}\n                                  network={network}\n                                  transaction={transaction}\n                                />\n                              ) : null}\n\n                              {this.state.route === \"default\" ? (\n                                <Switch>\n                                  <Route exact path=\"/\"\n                                    render={ (props) =>\n                                      <Suspense\n                                        fallback={SuspenseLoader}\n                                      >\n                                        <Landing\n                                          {...props}\n                                          web3={web3}\n                                          network={network}\n                                          account={account}\n                                          isMobile={isMobile}\n                                          simpleID={simpleID}\n                                          contracts={contracts}\n                                          innerWidth={this.state.width}\n                                          logout={this.logout.bind(this)}\n                                          innerHeight={this.state.height}\n                                          accountBalance={accountBalance}\n                                          themeMode={this.state.themeMode}\n                                          theme={this.state.selectedTheme}\n                                          cachedData={this.state.cachedData}\n                                          connecting={this.state.connecting}\n                                          selectedTab={this.state.selectedTab}\n                                          tokenConfig={this.state.tokenConfig}\n                                          accountBalanceLow={accountBalanceLow}\n                                          getAccountBalance={getAccountBalance}\n                                          customAddress={this.state.customAddress}\n                                          selectedToken={this.state.selectedToken}\n                                          accountBalanceToken={accountBalanceToken}\n                                          closeToastMessage={this.closeToastMessage}\n                                          contractsInitialized={contractsInitialized}\n                                          openBuyModal={this.openBuyModal.bind(this)}\n                                          setThemeMode={this.setThemeMode.bind(this)}\n                                          processCustomParam={this.processCustomParam}\n                                          availableTokens={this.state.availableTokens}\n                                          setCachedData={this.setCachedData.bind(this)}\n                                          updateSelectedTab={this.selectTab.bind(this)}\n                                          toastMessageProps={this.state.toastMessageProps}\n                                          clearCachedData={this.clearCachedData.bind(this)}\n                                          availableStrategies={this.state.availableStrategies}\n                                          setCurrentSection={this.setCurrentSection.bind(this)}\n                                          connectAndValidateAccount={connectAndValidateAccount}\n                                          setToken={ e => { this.setToken(e) } }\n                                        />\n                                        <CookieConsent\n                                          expires={365}\n                                          buttonText={\"Ok\"}\n                                          location={\"bottom\"}\n                                          acceptOnScroll={true}\n                                          cookieName={\"cookieAccepted\"}\n                                          acceptOnScrollPercentage={5}\n                                          style={{background: \"rgba(255,255,255,0.95)\",zIndex:'9999999'}}\n                                          buttonStyle={{display: isMobile ? \"block\" : \"none\", backgroundColor:'#0036ff', color: 'white', marginTop: isMobile ? \"0px\" : \"15px\"}}\n                                        >\n                                          <Flex flexDirection={'row'} alignItems={['flex-start','center']} justifyContent={'flex-start'} maxHeight={['150px','initial']} style={ isMobile ? {overflowY:'scroll'} : null }>\n                                            <Image display={['none','block']} src={'images/cookie.svg'} width={'42px'} height={'42px'} />\n                                            <Text pl={[0,3]} color={'dark-gray'} fontSize={1} textAlign={'justify'}>\n                                              This website or its third-party tools process personal data (e.g. browsing data or IP addresses) and use cookies or other identifiers, which are necessary for its functioning and required to achieve the purposes illustrated in the cookie policy. To learn more, please refer to the <Link href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'} target={'_blank'} rel=\"nofollow noopener noreferrer\" hoverColor={'blue'}>cookie policy</Link>.\n                                              You accept the use of cookies or other identifiers by closing or dismissing this notice, by scrolling this page, by clicking a link or button or by continuing to browse otherwise.\n                                            </Text>\n                                          </Flex>\n                                        </CookieConsent>\n                                      </Suspense>\n                                    }\n                                  ></Route>\n                                  <Route exact path=\"/terms-of-service\">\n                                    <Tos />\n                                  </Route>\n                                  <Route>\n                                    <PageNotFound />\n                                  </Route>\n                                </Switch>\n                              ) : null}\n                            </Route>\n                          </Switch>\n                          <TransactionToastUtil\n                            transactions={transactions}\n                            themeMode={this.state.themeMode}\n                          />\n                        </Box>\n                      )}}\n                    </RimbleWeb3.Consumer>\n                  </RimbleWeb3>\n                );\n              }}\n            </Web3Consumer>\n          </Web3Provider>\n        </ThemeProvider>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport * as Sentry from '@sentry/browser';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\n\nif (window.location.hostname !== 'localhost') {\n  Sentry.init({\n    dsn: \"https://56f5c0bce273442390d7f25698fefe53@sentry.io/1547544\",\n    beforeSend(event, hint) {\n      let output = event;\n      const error = hint.originalException;\n      if (error && error.message){\n        if (error.message.match(/Failed to subscribe to new newBlockHeaders/i)){\n          output = false;\n        }\n      }\n      return output;\n    }\n  });\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TableRow extends Component {\n  render() {\n    const FieldComponent = this.props.fieldComponent;\n    const isInteractive = typeof this.props.handleClick === 'function';\n    return (\n      <DashboardCard\n        cardProps={{\n          mb:2,\n          width:1,\n          px:[2,4],\n          py:[2,'12px']\n        }}\n        id={this.props.cardId}\n        {...this.props.rowProps}\n        className={this.props.token}\n        isInteractive={isInteractive}\n        handleClick={ isInteractive ? e => this.props.handleClick(this.props) : null }\n      >\n        <Flex\n          flexDirection={'row'}\n          id={this.props.rowId}\n        >\n          {\n            this.props.cols.map((colInfo,colIndex) => {\n              if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile)){\n                return null;\n              }\n              return (\n                <Flex\n                  key={`col-${colIndex}`}\n                  {...colInfo.props}\n                >\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    {...colInfo.parentProps}\n                  >\n                    {\n                      colInfo.fields.map((fieldInfo,fieldIndex) => {\n                        if (fieldInfo.visible === false || (fieldInfo.mobile === false && this.props.isMobile)){\n                          return null;\n                        }\n                        return (\n                          <Flex\n                            height={'100%'}\n                            flexDirection={'column'}\n                            alignItems={'flex-start'}\n                            justifyContent={'center'}\n                            {...fieldInfo.parentProps}\n                            style={fieldInfo.style || {\n                              overflow:'hidden'\n                            }}\n                            width={colInfo.fields.length>1 ? 'auto' : 1}\n                            id={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                            key={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                          >\n                            <FieldComponent\n                              {...this.props}\n                              fieldInfo={fieldInfo}\n                              colProps={colInfo.props}\n                              parentId={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                            />\n                          </Flex>\n                        );\n                      })\n                    }\n                  </Flex>\n                </Flex>\n              )\n            })\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default TableRow;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\n\nclass TableHeader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        px={[2,4]}\n        pb={[2,3]}\n        flexDirection={'row'}\n      >\n        {\n          this.props.cols.map((colInfo,colIndex) => {\n            // Skip non-mobile columns\n            if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile)){\n              return null;\n            }\n\n            return (colInfo.title && colInfo.title.length) ? (\n              <TableCellHeader\n                {...this.props}\n                {...colInfo.props}\n                desc={colInfo.desc}\n                title={colInfo.title}\n                key={`col-header-${colIndex}`}\n              >\n                {colInfo.title}\n              </TableCellHeader>\n            ) : (\n              <Flex key={`col-header-${colIndex}`} {...colInfo.props}></Flex>\n            )\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableHeader;\n","import React, { Component } from 'react';\nimport styles from './Migrate.module.scss';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\nimport { Box, Flex, Text, Icon, Checkbox, Input, Link, Image } from \"rimble-ui\";\n\nclass Migrate extends Component {\n\n  state = {\n    nonce:0,\n    loading:true,\n    action:'migrate',\n    processing:{\n      approve:{\n        txHash:null,\n        loading:false\n      },\n      migrate:{\n        txHash:null,\n        loading:false\n      },\n      redeem:{\n        txHash:null,\n        loading:false\n      }\n    },\n    inputValue:{},\n    usePermit:false,\n    oldTokenName:null,\n    oldIdleTokens:null,\n    skipMigration:false,\n    buttonDisabled:true,\n    migrationEnabled:null,\n    fastBalanceSelector:{},\n    oldContractBalance:null,\n    biconomyLimitReached:false,\n    metaTransactionsEnabled:true,\n    oldContractTokenDecimals:null,\n    migrationContractApproved:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  toggleSkipMigration = (skipMigration) => {\n    this.setState({\n      skipMigration\n    });\n\n    if (typeof this.props.toggleSkipMigration === 'function'){\n      this.props.toggleSkipMigration(skipMigration);\n    }\n  }\n\n  changeInputValue = (e) => {\n    if (!this.state.action){\n      return false;\n    }\n    const amount = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: null\n      },\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!this.state.action){\n      return false;\n    }\n    if (!amount){\n      amount = this.state.inputValue[this.state.action];\n    }\n    let buttonDisabled = true;\n    if (amount){\n      buttonDisabled = amount.lte(0);\n      switch (this.state.action){\n        case 'migrate':\n        case 'redeem':\n          buttonDisabled = buttonDisabled || amount.gt(this.state.oldIdleTokens);\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  setInputValue = () => {\n    if (!this.state.action || this.state.fastBalanceSelector[this.state.action] === null){\n      return false;\n    }\n\n    let amount = null;\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n\n    switch(this.state.action){\n      case 'migrate':\n      case 'redeem':\n        amount = this.state.oldIdleTokens ? this.functionsUtil.BNify(this.state.oldIdleTokens).times(selectedPercentage) : null;\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  setFastBalanceSelector = (percentage) => {\n    if (!this.state.action){\n      return false;\n    }\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: percentage\n      }\n    }));\n  }\n\n  executeAction = async () => {\n\n    const inputValue = this.state.inputValue[this.state.action];\n\n    if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)){\n      return false;\n    }\n\n    const loading = true;\n\n    switch (this.state.action){\n      case 'redeem':\n\n        if (!this.props.tokenConfig.migration || !this.props.tokenConfig.migration.oldContract){\n          return false;\n        }\n\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n\n        const idleTokenToRedeem = this.functionsUtil.normalizeTokenAmount(inputValue,18);\n\n        // Get amounts for best allocations\n        const _skipRebalance = true;\n        let paramsForRedeem = null;\n\n        /*\n        if (this.props.account){\n          const callParams = { from: this.props.account, gas: this.props.web3.utils.toBN(5000000) };\n          paramsForRedeem = await this.functionsUtil.genericContractCall(oldContractName,'getParamsForRedeemIdleToken',[idleTokenToRedeem, _skipRebalance],callParams);\n        }\n        */\n\n        const _clientProtocolAmountsRedeem = paramsForRedeem && paramsForRedeem.length ? paramsForRedeem[1] : [];\n        const gasLimitRedeem = _clientProtocolAmountsRedeem.length && _clientProtocolAmountsRedeem.indexOf('0') === -1 ? this.functionsUtil.BNify(1500000) : this.functionsUtil.BNify(1000000);\n\n        const callbackRedeem = (tx,error) => {\n          const txSucceeded = tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: `Redeem_old`,\n            eventAction: this.props.selectedToken,\n            eventLabel: tx.status,\n            eventValue: parseInt(inputValue)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (txSucceeded){\n            this.setState((prevState) => ({\n              inputValue:{\n                ...prevState.inputValue,\n                [this.state.action]: this.functionsUtil.BNify(0)\n              }\n            }));\n          }\n        };\n\n        const callbackReceiptRedeem = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                ...prevState.processing[this.state.action],\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.props.contractMethodSendWrapper(oldContractName, 'redeemIdleToken', [\n          idleTokenToRedeem, _skipRebalance, _clientProtocolAmountsRedeem\n        ], null, callbackRedeem, callbackReceiptRedeem, gasLimitRedeem);\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        [this.state.action]:{\n          ...prevState.processing[this.state.action],\n          loading\n        }\n      }\n    }));\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n    this.checkMigration();\n  }\n\n  componentDidMount(){\n    \n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const biconomyChanged = prevProps.biconomy !== this.props.biconomy;\n    const usePermitChanged = prevProps.usePermit !== this.props.usePermit;\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken || (!prevProps.tokenConfig && this.props.tokenConfig);\n\n    if (tokenChanged || accountChanged || biconomyChanged || usePermitChanged){\n      this.checkMigration();\n    }\n\n    const actionChanged = this.state.action !== prevState.action;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector[this.state.action] !== prevState.fastBalanceSelector[this.state.action];\n    if (actionChanged || fastBalanceSelectorChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (contractApprovedChanged){\n      // console.log(this.props.selectedToken,'contractApprovedChanged',this.state.migrationContractApproved);\n      if (typeof this.props.callbackApprove === 'function'){\n        this.props.callbackApprove(this.state.migrationContractApproved);\n      }\n    }\n  }\n\n  toggleMetaTransactionsEnabled = (metaTransactionsEnabled) => {\n    this.setState({\n      metaTransactionsEnabled\n    });\n  }\n\n  checkMigrationContractApproved = async () => {\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.migrationContract){\n      const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n      const migrationContractName = migrationContractInfo.name;\n      const migrationContract = this.functionsUtil.getContractByName(migrationContractName);\n      if (migrationContract){\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n        const tokenApproved = await this.functionsUtil.checkTokenApproved(oldContractName,migrationContractInfo.address,this.props.account);\n        return tokenApproved;\n      }\n    }\n    return false;\n  }\n\n  checkMigration = async () => {\n\n    if (!this.props.tokenConfig || !this.props.account){\n      return false;\n    }\n\n    let loading = true;\n    this.setState({\n      loading,\n      processing:{\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n\n    let migrationEnabled = false;\n    let oldTokenName = 'idleTokens';\n    let oldIdleTokensConverted = null;\n    let oldContractTokenDecimals = null;\n    let migrationContractApproved = false;\n    let oldTokenPrice = this.functionsUtil.BNify(0);\n    let oldIdleTokens = this.functionsUtil.BNify(0);\n    let oldContractBalance = this.functionsUtil.BNify(0);\n    const getTokenPrice = this.props.getTokenPrice !== undefined ? this.props.getTokenPrice : true;\n\n    // Check migration contract enabled and balance\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.enabled){\n      const oldContractInfo = this.props.tokenConfig.migration.oldContract;\n      const oldContractABI = oldContractInfo.abi;\n      const oldContractName = oldContractInfo.name;\n      let oldContract = this.functionsUtil.getContractByName(oldContractName);\n\n      // Initialize contract\n      if (!oldContract && oldContractABI){\n        oldContract = await this.props.initContract(oldContractName,oldContractInfo.address,oldContractABI);\n      }\n\n      let migrationContract = this.functionsUtil.getContractByName(this.props.tokenConfig.migration.migrationContract.name);\n\n      if (!migrationContract && this.props.tokenConfig.migration.migrationContract.abi){\n        migrationContract = await this.props.initContract(this.props.tokenConfig.migration.migrationContract.name,this.props.tokenConfig.migration.migrationContract.address,this.props.tokenConfig.migration.migrationContract.abi);\n      }\n\n      if (oldContract && migrationContract){\n\n        oldTokenName = this.props.tokenConfig.migration.oldContract.token;\n\n        [\n          oldContractTokenDecimals,\n          migrationContractApproved,\n          oldContractBalance,\n          oldTokenPrice,\n        ] = await Promise.all([\n          // Get old contract token decimals\n          this.functionsUtil.getTokenDecimals(oldContractName),\n          // Check migration contract approval\n          this.checkMigrationContractApproved(),\n          // Check old contractBalance\n          this.functionsUtil.getContractBalance(oldContractName,this.props.account),\n          // Get token price\n          (getTokenPrice ? this.functionsUtil.genericContractCall(oldContractName,'tokenPrice') : null)\n        ]);\n\n        // console.log('Migration',oldContractName,migrationContractApproved,this.props.selectedToken,oldContractBalance ? oldContractBalance.toString() : null,oldTokenPrice ? oldTokenPrice.toString() : null);\n\n        if (oldContractBalance){\n          // Convert old idleTokens\n          oldIdleTokens = this.functionsUtil.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          if (oldTokenPrice){\n            oldTokenPrice = this.functionsUtil.fixTokenDecimals(oldTokenPrice,this.props.tokenConfig.decimals);\n            oldIdleTokensConverted = this.functionsUtil.BNify(oldIdleTokens).times(this.functionsUtil.BNify(oldTokenPrice));\n          }\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.functionsUtil.BNify(oldContractBalance).gt(0);\n        }\n      }\n    }\n    \n    loading = false;\n\n    // If use Permit don't ask for Approve\n    const usePermit = this.props.usePermit;\n\n    const newState = {\n      loading,\n      usePermit,\n      oldTokenName,\n      oldIdleTokens,\n      migrationEnabled,\n      oldContractBalance,\n      oldIdleTokensConverted,\n      oldContractTokenDecimals,\n      migrationContractApproved\n    };\n\n    if (this.props.biconomy){\n      const biconomyLimits = await this.functionsUtil.checkBiconomyLimits(this.props.account);\n      if (biconomyLimits && !biconomyLimits.allowed){\n        newState.biconomyLimitReached = true;\n      }\n    }\n\n    if (typeof this.props.migrationEnabledCallback === 'function'){\n      this.props.migrationEnabledCallback(migrationEnabled);\n    }\n\n    // console.log('checkMigration',this.props.selectedToken,'usePermit',this.props.usePermit,'migrationContractApproved',newState.migrationContractApproved);\n\n    // Set migration contract balance\n    return this.setState(newState);\n  }\n\n  disapproveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n      this.disableERC20(null,this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address);\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n  }\n\n  approveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      if (!migrationContractApproved){\n\n        const callbackApprove = (tx,error) => {\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: 'approve',\n            eventLabel: tx ? tx.status : null\n          };\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // console.log('callbackApprove',tx,error);\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            migrationContractApproved: txSucceeded, // True\n            processing: {\n              ...prevState.processing,\n              approve:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n            this.props.callbackApprove(tx);\n          }\n\n          this.checkMigration();\n        };\n\n        const callbackReceiptApprove = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              approve:{\n                ...prevState.processing.approve,\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.functionsUtil.enableERC20(this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address,callbackApprove,callbackReceiptApprove);\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            approve:{\n              txHash:null,\n              loading:true\n            }\n          },\n          migrationContractApproved:false\n        }));\n      } else {\n        this.setState({\n          migrationContractApproved:true\n        });\n      }\n    }\n  }\n\n  migrate = async (e,migrationMethod) => {\n    e.preventDefault();\n\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      // const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      // if (!migrationContractApproved){\n      //   return this.approveMigration();\n      // } else {\n        const callbackMigrate = (tx,error) => {\n\n          if (!error && tx && tx.status === 'error'){\n            error = {\n              message:'Unknown error'\n            };\n          } else if (!tx && error){\n            tx = {\n              status:'error'\n            };\n          }\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: migrationMethod,\n            eventLabel: tx ? tx.status : null,\n            eventValue: parseInt(oldIdleTokens)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          // console.log('callbackMigrate',tx,tx.status,txSucceeded,error,this.props.migrationCallback);\n\n          if (txSucceeded){\n            // Toast message\n            window.toastProvider.addMessage(`Migration completed`, {\n              secondaryMessage: `Your funds has been migrated`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"success\",\n            });\n\n            if (this.props.migrationCallback && typeof this.props.migrationCallback === 'function'){\n              this.props.migrationCallback(tx);\n            }\n\n          } else { // Show migration error toast only for real error\n            window.toastProvider.addMessage(`Migration error`, {\n              secondaryMessage: `The migration has failed, try again...`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n            });\n\n            // Check migration if failed\n            this.checkMigration();\n          }\n\n          this.setState((prevState) => ({\n            migrationEnabled:txSucceeded ? false : true,\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n        }\n\n        const callbackReceiptMigrate = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                ...prevState.processing.migrate,\n                txHash\n              }\n            }\n          }));\n        };\n\n        const callbackPermit = () => {\n          if (typeof this.props.callbackPermit === 'function'){\n            this.props.callbackPermit();\n          }\n        }\n\n        const useMetaTx = this.props.biconomy && this.state.metaTransactionsEnabled && !this.state.biconomyLimitReached;\n\n        // Call migration contract function to migrate funds\n        const oldIdleTokens = this.state.oldIdleTokens;\n        const toMigrate = this.props.showBalanceSelector ? this.functionsUtil.integerValue(this.functionsUtil.normalizeTokenAmount(this.state.inputValue[this.state.action],this.state.oldContractTokenDecimals)) : this.functionsUtil.integerValue(this.state.oldContractBalance);\n        // const toMigrate =  this.functionsUtil.normalizeTokenAmount('1',this.state.oldContractTokenDecimals).toString(); // TEST AMOUNT\n\n        let _skipRebalance = typeof this.props.tokenConfig.skipMintForDeposit !== 'undefined' ? this.props.tokenConfig.skipMintForDeposit : this.functionsUtil.getGlobalConfig(['contract','methods','migrate','skipRebalance']);\n\n        // Mint if someone mint over X amount\n        let minAmountForRebalance = null;\n        \n        if (_skipRebalance){\n\n          // Check if the amount is over a certain amount to rebalance the pool\n          if (useMetaTx){\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalanceMetaTx']);\n          } else {\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalance']);\n          }\n\n          if (minAmountForRebalance){\n            const amountToDeposit = await this.functionsUtil.convertTokenBalance(oldIdleTokens,this.props.selectedToken,this.props.tokenConfig,false);\n            if (amountToDeposit.gte(this.functionsUtil.BNify(minAmountForRebalance))){\n              _skipRebalance = false;\n            }\n          }\n        }\n\n        let migrationParams = this.props.migrationParams ? this.props.migrationParams : [toMigrate,this.props.tokenConfig.migration.oldContract.address,this.props.tokenConfig.idle.address,this.props.tokenConfig.address,_skipRebalance];\n\n        if (typeof migrationParams === 'function'){\n          migrationParams = migrationParams(toMigrate);\n        }\n\n        // Check if Biconomy is enabled\n        if (useMetaTx){\n          const functionSignature = migrationContract.methods[migrationMethod](...migrationParams).encodeABI();\n          this.functionsUtil.sendBiconomyTxWithPersonalSign(migrationContractInfo.name, functionSignature, callbackMigrate, callbackReceiptMigrate);\n          // this.functionsUtil.sendBiconomyTx(migrationContractInfo.name, migrationContractInfo.address, functionSignature, callbackMigrate, callbackReceiptMigrate);\n        } else {\n          const permitContract = this.functionsUtil.getContractByName(this.props.tokenConfig.name);\n          const functionInfo = migrationContractInfo.functions.find( f => f.name === migrationMethod );\n          const nonceMethod = this.functionsUtil.getGlobalConfig(['permit',this.props.tokenConfig.name,'nonceMethod']);\n          if (this.props.usePermit && permitContract){\n            const expiry = Math.round(new Date().getTime() / 1000 + 3600);\n            const nonce = nonceMethod ? await permitContract.methods[nonceMethod](this.props.account).call() : null;\n            this.functionsUtil.signPermit(this.props.tokenConfig.name, this.props.account, migrationContractInfo.name, functionInfo.permitName, migrationParams, nonce, expiry, callbackMigrate, callbackReceiptMigrate, callbackPermit);\n          } else {\n            // Send migration tx\n            this.functionsUtil.contractMethodSendWrapper(migrationContractInfo.name, migrationMethod, migrationParams, callbackMigrate, callbackReceiptMigrate);\n          }\n        }\n\n        // debugger;\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            migrate:{\n              txHash:null,\n              loading:true\n            }\n          }\n        }));\n      // }\n    }\n\n    return false;\n  }\n\n  render() {\n\n    if (!this.props.tokenConfig || !this.props.selectedToken){\n      return null;\n    }\n\n    const contractApproved = this.props.usePermit || this.state.migrationContractApproved;\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationEnabled = batchMigrationInfo.enabled && typeof batchMigrationInfo.props.availableTokens[this.props.tokenConfig.idle.token] !== 'undefined';\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    // console.log('contractApproved',contractApproved,this.props.usePermit,this.state.migrationContractApproved);\n\n    const SkipMigrationComponent = (props) => (\n      <DashboardCard\n        cardProps={{\n          pt:2,\n          pb:3,\n          px:2,\n          mb:2,\n          display:'flex',\n          alignItems:'center',\n          flexDirection:'column',\n          justifyContent:'center',\n          mt:this.state.skipMigration ? 3 : 2,\n        }}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={'FastForward'}\n          />\n        </Flex>\n        <Checkbox\n          required={false}\n          checked={this.state.skipMigration}\n          label={`Skip migration and deposit in Idle v4`}\n          onChange={ e => this.toggleSkipMigration(e.target.checked) }\n        />\n      </DashboardCard>\n    );\n\n    const biconomyEnabled = this.functionsUtil.getGlobalConfig(['network','providers','biconomy','enabled']) && !this.state.biconomyLimitReached;\n\n    return (\n      this.state.loading && this.props.account ? (\n        <DashboardCard\n          cardProps={{\n            p:3,\n            mt:3,\n            minHeight:'195px',\n            style:{\n              display:'flex',\n              alignItems:'center',\n              justifyContent:'center'\n            }\n          }}\n        >\n          <FlexLoader\n            flexProps={{\n              flexDirection:'row'\n            }}\n            loaderProps={{\n              size:'30px'\n            }}\n            textProps={{\n              ml:2\n            }}\n            text={'Checking migration...'}\n          />\n        </DashboardCard>\n      ) : (\n        (this.state.migrationEnabled && !this.state.skipMigration) ? (\n          <Box width={1}>\n            {\n              !this.props.isMigrationTool &&\n              <Flex\n                mt={3}\n                flexDirection={'column'}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  >\n                    <Icon\n                      size={'2.3em'}\n                      color={'cellText'}\n                      name={ this.props.isMigrationTool ? 'SwapHoriz' : 'Warning' }\n                    />\n                    <Text\n                      mt={1}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      { this.props.migrateTextBefore !== null ? this.props.migrateTextBefore : null }\n                      { this.props.migrateTextBefore !== null &&\n                        <br />\n                      }\n                      You { !this.props.isMigrationTool ? 'still' : '' } have <strong>{this.state.oldIdleTokens.toFixed(4)} {this.state.oldTokenName} {this.state.oldIdleTokensConverted ? `(${this.state.oldIdleTokensConverted.toFixed(4)} ${this.props.selectedToken})` : ''}</strong> to migrate.<br />\n                      { this.props.migrateText !== null ? this.props.migrateText : 'Please use the section below to migrate or redeem your old tokens.' }\n                    </Text>\n                  </Flex>\n                </DashboardCard>\n              </Flex>\n            }\n            {\n              (this.props.showActions === undefined || this.props.showActions) && \n                <Flex\n                  mt={2}\n                  flexDirection={'column'}\n                >\n                  {\n                    !this.props.isMigrationTool && \n                      <SkipMigrationComponent />\n                  }\n                  <Text mb={2}>\n                    Choose the action:\n                  </Text>\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('migrate');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'migrate' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'migrate'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Migrate\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('redeem');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'redeem' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'redeem'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Redeem\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n            }\n            {\n              this.state.action === 'migrate' ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  flexDirection={'column'}\n                >\n                  {\n                    (batchMigrationEnabled && batchMigrationDepositEnabled && !this.props.isMigrationTool) &&\n                      <Flex\n                        mb={3}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <Link\n                          textAlign={'center'}\n                          hoverColor={'primary'}\n                          href={`/#/dashboard/tools/${batchMigrationInfo.route}/${this.props.tokenConfig.idle.token}`}\n                        >\n                          Gas fees too high? Save gas with our Batch Migrator!\n                        </Link>\n                        <Icon\n                          ml={1}\n                          size={'1em'}\n                          color={'primary'}\n                          name={'LocalGasStation'}\n                        />\n                      </Flex>\n                  }\n                  {\n                    contractApproved ? (\n                      this.state.processing.migrate.loading ? (\n                        <Flex\n                          mt={3}\n                          flexDirection={'column'}\n                        >\n                          <TxProgressBar\n                            web3={this.props.web3}\n                            hash={this.state.processing.migrate.txHash}\n                            endMessage={`Finalizing migration request...`}\n                            cancelTransaction={this.cancelTransaction.bind(this)}\n                            waitText={ this.props.waitText ? this.props.waitText : 'Migration estimated in'}\n                            sendingMessage={ this.props.biconomy && this.state.metaTransactionsEnabled ? 'Sending meta-transaction...' : 'Sending transaction...' }\n                          />\n                        </Flex>\n                      ) : this.props.showBalanceSelector ? (\n                        <Flex\n                          mt={1}\n                          flexDirection={'column'}\n                        >\n                          <Flex\n                            mb={3}\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              mb={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                            >\n                              {\n                                this.props.balanceSelectorInfo && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                  >\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      textAlign={'left'}\n                                      style={{\n                                        maxWidth:'100%',\n                                        overflow:'hidden',\n                                        whiteSpace:'nowrap',\n                                        textOverflow:'ellipsis'\n                                      }}\n                                      color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                                    >\n                                      {this.props.balanceSelectorInfo.text}\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                              {\n                                this.state.oldIdleTokens && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'flex-end'}\n                                  >\n                                    <Link\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      color={'dark-gray'}\n                                      textAlign={'right'}\n                                      hoverColor={'copyColor'}\n                                      onClick={ (e) => this.setFastBalanceSelector(100) }\n                                    >\n                                      Balance: {this.state.oldIdleTokens.toFixed(6)} {this.props.selectedToken}\n                                    </Link>\n                                  </Flex>\n                                )\n                              }\n                            </Flex>\n                            <Input\n                              min={0}\n                              type={\"number\"}\n                              required={true}\n                              height={'3.4em'}\n                              borderRadius={2}\n                              fontWeight={500}\n                              borderColor={'cardBorder'}\n                              backgroundColor={'cardBg'}\n                              boxShadow={'none !important'}\n                              placeholder={'Insert amount'}\n                              onChange={this.changeInputValue.bind(this)}\n                              border={`1px solid ${this.props.theme.colors.divider}`}\n                              value={this.state.inputValue[this.state.action] ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toFixed() : ''}\n                            />\n                            <Flex\n                              mt={2}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              {\n                                [25,50,75,100].map( percentage => (\n                                  <FastBalanceSelector\n                                    percentage={percentage}\n                                    key={`selector_${percentage}`}\n                                    onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                                    isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(percentage)}\n                                  />\n                                ))\n                              }\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            mt={1}\n                            width={1}\n                            alignItems={'center'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      width:[1,0.5],\n                                      disabled:this.state.buttonDisabled,\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                          </Flex>\n                        </Flex>\n                      ) : (\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:2,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            {\n                              this.props.migrationImage ? (\n                                <Image\n                                  {...this.props.migrationImage}\n                                />\n                              ) : (\n                                <Icon\n                                  size={'2.3em'}\n                                  color={'cellText'}\n                                  name={ this.props.migrationIcon ? this.props.migrationIcon : (this.props.isMigrationTool ? 'SwapHoriz' : 'Repeat') }\n                                />\n                              )\n                            }\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                this.props.migrationText ? (\n                                  <Text.span\n                                    migrationTextProps={this.props.migrationTextProps}\n                                    dangerouslySetInnerHTML={{\n                                      __html:this.props.migrationText\n                                    }}\n                                  >\n                                  </Text.span>\n                                ) : (\n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    You are one step away from the migration of your { this.props.isMigrationTool ? this.state.oldIdleTokens.toFixed(4) : 'old' } {this.state.oldTokenName}{ this.props.isMigrationTool ? ` into the Idle ${this.props.tokenConfig.token} ${this.props.selectedStrategy} strategy` : '' }!\n                                  </Text.span>\n                                )\n                              }\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                            {\n                              biconomyEnabled && \n                                <Flex\n                                  py={3}\n                                  px={2}\n                                  mt={2}\n                                  width={1}\n                                  borderRadius={2}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                  backgroundColor={'dashboardBg'}\n                                  border={`1px solid ${this.props.theme.colors.boxBorder}`}\n                                >\n                                  <Text\n                                    mt={1}\n                                    fontSize={1}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    {\n                                      this.props.biconomy ?\n                                        `Meta-Transactions allow you to migrate without spending a dime! But, if you are stuck, please disable it and try again.`\n                                      :\n                                        'Your wallet does not support Meta-transactions, you are still able to migrate with a normal transaction.'\n                                    }\n                                  </Text>\n                                  {\n                                  this.props.biconomy &&\n                                    <Checkbox\n                                      mt={2}\n                                      required={false}\n                                      label={\"Migrate with Meta-Transaction\"}\n                                      checked={this.state.metaTransactionsEnabled}\n                                      onChange={ e => this.toggleMetaTransactionsEnabled(e.target.checked) }\n                                    />\n                                  }\n                                </Flex>\n                            }\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      mt:3,\n                                      width:[1,0.5],\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      )\n                    ) : this.state.processing.approve.loading ? (\n                      <Flex\n                        mt={3}\n                        flexDirection={'column'}\n                      >\n                        <TxProgressBar\n                          web3={this.props.web3}\n                          waitText={`Approve estimated in`}\n                          hash={this.state.processing.approve.txHash}\n                          endMessage={`Finalizing approve request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      </Flex>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          mt:2,\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            size={'2.3em'}\n                            name={'LockOpen'}\n                            color={'cellText'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              this.props.approveText ? this.props.approveText : `To migrate your ${ !this.props.isMigrationTool ? 'old' : '' } ${this.state.oldTokenName} you need to approve our Smart-Contract first.`\n                            }\n                          </Text>\n                          <RoundButton\n                            buttonProps={{\n                              mt:3,\n                              width:[1,1/2]\n                            }}\n                            handleClick={this.approveMigration.bind(this)}\n                          >\n                            Approve\n                          </RoundButton>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  }\n                </Flex>\n              ) : (\n                !this.state.processing[this.state.action].loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <Input\n                      min={0}\n                      type={\"number\"}\n                      required={true}\n                      height={'3.4em'}\n                      borderRadius={2}\n                      fontWeight={500}\n                      className={styles.input}\n                      borderColor={'cardBorder'}\n                      backgroundColor={'cardBg'}\n                      boxShadow={'none !important'}\n                      onChange={this.changeInputValue.bind(this)}\n                      border={`1px solid ${this.props.theme.colors.divider}`}\n                      placeholder={`Insert ${this.state.oldTokenName} amount`}\n                      value={this.state.inputValue[this.state.action] !== null ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toString() : ''}\n                    />\n                    <Flex\n                      mt={3}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'space-between'}\n                    >\n                      <FastBalanceSelector\n                        percentage={25}\n                        onMouseDown={()=>this.setFastBalanceSelector(25)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(25)}\n                      />\n                      <FastBalanceSelector\n                        percentage={50}\n                        onMouseDown={()=>this.setFastBalanceSelector(50)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(50)}\n                      />\n                      <FastBalanceSelector\n                        percentage={75}\n                        onMouseDown={()=>this.setFastBalanceSelector(75)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(75)}\n                      />\n                      <FastBalanceSelector\n                        percentage={100}\n                        onMouseDown={()=>this.setFastBalanceSelector(100)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(100)}\n                      />\n                    </Flex>\n                    <Flex\n                      mt={3}\n                      justifyContent={'center'}\n                    >\n                      <RoundButton\n                        buttonProps={{\n                          width:[1,1/2],\n                          disabled:this.state.buttonDisabled,\n                          style:{\n                            textTransform:'capitalize'\n                          }\n                        }}\n                        handleClick={this.state.buttonDisabled ? null : this.executeAction.bind(this) }\n                      >\n                        {this.state.action}\n                      </RoundButton>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mt={4}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      web3={this.props.web3}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      hash={this.state.processing[this.state.action].txHash}\n                      endMessage={`Finalizing ${this.state.action} request...`}\n                      waitText={`${this.functionsUtil.capitalize(this.state.action)} estimated in`}\n                    />\n                  </Flex>\n                )\n              )\n            }\n          </Box>\n        ) : (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'column'}\n            justifyContent={'center'}\n          >\n            {\n              (!this.props.isMigrationTool && this.state.migrationEnabled) && \n                <SkipMigrationComponent />\n            }\n            {\n              this.props.children ? this.props.children : null\n            }\n          </Flex>\n        )\n      )\n    )\n  }\n}\n\nexport default Migrate;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport AssetField from '../AssetField/AssetField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass AssetsList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    return (\n      <Flex id=\"assets-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"assets-list\" flexDirection={'column'}>\n          {\n            enabledTokens.map(token => {\n              const tokenConfig = this.props.availableTokens[token];\n              if (!tokenConfig){\n                return null;\n              }\n              return (\n                <TableRow\n                  token={token}\n                  {...this.props}\n                  key={`asset-${token}`}\n                  tokenConfig={tokenConfig}\n                  rowId={`asset-col-${token}`}\n                  cardId={`asset-card-${token}`}\n                  fieldComponent={this.props.fieldComponent || AssetField}\n                />\n              );\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default AssetsList;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__38P6I\",\"link\":\"Footer_link__13yZU\"};","import { tint, shade, readableColor } from 'polished';\n\n// rimble base colors\nconst baseColors = {\n  black: '#000e1a',\n  white: '#FFF',\n  blue: '#0036ff',\n  darkBlue: '#0028be',\n  green: '#28C081',\n  yellow: '#FD9D28',\n  red: '#DC2C10',\n  blurple: '#4E3FCE',\n  consensysblue: '#3259D6',\n};\n\n// rimble palette\nconst colors = {\n  blurple: {\n    base: baseColors.blurple,\n    text: readableColor(baseColors.blurple),\n    light: [null, tint(0.2, baseColors.blurple)],\n    dark: [null, shade(0.2, baseColors.blurple)],\n  },\n  blue: {\n    base: baseColors.blue,\n    text: readableColor(baseColors.blue),\n    light: [null, tint(0.9, baseColors.blue)],\n    dark: [null, shade(0.4, baseColors.blue)],\n  },\n  green: {\n    base: baseColors.green,\n    text: baseColors.white,\n    light: [null, tint(0.9, baseColors.green)],\n    dark: [null, shade(0.4, baseColors.green)],\n  },\n  yellow: {\n    base: baseColors.yellow,\n    text: readableColor(baseColors.yellow),\n    light: [null, tint(0.9, baseColors.yellow)],\n    dark: [null, shade(0.4, baseColors.yellow)],\n  },\n  red: {\n    base: baseColors.red,\n    text: readableColor(baseColors.red),\n    light: [null, tint(0.9, baseColors.red)],\n    dark: [null, shade(0.4, baseColors.red)],\n  },\n};\n\nconst blurple = colors.blurple;\nconst blue = colors.blue;\nconst green = colors.green;\nconst yellow = colors.yellow;\nconst red = colors.red;\n\nexport { blurple };\nexport { blue };\nexport { green };\nexport { yellow };\nexport { red };\nexport default baseColors;\n","import { Flex, Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass VariationNumber extends Component {\n\n  render() {\n\n    const IconDirection = () => (\n      <Icon\n        color={ this.props.direction === 'up' ?  '#6dd400' : '#f7b500' }\n        name={ this.props.direction === 'up' ?  'ArrowDropUp' : 'ArrowDropDown' }\n        size={ this.props.iconSize ? this.props.iconSize : ( this.props.isMobile ? '1.4em' : '2em') }\n      />\n    );\n\n    return (\n      <Flex\n        alignItems={'center'}\n        flexDirection={'row'}\n        width={ this.props.width ? this.props.width : 1 }\n        justifyContent={this.props.justifyContent ? this.props.justifyContent : 'center'}\n      >\n        {\n          (!this.props.iconPos || this.props.iconPos==='left') &&\n            <IconDirection />\n        }\n        {this.props.children}\n        {\n          this.props.iconPos==='right' &&\n            <IconDirection />\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default VariationNumber;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchInput\":\"GenericSelector_searchInput__vl2hJ\",\"genericSelector\":\"GenericSelector_genericSelector__1Nqkd\",\"dark\":\"GenericSelector_dark__zCOnP\",\"searchInputHidden\":\"GenericSelector_searchInputHidden__2Zm1B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading-dots\":\"LoadingSpinner_loading-dots__2-3YZ\",\"loading-dots--dot\":\"LoadingSpinner_loading-dots--dot__2Y25C\",\"dot-keyframes\":\"LoadingSpinner_dot-keyframes__3SU_M\"};","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Box,\n  Button,\n  Flex,\n  Image\n} from \"rimble-ui\";\nimport Select from 'react-select';\nimport ModalCard from './ModalCard';\nimport ImageButton from '../../ImageButton/ImageButton';\nimport styles from './Header.module.scss';\nimport globalConfigs from '../../configs/globalConfigs';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass BuyModal extends React.Component {\n\n  state = {\n    selectedMethod:null,\n    availableMethods:[],\n    selectedCountry:null,\n    selectedProvider:null,\n    availableProviders:null,\n    selectedToken:this.props.buyToken,\n  }\n\n  async loadRemoteResources() {\n\n    if (!this.state.selectedToken){\n      return false;\n    }\n\n    // Load payments providers external remote resources\n    Object.keys(globalConfigs.payments.providers).forEach((provider,i) => {\n\n      const providerInfo = globalConfigs.payments.providers[provider];\n      if (providerInfo.enabled && providerInfo.remoteResources && (providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1)){\n        \n        const remoteResources = providerInfo.remoteResources;\n\n        Object.keys(remoteResources).forEach((url,j) => {\n\n          const resourceType = url.split('.').pop().toLowerCase();\n\n          switch (resourceType){\n            case 'js':\n              const scriptID = `script_${provider}_${j}_${this.state.selectedToken}`;\n\n              if (!document.getElementById(scriptID)){\n                const script = document.createElement(\"script\");\n                const remoteResourceParams = remoteResources[url];\n                const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n                const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n                if (precall && typeof precall === 'function'){\n                  precall(this.state,globalConfigs,providerInfo);\n                }\n\n                if (callback && typeof callback === 'function'){\n                  if (script.readyState) {  // only required for IE <9\n                    script.onreadystatechange = function() {\n                      if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                        script.onreadystatechange = null;\n                        callback();\n                      }\n                    };\n                  } else {  //Others\n                    script.onload = callback;\n                  }\n                }\n\n                script.id = scriptID;\n                script.className = `script_${provider}`;\n                script.src = url;\n                script.async = true;\n\n                if (remoteResourceParams && remoteResourceParams.parentElement){\n                  remoteResourceParams.parentElement.appendChild(script)\n                } else {\n                  document.head.appendChild(script);\n                }\n              }\n            break;\n            case 'css':\n              const stylesheetId = `stylesheet_${provider}_${j}`;\n\n              if (!document.getElementById(stylesheetId)){\n                const style = document.createElement(\"link\");\n\n                style.id = stylesheetId;\n                style.rel = 'stylesheet';\n                style.href = url;\n\n                document.head.appendChild(style);\n              }\n            break;\n            default:\n            break;\n          }\n        });\n      }\n    });\n  }\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadAvailableMethods(){\n    const availableMethods = {};\n    const availableMethodsKeys = this.props.availableMethods && this.props.availableMethods.length ? this.props.availableMethods : Object.keys(globalConfigs.payments.methods);\n\n    availableMethodsKeys.forEach(method => {\n      const availableProviders = this.getAvailablePaymentProviders(method,this.state.selectedToken);\n      if (availableProviders && availableProviders.length>0){\n        const methodInfo = globalConfigs.payments.methods[method];\n        methodInfo.availableProviders = availableProviders;\n        availableMethods[method] = methodInfo;\n      }\n    });\n\n    this.setState({\n      availableMethods\n    });\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n\n    this.loadAvailableMethods();\n    this.loadRemoteResources();\n  }\n\n  async componentDidMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps) {\n\n    this.loadUtils();\n\n    if ( this.props.buyToken && prevProps.buyToken !== this.props.buyToken){\n      this.selectToken(null,this.props.buyToken);\n    }\n  }\n\n  renderPaymentMethod = async (e,provider,buyParams) => {\n\n    const onSuccess = async (tx) => {\n      // Toast message\n      window.toastProvider.addMessage(`Deposit completed`, {\n        secondaryMessage: `Your ${this.state.selectedToken} have been deposited`,\n        colorTheme: 'light',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"success\",\n      });\n\n      this.props.getAccountBalance();\n    };\n\n    const onClose = async (e) => {\n      return true;\n    }\n\n    const paymentProvider = globalConfigs.payments.providers[provider];\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(this.props,globalConfigs,buyParams,onSuccess,onClose) : null;\n\n    // Render the Payment Provider\n    switch (provider){\n      default:\n        if (typeof paymentProvider.render === 'function'){\n          const currentState = Object.assign({},this.state);\n          paymentProvider.render(initParams,null,currentState,globalConfigs);\n        }\n      break;\n    }\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_provider',\n        eventLabel: provider\n      });\n\n      this.closeModal(e);\n    } else {\n      this.closeModal(e);\n    }\n  }\n\n  goBack = (e) => {\n    e.preventDefault();\n\n    if (this.state.selectedProvider){\n      this.setState({\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedMethod){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedToken){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n        selectedToken:this.props.buyToken,\n      });\n    } else {\n      this.resetModal();\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      selectedMethod:null,\n      selectedCountry:null,\n      selectedProvider:null,\n      availableProviders:null,\n      selectedToken:this.props.buyToken\n    });\n\n    this.componentWillMount();\n  }\n\n  closeModal = (e) => {\n    this.resetModal();\n    if (!this.props.showInline && typeof this.props.closeModal === 'function'){\n      this.props.closeModal();\n    }\n  }\n\n  getProviderInfo = (provider) => {\n    if (!globalConfigs.payments.providers[provider]){\n      return false;\n    }\n    let providerInfo = globalConfigs.payments.providers[provider];\n    if (typeof providerInfo.getInfo === 'function'){\n      const newProviderInfo = providerInfo.getInfo(this.state);\n      if (newProviderInfo && Object.keys(newProviderInfo).length){\n        providerInfo = Object.assign(providerInfo,newProviderInfo);\n      }\n    }\n    return providerInfo;\n  }\n\n  getDefaultPaymentProvider = (selectedMethod) => {\n    const paymentMethod = this.state.availableMethods[selectedMethod];\n    if (paymentMethod && paymentMethod.defaultProvider){\n      return paymentMethod.defaultProvider;\n    }\n    return null;\n  }\n\n  getAvailablePaymentProviders = (selectedMethod,selectedToken) => {\n    const availableProviders = [];\n\n    Object.keys(globalConfigs.payments.providers).map((provider,i) => {\n      const providerInfo = globalConfigs.payments.providers[provider];\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(selectedMethod) !== -1;\n      const providerSupportToken = selectedToken ? providerInfo.supportedTokens.indexOf(selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n      if (providerInfo.enabled && providerSupportMethod && providerSupportToken ){\n        availableProviders.push(provider);\n      }\n      return provider;\n    });\n\n    const defaultPaymentProvider = this.getDefaultPaymentProvider(selectedMethod);\n\n    if (defaultPaymentProvider && this.state.availableMethods[selectedMethod].showDefaultOnly && availableProviders.indexOf(defaultPaymentProvider) !== -1){\n      return [defaultPaymentProvider];\n    }\n\n    return availableProviders;\n  }\n\n  selectProvider = (e,selectedProvider) => {\n    if (e){\n      e.preventDefault();\n    }\n    \n    if (!selectedProvider || !globalConfigs.payments.providers[selectedProvider]){\n      return this.setState({\n        selectedProvider:null\n      });\n    }\n\n    const providerInfo = globalConfigs.payments.providers[selectedProvider];\n    if (providerInfo){\n\n      if (this.state.selectedToken){\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      const ethAvailable = providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1;\n      const tokenAvailable = providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1;\n\n      // Show tokens to buy if more are available or if the selected one is not\n      const availableTokens = [];\n      if ( (ethAvailable && tokenAvailable) || !tokenAvailable ){\n        if (ethAvailable){\n          availableTokens.push(globalConfigs.baseToken);\n        }\n        if (tokenAvailable){\n          availableTokens.push(this.props.selectedToken);\n        }\n      } else {\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      this.setState({\n        availableTokens,\n        selectedProvider\n      });\n    }\n  }\n\n  selectMethod = (e,selectedMethod) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    if (Object.keys(this.state.availableMethods).indexOf(selectedMethod) !== -1){\n      const availableProviders = this.getAvailablePaymentProviders(selectedMethod,this.state.selectedToken);\n\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_method',\n        eventLabel: selectedMethod\n      });\n\n      this.setState({\n        availableProviders,\n        selectedMethod\n      });\n    }\n  }\n\n  selectToken = (e,selectedToken) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Buy',\n      eventAction: 'select_token',\n      eventLabel: selectedToken\n    });\n\n    this.setState({ selectedToken }, async () => {\n      if (this.state.selectedProvider){\n        return this.renderPaymentMethod(e,this.state.selectedProvider,this.state);\n      } else {\n        this.loadRemoteResources();\n      }\n    });\n  }\n\n  handleCountryChange = selectedCountry => {\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled && selectedCountry){\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_country',\n        eventLabel: selectedCountry.value\n      });\n    }\n\n    this.setState({\n      selectedCountry\n    });\n  }\n\n  getAvailableCountries = () => {\n    const availableCountries = {};\n    this.state.availableProviders.forEach((provider,i) => {\n      const providerInfo = this.getProviderInfo(provider);\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(this.state.selectedMethod) !== -1;\n      const providerSupportToken = this.state.selectedToken ? providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n\n      // Skip disabled provider, not supported selected method or not supported token\n      if (!providerInfo.enabled || !providerSupportMethod || !providerSupportToken ){\n        return;\n      }\n\n      // Get available providers and countries\n      providerInfo.supportedCountries.forEach((countryCode,j) => {\n        if (!availableCountries[countryCode]){\n          availableCountries[countryCode] = {\n            providers:[],\n            label:globalConfigs.countries[countryCode],\n            value:countryCode\n          };\n        }\n        availableCountries[countryCode].providers.push(provider);\n      });\n    });\n\n    return Object.values(availableCountries);\n  }\n\n  render() {\n\n    let title = null;\n    if (this.state.selectedToken === null){\n      title = 'BUY TOKEN';\n    } else {\n      title = 'BUY '+this.state.selectedToken;\n      if (this.state.selectedMethod !== null){\n        title += ' - '+this.state.availableMethods[this.state.selectedMethod].props.caption;\n      }\n    }\n\n    let availableTokens = this.props.availableTokens && Object.keys(this.props.availableTokens).length>0 ? [globalConfigs.baseToken,...Object.keys(this.props.availableTokens)] : [globalConfigs.baseToken];\n\n    // Show all tokens\n    if (this.props.showAllTokens){\n      availableTokens = [];\n      Object.keys(globalConfigs.payments.providers).forEach( provider => {\n        const providerInfo = globalConfigs.payments.providers[provider];\n        if (providerInfo.supportedTokens){\n          providerInfo.supportedTokens.forEach(token => {\n            if (!availableTokens.includes(token)){\n              availableTokens.push(token);\n            }\n          })\n        }\n      });\n    }\n\n    const InnerComponent = props => (\n      <Box minWidth={ this.props.showInline ? 'auto' : ['auto','35em'] }>\n      {\n        this.state.selectedToken === null ? (\n          <Box mb={2}>\n            <Text\n              mb={[2,3]}\n              fontWeight={2}\n              textAlign={'center'}\n              fontSize={[2, this.props.showInline ? 2 : 3]}\n            >\n              Which token do you want to buy?\n            </Text>\n            <Flex\n              mb={4}\n              style={{\n                flexWrap:'wrap'\n              }}\n              alignItems={'center'}\n              justifyContent={'center'}\n              flexDirection={['column','row']}\n            >\n            {\n              availableTokens.map((token,i) => {\n                return (\n                  <ImageButton\n                    caption={token}\n                    key={`token_${token}`}\n                    isMobile={this.props.isMobile}\n                    imageSrc={`images/tokens/${token}.svg`}\n                    handleClick={ e => { this.selectToken(e,token); } }\n                    imageProps={ this.props.isMobile ? {height:'42px'} : {p:[2,3],height:'80px'}}\n                    buttonProps={ !this.props.isMobile ? {\n                      style:{\n                        'flex':'0 0 170px'\n                      }\n                    } : null}\n                  />\n                );\n              })\n            }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === null ? (\n          <Box>\n            <Flex mb={3} flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n              {\n                !this.props.showInline &&\n                  <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n              }\n              <Text textAlign={'center'} fontWeight={500} fontSize={[2, this.props.showInline ? 2 : 3]} my={0}>\n                {\n                  this.props.showInline && this.props.buyToken ? `Ops... you don't have any ${this.props.buyToken} in your wallet, how do you prefer do buy some?` : `How do you prefer to buy ${this.state.selectedToken}?`\n                }\n              </Text>\n            </Flex>\n            <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n              {\n                Object.keys(this.state.availableMethods).map((method,i) => {\n                  const methodInfo = this.state.availableMethods[method];\n                  let imageProps = methodInfo.props && methodInfo.props.imageProps ? methodInfo.props.imageProps : {};\n                  const imagePropsExtended = this.props.isMobile ? {height:'42px'} : {height:'70px'};\n                  imageProps = Object.assign(imageProps,imagePropsExtended);\n\n                  return (\n                    <ImageButton\n                      {...methodInfo.props}\n                      buttonProps={{\n                        border:2\n                      }}\n                      key={`method_${method}`}\n                      imageProps={ imageProps }\n                      isMobile={ this.props.isMobile }\n                      handleClick={ e => this.selectMethod(e,method) }\n                    />\n                  );\n                })\n              }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === 'wallet' ? (\n              <Box mt={2} mb={3}>\n                <Text textAlign={'center'} fontWeight={3} fontSize={2} my={0}>\n                  <Box width={'100%'}>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableProviders.length > 0 ?\n                          (\n                            <Box>\n                              <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                                Choose your preferred payment provider:\n                              </Text>\n                              {\n                                this.state.availableProviders.map((provider,i) => {\n                                  const providerInfo = this.getProviderInfo(provider);\n                                  return (\n                                    <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => { this.renderPaymentMethod(e,provider,this.state); } } />\n                                  );\n                                })\n                              }\n                            </Box>\n                          )\n                        : (\n                          <Text textAlign={'center'} fontWeight={3} fontSize={2} my={2}>\n                            Sorry, there are no providers available for the selected method.\n                          </Text>\n                        )\n                      }\n                      </Flex>\n                    </Box>\n                </Text>\n              </Box>\n            ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              {\n                !this.state.selectedProvider &&\n                <Box\n                  mb={3}\n                  maxWidth={ this.props.showInline ? '35em' : 'initial' }\n                  width={ (this.props.showInline && !this.props.isMobile) ? 0.72 : 1 }\n                >\n                  {\n                    !this.props.showInline &&\n                      <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n                        <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n                      </Flex>\n                  }\n                  <Text textAlign={'center'} fontWeight={ this.props.showInline ? 2 : 3 } fontSize={2} mb={2}>\n                    Select your country:\n                  </Text>\n                  <Select\n                    bg={'#162e4d'}\n                    backgroundColor={'#162e4d'}\n                    value={this.state.selectedCountry}\n                    placeholder={'Select your country'}\n                    onChange={this.handleCountryChange}\n                    options={this.getAvailableCountries()}\n                    maxWidth={ this.props.showInline && !this.props.isMobile ? '25em' : 'auto' }\n                    noOptionsMessage={ (inputValue) => 'For European countries select Europe' }\n                    className={this.props.themeMode === 'light' ? styles.select : styles.selectDark}\n                  />\n                </Box>\n              }\n              <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'} minHeight={'200px'}>\n                {\n                  !this.state.selectedProvider ?\n                    this.state.selectedCountry !== null ? (\n                      <Box width={'100%'}>\n                        <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                          Choose your preferred payment provider:\n                        </Text>\n                        <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                        {\n                          this.state.selectedCountry.providers.length > 0 ?\n                            this.state.selectedCountry.providers.map((provider,i) => {\n                              const providerInfo = this.getProviderInfo(provider);\n                              return (\n                                <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => {this.selectProvider(e,provider) } } />\n                              );\n                            })\n                          : (\n                            <Text textAlign={'center'} fontWeight={3} fontSize={2} mb={2}>\n                              Sorry, there are no providers available for the selected method.\n                            </Text>\n                          )\n                        }\n                        </Flex>\n                      </Box>\n                    ) : (\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={2}>\n                        Select the country to load the payment providers.\n                      </Text>\n                    )\n                  : false && this.state.availableTokens && this.state.availableTokens.length > 0 && (\n                    <Box mb={2}>\n                      <Flex justifyContent={'center'} my={2}>\n                        <Image src={ globalConfigs.payments.providers[this.state.selectedProvider].imageSrc } height={'35px'} />\n                      </Flex>\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                        Choose which token do you want to buy:\n                      </Text>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableTokens.map((token,i) => {\n                          return (\n                            <ImageButton key={`token_${token}`} imageSrc={`images/tokens/${token}.svg`} caption={token} imageProps={{p:[2,3],height:'80px'}} handleClick={ e => { this.selectToken(e,token); } } />\n                          );\n                        })\n                      }\n                      </Flex>\n                    </Box>\n                  )\n                }\n              </Flex>\n            </Flex>\n          )\n      }\n        {\n          this.props.showInline && this.state.selectedToken !== null  && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n            <Flex\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Button\n                my={2}\n                mx={[0, 2]}\n                size={'medium'}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.goBack(e) }\n              >\n                GO BACK\n              </Button>\n            </Flex>\n          )\n        }\n      </Box>\n    );\n\n    if (this.props.showInline){\n      return (\n        <InnerComponent\n          {...this.props}\n        />\n      );\n    }\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          <ModalCard.Header title={title}>\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <InnerComponent/>\n          </ModalCard.Body>\n          <ModalCard.Footer>\n            <Flex px={[2,0]} flexDirection={['column', 'row']} width={1} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.closeModal(e) }\n                size={this.props.isMobile ? 'small' : 'medium'}\n              >\n              CLOSE\n              </Button>\n              {\n                this.state.selectedToken !== null && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n                  <Button\n                    my={2}\n                    mx={[0, 2]}\n                    borderRadius={4}\n                    onClick={ e => this.goBack(e) }\n                    className={styles.gradientButton}\n                    size={this.props.isMobile ? 'small' : 'medium'}\n                  >\n                    GO BACK\n                  </Button>\n                )\n              }\n            </Flex>\n          </ModalCard.Footer>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default BuyModal;","import React from \"react\";\nimport styles from './ModalCard.module.scss';\nimport { Box, Flex, Card, Button, Heading, Image } from \"rimble-ui\";\n\nconst ModalCard = ({children, closeFunc, ...props}) => (\n  <Card\n    p={0}\n    border={0}\n    mx={'auto'}\n    my={'auto'}\n    height={'auto'}\n    borderRadius={2}\n    overflow={'auto'}\n    width={ props.width ? props.width : 'auto' }\n    minWidth={ props.minWidth ? props.minWidth : 'auto' }\n    maxWidth={ props.maxWidth ? props.maxWidth : '960px'}\n  >\n    <Box\n      top={'0'}\n      zIndex={1}\n      right={'0'}\n      position={\"absolute\"}\n    >\n      <Button.Text\n        icononly\n        icon={\"Close\"}\n        size={'2.5em'}\n        onClick={closeFunc}\n        mainColor={ props.mainColor ? props.mainColor :  'copyColor' }\n      />\n    </Box>\n    <Flex\n      height={'100%'}\n      flex={'1 1 auto'}\n      flexDirection={'column'}\n      className={[ props.bgLayer ? styles.bg : null]}\n      style={{\n        overflow: 'auto',\n        backgroundRepeat:'no-repeat',\n        backgroundPosition:'bottom right',\n        backgroundSize: !props.background ? '65%' : null,\n        backgroundImage:'url(/images/bg-bottom-right.png)',\n        background: props.background ? props.background : null,\n      }}\n      backgroundColor={'cardBg'}\n    >\n      {children}\n    </Flex>\n  </Card>\n);\n\nModalCard.Header = (props) => (\n  <Box\n    width={1}\n    mb={[2,3]}\n    pb={[2,2]}\n    pt={ props.pt ? props.pt : (props.icon ? 3 : [5,3]) }\n    borderBottom={ props.borderBottom ? props.borderBottom : '1px solid #eee' }\n  >\n    <Flex\n      px={[1,2]}\n      alignItems={'center'}\n      flexDirection={'column'}\n    >\n      { props.icon && <Image width={ props.iconHeight ? props.iconHeight : '50px' } src={props.icon} /> }\n      <Heading.h3\n        mb={0}\n        fontSize={[3,3]}\n        color={'copyColor'}\n        textAlign={'center'}\n        mt={props.icon ? 2 : 0}\n        fontFamily={'sansSerif'}\n        {...props.titleProps}\n      >\n        {props.title}\n      </Heading.h3>\n      {\n        props.subtitle &&\n        <Heading.h4\n          pt={[1,2]}\n          fontWeight={2}\n          fontSize={[2,2]}\n          lineHeight={1.5}\n          color={'dark-gray'}\n          textAlign={'center'}\n          {...props.subtitleProps}\n        >\n          {props.subtitle}\n        </Heading.h4>\n      }\n      {\n        props.subtitle2 &&\n        <Heading.h4 pt={0} fontSize={[2,2]} textAlign={'center'} fontWeight={2} lineHeight={1.5} color={'dark-gray'}>\n          {props.subtitle2}\n        </Heading.h4>\n      }\n    </Flex>\n  </Box>\n);\n\nModalCard.Body = ({children, ...props}) => (\n  <Box\n    width={1}\n    px={[3,5]}\n    {...props}\n  >\n    {children}\n  </Box>\n);\n/*\nModalCard.Body = ({children, ...props}) => (\n  <Flex flex={'1 1 auto'} style={{ overflow: 'auto' }} >\n    <Box width={1} px={[4,5]} py={[3,4]} m={'auto'}>\n      {children}\n    </Box>\n  </Flex>\n);\n*/\n\nModalCard.Footer = ({children, ...props}) => (\n  <Flex\n    flex={'1 0 auto'}\n    justifyContent={'center'}\n    borderTop={1}\n    borderColor={'light-gray'}\n    px={[0,3]}\n    py={3}\n  >\n    {children}\n  </Flex>\n);\n\n\nModalCard.BackButton = ({onClick, ...props}) => (\n  <Box\n    position={'absolute'}\n    top={'0'}\n    left={'0'}\n    m={3}\n    bg={'white'}\n  >\n    <Button.Outline\n      onClick={onClick}\n      icononly\n      icon={'ArrowBack'}\n      size={'2.5em'}\n    />\n  </Box>\n);\n\nexport default ModalCard;\n","import {\n  Link as RouterLink,\n} from \"react-router-dom\";\nimport ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport styles from './Footer.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Heading, Image, Link } from 'rimble-ui';\n\nclass Footer extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  render() {\n    const currYear = new Date().getFullYear();\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n    const columnWidth = governanceEnabled ? 1/4 : 1/3;\n    return (\n      <Flex\n        pl={0}\n        id={\"footer\"}\n        alignItems={'center'}\n        flexDirection={'column'}\n        className={styles.footer}\n        backgroundColor={'white'}\n        justifyContent={'flex-start'}\n      >\n        <Flex\n          width={1}\n          px={[3,6]}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            height={['auto','100%']}\n            alignItems={'flex-start'}\n            maxWidth={['35em','70em']}\n            justifyContent={'flex-start'}\n            flexDirection={['column','row']}\n          >\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Resources\n              </Heading.h3>\n              <Flex width={1} flexDirection={'column'}>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://developers.idle.finance'}\n                >\n                  <span role=\"img\" aria-label=\"documentation\">📚</span> Documentation\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.notion.so/idlelabs/Idle-Finance-Brand-Assets-fd63e4161cb64c999531646c7549bc4b'}\n                >\n                  <span role=\"img\" aria-label=\"brand-assets\">🎨</span> Brand Assets\n                </ExtLink>\n                <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                  <RouterLink\n                    color={'blue'}\n                    to=\"/terms-of-service\"\n                    className={styles.link}\n                  >\n                    <Text\n                      fontWeight={3}\n                      color={'blue'}\n                      fontSize={[3,2]}\n                      hoverColor={'blue'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                    >\n                      <span role=\"img\" aria-label=\"terms-of-service\">📑</span> Terms of Service\n                    </Text>\n                  </RouterLink>\n                </Flex>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749'}\n                >\n                  <span role=\"img\" aria-label=\"privacy-policy\">🕵️‍♂️</span> Privacy Policy\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'}\n                >\n                  <span role=\"img\" aria-label=\"cookie-policy\">🍪</span> Cookie Policy\n                </ExtLink>\n              </Flex>\n            </Flex>\n            {\n              governanceEnabled && \n                <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n                  <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                    Governance\n                  </Heading.h3>\n                  <Flex width={1} flexDirection={'column'}>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        to={\"/governance\"}\n                        className={styles.link}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-overview\">🏛</span> Overview\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/proposals\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-proposals\">💡</span> Proposals\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/leaderboard\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-leaderboard\">📋</span> Leaderboard\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://gov.idle.finance/\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🤝</span> Forum\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://www.notion.so/idlelabs/ffe8115b7b53489ab0a7f84e656e4bb0?v=916250f54ff24daabad72cf095fd6d88\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🌎</span> Team\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                  </Flex>\n                </Flex>\n            }\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Start a Conversation\n              </Heading.h3>\n              <Link textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>\n                <span role=\"img\" aria-label=\"email\">✉️</span> info@idle.finance\n              </Link>\n            </Flex>\n            <Flex width={[1,columnWidth]} flexDirection={'column'}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Explore\n              </Heading.h3>\n              <Flex flexDirection={'row'} justifyContent={['space-evenly','flex-start']}>\n                <ExtLink href=\"https://twitter.com/idlefinance\">\n                  <Image src=\"images/social/twitter.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://t.me/idlefinance\">\n                  <Image src=\"images/social/telegram.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://discord.gg/mpySAJp\">\n                  <Image src=\"images/social/discord.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://medium.com/@idlefinance\">\n                  <Image src=\"images/social/medium.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://github.com/Idle-Labs/\">\n                  <Image src=\"images/social/github.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://www.linkedin.com/company/idlefinance\">\n                  <Image src=\"images/social/linkedin.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://defipulse.com/defi-list\">\n                  <Image src=\"images/social/defi-pulse.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n              </Flex>\n            </Flex>\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n          height={['auto','100%']}\n          flexDirection={'column'}\n          alignItems={['center','flex-end']}\n          justifyContent={['center','flex-end']}\n        >\n          <Flex\n            p={2}\n            width={1}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={'dark-blue'}\n            flexDirection={['column','row']}\n          >\n            <Text\n              color={'white'}\n              textAlign={['center','flex-end']}\n            >\n              &copy; {currYear} - Idle Labs Inc.\n            </Text>\n            <RouterLink\n              color={'blue'}\n              to={'/terms-of-service'}\n              style={{textDecoration:'none'}}\n            >\n              <Text\n                pl={2}\n                color={'#0df'}\n                textAlign={['center','flex-end']}\n              >\n                Terms of Service\n              </Text>\n            </RouterLink>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport styles from './TableCellHeader.module.scss';\nimport { Flex, Heading, Icon, Link, Tooltip } from \"rimble-ui\";\n\nclass TableCellHeader extends Component {\n  render() {\n\n    const ColTitle = (props) => (\n      <Heading.h4\n        fontWeight={[3,4]}\n        color={'cellTitle'}\n        style={{\n          width:'100%',\n          whiteSpace:'nowrap'\n        }}\n        fontSize={['10px',3]}\n        lineHeight={'initial'}\n        {...props}\n      >\n        {props.children}\n      </Heading.h4>\n    );\n\n    return (\n      <Flex\n        width={this.props.width}\n      >\n        {\n          (this.props.desc && this.props.desc.length>1) ? (\n            <Flex\n              alignItems={'center'}\n            >\n              <ColTitle\n                {...this.props}\n              />\n              <Link\n                style={{\n                  cursor:'pointer'\n                }}\n                onClick={ e => this.props.openTooltipModal(this.props.title,this.props.desc) }\n              >\n                <Tooltip\n                  placement={'top'}\n                  message={'Click to read the description'}\n                >\n                  <Icon\n                    ml={1}\n                    name={\"Info\"}\n                    color={'cellTitle'}\n                    className={styles.tooltip}\n                    size={ this.props.isMobile ? '1em' : '1.2em'}\n                  />\n                </Tooltip>\n              </Link>\n            </Flex>\n          ) : (\n            <ColTitle\n              {...this.props}\n            />\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableCellHeader;\n","import React, { Component } from 'react';\nimport { Flex, Text, Icon } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass CardIconButton extends Component {\n  render() {\n    const cardProps = Object.assign({\n      py:1,\n      width:'auto',\n      px:['12px',3],\n    },this.props.cardProps);\n\n    return (\n       <DashboardCard\n         cardProps={cardProps}\n         isInteractive={true}\n         isActive={this.props.isActive}\n         handleClick={this.props.handleClick}\n       >\n         <Flex\n           my={1}\n           alignItems={'center'}\n           flexDirection={'row'}\n           justifyContent={'center'}\n         >\n          {\n            this.props.useIconOnly ? (\n              <Icon\n                align={'center'}\n                name={this.props.icon}\n                size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                color={ this.props.iconColor ? this.props.iconColor : 'redeem' }\n              />\n            ) : (\n             <Flex\n               mr={2}\n               p={['4px','7px']}\n               borderRadius={'50%'}\n               alignItems={'center'}\n               justifyContent={'center'}\n               backgroundColor={ this.props.iconBgColor ? this.props.iconBgColor : this.props.theme.colors.transactions.actionBg.redeem }\n             >\n               <Icon\n                 align={'center'}\n                 name={this.props.icon}\n                 size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                 color={ this.props.iconColor ? this.props.iconColor : 'redeem' }\n               />\n             </Flex>\n            )\n          }\n           <Text\n             fontWeight={3}\n             fontSize={[1,3]}\n             {...this.props.textProps}\n           >\n             {this.props.text}\n           </Text>\n         </Flex>\n       </DashboardCard>\n    );\n  }\n}\n\nexport default CardIconButton;"],"sourceRoot":""}