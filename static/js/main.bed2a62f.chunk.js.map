{"version":3,"sources":["SmartNumber/SmartNumber.js","TrancheWelcome/TrancheWelcome.module.scss","PageNotFound/PageNotFound.module.scss","Breadcrumb/Breadcrumb.js","RoundIconButton/RoundIconButton.js","utilities/components/ShortHash.js","LoadingSpinner/LoadingSpinner.js","ButtonLoader/ButtonLoader.js","CustomTooltip/CustomTooltip.js","AllocationChart/AllocationChart.js","CustomTooltip/CustomTooltipRow.js","Faquestion/Faquestion.js","TranchesList/TranchesList.js","ActiveCoverages/ActiveCoverages.js","PortfolioEquity/PortfolioEquity.js","GenericSelector/GenericSelector.js","CardIconButton/CardIconButton.js","TxProgressBar/TxProgressBar.js","theme.js","AssetSelector/AssetSelector.js","ExecuteTransaction/ExecuteTransaction.js","utilities/components/ModalCard.module.scss","TwitterShareButton/TwitterShareButton.module.scss","TableCellHeader/TableCellHeader.module.scss","TransactionListFilters/TransactionListFilters.module.scss","Web3ConnectionButtons/Web3ConnectionButtons.module.scss","IconBox/IconBox.js","GenericChart/GenericChart.js","utilities/components/Header.module.scss","TooltipText/TooltipText.js","Tos/Tos.module.scss","TransactionField/TransactionField.js","utilities/IdleGovToken.js","utilities/FunctionsUtil.js","DashboardCard/DashboardCard.js","DashboardCard/DashboardCard.module.scss","utilities/components/BuyModal.js","TableRow/TableRow.js","TableHeader/TableHeader.js","FastBalanceSelector/FastBalanceSelector.js","CustomList/CustomList.js","Staking/Staking.js","GenericFaqs/GenericFaqs.js","utilities/components/LimitReachedModal.js","TrancheDetails/TrancheDetails.js","TrancheHarvests/TrancheHarvests.js","SendTxWithBalance/SendTxWithBalance.js","TrancheDepositRedeem/TrancheDepositRedeem.js","PortfolioEquityTranches/PortfolioEquityTranches.js","FundsOverviewTranche/FundsOverviewTranche.js","StakingRewardsTranche/StakingRewardsTranche.js","TranchePage/TranchePage.js","TrancheBox/TrancheBox.js","TrancheFlash/TrancheFlash.js","TrancheWelcome/TrancheWelcome.js","GenericPieChart/GenericPieChart.js","TotalBalanceCounter/TotalBalanceCounter.js","TotalEarningsCounter/TotalEarningsCounter.js","Tranches/Tranches.js","TokenSwap/TokenSwap.js","LpStaking/LpStaking.js","StatsCardSmall/StatsCardSmall.js","IdleStaking/IdleStaking.js","NexusMutual/NexusMutual.js","TokenWrapper/TokenWrapper.js","PortfolioDonut/PortfolioDonut.js","EarningsEstimation/EarningsEstimation.js","DashboardIconButton/DashboardIconButton.js","PolygonBridgeTransactions/PolygonBridgeTransactions.js","StrategyPage/StrategyPage.js","BatchDeposit/BatchDeposit.js","PolygonBridge/PolygonBridge.js","CoverProtocol/CoverProtocol.js","TokenMigration/TokenMigration.js","BatchMigration/BatchMigration.js","DeployB2BVesting/DeployB2BVesting.js","configs/globalConfigs.js","abis/compound/cDAI.js","abis/tokens/ERC20.js","configs/availableTokens.js","../node_modules/@maticnetwork/meta/network sync /^/.//.*//index/.json$","../node_modules/@maticnetwork/meta/network sync /^/.//.*/.json$","TransactionListFilters/TransactionListFilters.js","TransactionsList/TransactionsList.js","Migrate/Migrate.js","ChartCustomTooltipRow/ChartCustomTooltipRow.js","Tos/Tos.js","theme-dark.js","App/connectors/TorusConnector.js","App/connectors/AuthereumConnector.js","App/connectors/GnosisSafeConnector.js","App/connectors/WalletLinkConnector.js","App/connectors/WalletConnectConnector.js","App/connectors.js","utilities/components/WrongNetworkBanner.js","utilities/NetworkUtil.js","utilities/components/NoWeb3BrowserModal.js","utilities/components/NoWalletModal.js","utilities/GeneralUtil.js","utilities/components/WrongNetworkModal.js","utilities/components/TransactionFeeModal.js","Web3ConnectionButtons/Web3ConnectionButtons.js","utilities/components/ConnectionModal.js","utilities/components/ConnectionPendingModal.js","utilities/components/UserRejectedConnectionModal.js","utilities/components/LowFundsModal.js","utilities/ConnectionModalsUtil.js","utilities/components/ConnectionErrorModal.js","utilities/components/TransactionErrorModal.js","utilities/RimbleWeb3.js","utilities/components/Header.js","ScrollToTop/ScrollToTop.js","PageNotFound/PageNotFound.js","utilities/components/NetworkOverview.js","Web3Debugger/Web3Debugger.js","configs/availableTranches.js","utilities/TransactionToastMessages.js","utilities/TransactionToastUtil.js","App/App.js","serviceWorker.js","index.js","AssetsList/AssetsList.js","Footer/Footer.module.scss","utilities/components/ModalCard.js","colors.js","AssetsUnderManagement/AssetsUnderManagement.js","VariationNumber/VariationNumber.js","GenericSelector/GenericSelector.module.scss","LoadingSpinner/LoadingSpinner.module.scss","ConnectBox/ConnectBox.js","FlexLoader/FlexLoader.js","Title/Title.js","TrancheField/TrancheField.js","Footer/Footer.js","TableCellHeader/TableCellHeader.js","ChartCustomTooltip/ChartCustomTooltip.js","TwitterShareButton/TwitterShareButton.js","utilities/components/ShareModal.js","CustomField/CustomField.js","ImageButton/ImageButton.js","RoundButton/RoundButton.js","ExtLink/ExtLink.js","AssetField/AssetField.js"],"names":["SmartNumber","functionsUtil","this","setProps","props","FunctionsUtil","loadUtils","_this2","formattedNumber","number","isNaN","type","formatMoney","precision","abbreviateNumber","decimals","maxPrecision","minPrecision","flexProps","width","alignItems","flexDirection","justifyContent","Object","keys","length","forEach","p","showUnit","unit","unitPos","react__WEBPACK_IMPORTED_MODULE_8___default","a","createElement","rimble_ui__WEBPACK_IMPORTED_MODULE_7__","unitProps","Component","module","exports","trancheFlash","mobile","headerContainer","headerBgFiller","bgContainer","list","textContainer","Breadcrumb","_this","showPathMobile","react__WEBPACK_IMPORTED_MODULE_5___default","rimble_ui__WEBPACK_IMPORTED_MODULE_6__","id","handleClick","_RoundIconButton_RoundIconButton__WEBPACK_IMPORTED_MODULE_7__","buttonProps","border","height","iconSize","iconName","text","ml","fontSize","fontWeight","color","hoverColor","onClick","isMobile","path","map","index","link","pathLink","Link","Text","pl","style","maxWidth","overflow","whiteSpace","textOverflow","borderLeft","concat","theme","colors","divider","key","e","goToSection","RoundIconButton","assign","borderRadius","mainColor","disabled","minWidth","react__WEBPACK_IMPORTED_MODULE_6___default","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_7__","rimble_ui__WEBPACK_IMPORTED_MODULE_5__","name","size","ShortHash","state","componentUnmounted","loadData","prevProps","prevState","hash","newState","callback","setState","resolveAddress","shortenHash","getENSName","ensName","setStateSafe","loader","react__WEBPACK_IMPORTED_MODULE_7___default","rimble_ui__WEBPACK_IMPORTED_MODULE_8__","display","LoadingSpinner","react_default","index_es","className","styles","mx","ButtonLoader","isLoading","src_LoadingSpinner_LoadingSpinner","buttonText","CustomTooltip","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_7__","point","cardProps","py","px","left","data","itemPos","xFormatted","mb","textAlign","children","AllocationChart","chartData","chartProps","selectedSlice","totalAllocation","protocolsAllocations","protocolsAllocationsPerc","selectedToken","getTokenAllocation","tokenConfig","padAngle","animate","borderWidth","cornerRadius","motionDamping","innerRadius","motionStiffness","d","onMouseEnter","_this3","onMouseLeave","tooltipFormat","v","sliceLabel","value","radialLabel","tooltip","container","inline","background","cardBg","labels","fontFamily","fonts","sansSerif","legends","slicesLabelsSkipAngle","radialLabelsSkipAngle","enableRadialLabels","radialLabelsTextXOffset","slicesLabelsTextColor","radialLabelsTextColor","radialLabelsLinkStrokeWidth","radialLabelsLinkDiagonalLength","radialLabelsLinkHorizontalLength","enableSlicesLabels","radialLabelsLinkColor","from","borderColor","modifiers","margin","top","right","bottom","protocols","protocolInfo","i","protocolName","protocolAddr","address","toLowerCase","protocolAllocationPercParsed","parseFloat","times","toFixed","push","globalConfigs","stats","hsl","join","label","capitalize","protocolIcon","icon","rimble_ui__WEBPACK_IMPORTED_MODULE_9__","position","zIndex","src","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_10__","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_13__","Pie","showLoader","CustomTooltipRow","pr","flexBasis","flex","mr","backgroundColor","textTransform","dangerouslySetInnerHTML","__html","Faquestion","isShowingAnswer","preventDefault","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","my","isOpened","boxShadow","cursor","h4","question","answer","TranchesList","enabledProtocols","availableTranches","_TableHeader_TableHeader__WEBPACK_IMPORTED_MODULE_10__","cols","colsProps","protocol","protocolConfig","tranche","trancheType","token","_TableRow_TableRow__WEBPACK_IMPORTED_MODULE_9__","rowId","cardId","fieldComponent","TrancheField","Base","loaded","activeCoverages","loadCoverages","account","getActiveCoverages","coverages","c","availableTokens","includes","collateral","statusColors","transactions","status","statusIcon","statusColor","completed","failed","pending","statusIconProps","portfolioCoverage","react__WEBPACK_IMPORTED_MODULE_9___default","title","_Title_Title__WEBPACK_IMPORTED_MODULE_8__","titleProps","_CustomList_CustomList__WEBPACK_IMPORTED_MODULE_10__","rows","row","fileClaimUrl","openWindow","fields","themeMode","parentProps","funcProps","actionLabel","actionDisabled","actionUrl","PortfolioEquity","startDate","chartwidth","chartHeight","loadChartData","quickDateSelectionChanged","quickDateSelection","JSON","stringify","enabledTokens","componentDidMount","mobileChanged","themeModeChanged","getEtherscanTxs","etherscanTxs","tokensBalance","firstTxTimestamp","asyncForEach","_ref","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee3","filteredTxs","amountLent","wrap","_context3","prev","next","values","filter","tx","BNify","action","Math","min","parseInt","timeStamp","tokenAmount","plus","minus","lt","balance","tokenPrice","idleTokens","stop","_x3","apply","arguments","currentDate","strToMoment","Date","clone","subtract","days","prevBalances","prevTimestamp","minChartValue","maxChartValue","aggregatedBalance","aggregatedBalancesKeys","tokensBalancesPerDate","currTimestamp","getTime","tokensData","isRisk","selectedStrategy","_ref2","_callee4","tokenAddress","_context4","getAvailableTokenAddress","getTokenApiData","sent","_x4","idleTokenBalance","foundBalances","tokensBalances","lastTokenData","lastTokenDataUnfiltered","pop","filteredTokenData","timestamp","tokenDecimals","filteredBalances","lastFilteredTx","idlePrice","fixTokenDecimals","newBalance","lastTx","lastTxBalance","gt","tokenUsdConversionRate","conversionRateField","getGlobalConfig","toUpperCase","chartToken","conversionRate","momentDate","isSameOrAfter","isSameOrBefore","formattedDate","format","max","frequencySeconds","_loop","aggregatedBalances","date","x","y","balances","itemIndex","item","floor","yFormatDecimals","gridYStep","gridYValues","gridYValue","axisBottomIndex","daysCount","daysFrequency","ceil","xScale","yScale","stacked","xFormat","yFormat","axisBottom","legend","tickSize","tickPadding","orient","legendOffset","tickValues","legendPosition","pointSize","useMesh","axisLeft","tickRotation","pointLabel","enableArea","enableSlices","enableGridY","curve","enableGridX","pointBorderWidth","pointLabelYOffset","areaBaselineValue","pointColor","areaOpacity","axis","ticks","fill","grid","line","stroke","lineChartStroke","strokeDasharray","sliceTooltip","slideData","slice","points","_ChartCustomTooltip_ChartCustomTooltip__WEBPACK_IMPORTED_MODULE_11__","_ChartCustomTooltipRow_ChartCustomTooltipRow__WEBPACK_IMPORTED_MODULE_12__","serieId","yFormatted","formattedBalance","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_10__","Line","parentId","parentIdHeight","GenericSelector","loadComponents","selectedTokenChanged","optionsChanged","options","defaultValueChanged","defaultValue","componentsChanged","CustomOptionValue","CustomValueContainer","ControlComponent","innerProps","menuIsOpen","noShadow","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_12__","isInteractive","notInteractive","CustomIndicatorSeparator","CustomMenu","mt","outerColor","selectProps","CustomInputContainer","isSearchable","fontSizes","copyColor","fontWeights","searchInput","dark","searchInputHidden","CustomOption","selectedValue","o","indexOf","genericSelector","isDashboard","isFocused","react_select__WEBPACK_IMPORTED_MODULE_7__","onChange","components","Menu","Option","Control","Input","SingleValue","IndicatorSeparator","CardIconButton","isActive","isDisabled","align","image","imageProps","useIconOnly","iconColor","iconProps","isSidebar","iconBgColor","actionBg","redeem","textProps","TxProgressBar","txCount","error","ended","percentage","processing","txTimestamp","initialized","estimatedTime","remainingTime","_callee","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default","_context","initProgressBar","getTransaction","transaction","Promise","_ref3","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__","_callee2","resolve","reject","_context2","web3","eth","err","_x","_x2","abrupt","getBlockTime","pt","blockTime","axios","get","getPredictionTable","_callee5","predictTable","_context5","getTxEstimatedTime","gasPrice","getRequiredNetwork","provider","prediction","gasprice","pdValues","_estimateWait","gas","txMeanSecs","block_time","customLog","calculateRemainingTime","_callee6","secondsPassed","timePassed","_context6","blockNumber","div","toString","setTimeout","updateProgressBar","getTxInfo","_callee7","txProgressBarKey","txHash","txProgressBarData","_ref8","_ref9","_context7","localStorage","getItem","parse","all","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","setLocalStorage","_callee8","_context8","window","clearTimeout","gasoffered","minedProb","expectedWait","sum1","sum2","prob","exp","minutes","seconds","substr","currentNetwork","react__WEBPACK_IMPORTED_MODULE_10___default","rimble_ui__WEBPACK_IMPORTED_MODULE_13__","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_11__","textColor","loaderProps","endMessage","waitText","span","renderRemainingTime","loadingMessage","sendingMessage","target","rel","href","getEtherscanTransactionUrl","explorer","cancelTransaction","cancelTextColor","cancelTextHoverColor","_colors__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","polished__WEBPACK_IMPORTED_MODULE_1__","__webpack_exports__","breakpoints","letterSpacings","lineHeights","solid","copy","serif","counter","space","radii","widths","minWidths","maxWidths","heights","minHeights","maxHeights","borders","borderWidths","shadows","opacity","primary","blue","base","gradient-bg","primary-light","light","primary-dark","bgBlue","tick","dark-blue","skyBlue","lightBlue","subColor","black","baseColors","near-black","dark-gray","mid-gray","gray","grey","silver","light-silver","moon-gray","light-gray","near-white","white","transparent","green","connect","newblue","alert","arrowActive","arrowInactive","selectBgFocused","selectBg","backButtonBg","wrongNetworkBannerBg","dashboardBg","statValue","boxBorder","cellTitle","cellText","divider2","deposit","migrate","menuBg","menuHover","flashColor","menuRightBorder","menuIconActive","cardBgContrast","cardHoverShadow","cardBgHover","cardBorder","pageActive","pageInactive","experimental","production","send","swap","boost","swapout","curvein","receive","default","curveout","withdraw","curvedepositin","curvedepositout","blacks","whites","zIndices","messageStyle","shade","tint","success","warning","yellow","danger","red","info","buttons","--main-color","--contrast-color","normal","buttonSizes","small","padding","medium","large","AssetSelector","find","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_9__","fieldInfo","showCustomField","cachedData","setCachedData","showBalance","_GenericSelector_GenericSelector__WEBPACK_IMPORTED_MODULE_11__","changeToken","ExecuteTransaction","txStatus","loading","eventData","eventCategory","eventLabel","methodName","eventAction","contractName","getTransactionError","sendGoogleAnalyticsEvent","callbackReceipt","transactionHash","params","getTransactionParams","getTransactionParamsAsync","transactionParams","console","log","sendRawTransaction","contractMethodSendWrapper","ExecuteComponent","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_11__","network","progressBarProps","bind","execute","componentProps","bg","twitterIcon","radioBtn","button","IconBox","isVisible","GenericChart","addEventListener","handleWindowSizeChange","removeEventListener","chartContainer","document","getElementById","chartWidth","offsetWidth","chartContainerH","ChartType","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_7__","minHeight","undefined","loaderText","gradientButton","empty","select","selectDark","input","TooltipText","placement","message","tooltipProps","TransactionField","loadField","hashChanged","accountChanged","output","tokenSymbol","bgColor","fieldProps","rimble_ui__WEBPACK_IMPORTED_MODULE_12__","_utilities_components_ShortHash__WEBPACK_IMPORTED_MODULE_11__","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_9__","amount","iconSrc","CustomComponent","customValue","getArrayPath","Image","Icon","IdleGovToken","classCallCheck","tokenName","getBalance","asyncToGenerator","regenerator_default","getTokenBalance","claimRewards","getPriorVotes","priorVotes","_args3","genericContractCall","refreshIdleSpeed","getUnclaimedTokens","getAPR","_ref6","IDLETokenConfig","cachedDataKey","APR","_ref7","idleDistribution","tokenAllocation","DAITokenConfig","tokenPool","idleDistributedPerYearUSD","_args6","enabled","idle","getDistribution","slicedToArray","getUniswapConversionRate","t0","lte","convertTokenBalance","totalAllocationWithUnlent","getSpeed","idleTokenAddress","idleSpeeds","getCachedDataWithLocalStorage","setCachedDataWithLocalStorage","_x5","_ref10","blocksPerYear","distribution","_x6","getUserDistribution","_callee10","fixByFrequency","currentNetworkId","totalSpeed","_args10","_context10","availableStrategies","getRequiredNetworkId","_ref12","_callee9","_ref13","_ref14","idleSpeed","userPoolShare","tokenSpeed","_context9","getUserPoolShare","_x7","fixDistributionSpeed","distributionFrequency","getAvgApr","_callee12","_args12","_context12","_ref16","_callee11","_ref17","_ref18","idleApr","_context11","_x8","ethereumjsABI","require","profiler","idleGovToken","trimEth","toBN","n","utils","BN","toEth","wei","fromWei","toWei","htmlDecode","innerHTML","childNodes","nodeValue","BNify_obj","s","BigNumber","String","_len","Array","_key","logs","messagesEnabled","moment","customLogError","_console","_len2","_key2","errorsEnabled","getContractByName","networkId","required","contract","contracts","current","isCorrectNetwork","contractsNetworks","normalizeSimpleIDNotification","replace","str","replaceArrayProps","arr1","arr2","replaceArrayPropsRecursive","objectSpread","stripHtml","html","tmp","textContent","innerText","scrollTo","to","duration","start","scrollY","change","currentTime","easeInOutQuad","t","b","animateScroll","val","getQueryStringParameterByName","url","location","results","RegExp","exec","decodeURIComponent","getTxAction","depositProxyContractInfo","migrationContractAddr","migration","migrationContract","migrationContractOldAddrs","oldAddresses","batchMigration","batchMigrationContractAddr","isMigrationTx","contractAddress","isSendTransferTx","isReceiveTransferTx","isDepositTx","isRedeemTx","isSwapTx","startLen","endLen","shortHash","txStart","txEnd","switchEthereumChain","chainId","getCurrentWeb3","currentProvider","request","toHex","method","addEthereumChain","networkConfig","chainName","providerConfig","blockExplorerUrl","rpcUrls","publicRpc","rpc","nativeCurrency","baseToken","symbol","blockExplorerUrls","ensConfig","TTL","ens","addressCheck","supportedNetworks","checkAddress","ENS","ensAddress","getEnsAddress","getName","getAddress","getAccountPortfolioTranches","portfolio","tranches","avgAPY","totalBalance","totalEarnings","totalAmountLent","totalEarningsPerc","_args5","tranchesBalance","_ref4","_ref5","trancheConfig","trancheTokenBalance","trancheUserInfo","trancheStakedBalance","tranchePrice","tranchePool","tokenBalance","_ref11","tokenBalanceConverted","trancheEarnings","trancheApy","poolShare","amountDeposited","getContractBalance","getTrancheUserInfo","getTrancheStakedBalance","CDORewards","functions","stakedBalance","toConsumableArray","loadTrancheFieldRaw","convertTrancheTokenBalance","amountDepositedConverted","trancheInfo","trancheWeight","getAccountPortfolio","orderedTokensBalance","depositedTokens","_args8","tokensToMigrate","totalBalanceConverted","_ref15","_ref15$","migrationEnabled","oldContractBalanceFormatted","tokenKey","checkMigration","strategy","getIdleTokenPrice","tokenAprs","tokenAPY","tokenWeight","amountLentToken","tokenEarnings","getTokenAprs","getAmountDeposited","avgApy","requiredNetwork","web3RpcKey","web3Rpc","ethereum","Web3","providers","HttpProvider","getCurveAvgSlippage","processedTxs","processedHashes","curveTokensBalance","curveTxs","avgSlippage","totalDeposited","_args9","getCurveAvailableTokens","getCurveTxs","curveTokens","curveTokenPrice","price","received","slippage","deposited","getCurveAvgBuyPrice","avgBuyPrice","prevAvgBuyPrice","getAvgBuyPrice","_args11","idleTokensBalance","getFirstDepositTx","deposits","firstDepositTx","getDashboardSectionUrl","section","env","envUrl","baseUrl","origin","asyncTimeout","ms","getDepositTimestamp","_callee13","firstDepositTxs","_args13","_context13","reduce","acc","getTrancheStakingRewardsDistributions","_ref24","_callee15","stakingDistributions","stakingRewards","_context15","_ref25","_callee14","eventFilters","transfers","_context14","CDO","getContractEvents","fromBlock","toBlock","_x9","getTrancheHarvests","_ref26","_callee17","_ref27","_ref28","stakingRewardsDistributions","autoFarming","harvestsList","_context17","_ref29","_callee16","_context16","_x12","_x10","_x11","getTrancheRewardTokensInfo","_ref30","_callee19","tokensDistribution","_context19","_ref31","_callee18","firstHarvest","latestHarvest","tokenApr","tokenApy","lastAmount","totalAmount","distributionSpeedUnit","tokensPerDay","tokensPerYear","tokensPerBlock","tranchePoolSize","tokensPerSecond","distributionSpeed","convertedTokensPerYear","govTokenConfig","rewardsRateMethod","_ref32","_ref33","_firstHarvest","_latestHarvest","firstBlock","_ref34","_ref35","prevBlockInfo","lastBlockInfo","lastBlockPoolSize","poolSize","elapsedBlocks","elapsedSeconds","_context18","_address","rewardsRate","apr2apy","apr","apy","getBlockInfo","genericContractCallCached","returnValues","total","_x15","_x13","_x14","_ref36","_callee21","defaultEventsConfig","underlyingEventsConfig","underlyingEventsFilters","_ref37","_ref38","underlying_transfers","trancheToken_transfers","totalAmountDeposited","blocksInfo","_context21","sort","_ref39","_callee20","trancheTokenTransferEvent","tokenTransferEvent","_ref40","_ref41","blockInfo","tokenConversionRate","_context20","_x19","trancheTokenAmount","hashKey","trancheTokens","tokenAmountConverted","_x16","_x17","_x18","getTrancheUserTransactions","_ref42","_callee22","_context22","_x20","_x21","_x22","getTrancheFirstDepositTx","_ref43","_callee23","_context23","_x23","_x24","_x25","getAmountDepositedTranche","_ref44","_callee24","_context24","_x26","_x27","_x28","_ref45","_callee25","_ref46","_ref47","userAvgPrice","_context25","_x29","_x30","getAmountLent","_callee26","amountLents","_args26","_context26","getBaseToken","getCurrentNetwork","getCurrentNetworkId","defaultNetwork","getPolygonBridgeTxs","_callee32","txs","covalentInfo","etherscanInfo","stateSenderConfig","erc20PredicateConfig","etherPredicateConfig","depositManagerConfig","rootChainManagerConfig","polygonNetworkId","covalentApiUrl","polygonAvailableTokens","polygonEndpoint","ethereumNetworkId","etherscanApiUrl","etherscanEndpoint","etherscanTxlistEndpoint","etherscanTxlistInternalEndpoint","_ref50","_ref51","last_state_id","polygonTxs","etherscanTxlist","etherscanTxlistInternal","rootTokensAddresses","childTokensAddresses","depositTxs","exitTxs","depositTxsHashes","depositETHInputRexExp","depositETHTxs","exitETHTxs","_args32","_context32","getCachedData","endpoints","getPolygonCurrentLastStateId","makeCachedRequest","makeEtherscanApiRequest","childToken","rootToken","result","_ref52","_callee27","ethereumTx","txReceipt","stateSenderLog","tx_state_id","_context27","bridgeType","getTxReceipt","web3Infura","hexToNumberString","topics","included","_x31","_ref53","_callee28","_context28","_x32","match","_ref54","_callee29","_context29","_x33","_ref55","_callee30","_context30","_x34","items","to_address","_ref56","_callee31","polygonTx","_context31","normalizePolygonTx","exited","maticPOSClient","exitERC20","encodeAbi","_x35","getPolygonBaseTxs","_callee33","debug","baseTxs","baseEndpoint","cachedRows","lastCachedTx","lastCachedBlockNumber","covalentEndpointLastBlock","latestTxs","latestBlockNumbers","requestCount","requestStatus","dataToCache","_args33","_context33","getCachedRequest","block_height","filterPolygonTxs","tx_hash","saveFetchedTransactions","makeRequest","now","addKeyToCachedDataWithLocalStorage","getEtherscanBaseTxs","_callee34","firstBlockNumber","endBlockNumber","firstIdleBlockNumber","etherscanEndpointLastBlock","_args34","_context34","filterEthereumTxs","_callee35","_args35","_context35","filterCurveTxs","endpoint","txsToStore","cachedRequest","saveCachedRequest","_callee36","resultData","_resultData","allAvailableTokens","_args36","_context36","processStoredTxs","t1","_callee37","contractInstance","_context37","web3Polygon","Contract","constant","inputs","outputs","internalType","payable","stateMutability","methods","lastStateId","call","checkPolygonTransactionIncluded","_ref62","_callee38","_ref63","_ref64","_context38","getTransactionReceipt","_x36","_ref65","_callee39","_args39","_context39","_x37","depositLogEvent","log_events","sender_address","decoded","param","redeemLogEvent","withdrawLogEvent","tokenDecimal","idleToken","block_signed_at","_d","logEvent","raw_log_topics","from_address","gasUsed","gas_spent","gas_price","_ref66","_callee40","processTransactions","idleTokensAddresses","_args40","_context40","mappedTx","_x38","_x39","filterEtherscanTxs","_ref67","_callee41","processTxs","_args41","_context41","_x40","_ref68","_callee42","curveTransfersTxs","curveTransfersTxsToDelete","curveZapContract","curvePoolContract","curveSwapContract","curveDepositContract","_args42","_context42","tokenMigrationToolParams","curveTokenConfig","internalTxs","r","isRightToken","iTx","isBatchMigrationTx","isDepositInternalTx","iTx2","isRedeemInternalTx","isConversionTx","isWithdrawTx","curveTx","isCurveTx","isCurveDepositTx","isCurveRedeemTx","isCurveDepositIn","isCurveDepositOut","isCurveZapIn","isCurveZapOut","isCurveTransferOut","isCurveTransferIn","isSwapOutTx","tokenValue","newValue","iTxs","withdrawnValue","_x41","addStoredTransaction","txKey","storedTxs","getStoredTransactions","updateStoredTransactions","getStoredItem","_ref69","_callee47","txReceipts","baseTokensConfigs","baseTokensAddresses","curveAvailableTokens","_args47","_context47","baseTokenConfig","baseTokenAddress","_ref70","_callee46","minedTxs","_context46","_ref71","_callee45","storedTx","tokensTransfered","_curveTokenPrice","_curveTokenPrice2","curveTxReceipt","filteredLogs","_curveTokenPrice3","_curveTxReceipt","idleTokenDecimals","_filteredLogs","_context45","getCurveTokenPrice","_ref72","_callee43","_context43","_x46","_x47","baseTokensConfig","t2","_ref73","_callee44","_context44","_x48","_x49","_x44","_x45","_x43","_x42","_ref74","_callee53","txsToProcess","_args53","_context53","_ref75","_callee52","_context52","_ref76","_callee51","isStoredTx","allowedMethods","pendingStatus","txSucceeded","txPending","isMetaTx","methodIsAllowed","realTx","txValue","redeemedValueFixed","executeMetaTransactionReceipt","executeMetaTransactionContractAddr","executeMetaTransactionInternalTransfers","IdleProxyMinterInfo","internalTransfer","metaTxValue","metaTxValueFixed","migrationTxReceipt","migrationTxInternalTransfers","migrationInternalTransfer","decodedLogs","migrationValue","migrationValueFixed","_context51","mintIdleToken","redeemIdleToken","migrateFromToIdle","mintIdleTokensProxy","migrateFromAaveToIdle","migrateFromIearnToIdle","executeMetaTransaction","migrateFromFulcrumToIdle","migrateFromCompoundToIdle","created","_ref77","_callee48","_context48","_x54","_x55","_ref78","_callee49","_context49","_x56","_x57","oldContract","events","raw","_ref79","_callee50","_context50","_x58","_x59","abi","decodeLog","_token","_x52","_x53","_x51","_x50","alias","getCustomAddress","setCustomAddress","customAddress","cachedRequests","buildSubgraphQuery","entity","getSubgraphTrancheInfo","_ref80","_callee54","trancheAddress","startTimestamp","endTimestamp","subgraphConfig","currTime","queryParams","subgraphQuery","postData","subgraphData","lastTimestamp","subgraphData_2","_args54","_context54","first","orderBy","orderDirection","where","Tranche","timeStamp_gte","timeStamp_lte","entities","trancheInfos","query","makePostRequest","_x60","_ref81","_callee55","error_callback","config","_args55","_context55","post","catch","_x61","_ref82","_callee56","_args56","_context56","_x62","_ref83","_callee57","apiKeyIndex","apiKey","_args57","_context57","_x63","_ref84","_callee58","return_data","_args58","_context58","_x64","makeCachedPostRequest","_ref85","_callee59","_args59","_context59","_x65","code","errorCode","split","getGlobalConfigs","array","prop","shift","configs","getAppUrl","baseURL","getCurrentEnvironment","environments","checkChristmas","checkUrlPolygon","polygonUrl","checkUrlOrigin","checkUrlBeta","betaURL","sendGoogleAnalyticsPageview","_callee60","page","googlePageviewInfo","isOrigin","_args60","_context60","ga","_ref87","_callee62","googleEventsInfo","debugEnabled","originOk","_args62","_context62","analytics","google","addPostfixForTestnet","availableNetworks","_ref88","_callee61","_context61","hitCallback","hitCallbackFail","_x67","_x68","_x66","createContract","_ref89","_callee63","_context63","_x69","_x70","_x71","getWalletProvider","defaultProvider","simpleIDPassUserInfo","userInfo","simpleID","email","initSimpleID","passUserInfo","defaultUrl","baseurl","getEtherscanAddressUrl","decimalCount","decimal","thousands","abs","negativeSign","Number","j","getSnapshotProposals","_callee66","activeOnly","whitelist","proposals","validProposals","_args66","_context66","addr","_ref91","_callee65","checkedStrategies","_context65","end","author","snapshot","strategies","_ref92","_callee64","tokenContract","_context64","_x73","_x72","getAprsFromApi","_callee67","endpointInfo","aprs","_args67","_context67","_ref94","_callee68","forceStartTimestamp","frequency","order","limit","filteredCachedData","_filteredData","apiInfo","filteredData","_args68","_context68","_x74","getTokenExchangeRate","_ref95","_callee69","exchangeRateParams","exchangeRate","_context69","_x75","_x76","getTokenDecimals","_ref96","_callee70","_context70","_x77","allocations","avgApr","aprWeighted","allocation","getFrequencySeconds","quantity","hour","day","week","getIdleStakingRewardsTxs","_callee71","idleTokenConfig","feeDistributorConfig","_context71","getProtocolInfoByAddress","integerValue","ROUND_FLOOR","normalizeTokenDecimals","normalizeTokenAmount","normalizedTokenDecimals","checkContractPaused","_callee72","contractPaused","_args72","_context72","parse_json","return_default","clearStoredData","excludeKeys","clear","storedKeysToRemove","storedKey","removeStoredItem","removeItem","setItem","checkRebalance","_ref99","_callee74","lastAllocationsPromises","protocolIndex","newAllocations","diff","_context74","lastAllocationsPromise","_ref100","_callee73","lastAllocations","_context73","_x79","_x80","alloc","_x78","_ref101","_callee75","oldContractBalance","oldContractTokenDecimals","oldContractName","_context75","_x81","_x82","_ref102","_callee76","eventName","_args76","_context76","getContractPastEvents","_x83","_x84","estimateMethodGasUsage","_ref103","_callee77","methodParams","_contract$methods","functionCall","gasLimit","_ref104","_ref105","_args77","_context77","getGasPrice","estimateGas","_x85","_x86","_ref106","_callee78","userAddress","signedParameters","callback_receipt","_contract$methods2","_context78","on","once","confirmationNumber","receipt","_x87","_x88","_x89","_x90","_x91","getSignatureParameters_v4","signature","isHexStrict","Error","hexToNumber","constructMetaTransactionMessage","nonce","functionSignature","soliditySHA3","toBuffer","checkBiconomyLimits","_ref107","_callee79","biconomyInfo","res","_context79","limits","apiId","headers","x-api-key","_x92","sendTxWithPermit","_ref108","_callee80","_contract$methods3","messageToSign","_this$getSignaturePar","_context80","encodeABI","personal","sign","_x93","_x94","_x95","_x96","_x97","_x98","buildBiconomyErc20ForwarderTx","_ref109","_callee81","permitType","callData","buildParams","_context81","txGas","erc20ForwarderClient","buildTx","_x99","_x100","_x101","_x102","_x103","_ref110","_callee83","_context83","_ref111","_callee82","_context82","_x105","_x106","_x104","sendBiconomyTxWithErc20Forwarder","_ref112","_callee84","req","metaInfo","txResponse","fetchReceiptIntervalId","_context84","permitAndSendTxEIP712","setInterval","clearInterval","updateTransaction","_x107","_x108","_x109","_x110","sendBiconomyTxWithPersonalSign","_ref113","_callee85","_this$getSignaturePar2","_context85","getNonce","_x111","_x112","_x113","_x114","signPermitEIP2612","_ref114","_callee86","erc20Name","owner","spender","deadline","domain","permit","domainData","_context86","getChainId","version","verifyingContract","types","EIP712Domain","Permit","primaryType","jsonrpc","substring","_x115","_x116","_x117","_x118","_x119","_x120","_x121","_x122","signPermit","_ref115","_callee87","baseContractName","holder","spenderContractName","addToNonce","baseContract","spenderContract","permitConfig","expiry","EIPVersion","permitName","_args87","_context87","net","getId","round","nonceMethod","pow","allowed","response","_x123","_x124","_x125","_ref116","_callee88","permitParams","methodAbi","useNonce","_args88","_context88","_jsonInterface","f","unshift","_x126","_x127","_x128","_x129","_x130","_x131","_x132","sendSignedTx","_ref117","_callee89","MetaTransaction","dataToSign","_context89","_x133","_x134","_x135","_x136","_x137","checkTokenApproved","_ref118","_callee90","contractAddr","walletAddr","_ref119","_ref120","allowance","_context90","getAllowance","gte","_x138","_x139","_x140","_ref121","_callee91","_context91","_x141","_x142","_x143","contractMethodSendWrapperWithValue","txData","send_raw","raw_tx_data","disableERC20","toTwosComplement","enableERC20","getBestToken","_callee93","highestValue","_args93","_context93","lendRates","aprInfo","tokenAPR","_ref123","_callee92","_context92","_x144","_ref124","_callee94","_args94","_context94","_x145","_x146","getTrancheStakingRewards","_ref125","_callee96","_args96","_context96","_ref126","_callee95","tokenGlobalConfig","stakingRewardsContract","_context95","_x149","_x147","_x148","_ref127","_callee97","field","addGovTokens","_args97","_context97","loadTrancheField","_x150","_x151","_x152","_x153","_x154","_x155","_x156","_x157","_ref128","_callee98","formatValue","addTokenName","rewardsTokensInfo","internal_view","stakingRewardsEnabled","stakingEnabled","strategyConfig","show_idle_apy","idleStrategyAddress","idleGovTokenConfig","_ref129","_ref130","totalSupply","virtualPrice","_ref131","_ref132","lastPrice1","staked1","_ref133","_ref134","deposited1","lastPrice","_ref135","_ref136","redeemable1","staked2","_ref137","_ref138","earningsStart","trancheApy2","deposited3","earningsEnd","_ref139","_ref140","trancheFee","earningsCounter","feesStart","feesEnd","_ref141","_ref142","deposited4","redeemable3","_ref143","_ref144","deposited2","redeemable2","tokensApy","trancheApyDecimals","baseApy","_ref145","_ref146","_ref147","_ref148","earningsPerc","secondsFromFirstTx","_ref149","_ref150","rewardsTokens","incentiveTokens","_stakingRewards","govTokens","_args98","_context98","Strategy","initContract","AA","BB","getTokenTotalSupply","rewardTokenInfo","formattedApy","IDLE","rewardTokenAddr","getTokenConfigByAddress","stakingRewardsTokenConfig","govToken","_x158","_x159","_x160","_x161","_x162","_x163","_x164","loadAssetField","_ref151","_callee99","addCurveApy","showIdleAPR","strategyInfo","govTokenAvailableTokens","newTokenConfig","_ref152","_ref153","curveAvgSlippage","curveAvgBuyPrice","curveTokenBalance","_ref154","_ref155","amountLentCurve1","redeemableBalanceCurve","_ref156","_ref157","curveApy","amountLentCurve","redeemableBalanceCurveStart","redeemableBalanceCurveEnd","earningPerYear","_ref158","_ref159","amountLent1","redeemableBalance1","depositTimestamp","_idleGovToken","blocksPerDay","blocksPerWeek","blocksPerMonth","selectedTokenConfig","_idleGovToken2","_idleGovToken3","tokenApys","curveAPY","_ref160","_ref161","tokenPriceFirstDeposit","_ref162","_ref163","daysFirstDeposit","depositTimestamps","_govTokenConfig","_ref164","_ref165","tokenAPY1","amountLent2","redeemableBalanceStart","redeemableBalanceEnd","_earningPerYear","_govTokenConfig2","_ref166","_ref167","idleTokenPrice1","idleTokenBalance2","govTokensBalance","_tokenBalance","redeemableBalance","_ref168","_ref169","amountLentCurve2","redeemableBalanceCurve1","_ref170","_ref171","redeemableBalance2","_args99","_context99","getCurveTokenBalance","getCurveAPY","getCurveRedeemableIdleTokens","getGovTokenPool","getTokenPool","getCompUserDistribution","getStkAaveUserDistribution","getIdleGovToken","distributionMode","t3","getCompDistribution","getStkAaveDistribution","t4","getCompAvgApr","t5","t6","t7","getTokenPrice","getUserTokenFees","t8","t9","getGovTokenUserBalance","getGovTokensUserTotalBalance","_x165","_x166","_x167","_x168","getIdleTokenSupply","_ref172","_callee100","idleTokenSupply","_args100","_context100","_x169","getIdleTokenPriceWithFee","_ref173","_callee101","_ref174","_ref175","fee","priceWFee","_args101","_context101","eq","_x170","_x171","_ref176","_callee102","tokenData","beforePrice","afterPrice","tokenPriceBefore","tokenPriceAfter","timeBefore","timeAfter","timeDiff","priceDiff","priceAcceleration","timeDiffFromBeforePrice","_args102","_context102","_x172","clearCachedData","clear_all","parent_key","useLocalStorage","expirationDate","_ref177","_callee103","_ref178","_ref179","idleTokensTotalSupply","userShare","_context103","_x173","_x174","open","_callee105","coverProtocolConfig","nexusMutualConfig","_args105","_context105","_ref181","_callee104","coverage","coverageTokens","protocolImage","_context104","tokens","expirationTimestamp","utc","_x175","getNexusMutualCoverages","sumAssured","coverAssetConfig","yieldTokenConfig","collateralIcon","incident","claimId","protocolImageDark","coverDetails","validUntil","route","_ref182","_callee107","incidentsInfo","_ref183","_ref184","coverBoughtEvents","claimSubmittedEvents","nexusMutualCoverages","_context107","directProps","startBlock","contractInfo","buyer","_ref185","_callee106","cover","coverId","claimSubmittedEvent","_ref186","_ref187","incidentEvents","matchedIncidents","matchedIncident","expiryDate","payoutOutcome","claimedAmount","claimTxReceipt","claimedAmountLog","claimableAmount","claimablePrice","maxCoveredAmount","coveredTokenAmount","_ref188","_ref189","_context106","claim","productId","incidentDate","yieldTokenCoverGracePeriod","curr","priceBefore","underlying","underlyingConfig","coverAsset","findIndex","_x177","_x176","getBatchedDepositExecutions","_ref190","_callee108","_context108","_x178","getBatchedDeposits","_callee110","filter_by_status","batchDepositConfig","batchedDeposits","_args110","_context110","_ref192","_callee109","currBatchIndex","batchIndex","_ref193","_ref194","batchExecutions","batchTotal","batchRedeem","batchDeposit","batchTotals","batchRedeems","batchDeposits","lastExecution","_context109","_x179","getETHBalance","_ref195","_callee111","fixDecimals","_args111","_context111","_x180","_ref196","_callee112","_ref197","_ref198","_args112","_context112","ERC20","_x181","_x182","copyToClipboard","copyText","setSelectionRange","execCommand","loadScript","script","attr","readyState","onreadystatechange","onload","body","appendChild","isValidJSON","_ref199","_callee113","_args113","_context113","_x183","_ref200","_callee114","_args114","_context114","_x184","_ref201","_callee115","_args115","_context115","_x185","_x186","getProtocolBalance","_ref202","_callee116","_context116","_x187","_x188","getAprs","_ref203","_callee117","_context117","addresses","_x189","genericIdleCall","_ref204","_callee118","callParams","_args118","_context118","_x190","_ref205","_callee119","_contract$methods4","_args119","_context119","_x191","_x192","_ref206","_callee121","_args121","_context121","_ref207","_callee120","_context120","_x194","_x195","_x193","getTxDecodedLogs","_ref208","_callee123","logAddr","decodeLogs","internalTransfers","_context123","_ref209","_callee122","_context122","_x200","_x201","_x196","_x197","_x198","_x199","blocksToSeconds","blocks","blocksPerSeconds","getBlockNumber","_callee124","_context124","_callee125","_args125","_context125","getBlock","_ref212","_callee126","_args126","_context126","getPastEvents","_x202","_x203","_ref213","_callee127","_args127","_context127","_x204","_x205","cachedContractCall","_ref214","_callee128","_args128","_context128","_x206","_x207","_ref215","_callee129","_contract$methods5","_args129","_context129","_x208","_x209","_ref216","_callee130","async","_args130","_context130","_x210","_x211","getUnlentBalance","_ref217","_callee131","unlentBalance","_context131","_x212","_ref218","_callee132","_args132","_context132","_x213","getLastAllocations","_ref219","_callee134","tokenAllocations","_context134","_ref220","_callee133","_context133","_x215","_x216","_x214","_ref221","_callee135","protocolsAprs","_ref222","_ref223","govTokensBalances","_args135","_context135","totalAllocationConverted","totalAllocationWithUnlentConverted","getTokenConversionRate","getGovTokensBalances","protocolAllocationPerc","protocolAllocation","_x217","getSushiswapPoolTokenPrice","_ref224","_callee136","_ref225","_ref226","token0_address","token1_address","poolReserves","token0_config","token1_config","_ref227","_ref228","token0_price","token1_price","token0_pool","token1_pool","totalPoolSize","poolTokenPrice","_context136","getSushiswapConversionRate","_x218","_ref229","_callee137","tokenConfigFrom","tokenConfigDest","WETHAddr","one","_context137","_x219","_x220","_ref230","_callee138","unires","_args138","_context138","addressForPrice","_x221","_x222","getCurveDepositedTokens","_ref231","_callee139","idleTokensBalances","remainingCurveTokens","_args139","_context139","_x223","getCurveUnevenTokenAmounts","_ref232","_callee140","amounts","max_burn_amount","unevenAmounts","_context140","getCurveDepositContract","_x224","_x225","_callee141","curveRatesInfo","_context141","strategyTokens","getCurveAPYContract","_callee142","blocksForPrevTokenPrice","_ref235","_ref236","prevTokenPrice","blocksMultiplier","curveAPR","_context142","getCurveTokenSupply","_callee143","_context143","getCurvePoolContract","_callee144","_args144","_context144","_callee145","_args145","_context145","_ref240","_callee146","_ref241","_ref242","_context146","_x226","_callee147","depositContractInfo","_context147","getCurveZapContract","_callee148","zapContractInfo","_context148","_callee149","poolContractInfo","_context149","getCurveSwapContract","_callee150","migrationContractInfo","_context150","getCurveIdleTokensAmounts","_callee152","max_slippage","curveTokenSupply","curveTokenShare","n_coins","_args152","_context152","_ref248","_callee151","coinIndex","curveIdleTokens","_context151","migrationParams","_x227","getCurveTokensAmounts","_callee154","useCoinIndex","_args154","_context154","_ref250","_callee153","_ref251","_ref252","idleTokenPrice","totalTokenSupply","_context153","_x228","getCurveAmounts","_ref253","_callee156","_args156","_context156","_ref254","_callee155","_context155","_x231","_x229","_x230","getCurveTokenAmount","_ref255","_callee157","_args157","_context157","_x232","getCurveSlippage","_ref256","_callee158","uneven_amounts","depositContract","_ref257","_ref258","Sv","_args158","_context158","_x233","_x234","_ref259","_callee159","aTokenIdleSupply","annualize","aaveDistribution","stkAAVETokenConfig","aTokenConfig","disabledTokens","aaveIncentivesController_address","IAaveIncentivesController_name","_ref260","_ref261","aTokenTotalSupply","assetData","aaveAllocationPerc","aaveSpeed","secondsPerYear","aavePoolShare","_args159","_context159","IAaveIncentivesController","emissionPerSecond","_x235","_callee161","_args161","_context161","_ref263","_callee160","_ref264","_ref265","_context160","_x236","getWMaticApr","_ref266","_callee162","maticConversionRate","wMaticTokenConfig","wMaticApr","destTokenConfig","wMaticValue","_args162","_context162","_x237","_x238","getStkAaveApr","_ref267","_callee163","aaveConversionRate","stkAaveAPR","stkAaveValue","_args163","_context163","_x239","_x240","getCompAPR","_ref268","_callee164","cTokenIdleSupply","compConversionRate","COMPTokenConfig","compAPR","compDistribution","compValue","_args164","_context164","_x241","_x242","getCompSpeed","_ref269","_callee165","cTokenAddress","compSpeed","_context165","_x243","_ref270","_callee166","cTokenInfo","compoundAllocationPerc","_ref271","_ref272","cTokenTotalSupply","compoundPoolShare","_args166","_context166","_x244","_callee168","_args168","_context168","_ref274","_callee167","_ref275","_ref276","_context167","_x245","_callee170","_args170","_context170","_ref278","_callee169","_ref279","_ref280","compApr","_context169","_x246","getTokensCsv","_callee173","csv","_context173","prototype","sum","pv","cv","avg","_ref282","_callee172","_context172","_ref283","_callee171","rates","header","aprAvg","scoreAvg","lastRow","_context171","protocolsData","p1","foundProtocol","p2","rate","idleRate","score","idleScore","pInfo","pData","pRate","pScore","defiScore","additionalRate","avgRate","avgScore","_x248","_x247","_callee175","convertToken","_args175","_context175","_ref285","_callee174","compTokenBalance","_context174","_x249","getGovTokensFarming","tokenGovTokens","getTokenGovTokens","speed","mode","multipliers","block","second","month","year","getGovTokensUserDistributionSpeed","_ref286","_callee177","govTokensUserDistribution","_args177","_context177","_ref287","_callee176","_context176","_x251","_x250","getGovTokensDistributionSpeed","_ref288","_callee179","govTokensDistribution","_args179","_context179","_ref289","_callee178","govSpeed","_context178","_x253","_x252","getGovTokensAprs","_ref290","_callee181","govTokensAprs","_args181","_context181","_ref291","_callee180","_ref292","_ref293","_ref294","_ref295","cTokenConfig","_context180","aprTooltipMode","_x256","_x254","_x255","_callee183","_args183","_context183","_ref297","_callee182","govTokenBalance","fromTokenConfig","_context182","_x257","tokensConfigs","foundToken","foundTokenConfig","getGovTokenConfigByAddress","_callee184","checkShowBalance","govTokensUserBalances","govTokensEarnings","_args184","_context184","getGovTokensUserBalances","govTokenAmount","getGovTokensIndexes","_ref299","_callee186","govTokensAmounts","_context186","getGovTokensUserAmounts","_ref300","_callee185","govTokenIndex","govTokenAddress","_context185","getGovTokenAddessByIndex","_x260","_x261","_x258","_x259","_ref301","_callee187","_context187","_x262","_x263","_ref302","_callee188","_context188","_x264","_x265","_callee191","govTokenConfigForced","_args191","_context191","_ref304","_callee190","_context190","_ref305","_callee189","_context189","_x267","_x268","_x266","getTokenFees","_callee192","_args192","_context192","_callee193","_ref308","_ref309","feePercentage","gain","fees","_args193","_context193","_ref310","_callee194","_args194","_context194","_x269","getTotalTVL","_callee195","tokensTVL","_context195","getTokensTVL","totalTVL","tokenInfo","tokenTVL","_callee199","_context199","_ref313","_callee198","_context198","_ref314","_callee197","oldTokenTVL","idleTokenName","_ref315","_ref316","oldTokenConfig","_ref320","_ref321","oldTokenPrice","oldTotalSupply","_context197","showAUM","_ref317","_callee196","_ref318","_ref319","govTokenConversionRate","govTokenBalanceConverted","_context196","_x272","oldProtocols","oldProtocol","protocolPos","_x271","_x270","getSubstackLatestFeed","_callee200","idleSubstackFeed","latestFeed","_context200","getTrancheAggregatedStats","_callee204","totalAUM","_args204","_context204","_ref324","_callee203","_context203","_ref325","_callee202","_context202","_ref326","_callee201","_ref327","_ref328","_context201","_x275","_x274","_x273","getAggregatedStats","_callee206","allNetworks","networkIds","_args206","_context206","_ref330","_callee205","tvls","_context205","getAggregatedStats_chain","_x276","_callee210","avgAPR","_args210","_context210","_ref332","_callee209","_context209","_ref333","_callee208","tokenAUM","oldTokenAllocation","oldTokenTotalAllocation","_context208","_ref334","_callee207","_ref335","_ref336","_context207","_x279","_x278","_x277","getTokenApy","_ref337","_callee211","_context211","_x280","getTokensToMigrate","_callee214","_args214","_context214","_ref339","_callee213","_context213","_ref340","_callee212","_ref341","_context212","_x282","_x281","getProtocolsTokensBalances","_callee216","tokenBalances","minTokenBalance","protocolsTokens","_args216","_context216","_ref343","_callee215","_context215","_x283","getTokenConversionRateField","_ref344","_callee217","_args217","_context217","getTokenConversionRateUniswap","_x284","_x285","_ref345","_callee218","_args218","_context218","_x286","_x287","_x288","getAvgAPYStats","_ref346","_callee219","apiResults","_args219","_context219","_x289","_x290","_ref347","_callee220","ToTokenConfig","_args220","_context220","_x291","_ref348","_callee221","count","_conversionRate","_args221","_context221","_x292","_x293","getTokenScore","_ref349","_callee222","_ref350","_ref351","tokenScore","_context222","protocolScore","getTokenScoreApi","_x294","_x295","_ref352","_callee223","scores","_context223","_x296","_x297","_ref353","_callee224","idleGovTokenShowAPR","idleAPR","_args224","_context224","_x298","isNegative","suffixNum","decimalPart","mod","toPrecision","difference","maxLen","highlightedDecimals","numLen","intPart","decPart","repeat","highlightedDec","highlightedIntPart","Fragment","DashboardCard","mouseOver","isRainbow","defaultOpacity","active","hidden","rainbow","interactive","onMouseOut","setMouseOver","onMouseOver","titleParentProps","lineHeight","description","BuyModal","selectedMethod","availableMethods","selectedCountry","selectedProvider","availableProviders","buyToken","renderPaymentMethod","buyParams","onSuccess","onClose","paymentProvider","initParams","currentState","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","toastProvider","addMessage","secondaryMessage","colorTheme","actionHref","actionText","variant","getAccountBalance","payments","getInitParams","render","closeModal","goBack","resetModal","componentWillMount","showInline","getProviderInfo","providerInfo","getInfo","newProviderInfo","getDefaultPaymentProvider","paymentMethod","getAvailablePaymentProviders","providerSupportMethod","supportedMethods","providerSupportToken","supportedTokens","defaultPaymentProvider","showDefaultOnly","selectProvider","ethAvailable","tokenAvailable","selectMethod","selectToken","loadRemoteResources","handleCountryChange","getAvailableCountries","availableCountries","supportedCountries","countryCode","countries","remoteResources","scriptID","remoteResourceParams","precall","parentElement","head","stylesheetId","methodInfo","loadAvailableMethods","_this4","caption","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","showAllTokens","InnerComponent","flexWrap","imageSrc","_ImageButton_ImageButton__WEBPACK_IMPORTED_MODULE_12__","buyText","imagePropsExtended","react_select__WEBPACK_IMPORTED_MODULE_10__","placeholder","noOptionsMessage","inputValue","isOpen","_ModalCard__WEBPACK_IMPORTED_MODULE_11__","closeFunc","Header","Body","Footer","React","TableRow","FieldComponent","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_10__","rowProps","colInfo","colIndex","visibleOnDesktop","visible","fieldIndex","colProps","TableHeader","pb","_TableCellHeader_TableCellHeader__WEBPACK_IMPORTED_MODULE_7__","desc","FastBalanceSelector","onMouseDown","CustomList","rowsPerPage","totalPages","processedRows","processRows","totalRows","paginationEnabled","_TableHeader_TableHeader__WEBPACK_IMPORTED_MODULE_11__","rowIndex","_TableRow_TableRow__WEBPACK_IMPORTED_MODULE_8__","CustomField","prevPage","nextPage","Staking","selectedOption","toolProps","SelectedComponent","component","AssetField","FlexLoader","GenericFaqs","openedAnswer","selectedSection","questions","setSection","showSections","isSelected","borderBottom","q","toggleAnswer","LimitReachedModal","possibleConstructorReturn","getPrototypeOf","componentDidUpdate","ModalCard","iconHeight","RoundButton","TrancheDetails","infoText","canUnstake","canWithdraw","activeModal","balanceProp","trancheBalance","approveEnabled","buttonDisabled","approveDescription","selectedAction","userHasAvailableFunds","loadActionData","selectedProtocol","selectedTranche","trancheAPY","trancheDetails","cdoConfig","cantUnstake","cantWithdraw","infoBox","trancheLimit","otherTrancheType","otherTrancheDetails","showSelectButton","contrastColor","hex","selectTrancheType","components_LimitReachedModal","ShareModal","confettiEnabled","tweet","TrancheHarvests","distributions","tokenIcon","Title","SendTxWithBalance","permitEnabled","showPermitBox","contractApproved","fastBalanceSelector","changeInputValue","call_callback","changeInputCallback","setInputValue","selectedPercentage","getFastBalanceSelector","setFastBalanceSelector","checkButtonDisabled","approve","callbackApprove","callbackReceiptApprove","checkContractApproved","executeTx","_amount","_params","checkLimit","eventValue","getPermitTransactionParams","getTransactionParams_async","approveCallback","actionChanged","tokenBalanceChanged","permitEnabledChanged","approveEnabledChanged","contractChanged","tokenConfigChanged","viewOnly","connectorName","steps","step","stepIndex","ExtLink","checked","togglePermitEnabled","balanceSelectorInfo","ConnectBox","stakeEnabled","unstakeEnabled","selectedTrancheOption","selectedStakeAction","selectedActionChanged","selectedStakeActionChanged","trancheTokenToRedeem","isStake","isDeposit","isWithdraw","option","selectTranche","ImageButton","setSelectedAction","setStakeAction","unstakeWithBalance","Button","transactionSucceeded","unstake","src_SendTxWithBalance_SendTxWithBalance","contractApprovedCallback","buyInstructions","PortfolioEquityTranches","transactionsList","lastBlockNumber","tokenBalanceConfig","firstTokenTx","firstAATokenTx","firstBBTokenTx","startTokenConversionRate","lastTokenConversionRate","trancheAAInfos","trancheBBInfos","tokenDataAA","tokenDataBB","filteredTrancheBalances","_timeStamp","ChartCustomTooltip","ChartCustomTooltipRow","FundsOverviewTranche","aggregatedValues","govTokensTotalApr","govTokensUserBalance","govTokensTotalBalance","govTokensTotalAprTooltip","idleTokenUserDistribution","govTokensDistributionTooltip","govTokensTotalBalanceTooltip","colWidth","src_PortfolioEquityTranches_PortfolioEquityTranches","Heading","h3","StakingRewardsTranche","stakingRewardsRows","loadUserRewards","portfolioChanged","trancheConfigChanged","transactionsChanged","rewards","rewardTokensInfo","trancheStakedAmount","trancheBalanceInfo","rewardToken","staked","reedemable","claimCallback","TranchePage","userHasFunds","componentLoaded","trancheTypeChanged","balanceInfo","tranchesDetails","filteredTranchesTypes","TrancheDepositRedeem","src_TrancheDetails_TrancheDetails","src_FundsOverviewTranche_FundsOverviewTranche","src_StakingRewardsTranche_StakingRewardsTranche","src_TrancheHarvests_TrancheHarvests","TransactionsList","availableActions","src_GenericFaqs_GenericFaqs","","alt","showTooltip","baseName","justifyItems","long","features","feature","TrancheFlash","flashData","bold","subtitle","openTooltipModal","msg","helpcircle","arrows","seniorinfo","juniorinfo","TrancheWelcome","AssetsUnderManagement","loaderAlign","aggregatedStatsMethod","src_TrancheFlash_TrancheFlash","TrancheBox","GenericPieChart","showLegend","itemWidth","itemHeight","symbolSize","anchor","direction","symbolShape","translateY","itemTextColor","effects","legendProps","valueHover","valueHoverProps","defaultImage","defaultLabel","TotalBalanceCounter","counterEnd","counterStart","loadTotalEarnings","contractsInitialized","counterStyle","oldState","build_default","delay","separator","useEasing","formattingFn","countUpRef","ref","TotalEarningsCounter","Tranches","trancheRoute","useTrancheType","portfolioLoaded","allocationChartData","portfolioEquityQuickSelection","loadPortfolio","then","urlParams","param1","param3","param2","availableTranchesChanged","tranchesTokens","tranchesBalances","tranchesConfig","weight","portfolioDonutData","balanceValue","tokenPercentage","trancheName","_this5","breadcrumbPath","src_TranchePage_TranchePage","aligItems","src_TotalBalanceCounter_TotalBalanceCounter","src_TotalEarningsCounter_TotalEarningsCounter","src_GenericPieChart_GenericPieChart","itemsSpacing","setPortfolioEquityQuickSelection","src_TrancheWelcome_TrancheWelcome","textSize","TokenSwap","selectedFromToken","selectedDestToken","availableDestinationTokens","selectFromToken","selectDestToken","initProps","buttonId","loadTokens","fromTokenChanged","destTokenChanged","loadKyberWidget","LpStaking","globalStats","statsLoaded","programEnded","rewardMultiplier","accountingData","programEndDate","successMessage","rewardTokenPrice","tokenWrapperProps","showTokenWrapperEnabled","updateData","contractApprovedChanged","contractInfoChanged","userStakedBalance","totalStakedBalance","totalStakingShares","userTotalStakingShare","rewardsPerDay","stakedBalanceUSD","rewardsPerYearUSD","normalizedInputValue","unstakeRewards","totalLocked","totalUnlocked","unlockScheduleCount","collectedRewards","unlockSchedulesPromises","unlockSchedules","totalRewards","totalDeposits","lockedRewards","unlockedRewards","programEndTime","endTime","endAtSec","initialLockedShares","durationSec","stakingShare","maxMultiplier","distributionSpeedMultiplier","userDistributionSpeed","maxBonusDays","currentRewards","stakedTokensLog","stakedTokens","unstakedTokensLog","unstakedTokens","rewardTokenConfig","receivedRewardsLog","receivedRewards","startContract","wrapMethod","destContract","unwrapMethod","_this6","loadStats","_this7","StatsCard","isUnstake","isStats","txAction","poolLink","statInfo","setAction","IdleStaking","maxApr","lockPeriods","lockedEnd","maxTime","lockExpired","claimedRewards","increaseAction","lockPeriodInput","internalInfoBox","distributedRewards","selectedLockPeriod","lockPeriodTimestamp","lockEndDateIsMaxEndDate","feeDistributor","lockPeriodChanged","increaseActionChanged","calculateStkIDLEAmount","minLockPeriod","maxLockPeriod","minDate","add","mDate","maxDate","isAfter","getMaxStakeTimestamp","maxStakeTimestamp","endDate","endDateTime","maxDateTime","stkIDLEAmount","_value","_unlock_time","etherscanRewardsTxs","tokenTotalSupply","claimableRewards","lockedInfo","tokenUserBalance","claimable","claimEvents","depositEvents","totalRewardsDays","totalClaimedUser","recipient","totalLockedFunds","stkTokenTotalSupply","claimableRewardsFormatted","totalRewardsFormatted","userDeposited","totalCollectedRewards","stakeStartTime","stakedTime","event","ts","depositValue","stakePeriod","currentProfit","stakePeriodWeeks","lockEndDate","currDate","isValid","lockedTokensLog","lockedTokens","increaseAmountTokensLog","increaseTokens","maxDateTimestamp","_this8","_this9","isLock","isClaim","isIncrease","canIncrease","StatsCardSmall","maxHeight","reward","setIncreaseAction","changeLockPeriodInput","selectLockPeriod","getIncreaseTimeParams","NexusMutual","quote","1","2","periodOptions","30","60","90","365","capacity","coverCost","amountValue","periodValue","yearlyCost","maxCapacity","amountValid","periodValid","claimableCovers","tokenApproved","selectedPeriod","maxPriceWithFee","transactionValue","yieldTokenBalance","selectedUnderlying","yieldTokenApproved","claimButtonDisabled","selectedCoverToClaim","defaultClaimableCover","selectedUnderlyingConfig","changeAmount","changePeriod","selectPeriod","approveSucceeded","yieldTokenApproveSucceeded","claimInputChange","normalizedAmount","getClaimTransactionParams","realAddress","claimTransactionSucceeded","loadContracts","buyCoverTransactionSucceeded","validClaimableCoverFromParam","paramIsValidToken","changeSelectedToken","selectedUnderlyingChanged","loadTokenData","isETH","getPoolCapacity","coverData","period","coverAmount","currency","asset","quoteURL","encodeParameters","priceInNXM","expiresAt","generatedAt","COVER_TYPE","basePrice","priceWithFee","mul","divn","amountInWei","textDecoration","activeColor","reset","changeSelectedUnderlying","setMaxCoverAmount","borderStyle","periodInfo","getQuote","selectCoverToClaim","TokenWrapper","balanceDest","balanceStart","startContractChanged","destContractChanged","loadBalance","updateActionData","mintLog","mintedAmount","withdrawLog","withdrawnAmount","fullWidth","connectAndValidateAccount","PortfolioDonut","totalFunds","parentWidth","tokenColorHsl","radialLabelsLinkOffset","strategyIcon","EarningsEstimation","tokensEarnings","estimationStepsPerc","estimationStepsOptions","estimationStepsDefaultOption","estimationSteps","0","Month","perc","2 months","3 months","optionName","25","8 months","Year","2 Years","5 Years","loadEarnings","stepsCount","aggregatedEarnings","earnings","earningsYear","earningsPercStep","possibleSteps","maxPossibleStep","maxCountStep","orderedTokensEarnings","estimationStep","setEstimationStepsPerc","tokenIndex","estimationStepPerc","finalEarnings","cursorPerc","tokenRGBColor","borderTop","estimateIndex","estimationStepEarnings","estimationStepEarningsFormatted","borderRight","wordBreak","estimationLabel","DashboardIconButton","PolygonBridgeTransactions","bridgeEnabled","polygonTransactions","polygonTransactionsAvailableTokens","polygonBridgeConfig","actionIcon","actionIconProps","StrategyPage","remainingTokens","portfolioLoading","availableGovTokens","portfolioEquityStartDate","batchedDepositsAvailableTokens","availableTokensChanged","batchInfo","redeemable","apyLong","yieldFarming","strategyName","toolsToShow","toolName","toolConfig","src_PortfolioDonut_PortfolioDonut","toolIndex","src_DashboardIconButton_DashboardIconButton","ActiveCoverages","AssetsList","showDirection","src_EarningsEstimation_EarningsEstimation","src_PolygonBridgeTransactions_PolygonBridgeTransactions","BatchDeposit","canClaim","canDeposit","usePermit","hasDeposited","permitSigned","batchCompleted","claimSucceeded","executeSucceeded","migrationSucceeded","batchDepositEnabled","migrationContractApproved","migrationEnabledCallback","migrationCallback","checkBatchs","loadStrategies","executeSucceededChanged","callbackExecute","callbackReceiptExecute","functionInfo","permitContract","batchDepositInfo","depositEnabled","availableStrategiesKeys","selectStrategy","obj","strategyAvailableTokens","migrateFunction","setStrategyToken","batchId","callbackClaim","callbackReceiptClaim","canExecuteBatch","strategyDefaultValue","Migrate","useMetaTx","showActions","isMigrationTool","showBalanceSelector","migrationIcon","toMigrate","callbackPermit","migrationText","minPoolSize","PolygonBridge","txsToExit","dataLoaded","defaultTransaction","selectedTransaction","rootTokenConfig","childTokenConfig","encodeParameter","depositData","sendValue","exitCalldata","ERC20Predicate","DepositManager","depositedTokensLog","depositedTokensEvent","EtherPredicate","maticNetwork","mainNetworkId","mainNetworkName","withdrawnTokensEvent","withdrawnTokensLog","withdrawnTokens","Transfer","paramIsToken","defaultAction","loadPolygonTxs","isExit","selectTransaction","exitCallback","getExitTransactionParams","setRequiredNetwork","CoverProtocol","swapInfo","defaultCoverage","selectedCoverage","inputValueChanged","swapInfoChanged","swapFee","covTokens","tokenAmountOut","getSwapInfo","MAX_UINT256","balancerTokenConfig","dashboardUrl","fixedAmount","mintedClaimLog","mintedNoClaimLog","mintedClaimAmount","mintedNoClaimAmount","claimTokenConfig","claimTokensLog","receivedClaimAmount","balancerPool","noClaimTokenConfig","noClaimTokensLog","receivedNoClaimAmount","collateralAmount","balancerClaimConfig","balancerNoClaimConfig","claimTokenBalance","noClaimTokenBalance","balancerPoolClaimBalance","balancerPoolNoClaimBalance","hasMintedTokens","apyPrice","selectCoverage","isMint","isBuyClaim","isBuyNoClaim","subcaption","TokenMigration","changeFromToken","convertTool","BatchMigration","batchMigrationInfo","batchMigrationDepositEnabled","DeployB2BVesting","actions","actionIndex","validated","viewAction","editAction","newAction","maxContracts","actionValid","actionInputs","claimedTokens","deployedContracts","contractDeployed","validateForm","checkInputs","vesterImplementation","proxyCreated","deployedContractsAddresses","implementation","proxy","vestingPeriod","availableBalance","depositAmounts","claimedTokensLog","returnString","fieldPattern","inputIndex","inputInfo","getPatternByFieldType","inputValid","actionValue","defineProperty","txError","deployedContract","idleAddress","isLastAction","clonedVesterAddress","ProxyCreated","ownerAddress","recipientAddress","initData","depositContracts","claimContracts","onSubmit","handleSubmit","setEditAction","fieldType","pattern","inputChange","addAction","deleteAction","setNewAction","setViewAction","readOnly","depositCallback","process","appName","forumURL","telegramURL","discordURL","twitterURL","darkModeEnabled","live","beta","polygon","USA","GBR","AUS","BRA","CHN","CAN","EUR","HKG","IND","MEX","RUS","ZAF","KOR","connectors","metamask","opera","dapper","coinbase","trustwallet","walletconnect","iconModal","walletlink","gnosis","fortmatic","portis","authereum","torus","trezor","ledger","ledgerlive","custom","newsletterSubscription","messages","scoreShort","apyShort","totalProfitPerc","cheapRedeem","aprRatio","curveBonusSlippage","directMint","performanceFee","govTokenApr","apyTranches","govTokenRedeemableBalance","riskScoreShort","redeemSkipGov","batchDepositExecutionSchedule","riskAdjustedDisabledMessageDeposit","riskScore","curveInstructions","riskAdjustedDisabledMessageRedeem","pageView","modals","first_deposit_referral","first_deposit_share","welcome","dashboard","baseRoute","governance","test","availableContracts","FeeTreasury","PriceOracle","GovernorAlpha","EcosystemFund","IdleController","18","12","7","delegates","imageInactive","poolContract","CurvePool","CurveDeposit","gaugeContract","LiquidityGaugeV2","zapContract","CurveZap","idleDAIYield","idleUSDCYield","idleUSDTYield","DAI","USDC","SLP","showAPR","showPrice","137","COMP","stkAAVE","aToken","WMATIC","ProtocolDataProvider","ChildChainManager","UniswapRouter","UniswapV2Router02","SushiswapRouter","SushiV2Router02","RootChainManager","ProxyFactory","MinimalInitializableProxyFactory","LockedIDLE","Timelock","VesterFactory","EarlyRewards","Comptroller","BalancerExchangeProxy","zeroExInstant","orderSource","affiliateInfo","feeRecipient","tranchflash","rgb","bubble","stake","extraicons","best","iconDark","iconInactive","iconInactiveDark","risk","tools","forum","leaderboard","overview","delegate","landingStrategies","enabledEnvs","comingSoon","titlePostfix","govTokensEnabled","chartColor","descShort","descLong","substack","REACT_APP_IDLE_KEY","Authorization","versions","v3","additionalProtocols","showPerformanceTooltip","strategiesParams","enabledStrategies","v4","chart","labelTextColorModifiers","performanceTooltip","ETH","STETH","CVX","LDO","CRV","FRAX3CRV","MIM3CRV","MATIC","USD","USDT","TUSD","SUSD","WBTC","WETH","RAI","disabledCharts","FEI","idleDAI+idleUSDC+idleUSDT","compound","aavev2WithStkAAVE","rateField","compoundWithCOMP","fulcrum","dsr","dydx","iearn","aave","aavev2","cream","lido","convex","fuse","skipRebalance","metaTransactionsEnabled","skipMint","minAmountForMint","erc20ForwarderEnabled","skipMintCheckboxEnabled","erc20ForwarderProxyContract","forwarder","erc20Forwarder","function","IdleDepositForwarder","proxyContract","IdleProxyMinter","minAmountForRebalance","minAmountForRebalanceMetaTx","redeemGovTokens","rebalance","IdleRebalancerV3","42","3","4","5","1337","80001","isForked","requiredConfirmations","enabledNetworks","accountBalanceMinimum","infura","REACT_APP_INFURA_KEY","networkPairs","nexus","covalent","REACT_APP_COVALENT_KEY","etherscan","REACT_APP_ETHERSCAN_KEY","REACT_APP_ETHERSCAN_KEY2","REACT_APP_ETHERSCAN_KEY3","REACT_APP_ETHERSCAN_KEY4","subgraph","urls","queries","proposalsActive","biconomy","enableLogin","disabledWallets","REACT_APP_BICONOMY_KEY","dappId","REACT_APP_BICONOMY_APPID","getNetwork","networkName","appOrigin","appId","renderNotifications","notifications","subComponent","stkIDLE","StakingFeeDistributor","LpStakingAbi","SushiLiquidityPool","stakePolygon","nexusMutual","IdleTokenV4","NexusMutualDistributor","NexusMutualIncidents","b2bVesting","B2BVester","polygonBridge","StateSender","ChildERC20","ethWrapper","coverProtocol","CoverMint","Claim","CovToken","BalancerPool","NoClaim","claimEnabled","IdleBatchedMint","IdleTokenV3","IdleBatchConverter","idleSUSDYield","idleTUSDYield","idleWBTCYield","idleDAISafe","idleUSDCSafe","idleUSDTSafe","tokenMigration","IdleConverterPersonalSignV4","idleDAIv2","IdleTokenV2","cDAI","iDAI","aDAI","yDAIv3","yDAIv2","idleUSDCv2","cUSDC","iUSDC","aUSDC","yUSDCv3","yUSDCv2","cUSDT","iUSDT","aUSDT","yUSDTv3","yUSDTv2","idleSUSDv2","aSUSD","ySUSDv3","idleTUSDv2","aTUSD","yTUSDv3","cWBTC","iWBTC","aWBTC","addFunds","tokenSwap","USDS","BUSD","EURS","2KEY","ABT","ABYSS","AMPL","ANT","BAM","BAND","BAT","BLZ","BNT","BQX","BTU","CDT","CVC","DAT","DGX","EKG","ELF","ENJ","EQUAD","FXC","GDC","GEN","GHT","GNO","IOST","KEY","KNC","LEND","LINK","LOOM","LRC","MANA","MCO","MET","MFG","MKR","MLN","MTL","MYB","NEXXO","NPXS","OGN","OMG","OST","PAX","PBTC","PLR","PNK","POLY","POWR","PT","QKC","QNT","RAE","REN","REP","REQ","RLC","RSR","RSV","SAN","SNT","SNX","SPIKE","SPN","TKN","TKX","TRYB","UBT","UPP","ZRX","insurance","imageDark","bank","card","wallet","wyre","captionPos","envParams","accountId","prod","referrerAccountId","dest","destCurrency","redirectUrl","k","encodeURIComponent","iframeBox","wyreStyle","ramp","badge","hostAppName","hostApiKey","REACT_APP_RAMP_KEY","hostLogoUrl","swapAsset","RampInstantSDK","payload","purchase","show","transak","https://global.transak.com/v1/widget.js","REACT_APP_TRANSAK_KEY_TEST","REACT_APP_TRANSAK_KEY_PROD","fiatCurrency","cryptoCurrencyCode","currencyCode","walletAddress","partnerCustomerId","disableWalletAddressForm","transakGlobal","transakStyle","moonpay","REACT_APP_MOONPAY_KEY_TEST","REACT_APP_MOONPAY_KEY_PROD","baseCurrencyCode","showWalletAddressForm","enabledPaymentMethods","navigator","userAgent","cookie","moonpayStyle","https://instant.0x.org/v3/instant.js","tokenParams","RimbleWeb3_context","connector","defaultSelectedAssetData","availableAssetDatas","shouldDisableAnalyticsTracking","defaultAssetBuyAmount","kyberSwap","web3Subscription","decodeLogsData","https://widget.kyber.network/v0.7.5/widget.css","https://widget.kyber.network/v0.7.5/widget.js","querySelectorAll","remove","scripts","lang","paramForwarding","pinnedTokens","defaultPair","commissionId","click","airSwap","https://cdn.airswap.io/airswap-instant-widget.js","onComplete","AirSwapInstant","totle","https://widget.totle.com/latest/dist.js","sourceAssetAddress","sourceAmountDecimal","destinationAssetAddress","destinationAmountDecimal","partnerContractAddress","TotleWidget","nodeId","totleWidgetContainer","run","anonymous","indexed","govTokensDisabled","defiPrime","crToken","cToken","yToken","iToken","CHAI","skipMintForDeposit","fToken","defiScoreDisabled","disabledMessageRedeemKey","disabledMessageDepositKey","./mainnet/v1/index.json","./testnet/mumbai/index.json","webpackContext","webpackContextResolve","./mainnet/v1/artifacts/fx-portal/FxChild.json","./mainnet/v1/artifacts/fx-portal/FxERC1155ChildTunnel.json","./mainnet/v1/artifacts/fx-portal/FxERC1155RootTunnel.json","./mainnet/v1/artifacts/fx-portal/FxERC20ChildToken.json","./mainnet/v1/artifacts/fx-portal/FxERC20ChildTunnel.json","./mainnet/v1/artifacts/fx-portal/FxERC20RootToken.json","./mainnet/v1/artifacts/fx-portal/FxERC20RootTunnel.json","./mainnet/v1/artifacts/fx-portal/FxERC721ChildTunnel.json","./mainnet/v1/artifacts/fx-portal/FxERC721RootTunnel.json","./mainnet/v1/artifacts/fx-portal/FxRoot.json","./mainnet/v1/artifacts/genesis/BorValidatorSet.json","./mainnet/v1/artifacts/genesis/IStateReceiver.json","./mainnet/v1/artifacts/genesis/Migrations.json","./mainnet/v1/artifacts/genesis/StateReceiver.json","./mainnet/v1/artifacts/genesis/System.json","./mainnet/v1/artifacts/genesis/TestBorValidatorSet.json","./mainnet/v1/artifacts/genesis/TestCommitState.json","./mainnet/v1/artifacts/genesis/TestStateReceiver.json","./mainnet/v1/artifacts/genesis/TestSystem.json","./mainnet/v1/artifacts/genesis/ValidatorSet.json","./mainnet/v1/artifacts/genesis/ValidatorVerifier.json","./mainnet/v1/artifacts/plasma/BaseERC20.json","./mainnet/v1/artifacts/plasma/ChainIdMixin.json","./mainnet/v1/artifacts/plasma/ChildChain.json","./mainnet/v1/artifacts/plasma/ChildERC20.json","./mainnet/v1/artifacts/plasma/ChildERC20Proxified.json","./mainnet/v1/artifacts/plasma/ChildERC721.json","./mainnet/v1/artifacts/plasma/ChildERC721Mintable.json","./mainnet/v1/artifacts/plasma/ChildERC721Proxified.json","./mainnet/v1/artifacts/plasma/ChildToken.json","./mainnet/v1/artifacts/plasma/ChildTokenProxy.json","./mainnet/v1/artifacts/plasma/Common.json","./mainnet/v1/artifacts/plasma/ContractReceiver.json","./mainnet/v1/artifacts/plasma/ContractWitRevertingFallback.json","./mainnet/v1/artifacts/plasma/ContractWithFallback.json","./mainnet/v1/artifacts/plasma/ContractWithoutFallback.json","./mainnet/v1/artifacts/plasma/DelegateProxy.json","./mainnet/v1/artifacts/plasma/DepositManager.json","./mainnet/v1/artifacts/plasma/DepositManagerHeader.json","./mainnet/v1/artifacts/plasma/DepositManagerProxy.json","./mainnet/v1/artifacts/plasma/DepositManagerStorage.json","./mainnet/v1/artifacts/plasma/DrainStakeManager.json","./mainnet/v1/artifacts/plasma/Drainable.json","./mainnet/v1/artifacts/plasma/ECVerify.json","./mainnet/v1/artifacts/plasma/ERC165.json","./mainnet/v1/artifacts/plasma/ERC20.json","./mainnet/v1/artifacts/plasma/ERC20Detailed.json","./mainnet/v1/artifacts/plasma/ERC20Mintable.json","./mainnet/v1/artifacts/plasma/ERC20NonTransferable.json","./mainnet/v1/artifacts/plasma/ERC20Predicate.json","./mainnet/v1/artifacts/plasma/ERC20PredicateBurnOnly.json","./mainnet/v1/artifacts/plasma/ERC721.json","./mainnet/v1/artifacts/plasma/ERC721Enumerable.json","./mainnet/v1/artifacts/plasma/ERC721Full.json","./mainnet/v1/artifacts/plasma/ERC721Metadata.json","./mainnet/v1/artifacts/plasma/ERC721MetadataMintable.json","./mainnet/v1/artifacts/plasma/ERC721Mintable.json","./mainnet/v1/artifacts/plasma/ERC721PlasmaMintable.json","./mainnet/v1/artifacts/plasma/ERC721Predicate.json","./mainnet/v1/artifacts/plasma/ERC721PredicateBurnOnly.json","./mainnet/v1/artifacts/plasma/ERCProxy.json","./mainnet/v1/artifacts/plasma/ExitNFT.json","./mainnet/v1/artifacts/plasma/FallbackManager.json","./mainnet/v1/artifacts/plasma/GnosisSafe.json","./mainnet/v1/artifacts/plasma/GnosisSafeProxy.json","./mainnet/v1/artifacts/plasma/Governable.json","./mainnet/v1/artifacts/plasma/Governance.json","./mainnet/v1/artifacts/plasma/GovernanceLockable.json","./mainnet/v1/artifacts/plasma/GovernanceLockableTest.json","./mainnet/v1/artifacts/plasma/GovernanceProxy.json","./mainnet/v1/artifacts/plasma/IDepositManager.json","./mainnet/v1/artifacts/plasma/IERC165.json","./mainnet/v1/artifacts/plasma/IERC20.json","./mainnet/v1/artifacts/plasma/IERC721.json","./mainnet/v1/artifacts/plasma/IERC721Enumerable.json","./mainnet/v1/artifacts/plasma/IERC721Metadata.json","./mainnet/v1/artifacts/plasma/IERC721Receiver.json","./mainnet/v1/artifacts/plasma/IErcPredicate.json","./mainnet/v1/artifacts/plasma/IGovernance.json","./mainnet/v1/artifacts/plasma/IParentToken.json","./mainnet/v1/artifacts/plasma/IPredicate.json","./mainnet/v1/artifacts/plasma/IRootChain.json","./mainnet/v1/artifacts/plasma/ISignatureValidator.json","./mainnet/v1/artifacts/plasma/ISlashingManager.json","./mainnet/v1/artifacts/plasma/IStakeManager.json","./mainnet/v1/artifacts/plasma/IStakeManagerLocal.json","./mainnet/v1/artifacts/plasma/IValidatorShare.json","./mainnet/v1/artifacts/plasma/IWithdrawManager.json","./mainnet/v1/artifacts/plasma/LibEIP712Domain.json","./mainnet/v1/artifacts/plasma/LibTokenTransferOrder.json","./mainnet/v1/artifacts/plasma/Lockable.json","./mainnet/v1/artifacts/plasma/MRC20.json","./mainnet/v1/artifacts/plasma/Marketplace.json","./mainnet/v1/artifacts/plasma/MarketplacePredicate.json","./mainnet/v1/artifacts/plasma/MarketplacePredicateTest.json","./mainnet/v1/artifacts/plasma/MarketplaceToken.json","./mainnet/v1/artifacts/plasma/MasterCopy.json","./mainnet/v1/artifacts/plasma/MaticWETH.json","./mainnet/v1/artifacts/plasma/Merkle.json","./mainnet/v1/artifacts/plasma/Migrations.json","./mainnet/v1/artifacts/plasma/MintableERC721Predicate.json","./mainnet/v1/artifacts/plasma/MinterRole.json","./mainnet/v1/artifacts/plasma/Module.json","./mainnet/v1/artifacts/plasma/ModuleManager.json","./mainnet/v1/artifacts/plasma/Ownable.json","./mainnet/v1/artifacts/plasma/OwnableLockable.json","./mainnet/v1/artifacts/plasma/OwnerManager.json","./mainnet/v1/artifacts/plasma/ParentTokenMock.json","./mainnet/v1/artifacts/plasma/PredicateUtils.json","./mainnet/v1/artifacts/plasma/PriorityQueue.json","./mainnet/v1/artifacts/plasma/Proxy.json","./mainnet/v1/artifacts/plasma/ProxyStorage.json","./mainnet/v1/artifacts/plasma/ProxyTestImpl.json","./mainnet/v1/artifacts/plasma/ProxyTestImplStorageLayoutChange.json","./mainnet/v1/artifacts/plasma/Registry.json","./mainnet/v1/artifacts/plasma/RootChain.json","./mainnet/v1/artifacts/plasma/RootChainHeader.json","./mainnet/v1/artifacts/plasma/RootChainProxy.json","./mainnet/v1/artifacts/plasma/RootChainStorage.json","./mainnet/v1/artifacts/plasma/RootChainable.json","./mainnet/v1/artifacts/plasma/RootERC721.json","./mainnet/v1/artifacts/plasma/SlashingManager.json","./mainnet/v1/artifacts/plasma/StakeManager.json","./mainnet/v1/artifacts/plasma/StakeManagerProxy.json","./mainnet/v1/artifacts/plasma/StakeManagerStorage.json","./mainnet/v1/artifacts/plasma/StakeManagerTest.json","./mainnet/v1/artifacts/plasma/StakeManagerTestable.json","./mainnet/v1/artifacts/plasma/StakingInfo.json","./mainnet/v1/artifacts/plasma/StakingNFT.json","./mainnet/v1/artifacts/plasma/StateReceiver.json","./mainnet/v1/artifacts/plasma/StateSender.json","./mainnet/v1/artifacts/plasma/StateSyncerVerifier.json","./mainnet/v1/artifacts/plasma/TestMRC20.json","./mainnet/v1/artifacts/plasma/TestToken.json","./mainnet/v1/artifacts/plasma/TransferWithSigPredicate.json","./mainnet/v1/artifacts/plasma/TransferWithSigUtils.json","./mainnet/v1/artifacts/plasma/UpgradableProxy.json","./mainnet/v1/artifacts/plasma/ValidatorShare.json","./mainnet/v1/artifacts/plasma/ValidatorShareFactory.json","./mainnet/v1/artifacts/plasma/ValidatorShareProxy.json","./mainnet/v1/artifacts/plasma/ValidatorShareTest.json","./mainnet/v1/artifacts/plasma/WETH.json","./mainnet/v1/artifacts/plasma/WithdrawManager.json","./mainnet/v1/artifacts/plasma/WithdrawManagerHeader.json","./mainnet/v1/artifacts/plasma/WithdrawManagerProxy.json","./mainnet/v1/artifacts/plasma/WithdrawManagerStorage.json","./mainnet/v1/artifacts/pos/AccessControl.json","./mainnet/v1/artifacts/pos/AccessControlMixin.json","./mainnet/v1/artifacts/pos/ChainConstants.json","./mainnet/v1/artifacts/pos/ChildChainManager.json","./mainnet/v1/artifacts/pos/ChildChainManagerProxy.json","./mainnet/v1/artifacts/pos/ChildERC1155.json","./mainnet/v1/artifacts/pos/ChildERC20.json","./mainnet/v1/artifacts/pos/ChildERC721.json","./mainnet/v1/artifacts/pos/ChildMintableERC721.json","./mainnet/v1/artifacts/pos/ChildTunnel.json","./mainnet/v1/artifacts/pos/DummyERC1155.json","./mainnet/v1/artifacts/pos/DummyERC20.json","./mainnet/v1/artifacts/pos/DummyERC721.json","./mainnet/v1/artifacts/pos/DummyMintableERC721.json","./mainnet/v1/artifacts/pos/DummyStateSender.json","./mainnet/v1/artifacts/pos/EIP712Base.json","./mainnet/v1/artifacts/pos/ERC1155.json","./mainnet/v1/artifacts/pos/ERC1155Predicate.json","./mainnet/v1/artifacts/pos/ERC1155PredicateProxy.json","./mainnet/v1/artifacts/pos/ERC1155Receiver.json","./mainnet/v1/artifacts/pos/ERC165.json","./mainnet/v1/artifacts/pos/ERC20.json","./mainnet/v1/artifacts/pos/ERC20Predicate.json","./mainnet/v1/artifacts/pos/ERC20PredicateProxy.json","./mainnet/v1/artifacts/pos/ERC721.json","./mainnet/v1/artifacts/pos/ERC721Predicate.json","./mainnet/v1/artifacts/pos/ERC721PredicateProxy.json","./mainnet/v1/artifacts/pos/EtherPredicate.json","./mainnet/v1/artifacts/pos/EtherPredicateProxy.json","./mainnet/v1/artifacts/pos/ICheckpointManager.json","./mainnet/v1/artifacts/pos/IChildChainManager.json","./mainnet/v1/artifacts/pos/IChildToken.json","./mainnet/v1/artifacts/pos/IERC1155.json","./mainnet/v1/artifacts/pos/IERC1155MetadataURI.json","./mainnet/v1/artifacts/pos/IERC1155Receiver.json","./mainnet/v1/artifacts/pos/IERC165.json","./mainnet/v1/artifacts/pos/IERC20.json","./mainnet/v1/artifacts/pos/IERC721.json","./mainnet/v1/artifacts/pos/IERC721Enumerable.json","./mainnet/v1/artifacts/pos/IERC721Metadata.json","./mainnet/v1/artifacts/pos/IERC721Receiver.json","./mainnet/v1/artifacts/pos/IERCProxy.json","./mainnet/v1/artifacts/pos/IMintableERC721.json","./mainnet/v1/artifacts/pos/IRootChainManager.json","./mainnet/v1/artifacts/pos/IStateSender.json","./mainnet/v1/artifacts/pos/ITokenPredicate.json","./mainnet/v1/artifacts/pos/MaticWETH.json","./mainnet/v1/artifacts/pos/Merkle.json","./mainnet/v1/artifacts/pos/MerklePatriciaTest.json","./mainnet/v1/artifacts/pos/Migrations.json","./mainnet/v1/artifacts/pos/MintableERC1155Predicate.json","./mainnet/v1/artifacts/pos/MintableERC1155PredicateProxy.json","./mainnet/v1/artifacts/pos/MintableERC20Predicate.json","./mainnet/v1/artifacts/pos/MintableERC20PredicateProxy.json","./mainnet/v1/artifacts/pos/MintableERC721Predicate.json","./mainnet/v1/artifacts/pos/MintableERC721PredicateProxy.json","./mainnet/v1/artifacts/pos/MockCheckpointManager.json","./mainnet/v1/artifacts/pos/NativeMetaTransaction.json","./mainnet/v1/artifacts/pos/NetworkAgnostic.json","./mainnet/v1/artifacts/pos/Proxy.json","./mainnet/v1/artifacts/pos/ProxyTestImpl.json","./mainnet/v1/artifacts/pos/ProxyTestImplStorageLayoutChange.json","./mainnet/v1/artifacts/pos/RootChainManager.json","./mainnet/v1/artifacts/pos/RootChainManagerProxy.json","./mainnet/v1/artifacts/pos/RootChainManagerStorage.json","./mainnet/v1/artifacts/pos/RootTunnel.json","./mainnet/v1/artifacts/pos/UpgradableProxy.json","./networks.json","./testnet/mumbai/artifacts/fx-portal/FxChild.json","./testnet/mumbai/artifacts/fx-portal/FxERC1155ChildTunnel.json","./testnet/mumbai/artifacts/fx-portal/FxERC1155RootTunnel.json","./testnet/mumbai/artifacts/fx-portal/FxERC20ChildToken.json","./testnet/mumbai/artifacts/fx-portal/FxERC20ChildTunnel.json","./testnet/mumbai/artifacts/fx-portal/FxERC20RootToken.json","./testnet/mumbai/artifacts/fx-portal/FxERC20RootTunnel.json","./testnet/mumbai/artifacts/fx-portal/FxERC721ChildTunnel.json","./testnet/mumbai/artifacts/fx-portal/FxERC721RootTunnel.json","./testnet/mumbai/artifacts/fx-portal/FxRoot.json","./testnet/mumbai/artifacts/genesis/BorValidatorSet.json","./testnet/mumbai/artifacts/genesis/IStateReceiver.json","./testnet/mumbai/artifacts/genesis/Migrations.json","./testnet/mumbai/artifacts/genesis/StateReceiver.json","./testnet/mumbai/artifacts/genesis/System.json","./testnet/mumbai/artifacts/genesis/TestBorValidatorSet.json","./testnet/mumbai/artifacts/genesis/TestCommitState.json","./testnet/mumbai/artifacts/genesis/TestStateReceiver.json","./testnet/mumbai/artifacts/genesis/TestSystem.json","./testnet/mumbai/artifacts/genesis/ValidatorSet.json","./testnet/mumbai/artifacts/genesis/ValidatorVerifier.json","./testnet/mumbai/artifacts/plasma/BaseERC20.json","./testnet/mumbai/artifacts/plasma/ChainIdMixin.json","./testnet/mumbai/artifacts/plasma/ChildChain.json","./testnet/mumbai/artifacts/plasma/ChildERC20.json","./testnet/mumbai/artifacts/plasma/ChildERC20Proxified.json","./testnet/mumbai/artifacts/plasma/ChildERC721.json","./testnet/mumbai/artifacts/plasma/ChildERC721Mintable.json","./testnet/mumbai/artifacts/plasma/ChildERC721Proxified.json","./testnet/mumbai/artifacts/plasma/ChildToken.json","./testnet/mumbai/artifacts/plasma/ChildTokenProxy.json","./testnet/mumbai/artifacts/plasma/Common.json","./testnet/mumbai/artifacts/plasma/ContractReceiver.json","./testnet/mumbai/artifacts/plasma/ContractWitRevertingFallback.json","./testnet/mumbai/artifacts/plasma/ContractWithFallback.json","./testnet/mumbai/artifacts/plasma/ContractWithoutFallback.json","./testnet/mumbai/artifacts/plasma/DelegateProxy.json","./testnet/mumbai/artifacts/plasma/DepositManager.json","./testnet/mumbai/artifacts/plasma/DepositManagerHeader.json","./testnet/mumbai/artifacts/plasma/DepositManagerProxy.json","./testnet/mumbai/artifacts/plasma/DepositManagerStorage.json","./testnet/mumbai/artifacts/plasma/DrainStakeManager.json","./testnet/mumbai/artifacts/plasma/Drainable.json","./testnet/mumbai/artifacts/plasma/ECVerify.json","./testnet/mumbai/artifacts/plasma/ERC165.json","./testnet/mumbai/artifacts/plasma/ERC20.json","./testnet/mumbai/artifacts/plasma/ERC20Detailed.json","./testnet/mumbai/artifacts/plasma/ERC20Mintable.json","./testnet/mumbai/artifacts/plasma/ERC20NonTransferable.json","./testnet/mumbai/artifacts/plasma/ERC20Predicate.json","./testnet/mumbai/artifacts/plasma/ERC20PredicateBurnOnly.json","./testnet/mumbai/artifacts/plasma/ERC721.json","./testnet/mumbai/artifacts/plasma/ERC721Enumerable.json","./testnet/mumbai/artifacts/plasma/ERC721Full.json","./testnet/mumbai/artifacts/plasma/ERC721Metadata.json","./testnet/mumbai/artifacts/plasma/ERC721MetadataMintable.json","./testnet/mumbai/artifacts/plasma/ERC721Mintable.json","./testnet/mumbai/artifacts/plasma/ERC721PlasmaMintable.json","./testnet/mumbai/artifacts/plasma/ERC721Predicate.json","./testnet/mumbai/artifacts/plasma/ERC721PredicateBurnOnly.json","./testnet/mumbai/artifacts/plasma/ERCProxy.json","./testnet/mumbai/artifacts/plasma/ExitNFT.json","./testnet/mumbai/artifacts/plasma/FallbackManager.json","./testnet/mumbai/artifacts/plasma/GnosisSafe.json","./testnet/mumbai/artifacts/plasma/GnosisSafeProxy.json","./testnet/mumbai/artifacts/plasma/Governable.json","./testnet/mumbai/artifacts/plasma/Governance.json","./testnet/mumbai/artifacts/plasma/GovernanceLockable.json","./testnet/mumbai/artifacts/plasma/GovernanceLockableTest.json","./testnet/mumbai/artifacts/plasma/GovernanceProxy.json","./testnet/mumbai/artifacts/plasma/IDepositManager.json","./testnet/mumbai/artifacts/plasma/IERC165.json","./testnet/mumbai/artifacts/plasma/IERC20.json","./testnet/mumbai/artifacts/plasma/IERC721.json","./testnet/mumbai/artifacts/plasma/IERC721Enumerable.json","./testnet/mumbai/artifacts/plasma/IERC721Metadata.json","./testnet/mumbai/artifacts/plasma/IERC721Receiver.json","./testnet/mumbai/artifacts/plasma/IErcPredicate.json","./testnet/mumbai/artifacts/plasma/IGovernance.json","./testnet/mumbai/artifacts/plasma/IParentToken.json","./testnet/mumbai/artifacts/plasma/IPredicate.json","./testnet/mumbai/artifacts/plasma/IRootChain.json","./testnet/mumbai/artifacts/plasma/ISignatureValidator.json","./testnet/mumbai/artifacts/plasma/ISlashingManager.json","./testnet/mumbai/artifacts/plasma/IStakeManager.json","./testnet/mumbai/artifacts/plasma/IStakeManagerLocal.json","./testnet/mumbai/artifacts/plasma/IValidatorShare.json","./testnet/mumbai/artifacts/plasma/IWithdrawManager.json","./testnet/mumbai/artifacts/plasma/LibEIP712Domain.json","./testnet/mumbai/artifacts/plasma/LibTokenTransferOrder.json","./testnet/mumbai/artifacts/plasma/Lockable.json","./testnet/mumbai/artifacts/plasma/MRC20.json","./testnet/mumbai/artifacts/plasma/Marketplace.json","./testnet/mumbai/artifacts/plasma/MarketplacePredicate.json","./testnet/mumbai/artifacts/plasma/MarketplacePredicateTest.json","./testnet/mumbai/artifacts/plasma/MarketplaceToken.json","./testnet/mumbai/artifacts/plasma/MasterCopy.json","./testnet/mumbai/artifacts/plasma/MaticWETH.json","./testnet/mumbai/artifacts/plasma/Merkle.json","./testnet/mumbai/artifacts/plasma/Migrations.json","./testnet/mumbai/artifacts/plasma/MintableERC721Predicate.json","./testnet/mumbai/artifacts/plasma/MinterRole.json","./testnet/mumbai/artifacts/plasma/Module.json","./testnet/mumbai/artifacts/plasma/ModuleManager.json","./testnet/mumbai/artifacts/plasma/Ownable.json","./testnet/mumbai/artifacts/plasma/OwnableLockable.json","./testnet/mumbai/artifacts/plasma/OwnerManager.json","./testnet/mumbai/artifacts/plasma/ParentTokenMock.json","./testnet/mumbai/artifacts/plasma/PredicateUtils.json","./testnet/mumbai/artifacts/plasma/PriorityQueue.json","./testnet/mumbai/artifacts/plasma/Proxy.json","./testnet/mumbai/artifacts/plasma/ProxyStorage.json","./testnet/mumbai/artifacts/plasma/ProxyTestImpl.json","./testnet/mumbai/artifacts/plasma/ProxyTestImplStorageLayoutChange.json","./testnet/mumbai/artifacts/plasma/Registry.json","./testnet/mumbai/artifacts/plasma/RootChain.json","./testnet/mumbai/artifacts/plasma/RootChainHeader.json","./testnet/mumbai/artifacts/plasma/RootChainProxy.json","./testnet/mumbai/artifacts/plasma/RootChainStorage.json","./testnet/mumbai/artifacts/plasma/RootChainable.json","./testnet/mumbai/artifacts/plasma/RootERC721.json","./testnet/mumbai/artifacts/plasma/SlashingManager.json","./testnet/mumbai/artifacts/plasma/StakeManager.json","./testnet/mumbai/artifacts/plasma/StakeManagerProxy.json","./testnet/mumbai/artifacts/plasma/StakeManagerStorage.json","./testnet/mumbai/artifacts/plasma/StakeManagerTest.json","./testnet/mumbai/artifacts/plasma/StakeManagerTestable.json","./testnet/mumbai/artifacts/plasma/StakingInfo.json","./testnet/mumbai/artifacts/plasma/StakingNFT.json","./testnet/mumbai/artifacts/plasma/StateReceiver.json","./testnet/mumbai/artifacts/plasma/StateSender.json","./testnet/mumbai/artifacts/plasma/StateSyncerVerifier.json","./testnet/mumbai/artifacts/plasma/TestMRC20.json","./testnet/mumbai/artifacts/plasma/TestToken.json","./testnet/mumbai/artifacts/plasma/TransferWithSigPredicate.json","./testnet/mumbai/artifacts/plasma/TransferWithSigUtils.json","./testnet/mumbai/artifacts/plasma/UpgradableProxy.json","./testnet/mumbai/artifacts/plasma/ValidatorShare.json","./testnet/mumbai/artifacts/plasma/ValidatorShareFactory.json","./testnet/mumbai/artifacts/plasma/ValidatorShareProxy.json","./testnet/mumbai/artifacts/plasma/ValidatorShareTest.json","./testnet/mumbai/artifacts/plasma/WETH.json","./testnet/mumbai/artifacts/plasma/WithdrawManager.json","./testnet/mumbai/artifacts/plasma/WithdrawManagerHeader.json","./testnet/mumbai/artifacts/plasma/WithdrawManagerProxy.json","./testnet/mumbai/artifacts/plasma/WithdrawManagerStorage.json","./testnet/mumbai/artifacts/pos/AccessControl.json","./testnet/mumbai/artifacts/pos/AccessControlMixin.json","./testnet/mumbai/artifacts/pos/ChainConstants.json","./testnet/mumbai/artifacts/pos/ChildChainManager.json","./testnet/mumbai/artifacts/pos/ChildChainManagerProxy.json","./testnet/mumbai/artifacts/pos/ChildERC1155.json","./testnet/mumbai/artifacts/pos/ChildERC20.json","./testnet/mumbai/artifacts/pos/ChildERC721.json","./testnet/mumbai/artifacts/pos/ChildMintableERC721.json","./testnet/mumbai/artifacts/pos/ChildTunnel.json","./testnet/mumbai/artifacts/pos/DummyERC1155.json","./testnet/mumbai/artifacts/pos/DummyERC20.json","./testnet/mumbai/artifacts/pos/DummyERC721.json","./testnet/mumbai/artifacts/pos/DummyMintableERC721.json","./testnet/mumbai/artifacts/pos/DummyStateSender.json","./testnet/mumbai/artifacts/pos/EIP712Base.json","./testnet/mumbai/artifacts/pos/ERC1155.json","./testnet/mumbai/artifacts/pos/ERC1155Predicate.json","./testnet/mumbai/artifacts/pos/ERC1155PredicateProxy.json","./testnet/mumbai/artifacts/pos/ERC1155Receiver.json","./testnet/mumbai/artifacts/pos/ERC165.json","./testnet/mumbai/artifacts/pos/ERC20.json","./testnet/mumbai/artifacts/pos/ERC20Predicate.json","./testnet/mumbai/artifacts/pos/ERC20PredicateProxy.json","./testnet/mumbai/artifacts/pos/ERC721.json","./testnet/mumbai/artifacts/pos/ERC721Predicate.json","./testnet/mumbai/artifacts/pos/ERC721PredicateProxy.json","./testnet/mumbai/artifacts/pos/EtherPredicate.json","./testnet/mumbai/artifacts/pos/EtherPredicateProxy.json","./testnet/mumbai/artifacts/pos/ICheckpointManager.json","./testnet/mumbai/artifacts/pos/IChildChainManager.json","./testnet/mumbai/artifacts/pos/IChildToken.json","./testnet/mumbai/artifacts/pos/IERC1155.json","./testnet/mumbai/artifacts/pos/IERC1155MetadataURI.json","./testnet/mumbai/artifacts/pos/IERC1155Receiver.json","./testnet/mumbai/artifacts/pos/IERC165.json","./testnet/mumbai/artifacts/pos/IERC20.json","./testnet/mumbai/artifacts/pos/IERC721.json","./testnet/mumbai/artifacts/pos/IERC721Enumerable.json","./testnet/mumbai/artifacts/pos/IERC721Metadata.json","./testnet/mumbai/artifacts/pos/IERC721Receiver.json","./testnet/mumbai/artifacts/pos/IERCProxy.json","./testnet/mumbai/artifacts/pos/IMintableERC721.json","./testnet/mumbai/artifacts/pos/IRootChainManager.json","./testnet/mumbai/artifacts/pos/IStateSender.json","./testnet/mumbai/artifacts/pos/ITokenPredicate.json","./testnet/mumbai/artifacts/pos/MaticWETH.json","./testnet/mumbai/artifacts/pos/Merkle.json","./testnet/mumbai/artifacts/pos/MerklePatriciaTest.json","./testnet/mumbai/artifacts/pos/Migrations.json","./testnet/mumbai/artifacts/pos/MintableERC1155Predicate.json","./testnet/mumbai/artifacts/pos/MintableERC1155PredicateProxy.json","./testnet/mumbai/artifacts/pos/MintableERC20Predicate.json","./testnet/mumbai/artifacts/pos/MintableERC20PredicateProxy.json","./testnet/mumbai/artifacts/pos/MintableERC721Predicate.json","./testnet/mumbai/artifacts/pos/MintableERC721PredicateProxy.json","./testnet/mumbai/artifacts/pos/MockCheckpointManager.json","./testnet/mumbai/artifacts/pos/NativeMetaTransaction.json","./testnet/mumbai/artifacts/pos/NetworkAgnostic.json","./testnet/mumbai/artifacts/pos/Proxy.json","./testnet/mumbai/artifacts/pos/ProxyTestImpl.json","./testnet/mumbai/artifacts/pos/ProxyTestImplStorageLayoutChange.json","./testnet/mumbai/artifacts/pos/RootChainManager.json","./testnet/mumbai/artifacts/pos/RootChainManagerProxy.json","./testnet/mumbai/artifacts/pos/RootChainManagerStorage.json","./testnet/mumbai/artifacts/pos/RootTunnel.json","./testnet/mumbai/artifacts/pos/UpgradableProxy.json","TransactionListFilters","activeFilters","assets","setFilter","applyFilters","toggle","toggleOpened","resetFilter","resetFilters","transition","filters","filterCategory","filterValues","TableCellHeader","filterValue","filterLabel","isChecked","filterName","prevTxs","txsPerPage","totalTxs","renderedTxs","txsIndexes","parsedValue","loadTxs","enabledActions","hasActiveFilters","m","src_TransactionListFilters_TransactionListFilters","txHashKey","oldTokenName","oldIdleTokens","skipMigration","biconomyLimitReached","toggleSkipMigration","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_5__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_4__","executeAction","idleTokenToRedeem","_clientProtocolAmountsRedeem","gasLimitRedeem","callbackRedeem","callbackReceiptRedeem","toggleMetaTransactionsEnabled","checkMigrationContractApproved","migrationContractName","oldIdleTokensConverted","oldContractInfo","oldContractABI","biconomyLimits","disapproveMigration","approveMigration","migrationMethod","callbackMigrate","callbackReceiptMigrate","_skipRebalance","_migrationContract$me","biconomyChanged","usePermitChanged","fastBalanceSelectorChanged","batchMigrationEnabled","SkipMigrationComponent","react__WEBPACK_IMPORTED_MODULE_11___default","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_16__","rimble_ui__WEBPACK_IMPORTED_MODULE_20__","biconomyEnabled","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_13__","migrateTextBefore","migrateText","_TransactionField_TransactionField__WEBPACK_IMPORTED_MODULE_18__","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_17__","_FastBalanceSelector_FastBalanceSelector__WEBPACK_IMPORTED_MODULE_19__","functionName","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_14__","migrationImage","migrationTextProps","approveText","Tos","h1","h2","listStyle","theme_dark","exit","TorusConnector","kwargs","Torus","api","rest","objectWithoutProperties","buttonPosition","init","login","getUserInfo","getPublicAddress","verifier","verifierId","logout","updateNetworkId","Connector","AuthereumConnector","Authereum","getProvider","enable","getAccounts","accounts","disable","constructor","GnosisSafeConnector","SafeAppConnector","safeLoaded","checkSafeApp","activate","getAccount","getSafeInfo","isSafeApp","deactivate","WalletLinkConnector","WalletLink","infuraUrl","appLogoUrl","walletLink","darkMode","makeWeb3Provider","disconnect","close","WalletConnectConnector","WalletConnectProvider","infuraId","InjectedConnector","Connectors","NetworkOnlyConnector","TrezorConnector","LedgerConnector","FortmaticConnector","PortisConnector","manifestEmail","REACT_APP_TREZOR_MANIFEST_EMAIL","manifestAppUrl","REACT_APP_TREZOR_MANIFEST_URL","fortmaticApiKey","REACT_APP_FORTMATIC_KEY_MAINNET","portisDAppId","REACT_APP_PORTIS_DAPP_ID","portisNetwork","REACT_APP_PORTIS_NETWORK","supportedNetworkURLs","Injected","Infura","providerURL","Trezor","TrezorApi","Ledger","WalletConnect","bridge","Fortmatic","FortmaticApi","logoutOnDeactivation","Portis","PortisApi","dAppId","AuthereumApi","TorusApi","buildEnv","enableLogging","host","showTorusButton","WrongNetworkBanner","NetworkUtil","isSupportedNetwork","components_WrongNetworkBanner","NoWeb3BrowserModal","renderContent","RimbleUtil","isMobileDevice","NoWalletModal","icononly","Outline","GeneralUtil","hasMetaMask","isMetaMask","isTrustWallet","isTrust","isCoinbaseWallet","hasDapper","DapperEthereum","isDapper","isOpera","isAndroid","isIos","MSStream","WrongNetworkModal","RimbleUtils","TransactionFeeModal","subtitle2","Web3ConnectionButtons","context","useWeb3Context","setConnector","walletProvider","connectionCallback","unsetConnector","isMetamask","isGnosisSafe","safe","browserWalletDetected","allowedConnectors","registerPage","registerPageByDefault","basicConnectorsName","injectedIndex","splice","gnosisIndex","connectorInfo","walletIcon","buttonStyle","ConnectionModal","showTxFees","currentSection","showInstructions","askCustomAddress","closeRemainingTime","customAddressError","newToEthereumChoice","toggleShowTxFees","setStoredSection","closeCountdown","setWalletChoice","choice","setCurrentSection","connectCustomAddress","updateCustomAddress","renderModalContent","TOSacceptance","react_router_dom","newToEthereum","showConnectionButtons","assertThisInitialized","marginBottom","renderFooter","components_TransactionFeeModal","ConnectionPendingModal","UserRejectedConnectionModal","sendMessageAgain","initAccount","LowFundsModal","showSecondary","toggleQRVisible","alignContent","as","h5","ConnectionModalUtil","components_NoWeb3BrowserModal","closeNoWeb3BrowserModal","noWeb3BrowserModalIsOpen","components_NoWalletModal","closeNoWalletModal","noWalletModalIsOpen","components_WrongNetworkModal","closeWrongNetworkModal","wrongNetworkModalIsOpen","components_ConnectionModal","validateAccount","closeConnectionModal","connectionModalIsOpen","accountValidated","components_ConnectionPendingModal","closeConnectionPendingModal","accountConnectionPending","components_UserRejectedConnectionModal","closeUserRejectedConnectionModal","userRejectedConnect","components_LowFundsModal","closeLowFundsModal","lowFundsModalIsOpen","ConnectionErrorModal","setFirstValidConnector","closeConnectionErrorModal","isLedger","connectionError","TransactionErrorModal","closeTransactionErrorModal","isLedgerError","transactionError","isSlowTxError","RimbleTransactionContext","createContext","currentWeb3","permitClient","web3Providers","accountBalance","initWeb3","maticPlasmaClient","accountBalanceLow","accountBalanceToken","checkPreflight","checkNetwork","accountInizialized","rejectValidation","accountValidationPending","initializeContracts","rejectAccountConnect","enableUnderlyingWithdraw","userRejectedValidation","transactionConnectionModalIsOpen","openLowFundsModal","openWrongNetworkModal","openNoWeb3BrowserModal","openConnectionErrorModal","openTransactionErrorModal","openConnectionPendingModal","openUserRejectedConnectionModal","openUserRejectedValidationModal","closeUserRejectedValidationModal","meta","setConnectorName","biconomyLoginProcessing","RimbleTransaction","handleNetworkChanged","_args2","reload","networkInitialized","connectGnosisSafe","testTransaction","createTransaction","addTransaction","errorMessage","isWalletConnectClosedModalError","customAddressChanged","contextAccountChanged","accountDisconnected","gnosisSafeLoaded","setNetwork","initCurrentWeb3","useWeb3Provider","web3InfuraRpc","connectorNameChanged","web3Host","web3Provider","forceCallback","polygonConfig","web3PolygonRpc","maticProvider","parentProvider","maticPOSClientConfig","maticPlasmaClientConfig","web3Callback","originalWeb3","biconomyWeb3Provider","_args7","netId","providerRpc","library","IFrameEthereumProvider","MaticJs","MaticPOSClient","web3Injected","callbackAfterLogin","setCallbackAfterLogin","isLogin","userContract","Biconomy","onEvent","READY","ERROR","useInfuraProvider","initContractWithoutSet","simpleIDInfo","simpleIDParams","SimpleID","wallets","shownNotifications","isError","$crisp","notificationId","content","Sentry","increaseAmount","requiredNetworkId","contractsToInitialize","newContracts","availableStrategiesNetworks","contractFound","contractIndex","_ref20","balanceOf","determineAccountLowBalance","openConnectionModal","_args21","getNetworkType","getNetworkId","currentNetworkChanged","requiredNetworkChanged","_args23","contractMethod","_this$state","manualConfirmationTimeoutId","confirmationCallback","manualConfirmation","receiptCallback","isDeniedTx","_args24","confirmationCount","confidenceThreshold","recentEvent","timeout","lastUpdated","updatedTransaction","openNoWalletModal","CrispClient","accountBalanceDAI","subscribedTransactions","connectionErrorModalOpened","transactionErrorModalOpened","Provider","ConnectionModalsUtil","components_TransactionErrorModal","components_ConnectionErrorModal","utilities_NetworkUtil","Consumer","logoSrc","logoHeight","governanceEnabled","offsetTop","ScrollToTop","pathname","useLocation","useEffect","PageNotFound","Header_styles","NetworkOverview","getNetworkCircleColor","circleColor","networkCircle","DebuggerButtons","Web3Debugger","components_NetworkOverview","Web3Debugger_DebuggerButtons","node","IdleCDO","IdleStrategy","IdleCDOTrancheRewards","stETH","TransactionToastMessages","started","confirmed","TransactionToastUtil","collectionHasNewObject","prevCollection","currentCollection","getNewObjectFromCollection","objectKey","getUpdatedObjectFromCollection","object","getTransactionFromCollection","identifier","collection","getUpdatedTransaction","currentTx","prevTx","processTransactionUpdates","showTransactionToast","toastMeta","getTransactionToastMeta","closeElem","transactionToastMeta","transactionAction","charAt","newMessage","Landing","lazy","Dashboard","Governance","App","currentEnv","selectedTab","connecting","genericError","selectedTheme","buyModalOpened","toastMessageProps","innerWidth","innerHeight","unsubscribeFromHistory","closeToastMessage","showToastMessage","processCustomParam","storedCachedData","_args","cachedKeyFound","widthChanged","heightChanged","tabIndex","envEnabled","loadAvailableTokens","forceChangeChain","warn","jQuery","setThemeMode","closeIframe","w","iFrames","getElementsByTagName","iframe","contentWindow","parents","loadCurrentEnvironment","loadCustomAddress","tokenChanged","strategyChanged","networkChanged","hasMetamask","store","themeDark","_this10","SuspenseLoader","web3_react_dist_default","web3Api","libraryName","web3_react_dist","recreateOnNetworkChange","recreateOnAccountChange","RimbleWeb3","needsPreflight","initContractCustomProvider","react_router","react","fallback","setToken","setStrategy","openBuyModal","handleMenuClick","selectTab","closeBuyModal","isGovernance","components_Header","src_Web3Debugger_Web3Debugger","exact","updateSelectedTab","expires","acceptOnScroll","cookieName","acceptOnScrollPercentage","marginTop","overflowY","src_Tos_Tos","src_PageNotFound_PageNotFound","utilities_TransactionToastUtil","Boolean","hostname","dsn","beforeSend","hint","originalException","ReactDOM","src_App_App","serviceWorker","ready","registration","unregister","footer","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","rimble_ui__WEBPACK_IMPORTED_MODULE_3__","bgLayer","backgroundRepeat","backgroundPosition","backgroundSize","backgroundImage","subtitleProps","BackButton","polished__WEBPACK_IMPORTED_MODULE_0__","darkBlue","blurple","consensysblue","readableColor","totalAUMEndOfYear","loadTotalAUM","aggregatedStatsMethodParams","_this$props","_this$functionsUtil","rimble_ui__WEBPACK_IMPORTED_MODULE_11__","react_countup__WEBPACK_IMPORTED_MODULE_9___default","VariationNumber","IconDirection","iconPos","loading-dots","loading-dots--dot","dot-keyframes","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_10__","HeadingComponent","fieldName","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","trancheChanged","protocolChanged","fieldChanged","rimble_ui__WEBPACK_IMPORTED_MODULE_14__","experimentalBadge","limitCap","badgeText","badgeColor","statusBadge","buttonLabel","_CustomField_CustomField__WEBPACK_IMPORTED_MODULE_11__","feesCounter","react_countup__WEBPACK_IMPORTED_MODULE_8___default","tooltipMessage","_TooltipText_TooltipText__WEBPACK_IMPORTED_MODULE_12__","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_10__","formattedValue","_isBigNumber","currYear","getFullYear","columnWidth","_ExtLink_ExtLink__WEBPACK_IMPORTED_MODULE_8__","role","aria-label","react_router_dom__WEBPACK_IMPORTED_MODULE_7__","ColTitle","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_9__","TwitterShareButton","share","parent","escape","customText","react_confetti_default","recycle","src_TwitterShareButton_TwitterShareButton","componentHasChildren","fieldPath","rimble_ui__WEBPACK_IMPORTED_MODULE_10__","customFieldName","customFieldProps","tokenConfigStats","earningsCurveStart","earningsCurveEnd","tokenAPY2","allocationChartWidth","allocationChartHeight","resizeAllocationChart","aprChartEndTimestamp","aprChartStartTimestamp","aprChartData","apiResultsAprChart","totalItems","newPoint","aprChartWidth","aprChartHeight","resizeAprChart","aprChartType","aprChartProps","firstTokenPrice","firstIdleBlock","performanceChartWidth","performanceChartHeight","resizePerformanceChart","apr_end_date","apr_start_date","apr_start_timestamp","apiResultsPerformanceChart","idleTokenPerformance","performanceChartData","performanceChartType","performanceChartProps","amountToMigrate","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","earningsPercCurveDirection","earningsPercCurve","earningsPercDirection","oldAPY","tokenAPYNoGov","allocationChartRowElement","$allocationChartRowElement","css","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_9__","random","aprChartRowElement","$aprChartRowElement","lineWidth","defs","linearGradientDef","offset","react__WEBPACK_IMPORTED_MODULE_12___default","_CustomTooltip_CustomTooltip__WEBPACK_IMPORTED_MODULE_17__","protocolEarning","_CustomTooltip_CustomTooltipRow__WEBPACK_IMPORTED_MODULE_20__","PerformanceChartRowElement","$PerformanceChartRowElement","blocknumber","rimble_ui__WEBPACK_IMPORTED_MODULE_21__","icon1","icon2","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_14__","react_countup__WEBPACK_IMPORTED_MODULE_11___default","_VariationNumber_VariationNumber__WEBPACK_IMPORTED_MODULE_18__","earningsCurve","governanceTokenName","tooltipMode","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_16__","_AllocationChart_AllocationChart__WEBPACK_IMPORTED_MODULE_19__"],"mappings":"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","file":"static/js/main.bed2a62f.chunk.js","sourcesContent":["import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass SmartNumber extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  render() {\n    let formattedNumber = '-';\n    const number = typeof this.props.number !== 'undefined' && !isNaN(this.props.number) && this.props.number !== false && this.props.number !== null ? this.props.number : null;\n\n    if (number){\n      switch (this.props.type){\n        case 'money':\n          formattedNumber = this.functionsUtil.formatMoney(number,this.props.precision);\n        break;\n        default:\n          formattedNumber = this.functionsUtil.abbreviateNumber(number,this.props.decimals,this.props.maxPrecision,this.props.minPrecision);\n        break;\n      }\n    } else {\n      formattedNumber = '-';\n    }\n\n    const flexProps = {\n      width:1,\n      alignItems:'center',\n      flexDirection:'row',\n      justifyContent:'center'\n    };\n\n    // Replace props\n    if (this.props.flexProps && Object.keys(this.props.flexProps).length){\n      Object.keys(this.props.flexProps).forEach(p => {\n        flexProps[p] = this.props.flexProps[p];\n      });\n    }\n\n    const showUnit = this.props.unit && formattedNumber !== '-';\n    const unitPos = this.props.unitPos ? this.props.unitPos : 'right';\n\n    return (\n      <Flex\n        {...flexProps}\n      >\n        {\n          unitPos === 'left' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n        <Text {...this.props}>{formattedNumber}</Text>\n        {\n          unitPos === 'right' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SmartNumber;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"trancheFlash\":\"TrancheWelcome_trancheFlash__2aaz5\",\"mobile\":\"TrancheWelcome_mobile__fIBQP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"PageNotFound_headerContainer__Ly5Tz\",\"headerBgFiller\":\"PageNotFound_headerBgFiller__1NzlO\",\"bgContainer\":\"PageNotFound_bgContainer__1Racj\",\"list\":\"PageNotFound_list__Cnz-b\",\"textContainer\":\"PageNotFound_textContainer__g_kTm\"};","import React, { Component } from 'react';\nimport { Flex, Link, Text } from \"rimble-ui\";\nimport RoundIconButton from '../RoundIconButton/RoundIconButton';\n\nclass Breadcrumb extends Component {\n  render() {\n\n    const showPathMobile = !!this.props.showPathMobile;\n\n    return (\n      <Flex\n        width={1}\n        id={'breadcrumb'}\n        alignItems={'center'}\n      >\n        {\n          this.props.handleClick && \n           <RoundIconButton\n             buttonProps={{\n               border:2,\n               width:'35px',\n               height:'35px'\n             }}\n             iconSize={'1.2em'}\n             iconName={'ArrowBack'}\n             handleClick={this.props.handleClick}\n           />\n        }\n        {\n          this.props.text && this.props.text.length>0 &&\n           <Link\n             ml={[2,3]}\n             fontSize={[1,2]}\n             fontWeight={3}\n             color={'cellText'}\n             hoverColor={'copyColor'}\n             onClick={this.props.handleClick}\n           >\n            {this.props.text}\n           </Link>\n        }\n        {\n          (!this.props.isMobile || showPathMobile) && this.props.path && this.props.path.length>0 &&\n            this.props.path.map((path,index) => {\n              const link = this.props.pathLink ? (this.props.pathLink[index] || null) : null;\n              const Component = link ? Link : Text;\n              return (\n                <Component\n                  pl={[1,3]}\n                  ml={[1,3]}\n                  fontWeight={3}\n                  fontSize={[1,2]}\n                  hoverColor={'copyColor'}\n                  style={ !this.props.isMobile ? {\n                    maxWidth:'30%',\n                    overflow: 'hidden',\n                    whiteSpace: 'nowrap',\n                    textOverflow: 'ellipsis',\n                    borderLeft: `1px solid ${this.props.theme.colors.divider}`\n                  } : null }\n                  key={`breadcrumb_path_${index}`}\n                  color={link ? 'cellText' : 'statValue'}\n                  onClick={link ? e => this.props.goToSection(link) : null}\n                >\n                  {path}\n                </Component>\n              );\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Breadcrumb;","import { Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\n\nclass RoundIconButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      p:0,\n      border:1,\n      width:'40px',\n      height:'40px',\n      borderRadius:'50%',\n      mainColor:'backButtonBg',\n      disabled:this.props.disabled\n    },this.props.buttonProps);\n\n    buttonProps.minWidth = buttonProps.width;\n\n    return (\n       <RoundButton\n         buttonProps={buttonProps}\n         handleClick={this.props.handleClick}\n       >\n         <Icon\n           color={'copyColor'}\n           name={this.props.iconName}\n           size={ this.props.iconSize ? this.props.iconSize : '1.3em'}\n         />\n       </RoundButton>\n    );\n  }\n}\n\nexport default RoundIconButton;","import React, { Component } from 'react';\nimport { Text, Loader } from \"rimble-ui\";\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ShortHash extends Component {\n\n  state = {\n    text:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const hashChanged = prevProps.hash !== this.props.hash;\n    if (hashChanged){\n      this.loadData();\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n    const resolveAddress = this.props.resolveAddress !== false;\n    let text = this.functionsUtil.shortenHash(this.props.hash);\n    const ensName = resolveAddress ? await this.functionsUtil.getENSName(this.props.hash) : null;\n    if (ensName){\n      text = ensName;\n    }\n    this.setStateSafe({\n      text\n    });\n  }\n\n  render() {\n    const loader = (<Loader size=\"20px\" />);\n    return this.state.text ? <Text display={'inline'} {...this.props}>{this.state.text}</Text> : loader;\n  }\n}\n\nexport default ShortHash;","import React, { Component } from 'react';\nimport {\n  Flex, Box\n} from \"rimble-ui\";\nimport styles from './LoadingSpinner.module.scss';\n\nclass LoadingSpinner extends Component {\n  render() {\n    return (\n      <Flex\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        <Box className={[styles[\"loading-dots\"]]}>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n        </Box>\n      </Flex>\n    );\n  }\n}\n\nexport default LoadingSpinner;\n","import React, { Component } from \"react\";\nimport { Flex, Button } from \"rimble-ui\";\nimport LoadingSpinner from \"../LoadingSpinner/LoadingSpinner.js\";\n\nclass ButtonLoader extends Component {\n  render() {\n    return (\n      <Button onClick={this.props.handleClick} {...this.props.buttonProps}>\n        <Flex\n          flexDirection={\"column\"}\n          alignItems={\"center\"}\n          justifyContent={\"center\"}\n        >\n          <Flex width={1} display={this.props.isLoading ? \"flex\" : \"none\"}>\n            <LoadingSpinner />\n          </Flex>\n          <Flex width={1} display={this.props.isLoading ? \"none\" : \"flex\"}>\n            {this.props.buttonText}\n          </Flex>\n        </Flex>\n      </Button>\n    );\n  }\n}\n\nexport default ButtonLoader;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass CustomTooltip extends Component {\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default CustomTooltip;","import { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport globalConfigs from '../configs/globalConfigs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass AllocationChart extends Component {\n  state = {\n    chartData:null,\n    chartProps:null,\n    selectedSlice:null,\n    totalAllocation:null,\n    protocolsAllocations:null,\n    protocolsAllocationsPerc:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged){\n      this.setStateSafe({\n        chartData:null,\n        chartProps:null,\n        selectedSlice:null,\n        totalAllocation:null,\n        protocolsAllocations:null,\n        protocolsAllocationsPerc:null\n      },() => {\n        this.loadData();\n      });\n    } else if (prevProps.isMobile !== this.props.isMobile){\n      this.loadData()\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n    const {\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    } = await this.functionsUtil.getTokenAllocation(this.props.tokenConfig);\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => d.value+'%',\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {\n            background: this.props.theme.colors.cardBg\n          } : {\n            display: 'none',\n          }\n        },\n        labels:{\n          text:{\n            fontWeight:600,\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n      margin: this.props.inline ? {top:0,right:15,bottom:0,left:1} : (this.props.isMobile ? { top: 10, right: 15, bottom: 0, left: 15 } : { top: 10, right: 35, bottom: 0, left: 35 }),\n    };\n\n    const chartData = [];\n\n    this.props.tokenConfig.protocols.forEach((protocolInfo,i)=>{\n      const protocolName = protocolInfo.name;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n      if (protocolsAllocationsPerc[protocolAddr]){\n        const protocolAllocationPercParsed = parseFloat(protocolsAllocationsPerc[protocolAddr].times(100).toFixed(2));\n        chartData.push({\n          id:protocolAddr,\n          name:protocolName,\n          value:protocolAllocationPercParsed,\n          color:'hsl('+globalConfigs.stats.protocols[protocolName].color.hsl.join(',')+')',\n          label: globalConfigs.stats.protocols[protocolName].label ? globalConfigs.stats.protocols[protocolName].label : this.functionsUtil.capitalize(protocolName)\n        });\n      }\n    });\n\n    this.setStateSafe({\n      chartData,\n      chartProps,\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    });\n  }\n\n  render() {\n    \n    const selectedSlice = this.state.selectedSlice !== null && this.state.protocolsAllocations[this.state.selectedSlice.id] ? this.state.protocolsAllocations[this.state.selectedSlice.id] : false;\n    const protocolIcon = this.state.selectedSlice !== null ? (globalConfigs.stats.protocols[this.state.selectedSlice.name] && globalConfigs.stats.protocols[this.state.selectedSlice.name].icon ? globalConfigs.stats.protocols[this.state.selectedSlice.name].icon : `${this.state.selectedSlice.name}.svg`) : null;\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n      >\n        {\n          this.state.totalAllocation && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/protocols/${protocolIcon}`}\n                    />\n                    <SmartNumber\n                      fontSize={[3,4]}\n                      decimals={3}\n                      fontWeight={4}\n                      maxPrecision={5}\n                      number={selectedSlice}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      Funds in {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/idle-mark.png`}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontWeight:3,\n                        fontSize:[3,4]\n                      }}\n                      decimals={3}\n                      fontWeight={4}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      number={this.state.totalAllocation}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.state.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default AllocationChart;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass CustomTooltipRow extends Component {\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              whiteSpace:'nowrap',\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CustomTooltipRow;","import React, { Component } from 'react';\nimport { Box, Flex, Icon, Text, Heading } from 'rimble-ui'\n// import styles from './Faquestion.module.scss';\n\nclass Faquestion extends Component {\n  state = {\n    isShowingAnswer: false\n  };\n  toggleAnswer(e) {\n    e.preventDefault();\n    this.setState(state => ({...state, isShowingAnswer: !state.isShowingAnswer}));\n  };\n  render() {\n    return (\n      <Flex\n        my={[3,3]}\n        py={[3,3]}\n        px={[4,4]}\n        flexDirection={'column'}\n        alignItems={'baseline'}\n        justifyContent={'center'}\n        backgroundColor={'cardBg'}\n        borderRadius={ this.props.isOpened ? '30px' : '50px' }\n        boxShadow={1}\n      >\n        <Flex flexDirection={'row'} alignItems={'center'} width={1} onClick={this.props.handleClick} style={{cursor: 'pointer'}}>\n          <Box width={4/5}>\n            <Heading.h4\n              my={0}\n              fontWeight={3}\n              fontSize={[1,2]}\n              fontFamily={'sansSerif'}\n              color={this.props.isOpened ? 'link' : 'dark-gray'}\n            >\n              {this.props.question}\n            </Heading.h4>\n          </Box>\n          <Flex\n            width={1/5}\n            justifyContent={'flex-end'}\n          >\n            <Icon\n              size={\"1.5em\"}\n              color={this.props.isOpened ? 'link' : 'copyColor'}\n              name={this.props.isOpened ? 'KeyboardArrowUp' : 'KeyboardArrowDown'}\n            />\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n        >\n          {this.props.isOpened &&\n            <Text.p\n              textAlign={'justify'}\n              fontSize={[1,2]}\n              dangerouslySetInnerHTML={{ __html: this.props.answer }}\n            >\n            </Text.p>\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Faquestion;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheField from '../TrancheField/TrancheField';\n\nclass TranchesList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledProtocols = this.props.enabledProtocols;\n    if (!enabledProtocols || !enabledProtocols.length){\n      enabledProtocols = Object.keys(this.props.availableTranches);\n    }\n\n    return (\n      <Flex id=\"tranches-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n          colsProps={this.props.colsProps}\n        />\n        <Flex id=\"tranches-list\" flexDirection={'column'}>\n          {\n            enabledProtocols.map(protocol => {\n              const protocolConfig = this.props.availableTranches[protocol];\n              if (!protocolConfig){\n                return null;\n              }\n              const tranche = this.props.trancheType || null;\n              return Object.keys(protocolConfig).map( token => (\n                <TableRow\n                  {...this.props}\n                  token={token}\n                  tranche={tranche}\n                  protocol={protocol}\n                  rowId={`tranche-col-${protocol}`}\n                  tokenConfig={protocolConfig[token]}\n                  cardId={`tranche-card-${protocol}`}\n                  key={`tranche-${protocol}-${token}`}\n                  fieldComponent={this.props.fieldComponent || TrancheField}\n                />\n              ))\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TranchesList;\n","import { Flex } from \"rimble-ui\";\nimport Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport CustomList from '../CustomList/CustomList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass Base extends Component {\n\n  state = {\n    loaded:false,\n    activeCoverages:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadCoverages();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    if (accountChanged){\n      this.loadCoverages();\n    }\n  }\n\n  async loadCoverages(){\n    if (!this.props.account){\n      return false;\n    }\n\n    const coverages = await this.functionsUtil.getActiveCoverages(this.props.account);\n    const activeCoverages = [];\n    if (coverages && coverages.length>0){\n      coverages.forEach( c => {\n        if (!this.props.availableTokens || !this.props.availableTokens.length || this.props.availableTokens.includes(c.collateral)){\n          const statusColors = this.props.theme.colors.transactions.status;\n          let statusIcon = 'VerifiedUser';\n          let statusColor = statusColors.completed;\n          switch (c.status){\n            case 'Expired':\n              statusIcon = 'Error';\n              statusColor = statusColors.failed;\n            break;\n            case 'Claimed':\n              statusIcon = 'Error';\n              statusColor = statusColors.pending;\n            break;\n            default:\n            case 'Active':\n              statusIcon = 'VerifiedUser';\n              statusColor = statusColors.completed;\n            break;\n          }\n\n          const statusIconProps = {\n            color:statusColor\n          };\n\n          const portfolioCoverage = c.portfolioCoverage || 'N/A';\n\n          activeCoverages.push(Object.assign(c,{\n            statusIcon,\n            statusIconProps,\n            portfolioCoverage\n          }));\n        }\n      })\n    }\n\n    this.setState({\n      loaded:true,\n      activeCoverages\n    });\n  }\n\n  render() {\n\n    if (!this.state.loaded){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          this.props.title && ((this.state.activeCoverages && this.state.activeCoverages.length>0) || this.props.children) && (\n            <Title\n              {...this.props.titleProps}\n            >\n              {this.props.title}\n            </Title>\n          )\n        }\n        {\n          this.state.activeCoverages && this.state.activeCoverages.length>0 ? (\n            <CustomList\n              rows={this.state.activeCoverages}\n              handleClick={ this.props.isMobile ? (props) => props.row.status!=='Expired' && props.row.fileClaimUrl && this.functionsUtil.openWindow(props.row.fileClaimUrl) : null }\n              cols={[\n                {\n                  title:'PROTOCOL',\n                  props:{\n                    width:[0.28,0.14]\n                  },\n                  fields:[\n                    {\n                      type:'image',\n                      props:{\n                        mr:[1,2],\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      },\n                      path:[this.props.themeMode === 'dark' ? 'protocolImageDark' : 'protocolImage']\n                    },\n                    {\n                      type:'text',\n                      path:['protocolName'],\n                    }\n                  ]\n                },\n                {\n                  title:'TOKEN',\n                  props:{\n                    width:[0.33,0.14]\n                  },\n                  fields:[\n                    {\n                      type:'image',\n                      props:{\n                        mr:[1,2],\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      },\n                      path:['collateralIcon']\n                    },\n                    {\n                      type:'text',\n                      path:['collateral'],\n                    }\n                  ]\n                },\n                {\n                  title:'AMOUNT',\n                  props:{\n                    width:[0.24, 0.12],\n                  },\n                  fields:[\n                    {\n                      type:'number',\n                      path:['balance'],\n                      props:{\n                        decimals: this.props.isMobile ? 2 :  4,\n                      }\n                    },\n                    {\n                      type:'text',\n                      path:['token'],\n                      props:{\n                        ml:[1,2],\n                        style:{\n                          textTransform:'uppercase'\n                        }\n                      }\n                    }\n                  ]\n                },\n                {\n                  mobile:false,\n                  title:'EXPIRATION DATE',\n                  props:{\n                    width:0.19,\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['expirationDate'],\n                      props:{\n                        \n                      }\n                    },\n                  ]\n                },\n                {\n                  mobile:false,\n                  title:'COVERED FUNDS',\n                  props:{\n                    width:0.14,\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['portfolioCoverage'],\n                      props:{\n                        \n                      }\n                    },\n                  ]\n                },\n                {\n                  title:'STATUS',\n                  props:{\n                    width:[0.15,0.12],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'icon',\n                      name:'custom',\n                      path:['statusIcon'],\n                      props:{\n                        mr:[1,2],\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      }\n                    },\n                    {\n                      mobile:false,\n                      name:'custom',\n                      path:['status'],\n                      props:{\n                        style:{\n                          textTransform:'capitalize'\n                        }\n                      }\n                    }\n                  ]\n                },\n                {\n                  title:'',\n                  mobile:false,\n                  props:{\n                    width:0.17,\n                  },\n                  parentProps:{\n                    width:1\n                  },\n                  fields:[\n                    {\n                      type:'button',\n                      name:'custom',\n                      funcProps:{\n                        label:(props) => (props.row.actionLabel),\n                        disabled:(props) => (props.row.actionDisabled)\n                      },\n                      props:{\n                        width:1,\n                        fontSize:3,\n                        fontWeight:3,\n                        height:'45px',\n                        borderRadius:4,\n                        boxShadow:null,\n                        mainColor:'redeem',\n                        size: this.props.isMobile ? 'small' : 'medium',\n                        handleClick:(props) => props.row.status!=='Expired' && props.row.actionUrl && this.functionsUtil.openWindow(props.row.actionUrl)\n                      }\n                    }\n                  ]\n                }\n              ]}\n              {...this.props}\n            />\n          ) : this.props.children\n        }\n      </Flex>\n    )\n  }\n}\n\nexport default Base;\n","import { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquity extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    if (mobileChanged || themeModeChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const etherscanTxs = await this.functionsUtil.getEtherscanTxs(this.props.account,0,'latest',enabledTokens);\n\n    // console.log('etherscanTxs',etherscanTxs);\n\n    const chartData = [];\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || !tx.action || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n          \n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.functionsUtil.BNify(0);\n          }\n\n          const balance = amountLent;\n          const action = tx.action;\n          const timeStamp = parseInt(tx.timeStamp);\n          const tokenPrice = this.functionsUtil.BNify(tx.tokenPrice);\n          const idleTokens = this.functionsUtil.BNify(tx.idleTokens);\n\n          if (!tokenPrice.isNaN() && !tokenPrice.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              timeStamp,\n              tokenPrice,\n              idleTokens,\n              tokenAmount\n            });\n          }\n        });\n      }\n    });\n\n    // console.log('tokensBalance',tokensBalance);\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    const currTimestamp = parseInt(new Date().getTime()/1000)+86400;\n\n    const tokensData = {};\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      const tokenAddress = this.functionsUtil.getAvailableTokenAddress(token,this.props.selectedStrategy);\n      tokensData[token] = await this.functionsUtil.getTokenApiData(tokenAddress,isRisk,firstTxTimestamp,null,false,3600);\n    });\n\n    const idleTokenBalance = {};\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds){\n\n      const foundBalances = {};\n      const tokensBalances = {};\n      timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach(token => {\n\n        let lastTokenData = null;\n        const lastTokenDataUnfiltered = Object.values(tokensData[token]).pop();\n        const filteredTokenData = tokensData[token].filter(tx => (tx.timestamp>=prevTimestamp && tx.timestamp<=timeStamp));\n        if (filteredTokenData && filteredTokenData.length){\n          lastTokenData = filteredTokenData.pop();\n        }\n\n        if (!idleTokenBalance[token]){\n          idleTokenBalance[token] = this.functionsUtil.BNify(0);\n        }\n\n        const tokenConfig = this.props.availableTokens[token];\n        const tokenDecimals = tokenConfig.decimals;\n        let filteredBalances = tokensBalance[token].filter(tx => (tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n        \n        if (!filteredBalances.length){\n          if (prevBalances && prevBalances[token]){\n            filteredBalances = prevBalances[token];\n            const lastFilteredTx = Object.assign([],filteredBalances).pop();\n            const currentBalance = parseFloat(lastFilteredTx.balance);\n\n            // Take idleToken price from API and calculate new balance\n            if (currentBalance>0 && timeStamp>firstTxTimestamp && lastTokenData){\n              const idleTokens = idleTokenBalance[token];\n              const idlePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.idlePrice,tokenDecimals);\n              let newBalance = idleTokens.times(idlePrice);\n\n              // Set new balance and tokenPrice\n              lastFilteredTx.balance = newBalance;\n              lastFilteredTx.tokenPrice = idlePrice;\n              filteredBalances = [lastFilteredTx];\n            }\n          } else {\n            filteredBalances = [{\n              balance:this.functionsUtil.BNify(0),\n              tokenPrice:this.functionsUtil.BNify(0)\n            }];\n          }\n        } else {\n          filteredBalances.forEach(tx => {\n            switch (tx.action){\n              case 'Swap':\n              case 'Deposit':\n              case 'Migrate':\n              case 'Receive':\n              case 'CurveOut':\n                idleTokenBalance[token] = idleTokenBalance[token].plus(tx.idleTokens);\n              break;\n              default:\n                idleTokenBalance[token] = idleTokenBalance[token].minus(tx.idleTokens);\n                if (idleTokenBalance[token].lt(0)){\n                  idleTokenBalance[token] = this.functionsUtil.BNify(0);\n                }\n              break;\n            }\n          });\n        }\n\n        const lastTx = Object.assign([],filteredBalances).pop();\n        // let lastTxBalance = this.functionsUtil.BNify(lastTx.balance);\n        let lastTxBalance = idleTokenBalance[token].times(lastTx.tokenPrice);\n\n        if (lastTxBalance.gt(0)){\n          // Convert token balance to USD\n          let tokenUsdConversionRate = null;\n          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'conversionRateField']);\n          if (!this.props.chartToken && conversionRateField){\n            const conversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : (lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null);\n            if (conversionRate){\n              tokenUsdConversionRate = this.functionsUtil.fixTokenDecimals(conversionRate,18);\n              if (tokenUsdConversionRate.gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n          }\n          \n          tokensBalances[token] = lastTxBalance;\n\n          aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n        }\n\n        foundBalances[token] = filteredBalances;\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || (momentDate.isSameOrAfter(startDate) && momentDate.isSameOrBefore(new Date(),'day'))){\n        \n        // if (momentDate.isAfter(new Date(),'day')){\n        //   momentDate = this.functionsUtil.strToMoment(new Date());\n        // }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n\n        // console.log(formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    // debugger;\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken.toUpperCase(),'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    let axisBottomIndex = 0;\n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        tickValues:'every day',\n        legendPosition: 'middle',\n        format: (value) => {\n          if (axisBottomIndex++ % daysFrequency === 0){\n            return this.functionsUtil.strToMoment(value,'YYYY/MM/DD HH:mm').format('MMM DD')\n          }\n        },\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      areaOpacity:this.props.themeMode === 'light' ? 0.1 : 0.5,\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:this.props.theme.colors.legend,\n              fontFamily:this.props.theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            (typeof point.data.balances === 'object' && Object.keys(point.data.balances).length>0) &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquity;","import Select from 'react-select';\nimport React, { Component } from 'react';\nimport { Flex, Text, Input } from \"rimble-ui\";\nimport styles from './GenericSelector.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass GenericSelector extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n    await this.loadComponents();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const optionsChanged = JSON.stringify(prevProps.options) !== JSON.stringify(this.props.options);\n    const defaultValueChanged = JSON.stringify(prevProps.defaultValue) !== JSON.stringify(this.props.defaultValue);\n    const componentsChanged = prevProps.CustomOptionValue !== this.props.CustomOptionValue || prevProps.CustomValueContainer !== this.props.CustomValueContainer;\n\n    if (optionsChanged || selectedTokenChanged || defaultValueChanged || componentsChanged) {\n      this.loadComponents();\n    }\n  }\n\n  async loadComponents() {\n\n    const ControlComponent = props => {\n      const cardProps = Object.assign(\n        props.innerProps,\n        {\n          p: 2,\n          width: 1,\n          style: { cursor: 'pointer' }\n        },\n        (this.props.innerProps ? this.props.innerProps : {})\n      );\n\n      if (props.menuIsOpen) {\n        cardProps.boxShadow = this.props.noShadow ? 0 : 4;\n      }\n      return (\n        <DashboardCard\n          cardProps={cardProps}\n          isInteractive={this.props.notInteractive ? false : true}\n        >\n          <Flex\n            width={1}\n            height={'100%'}\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            {props.children}\n          </Flex>\n        </DashboardCard>\n      );\n    };\n\n    const CustomIndicatorSeparator = props => null;\n\n    const CustomMenu = props => {\n      const cardProps = Object.assign(props.innerProps, {\n        mt: 2,\n        zIndex: 1,\n        boxShadow: null,\n        position: 'absolute',\n        backgroundColor: this.props.outerColor ? this.props.outerColor : \"cardBg\"\n      });\n      return (\n        <DashboardCard\n          cardProps={cardProps}\n        >\n          {props.children}\n        </DashboardCard>\n      );\n    }\n\n    const CustomValueContainer = this.props.CustomValueContainer ? this.props.CustomValueContainer : props => {\n      return (\n        <Flex\n          {...props.innerProps}\n        >\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text\n              fontWeight={3}\n            >\n              {props.selectProps.value.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomOptionValue = this.props.CustomOptionValue ? this.props.CustomOptionValue : (props) => {\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n        >\n          <Text>\n            {props.label}\n          </Text>\n        </Flex>\n      );\n    };\n\n    const CustomInputContainer = this.props.CustomInputContainer ? this.props.CustomInputContainer : (props) => {\n\n      if (!props.selectProps.isSearchable) {\n        return null;\n      }\n\n      return (\n        <Input\n          {...props}\n          fontSize={this.props.theme.fontSizes[2]}\n          color={this.props.theme.colors.copyColor}\n          fontWeight={this.props.theme.fontWeights[3]}\n          fontFamily={this.props.theme.fonts.sansSerif}\n          backgroundColor={this.props.theme.colors.cardBg}\n          className={[styles.searchInput, this.props.themeMode === 'dark' ? styles.dark : null, !props.selectProps.menuIsOpen ? styles.searchInputHidden : null]}\n        />\n      );\n    };\n\n    const CustomOption = (props) => {\n\n      const options = props.selectProps.options;\n      let selectedValue = props.selectProps && props.selectProps.value && props.selectProps.value.value;\n\n      // Check if the selectedValue is included in options\n      if (selectedValue && options.map(o => o.value).indexOf(selectedValue) === -1 && this.props.defaultValue) {\n        selectedValue = this.props.defaultValue.value;\n      }\n\n      // Don't show selected value\n      if (selectedValue && selectedValue === props.value) {\n        return null;\n      }\n\n      // console.log('CustomOption',this.props.customOptionProps);\n\n      return (\n        <Flex\n          px={3}\n          py={2}\n          width={1}\n          {...props.innerProps}\n          alignItems={'center'}\n          flexDirection={'row'}\n          style={{ cursor: 'pointer' }}\n          justifyContent={'flex-start'}\n          className={styles.genericSelector}\n          backgroundColor={this.props.isDashboard ? 'cardBg' : (props.isFocused ? 'selectBgFocused' : 'selectBg')}\n        >\n          <CustomOptionValue\n            {...props}\n          />\n        </Flex>\n      );\n    }\n\n    await this.setState({\n      CustomMenu,\n      CustomOption,\n      ControlComponent,\n      CustomValueContainer,\n      CustomInputContainer,\n      CustomIndicatorSeparator\n    });\n  }\n\n  render() {\n    const isSearchable = typeof this.props.isSearchable !== 'undefined' ? this.props.isSearchable : false;\n    return (\n      <Select\n        name={this.props.name}\n        isSearchable={isSearchable}\n        options={this.props.options}\n        defaultValue={this.props.defaultValue}\n        onChange={v => this.props.onChange(v.value)}\n        components={{\n          Menu: this.state.CustomMenu,\n          Option: this.state.CustomOption,\n          Control: this.state.ControlComponent,\n          Input: this.state.CustomInputContainer,\n          SingleValue: this.state.CustomValueContainer,\n          IndicatorSeparator: this.state.CustomIndicatorSeparator\n        }}\n      />\n    );\n  }\n}\n\nexport default GenericSelector;\n","import React, { Component } from \"react\";\nimport { Flex, Text, Icon, Image } from \"rimble-ui\";\nimport DashboardCard from \"../DashboardCard/DashboardCard\";\n\nclass CardIconButton extends Component {\n  render() {\n    const cardProps = Object.assign(\n      {\n        py: 1,\n        width: \"auto\",\n        px: [\"12px\", 3]\n      },\n      this.props.cardProps\n    );\n\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n        isInteractive={true}\n        isActive={this.props.isActive}\n        isDisabled={this.props.isDisabled}\n        handleClick={this.props.handleClick}\n        backgroundColor={\"blue\"}\n      >\n        <Flex\n          mx={this.props.margin ? this.props.margin : 0}\n          my={1}\n          alignItems={\"center\"}\n          flexDirection={\"row\"}\n          justifyContent={this.props.align ? this.props.align : \"center\"}\n        >\n          {this.props.image ? (\n            <Image\n              align={\"center\"}\n              src={this.props.image}\n              height={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n              width={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n              {...this.props.imageProps}\n            />\n          ) : this.props.useIconOnly ? (\n            <Icon\n              align={\"center\"}\n              name={this.props.icon}\n              size={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n              color={this.props.iconColor ? this.props.iconColor : \"redeem\"}\n              {...this.props.iconProps}\n            />\n          ) : (\n            <Flex\n              mr={this.props.isSidebar ? 0 : 2}\n              p={this.props.isSidebar ? 0 : [\"4px\", \"7px\"]}\n              borderRadius={\"50%\"}\n              alignItems={\"center\"}\n              justifyContent={\"center\"}\n              backgroundColor={\n                this.props.iconBgColor\n                  ? this.props.iconBgColor\n                  : this.props.theme.colors.transactions.actionBg.redeem\n              }\n            >\n              <Icon\n                align={\"center\"}\n                name={this.props.icon}\n                size={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n                color={this.props.iconColor ? this.props.iconColor : \"redeem\"}\n                {...this.props.iconProps}\n              />\n            </Flex>\n          )}\n          <Text fontWeight={3} fontSize={[1, 3]} {...this.props.textProps}>\n            {this.props.text}\n          </Text>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default CardIconButton;\n","import axios from 'axios';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Progress, Icon, Link } from 'rimble-ui'\n\nclass TxProgressBar extends Component {\n  state = {\n    txCount:0,\n    error:null,\n    ended:false,\n    percentage:0,\n    processing:true,\n    txTimestamp:null,\n    initialized:false,\n    estimatedTime:null,\n    remainingTime:null\n  };\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n\n    this.componentUnmounted = true;\n\n    var id = window.setTimeout(function() {}, 0);\n\n    while (id--) {\n        window.clearTimeout(id); // will do nothing if no timeout with id is present\n    }\n\n    window.initProgressBar = this.initProgressBar;\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps){\n    this.loadUtils();\n\n    if (!this.state.initialized && this.props.web3){\n      this.initProgressBar();\n    }\n  }\n\n  componentDidMount = async () => {\n    this.initProgressBar();\n  }\n\n  getTransaction = async () => {\n    const transaction = await (new Promise( async (resolve, reject) => {\n      // console.log('getTransaction',this.props.hash);\n      this.props.web3.eth.getTransaction(this.props.hash,(err,transaction) => {\n        resolve(transaction);\n      });\n    }));\n\n    // console.log('getTransaction',transaction);\n\n    const newState = {};\n    if (transaction){\n      newState.transaction = transaction;\n    } else {\n      newState.processing = false;\n      newState.error = 'Unable to find the transaction';\n    }\n\n    this.setState(newState);\n    return transaction;\n  }\n\n  /*\n  Taken from https://ethgasstation.info/calculatorTxV.php\n  */\n  _estimateWait (prediction, gasoffered) {\n    var minedProb;\n    var expectedWait;\n    var sum1, sum2;\n    var intercept = 4.2794;\n    var hpa = .0329;\n    var hgo = -3.2836;\n    var tx = -0.0004;\n    var intercept2 = 7.5375;\n    var hpa_coef = -0.0801;\n    var txatabove_coef= 0.0003;\n    var high_gas_coef = .3532;\n\n    if (gasoffered > 1000000) {    \n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + hgo  + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['hashpower_accepting'] * hpa_coef) + (prediction['tx_atabove'] * txatabove_coef) + high_gas_coef;\n    } else {\n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['tx_atabove'] * txatabove_coef) + (prediction['hashpower_accepting'] * hpa_coef);\n    }\n\n    var factor = Math.exp(- 1 * sum1);\n    const prob = 1 / (1 + factor);\n\n    if (prob > .95) {\n      minedProb = 'Very High';\n    } else if (prob > .9 && prob <= .95) {\n      minedProb = 'Medium'\n    } else {\n      minedProb = 'Low';\n    }\n\n    expectedWait = Math.exp(sum2);\n    if (expectedWait < 2) {\n      expectedWait = 2;\n    }\n\n    if (gasoffered > 2000000) {\n      expectedWait += 100;\n    }\n\n    return [expectedWait, prediction['hashpower_accepting'], prediction['tx_atabove'], minedProb];\n  }\n\n  getBlockTime = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/ethgasAPI.json');\n    if (pt){\n      const blockTime = pt.data;\n      this.setState({\n        blockTime\n      });\n      return blockTime;\n    }\n    return null;\n  }\n\n  getPredictionTable = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/predictTable.json');\n    if (pt){\n      const predictTable = pt.data;\n      this.setState({\n        predictTable\n      });\n      return predictTable;\n    }\n    return null;\n  }\n\n  getTxEstimatedTime = (gasPrice) => {\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    if (currentNetwork.provider === 'polygon'){\n      return 30;\n    } else {\n      let prediction = null;\n      if (this.state.predictTable){\n        this.state.predictTable.forEach((p,i) => {\n          if (!prediction && parseFloat(p.gasprice)>=parseFloat(gasPrice)){\n            prediction = p;\n            return true;\n          }\n        });\n      }\n\n      if (this.state.blockTime && prediction){\n        const pdValues = this._estimateWait(prediction,this.state.transaction.gas);\n        const blocksWait = pdValues[0];\n        const blockInterval = this.state.blockTime.block_time;\n        let txMeanSecs = blocksWait * blockInterval;\n        txMeanSecs = parseInt(txMeanSecs.toFixed(0));\n        this.functionsUtil.customLog('getTxEstimatedTime',prediction,this.state.transaction.gas,pdValues,txMeanSecs);\n        return txMeanSecs; // Customized\n      }\n    }\n\n    return null;\n  }\n\n  calculateRemainingTime = async () => {\n    let remainingTime = 0;\n    let estimatedTime = 0;\n\n    if (!this.state.transaction || this.componentUnmounted){\n      return false;\n    }\n\n    if (!this.state.transaction.blockNumber){\n      const gasPrice = parseFloat(this.functionsUtil.BNify(this.state.transaction.gasPrice).div(1e9).toString());\n      remainingTime = this.getTxEstimatedTime(gasPrice);\n    }\n\n    estimatedTime = remainingTime ? remainingTime : 0;\n\n    if (this.state.txTimestamp){\n      const currTimestamp = new Date().getTime();\n      const secondsPassed = parseInt((currTimestamp-parseInt(this.state.txTimestamp))/1000);\n      \n      // Calculate new remaining time\n      remainingTime -= secondsPassed;\n      remainingTime = Math.max(remainingTime,0);\n\n      this.functionsUtil.customLog('Estimated time',estimatedTime,'secondsPassed',secondsPassed,'New remaining time',remainingTime);\n    }\n\n    const timePassed = estimatedTime-remainingTime;\n    const percentage = estimatedTime>0 ? parseFloat(timePassed/estimatedTime) : 1;\n\n    this.setState({\n      estimatedTime,\n      remainingTime,\n      percentage\n    });\n\n    setTimeout(()=>{this.updateProgressBar()},1000);\n  }\n\n  updateProgressBar = () => {\n\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    let remainingTime = this.state.remainingTime;\n    if (remainingTime){\n      remainingTime--;\n      if (!remainingTime){\n        this.setState({\n          percentage:1,\n          ended:true\n        });\n      } else {\n        const timePassed = this.state.estimatedTime-remainingTime;\n        const percentage = parseFloat(timePassed/this.state.estimatedTime);\n        this.setState({\n          percentage,\n          remainingTime\n        });\n        setTimeout(()=>{this.updateProgressBar()},1000);\n      }\n    } else {\n      this.setState({\n        percentage:1,\n        ended:true\n      });\n    }\n  }\n\n  getTxInfo = async () => {\n\n    // Get tx timestamp\n    const txProgressBarKey = `txProgressBarData`;\n    const txHash = this.props.hash.toLowerCase();\n\n    let txProgressBarData = null;\n    let txTimestamp = null;\n    let newState = {};\n\n    if (localStorage){\n      txProgressBarData = localStorage.getItem(txProgressBarKey);\n      if (txProgressBarData){\n        txProgressBarData = JSON.parse(txProgressBarData);\n      }\n    }\n\n    if (!txProgressBarData || !txProgressBarData[txHash]){\n      txTimestamp = new Date().getTime();\n\n      const [predictTable,blockTime] = await Promise.all([\n        this.getPredictionTable(),\n        this.getBlockTime()\n      ]);\n\n      txProgressBarData = {};\n      txProgressBarData[txHash] = {\n        txTimestamp,\n        blockTime,\n        predictTable\n      };\n\n      // Save progress bar status in localStorage\n      this.functionsUtil.setLocalStorage(txProgressBarKey,JSON.stringify(txProgressBarData));\n\n      newState = txProgressBarData[txHash];\n\n      if (!predictTable || !blockTime){\n        newState.error = 'Processing transaction';\n      }\n    }\n\n    this.setState(newState);\n  }\n\n  initProgressBar = async () => {\n\n    if (!this.props.hash || !this.props.web3){\n      return false;\n    }\n\n    const newState = {\n      initialized:true\n    };\n    this.setState(newState);\n\n    // console.log('initProgressBar',this.state.txCount,this.props.hash);\n\n    const transaction = await this.getTransaction();\n\n    if (transaction){\n      await this.getTxInfo();\n      try{\n        this.calculateRemainingTime();\n      } catch (err) {\n        newState.error = 'Processing transaction';\n        // const errStringified = JSON.stringify(err);\n      }\n\n      this.setState(newState);\n    } else {\n      const txCount = this.state.txCount++;\n      if (txCount<5){\n        this.setState({\n          txCount\n        },() => {\n          window.setTimeout(() => {\n            this.initProgressBar();\n          },1000);\n        });\n      }\n    }\n  }\n\n  renderRemainingTime(){\n    // More than 60 seconds\n    if (this.state.remainingTime>60){\n      const minutes = Math.floor(this.state.remainingTime/60);\n      const seconds = this.state.remainingTime-(minutes*60);\n      return ('0'+minutes).substr(-2)+':'+('0'+seconds).substr(-2)+' min';\n    } else {\n      return this.state.remainingTime+'s';\n    }\n  }\n\n  render() {\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    return (\n      <Flex flexDirection={'column'} alignItems={'center'}>\n        {\n          this.state.remainingTime !== null ? (\n            this.state.ended ? (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={this.props.endMessage ? this.props.endMessage : 'Finalizing transaction...'}\n              />\n            ) : (\n              <Flex\n                mb={2}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Text mb={2} color={ this.props.textColor ? this.props.textColor : 'copyColor'}>{ this.props.waitText ? this.props.waitText : 'Remaining time:' } <Text.span color={ this.props.textColor ? this.props.textColor : 'copyColor'} fontWeight={3}>{ this.renderRemainingTime() }</Text.span></Text>\n                <Progress value={ this.state.percentage } />\n              </Flex>\n            )\n          ) : (\n            this.state.error !== null && !this.state.processing ? (\n              <Flex\n                alignItems={'center'}\n                flexDirection={'column'}\n              >\n                <Icon\n                  size={'2em'}\n                  name={'Warning'}\n                  color={'cellText'}\n                />\n                <Text\n                  mt={0}\n                  fontSize={2}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  {this.state.error}\n                </Text>\n              </Flex>\n            ) : (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={ this.state.error ? this.state.error : (this.props.hash ? (this.props.loadingMessage ? this.props.loadingMessage : 'Calculating estimated time...') : (this.props.sendingMessage ? this.props.sendingMessage : 'Sending transaction...') ) }\n              />\n            )\n          )\n        }\n        {\n          this.props.hash ? (\n            <Link\n              mt={0}\n              target={'_blank'}\n              hoverColor={'dark-gray'}\n              rel={\"nofollow noopener noreferrer\"}\n              color={this.props.textColor ? this.props.textColor : 'cellText'}\n              href={this.functionsUtil.getEtherscanTransactionUrl(this.props.hash)}\n            >\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <Text\n                  fontSize={0}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  View in {this.functionsUtil.capitalize(currentNetwork.explorer)}\n                </Text>\n                <Icon\n                  ml={1}\n                  size={'0.75em'}\n                  name={'OpenInNew'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                />\n              </Flex>\n            </Link>\n          ) : typeof this.props.cancelTransaction === 'function' ? (\n              <Link\n                mt={0}\n                href={`javascript:void(0)`}\n                onClick={ e => this.props.cancelTransaction() }\n                color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                hoverColor={this.props.cancelTextHoverColor ? this.props.cancelTextHoverColor : 'dark-gray'}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'center'}\n                >\n                  <Text\n                    fontSize={0}\n                    textAlign={'center'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  >\n                    Cancel transaction\n                  </Text>\n                  <Icon\n                    ml={1}\n                    size={'0.85em'}\n                    name={'Cancel'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  />\n                </Flex>\n              </Link>\n          ) : null\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TxProgressBar;","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from \"polished\";\n\n// theme.js\nexport default {\n  breakpoints: [\"52em\", \"64em\"],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: [\"0\", \"4px\", \"8px\", \"16px\", \"2rem\"],\n  widths: [0, 16, 32, 64, 128, 256, 550],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, \"1px solid #eee\", \"1px solid #b6c2ff\"],\n  borderWidths: [\"0\", \"1px\", \"2px\", \"4px\"],\n  shadows: [\n    \"0\",\n    \"0px 2px 4px rgba(0, 0, 0, 0.1)\",\n    \"0 7px 14px rgba(50,50,93,.1)\",\n    \"1px 1px 0px rgba(0,0,0,0.2)\",\n    \"0px 0px 16px 2px rgba(0,54,255,0.3)\"\n  ],\n  opacity: {\n    disabled: 0.4\n  },\n  colors: {\n    primary: blue.base,\n    \"gradient-bg\": \"linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)\",\n    \"primary-light\": blue.light[1],\n    \"primary-dark\": blue.dark[1],\n    bgBlue: \"#0030e0\",\n    blue: \"#0036ff\",\n    tick: \"#00b84a\",\n    \"dark-blue\": \"#00219a\",\n    skyBlue: \"#00abfe\",\n    lightBlue: \"#79f4e1\",\n    copyColor: \"#3F3D4B\",\n    subColor: \"#a7a7a7\",\n    black: baseColors.black,\n    'near-black': '#111',\n    'dark-gray': '#4e4e4e',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#f4f4f4',\n    white: '#fff',\n    transparent: 'transparent',\n    green: '#00b84a',\n    /*\n    NEW COLORS\n    */\n    text: \"#000000\",\n    border: \"#EAEAEA\",\n    connect: \"#0042F5\",\n    newblue: \"#2B65D9\",\n    alert: \"#ff9900\",\n    arrowActive: \"#4f4f4f\",\n    arrowInactive: \"#d8d8d8\",\n    selectBgFocused: \"#fbfbfb\",\n    selectBg: \"#ffffff\",\n    backButtonBg: \"#ffffff\",\n    lineChartStroke: \"#dbdbdb\",\n    wrongNetworkBannerBg: \"#ffffff\",\n    dashboardBg: \"#f9fafd\",\n    statValue: \"#959595\",\n    boxBorder: \"#eeeeee\",\n    cellTitle: \"#a3a4a5\",\n    cellText: \"#a6a6a6\",\n    divider: \"#d8d8d8\",\n    divider2: \"#EBEBEB\",\n    counter: \"#5d5d5d\",\n    redeem: \"#00a9fe\",\n    link: \"#0036ff\",\n    deposit: \"#0239ff\",\n    migrate: \"#00a9fe\",\n    legend: \"#c9c9c9\",\n    menuBg: \"#fff\",\n    menuHover: \"#f3f6ff\",\n    cardBg: \"#fff\",\n    flashColor: \"#3f4e9a\",\n    menuRightBorder: \"#eee\",\n    menuIconActive: '#2a65d9',\n    cardBgContrast: \"#fafafa\",\n    cardHoverShadow: \"0px 0px 0px 1px rgba(0, 54, 255, 0.3)\",\n    cardBgHover: \"#f7f8ff\",\n    cardBorder: \"#eee\",\n    pageActive: \"#4f4f4f\",\n    pageInactive: \"#d8d8d8\",\n    experimental: \"#8500ff\",\n    production: \"#00b84a\",\n    transactions: {\n      action: {\n        send: \"#10a0dd\",\n        swap: \"#3d53c0\",\n        boost: \"#ffff00\",\n        redeem: \"#10a0dd\",\n        swapout: \"#10a0dd\",\n        deposit: \"#3d53c0\",\n        curvein: \"#10a0dd\",\n        receive: \"#3d53c0\",\n        migrate: \"#3d53c0\",\n        default: \"#4f4f4f\",\n        curveout: \"#3d53c0\",\n        withdraw: \"#10a0dd\",\n        curvedepositin: \"#10a0dd\",\n        curvedepositout: \"#3d53c0\"\n      },\n      actionBg: {\n        send: \"#ceeff6\",\n        swap: \"#ced6ff\",\n        boost: \"#ff7979\",\n        redeem: \"#ceeff6\",\n        swapout: \"#ceeff6\",\n        deposit: \"#ced6ff\",\n        curvein: \"#ceeff6\",\n        default: \"#dadada\",\n        receive: \"#ced6ff\",\n        migrate: \"#ced6ff\",\n        withdraw: \"#ceeff6\",\n        curveout: \"#ced6ff\",\n        curvedepositin: \"#ceeff6\",\n        curvedepositout: \"#ced6ff\"\n      },\n      status: {\n        completed: \"#00b84a\",\n        pending: \"#a5a5a5\",\n        failed: \"#fa0000\"\n      }\n    },\n    blacks: [\n      \"rgba(0,0,0,.0125)\",\n      \"rgba(0,0,0,.025)\",\n      \"rgba(0,0,0,.05)\",\n      \"rgba(0,0,0,.1)\",\n      \"rgba(0,0,0,.2)\",\n      \"rgba(0,0,0,.3)\",\n      \"rgba(0,0,0,.4)\",\n      \"rgba(0,0,0,.5)\",\n      \"rgba(0,0,0,.6)\",\n      \"rgba(0,0,0,.7)\",\n      \"rgba(0,0,0,.8)\",\n      \"rgba(0,0,0,.9)\"\n    ],\n    whites: [\n      \"rgba(255,255,255,.0125)\",\n      \"rgba(255,255,255,.025)\",\n      \"rgba(255,255,255,.05)\",\n      \"rgba(255,255,255,.1)\",\n      \"rgba(255,255,255,.2)\",\n      \"rgba(255,255,255,.3)\",\n      \"rgba(255,255,255,.4)\",\n      \"rgba(255,255,255,.5)\",\n      \"rgba(255,255,255,.6)\",\n      \"rgba(255,255,255,.7)\",\n      \"rgba(255,255,255,.8)\",\n      \"rgba(255,255,255,.9)\"\n    ]\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: shade(0.4, \"#AAA\"),\n      backgroundColor: tint(0.9, \"#AAA\"),\n      borderColor: \"#AAA\"\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base\n    },\n    info: {\n      color: shade(0.4, blue.base),\n      backgroundColor: \"#f3f6ff\",\n      borderColor: \"#b6c2ff\"\n    }\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      \"--main-color\": blue.base,\n      \"--contrast-color\": blue.text\n    },\n    normal: {\n      color: baseColors.black,\n      \"--contrast-color\": baseColors.black\n    },\n    success: {\n      \"--main-color\": green.base,\n      \"--contrast-color\": green.text\n    },\n    danger: {\n      \"--main-color\": red.base,\n      \"--contrast-color\": red.text\n    }\n  },\n  buttonSizes: {\n    small: {\n      fontSize: \"0.75rem\",\n      height: \"2rem\",\n      minWidth: \"2rem\",\n      padding: \"0 1rem\"\n    },\n    medium: {\n      fontSize: \"1rem\",\n      height: \"3rem\",\n      minWidth: \"3rem\"\n    },\n    large: {\n      fontSize: \"1.5rem\",\n      height: \"4rem\",\n      minWidth: \"4rem\",\n      borderRadius: \"2rem\"\n    }\n  }\n};\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass AssetSelector extends Component {\n\n  state = {\n    options:null,\n    defaultValue:null,\n    CustomOptionValue:null,\n    CustomValueContainer:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadComponents(){\n    const options = Object.keys(this.props.availableTokens).map(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      return {\n        value:token,\n        label:token,\n        tokenConfig\n      };\n    });\n\n    const defaultValue = this.props.selectedToken ? options.find(v => (v.value.toUpperCase() === this.props.selectedToken.toUpperCase())) : null;\n\n    const CustomOptionValue = props => {\n      const token = props.value;\n      const tokenConfig = props.data.tokenConfig;\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n          {\n            this.state.props.showCustomField ? (\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:this.state.props.showCustomField,\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n            ) : this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : defaultValue;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const token = selectProps.value;\n      const tokenConfig = selectProps.tokenConfig;\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n\n          {\n            this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    this.setState({\n      options,\n      defaultValue,\n      CustomOptionValue,\n      CustomValueContainer\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadComponents();\n\n    this.setState({\n      props:this.props\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const availableTokensChanged = JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n    if (availableTokensChanged || selectedTokenChanged){\n      this.loadComponents();\n    }\n  }\n\n  render() {\n    if (!this.state.options || !this.state.defaultValue || !this.state.CustomOptionValue || !this.state.CustomValueContainer || !this.props.availableTokens || !Object.keys(this.props.availableTokens).length){\n      return null;\n    }\n\n    return (\n      <GenericSelector\n        {...this.props}\n        name={'assets'}\n        options={this.state.options}\n        innerProps={this.props.innerProps}\n        isSearchable={this.props.isSearchable}\n        defaultValue={this.state.defaultValue}\n        selectedToken={this.props.selectedToken}\n        CustomOptionValue={this.state.CustomOptionValue}\n        CustomValueContainer={this.state.CustomValueContainer}\n        onChange={ this.props.onChange ? this.props.onChange : this.props.changeToken}\n      />\n    );\n  }\n}\n\nexport default AssetSelector;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\n\nclass ExecuteTransaction extends Component {\n\n  state = {\n    txStatus:null,\n    processing:{\n      txHash:null,\n      loading:false\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async execute(){\n\n    const callback = (tx,error) => {\n\n      // console.log('callback',tx,error);\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Transaction',\n        eventLabel: this.props.methodName,\n        eventAction: this.props.contractName\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      const txSucceeded = tx && tx.status === 'success';\n      if (txSucceeded){\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx);\n        }\n      }\n\n      this.setState({\n        processing: {\n          txHash:null,\n          loading:false\n        },\n        txStatus:tx ? tx.status : null\n      });\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        txStatus:'processing',\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.setState((prevState) => ({\n      txStatus:'loading',\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    let params = this.props.params;\n    if (typeof this.props.getTransactionParams === 'function'){\n      params = this.props.getTransactionParams();\n    } else if (typeof this.props.getTransactionParamsAsync === 'function'){\n      params = await this.props.getTransactionParamsAsync();\n    } else if (typeof this.props.transactionParams === 'object'){\n      params = this.props.transactionParams;\n    }\n\n    if (!params || !this.props.contractName){\n      this.setState((prevState) => ({\n        txStatus:null,\n        processing: {\n          ...prevState.processing,\n          loading:false\n        }\n      }));\n      return false;\n    }\n\n    console.log('ExecuteTransaction',this.props.contractName,this.props.methodName,params);\n\n    if (this.props.sendRawTransaction){\n      this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,params,callback,callbackReceipt,null,true,params);\n    } else {\n      this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,params,callback,callbackReceipt);\n    }\n  }\n\n  render() {\n    const ExecuteComponent = this.props.Component;\n    return (\n      <Flex\n        {...this.props.parentProps}\n      >\n        {\n          this.state.txStatus === 'success' && this.props.children ?\n            this.props.children\n          : this.state.processing && this.state.processing.loading ? (\n            <TxProgressBar\n              web3={this.props.web3}\n              network={this.props.network}\n              {...this.props.progressBarProps}\n              hash={this.state.processing.txHash}\n              cancelTransaction={this.cancelTransaction.bind(this)}\n              endMessage={`Finalizing ${this.props.action} request...`}\n              waitText={`${this.functionsUtil.capitalize(this.props.action)} estimated in`}\n            />\n          ) : (\n            <ExecuteComponent\n              onClick={this.execute.bind(this)}\n              {...this.props.componentProps}\n            >\n              {this.props.componentProps.value}\n            </ExecuteComponent>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default ExecuteTransaction;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bg\":\"ModalCard_bg__3ocwQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"twitterIcon\":\"TwitterShareButton_twitterIcon__2QCmn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tooltip\":\"TableCellHeader_tooltip__3xM3k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radioBtn\":\"TransactionListFilters_radioBtn__1vgHa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Web3ConnectionButtons_button__1Wov0\"};","import React, { Component } from 'react';\nimport { Icon, Text, Flex } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass IconBox extends Component {\n\n  render() {\n    const cardProps = Object.assign({\n      p:3\n    },this.props.cardProps);\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n        isVisible={this.props.isVisible}\n        isInteractive={this.props.isInteractive}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={this.props.icon ? this.props.icon : 'InfoOutline'}\n            {...this.props.iconProps}\n          />\n          {\n            this.props.text && \n              <Text\n                mt={1}\n                fontSize={2}\n                color={'cellText'}\n                textAlign={'center'}\n                dangerouslySetInnerHTML={{\n                  __html:this.props.text\n                }}\n                {...this.props.textProps}\n              />\n          }\n          {\n            this.props.children\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default IconBox;\n","/*\nTheming: https://github.com/plouc/nivo/issues/308\n*/\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n\nclass GenericChart extends Component {\n  state = {\n    width:null,\n    height:null\n  };\n\n  componentUnmounted = false;\n\n  componentWillMount() {\n    window.addEventListener('resize', this.handleWindowSizeChange.bind(this));\n  }\n\n  componentWillUnmount() {\n    this.componentUnmounted = true;\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidMount(){\n    this.handleWindowSizeChange();\n  }\n\n  componentDidUpdate(prevProps){\n    if (prevProps.isMobile !== this.props.isMobile){\n      this.handleWindowSizeChange();\n    }\n  }\n\n  handleWindowSizeChange(){\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    const newState = {...this.state};\n\n    if (this.props.parentId){\n      const chartContainer = document.getElementById(this.props.parentId);\n      if (chartContainer){\n        const chartWidth = parseFloat(chartContainer.offsetWidth)>0 ? chartContainer.offsetWidth : 0;\n\n        if (chartWidth && chartWidth !== newState.width){\n          newState.width = chartWidth;\n        }\n      }\n    }\n\n    if (!newState.width && this.props.width && this.props.width !== newState.width) {\n      newState.width = this.props.width;\n    }\n\n    if (this.props.parentIdHeight){\n      const chartContainerH = document.getElementById(this.props.parentIdHeight);\n      if (chartContainerH){\n        const chartHeight = parseFloat(chartContainerH.offsetWidth)>0 ? chartContainerH.offsetWidth : 0;\n        if (chartHeight && chartHeight !== newState.height){\n          newState.height = chartHeight;\n          if (!newState.width){\n            newState.width = chartHeight;\n          }\n        }\n      }\n    }\n\n    if (!newState.height && this.props.height && this.props.height !== newState.height) {\n      newState.height = this.props.height;\n    }\n\n    newState.height = newState.height || newState.width;\n\n    if (Object.keys(newState).length>0){\n      this.setState(newState);\n    }\n  };\n\n  render() {\n    const ChartType = this.props.type;\n\n    const height = this.state.height && !isNaN(this.state.height) ? parseInt(this.state.height) : 350;\n    const width = this.state.width && !isNaN(this.state.width) ? parseInt(this.state.width) : 0;\n\n    let chartProps = Object.assign({},this.props);\n    chartProps = {\n      ...chartProps,\n      height,\n      width\n    }\n\n    return chartProps.showLoader && (!chartProps.data || !width || !height) ? (\n      <FlexLoader\n        flexProps={{\n          flexDirection:'row',\n          minHeight:height\n        }}\n        loaderProps={ this.props.loaderProps ? this.props.loaderProps : {\n          size:'30px'\n        }}\n        textProps={{\n          ml:2\n        }}\n        text={ this.props.loaderText !== undefined ? this.props.loaderText : 'Loading graph data...'}\n      />\n    ) : this.props.data && (\n      <ChartType\n        {...chartProps}\n      />\n    )\n  }\n}\n\nexport default GenericChart;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gradientButton\":\"Header_gradientButton__2mrQl\",\"empty\":\"Header_empty__3fhiX\",\"select\":\"Header_select__27Xyx\",\"selectDark\":\"Header_selectDark__EHAAP\",\"input\":\"Header_input__3dr8P\"};","import React, { Component } from 'react';\nimport { Flex, Text, Tooltip, Icon } from \"rimble-ui\";\n\nclass TooltipText extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n        {...this.props.flexProps}\n      >\n        <Text\n          fontWeight={3}\n          fontSize={[1,2]}\n          color={'cellText'}\n          {...this.props.textProps}\n        >\n          {this.props.text}\n        </Text>\n        <Tooltip\n          placement={'top'}\n          message={this.props.message}\n          {...this.props.tooltipProps}\n        >\n          <Icon\n            ml={1}\n            style={{\n              cursor:'pointer'\n            }}\n            name={\"Info\"}\n            color={'cellTitle'}\n            size={ this.props.isMobile ? '0.8em' : '1em'}\n            {...this.props.iconProps}\n          />\n        </Tooltip>\n      </Flex>\n    );\n  }\n}\n\nexport default TooltipText;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"Tos_headerContainer__23W_f\",\"headerBgFiller\":\"Tos_headerBgFiller__36Nfk\",\"bgContainer\":\"Tos_bgContainer__rX7uJ\",\"list\":\"Tos_list__3bMLG\",\"textContainer\":\"Tos_textContainer__3hUuq\"};","import theme from '../theme';\nimport React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ShortHash from \"../utilities/components/ShortHash\";\nimport { Flex, Text, Icon, Link, Image } from \"rimble-ui\";\n\nclass TransactionField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const hashChanged = prevProps.hash !== this.props.hash;\n    const accountChanged = prevProps.account !== this.props.account;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    if (fieldChanged || hashChanged || accountChanged){\n      this.loadField();\n    }\n  }\n\n  async loadField(){\n    const fieldInfo = this.props.fieldInfo;\n    if (this.props.hash && this.props.account){\n      switch (fieldInfo.name){\n        case 'icon':\n        break;\n        case 'hash':\n          \n        break;\n        case 'action':\n          \n        break;\n        case 'date':\n        break;\n        case 'status':\n        break;\n        case 'amount':\n        break;\n        case 'asset':\n        break;\n        case 'custom':\n        break;\n        default:\n        break;\n      }\n    }\n  }\n\n  render(){\n    let icon = null;\n    let color = null;\n    let output = null;\n    let tokenSymbol = null;\n    let tokenConfig = null;\n    const fieldInfo = this.props.fieldInfo;\n    const transaction = this.props.transaction;\n    let bgColor = theme.colors.transactions.actionBg.default;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      style:{\n        maxWidth:'100%',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis'\n      },\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    switch (fieldInfo.name){\n      case 'icon':\n        if (transaction.action){\n          color = theme.colors.transactions.action[transaction.action.toLowerCase()] ? theme.colors.transactions.action[transaction.action.toLowerCase()] : color;\n          bgColor = theme.colors.transactions.actionBg[transaction.action.toLowerCase()] ? theme.colors.transactions.actionBg[transaction.action.toLowerCase()] : bgColor;\n        }\n        switch (transaction.action.toLowerCase()) {\n          case 'deposit':\n          case 'curveout':\n          case 'curvezapout':\n          case 'curvedepositout':\n            icon = \"ArrowDownward\";\n          break;\n          case 'boost':\n            icon = \"TrendingUp\";\n          break;\n          case 'redeem':\n          case 'curvein':\n          case 'curvezapin':\n          case 'curvedepositin':\n            icon = \"ArrowUpward\";\n          break;\n          case 'send':\n            icon = \"Send\";\n          break;\n          case 'receive':\n            icon = \"Redo\";\n          break;\n          case 'migrate':\n            // icon = \"Sync\";\n            icon = \"Repeat\";\n          break;\n          case 'swap':\n            icon = \"SwapHoriz\";\n          break;\n          case 'swapout':\n            icon = \"SwapHoriz\";\n          break;\n          case 'withdraw':\n            icon = \"ArrowUpward\";\n          break;\n          default:\n            icon = \"Refresh\";\n          break;\n        }\n        output = (\n          <Flex\n            p={'5px'}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            backgroundColor={bgColor}\n            justifyContent={'center'}\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={this.props.isMobile ? '1em' : '1.4em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'hash':\n        if (transaction.hash){\n          output = (\n            <Link\n              target={'_blank'}\n              rel={'nofollow noopener noreferrer'}\n              href={this.functionsUtil.getEtherscanTransactionUrl(transaction.hash)}\n            >\n              <ShortHash\n                fontSize={1}\n                color={'white'}\n                {...fieldProps}\n                resolveAddress={false}\n                hash={transaction.hash}\n              />\n            </Link>\n          );\n        }\n      break;\n      case 'action':\n        let action = transaction.action;\n        switch (transaction.action) {\n          case 'Swap':\n            action = \"Swap In\";\n          break;\n          case 'SwapOut':\n            action = \"Swap Out\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Text {...fieldProps}>{action.toUpperCase()}</Text>\n        );\n      break;\n      case 'date':\n        const formattedDate = transaction.momentDate.format('DD MMM, YYYY');\n        output = (\n          <Text {...fieldProps}>{formattedDate}</Text>\n        );\n      break;\n      case 'statusIcon':\n        color = theme.colors.transactions.status[transaction.status.toLowerCase()];\n        switch (transaction.status) {\n          case 'Completed':\n            icon = \"Done\";\n          break;\n          case 'Pending':\n            icon = \"Timelapse\";\n          break;\n          case 'Failed':\n            icon = \"ErrorOutline\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Flex\n            p={[0,'1px']}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            width={['24px','26px']}\n            height={['24px','26px']}\n            justifyContent={'center'}\n            border={ this.props.isMobile ? `1px solid ${color}` : `2px solid ${color}` }\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={ this.props.isMobile ? '1em' : '1.2em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'status':\n        output = (\n          <Text {...fieldProps}>{transaction.status}</Text>\n        );\n      break;\n      case 'amount':\n        output = (\n          <SmartNumber {...fieldProps} number={transaction.amount} />\n        );\n      break;\n      case 'tokenIcon':\n      tokenSymbol = transaction.tokenSymbol.toUpperCase();\n      tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',tokenSymbol]);\n        const iconSrc = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${tokenSymbol}.svg`;\n        output = (\n          <Image src={iconSrc} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        tokenSymbol = transaction.tokenSymbol.toUpperCase();\n        tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',tokenSymbol]);\n        output = (\n          <Text {...fieldProps}>{tokenConfig && tokenConfig.label ? tokenConfig.label : tokenSymbol}</Text>\n        );\n      break;\n      case 'custom':\n        let CustomComponent = null;\n        let customValue = this.functionsUtil.getArrayPath(fieldInfo.path,this.props.transaction);\n        switch (fieldInfo.type){\n          case 'number':\n            customValue = this.functionsUtil.BNify(customValue).toString();\n            CustomComponent = SmartNumber;\n            fieldProps.number = customValue;\n            customValue = null;\n          break;\n          case 'image':\n            CustomComponent = Image;\n            fieldProps.src = customValue;\n            customValue = null;\n          break;\n          case 'icon':\n            CustomComponent = Icon;\n            fieldProps.name = customValue;\n            customValue = null;\n          break;\n          default:\n            CustomComponent = Text;\n          break;\n        }\n        output = customValue ? (\n          <CustomComponent {...fieldProps}>{customValue}</CustomComponent>\n        ) : <CustomComponent {...fieldProps} />\n      break;\n      default:\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TransactionField;\n","import FunctionsUtil from './FunctionsUtil';\n\nclass IdleGovToken{\n  // Attributes\n  props = {};\n  tokenName = null;\n  tokenConfig = null;\n  functionsUtil = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.tokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n    this.tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n  }\n\n  getBalance = async () => {\n    let balance = await this.functionsUtil.getTokenBalance(this.tokenName,this.props.account);\n    if (!balance || this.functionsUtil.BNify(balance).isNaN()){\n      balance = this.functionsUtil.BNify(0);\n    }\n    return balance;\n  }\n\n  claimRewards = async (callback,callbackReceipt) => {\n    return this.functionsUtil.contractMethodSendWrapper('EarlyRewards', 'claim', [], callback, callbackReceipt);\n  }\n\n  getPriorVotes = async (account=null) => {\n    account = account ? account : this.props.account;\n    let priorVotes = await this.functionsUtil.genericContractCall(this.tokenName,'getPriorVotes',[account]);\n    if (priorVotes){\n      return this.functionsUtil.BNify(priorVotes);\n    }\n    return null;\n  }\n\n  refreshIdleSpeed = async () => {\n    return this.functionsUtil.genericContractCall('IdleController','refreshIdleSpeeds');\n  }\n\n  getUnclaimedTokens = async () => {\n    /*\n    let rewards =  await this.functionsUtil.genericContractCall('EarlyRewards','rewards',[this.props.account]);\n    if (rewards){\n      return this.functionsUtil.fixTokenDecimals(rewards,this.tokenConfig.decimals);\n    }\n    */\n    return this.functionsUtil.BNify(0);\n  }\n\n  getAPR = async (token,tokenConfig,conversionRate=null) => {\n    const IDLETokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n    if (!IDLETokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getIdleAPR_${tokenConfig.idle.token}_${conversionRate}`;\n    /*\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n    */\n\n    let APR = this.functionsUtil.BNify(0);\n\n    const [\n      idleDistribution,\n      tokenAllocation\n    ] = await Promise.all([\n      this.getDistribution(tokenConfig),\n      this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    if (idleDistribution && tokenAllocation){\n\n      const DAITokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get IDLE oconversion rate\n      if (!conversionRate){\n        try {\n          conversionRate = await this.functionsUtil.getUniswapConversionRate(DAITokenConfig,IDLETokenConfig);\n        } catch (error) {\n\n        }\n        if (!conversionRate || conversionRate.isNaN()){\n          conversionRate = this.functionsUtil.BNify(0);\n        }\n      }\n\n      if (!conversionRate || this.functionsUtil.BNify(conversionRate).lte(0)){\n        return this.functionsUtil.BNify(0);\n      }\n\n      const tokenPool = await this.functionsUtil.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig);\n\n      const idleDistributedPerYearUSD = this.functionsUtil.BNify(conversionRate).times(idleDistribution);\n      APR = idleDistributedPerYearUSD.div(tokenPool).times(100);\n\n      // console.log(tokenConfig.idle.token,idleDistributedPerYearUSD.toFixed(5),conversionRate.toFixed(5),tokenPool.toFixed(5),APR.toFixed(5));\n\n      return this.functionsUtil.setCachedData(cachedDataKey,APR);\n    }\n\n    return APR;\n  }\n\n  // Get IDLE distribution speed\n  getSpeed = async (idleTokenAddress) => {\n\n    const cachedDataKey = `getIdleSpeed_${idleTokenAddress}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    let idleSpeeds = await this.functionsUtil.genericContractCall('IdleController','idleSpeeds',[idleTokenAddress]);\n\n    if (idleSpeeds && !this.functionsUtil.BNify(idleSpeeds).isNaN()){\n      idleSpeeds = this.functionsUtil.BNify(idleSpeeds);\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,idleSpeeds,1800);\n    }\n    return null;\n  }\n\n  getDistribution = async (tokenConfig) => {\n\n    const cachedDataKey = `getIdleDistribution_${tokenConfig.idle.token}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    // Get IDLE distribution speed and Total Supply\n    const idleSpeeds = await this.getSpeed(tokenConfig.idle.address);\n\n    if (idleSpeeds){\n\n      // Get IDLE distribution for Idle in a Year\n      const blocksPerYear = this.functionsUtil.getGlobalConfig(['network','blocksPerYear']);\n\n      // Take 50% of distrubution for lenders side\n      const distribution = this.functionsUtil.BNify(idleSpeeds).times(this.functionsUtil.BNify(blocksPerYear)).div(1e18);\n\n      if (!this.functionsUtil.BNify(distribution).isNaN()){\n        return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,distribution);\n      }\n    }\n\n    return null;\n  }\n\n  getUserDistribution = async (account=null,availableTokens=null,fixByFrequency=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    const currentNetworkId = this.functionsUtil.getRequiredNetworkId();\n\n    let totalSpeed = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n\n      const disabledTokens = this.functionsUtil.getArrayPath(['disabledTokens',currentNetworkId],this.tokenConfig);\n\n      if (disabledTokens.includes(tokenConfig.idle.token)){\n        return;\n      }\n\n      const [\n        idleSpeed,\n        userPoolShare\n      ] = await Promise.all([\n        this.getSpeed(tokenConfig.idle.address),\n        this.functionsUtil.getUserPoolShare(account,tokenConfig)\n      ]);\n\n      if (idleSpeed && userPoolShare){\n        const tokenSpeed = idleSpeed.times(userPoolShare);\n        totalSpeed = totalSpeed.plus(tokenSpeed);\n      }\n    });\n\n    if (fixByFrequency){\n      totalSpeed = this.functionsUtil.fixTokenDecimals(totalSpeed,this.tokenConfig.decimals);\n      totalSpeed = this.functionsUtil.fixDistributionSpeed(totalSpeed,this.tokenConfig.distributionFrequency)\n    }\n\n    return totalSpeed;\n  }\n\n  getAvgApr = async (availableTokens=null) => {\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.functionsUtil.BNify(0);\n    let totalAllocation = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [idleApr,tokenAllocation] = await Promise.all([\n        this.getAPR(token,tokenConfig),\n        this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (idleApr && tokenAllocation){\n        output = output.plus(idleApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n\n}\n\nexport default IdleGovToken;","import Web3 from \"web3\";\nimport React from \"react\";\nimport axios from 'axios';\nimport moment from 'moment';\nimport { Text } from \"rimble-ui\";\nimport BigNumber from 'bignumber.js';\nimport IdleGovToken from './IdleGovToken';\nimport { toBuffer } from \"ethereumjs-util\";\nimport ERC20 from '../abis/tokens/ERC20.json';\nimport globalConfigs from '../configs/globalConfigs';\nimport ENS, { getEnsAddress } from '@ensdomains/ensjs';\nimport availableTokens from '../configs/availableTokens';\nimport IAaveIncentivesController from '../abis/aave/IAaveIncentivesController.json';\n\nconst ethereumjsABI = require('ethereumjs-abi');\n\nwindow.profiler = {};\n\nclass FunctionsUtil {\n\n  // Attributes\n  props = {};\n  idleGovToken = null;\n\n  // Constructor\n  constructor(props) {\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n  }\n  trimEth = eth => {\n    return this.BNify(eth).toFixed(6);\n  }\n  toBN = n => new this.props.web3.utils.BN(n)\n  toEth = wei => {\n    if (!this.props.web3) {\n      return null;\n    }\n    return this.props.web3.utils.fromWei(\n      (wei || 0).toString(),\n      \"ether\"\n    );\n  }\n  toWei = eth => {\n    if (!this.props.web3) {\n      return null;\n    }\n    return this.props.web3.utils.toWei(\n      (eth || 0).toString(),\n      \"ether\"\n    );\n  }\n  htmlDecode = input => {\n    var e = document.createElement('textarea');\n    e.innerHTML = input;\n    return e.childNodes.length === 0 ? '' : e.childNodes[0].nodeValue;\n  }\n  BNify_obj = s => new BigNumber(s)\n  BNify = s => new BigNumber(typeof s === 'object' ? s : String(s))\n  customLog = (...props) => { if (globalConfigs.logs.messagesEnabled) this.customLog(moment().format('HH:mm:ss'), ...props); }\n  customLogError = (...props) => { if (globalConfigs.logs.errorsEnabled) console.error(moment().format('HH:mm:ss'), ...props); }\n  getContractByName = (contractName, networkId = null) => {\n    networkId = networkId || this.props.network.required.id;\n    let contract = this.props.contracts.find(c => c && c.name && c.name === contractName);\n    if (this.props.network && this.props.network.required && this.props.network.current && (!this.props.network.isCorrectNetwork || networkId !== this.props.network.current.id) && this.props.contractsNetworks && this.props.contractsNetworks[networkId]) {\n      contract = this.props.contractsNetworks[networkId].find(c => c && c.name && c.name === contractName);\n    } else {\n      contract = this.props.contracts.find(c => c && c.name && c.name === contractName);\n    }\n    if (!contract) {\n      return false;\n    }\n    return contract.contract;\n  }\n  normalizeSimpleIDNotification = (n) => {\n    return n.replace(/<\\/p><p>/g, \"\\n\")\n      .replace(/<p>/g, \"\")\n      .replace(/<br>/g, \"\")\n      .replace(/&nbsp;/g, \" \")\n      .replace(/<\\/p>/g, \"\");\n  }\n  capitalize = (str) => {\n    return str ? str.substr(0, 1).toUpperCase() + str.substr(1) : '';\n  }\n  strToMoment = (date, format = null) => {\n    return moment(date, format);\n  }\n  replaceArrayProps = (arr1, arr2) => {\n    if (arr2 && Object.keys(arr2).length) {\n      Object.keys(arr2).forEach(p => {\n        arr1[p] = arr2[p];\n      });\n    }\n\n    return arr1;\n  }\n  replaceArrayPropsRecursive = (arr1, arr2, props = null) => {\n    if (arr2 && Object.keys(arr2).length) {\n      Object.keys(arr2).forEach(p => {\n        if (typeof arr2[p] === 'function') {\n          arr1[p] = arr2[p](props);\n        } else if (typeof arr2[p] === 'object') {\n          arr1[p] = { ...arr1[p], ...this.replaceArrayPropsRecursive(arr1, arr2[p], props) };\n        } else {\n          arr1[p] = arr2[p];\n        }\n      });\n    }\n    return arr1;\n  }\n  stripHtml = (html) => {\n    var tmp = document.createElement(\"DIV\");\n    tmp.innerHTML = html;\n    return tmp.textContent || tmp.innerText || \"\";\n  }\n  // VanillaJS function for smooth scroll\n  scrollTo = (to, duration) => {\n    const start = window.scrollY;\n    const change = to - start;\n    const increment = 20;\n    let currentTime = 0;\n\n    Math.easeInOutQuad = function (t, b, c, d) {\n      t /= d / 2;\n      if (t < 1) return c / 2 * t * t + b;\n      t--;\n      return -c / 2 * (t * (t - 2) - 1) + b;\n    };\n\n    const animateScroll = () => {\n      currentTime += increment;\n      var val = Math.easeInOutQuad(currentTime, start, change, duration);\n      window.scrollTo(0, val);\n      if (currentTime < duration) {\n        window.setTimeout(animateScroll, increment);\n      }\n    };\n\n    animateScroll();\n  }\n  getQueryStringParameterByName = (name, url = window.location.href) => {\n    // eslint-disable-next-line\n    name = name.replace(/[\\[\\]]/g, '\\\\$&');\n    var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\n      results = regex.exec(url);\n    if (!results) return null;\n    if (!results[2]) return '';\n    return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n  }\n  getTxAction = (tx, tokenConfig) => {\n\n    if (!tokenConfig.idle) {\n      return null;\n    }\n\n    const idleTokenAddress = tokenConfig.idle.address;\n    const depositProxyContractInfo = this.getGlobalConfig(['contract', 'methods', 'deposit', 'proxyContract']);\n    const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n    const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n    const batchMigration = this.getGlobalConfig(['tools', 'batchMigration', 'props', 'availableTokens', tokenConfig.idle.token]);\n    const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n    const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();\n    const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).indexOf(tx.from.toLowerCase()) !== -1) && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase());\n    const isSendTransferTx = !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isReceiveTransferTx = !isMigrationTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isDepositTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && (tx.to.toLowerCase() === idleTokenAddress.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase()));\n    const isRedeemTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && tx.to.toLowerCase() === this.props.account.toLowerCase();\n    const isSwapTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && !isDepositTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n\n    let action = null;\n\n    if (isDepositTx) {\n      action = 'Deposit';\n    } else if (isRedeemTx) {\n      action = 'Redeem';\n    } else if (isMigrationTx) {\n      action = 'Migrate';\n    } else if (isSendTransferTx) {\n      action = 'Send';\n    } else if (isReceiveTransferTx) {\n      action = 'Receive';\n    } else if (isSwapTx) {\n      action = 'Swap';\n    } else if (isSwapTx) {\n      action = 'SwapOut';\n    }\n\n    return action;\n  }\n  shortenHash = (hash, startLen = 7, endLen = 4) => {\n    let shortHash = hash;\n    const txStart = shortHash.substr(0, startLen);\n    const txEnd = shortHash.substr(shortHash.length - endLen);\n    shortHash = txStart + \"...\" + txEnd;\n    return shortHash;\n  }\n\n  switchEthereumChain = (chainId) => {\n    const web3 = this.getCurrentWeb3();\n    if (!web3 || !web3.utils || !web3.currentProvider || typeof web3.currentProvider.request !== 'function') {\n      return false;\n    }\n\n    chainId = parseInt(chainId);\n    const networkConfig = this.getGlobalConfig(['network', 'availableNetworks', chainId]);\n\n    if (!networkConfig) {\n      return false;\n    }\n\n    const params = [{\n      chainId: web3.utils.toHex(chainId)\n    }];\n\n    return web3.currentProvider.request({\n      params,\n      method: 'wallet_switchEthereumChain',\n    });\n  }\n\n  addEthereumChain = (chainId) => {\n    const web3 = this.getCurrentWeb3();\n\n    // console.log('addEthereumChain',chainId,web3.utils,typeof web3.currentProvider.request);\n\n    if (!web3 || !web3.utils || !web3.currentProvider || typeof web3.currentProvider.request !== 'function') {\n      return false;\n    }\n\n    chainId = parseInt(chainId);\n    const networkConfig = this.getGlobalConfig(['network', 'availableNetworks', chainId]);\n\n    if (!networkConfig) {\n      return false;\n    }\n\n    if (chainId === 1) {\n      return this.switchEthereumChain(chainId);\n    }\n\n    const chainName = networkConfig.chainName || networkConfig.name;\n    const providerConfig = this.getGlobalConfig(['network', 'providers', networkConfig.provider]);\n    const blockExplorerUrl = this.getGlobalConfig(['network', 'providers', networkConfig.explorer, 'baseUrl', chainId]);\n    const rpcUrl = (providerConfig.publicRpc && providerConfig.publicRpc[chainId]) || (providerConfig.rpc[chainId] + providerConfig.key);\n    const params = [{\n      chainName,\n      rpcUrls: [rpcUrl],\n      chainId: web3.utils.toHex(chainId),\n      nativeCurrency: {\n        decimals: 18,\n        name: networkConfig.baseToken,\n        symbol: networkConfig.baseToken\n      },\n      blockExplorerUrls: [blockExplorerUrl]\n    }];\n\n    // console.log('addEthereumChain',params);\n\n    return web3.currentProvider.request({\n      params,\n      method: 'wallet_addEthereumChain',\n    });\n  }\n  getENSName = async (address) => {\n\n    const networkId = this.getRequiredNetworkId();\n    const ensConfig = this.getGlobalConfig(['network', 'providers', 'ens']);\n\n    if (!ensConfig.enabled || !ensConfig.supportedNetworks.includes(networkId)) {\n      return null;\n    }\n\n    if (!this.checkAddress(address) || !this.props.web3) {\n      return null;\n    }\n\n    const cachedDataKey = `getENSName_${address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const TTL = 3600;\n    const provider = this.props.web3.currentProvider;\n    if (networkId === 1) {\n      const ens = new ENS({ provider, ensAddress: getEnsAddress(networkId.toString()) });\n      const ensName = await ens.getName(address);\n      if (ensName && ensName.name) {\n        const addressCheck = await ens.name(ensName.name).getAddress();\n        if (addressCheck && address.toLowerCase() === addressCheck.toLowerCase()) {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, ensName.name, TTL);\n        }\n      }\n    }\n\n    return null;\n  }\n  getAccountPortfolioTranches = async (availableTranches = null, account = null) => {\n    const portfolio = {\n      transactions: [],\n      tranchesBalance: [],\n      avgAPY: this.BNify(0),\n      totalBalance: this.BNify(0),\n      totalEarnings: this.BNify(0),\n      totalAmountLent: this.BNify(0),\n      totalEarningsPerc: this.BNify(0),\n    };\n\n    availableTranches = availableTranches ? availableTranches : this.props.availableTranches;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTranches) {\n      return portfolio;\n    }\n\n    const tranches = this.getGlobalConfig(['tranches']);\n\n    await this.asyncForEach(Object.keys(availableTranches), async (protocol) => {\n      const protocolConfig = availableTranches[protocol];\n      await this.asyncForEach(Object.keys(protocolConfig), async (token) => {\n        const tokenConfig = protocolConfig[token];\n        await this.asyncForEach(Object.keys(tranches), async (tranche) => {\n          const trancheConfig = tokenConfig[tranche];\n          let [\n            trancheTokenBalance,\n            trancheUserInfo,\n            trancheStakedBalance,\n          ] = await Promise.all([\n            this.getContractBalance(trancheConfig.name,account),\n            this.getTrancheUserInfo(tokenConfig, trancheConfig, account),\n            this.getTrancheStakedBalance(trancheConfig.CDORewards.name,account,null,trancheConfig.functions.stakedBalance),\n          ]);\n\n          // console.log(protocol,token,tranche,trancheConfig.name,account,this.BNify(trancheTokenBalance).toFixed(5),this.BNify(trancheStakedBalance).toFixed(5));\n\n          if (trancheUserInfo && trancheUserInfo.transactions){\n            portfolio.transactions = [...portfolio.transactions, ...trancheUserInfo.transactions];\n          }\n\n          if ((trancheTokenBalance && this.BNify(trancheTokenBalance).gt(0)) || (trancheStakedBalance && this.BNify(trancheStakedBalance).gt(0))) {\n            trancheTokenBalance = this.fixTokenDecimals(trancheTokenBalance,trancheConfig.decimals);\n            trancheStakedBalance = this.fixTokenDecimals(trancheStakedBalance,trancheConfig.decimals);\n            trancheTokenBalance = trancheTokenBalance.plus(trancheStakedBalance);\n\n            // console.log(protocol,token,tranche,'trancheTokenBalance',trancheTokenBalance.toFixed(5));\n\n            if (this.BNify(trancheTokenBalance).gt(0)) {\n              const [\n                tranchePrice,\n                tranchePool\n              ] = await Promise.all([\n                this.loadTrancheFieldRaw('tranchePrice', {}, protocol, token, tranche, tokenConfig, trancheConfig, account),\n                this.loadTrancheFieldRaw('tranchePoolConverted', {}, protocol, token, tranche, tokenConfig, trancheConfig, account)\n              ]);\n\n              if (!this.BNify(tranchePrice).isNaN() && !this.BNify(tranchePool).isNaN()) {\n                const tokenBalance = trancheTokenBalance.times(tranchePrice);\n                const [\n                  tokenBalanceConverted,\n                  trancheEarnings,\n                  trancheApy\n                ] = await Promise.all([\n                  this.convertTrancheTokenBalance(tokenBalance,tokenConfig),\n                  this.convertTrancheTokenBalance(tokenBalance.minus(trancheUserInfo.amountDeposited),tokenConfig),\n                  this.loadTrancheFieldRaw('trancheApy', {}, protocol, token, tranche, tokenConfig, trancheConfig, account)\n                ])\n\n                const poolShare = tokenBalanceConverted.div(tranchePool);\n                const amountDeposited = trancheUserInfo.amountDepositedConverted;\n\n                // console.log(protocol,token,tranche,'trancheTokenBalance',trancheTokenBalance.toFixed(5),'trancheStakedBalance',trancheStakedBalance.toFixed(5),'tranchePrice',tranchePrice.toFixed(5),'tokenBalance',tokenBalance.toFixed(5),'amountDeposited',trancheUserInfo.amountDeposited.toFixed(5),'tokenBalanceConverted',tokenBalanceConverted.toFixed(5),'amountDepositedConverted',amountDeposited.toFixed(5),'trancheEarnings',trancheEarnings.toFixed(5));\n\n                portfolio.tranchesBalance.push({\n                  token,\n                  tranche,\n                  protocol,\n                  poolShare,\n                  trancheApy,\n                  tranchePrice,\n                  trancheEarnings,\n                  amountDeposited,\n                  trancheTokenBalance,\n                  trancheStakedBalance,\n                  tokenBalance:tokenBalanceConverted\n                });\n\n                // console.log(protocol,token,tranche,amountDeposited.toFixed(),tokenBalance.toFixed(),trancheEarnings.toFixed());\n\n                // Increment total balance\n                portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalanceConverted);\n              }\n            }\n          }\n        });\n      });\n    });\n\n    let avgAPY = this.BNify(0);\n    let totalBalance = this.BNify(0);\n    let totalEarnings = this.BNify(0);\n    let totalAmountLent = this.BNify(0);\n    let totalEarningsPerc = this.BNify(0);\n\n    // Calculate aggregated data\n    portfolio.tranchesBalance.forEach(trancheInfo => {\n      const trancheApy = this.BNify(trancheInfo.trancheApy);\n      const trancheWeight = trancheInfo.tokenBalance.div(portfolio.totalBalance);\n\n      // Add tranche weight\n      trancheInfo.trancheWeight = trancheWeight;\n\n      if (trancheInfo.trancheEarnings) {\n        totalEarnings = totalEarnings.plus(trancheInfo.trancheEarnings);\n      }\n\n      if (trancheApy) {\n        avgAPY = avgAPY.plus(trancheApy.times(trancheWeight));\n      }\n\n      if (trancheInfo.amountDeposited) {\n        totalAmountLent = totalAmountLent.plus(trancheInfo.amountDeposited);\n        // console.log(trancheInfo.protocol,trancheInfo.token,trancheInfo.tranche,trancheInfo.amountDeposited.toFixed(5),totalAmountLent.toFixed(5));\n      }\n\n      if (trancheInfo.tokenBalance){\n        totalBalance = totalBalance.plus(trancheInfo.tokenBalance);\n      }\n    });\n\n    if (totalAmountLent.gt(0)) {\n      totalEarningsPerc = totalEarnings.div(totalAmountLent).times(100);\n    }\n\n    portfolio.avgAPY = avgAPY;\n    portfolio.totalBalance = totalBalance;\n    portfolio.totalEarnings = totalEarnings;\n    portfolio.totalAmountLent = totalAmountLent;\n    portfolio.totalEarningsPerc = totalEarningsPerc;\n\n    // console.log('portfolio',portfolio);\n\n    return portfolio;\n  }\n  getAccountPortfolio = async (availableTokens = null, account = null) => {\n    const portfolio = {\n      tokensBalance: {},\n      tokensToMigrate: {},\n      avgAPY: this.BNify(0),\n      totalBalance: this.BNify(0),\n      totalEarnings: this.BNify(0),\n      totalAmountLent: this.BNify(0),\n      totalEarningsPerc: this.BNify(0),\n      totalBalanceConverted: this.BNify(0)\n    };\n\n    availableTokens = availableTokens ? availableTokens : this.props.availableTokens;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTokens) {\n      return portfolio;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [\n        {\n          migrationEnabled,\n          oldContractBalanceFormatted\n        },\n        idleTokenBalance\n      ] = await Promise.all([\n        this.checkMigration(tokenConfig, this.props.account),\n        this.getTokenBalance(tokenConfig.idle.token, account)\n      ]);\n\n      if (migrationEnabled) {\n        const tokenKey = this.props.selectedStrategy ? token : tokenConfig.idle.token;\n        portfolio.tokensToMigrate[tokenKey] = {\n          token,\n          tokenConfig,\n          oldContractBalanceFormatted,\n          strategy: this.props.selectedStrategy\n        };\n      }\n\n      if (idleTokenBalance) {\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = idleTokenBalance.times(tokenPrice);\n        const tokenBalanceConverted = await this.convertTokenBalance(tokenBalance, token, tokenConfig, isRisk);\n\n        if (!tokenPrice.isNaN() && !tokenBalance.isNaN()) {\n          portfolio.tokensBalance[token] = {\n            tokenPrice,\n            tokenBalance,\n            idleTokenBalance,\n            tokenBalanceConverted\n          };\n\n          // Increment total balance\n          portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalance);\n          portfolio.totalBalanceConverted = portfolio.totalBalanceConverted.plus(tokenBalanceConverted);\n        }\n      }\n    });\n\n    const orderedTokensBalance = {};\n    Object.keys(availableTokens).forEach(token => {\n      if (portfolio.tokensBalance[token]) {\n        orderedTokensBalance[token] = portfolio.tokensBalance[token];\n      }\n    });\n\n    portfolio.tokensBalance = orderedTokensBalance;\n\n    const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => (this.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0)));\n\n    let avgAPY = this.BNify(0);\n    let totalEarnings = this.BNify(0);\n    let totalAmountLent = this.BNify(0);\n    let totalEarningsPerc = this.BNify(0);\n    // const amountLents = await this.getAmountLent(depositedTokens,this.props.account);\n\n    await this.asyncForEach(depositedTokens, async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [\n        tokenAprs,\n        amountDeposited\n      ] = await Promise.all([\n        this.getTokenAprs(tokenConfig),\n        this.getAmountDeposited(tokenConfig, account)\n      ]);\n\n      const tokenBalanceConverted = portfolio.tokensBalance[token].tokenBalanceConverted;\n\n      const tokenAPY = this.BNify(tokenAprs.avgApy);\n      const tokenWeight = tokenBalanceConverted.div(portfolio.totalBalanceConverted);\n      const amountLentToken = await this.convertTokenBalance(amountDeposited, token, tokenConfig, isRisk);\n      const tokenEarnings = tokenBalanceConverted.minus(amountLentToken);\n\n      if (tokenEarnings) {\n        totalEarnings = totalEarnings.plus(tokenEarnings);\n      }\n\n      if (tokenAPY) {\n        avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n      }\n\n      if (amountLentToken) {\n        totalAmountLent = totalAmountLent.plus(amountLentToken);\n      }\n\n      // console.log(token,amountLentToken.toFixed(),tokenEarnings.toFixed(),tokenBalanceConverted.toFixed());\n    });\n\n    if (totalAmountLent.gt(0)) {\n      totalEarningsPerc = totalEarnings.div(totalAmountLent).times(100);\n    }\n\n    portfolio.avgAPY = avgAPY;\n    portfolio.totalEarnings = totalEarnings;\n    portfolio.totalAmountLent = totalAmountLent;\n    portfolio.totalEarningsPerc = totalEarningsPerc;\n    portfolio.totalBalance = totalAmountLent.plus(totalEarnings);\n\n    // debugger;\n\n    return portfolio;\n  }\n  getCurrentWeb3 = () => {\n    const requiredNetwork = this.getRequiredNetwork();\n    const networkConfig = this.getGlobalConfig(['network', 'availableNetworks', requiredNetwork.id]);\n    const provider = networkConfig ? networkConfig.provider : 'infura';\n    const web3RpcKey = this.getGlobalConfig(['network', 'providers', provider, 'key']);\n    const web3Rpc = this.getGlobalConfig(['network', 'providers', provider, 'rpc', requiredNetwork.id]) + web3RpcKey;\n\n    let currentWeb3 = null;\n    if (window.ethereum) {\n      currentWeb3 = new Web3(window.ethereum);\n    } else if (window.web3) {\n      currentWeb3 = new Web3(window.web3);\n    } else {\n      currentWeb3 = new Web3(new Web3.providers.HttpProvider(web3Rpc));\n    }\n\n    return currentWeb3;\n  }\n  getCurveAvgSlippage = async (enabledTokens = [], account = null, fixDecimals = true) => {\n    account = account ? account : this.props.account;\n\n    if (!account) {\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    let processedTxs = {};\n    const processedHashes = {};\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account, 0, 'latest', enabledTokens);\n\n    if (curveTxs && curveTxs.length) {\n\n      curveTxs.forEach((tx, index) => {\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice) {\n          return false;\n        }\n\n        const tokenAmount = this.BNify(tx.tokenAmount);\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        switch (tx.action) {\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn') {\n              if (index > 0 && curveTokensBalance.gt(0)) {\n                return;\n              }\n            }\n\n            if (!processedTxs[tx.hash]) {\n              processedTxs[tx.hash] = {\n                price: null,\n                received: null,\n                slippage: null,\n                deposited: this.BNify(0),\n              };\n            }\n\n            processedTxs[tx.hash].deposited = processedTxs[tx.hash].deposited.plus(tokenAmount);\n            if (processedTxs[tx.hash].received === null) {\n              processedTxs[tx.hash].price = curveTokenPrice;\n              processedTxs[tx.hash].received = curveTokens.times(curveTokenPrice);\n            }\n\n            // this.customLog('getCurveAvgSlippage',tx.action,tx.hash,tx.blockNumber,curveTokens.toFixed(6),curveTokenPrice.toFixed(6),processedTxs[tx.hash].deposited.toFixed(6),processedTxs[tx.hash].received.toFixed(6));\n            break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n            break;\n          default:\n            break;\n        }\n\n        // Update curveTokens balance\n        if (!processedHashes[tx.hash]) {\n          curveTokensBalance = curveTokensBalance.plus(curveTokens);\n          if (curveTokensBalance.lte(0)) {\n            curveTokensBalance = this.BNify(0);\n\n            // Reset processed transactions\n            // processedTxs = {};\n          }\n          processedHashes[tx.hash] = true;\n        }\n      });\n    }\n\n    // this.customLog('processedTxs',processedTxs);\n\n    let avgSlippage = this.BNify(0);\n    let totalDeposited = this.BNify(0);\n    Object.values(processedTxs).forEach(tx => {\n      const slippage = tx.received.div(tx.deposited).minus(1);\n      avgSlippage = avgSlippage.plus(slippage.times(tx.deposited));\n      totalDeposited = totalDeposited.plus(tx.deposited);\n    });\n\n    avgSlippage = avgSlippage.div(totalDeposited).times(-1);\n\n    // debugger;\n    // this.customLog('avgSlippage',avgSlippage.toString());\n\n    return avgSlippage;\n  }\n  getCurveAvgBuyPrice = async (enabledTokens = [], account = null) => {\n    account = account ? account : this.props.account;\n\n    if (!account) {\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const processedTxs = {};\n    let avgBuyPrice = this.BNify(0);\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account, 0, 'latest', enabledTokens);\n\n    // this.customLog('curveTxs',curveTxs);\n\n    if (curveTxs && curveTxs.length) {\n\n      curveTxs.forEach((tx, index) => {\n\n        if (!processedTxs[tx.hash]) {\n          processedTxs[tx.hash] = [];\n        }\n\n        if (processedTxs[tx.hash].includes(tx.action)) {\n          return;\n        }\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice) {\n          return false;\n        }\n\n        const prevAvgBuyPrice = avgBuyPrice;\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        // Deposited\n        switch (tx.action) {\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn') {\n              if (index > 0 && curveTokensBalance.gt(0)) {\n                return;\n              }\n            }\n            avgBuyPrice = curveTokens.times(curveTokenPrice).plus(prevAvgBuyPrice.times(curveTokensBalance)).div(curveTokensBalance.plus(curveTokens));\n            break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n            // case 'CurveTransferOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n            break;\n          default:\n            break;\n        }\n\n        // Update curveTokens balance\n        curveTokensBalance = curveTokensBalance.plus(curveTokens);\n        if (curveTokensBalance.lte(0)) {\n          avgBuyPrice = this.BNify(0);\n          curveTokensBalance = this.BNify(0);\n        }\n\n        processedTxs[tx.hash].push(tx.action);\n\n        // this.customLog('getCurveAvgBuyPrice',tx.action,tx.hash,tx.blockNumber,curveTokens.toString(),curveTokenPrice.toString(),curveTokensBalance.toString(),avgBuyPrice.toString());\n      });\n    }\n\n    // this.customLog('avgCurveBuyPrice',avgBuyPrice.toString());\n\n    return avgBuyPrice;\n  }\n  getAvgBuyPrice = async (enabledTokens = [], account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens) {\n      return [];\n    }\n\n    const output = {};\n    const etherscanTxs = await this.getEtherscanTxs(account, 0, 'latest', enabledTokens);\n\n    enabledTokens.forEach(selectedToken => {\n\n      output[selectedToken] = [];\n      let avgBuyPrice = this.BNify(0);\n\n      let idleTokensBalance = this.BNify(0);\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n\n      if (filteredTxs && filteredTxs.length) {\n\n        filteredTxs.forEach((tx, index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.idleTokens || !tx.tokenPrice) {\n            return false;\n          }\n\n          const prevAvgBuyPrice = avgBuyPrice;\n          let idleTokens = this.BNify(tx.idleTokens);\n          const tokenPrice = this.BNify(tx.tokenPrice);\n\n          // Deposited\n          switch (tx.action) {\n            case 'Deposit':\n            case 'Receive':\n            case 'Swap':\n            case 'Migrate':\n            case 'CurveOut':\n              avgBuyPrice = idleTokens.times(tokenPrice).plus(prevAvgBuyPrice.times(idleTokensBalance)).div(idleTokensBalance.plus(idleTokens));\n              break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              idleTokens = idleTokens.times(this.BNify(-1));\n              break;\n            default:\n              break;\n          }\n\n          // Update idleTokens balance\n          idleTokensBalance = idleTokensBalance.plus(idleTokens);\n          if (idleTokensBalance.lte(0)) {\n            avgBuyPrice = this.BNify(0);\n            idleTokensBalance = this.BNify(0);\n          }\n\n        });\n      }\n\n      // Add token Data\n      output[selectedToken] = avgBuyPrice;\n    });\n\n    return output;\n  }\n  getFirstDepositTx = async (enabledTokens = [], account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens) {\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account, 0, 'latest', enabledTokens);\n\n    const deposits = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      let firstDepositTx = null;\n      deposits[selectedToken] = firstDepositTx;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length) {\n\n        filteredTxs.forEach((tx, index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount) {\n            return false;\n          }\n\n          switch (tx.action) {\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n              amountLent = amountLent.plus(tx.tokenAmount);\n              if (!firstDepositTx) {\n                firstDepositTx = tx;\n              }\n              break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n              break;\n            default:\n              break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)) {\n            amountLent = this.BNify(0);\n            firstDepositTx = null;\n          }\n        });\n      }\n\n      // Add token Data\n      deposits[selectedToken] = firstDepositTx;\n    });\n\n    return deposits;\n  }\n  getDashboardSectionUrl = (section, env = null) => {\n    const envUrl = this.getGlobalConfig(['environments', env, 'url']);\n    const baseUrl = env && envUrl ? envUrl : window.location.origin;\n    return `${baseUrl}/#${this.getGlobalConfig(['dashboard', 'baseRoute'])}/${section}`;\n  }\n  asyncTimeout = (ms) => {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n  getDepositTimestamp = async (enabledTokens = [], account) => {\n    const firstDepositTxs = await this.getFirstDepositTx(enabledTokens, account);\n    if (firstDepositTxs) {\n      return Object.keys(firstDepositTxs).reduce((acc, token) => {\n        if (firstDepositTxs[token]) {\n          acc[token] = firstDepositTxs[token].timeStamp;\n        }\n        return acc;\n      }, {});\n    }\n    return null;\n  }\n\n  getTrancheStakingRewardsDistributions = async (tokenConfig,trancheConfig) => {\n    const stakingDistributions = {};\n    const stakingRewards = await this.loadTrancheFieldRaw('stakingRewards',{},tokenConfig.protocol,tokenConfig.token,trancheConfig.tranche,tokenConfig,trancheConfig);\n    await this.asyncForEach(Object.keys(stakingRewards),async (token) => {\n      const eventFilters = {\n        from: tokenConfig.CDO.address,\n        to: trancheConfig.CDORewards.address\n      }\n      const transfers = await this.getContractEvents(token, 'Transfer', { fromBlock: tokenConfig.blockNumber, toBlock: 'latest', filter: eventFilters });\n\n      if (transfers && transfers.length>0){\n        stakingDistributions[token] = transfers;\n      }\n    });\n\n    return stakingDistributions;\n  }\n  getTrancheHarvests = async (tokenConfig,trancheConfig) => {\n    const [\n      stakingRewardsDistributions,\n      autoFarming\n    ] = await Promise.all([\n      this.getTrancheStakingRewardsDistributions(tokenConfig,trancheConfig),\n      this.loadTrancheFieldRaw('autoFarming',{},tokenConfig.protocol,tokenConfig.token,trancheConfig.tranche,tokenConfig,trancheConfig)\n    ])\n\n    const harvestsList = stakingRewardsDistributions || {};\n    \n    await this.asyncForEach(Object.keys(autoFarming),async (token) => {\n      const eventFilters = {\n        to: tokenConfig.CDO.address\n      }\n      const transfers = await this.getContractEvents(token, 'Transfer', { fromBlock: tokenConfig.blockNumber, toBlock: 'latest', filter: eventFilters });\n\n      if (transfers && transfers.length > 0) {\n        harvestsList[token] = transfers;\n      }\n    });\n\n    // console.log('getTrancheHarvests',stakingRewards,autoFarming,harvestsList);\n    return harvestsList;\n  }\n  getTrancheRewardTokensInfo = async (tokenConfig, trancheConfig) => {\n    const stakingRewards = await this.loadTrancheFieldRaw('stakingRewards', {}, tokenConfig.protocol, tokenConfig.token, trancheConfig.tranche, tokenConfig, trancheConfig);\n    const tokensDistribution = {};\n    await this.asyncForEach(Object.keys(stakingRewards), async (token) => {\n\n      let firstHarvest = null;\n      let latestHarvest = null;\n      let tokenApr = this.BNify(0);\n      let tokenApy = this.BNify(0);\n      let lastAmount = this.BNify(0);\n      let totalAmount = this.BNify(0);\n      let distributionSpeedUnit = null;\n      let tokensPerDay = this.BNify(0);\n      let tokensPerYear = this.BNify(0);\n      let tokensPerBlock = this.BNify(0);\n      let tranchePoolSize = this.BNify(0);\n      let tokensPerSecond = this.BNify(0);\n      let distributionSpeed = this.BNify(0);\n      let convertedTokensPerYear = this.BNify(0);\n\n      const govTokenConfig = this.getGlobalConfig(['stats', 'tokens', token]);\n      const DAITokenConfig = {\n        address: this.getContractByName('DAI')._address\n      };\n      const conversionRate = await this.getUniswapConversionRate(DAITokenConfig, govTokenConfig);\n\n      const rewardsRateMethod = trancheConfig.functions.rewardsRate;\n      if (rewardsRateMethod){\n        [\n          tokensPerSecond,\n          totalAmount,\n          tranchePoolSize\n        ] = await Promise.all([\n          this.genericContractCall(trancheConfig.CDORewards.name,rewardsRateMethod),\n          this.genericContractCall(token,'balanceOf',[trancheConfig.CDORewards.address]),\n          this.loadTrancheFieldRaw('tranchePool', {}, tokenConfig.protocol, tokenConfig.token, trancheConfig.tranche, tokenConfig, trancheConfig)\n        ]);\n\n        tranchePoolSize = await this.convertTrancheTokenBalance(tranchePoolSize,tokenConfig);\n        tokensPerSecond = this.fixTokenDecimals(tokensPerSecond,trancheConfig.CDORewards.decimals);\n\n        tokensPerDay = this.BNify(tokensPerSecond).times(86400);\n        tokensPerYear = this.BNify(tokensPerSecond).times(this.getGlobalConfig(['network', 'secondsPerYear']));\n        tokensPerBlock = tokensPerYear.div(this.getGlobalConfig(['network', 'blocksPerYear']));\n        convertedTokensPerYear = tokensPerYear.times(conversionRate);\n        tokenApr = convertedTokensPerYear.div(tranchePoolSize);\n        tokenApy = this.apr2apy(tokenApr).times(100);\n\n        distributionSpeed = tokensPerDay;\n        distributionSpeedUnit = '/day';\n\n        tokensDistribution[token] = {\n          lastAmount,\n          totalAmount,\n          tokensPerDay,\n          firstHarvest,\n          apr: tokenApr,\n          apy: tokenApy,\n          tokensPerYear,\n          latestHarvest,\n          tokensPerBlock,\n          tokensPerSecond,\n          distributionSpeed,\n          distributionSpeedUnit,\n          convertedTokensPerYear\n        };\n\n        // console.log('getTrancheRewardTokensInfo',tokenConfig.protocol, tokenConfig.token, trancheConfig.tranche, tokensDistribution);\n      } else {\n        const eventFilters = {\n          from: tokenConfig.CDO.address,\n          to: trancheConfig.CDORewards.address\n        }\n        const transfers = await this.getContractEvents(token, 'Transfer', { fromBlock: tokenConfig.blockNumber, toBlock: 'latest', filter: eventFilters });\n\n        if (transfers && transfers.length > 0) {\n          const firstHarvest = transfers.length ? transfers[0] : null;\n          const latestHarvest = transfers[transfers.length - 1];\n          const firstBlock = firstHarvest ? firstHarvest.blockNumber : tokenConfig.blockNumber;\n\n          const [\n            prevBlockInfo,\n            lastBlockInfo,\n            lastBlockPoolSize\n          ] = await Promise.all([\n            this.getBlockInfo(firstBlock),\n            this.getBlockInfo(latestHarvest.blockNumber),\n            this.genericContractCallCached(tokenConfig.CDO.name, 'getContractValue', [], {}, latestHarvest.blockNumber)\n          ]);\n\n          if (prevBlockInfo && lastBlockInfo) {\n            let poolSize = this.fixTokenDecimals(lastBlockPoolSize, tokenConfig.CDO.decimals);\n            const elapsedBlocks = latestHarvest.blockNumber - firstBlock;\n            const elapsedSeconds = lastBlockInfo.timestamp - prevBlockInfo.timestamp;\n\n            lastAmount = this.fixTokenDecimals(latestHarvest.returnValues.value, govTokenConfig.decimals);\n            totalAmount = transfers.reduce((total, t) => {\n              total = total.plus(this.fixTokenDecimals(t.returnValues.value, govTokenConfig.decimals));\n              return total;\n            }, this.BNify(0));\n\n            poolSize = await this.convertTrancheTokenBalance(poolSize,tokenConfig);\n\n            tokensPerBlock = totalAmount.div(elapsedBlocks);\n            tokensPerSecond = totalAmount.div(elapsedSeconds);\n            tokensPerDay = tokensPerSecond.times(86400);\n            tokensPerYear = tokensPerSecond.times(this.getGlobalConfig(['network', 'secondsPerYear']));\n            convertedTokensPerYear = tokensPerYear.times(conversionRate);\n            tokenApr = convertedTokensPerYear.div(poolSize);\n            tokenApy = this.apr2apy(tokenApr).times(100);\n\n            distributionSpeed = lastAmount;\n            distributionSpeedUnit = ' (last harvest)';\n\n            tokensDistribution[token] = {\n              lastAmount,\n              totalAmount,\n              tokensPerDay,\n              firstHarvest,\n              apr: tokenApr,\n              apy: tokenApy,\n              tokensPerYear,\n              latestHarvest,\n              tokensPerBlock,\n              tokensPerSecond,\n              distributionSpeed,\n              distributionSpeedUnit,\n              convertedTokensPerYear\n            };\n          }\n        }\n      }\n    });\n\n    // console.log('tokensDistribution',tokensDistribution);\n\n    return tokensDistribution;\n  }\n  getTrancheUserInfo = async (tokenConfig, trancheConfig, account) => {\n    account = account || this.props.account;\n    const cachedDataKey = `amountDepositedTranche_${tokenConfig.token}_${trancheConfig.token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const defaultEventsConfig = { to: 'to', from: 'from', value: 'value' };\n    const underlyingEventsConfig = this.getGlobalConfig(['events', tokenConfig.token, 'fields']) || defaultEventsConfig;\n\n    const underlyingEventsFilters = {};\n    underlyingEventsFilters[underlyingEventsConfig.to] = [this.props.account, tokenConfig.CDO.address];\n    underlyingEventsFilters[underlyingEventsConfig.from] = [this.props.account, tokenConfig.CDO.address];\n\n    let [\n      underlying_transfers,\n      trancheToken_transfers\n    ] = await Promise.all([\n      this.getContractEvents(tokenConfig.token, 'Transfer', { fromBlock: trancheConfig.blockNumber, toBlock: 'latest', filter: underlyingEventsFilters }),\n      this.getContractEvents(trancheConfig.name, 'Transfer', { fromBlock: trancheConfig.blockNumber, toBlock: 'latest', filter: { from: ['0x0000000000000000000000000000000000000000', this.props.account], to: ['0x0000000000000000000000000000000000000000', this.props.account] } })\n    ]);\n\n    // console.log('getAmountDepositedTranche',trancheConfig.name,'underlying_transfers',underlying_transfers,'trancheToken_transfers',trancheToken_transfers);\n\n    const transactions = [];\n    let firstDepositTx = null;\n    let avgBuyPrice = this.BNify(0);\n    let amountDeposited = this.BNify(0);\n    let totalAmountDeposited = this.BNify(0);\n    let amountDepositedConverted = this.BNify(0);\n\n    // Order token transfers\n    underlying_transfers = underlying_transfers.sort((a, b) => (parseInt(a.blockNumber) > parseInt(b.blockNumber) ? 1 : -1));\n    trancheToken_transfers = trancheToken_transfers.sort((a, b) => (parseInt(a.blockNumber) > parseInt(b.blockNumber) ? 1 : -1));\n\n    const blocksInfo = {};\n\n    await this.asyncForEach(trancheToken_transfers, async (trancheTokenTransferEvent) => {\n      const tokenTransferEvent = underlying_transfers.find(t => t.transactionHash.toLowerCase() === trancheTokenTransferEvent.transactionHash.toLowerCase());\n      if (!tokenTransferEvent) {\n        return;\n      }\n      const [\n        blockInfo,\n        tokenConversionRate\n      ] = await Promise.all([\n        this.getBlockInfo(tokenTransferEvent.blockNumber),\n        this.convertTrancheTokenBalance(1,tokenConfig,tokenTransferEvent.blockNumber)\n      ]);\n\n      blocksInfo[tokenTransferEvent.blockNumber] = {\n        blockInfo,\n        tokenConversionRate\n      };\n    });\n\n\n    trancheToken_transfers.forEach( trancheTokenTransferEvent => {\n      const tokenTransferEvent = underlying_transfers.find(t => t.transactionHash.toLowerCase() === trancheTokenTransferEvent.transactionHash.toLowerCase());\n\n      // Skip if no tranche token transfer event found\n      if (!tokenTransferEvent) {\n        return;\n      }\n\n      const tokenAmount = this.fixTokenDecimals(tokenTransferEvent.returnValues[underlyingEventsConfig.value], tokenConfig.decimals);\n      const trancheTokenAmount = this.fixTokenDecimals(trancheTokenTransferEvent.returnValues.value, trancheConfig.decimals);\n\n      // console.log('tranchePrice',trancheConfig.token,tokenAmount.toFixed(),trancheTokenAmount.toFixed(),tranchePrice.toFixed());\n      const tranchePrice = tokenAmount.div(trancheTokenAmount);\n      const blockInfo = blocksInfo[tokenTransferEvent.blockNumber].blockInfo;\n      const hashKey = `${trancheConfig.token}_${tokenTransferEvent.transactionHash}`;\n      const protocolConfig = this.getGlobalConfig(['stats', 'protocols', tokenConfig.protocol]);\n      const protocolIcon = protocolConfig && protocolConfig.icon ? `images/protocols/${protocolConfig.icon}` : `images/protocols/${tokenConfig.protocol}.svg`;\n\n      const tx = {\n        hashKey,\n        action: null,\n        tokenAmount,\n        tranchePrice,\n        protocolIcon,\n        value: tokenAmount,\n        status: 'Completed',\n        token: tokenConfig.token,\n        tranche: trancheConfig.tranche,\n        protocol: protocolConfig.label,\n        tokenSymbol: tokenConfig.token,\n        trancheTokens: trancheTokenAmount,\n        hash: tokenTransferEvent.transactionHash,\n        blockNumber: tokenTransferEvent.blockNumber,\n        timeStamp: blockInfo ? blockInfo.timestamp : null,\n      };\n\n      const tokenAmountConverted = this.BNify(tokenAmount).times(blocksInfo[tokenTransferEvent.blockNumber].tokenConversionRate);\n\n      // Get conversion rate outside the loop\n      // await this.convertTrancheTokenBalance(tokenAmount,tokenConfig,tokenTransferEvent.blockNumber);\n\n      // Deposit\n      if (trancheTokenTransferEvent.returnValues.from.toLowerCase() === '0x0000000000000000000000000000000000000000') {\n        // Set first deposit tx\n        if (!firstDepositTx) {\n          firstDepositTx = tx;\n        }\n\n        tx.action = 'Deposit';\n        amountDeposited = amountDeposited.plus(tokenAmount);\n        totalAmountDeposited = totalAmountDeposited.plus(tokenAmount);\n        avgBuyPrice = avgBuyPrice.plus(tranchePrice.times(tokenAmount));\n        amountDepositedConverted = amountDepositedConverted.plus(tokenAmountConverted);\n\n        // console.log('Deposit',blockInfo.timestamp,trancheConfig.token,tokenAmount.toFixed(),tokenAmountConverted.toFixed(),amountDeposited.toFixed(),amountDepositedConverted.toFixed(),trancheTokenAmount.toFixed());\n        // Withdraw\n      } else if (trancheTokenTransferEvent.returnValues.to.toLowerCase() === '0x0000000000000000000000000000000000000000') {\n        tx.action = 'Withdraw';\n        amountDeposited = amountDeposited.minus(tokenAmount);\n        amountDepositedConverted = amountDepositedConverted.minus(tokenAmountConverted);\n        if (amountDeposited.lt(0)) {\n          firstDepositTx = null;\n          avgBuyPrice = this.BNify(0);\n          amountDeposited = this.BNify(0);\n          totalAmountDeposited = this.BNify(0);\n          amountDepositedConverted = this.BNify(0);\n        }\n        // console.log('Redeem',blockInfo.timestamp,trancheConfig.token,tokenAmount.toFixed(),tokenAmountConverted.toFixed(),amountDeposited.toFixed(),amountDepositedConverted.toFixed(),trancheTokenAmount.toFixed());\n      }\n\n      transactions.push(tx);\n    });\n\n    avgBuyPrice = avgBuyPrice.div(totalAmountDeposited);\n\n    // console.log(trancheConfig.token,'amountDeposited',amountDeposited.toFixed(),'avgBuyPrice',avgBuyPrice.toFixed(),'transactions',transactions);\n\n    return {\n      avgBuyPrice,\n      transactions,\n      firstDepositTx,\n      amountDeposited,\n      amountDepositedConverted\n    }\n  }\n  getTrancheUserTransactions = async (tokenConfig, trancheConfig, account) => {\n    const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig, trancheConfig, account);\n    if (trancheUserInfo) {\n      return trancheUserInfo.transactions;\n    }\n    return null;\n  }\n  getTrancheFirstDepositTx = async (tokenConfig, trancheConfig, account) => {\n    const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig, trancheConfig, account);\n    if (trancheUserInfo) {\n      return trancheUserInfo.firstDepositTx;\n    }\n    return null;\n  }\n  getAmountDepositedTranche = async (tokenConfig, trancheConfig, account) => {\n    const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig, trancheConfig, account);\n    if (trancheUserInfo) {\n      return trancheUserInfo.amountDeposited;\n    }\n    return null;\n  }\n  getAmountDeposited = async (tokenConfig, account) => {\n    const cachedDataKey = `amountDeposited_${tokenConfig.idle.token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let [tokenBalance, userAvgPrice] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token, account),\n      this.genericContractCallCached(tokenConfig.idle.token, 'userAvgPrices', [account])\n    ]);\n\n    if (tokenBalance && userAvgPrice) {\n      userAvgPrice = this.fixTokenDecimals(userAvgPrice, tokenConfig.decimals);\n      const amountDeposited = tokenBalance.times(userAvgPrice);\n      return this.setCachedDataWithLocalStorage(cachedDataKey, amountDeposited);\n    }\n\n    return null;\n  }\n  getAmountLent = async (enabledTokens = [], account) => {\n\n    account = account || this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens) {\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account, 0, 'latest', enabledTokens, false);\n\n    const amountLents = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      amountLents[selectedToken] = amountLent;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length) {\n\n        filteredTxs.forEach((tx, index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount) {\n            return false;\n          }\n\n          switch (tx.action) {\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tx.tokenAmount);\n              break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n              break;\n            default:\n              break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)) {\n            amountLent = this.BNify(0);\n          }\n        });\n      }\n\n      // Add token Data\n      amountLents[selectedToken] = amountLent;\n    });\n\n    // debugger;\n\n    return amountLents;\n  }\n  getBaseToken = () => {\n    const networkConfig = this.getCurrentNetwork();\n    return networkConfig ? networkConfig.baseToken : this.getGlobalConfig(['baseToken']);\n  }\n  getCurrentNetwork = () => {\n    const networkId = this.getCurrentNetworkId();\n    const network = this.getGlobalConfig(['network', 'availableNetworks', networkId]);\n    network.id = networkId;\n    return network;\n  }\n  getRequiredNetwork = () => {\n    const networkId = this.getRequiredNetworkId();\n    const network = this.getGlobalConfig(['network', 'availableNetworks', networkId]);\n    network.id = networkId;\n    return network;\n  }\n  getRequiredNetworkId = () => {\n    const defaultNetwork = this.getGlobalConfig(['network', 'requiredNetwork']);\n    return this.props.network && this.props.network.required ? this.props.network.required.id || defaultNetwork : defaultNetwork;\n  }\n  getCurrentNetworkId = () => {\n    const defaultNetwork = this.getGlobalConfig(['network', 'requiredNetwork']);\n    return this.props.network && this.props.network.current ? this.props.network.current.id || defaultNetwork : defaultNetwork;\n  }\n  getPolygonBridgeTxs = async (account = false, enabledTokens = []) => {\n\n    account = account ? account : this.props.account;\n\n    if (!account || !this.props.web3) {\n      return [];\n    }\n\n    const cachedDataKey = `polygonBridgeTxs_${account}_${JSON.stringify(enabledTokens)}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    account = account.toLowerCase();\n\n    let txs = [];\n    const currentNetwork = this.getRequiredNetwork();\n    const currentNetworkId = this.getRequiredNetworkId();\n    const covalentInfo = this.getGlobalConfig(['network', 'providers', 'covalent']);\n    const etherscanInfo = this.getGlobalConfig(['network', 'providers', 'etherscan']);\n    const stateSenderConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'StateSender']);\n    const erc20PredicateConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'ERC20Predicate']);\n    const etherPredicateConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'EtherPredicate']);\n    const depositManagerConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'DepositManager']);\n    const rootChainManagerConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'RootChainManager']);\n\n    const polygonNetworkId = currentNetwork.provider === 'polygon' ? currentNetworkId : this.getGlobalConfig(['network', 'providers', 'polygon', 'networkPairs', currentNetworkId]);\n    // Check if covalent is enabled for the required network\n    if (covalentInfo.enabled && covalentInfo.endpoints[polygonNetworkId]) {\n      const covalentApiUrl = covalentInfo.endpoints[polygonNetworkId];\n      const polygonAvailableTokens = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'availableTokens']);\n      const polygonEndpoint = `${covalentApiUrl}address/${account}/transactions_v2/?block-signed-at-asc=true&skip=0&key=${covalentInfo.key}`;\n\n      const ethereumNetworkId = this.getGlobalConfig(['network', 'providers', 'polygon', 'networkPairs', polygonNetworkId]);\n      const etherscanApiUrl = etherscanInfo.endpoints[ethereumNetworkId];\n      const etherscanEndpoint = `${etherscanApiUrl}?module=account&action=tokentx&address=${this.props.account}&sort=desc`;\n      const etherscanTxlistEndpoint = `${etherscanApiUrl}?module=account&action=txlist&address=${this.props.account}&sort=desc`;\n      const etherscanTxlistInternalEndpoint = `${etherscanApiUrl}?module=account&action=txlistinternal&address=${this.props.account}&sort=desc`;\n\n      const [\n        last_state_id,\n        polygonTxs,\n        etherscanTxs,\n        etherscanTxlist,\n        etherscanTxlistInternal\n      ] = await Promise.all([\n        this.getPolygonCurrentLastStateId(),\n        this.makeCachedRequest(polygonEndpoint, 120),\n        this.makeEtherscanApiRequest(etherscanEndpoint, etherscanInfo.keys, 120),\n        this.makeEtherscanApiRequest(etherscanTxlistEndpoint, etherscanInfo.keys, 120),\n        this.makeEtherscanApiRequest(etherscanTxlistInternalEndpoint, etherscanInfo.keys, 120),\n      ]);\n\n      // console.log('polygonTxs',polygonTxs);\n      // console.log('etherscanTxs',etherscanTxs);\n      // console.log('etherscanTxlist',etherscanTxlist);\n      // console.log('etherscanTxlistInternal',etherscanTxlistInternal);\n\n      const rootTokensAddresses = [];\n      const childTokensAddresses = [];\n      Object.values(polygonAvailableTokens).forEach(tokenConfig => {\n        if (tokenConfig.childToken) {\n          childTokensAddresses.push(tokenConfig.childToken.address.toLowerCase())\n        }\n        if (tokenConfig.rootToken) {\n          rootTokensAddresses.push(tokenConfig.rootToken.address.toLowerCase())\n        }\n      });\n\n      let depositTxs = [];\n\n      if (etherscanTxs && etherscanTxs.data && etherscanTxs.data.result && typeof etherscanTxs.data.result.filter === 'function') {\n        depositTxs = etherscanTxs.data.result.filter(tx => rootTokensAddresses.includes(tx.contractAddress.toLowerCase()) && [erc20PredicateConfig.address.toLowerCase(), depositManagerConfig.address.toLowerCase()].includes(tx.to.toLowerCase()) && tx.from.toLowerCase() === this.props.account.toLowerCase());\n        await this.asyncForEach(depositTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(t => t.name === tx.tokenSymbol);\n          const ethereumTx = { ...tx };\n          ethereumTx.action = 'Deposit';\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value, tokenConfig.decimals);\n          const txReceipt = await this.getTxReceipt(ethereumTx.hash, this.props.web3Infura);\n          const stateSenderLog = txReceipt ? txReceipt.logs.find(log => log.address.toLowerCase() === stateSenderConfig.address.toLowerCase()) : null;\n          const tx_state_id = stateSenderLog && this.props.web3.utils ? parseInt(this.props.web3.utils.hexToNumberString(stateSenderLog.topics[1])) : null;\n          ethereumTx.included = last_state_id && tx_state_id ? last_state_id >= tx_state_id : false;\n          txs.push(ethereumTx);\n        });\n        const exitTxs = etherscanTxs.data.result.filter(tx => rootTokensAddresses.includes(tx.contractAddress.toLowerCase()) && [erc20PredicateConfig.address.toLowerCase(), depositManagerConfig.address.toLowerCase()].includes(tx.from.toLowerCase()) && tx.to.toLowerCase() === this.props.account.toLowerCase());\n        await this.asyncForEach(exitTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(t => t.name === tx.tokenSymbol);\n          const ethereumTx = { ...tx };\n          ethereumTx.action = 'Exit';\n          ethereumTx.included = true;\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value, tokenConfig.decimals);\n          txs.push(ethereumTx);\n        });\n      }\n\n      const depositTxsHashes = depositTxs.map(tx => tx.hash.toLowerCase());\n      const depositETHInputRexExp = new RegExp(this.props.account.replace('0x', '').toLowerCase() + '$');\n      if (etherscanTxlist && etherscanTxlist.data && etherscanTxlist.data.result && typeof etherscanTxlist.data.result.filter === 'function') {\n        const depositETHTxs = etherscanTxlist.data.result.filter(tx => !depositTxsHashes.includes(tx.hash.toLowerCase()) && tx.to.toLowerCase() === rootChainManagerConfig.address.toLowerCase() && tx.input.toLowerCase().match(depositETHInputRexExp) && tx.from.toLowerCase() === this.props.account.toLowerCase());\n        await this.asyncForEach(depositETHTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(t => t.name === 'WETH');\n          const ethereumTx = { ...tx };\n          ethereumTx.action = 'Deposit';\n          ethereumTx.tokenSymbol = 'WETH';\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value, tokenConfig.decimals);\n          const txReceipt = await this.getTxReceipt(ethereumTx.hash, this.props.web3Infura);\n          const stateSenderLog = txReceipt ? txReceipt.logs.find(log => log.address.toLowerCase() === stateSenderConfig.address.toLowerCase()) : null;\n          const tx_state_id = stateSenderLog && this.props.web3.utils ? parseInt(this.props.web3.utils.hexToNumberString(stateSenderLog.topics[1])) : null;\n          ethereumTx.included = last_state_id && tx_state_id ? last_state_id >= tx_state_id : false;\n          txs.push(ethereumTx);\n        });\n      }\n\n      if (etherscanTxlistInternal && etherscanTxlistInternal.data && etherscanTxlistInternal.data.result && typeof etherscanTxlistInternal.data.result.filter === 'function') {\n        const exitETHTxs = etherscanTxlistInternal.data.result.filter(tx => !depositTxsHashes.includes(tx.hash.toLowerCase()) && tx.from.toLowerCase() === etherPredicateConfig.address.toLowerCase() && !tx.input.toLowerCase().match(depositETHInputRexExp) && tx.to.toLowerCase() === this.props.account.toLowerCase());\n        await this.asyncForEach(exitETHTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(t => t.name === 'WETH');\n          const ethereumTx = { ...tx };\n          ethereumTx.action = 'Exit';\n          ethereumTx.included = true;\n          ethereumTx.tokenSymbol = 'WETH';\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.timeStamp = parseInt(tx.timeStamp);\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value, tokenConfig.decimals);\n          txs.push(ethereumTx);\n        });\n      }\n\n      if (polygonTxs && polygonTxs.data && polygonTxs.data.data && polygonTxs.data.data.items && Object.values(polygonTxs.data.data.items).length) {\n        const filteredTxs = polygonTxs.data.data.items.filter(tx => tx.to_address && childTokensAddresses.includes(tx.to_address.toLowerCase()));\n        // console.log('polygonTxs',polygonTxs,filteredTxs);\n        await this.asyncForEach(filteredTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(tokenConfig => (tokenConfig.childToken && tx.to_address && tokenConfig.childToken.address.toLowerCase() === tx.to_address.toLowerCase()));\n          if (!tokenConfig || !tokenConfig.childToken) {\n            return;\n          }\n          tokenConfig.address = tokenConfig.childToken.address;\n          if (!enabledTokens || !enabledTokens.length || enabledTokens.includes(tokenConfig.token)) {\n            const polygonTx = this.normalizePolygonTx(tx, tokenConfig);\n            // console.log('polygonTx',polygonTx);\n            if (polygonTx.action === 'Withdraw') {\n              const tx_state_id = this.props.web3.utils ? parseInt(this.props.web3.utils.hexToNumberString(polygonTx.logs[polygonTx.logs.length - 1].topics[1])) : 0;\n              polygonTx.exited = false;\n              polygonTx.networkId = polygonNetworkId;\n              polygonTx.bridgeType = tokenConfig.bridgeType;\n              polygonTx.included = last_state_id && tx_state_id ? last_state_id >= tx_state_id : false;\n              try {\n                await this.props.maticPOSClient.exitERC20(polygonTx.hash, { from: this.props.account, encodeAbi: true });\n              } catch (error) {\n                if (error.toString().match('EXIT_ALREADY_PROCESSED')) {\n                  polygonTx.exited = true;\n                }\n              }\n              txs.push(polygonTx);\n            }\n          }\n        });\n        // debugger;\n      }\n    }\n\n    txs = txs.sort((a, b) => (parseInt(a.timeStamp) < parseInt(b.timeStamp) ? 1 : -1));\n\n    // console.log('getPolygonBridgeTxs',cachedDataKey,txs);\n\n    return this.setCachedData(cachedDataKey, txs, 120);\n  }\n  getPolygonBaseTxs = async (account = false, enabledTokens = [], debug = false) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length) {\n      return [];\n    }\n\n    account = account.toLowerCase();\n\n    let results = [];\n    let baseTxs = null;\n    let baseEndpoint = null;\n    const requiredNetwork = this.getRequiredNetworkId();\n    // const selectedStrategy = this.props.selectedStrategy;\n    const covalentInfo = this.getGlobalConfig(['network', 'providers', 'covalent']);\n\n    // Check if covalent is enabled for the required network\n    if (covalentInfo.enabled && covalentInfo.endpoints[requiredNetwork]) {\n      const covalentApiUrl = covalentInfo.endpoints[requiredNetwork];\n\n      // Get base endpoint cached transactions\n      baseEndpoint = `${covalentApiUrl}address/${account}/transactions_v2/?block-signed-at-asc=true&key=${covalentInfo.key}`;\n      baseTxs = this.getCachedRequest(baseEndpoint);\n\n      // Check if the latest blockNumber is actually the latest one\n      if (baseTxs && baseTxs.data && baseTxs.data.data && baseTxs.data.data.items && Object.values(baseTxs.data.data.items).length) {\n\n        const cachedRows = Object.values(baseTxs.data.data.items).length;\n        const lastCachedTx = Object.values(baseTxs.data.data.items).pop();\n        const lastCachedBlockNumber = lastCachedTx && lastCachedTx.block_height ? parseInt(lastCachedTx.block_height) + 1 : 0;\n\n        const covalentEndpointLastBlock = `${covalentApiUrl}address/${account}/transactions_v2/?block-signed-at-asc=true&skip=${cachedRows}`;\n        let latestTxs = await this.makeCachedRequest(covalentEndpointLastBlock, 15);\n\n        if (latestTxs && latestTxs.data.data.items && latestTxs.data.data.items.length) {\n          latestTxs = await this.filterPolygonTxs(latestTxs.data.data.items, enabledTokens);\n          // latestTxs = await this.filterEthereumTxs(latestTxs,enabledTokens,true,false);\n\n          if (latestTxs && Object.values(latestTxs).length) {\n\n            const latestBlockNumbers = Object.values(latestTxs).map(lastTx => (parseInt(lastTx.block_height)));\n            const lastRealBlockNumber = Math.max(...latestBlockNumbers);\n\n            // If real tx blockNumber differs from last blockNumber\n            if (lastRealBlockNumber >= lastCachedBlockNumber) {\n              // Merge latest Txs with baseTxs\n              Object.values(latestTxs).forEach((tx) => {\n                const txFound = Object.keys(baseTxs.data.data.items).includes(tx.tx_hash);\n                if (!txFound) {\n                  baseTxs.data.data.items[tx.tx_hash] = tx;\n                }\n              });\n\n              // Save covalent txs\n              this.saveFetchedTransactions(baseEndpoint, baseTxs.data.data.items);\n            }\n          }\n        }\n      } else {\n        baseTxs = null;\n      }\n\n      let txs = baseTxs;\n\n      if (debug) {\n        console.log('DEBUG - txs', txs);\n      }\n\n      if (!txs) {\n        // Make request\n        txs = await this.makeRequest(baseEndpoint);\n\n        // console.log('makeRequest 1',account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n\n        if (!txs || !txs.data || parseInt(txs.data.status) === 0) {\n          let requestCount = 0;\n          let requestStatus = false;\n          do {\n            await this.asyncTimeout(500);\n            txs = await this.makeRequest(baseEndpoint);\n            requestCount++;\n            requestStatus = txs && txs.data ? parseInt(txs.data.status) : false;\n            // console.log('makeRequest '+(requestCount+1),account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n          } while (requestCount < 5 && !requestStatus);\n        }\n\n        // Cache request\n        if (txs && txs.data && parseInt(txs.data.status) > 0) {\n          const timestamp = parseInt(Date.now() / 1000);\n          // const cachedRequests_polygon = this.getCachedDataWithLocalStorage('cachedRequests_polygon',{});\n          const dataToCache = {\n            data: txs,\n            timestamp\n          };\n          this.addKeyToCachedDataWithLocalStorage('cachedRequests_polygon', baseEndpoint, dataToCache);\n          // this.setCachedDataWithLocalStorage('cachedRequests_polygon',cachedRequests_polygon);\n        }\n      }\n\n      if (txs && txs.data && txs.data.data && txs.data.data.items) {\n        results = txs.data.data.items;\n      } else {\n        return [];\n      }\n    }\n\n    return {\n      results,\n      baseTxs,\n      baseEndpoint\n    };\n  }\n  getEtherscanBaseTxs = async (account = false, firstBlockNumber = 0, endBlockNumber = 'latest', enabledTokens = [], debug = false) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length) {\n      return [];\n    }\n\n    account = account.toLowerCase();\n\n    const selectedStrategy = this.props.selectedStrategy;\n\n    // Check if firstBlockNumber is less that firstIdleBlockNumber\n    const firstIdleBlockNumber = this.getGlobalConfig(['network', 'firstBlockNumber']);\n    firstBlockNumber = Math.max(firstIdleBlockNumber, firstBlockNumber);\n\n    const requiredNetwork = this.getRequiredNetworkId();\n    const etherscanInfo = this.getGlobalConfig(['network', 'providers', 'etherscan']);\n\n    let results = [];\n    let baseTxs = null;\n    let baseEndpoint = null;\n\n    // Check if etherscan is enabled for the required network\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]) {\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n\n      // Get base endpoint cached transactions\n      baseEndpoint = `${etherscanApiUrl}?strategy=${selectedStrategy}&apikey=${etherscanInfo.keys[0]}&module=account&action=tokentx&address=${account}&startblock=${firstIdleBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n      baseTxs = this.getCachedRequest(baseEndpoint);\n\n      if (debug) {\n        console.log('DEBUG - CACHED - baseTxs', baseTxs);\n      }\n\n      // Check if the latest blockNumber is actually the latest one\n      if (baseTxs && baseTxs.data.result && Object.values(baseTxs.data.result).length) {\n\n        const lastCachedTx = Object.values(baseTxs.data.result).pop();\n        const lastCachedBlockNumber = lastCachedTx && lastCachedTx.blockNumber ? parseInt(lastCachedTx.blockNumber) + 1 : firstBlockNumber;\n\n        const etherscanEndpointLastBlock = `${etherscanApiUrl}?strategy=${selectedStrategy}&module=account&action=tokentx&address=${account}&startblock=${lastCachedBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n        // let latestTxs = await this.makeCachedRequest(etherscanEndpointLastBlock,15);\n        let latestTxs = await this.makeEtherscanApiRequest(etherscanEndpointLastBlock, etherscanInfo.keys, 15);\n\n        if (latestTxs && latestTxs.data.result && latestTxs.data.result.length) {\n\n          latestTxs = await this.filterEthereumTxs(latestTxs.data.result, enabledTokens, true, false);\n\n          if (latestTxs && Object.values(latestTxs).length) {\n\n            const latestBlockNumbers = Object.values(latestTxs).map(lastTx => (parseInt(lastTx.blockNumber)));\n            const lastRealBlockNumber = Math.max(...latestBlockNumbers);\n\n            // If real tx blockNumber differs from last blockNumber\n            if (lastRealBlockNumber >= lastCachedBlockNumber) {\n              // Merge latest Txs with baseTxs\n              Object.values(latestTxs).forEach((tx) => {\n                const txFound = Object.keys(baseTxs.data.result).includes(tx.hashKey);\n                if (!txFound) {\n                  baseTxs.data.result[tx.hashKey] = tx;\n                }\n              });\n\n              // Save etherscan txs\n              this.saveFetchedTransactions(baseEndpoint, baseTxs.data.result);\n            }\n          }\n        }\n      } else {\n        baseTxs = null;\n      }\n\n      let txs = baseTxs;\n\n      if (debug) {\n        console.log('DEBUG - txs', txs);\n      }\n\n      if (!txs) {\n        // Make request\n        txs = await this.makeRequest(baseEndpoint);\n\n        // console.log('makeRequest 1',account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n\n        if (!txs || !txs.data || parseInt(txs.data.status) === 0) {\n          let requestCount = 0;\n          let requestStatus = false;\n          do {\n            await this.asyncTimeout(500);\n            txs = await this.makeRequest(baseEndpoint);\n            requestCount++;\n            requestStatus = txs && txs.data ? parseInt(txs.data.status) : false;\n            // console.log('makeRequest '+(requestCount+1),account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n          } while (requestCount < 5 && !requestStatus);\n        }\n\n        // Cache request\n        if (txs && txs.data && parseInt(txs.data.status) > 0) {\n          const timestamp = parseInt(Date.now() / 1000);\n          // const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n          const dataToCache = {\n            data: txs,\n            timestamp\n          };\n          this.addKeyToCachedDataWithLocalStorage('cachedRequests', baseEndpoint, dataToCache);\n          // this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n        }\n      }\n\n      if (txs && txs.data && txs.data.result) {\n        results = txs.data.result;\n      } else {\n        return [];\n      }\n    }\n\n    return {\n      results,\n      baseTxs,\n      baseEndpoint\n    };\n  }\n  getCurveTxs = async (account = false, firstBlockNumber = 0, endBlockNumber = 'latest', enabledTokens = []) => {\n    const results = await this.getEtherscanTxs(account, firstBlockNumber, endBlockNumber, enabledTokens);\n    // results = results ? Object.values(results) : [];\n    return this.filterCurveTxs(results, enabledTokens);\n  }\n  saveFetchedTransactions = (endpoint, txs) => {\n    const txsToStore = {};\n    Object.keys(txs).forEach(txHash => {\n      const tx = txs[txHash];\n      if (tx.blockNumber && (!tx.status || tx.status.toLowerCase() !== 'pending')) {\n        txsToStore[txHash] = tx;\n      }\n    });\n\n    // Save new cached data\n    const cachedRequest = {\n      data: {\n        result: txsToStore\n      }\n    };\n    this.saveCachedRequest(endpoint, false, cachedRequest);\n  }\n  getEtherscanTxs = async (account = false, firstBlockNumber = 0, endBlockNumber = 'latest', enabledTokens = [], debug = false) => {\n\n    let resultData = null;\n    const currentNetwork = this.getRequiredNetwork();\n\n    switch (currentNetwork.explorer) {\n      case 'polygon':\n        resultData = await this.getPolygonBaseTxs(account, enabledTokens, debug);\n        break;\n      case 'etherscan':\n      default:\n        resultData = await this.getEtherscanBaseTxs(account, firstBlockNumber, endBlockNumber, enabledTokens, debug);\n        break;\n    }\n\n    // Initialize prevTxs\n    let txs = {};\n\n    if (resultData) {\n      let {\n        results,\n        baseTxs,\n        baseEndpoint\n      } = resultData;\n\n      if (baseTxs) {\n        // Filter txs for token\n        txs = await this.processStoredTxs(results, enabledTokens);\n      } else {\n        const allAvailableTokens = Object.keys(this.props.availableTokens);\n        // Save base endpoint with all available tokens\n        switch (currentNetwork.explorer) {\n          case 'polygon':\n            txs = await this.filterPolygonTxs(results, allAvailableTokens);\n            // console.log('polygon txs',results,allAvailableTokens,txs);\n            break;\n          case 'etherscan':\n          default:\n            txs = await this.filterEthereumTxs(results, allAvailableTokens);\n            break;\n        }\n\n        // Store filtered txs\n        if (txs && Object.keys(txs).length) {\n          this.saveFetchedTransactions(baseEndpoint, txs);\n        }\n      }\n    }\n\n    // console.log('DEBUG - TXS -',txs);\n\n    return Object\n      .values(txs)\n      .filter(tx => (tx.token && enabledTokens.includes(tx.token.toUpperCase())))\n      .sort((a, b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n  }\n  getPolygonCurrentLastStateId = async () => {\n    const contractInstance = new this.props.web3Polygon.eth.Contract(\n      [\n        {\n          constant: true,\n          inputs: [],\n          name: \"lastStateId\",\n          outputs: [\n            {\n              internalType: \"uint256\",\n              name: \"\",\n              type: \"uint256\",\n            },\n          ],\n          payable: false,\n          stateMutability: \"view\",\n          type: \"function\",\n        },\n      ],\n      \"0x0000000000000000000000000000000000001001\"\n    );\n\n    return parseInt(await contractInstance.methods.lastStateId().call());\n  }\n  checkPolygonTransactionIncluded = async (txHash) => {\n    const [\n      last_state_id,\n      tx,\n    ] = await Promise.all([\n      this.getPolygonCurrentLastStateId(),\n      this.props.web3Polygon.eth.getTransactionReceipt(txHash)\n    ]);\n\n    const tx_state_id = tx && tx.logs && tx.logs.length && this.props.web3.utils ? this.props.web3.utils.hexToNumberString(tx.logs[tx.logs.length - 1].topics[1]) : null;\n\n    return tx_state_id ? parseInt(last_state_id) >= parseInt(tx_state_id) : null;\n  }\n  filterCurveTxs = async (results, enabledTokens = []) => {\n\n    if (!results || !results.length || typeof results.forEach !== 'function') {\n      return [];\n    }\n\n    const availableTokens = this.props.availableTokens ? this.props.availableTokens : this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const curveTxs = results.filter(tx => (enabledTokens.includes(tx.token) && ['CurveIn', 'CurveOut', 'CurveZapIn', 'CurveZapOut', 'CurveTransferIn', 'CurveTransferOut', 'CurveDepositIn', 'CurveDepositOut'].includes(tx.action)));\n\n    if (curveTxs.length) {\n      curveTxs.sort((a, b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n    }\n\n    return curveTxs;\n  }\n  normalizePolygonTx = (tx, tokenConfig = null) => {\n    tokenConfig = tokenConfig || Object.values(this.props.availableTokens).find(tokenConfig => tx.to_address && tokenConfig.idle.address.toLowerCase() === tx.to_address.toLowerCase());\n\n    const depositLogEvent = tx.log_events && tokenConfig && tokenConfig.idle ? tx.log_events.find(log => log.sender_address.toLowerCase() === tokenConfig.address.toLowerCase() && log.decoded.name === 'Transfer' && log.decoded.params.find(param => param.name === 'from').value.toLowerCase() === this.props.account.toLowerCase() && log.decoded.params.find(param => param.name === 'to').value.toLowerCase() === tokenConfig.idle.address.toLowerCase()) : null;\n    const redeemLogEvent = tx.log_events && tokenConfig && tokenConfig.idle ? tx.log_events.find(log => log.sender_address.toLowerCase() === tokenConfig.address.toLowerCase() && log.decoded.name === 'Transfer' && log.decoded.params.find(param => param.name === 'to').value.toLowerCase() === this.props.account.toLowerCase() && log.decoded.params.find(param => param.name === 'from').value.toLowerCase() === tokenConfig.idle.address.toLowerCase()) : null;\n    const withdrawLogEvent = tx.log_events && tokenConfig && tokenConfig.address ? tx.log_events.find(log => log.sender_address.toLowerCase() === tokenConfig.address.toLowerCase() && log.decoded.name === 'Transfer' && log.decoded.params.find(param => param.name === 'from').value.toLowerCase() === this.props.account.toLowerCase() && log.decoded.params.find(param => param.name === 'to').value.toLowerCase() === '0x0000000000000000000000000000000000000000') : null;\n\n    const tokenDecimal = tokenConfig.decimals;\n    const tokenSymbol = tokenConfig.name || tokenConfig.token;\n    const hashKey = `${tx.tx_hash}_${tokenSymbol}`;\n    const idleToken = tokenConfig.idle ? tokenConfig.idle.token : null;\n    const action = depositLogEvent ? 'Deposit' : (redeemLogEvent ? 'Redeem' : (withdrawLogEvent ? 'Withdraw' : null));\n    const timeStamp = parseInt(this.strToMoment(tx.block_signed_at)._d.getTime() / 1000);\n\n    let logEvent = null;\n    switch (action) {\n      case 'Deposit':\n        logEvent = depositLogEvent;\n        break;\n      case 'Redeem':\n        logEvent = redeemLogEvent;\n        break;\n      case 'Withdraw':\n        logEvent = withdrawLogEvent;\n        break;\n      default:\n        break;\n    }\n\n    const logs = tx.log_events ? tx.log_events.map(log => ({\n      topics: log.raw_log_topics\n    })) : [];\n    const value = logEvent ? this.fixTokenDecimals(logEvent.decoded.params.find(param => param.name === 'value').value, tokenDecimal) : this.fixTokenDecimals(tx.value, tokenDecimal);\n\n    const blockNumber = tx.log_events && tx.log_events.length ? tx.log_events[0].block_height : null;\n\n    return {\n      logs,\n      value,\n      action,\n      hashKey,\n      timeStamp,\n      idleToken,\n      tokenSymbol,\n      blockNumber,\n      tokenDecimal,\n      hash: tx.tx_hash,\n      to: tx.to_address,\n      status: 'Completed',\n      from: tx.from_address,\n      gasUsed: tx.gas_spent,\n      gasPrice: tx.gas_price,\n      token: tokenConfig.token,\n      contractAddress: tokenConfig.address,\n    };\n  }\n  filterPolygonTxs = async (txs, enabledTokens, processTransactions = true) => {\n    const idleTokensAddresses = Object.values(this.props.availableTokens).map(tokenConfig => tokenConfig.idle.address.toLowerCase());\n    const polygonTxs = txs ? txs.filter(tx => tx.to_address && idleTokensAddresses.includes(tx.to_address.toLowerCase())).reduce((output, tx) => {\n      const mappedTx = this.normalizePolygonTx(tx);\n      output[mappedTx.hashKey] = mappedTx;\n      return output;\n    }, {}) : {};\n\n    return processTransactions ? await this.processTransactions(polygonTxs, enabledTokens) : polygonTxs;\n  }\n  filterEtherscanTxs = async (results, enabledTokens = [], processTxs = true, processStoredTxs = true) => {\n    return await this.filterEthereumTxs(results, enabledTokens, processTxs, processStoredTxs);\n  }\n  filterEthereumTxs = async (results, enabledTokens = [], processTxs = true, processStoredTxs = true) => {\n    if (!this.props.account || !results || !results.length || typeof results.forEach !== 'function') {\n      return [];\n    }\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let etherscanTxs = {};\n    let curveTransfersTxs = [];\n    let curveTransfersTxsToDelete = [];\n\n    // const idleTokensAddresses = Object.values(this.props.availableTokens).map( tokenConfig => (tokenConfig.idle.address) );\n    const curveZapContract = this.getGlobalConfig(['curve', 'zapContract']);\n    const curvePoolContract = this.getGlobalConfig(['curve', 'poolContract']);\n    const curveSwapContract = this.getGlobalConfig(['curve', 'migrationContract']);\n    const curveDepositContract = this.getGlobalConfig(['curve', 'depositContract']);\n\n    // this.customLog('filterEtherscanTxs',enabledTokens,results);\n\n    enabledTokens.forEach(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      const depositProxyContractInfo = this.getGlobalConfig(['contract', 'methods', 'deposit', 'proxyContract']);\n      const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n      const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n      const tokenMigrationToolParams = this.getGlobalConfig(['tools', 'tokenMigration', 'props', 'migrationContract']);\n\n      const batchMigration = this.getGlobalConfig(['tools', 'batchMigration', 'props', 'availableTokens', tokenConfig.idle.token]);\n      const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n      // const curveEnabled = this.getGlobalConfig(['curve','enabled']);\n      const curveTokenConfig = this.getGlobalConfig(['curve', 'availableTokens', tokenConfig.idle.token]);\n\n      results.forEach(tx => {\n        let tokenDecimals = tokenConfig.decimals;\n        const idleToken = tokenConfig.idle.token;\n        const internalTxs = results.filter(r => r.hash === tx.hash);\n        const isRightToken = internalTxs.length > 1 && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase()).length > 0;\n        const isSendTransferTx = internalTxs.length === 1 && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isReceiveTransferTx = internalTxs.length === 1 && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isDepositInternalTx = isRightToken && internalTxs.find(iTx => iTx.from.toLowerCase() === this.props.account.toLowerCase() && (iTx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && iTx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length > 0)));\n        const isRedeemInternalTx = isRightToken && internalTxs.find(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && iTx.to.toLowerCase() === this.props.account.toLowerCase());\n\n        const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase())) && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase());\n        const isConversionTx = tokenMigrationToolParams && (tx.from.toLowerCase() === tokenMigrationToolParams.address.toLowerCase() || tokenMigrationToolParams.oldAddresses.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase())) && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isDepositTx = isRightToken && !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && (tx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length > 0));\n        const isRedeemTx = isRightToken && !isMigrationTx && !isDepositInternalTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && tx.to.toLowerCase() === this.props.account.toLowerCase();\n        const isWithdrawTx = internalTxs.length > 1 && internalTxs.filter(iTx => tokenConfig.protocols.map(p => p.address.toLowerCase()).includes(iTx.contractAddress.toLowerCase())).length > 0 && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // const curveDepositTx = internalTxs.find( iTx => (iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && iTx.from.toLowerCase() === this.props.account.toLowerCase()) );\n        const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n        // Check Curve\n        const curveTx = internalTxs.find(tx => (tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && (tx.to.toLowerCase() === this.props.account.toLowerCase() || tx.from.toLowerCase() === this.props.account.toLowerCase())));\n        const isCurveTx = curveTx !== undefined;\n\n        const isCurveDepositTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === curveSwapContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveRedeemTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveSwapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveDepositIn = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveDepositOut = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveZapIn = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveZapOut = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveTransferOut = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapOut && !isCurveRedeemTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.from.toLowerCase() === this.props.account.toLowerCase();\n        const isCurveTransferIn = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapIn && !isCurveDepositTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isSwapOutTx = !isCurveTx && !isSendTransferTx && !isWithdrawTx && !isRedeemInternalTx && !etherscanTxs[tx.hash] && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isSwapTx = !isCurveTx && !isReceiveTransferTx && !isConversionTx && !isDepositInternalTx && !etherscanTxs[tx.hash] && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // if (tx.hash.toLowerCase() === '0x599a2e7b0094b0a943ffb1d520cb47598dcf3764145c33824e3b032d91ccc489'.toLowerCase()){\n        //   debugger;\n        // }\n\n        if (isSendTransferTx || isReceiveTransferTx || isMigrationTx || isDepositTx || isRedeemTx || isSwapTx || isSwapOutTx || isWithdrawTx || isConversionTx || isCurveDepositTx || isCurveRedeemTx || isCurveZapIn || isCurveZapOut || isCurveTransferOut || isCurveTransferIn || isCurveDepositIn || isCurveDepositOut) {\n\n          let action = null;\n          let hashKey = tx.hash;\n\n          if (isDepositTx) {\n            action = 'Deposit';\n          } else if (isRedeemTx) {\n            action = 'Redeem';\n          } else if (isMigrationTx || isConversionTx) {\n            action = 'Migrate';\n          } else if (isSendTransferTx) {\n            action = 'Send';\n          } else if (isReceiveTransferTx) {\n            action = 'Receive';\n          } else if (isSwapTx) {\n            action = 'Swap';\n          } else if (isSwapOutTx) {\n            action = 'SwapOut';\n          } else if (isWithdrawTx) {\n            action = 'Withdraw';\n          } else if (isCurveDepositTx) {\n            action = 'CurveIn';\n          } else if (isCurveRedeemTx) {\n            action = 'CurveOut';\n          } else if (isCurveZapIn) {\n            action = 'CurveZapIn';\n          } else if (isCurveZapOut) {\n            action = 'CurveZapOut';\n          } else if (isCurveDepositIn) {\n            action = 'CurveDepositIn';\n          } else if (isCurveDepositOut) {\n            action = 'CurveDepositOut';\n          } else if (isCurveTransferIn) {\n            action = 'CurveTransferIn';\n          } else if (isCurveTransferOut) {\n            action = 'CurveTransferOut';\n          }\n\n          let curveTokens = null;\n          if (isCurveTx) {\n            hashKey += '_' + tx.tokenSymbol;\n            curveTokens = this.fixTokenDecimals(curveTx.value, curvePoolContract.decimals);\n\n            // Add action for curve tokens transfers\n            if ((isCurveTransferIn || isCurveTransferOut)) {\n              hashKey += '_' + action;\n            }\n          }\n\n          // this.customLog('SAVE!',action);\n\n          if (tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()) {\n            tokenDecimals = 18;\n          } else if (isCurveTx) {\n            tokenDecimals = parseInt(tx.tokenDecimal);\n          }\n\n          // Sum the value if already processed\n          if (etherscanTxs[hashKey]) {\n            // Prevent second internal tx to sum SwapOut original value\n            switch (etherscanTxs[hashKey].action) {\n              case 'SwapOut':\n                if (etherscanTxs[hashKey].action !== action && isRedeemTx) {\n                  etherscanTxs[hashKey].tokenValue = this.fixTokenDecimals(tx.value, tokenDecimals);\n                }\n                break;\n              default:\n                if (!curveTx) {\n                  const newValue = etherscanTxs[hashKey].value.plus(this.fixTokenDecimals(tx.value, tokenDecimals));\n                  etherscanTxs[hashKey].value = newValue;\n                }\n                break;\n            }\n          } else {\n            // Insert tx in curve transfers buffer\n            if (isCurveTransferIn || isCurveTransferOut) {\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())) {\n                curveTokens = this.fixTokenDecimals(tx.value, curvePoolContract.decimals);\n                curveTransfersTxs.push({ ...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value, tokenDecimals) });\n              }\n            } else {\n              etherscanTxs[hashKey] = ({ ...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value, tokenDecimals) });\n\n              // Delete curveTransfers\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())) {\n                curveTransfersTxsToDelete.push(tx.hash.toLowerCase());\n              }\n\n              // Take right tokenSymbol\n              switch (action) {\n                case 'Withdraw':\n                  const iTxs = internalTxs.filter(iTx => (iTx !== tx));\n                  if (iTxs.length > 0) {\n                    const iTx = iTxs[0];\n                    etherscanTxs[hashKey].withdrawnValue = this.fixTokenDecimals(iTx.value, iTx.tokenDecimal);\n                    etherscanTxs[hashKey].tokenSymbol = iTx.tokenSymbol;\n                  }\n                  break;\n                case 'CurveIn':\n                case 'CurveOut':\n                case 'CurveZapIn':\n                case 'CurveZapOut':\n                case 'CurveDepositIn':\n                case 'CurveDepositOut':\n                  etherscanTxs[hashKey].tokenSymbol = token;\n                  break;\n                default:\n                  break;\n              }\n            }\n          }\n        }\n      });\n    });\n\n    curveTransfersTxs.forEach(tx => {\n      if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())) {\n        etherscanTxs[tx.hashKey] = tx;\n      }\n    });\n\n    if (processTxs) {\n      etherscanTxs = await this.processTransactions(etherscanTxs, enabledTokens, processStoredTxs);\n    }\n\n    // console.log('etherscanTxs',etherscanTxs);\n\n    return etherscanTxs;\n  }\n  addStoredTransaction = (txKey, transaction) => {\n\n    const account = this.props && this.props.account ? this.props.account : null;\n    const selectedToken = this.props && this.props.selectedToken ? this.props.selectedToken : null;\n\n    if (!account || !selectedToken || !this.props.availableTokens || !this.props.availableTokens[selectedToken]) {\n      return false;\n    }\n\n    const tokenConfig = this.props.availableTokens[selectedToken];\n    const tokenKey = tokenConfig.idle.token;\n\n    let storedTxs = this.getStoredTransactions();\n    if (!storedTxs[account]) {\n      storedTxs[account] = {};\n    }\n\n    if (!storedTxs[account][tokenKey]) {\n      storedTxs[account][tokenKey] = {};\n    }\n\n    storedTxs[account][tokenKey][txKey] = transaction;\n    this.updateStoredTransactions(storedTxs);\n  }\n  updateStoredTransactions = transactions => {\n    this.setLocalStorage('transactions', JSON.stringify(transactions));\n  }\n  /*\n  Merge storedTxs with this.props.transactions\n  */\n  getStoredTransactions = (account = null, tokenKey = null, selectedToken = null) => {\n    const storedTxs = this.getStoredItem('transactions', true, {});\n    const transactions = this.props.transactions ? { ...this.props.transactions } : {};\n    let output = storedTxs;\n\n    if (account) {\n      if (storedTxs[account]) {\n        output = storedTxs[account];\n        if (tokenKey) {\n          output = output[tokenKey] ? output[tokenKey] : {};\n\n          if (selectedToken) {\n            Object.keys(transactions).forEach(txKey => {\n              const tx = transactions[txKey];\n              if (!output[txKey] && tx.token && tx.token.toUpperCase() === selectedToken.toUpperCase()) {\n                output[txKey] = transactions[txKey];\n              }\n            });\n          }\n        }\n      } else {\n        output = {};\n      }\n    }\n\n    return output;\n  }\n  processTransactions = async (etherscanTxs, enabledTokens = [], processStoredTxs = true) => {\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let txReceipts = {};\n    let storedTxs = this.getStoredTransactions();\n\n    // Init storedTxs for pair account-token if empty\n    if (typeof storedTxs[this.props.account] !== 'object') {\n      storedTxs[this.props.account] = {};\n    }\n\n    // Take base tokens addresses and configs\n    const baseTokensConfigs = {};\n    const baseTokensAddresses = [];\n    const curveAvailableTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n    Object.keys(curveAvailableTokens).forEach(token => {\n      const curveTokenConfig = curveAvailableTokens[token];\n      const baseTokenConfig = this.getGlobalConfig(['stats', 'tokens', curveTokenConfig.baseToken.toUpperCase()]);\n      const baseTokenAddress = baseTokenConfig.address.toLowerCase();\n      baseTokensConfigs[baseTokenAddress] = baseTokenConfig;\n      baseTokensConfigs[baseTokenAddress].token = curveTokenConfig.baseToken;\n      baseTokensAddresses.push(baseTokenAddress);\n    });\n\n    const curveZapContract = this.getGlobalConfig(['curve', 'zapContract']);\n    // const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    // const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    // const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    await this.asyncForEach(enabledTokens, async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n      const idleToken = tokenConfig.idle.token;\n\n      // Init storedTxs for pair account-token if empty\n      if (typeof storedTxs[this.props.account][tokenKey] !== 'object') {\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      const minedTxs = { ...storedTxs[this.props.account][tokenKey] };\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length) {\n\n        await this.asyncForEach(filteredTxs, async (tx, index) => {\n          const txKey = `tx${tx.timeStamp}000`;\n          const storedTx = storedTxs[this.props.account][tokenKey][txKey] ? storedTxs[this.props.account][tokenKey][txKey] : tx;\n\n          let tokenPrice = null;\n\n          if (storedTx.tokenPrice && !this.BNify(storedTx.tokenPrice).isNaN()) {\n            tokenPrice = this.BNify(storedTx.tokenPrice);\n          } else {\n            tokenPrice = await this.getIdleTokenPrice(tokenConfig, tx.blockNumber, tx.timeStamp);\n            storedTx.tokenPrice = tokenPrice;\n          }\n\n          let idleTokens = this.BNify(tx.value);\n          let tokensTransfered = tokenPrice.times(idleTokens);\n\n          // Add transactionHash to storedTx\n          if (!storedTx.transactionHash) {\n            storedTx.transactionHash = tx.hash;\n          }\n\n          // Deposited\n          switch (tx.action) {\n            case 'Send':\n            case 'Receive':\n            case 'Swap':\n            case 'SwapOut':\n            case 'Migrate':\n              if (!storedTx.tokenAmount) {\n                storedTx.idleTokens = idleTokens;\n                storedTx.value = tokensTransfered;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.tokenSymbol = selectedToken;\n              }\n              break;\n            case 'Deposit':\n            case 'Redeem':\n              if (!storedTx.tokenAmount) {\n                storedTx.value = idleTokens;\n                storedTx.tokenAmount = idleTokens;\n                storedTx.idleTokens = idleTokens.div(tokenPrice);\n              }\n              break;\n            case 'Withdraw':\n              if (!storedTx.tokenAmount) {\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.value = storedTx.withdrawnValue;\n              }\n              break;\n            case 'CurveIn':\n            case 'CurveOut':\n              if (!storedTx.tokenAmount) {\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n              break;\n            case 'CurveTransferIn':\n            case 'CurveTransferOut':\n              if (!storedTx.curveTokenPrice) {\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n                storedTx.tokenAmount = this.BNify(storedTx.curveTokens).times(storedTx.curveTokenPrice);\n              }\n\n              storedTx.idleTokens = this.BNify(0);\n              break;\n            case 'CurveZapIn':\n            case 'CurveZapOut':\n              if (!storedTx.curveTokenPrice) {\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              if (!storedTx.tokenAmount) {\n\n                storedTx.tokenAmount = this.BNify(0);\n                storedTx.idleTokens = this.BNify(0);\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise(async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash, (err, tx) => {\n                    if (err) {\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt) {\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]) {\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter(log => (baseTokensAddresses.includes(log.address.toLowerCase()) && log.topics[log.topics.length - 1].toLowerCase() === `0x00000000000000000000000${curveZapContract.address.replace('x', '').toLowerCase()}`));\n\n                  this.customLog('filteredLogs', filteredLogs);\n\n                  if (filteredLogs && filteredLogs.length) {\n                    filteredLogs.forEach(log => {\n                      let tokenAmount = parseInt(log.data, 16);\n                      const baseTokensConfig = baseTokensConfigs[log.address.toLowerCase()];\n                      const tokenDecimals = baseTokensConfig.decimals;\n                      tokenAmount = this.fixTokenDecimals(tokenAmount, tokenDecimals);\n                      storedTx.tokenAmount = storedTx.tokenAmount.plus(tokenAmount);\n                      this.customLog('Add tokenAmount (' + tx.hash + ')', baseTokensConfig.token, tokenAmount.toFixed(5), storedTx.tokenAmount.toFixed(5));\n                    });\n                  }\n                }\n              }\n              break;\n            case 'CurveDepositIn':\n            case 'CurveDepositOut':\n              if (!storedTx.curveTokenPrice) {\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              storedTx.tokenAmount = this.BNify(storedTx.value);\n\n              if (!storedTx.idleTokens) {\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise(async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash, (err, tx) => {\n                    if (err) {\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt) {\n                  const curveTokenConfig = this.getGlobalConfig(['curve', 'availableTokens', idleToken]);\n                  const idleTokenDecimals = curveTokenConfig && curveTokenConfig.decimals ? curveTokenConfig.decimals : 18;\n                  const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]) {\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter(log => (log.address.toLowerCase() === idleTokenAddress));\n                  if (filteredLogs && filteredLogs.length) {\n                    idleTokens = parseInt(filteredLogs[0].data, 16);\n                    idleTokens = this.fixTokenDecimals(idleTokens, idleTokenDecimals);\n                    storedTx.idleTokens = idleTokens;\n                  }\n                }\n              }\n              break;\n            default:\n              break;\n          }\n\n          // Save token for future filtering\n          storedTx.token = selectedToken;\n\n          // Save processed tx\n          etherscanTxs[tx.hashKey] = storedTx;\n\n          // Store processed Tx\n          storedTxs[this.props.account][tokenKey][txKey] = storedTx;\n\n          // Remove from minted Txs\n          delete minedTxs[txKey];\n        });\n      }\n\n      // Process Stored txs\n      if (processStoredTxs) {\n        etherscanTxs = await this.processStoredTxs(etherscanTxs, [selectedToken], this.props.transactions);\n      }\n    });\n\n    // Update Stored txs\n    if (storedTxs) {\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  processStoredTxs = async (etherscanTxs, enabledTokens = [], txsToProcess = null) => {\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let storedTxs = this.getStoredItem('transactions', true, {})\n\n    // Init storedTxs\n    if (!storedTxs[this.props.account]) {\n      storedTxs[this.props.account] = {};\n    }\n\n    etherscanTxs = Object.assign({}, etherscanTxs);\n\n    const networkId = this.getRequiredNetworkId();\n\n    // this.customLog('Processing stored txs',enabledTokens);\n\n    await this.asyncForEach(enabledTokens, async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n\n      // Init storedTxs\n      if (!storedTxs[this.props.account][tokenKey]) {\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      txsToProcess = txsToProcess && Object.values(txsToProcess).length ? txsToProcess : this.getStoredTransactions(this.props.account, tokenKey, selectedToken);\n\n      // this.customLog('txsToProcess',selectedToken,txsToProcess);\n\n      // if (!Object.values(txsToProcess).length && selectedToken==='DAI' && Object.values(this.props.transactions).length>0){\n      //   debugger;\n      // }\n\n      // Debug transactions\n      /*\n      txsToProcess['xxxxx'] = {\n        status:'success',\n        created:Date.now(),\n        method:'executeMetaTransaction',\n        token:selectedToken.toUpperCase(),\n        transactionHash:'0x000000000000000000000000000'\n      };\n      */\n\n      await this.asyncForEach(Object.keys(txsToProcess), async (txKey, i) => {\n        const tx = txsToProcess[txKey];\n\n        // Skip wrong token\n        if (!tx || !tx.token || tx.token.toUpperCase() !== selectedToken.toUpperCase() || (tx.networkId && parseInt(tx.networkId) !== parseInt(networkId))) {\n          return false;\n        }\n\n        const isStoredTx = storedTxs && storedTxs[this.props.account] && storedTxs[this.props.account][tokenKey] && storedTxs[this.props.account][tokenKey][txKey];\n\n        const allowedMethods = {\n          mintIdleToken: 'Deposit',\n          redeemIdleToken: 'Redeem',\n          migrateFromToIdle: 'Migrate',\n          mintIdleTokensProxy: 'Deposit',\n          migrateFromAaveToIdle: 'Migrate',\n          migrateFromIearnToIdle: 'Migrate',\n          executeMetaTransaction: 'Migrate',\n          migrateFromFulcrumToIdle: 'Migrate',\n          migrateFromCompoundToIdle: 'Migrate',\n        };\n        const pendingStatus = ['pending', 'started'];\n        const txSucceeded = tx.status === 'success';\n        const txPending = pendingStatus.includes(tx.status);\n        const isMetaTx = tx.method === 'executeMetaTransaction';\n        const txHash = tx.transactionHash ? tx.transactionHash : null;\n        const methodIsAllowed = Object.keys(allowedMethods).includes(tx.method);\n\n        // Skip transaction if already present in etherscanTxs with same status\n        if (txHash && etherscanTxs[txHash] && etherscanTxs[txHash].tokenPrice) {\n          return false;\n        }\n\n        if (txPending && txHash && !etherscanTxs[txHash] && methodIsAllowed && tx.params.length) {\n          // this.customLog('processStoredTxs',tx.method,tx.status,tx.params);\n          const isMigrationTx = allowedMethods[tx.method] === 'Migrate';\n          const decimals = isMigrationTx ? 18 : tokenConfig.decimals;\n          etherscanTxs[`t${tx.created}`] = {\n            status: 'Pending',\n            token: selectedToken,\n            action: allowedMethods[tx.method],\n            timeStamp: parseInt(tx.created / 1000),\n            hash: txHash ? tx.transactionHash : null,\n            tokenSymbol: isMigrationTx ? tokenConfig.idle.token : selectedToken,\n            value: tx.value ? tx.value : this.fixTokenDecimals(tx.params[0], decimals).toString()\n          };\n\n          return false;\n        }\n\n        // Skip invalid txs\n        if (!txSucceeded || !txHash || !methodIsAllowed) {\n          return false;\n        }\n\n        let realTx = tx.realTx ? tx.realTx : null;\n\n        if (!realTx) {\n          // this.customLog('loadTxs - getTransaction',tx.transactionHash);\n          realTx = await (new Promise(async (resolve, reject) => {\n            this.props.web3.eth.getTransaction(tx.transactionHash, (err, txReceipt) => {\n              if (err) {\n                reject(err);\n              }\n              resolve(txReceipt);\n            });\n          }));\n        }\n\n        // this.customLog('realTx (localStorage)',realTx);\n\n        // Skip txs from other wallets if not meta-txs\n        if (!realTx || (!isMetaTx && realTx.from.toLowerCase() !== this.props.account.toLowerCase())) {\n          return false;\n        }\n\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig, realTx.blockNumber, realTx.timeStamp);\n\n        realTx.status = 'Completed';\n        realTx.action = allowedMethods[tx.method];\n        realTx.contractAddress = tokenConfig.address;\n        realTx.timeStamp = parseInt(tx.created / 1000);\n\n        let txValue = null;\n        switch (tx.method) {\n          case 'mintIdleToken':\n          case 'mintIdleTokensProxy':\n            if (!tx.params) {\n              if (isStoredTx) {\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (realTx.to.toLowerCase() !== tokenConfig.idle.address.toLowerCase()) {\n              // Remove wrong contract tx\n              if (isStoredTx) {\n                delete storedTxs[this.props.account][tokenKey][txKey];\n              }\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - wrong contract');\n              return false;\n            }\n\n            txValue = tx.params ? this.fixTokenDecimals(tx.params[0], tokenConfig.decimals).toString() : 0;\n            if (!txValue) {\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - value is zero ('+txValue+')');\n              return false;\n            }\n\n            realTx.value = txValue;\n            realTx.tokenAmount = txValue;\n            break;\n          case 'redeemIdleToken':\n            if (!tx.params) {\n              if (isStoredTx) {\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (!realTx.tokenPrice) {\n              const redeemedValueFixed = this.fixTokenDecimals(tx.params[0], 18).times(tokenPrice);\n              realTx.tokenPrice = tokenPrice;\n              realTx.value = redeemedValueFixed;\n              realTx.tokenAmount = redeemedValueFixed;\n            }\n            break;\n          case 'executeMetaTransaction':\n            let executeMetaTransactionReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!executeMetaTransactionReceipt) {\n              executeMetaTransactionReceipt = await (new Promise(async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash, (err, tx) => {\n                  if (err) {\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!executeMetaTransactionReceipt) {\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt) {\n              tx.txReceipt = executeMetaTransactionReceipt;\n              if (isStoredTx) {\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            let action = null;\n            let executeMetaTransactionContractAddr = null;\n            let executeMetaTransactionInternalTransfers = [];\n            const IdleProxyMinterInfo = this.getGlobalConfig(['contract', 'deposit', 'proxyContract']);\n\n            // Handle migration tx\n            if (tokenConfig.migration && tokenConfig.migration.oldContract) {\n              if (executeMetaTransactionReceipt.logs) {\n                executeMetaTransactionContractAddr = tokenConfig.migration.oldContract.address.replace('x', '').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n              } else if (executeMetaTransactionReceipt.events) {\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length) {\n                action = 'Migrate';\n              }\n            }\n\n            // Handle deposit tx\n            if (!executeMetaTransactionInternalTransfers.length) {\n              if (executeMetaTransactionReceipt.logs) {\n                executeMetaTransactionContractAddr = tokenConfig.idle.address.replace('x', '').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n\n                // Handle deposit made with proxy contract\n                if (!executeMetaTransactionInternalTransfers.length && IdleProxyMinterInfo) {\n                  executeMetaTransactionContractAddr = IdleProxyMinterInfo.address.replace('x', '').toLowerCase();\n                  executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n                }\n              } else if (executeMetaTransactionReceipt.events) {\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length) {\n                action = 'Deposit';\n              }\n            }\n\n            if (!executeMetaTransactionInternalTransfers.length) {\n              return false;\n            }\n\n            const internalTransfer = executeMetaTransactionInternalTransfers[0];\n\n            const metaTxValue = internalTransfer.data ? parseInt(internalTransfer.data, 16) : (internalTransfer.raw && internalTransfer.raw.data) ? parseInt(internalTransfer.raw.data, 16) : null;\n\n            if (!metaTxValue) {\n              return false;\n            }\n\n            const metaTxValueFixed = this.fixTokenDecimals(metaTxValue, tokenConfig.decimals);\n            realTx.action = action;\n            realTx.value = metaTxValueFixed;\n            realTx.tokenAmount = metaTxValueFixed;\n            // this.customLog(metaTxValueFixed.toString());\n            break;\n          case 'migrateFromCompoundToIdle':\n          case 'migrateFromFulcrumToIdle':\n          case 'migrateFromAaveToIdle':\n          case 'migrateFromIearnToIdle':\n          case 'migrateFromToIdle':\n            if (!tokenConfig.migration || !tokenConfig.migration.oldContract) {\n              return false;\n            }\n\n            let migrationTxReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!migrationTxReceipt) {\n              migrationTxReceipt = await (new Promise(async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash, (err, tx) => {\n                  if (err) {\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!migrationTxReceipt) {\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt) {\n              tx.txReceipt = migrationTxReceipt;\n              if (isStoredTx) {\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            const migrationContractAddr = tokenConfig.migration.migrationContract.address.toLowerCase().replace('x', '');\n            const contractAddress = tokenConfig.idle.address.toLowerCase().replace('x', '');\n            const migrationTxInternalTransfers = migrationTxReceipt.logs.filter((tx) => { return tx.topics.length >= 3 && tx.topics[tx.topics.length - 2].toLowerCase() === `0x00000000000000000000000${migrationContractAddr}` && tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${contractAddress}`; });\n\n            if (!migrationTxInternalTransfers.length) {\n              return false;\n            }\n\n            const migrationInternalTransfer = migrationTxInternalTransfers.pop();\n\n            const decodedLogs = this.props.web3.eth.abi.decodeLog([\n              {\n                internalType: \"uint256\",\n                name: \"_token\",\n                type: \"uint256\"\n              },\n            ], migrationInternalTransfer.data, migrationInternalTransfer.topics);\n\n            if (!decodedLogs || !decodedLogs._token) {\n              return false;\n            }\n\n            const migrationValue = decodedLogs._token;\n            const migrationValueFixed = this.fixTokenDecimals(migrationValue, tokenConfig.decimals);\n            realTx.value = migrationValueFixed.toString();\n            break;\n          default:\n            break;\n        }\n\n        realTx.tokenPrice = tokenPrice;\n        realTx.token = selectedToken;\n        realTx.tokenSymbol = selectedToken;\n        realTx.idleTokens = tokenPrice.times(this.BNify(realTx.value));\n\n        // Save processed tx\n        etherscanTxs[txHash] = realTx;\n        // etherscanTxs.push(realTx);\n\n        // Store processed Tx\n        if (!tx.realTx) {\n          tx.realTx = realTx;\n          storedTxs[this.props.account][tokenKey][txKey] = tx;\n        }\n      });\n    });\n\n    // Update Stored Txs\n    if (storedTxs) {\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  saveCachedRequest = (endpoint, alias = false, data) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now() / 1000);\n    const dataToCache = {\n      data,\n      timestamp\n    };\n    return this.addKeyToCachedDataWithLocalStorage('cachedRequests', key, dataToCache);\n    // return this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n  }\n  getCustomAddress = () => {\n    return this.getStoredItem('customAddress', false);\n  }\n  setCustomAddress = (customAddress) => {\n    return this.setLocalStorage('customAddress', customAddress);\n  }\n  getCachedRequest = (endpoint, alias = false) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests', {});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key]) {\n      return cachedRequests[key].data;\n    }\n    return null;\n  }\n  buildSubgraphQuery = (entity,fields,params={}) => {\n    params = JSON.stringify(params);\n    params = params.substr(1).substr(0,params.length-2).replace(/\"([^\"]+)\":/g, '$1:');;\n    return `{\n      ${entity}(${params}){\n        ${fields.join(\",\")}\n      }\n    }`;\n  }\n  getSubgraphTrancheInfo = async (trancheAddress,startTimestamp=null,endTimestamp=null,fields=null) => {\n    const subgraphConfig = this.getGlobalConfig(['network','providers','subgraph','tranches']);\n\n    if (!subgraphConfig.enabled){\n      return false;\n    }\n\n    const currTime = parseInt(Date.now()/1000);\n    const queryParams = {\n      first:1000,\n      orderBy:\"timeStamp\",\n      orderDirection:\"asc\",\n      where:{\n        \"Tranche\":trancheAddress.toLowerCase()\n      }\n    };\n    if (startTimestamp){\n      queryParams.where.timeStamp_gte = startTimestamp;\n    }\n    if (endTimestamp){\n      queryParams.where.timeStamp_lte = endTimestamp;\n    }\n    fields = fields || subgraphConfig.entities.trancheInfos;\n    const subgraphQuery = this.buildSubgraphQuery('trancheInfos',fields,queryParams);\n    const postData = {\n      query:subgraphQuery\n    }\n\n    const results = await this.makePostRequest(subgraphConfig.endpoint,postData);\n    let subgraphData = this.getArrayPath(['data','data','trancheInfos'],results);\n    const lastTimestamp = subgraphData && subgraphData.length>0 ? parseInt(subgraphData[subgraphData.length-1].timeStamp) : null;\n\n    if (lastTimestamp && lastTimestamp>startTimestamp && lastTimestamp<endTimestamp && currTime-lastTimestamp>86400){\n      const subgraphData_2 = await this.getSubgraphTrancheInfo(trancheAddress,lastTimestamp+1,endTimestamp,fields);\n      if (subgraphData_2){\n        subgraphData = subgraphData.concat(subgraphData_2);\n      }\n    }\n    return subgraphData;\n  }\n  makePostRequest = async (endpoint, postData={}, error_callback = false, config = null) => {\n    const data = await axios\n      .post(endpoint, postData, config)\n      .catch(err => {\n        if (typeof error_callback === 'function') {\n          error_callback(err);\n        }\n      });\n    return data;\n  }\n  makeRequest = async (endpoint, error_callback = false, config = null) => {\n    const data = await axios\n      .get(endpoint, config)\n      .catch(err => {\n        if (typeof error_callback === 'function') {\n          error_callback(err);\n        }\n      });\n    if (data) {\n      return data;\n    } else {\n      let result= axios(config)\n      return result\n    }\n  }\n  makeEtherscanApiRequest = async (endpoint, keys = [], TTL = 120, apiKeyIndex = 0) => {\n    const timestamp = parseInt(Date.now() / 1000);\n\n    // Check if already exists\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests', {});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[endpoint] && cachedRequests[endpoint].timestamp && timestamp - cachedRequests[endpoint].timestamp < TTL) {\n      return cachedRequests[endpoint].data;\n    }\n\n    const apiKey = keys[apiKeyIndex];\n    const data = await this.makeRequest(endpoint + '&apikey=' + apiKey);\n\n    // console.log('makeEtherscanApiRequest',endpoint+'&apikey='+apiKey,apiKeyIndex+'/'+keys.length,data,(data.data ? data.data.message : null),apiKeyIndex<keys.length-1);\n\n    if (data && data.data && data.data.message === 'OK') {\n      const dataToCache = {\n        data,\n        timestamp\n      };\n      // this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n      this.addKeyToCachedDataWithLocalStorage('cachedRequests', endpoint, dataToCache);\n      return data;\n    } else if (apiKeyIndex < keys.length - 1) {\n      return await this.makeEtherscanApiRequest(endpoint, keys, TTL, apiKeyIndex + 1);\n    }\n    return null;\n  }\n  makeCachedRequest = async (endpoint, TTL = 60, return_data = false, alias = false, config = null) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now() / 1000);\n\n    // Check if already exists\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests', {});\n    // console.log('makeCachedRequest',endpoint,TTL,cachedRequests[key],(cachedRequests[key] ? timestamp-cachedRequests[key].timestamp : null));\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key] && cachedRequests[key].timestamp && timestamp - cachedRequests[key].timestamp < TTL) {\n      return (cachedRequests[key].data && return_data ? cachedRequests[key].data.data : cachedRequests[key].data);\n    }\n\n    const data = await this.makeRequest(endpoint, false, config);\n\n    const dataToCache = {\n      data,\n      timestamp\n    };\n    this.addKeyToCachedDataWithLocalStorage('cachedRequests', key, dataToCache);\n    return (data && return_data ? data.data : data);\n  }\n  makeCachedPostRequest = async (endpoint, postData={}, TTL=60, return_data=false, alias=false, config=null) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now() / 1000);\n\n    // Check if already exists\n    const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests', {});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key] && cachedRequests[key].timestamp && timestamp - cachedRequests[key].timestamp < TTL) {\n      return (cachedRequests[key].data && return_data ? cachedRequests[key].data.data : cachedRequests[key].data);\n    }\n\n    const data = await this.makePostRequest(endpoint, postData, false, config);\n    const dataToCache = {\n      data,\n      timestamp\n    };\n    this.addKeyToCachedDataWithLocalStorage('cachedRequests', key, dataToCache);\n    return (data && return_data ? data.data : data);\n  }\n  getTransactionError = error => {\n    let output = 'error';\n    if (parseInt(error.code)) {\n      const errorCode = parseInt(error.code);\n      switch (errorCode) {\n        case 4001:\n          output = 'denied';\n          break;\n        default:\n          output = `error_${errorCode}`;\n          break;\n      }\n    } else if (error.message) {\n      output = error.message.split(\"\\n\")[0]; // Take just the first line of the error\n    }\n\n    return output;\n  }\n  getGlobalConfigs = () => {\n    return globalConfigs;\n  }\n  getArrayPath = (path, array) => {\n    if (!array) {\n      return null;\n    }\n    path = Object.assign([], path);\n    if (path.length > 0) {\n      const prop = path.shift();\n      if (!path.length) {\n        return array[prop] ? array[prop] : null;\n      } else if (array[prop]) {\n        return this.getArrayPath(path, array[prop]);\n      }\n    }\n    return null;\n  }\n  getGlobalConfig = (path, configs = false) => {\n    configs = configs ? configs : globalConfigs;\n    if (path.length > 0) {\n      const prop = path.shift();\n      if (!path.length) {\n        return configs[prop] !== undefined ? configs[prop] : null;\n      } else if (configs[prop]) {\n        return this.getGlobalConfig(path, configs[prop]);\n      }\n    }\n    return null;\n  }\n  getAppUrl = (path) => {\n    return globalConfigs.baseURL + '/' + path;\n  }\n  getCurrentEnvironment = () => {\n    let environment = Object.keys(globalConfigs.environments).find(env => {\n      const envUrl = globalConfigs.environments[env].url;\n      return envUrl.toLowerCase() === window.location.origin.toLowerCase();\n    });\n    return environment || 'beta';\n  }\n  checkChristmas = () => {\n    return ['24','25','26','27'].includes(this.strToMoment().format('DD')) && this.strToMoment().format('MM')==='12';\n  }\n  checkUrlPolygon = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.polygonUrl.toLowerCase());\n  }\n  checkUrlOrigin = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n  }\n  checkUrlBeta = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.betaURL.toLowerCase());\n  }\n  sendGoogleAnalyticsPageview = async (page = null) => {\n    page = page || window.location.hash.substr(1);\n    const googlePageviewInfo = this.getGlobalConfig(['analytics', 'google', 'pageView']);\n    const isOrigin = this.checkUrlOrigin();\n    if (googlePageviewInfo.enabled && isOrigin && window.ga) {\n      window.ga('set', 'page', page);\n      window.ga('send', 'pageview');\n    }\n  }\n  sendGoogleAnalyticsEvent = async (eventData, callback = null) => {\n\n    const googleEventsInfo = globalConfigs.analytics.google.events;\n    const debugEnabled = googleEventsInfo.debugEnabled;\n    const originOk = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n\n    if (googleEventsInfo.enabled && window.ga && (debugEnabled || originOk)) {\n\n      // Check if testnet postfix required\n      if (googleEventsInfo.addPostfixForTestnet) {\n        // Postfix network name if not mainnet\n        if (globalConfigs.network.requiredNetwork !== 1) {\n          const currentNetwork = globalConfigs.network.availableNetworks[globalConfigs.network.requiredNetwork];\n          eventData.eventCategory += `_${currentNetwork}`;\n          // Postfix test for debug\n        } else if (debugEnabled && !originOk) {\n          eventData.eventCategory += '_test';\n        }\n      }\n\n      await (new Promise(async (resolve, reject) => {\n        eventData.hitCallback = () => {\n          resolve(true);\n        };\n        eventData.hitCallbackFail = () => {\n          reject();\n        };\n\n        window.ga('send', 'event', eventData);\n      }));\n\n      if (typeof callback === 'function') {\n        callback();\n      }\n    }\n\n    if (typeof callback === 'function') {\n      callback();\n    }\n\n    return false;\n  }\n  createContract = async (name, address, abi) => {\n    try {\n      const contract = new this.props.web3.eth.Contract(abi, address);\n      return { name, contract };\n    } catch (error) {\n      this.customLogError(\"Could not create contract.\", name, address, error);\n    }\n    return null;\n  }\n  getWalletProvider = (defaultProvider = null) => {\n    return this.getStoredItem('walletProvider', false, defaultProvider);\n  }\n  simpleIDPassUserInfo = (userInfo, simpleID) => {\n    if (!userInfo.address && this.props.account) {\n      userInfo.address = this.props.account;\n    }\n    if (!userInfo.provider) {\n      userInfo.provider = this.getWalletProvider();\n    }\n    if (typeof userInfo.email !== 'undefined' && !userInfo.email) {\n      delete userInfo.email;\n    }\n    if (!userInfo.address) {\n      return false;\n    }\n    simpleID = simpleID ? simpleID : (this.props.simpleID ? this.props.simpleID : (typeof this.props.initSimpleID === 'function' ? this.props.initSimpleID() : null));\n    if (simpleID) {\n      return simpleID.passUserInfo(userInfo);\n    }\n    return false;\n  }\n  getEtherscanTransactionUrl = (txHash, requiredNetwork = null) => {\n    const defaultNetwork = this.getGlobalConfig(['network', 'requiredNetwork']);\n    requiredNetwork = requiredNetwork || this.getRequiredNetworkId();\n    const explorer = this.getGlobalConfig(['network', 'availableNetworks', requiredNetwork, 'explorer']);\n    const defaultUrl = this.getGlobalConfig(['network', 'providers', 'etherscan', 'baseUrl', defaultNetwork]);\n    const baseurl = this.getGlobalConfig(['network', 'providers', explorer, 'baseUrl', requiredNetwork]) || defaultUrl;\n    return txHash ? `${baseurl}/tx/${txHash}` : null;\n  }\n  getEtherscanAddressUrl = (address, requiredNetwork = null) => {\n    const defaultNetwork = this.getGlobalConfig(['network', 'requiredNetwork']);\n    requiredNetwork = requiredNetwork || this.getRequiredNetworkId();\n    const explorer = this.getGlobalConfig(['network', 'availableNetworks', requiredNetwork, 'explorer']);\n    const defaultUrl = this.getGlobalConfig(['network', 'providers', 'etherscan', 'baseUrl', defaultNetwork]);\n    const baseurl = this.getGlobalConfig(['network', 'providers', explorer, 'baseUrl', requiredNetwork]) || defaultUrl;\n    return address ? `${baseurl}/address/${address}` : null;\n  }\n  formatMoney = (amount, decimalCount = 2, decimal = \".\", thousands = \",\") => {\n    try {\n      decimalCount = Math.abs(decimalCount);\n      decimalCount = isNaN(decimalCount) ? 2 : decimalCount;\n\n      const negativeSign = amount < 0 ? \"-\" : \"\";\n\n      let i = parseInt(amount = Math.abs(Number(amount) || 0).toFixed(decimalCount)).toString();\n      let j = (i.length > 3) ? i.length % 3 : 0;\n\n      return negativeSign + (j ? i.substr(0, j) + thousands : '') + i.substr(j).replace(/(\\d{3})(?=\\d)/g, \"$1\" + thousands) + (decimalCount ? decimal + Math.abs(amount - i).toFixed(decimalCount).slice(2) : \"\");\n    } catch (e) {\n      return null;\n    }\n  }\n  getSnapshotProposals = async (activeOnly = false) => {\n    const cachedDataKey = `snapshotProposals_${activeOnly}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const whitelist = this.getGlobalConfig(['network', 'providers', 'snapshot', 'whitelist']).map(addr => addr.toLowerCase());\n    const endpoint = this.getGlobalConfig(['network', 'providers', 'snapshot', 'endpoints', 'proposals']);\n    const query = activeOnly ? this.getGlobalConfig(['network', 'providers', 'snapshot', 'queries', 'proposalsActive']) : this.getGlobalConfig(['network', 'providers', 'snapshot', 'queries', 'proposals']);\n\n    const data = {\n      query: `${query}`\n    }\n\n    let proposals = await this.makeCachedPostRequest(endpoint, data, 1440, true, false);\n    if (proposals && proposals.data && proposals.data.proposals){\n      proposals = proposals.data.proposals;\n      const currTime = parseInt(Date.now() / 1000);\n      const validProposals = [];\n      await this.asyncForEach(proposals, async (p) => {\n        if (p.end <= currTime || whitelist.includes(p.author.toLowerCase())){\n          validProposals.push(p);\n        } else {\n          const blockNumber = p.snapshot;\n          let checkedStrategies = false;\n          await this.asyncForEach(p.strategies, async (s) => {\n            if (checkedStrategies) {\n              return;\n            }\n            if (s.name === 'erc20-balance-of') {\n              const tokenName = s.params.symbol;\n              const tokenContract = this.getContractByName(tokenName);\n              if (tokenContract) {\n                const tokenBalance = await this.getTokenBalance(tokenName, tokenContract.address, true, blockNumber);\n                if (tokenBalance && this.BNify(tokenBalance).gt(100)) {\n                  checkedStrategies = true;\n                }\n              }\n            } else {\n              // checkedStrategies = true;\n            }\n          });\n\n          // Add proposal is passed token balances check\n          if (checkedStrategies) {\n            validProposals.push(p);\n          }\n        }\n      });\n\n      return this.setCachedData(cachedDataKey, validProposals);\n    }\n  }\n  getAprsFromApi = async (networkId = null) => {\n    const config = this.getGlobalConfig(['stats', 'config']);\n    if (!networkId || !this.getGlobalConfig(['network', 'enabledNetworks']).includes(networkId)) {\n      networkId = this.getRequiredNetworkId();\n    }\n    const endpointInfo = this.getGlobalConfig(['stats', 'aprs']);\n    const aprs = await this.makeCachedRequest(endpointInfo.endpoint[networkId], endpointInfo.TTL, true, false, config);\n    return aprs;\n  }\n  getTokenApiData = async (address, isRisk = null, startTimestamp = null, endTimestamp = null, forceStartTimestamp = false, frequency = null, order = null, limit = null) => {\n    const networkId = this.getRequiredNetworkId();\n    // const statsConfig = this.getGlobalConfig(['stats']);\n    // const statsEnabled = statsConfig.enabled && statsConfig.availableNetworks.includes(networkId);\n    // if (!statsEnabled){\n    //   return [];\n    // }\n\n    // Check for cached data\n    const cachedDataKey = `tokenApiData_${networkId}_${address}_${isRisk}_${frequency}_${order}_${limit}`;\n    let cachedData = this.getCachedData(cachedDataKey);\n\n    if (cachedData !== null) {\n      // Check for fittable start and end time\n      const filteredCachedData = cachedData.filter(c => ((c.startTimestamp === null || (startTimestamp && c.startTimestamp <= startTimestamp)) && (c.endTimestamp === null || (endTimestamp && c.endTimestamp >= endTimestamp))))\n      if (filteredCachedData && filteredCachedData.length > 0) {\n        let filteredData = filteredCachedData.pop().data;\n        if (filteredData) {\n          filteredData = filteredData.filter(d => ((!startTimestamp || d.timestamp >= startTimestamp) && (!endTimestamp || d.timestamp <= endTimestamp)));\n          if (filteredData.length > 0) {\n            return filteredData;\n          }\n        }\n      }\n      // Initialize cachedData\n    } else {\n      cachedData = [];\n    }\n\n    const apiInfo = this.getGlobalConfig(['stats', 'rates']);\n    let endpoint = `${apiInfo.endpoint[networkId]}${address}`;\n\n    // console.log('getTokenApiData',cachedDataKey,apiInfo,endpoint);\n\n    if (startTimestamp || endTimestamp || isRisk !== null || frequency !== null) {\n      const params = [];\n\n      if (startTimestamp && parseInt(startTimestamp)) {\n        if (forceStartTimestamp) {\n          params.push(`start=${startTimestamp}`);\n        } else {\n          const start = startTimestamp - (60 * 60 * 24 * 2); // Minus 1 day for Volume graph\n          params.push(`start=${start}`);\n        }\n      }\n\n      if (endTimestamp && parseInt(endTimestamp)) {\n        params.push(`end=${endTimestamp}`);\n      }\n\n      if (isRisk !== null) {\n        params.push(`isRisk=${isRisk}`);\n      }\n\n      if (frequency !== null && parseInt(frequency)) {\n        params.push(`frequency=${frequency}`);\n      }\n\n      if (order !== null) {\n        params.push(`order=${order}`);\n      }\n\n      if (limit !== null && parseInt(limit)) {\n        params.push(`limit=${limit}`);\n      }\n\n      if (params.length) {\n        endpoint += '?' + params.join('&');\n      }\n    }\n\n    const config = this.getGlobalConfig(['stats', 'config']);\n    let output = await this.makeRequest(endpoint, false, config);\n    if (!output) {\n      return [];\n    }\n\n    const data = output.data;\n\n    let filteredData = null;\n    if (isRisk !== null) {\n      filteredData = data.filter(d => (d.isRisk === isRisk));\n    }\n\n    cachedData.push({\n      isRisk,\n      endTimestamp,\n      startTimestamp,\n      data: filteredData,\n    });\n\n    this.setCachedData(cachedDataKey, cachedData);\n\n    return data;\n  }\n  getTokenExchangeRate = async (contractName, exchangeRateParams) => {\n    const cachedDataKey = `exchangeRate_${contractName}_${exchangeRateParams.name}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const exchangeRate = await this.genericContractCall(contractName, exchangeRateParams.name, exchangeRateParams.params);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, exchangeRate, null);\n  }\n  getTokenDecimals = async (contractName) => {\n    contractName = contractName || this.props.selectedToken;\n\n    if (!contractName) {\n      return false;\n    }\n\n    const cachedDataKey = `contractDecimals_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenConfig = this.getGlobalConfig(['stats', 'tokens', contractName.toUpperCase()]);\n    const decimals = tokenConfig && tokenConfig.decimals ? tokenConfig.decimals : await this.genericContractCall(contractName, 'decimals');\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, decimals, null);\n  }\n  getAvgApr = (aprs, allocations, totalAllocation) => {\n    if (aprs && allocations && totalAllocation) {\n      let avgApr = Object.keys(aprs).reduce((aprWeighted, protocolAddr) => {\n        const allocation = this.BNify(allocations[protocolAddr]);\n        const apr = this.BNify(aprs[protocolAddr]);\n        return this.BNify(aprWeighted).plus(allocation.times(apr));\n      }, 0);\n\n      if (avgApr) {\n        return this.BNify(avgApr).div(totalAllocation);\n      }\n    }\n    return null;\n  }\n  getFrequencySeconds = (frequency, quantity = 1) => {\n    const frequency_seconds = {\n      hour: 3600,\n      day: 86400,\n      week: 604800\n    };\n    return frequency_seconds[frequency] * quantity;\n  }\n  getIdleStakingRewardsTxs = async () => {\n    const idleTokenConfig = this.getGlobalConfig(['govTokens', 'IDLE']);\n    const feeDistributorConfig = this.getGlobalConfig(['tools', 'stake', 'props', 'availableTokens', 'IDLE', 'feeDistributor']);\n    const etherscanInfo = this.getGlobalConfig(['network', 'providers', 'etherscan']);\n    const etherscanApiUrl = etherscanInfo.endpoints[1];\n    const etherscanEndpoint = `${etherscanApiUrl}?module=account&action=tokentx&address=${feeDistributorConfig.address}&sort=desc`;\n    const etherscanTxlist = await this.makeEtherscanApiRequest(etherscanEndpoint, etherscanInfo.keys, 3600);\n    // console.log('getIdleStakingRewardsTxs',etherscanEndpoint,etherscanTxlist);\n    if (etherscanTxlist && etherscanTxlist.data && etherscanTxlist.data.result && typeof etherscanTxlist.data.result.filter === 'function') {\n      return etherscanTxlist.data.result.filter(tx => (tx.contractAddress.toLowerCase() === idleTokenConfig.address.toLowerCase() && tx.to.toLowerCase() === feeDistributorConfig.address.toLowerCase() && this.BNify(tx.value).gt(0)));\n    }\n    return [];\n  }\n  getProtocolInfoByAddress = (addr) => {\n    return this.props.tokenConfig.protocols.find(c => c.address.toLowerCase() === addr.toLowerCase());\n  }\n  integerValue = value => {\n    return this.BNify(value).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  normalizeTokenDecimals = tokenDecimals => {\n    return this.BNify(`1e${tokenDecimals}`);\n  }\n  normalizeTokenAmount = (tokenBalance, tokenDecimals, round = true) => {\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    return this.BNify(tokenBalance).times(normalizedTokenDecimals).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  fixTokenDecimals = (tokenBalance, tokenDecimals, exchangeRate = null) => {\n    if (!tokenDecimals) {\n      return this.BNify(tokenBalance);\n    }\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    let balance = this.BNify(tokenBalance).div(normalizedTokenDecimals);\n    if (exchangeRate && !exchangeRate.isNaN()) {\n      balance = balance.times(exchangeRate);\n    }\n    return balance;\n  }\n  checkContractPaused = async (contractName = null) => {\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const contractPaused = await this.genericContractCallCached(contractName, 'paused').catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n    // this.customLog('checkContractPaused',this.props.tokenConfig.idle.token,contractPaused);\n    return contractPaused;\n  }\n  getStoredItem = (key, parse_json = true, return_default = null) => {\n    let output = return_default;\n    if (window.localStorage) {\n      const item = localStorage.getItem(key);\n      if (item) {\n        output = item;\n        if (parse_json) {\n          output = JSON.parse(item);\n        }\n      }\n    }\n    if (!output) {\n      return return_default;\n    }\n    return output;\n  }\n  clearStoredData = (excludeKeys = []) => {\n    if (window.localStorage) {\n\n      if (!excludeKeys || !excludeKeys.length) {\n        return window.localStorage.clear();\n      }\n\n      const storedKeysToRemove = [];\n      for (let i = 0; i < window.localStorage.length; i++) {\n        const storedKey = window.localStorage.key(i);\n        if (!excludeKeys.includes(storedKey)) {\n          storedKeysToRemove.push(storedKey);\n        }\n      }\n      storedKeysToRemove.forEach((storedKey) => {\n        this.removeStoredItem(storedKey)\n      });\n    }\n  }\n  removeStoredItem = (key) => {\n    if (window.localStorage) {\n      window.localStorage.removeItem(key);\n      return true;\n    }\n    return false;\n  }\n  setLocalStorage = (key, value, stringify = false) => {\n    if (window.localStorage) {\n      try {\n        value = stringify ? JSON.stringify(value) : value;\n        window.localStorage.setItem(key, value);\n        return true;\n      } catch (error) {\n        // this.customLog('setLocalStorage',error);\n        window.localStorage.removeItem(key);\n      }\n    }\n    return false;\n  }\n  checkRebalance = async (tokenConfig) => {\n    if (!tokenConfig && this.props.tokenConfig) {\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!tokenConfig) {\n      return false;\n    }\n\n    const lastAllocationsPromises = [];\n    const allocations = await this.genericContractCall(tokenConfig.idle.token, 'getAllocations');\n\n    if (!allocations || !allocations.length) {\n      return false;\n    }\n\n    for (let protocolIndex = 0; protocolIndex < allocations.length; protocolIndex++) {\n      const lastAllocationsPromise = new Promise(async (resolve, reject) => {\n        try {\n          const lastAllocations = await this.genericContractCall(tokenConfig.idle.token, 'lastAllocations', [protocolIndex]);\n          resolve(lastAllocations);\n        } catch (error) {\n          console.log(error);\n          resolve(null);\n        }\n      });\n      lastAllocationsPromises.push(lastAllocationsPromise);\n    }\n\n    const newAllocations = await Promise.all(lastAllocationsPromises);\n\n    if (!allocations || !newAllocations) {\n      return true;\n    }\n\n    const diff = allocations.filter((alloc, index) => alloc !== newAllocations[index]);\n\n    return diff.length > 0;\n  }\n  checkMigration = async (tokenConfig, account) => {\n\n    if (!tokenConfig || !account) {\n      return false;\n    }\n\n    let migrationEnabled = false;\n    let oldContractBalance = null;\n    let oldContractTokenDecimals = null;\n    // let migrationContractApproved = false;\n    let oldContractBalanceFormatted = null;\n\n    // Check migration contract enabled and balance\n    if (tokenConfig.migration && tokenConfig.migration.enabled) {\n      const oldContractName = tokenConfig.migration.oldContract.name;\n      const oldContract = this.getContractByName(oldContractName);\n      const migrationContract = this.getContractByName(tokenConfig.migration.migrationContract.name);\n\n      // this.customLog(oldContractName,tokenConfig.migration.migrationContract.name);\n\n      if (oldContract && migrationContract) {\n        // Get old contract token decimals\n        oldContractTokenDecimals = await this.getTokenDecimals(oldContractName);\n\n        // this.customLog('Migration - token decimals',oldContractTokenDecimals ? oldContractTokenDecimals.toString() : null);\n\n        // Check migration contract approval\n        // migrationContractApproved = await this.checkMigrationContractApproved();\n\n        // this.customLog('Migration - approved',migrationContractApproved ? migrationContractApproved.toString() : null);\n\n        // Check old contractBalance\n        oldContractBalance = await this.getContractBalance(oldContractName, account);\n\n        if (oldContractBalance) {\n          oldContractBalanceFormatted = this.fixTokenDecimals(oldContractBalance, oldContractTokenDecimals);\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.BNify(oldContractBalance).gt(0);\n        }\n\n        // this.customLog('Migration - oldContractBalance',oldContractName,account,oldContractBalance,oldContractBalanceFormatted);\n      }\n    }\n\n    // Set migration contract balance\n    return {\n      migrationEnabled,\n      oldContractBalance,\n      oldContractTokenDecimals,\n      oldContractBalanceFormatted,\n    };\n  }\n\n  getContractEvents = async (contractName, eventName, params = {}) => {\n    return await this.getContractPastEvents(contractName, eventName, params);\n  }\n\n  estimateMethodGasUsage = async (contractName, methodName, methodParams = [], account = null) => {\n    account = account || this.props.account;\n    if (!account) {\n      return null;\n    }\n    const contract = this.getContractByName(contractName);\n    if (contract && contract.methods[methodName]) {\n      const functionCall = contract.methods[methodName](...methodParams);\n\n      let gasPrice = null;\n      let gasLimit = null;\n\n      try {\n        [\n          gasPrice,\n          gasLimit\n        ] = await Promise.all([\n          this.props.web3.eth.getGasPrice(),\n          functionCall.estimateGas({ from: account })\n        ]);\n      } catch (error) {\n\n      }\n\n      if (gasPrice && gasLimit) {\n        return this.fixTokenDecimals(this.fixTokenDecimals(gasPrice, 9).times(gasLimit), 9);\n      }\n    }\n\n    return this.BNify(0);\n  }\n\n  executeMetaTransaction = async (contract, userAddress, signedParameters, callback, callback_receipt) => {\n    try {\n\n      // const gasLimit = await contract.methods\n      //   .executeMetaTransaction(userAddress, ...signedParameters)\n      //   .estimateGas({ from: userAddress });\n\n      // this.customLog(gasLimit);\n\n      const gasPrice = await this.props.web3.eth.getGasPrice();\n\n      const tx = contract.methods\n        .executeMetaTransaction(userAddress, ...signedParameters)\n        .send({\n          from: userAddress,\n          gasPrice\n          // gasLimit\n        });\n\n      tx.on(\"transactionHash\", function (hash) {\n        this.customLog(`Transaction sent by relayer with hash ${hash}`);\n        callback_receipt()\n      }).once(\"confirmation\", function (confirmationNumber, receipt) {\n        this.customLog(\"Transaction confirmed on chain\", receipt);\n        callback_receipt(receipt);\n      });\n    } catch (error) {\n      this.customLog(error);\n      callback(null, error);\n    }\n  }\n\n  getSignatureParameters_v4 = signature => {\n    if (!this.props.web3.utils.isHexStrict(signature)) {\n      throw new Error(\n        'Given value \"'.concat(signature, '\" is not a valid hex string.')\n      );\n    }\n    var r = signature.slice(0, 66);\n    var s = \"0x\".concat(signature.slice(66, 130));\n    var v = \"0x\".concat(signature.slice(130, 132));\n    v = this.props.web3.utils.hexToNumber(v);\n    if (![27, 28].includes(v)) v += 27;\n    return {\n      r: r,\n      s: s,\n      v: v\n    };\n  };\n\n  constructMetaTransactionMessage = (nonce, chainId, functionSignature, contractAddress) => {\n    return ethereumjsABI.soliditySHA3(\n      [\"uint256\", \"address\", \"uint256\", \"bytes\"],\n      [nonce, contractAddress, chainId, toBuffer(functionSignature)]\n    );\n  }\n\n  checkBiconomyLimits = async (userAddress) => {\n    const biconomyInfo = this.getGlobalConfig(['network', 'providers', 'biconomy']);\n    const res = await this.makeRequest(`${biconomyInfo.endpoints.limits}?userAddress=${userAddress}&apiId=${biconomyInfo.params.apiId}`, null, {\n      headers: {\n        'x-api-key': biconomyInfo.params.apiKey\n      }\n    });\n\n    if (res && res.data) {\n      return res.data;\n    }\n\n    return null;\n  }\n\n  sendTxWithPermit = async (contractName, methodName, methodParams, nonce, callback, callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      callback(null, 'Contract not found');\n      return false;\n    }\n\n    if (!contract.methods[methodName]) {\n      callback(null, 'Method not found');\n      return false;\n    }\n\n    const functionSignature = contract.methods[methodName](...methodParams).encodeABI();\n\n    try {\n      const userAddress = this.props.account;\n      const chainId = this.getRequiredNetworkId();\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, methodName, methodParams.concat([nonce, r, s, v]), callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      callback(null, error);\n      return false;\n    }\n  }\n\n  buildBiconomyErc20ForwarderTx = async (contractName, tokenAddress, permitType, callData, gasLimit) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      return false;\n    }\n\n    // console.log('Build Tx ',contract._address,tokenAddress,Number(gasLimit),callData);\n\n    const buildParams = {\n      permitType,\n      data: callData,\n      token: tokenAddress,\n      to: contract._address,\n      txGas: parseInt(gasLimit)\n    };\n\n    // console.log('buildBiconomyErc20ForwarderTx',buildParams);\n\n    //Create the call data that the recipient contract will receive\n    const tx = await this.props.erc20ForwarderClient.buildTx(buildParams);\n\n    return tx;\n  }\n\n  getTransactionReceipt = async (hash) => {\n    return await (new Promise(async (resolve, reject) => {\n      this.props.web3.eth.getTransactionReceipt(hash, (err, tx) => {\n        if (err) {\n          reject(err);\n        }\n        resolve(tx);\n      });\n    }));\n  }\n\n  sendBiconomyTxWithErc20Forwarder = async (req, metaInfo, callback, callback_receipt) => {\n\n    let transactionHash = null;\n\n    try {\n      const txResponse = await this.props.erc20ForwarderClient.permitAndSendTxEIP712({ req, metaInfo });\n      transactionHash = txResponse.txHash;\n      // console.log('permitAndSendTxEIP712',transactionHash);\n    } catch (error) {\n      // console.log('permitAndSendTxEIP712 ERROR',error);\n      callback(null, true);\n      return false;\n    }\n\n    if (!transactionHash) {\n      // console.log('!transactionHash ERROR');\n      callback(null, true);\n      return false;\n    }\n\n    const tx = {\n      method: 'mintIdleToken',\n      transactionHash\n    };\n    // console.log('sendBiconomyTxWithErc20Forwarder - TX',tx);\n    callback_receipt(tx);\n\n    // fetch mined transaction receipt \n    const fetchReceiptIntervalId = window.setInterval(() => {\n      this.props.web3.eth.getTransactionReceipt(transactionHash, (err, receipt) => {\n        // console.log('sendBiconomyTxWithErc20Forwarder - RECEIPT',transactionHash,err,receipt);\n        if (!err && receipt) {\n          window.clearInterval(fetchReceiptIntervalId);\n          tx.txReceipt = receipt;\n          tx.status = !err && receipt.status ? 'success' : 'error';\n\n          callback(tx, err);\n\n          if (typeof window.updateTransaction === 'function') {\n            window.updateTransaction(tx, transactionHash, tx.status, null);\n          }\n        }\n      });\n    }, 3000);\n\n    return true;\n  }\n\n  sendBiconomyTxWithPersonalSign = async (contractName, functionSignature, callback, callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      callback(null, 'Contract not found');\n      return false;\n    }\n\n    try {\n      const userAddress = this.props.account;\n      const nonce = await contract.methods.getNonce(userAddress).call();\n      const chainId = this.getRequiredNetworkId();\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      console.error(error);\n      callback(null, error);\n      return false;\n    }\n  }\n\n  signPermitEIP2612 = async (contractAddress, erc20Name, owner, spender, value, nonce, deadline, chainId) => {\n    if (chainId === undefined) {\n      const result = await this.props.web3.eth.getChainId();\n      chainId = parseInt(result);\n    }\n\n    const domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permit = [\n      { name: \"owner\", type: \"address\" },\n      { name: \"spender\", type: \"address\" },\n      { name: \"value\", type: \"uint256\" },\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"deadline\", type: \"uint256\" },\n    ];\n\n    const domainData = {\n      version: \"2\",\n      name: erc20Name,\n      chainId: chainId,\n      verifyingContract: contractAddress\n    };\n\n    const message = {\n      owner,\n      spender,\n      value,\n      nonce,\n      deadline,\n    };\n\n    const data = JSON.stringify({\n      types: {\n        EIP712Domain: domain,\n        Permit: permit,\n      },\n      primaryType: \"Permit\",\n      domain: domainData,\n      message: message\n    });\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        jsonrpc: '2.0',\n        id: Date.now().toString().substring(9),\n        method: \"eth_signTypedData_v4\",\n        params: [owner, data],\n        from: owner\n      }, (error, res) => {\n        if (error) {\n          return reject(error);\n        }\n\n        resolve(res.result);\n      });\n    });\n  }\n\n  signPermit = async (baseContractName, holder, spenderContractName, addToNonce = 0, value = null) => {\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract) {\n      return false;\n    }\n\n    const result = await this.props.web3.eth.net.getId();\n    let chainId = parseInt(result);\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permitConfig = this.getGlobalConfig(['permit', baseContractName]);\n\n    const expiry = Math.round(new Date().getTime() / 1000 + 3600);\n    let nonce = permitConfig.nonceMethod ? await baseContract.methods[permitConfig.nonceMethod](holder).call() : null;\n    if (addToNonce > 0) {\n      nonce = parseInt(nonce) + parseInt(addToNonce);\n    }\n    nonce = nonce.toString();\n\n    const Permit = permitConfig.type;\n    const EIPVersion = permitConfig.EIPVersion;\n\n    const spender = spenderContract._address;\n    const verifyingContract = baseContract._address;\n\n    const permitName = permitConfig.name || baseContractName;\n\n    const domain = {\n      chainId,\n      name: permitName,\n      verifyingContract,\n      version: permitConfig.version.toString() || '1',\n    };\n\n    let message = {};\n\n    switch (EIPVersion) {\n      case 2612:\n        const owner = holder;\n        const deadline = expiry;\n        // Unlimited allowance\n        value = value || this.integerValue(this.BNify(2).pow(256).minus(1));\n        message = {\n          value,\n          nonce,\n          owner,\n          spender,\n          deadline\n        };\n        break;\n      default:\n        message = {\n          holder,\n          nonce,\n          expiry,\n          spender,\n          allowed: true,\n        };\n        break;\n    }\n\n    const data = JSON.stringify({\n      domain,\n      message,\n      types: {\n        Permit,\n        EIP712Domain\n      },\n      primaryType: 'Permit',\n    });\n\n    // console.log('Permit',JSON.parse(data));\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        from: holder,\n        jsonrpc: '2.0',\n        params: [holder, data],\n        method: 'eth_signTypedData_v4',\n        id: Date.now().toString().substring(9),\n      }, (error, response) => {\n        if (error || (response && response.error)) {\n          return resolve(null);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          signedParameters.nonce = nonce;\n          signedParameters.expiry = expiry;\n          return resolve(signedParameters);\n        }\n      });\n    });\n  }\n\n  sendTxWithPermit = async (baseContractName, holder, spenderContractName, methodName, methodParams, callback, callback_receipt, callback_permit = null) => {\n\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract) {\n      callback(null, 'Contract not found');\n      return false;\n    }\n\n    const signedParameters = await this.signPermit(baseContractName, holder, spenderContractName);\n\n    if (signedParameters) {\n      const { expiry, nonce, r, s, v } = signedParameters;\n      const permitParams = [expiry, v, r, s];\n\n      const methodAbi = spenderContract._jsonInterface.find(f => f.name === methodName);\n      const useNonce = methodAbi ? methodAbi.inputs.find(i => i.name === 'nonce') : true;\n      if (!isNaN(parseInt(nonce)) && useNonce) {\n        permitParams.unshift(nonce);\n      }\n      const params = methodParams.concat(permitParams);\n      this.contractMethodSendWrapper(spenderContractName, methodName, params, callback, callback_receipt);\n    } else {\n      callback(null, 'Permit cancelled');\n    }\n  }\n\n  sendSignedTx = async (contractName, contractAddress, functionSignature, callback, callback_receipt) => {\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const MetaTransaction = [\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"from\", type: \"address\" },\n      { name: \"functionSignature\", type: \"bytes\" }\n    ];\n\n    const chainId = await this.props.web3.eth.getChainId();\n\n    const domainData = {\n      chainId,\n      version: '1',\n      name: contractName,\n      verifyingContract: contractAddress\n    };\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      callback(null, 'Contract not found');\n      return false\n    }\n\n    let userAddress = this.props.account;\n    let nonce = await contract.methods.getNonce(userAddress).call();\n    let message = {};\n    message.nonce = nonce;\n    message.from = userAddress;\n    message.functionSignature = functionSignature;\n\n    const dataToSign = JSON.stringify({\n      types: {\n        EIP712Domain,\n        MetaTransaction\n      },\n      domain: domainData,\n      primaryType: \"MetaTransaction\",\n      message\n    });\n\n    // this.customLog('dataToSign',dataToSign);\n\n    this.props.web3.currentProvider.send(\n      {\n        jsonrpc: \"2.0\",\n        id: 999999999999,\n        from: userAddress,\n        method: \"eth_signTypedData_v4\",\n        params: [userAddress, dataToSign]\n      },\n      (error, response) => {\n        if (error || (response && response.error)) {\n          return callback(null, error);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          const { r, s, v } = signedParameters;\n\n          this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n        }\n      }\n    );\n  }\n\n  checkTokenApproved = async (contractName, contractAddr, walletAddr) => {\n    const [\n      balance,\n      allowance\n    ] = await Promise.all([\n      this.getTokenBalance(contractName, walletAddr, false),\n      this.getAllowance(contractName, contractAddr, walletAddr)\n    ]);\n    this.customLog('checkTokenApproved', contractName, this.BNify(allowance).toFixed(), this.BNify(balance).toFixed(), (allowance && this.BNify(allowance).gte(this.BNify(balance))));\n    return allowance && this.BNify(allowance).gte(this.BNify(balance));\n  }\n  getAllowance = async (contractName, contractAddr, walletAddr) => {\n    if (!contractName || !contractAddr || !walletAddr) {\n      return false;\n    }\n    this.customLog('getAllowance', contractName, contractAddr, walletAddr);\n    return await this.genericContractCall(\n      contractName, 'allowance', [walletAddr, contractAddr]\n    );\n  }\n  contractMethodSendWrapperWithValue = (contractName, methodName, params, value, callback, callback_receipt, txData) => {\n    this.props.contractMethodSendWrapper(contractName, methodName, params, value, (tx) => {\n      if (typeof callback === 'function') {\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function') {\n        callback_receipt(tx);\n      }\n    }, null, txData);\n  }\n  contractMethodSendWrapper = (contractName, methodName, params, callback, callback_receipt, txData = null, send_raw = false, raw_tx_data = null) => {\n    try {\n      this.props.contractMethodSendWrapper(contractName, methodName, params, null, (tx) => {\n        if (typeof callback === 'function') {\n          callback(tx);\n        }\n      }, (tx) => {\n        if (typeof callback_receipt === 'function') {\n          callback_receipt(tx);\n        }\n      }, null, txData, send_raw, raw_tx_data);\n    } catch (error) {\n      callback(null, error);\n    }\n  }\n  disableERC20 = (contractName, address, callback, callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('0') // max uint solidity\n    ], null, (tx) => {\n      if (typeof callback === 'function') {\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function') {\n        callback_receipt(tx);\n      }\n    });\n  }\n  enableERC20 = (contractName, address, callback, callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('-1') // max uint solidity\n    ], null, (tx) => {\n      if (typeof callback === 'function') {\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function') {\n        callback_receipt(tx);\n      }\n    });\n  }\n  getBestToken = async (networkId=null,availableTokens=null) => {\n    let highestValue = null;\n    let selectedToken = null;\n    if (!networkId){\n      networkId = this.getRequiredNetworkId();\n    }\n    const aprs = await this.getAprsFromApi(networkId);\n    if (aprs && aprs.lendRates){\n      aprs.lendRates.forEach( aprInfo => {\n        const tokenAPR = this.BNify(aprInfo.apy);\n        if (tokenAPR){\n          const token = aprInfo.tokenSymbol;\n          if ((!highestValue || highestValue.lt(tokenAPR)) && (!availableTokens || availableTokens[token])){\n            highestValue = tokenAPR;\n            selectedToken = token;\n          }\n        }\n      });\n    } else if (availableTokens) {\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const tokenAPR = await this.getTokenAprs(tokenConfig);\n        if (tokenAPR && tokenAPR.avgApr !== null){\n          if (!highestValue || highestValue.lt(tokenAPR.avgApr)){\n            highestValue = tokenAPR.avgApr;\n            selectedToken = token;\n          }\n        }\n      });\n    }\n    return selectedToken;\n  }\n  getTrancheStakedBalance = async (contractName,walletAddr,decimals=null,methodName='usersStakes') => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `trancheStakedBalance_${contractName}_${walletAddr}_${decimals}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let stakedBalance = await this.genericContractCall(contractName, methodName, [walletAddr]);\n    if (stakedBalance) {\n      if (decimals) {\n        stakedBalance = this.fixTokenDecimals(stakedBalance, decimals);\n      }\n      stakedBalance = this.BNify(stakedBalance);\n\n      if (!stakedBalance.isNaN()) {\n        return this.setCachedDataWithLocalStorage(cachedDataKey, stakedBalance, 30);\n      }\n    }\n    return this.BNify(0);\n  }\n  getTrancheStakingRewards = async (account, trancheConfig, methodName='expectedUserReward') => {\n    const stakingRewards = {};\n    await this.asyncForEach(trancheConfig.CDORewards.stakingRewards, async (tokenConfig) => {\n      const tokenGlobalConfig = this.getGlobalConfig(['stats', 'tokens', tokenConfig.token.toUpperCase()]);\n      tokenConfig = { ...tokenConfig, ...tokenGlobalConfig };\n\n      const stakingRewardsContract = this.getContractByName(trancheConfig.CDORewards.name);\n      const methodAbi = stakingRewardsContract._jsonInterface.find(f => f.name === methodName);\n\n      const methodParams = [account];\n      if (methodAbi.inputs.length>1){\n        methodParams.push(tokenConfig.address);\n      }\n\n      const tokenAmount = await this.genericContractCallCached(trancheConfig.CDORewards.name, methodName, methodParams);\n      stakingRewards[tokenConfig.token] = this.fixTokenDecimals(tokenAmount, tokenConfig.decimals);\n    });\n\n    // console.log('getTrancheStakingRewards',stakingRewards);\n\n    return stakingRewards;\n  }\n  loadTrancheFieldRaw = async (field, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens = true) => {\n    const result = await this.loadTrancheField(field, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens, false);\n    return result;\n  }\n  loadTrancheField = async (field, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account = null, addGovTokens = true, formatValue = true, addTokenName = true) => {\n    let output = null;\n    let rewardsTokensInfo = null;\n    const maxPrecision = (fieldProps && parseInt(fieldProps.maxPrecision)>0) ? fieldProps.maxPrecision : 5;\n    const decimals = (fieldProps && parseInt(fieldProps.decimals)>0) ? fieldProps.decimals : (this.props.isMobile ? 2 : 3);\n    const minPrecision = (fieldProps && parseInt(fieldProps.minPrecision)>0) ? fieldProps.minPrecision : (this.props.isMobile ? 3 : 4);\n\n    const internal_view = this.getQueryStringParameterByName('internal_view');\n    const stakingRewards = tokenConfig && tranche ? tokenConfig[tranche].CDORewards.stakingRewards : [];\n    const stakingRewardsEnabled = stakingRewards.length>0 ? stakingRewards.filter( t => t.enabled ) : null;\n    const stakingEnabled = stakingRewardsEnabled && stakingRewardsEnabled.length>0 ? true : false;\n    const tokenName = this.getGlobalConfig(['stats', 'tokens', token.toUpperCase(), 'label']) || this.capitalize(token);\n\n    // console.log('loadTrancheField',protocol,token,tranche,stakingRewards,stakingEnabled);\n\n    const strategyConfig = tokenConfig.Strategy;\n    const show_idle_apy = internal_view && parseInt(internal_view) === 1;\n    \n    // Create Tranche Strategy contract\n    const idleStrategyAddress = await this.genericContractCallCached(tokenConfig.CDO.name, 'strategy');\n    if (idleStrategyAddress) {\n      await this.props.initContract(strategyConfig.name, idleStrategyAddress, strategyConfig.abi);\n    }\n\n    const idleGovTokenConfig = this.getGlobalConfig(['govTokens', 'IDLE']);\n    switch (field) {\n      case 'protocolName':\n        output = (this.getGlobalConfig(['stats', 'protocols', protocol, 'label']) || this.capitalize(protocol)).toUpperCase();\n      break;\n      case 'tokenName':\n        output = tokenName;\n      break;\n      case 'trancheType':\n        output = (this.getGlobalConfig(['tranches', tranche, 'baseName']) || '').toUpperCase();\n        // console.log('trancheType',tranche,trancheConfig,output);\n      break;\n      case 'pool':\n        let poolSize = await this.genericContractCallCached(tokenConfig.CDO.name, 'getContractValue');\n        if (!this.BNify(poolSize).isNaN()) {\n          output = this.fixTokenDecimals(poolSize, tokenConfig.CDO.decimals);\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision);\n          }\n        }\n      break;\n      case 'poolConverted':\n        output = await this.loadTrancheFieldRaw('pool', fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens);\n        output = await this.convertTrancheTokenBalance(output, tokenConfig);\n        if (formatValue) {\n          output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n        }\n      break;\n      case 'seniorPoolNoLabel':\n        output = await this.loadTrancheField('tranchePool', fieldProps, protocol, token, tranche, tokenConfig, tokenConfig.AA, account, addGovTokens, formatValue, false);\n      break;\n      case 'juniorPoolNoLabel':\n        output = await this.loadTrancheField('tranchePool', fieldProps, protocol, token, tranche, tokenConfig, tokenConfig.BB, account, addGovTokens, formatValue, false);\n      break;\n      case 'seniorPool':\n        output = await this.loadTrancheField('tranchePool', fieldProps, protocol, token, tranche, tokenConfig, tokenConfig.AA, account, addGovTokens);\n      break;\n      case 'juniorPool':\n        output = await this.loadTrancheField('tranchePool', fieldProps, protocol, token, tranche, tokenConfig, tokenConfig.BB, account, addGovTokens);\n      break;\n      case 'seniorApy':\n        output = await this.loadTrancheField('trancheApy', fieldProps, protocol, token, tranche, tokenConfig, tokenConfig.AA, account, addGovTokens);\n      break;\n      case 'juniorApy':\n        output = await this.loadTrancheField('trancheApy', fieldProps, protocol, token, tranche, tokenConfig, tokenConfig.BB, account, addGovTokens);\n      break;\n      case 'tranchePool':\n        let [\n          totalSupply,\n          virtualPrice\n        ] = await Promise.all([\n          this.getTokenTotalSupply(trancheConfig.name, 'latest', 180),\n          this.loadTrancheField('tranchePrice', fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n        output = this.BNify(0);\n        if (!this.BNify(virtualPrice).isNaN() && !this.BNify(totalSupply).isNaN()) {\n          output = this.fixTokenDecimals(totalSupply, tokenConfig.CDO.decimals).times(virtualPrice);\n        }\n        if (formatValue) {\n          output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n        }\n      break;\n      case 'tranchePoolConverted':\n        output = await this.loadTrancheFieldRaw('tranchePool', fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens);\n        output = await this.convertTrancheTokenBalance(output, tokenConfig);\n        if (formatValue) {\n          output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n        }\n      break;\n      case 'trancheDeposited':\n        const deposited = await this.getAmountDepositedTranche(tokenConfig, trancheConfig, account);\n        output = output || this.BNify(0);\n        output = this.BNify(deposited);\n        if (output.gt(0)) {\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n          }\n        } else {\n          output = formatValue ? '-' : null;\n        }\n      break;\n      case 'trancheFee':\n        output = await this.genericContractCallCached(tokenConfig.CDO.name, 'fee');\n        if (output) {\n          output = this.BNify(output).div(this.BNify(100000));\n        }\n      break;\n      case 'trancheRealPrice':\n        output = await this.genericContractCall(tokenConfig.CDO.name, 'tranchePrice', [trancheConfig.address]);\n        if (output) {\n          output = this.fixTokenDecimals(output, trancheConfig.decimals);\n        }\n      break;\n      case 'tranchePrice':\n        output = await this.genericContractCall(tokenConfig.CDO.name, 'virtualPrice', [trancheConfig.address]);\n        if (output) {\n          output = this.fixTokenDecimals(output, trancheConfig.decimals);\n        }\n      break;\n      case 'trancheStaked':\n        output = formatValue ? 'N/A' : this.BNify(0);\n        if (stakingEnabled){\n          let [\n            lastPrice1,\n            staked1\n          ] = await Promise.all([\n            this.loadTrancheField(`tranchePrice`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n            this.getTrancheStakedBalance(trancheConfig.CDORewards.name, account, trancheConfig.CDORewards.decimals,trancheConfig.functions.stakedBalance)\n          ]);\n\n          if (staked1 && lastPrice1) {\n            output = this.BNify(staked1).times(lastPrice1);\n            // console.log('trancheStaked',staked1.toString(),lastPrice1.toString(),output.toString());\n            if (formatValue) {\n              output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n            }\n          }\n        }\n      break;\n      case 'trancheRedeemable':\n        let [\n          deposited1,\n          lastPrice\n        ] = await Promise.all([\n          this.getTokenBalance(trancheConfig.name, account),\n          this.loadTrancheFieldRaw(`tranchePrice`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n        output = formatValue ? '-' : null;\n        if (deposited1 && lastPrice) {\n          output = this.BNify(deposited1).times(lastPrice);\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'trancheRedeemableWithStaked':\n        let [\n          redeemable1,\n          staked2\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheRedeemable`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheStaked`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n        output = formatValue ? '-' : null;\n        if (redeemable1 && staked2) {\n          output = this.BNify(redeemable1).plus(staked2);\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'earningsCounter':\n        let [\n          earningsStart,\n          trancheApy2,\n          deposited3\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`earnings`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheApy`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheDeposited`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n        ]);\n\n\n        if (deposited3 && earningsStart && trancheApy2) {\n          const earningsEnd = deposited3.gt(0) ? deposited3.times(trancheApy2.div(100)).plus(earningsStart) : 0;\n\n          output = {\n            earningsEnd,\n            earningsStart\n          };\n        }\n      break;\n      case 'feesCounter':\n        let [\n          trancheFee,\n          earningsCounter\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheFee`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`earningsCounter`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n        ]);\n\n        if (trancheFee && earningsCounter) {\n          const feesStart = earningsCounter.earningsStart.times(trancheFee);\n          const feesEnd = earningsCounter.earningsEnd.times(trancheFee);\n\n          // console.log('feesCounter',feesStart.toString(),feesEnd.toString());\n\n          output = {\n            feesEnd,\n            feesStart\n          };\n        }\n      break;\n      case 'earnings':\n        const [\n          deposited4,\n          redeemable3\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheDeposited`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheRedeemableWithStaked`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n        if (deposited4 && redeemable3) {\n          output = this.BNify(redeemable3).minus(deposited4);\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'earningsPerc':\n        const [\n          deposited2,\n          redeemable2\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheDeposited`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheRedeemableWithStaked`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n        if (!this.BNify(redeemable2).isNaN() && !this.BNify(deposited2).isNaN()){\n          output = redeemable2.div(deposited2).minus(1).times(100);\n          if (formatValue) {\n            output = output.toFixed(decimals) + '%';\n          }\n        }\n      break;\n      case 'trancheApy':\n      case 'trancheApyWithTooltip':\n        let tokensApy = {};\n        let trancheApy = null;\n        let apy = this.BNify(0);\n        let trancheApyDecimals = 2;\n        let baseApy = this.BNify(0);\n\n        output = this.BNify(0);\n        [\n          rewardsTokensInfo,\n          trancheApy\n        ] = await Promise.all([\n          this.getTrancheRewardTokensInfo(tokenConfig,trancheConfig),\n          this.genericContractCallCached(tokenConfig.CDO.name, 'getApr', [trancheConfig.address])\n        ]);\n        // console.log('trancheApy',this.props.network.required,tokenConfig.CDO.name,trancheConfig.address,trancheApy);\n        if (trancheApy){\n          let apr = this.fixTokenDecimals(trancheApy,tokenConfig.CDO.decimals);\n\n          // Hot-fix for convex\n          if (protocol === 'convex'){\n            apr = apr.times(100);\n          }\n\n          apy = this.apr2apy(apr.div(100)).times(100);\n          baseApy = apy;\n\n          // console.log('trancheApy',tokenConfig.token,trancheApy.toString(),apr.toString(),apy.toString());\n\n          // tokensApy[tokenConfig.token] = baseApy;\n          \n          if (rewardsTokensInfo){\n            Object.keys(rewardsTokensInfo).forEach( token => {\n              const rewardTokenInfo = rewardsTokensInfo[token];\n              if (!this.BNify(rewardTokenInfo.apy).isNaN() && (token !== 'IDLE' || show_idle_apy)){\n                const tokenApy = this.BNify(rewardTokenInfo.apy);\n                apy = apy.plus(tokenApy);\n                // console.log('trancheApy',token,rewardTokenInfo,tokenApy.toString(),apy.toString());\n                tokensApy[token] = tokenApy;\n              }\n            });\n          }\n\n          if (apy.gt(9999)){\n            trancheApyDecimals = 0;\n            output = this.BNify(9999);\n          } else {\n            output = this.BNify(apy);\n          }\n          if (formatValue){\n            output = output.toFixed(trancheApyDecimals)+'%';\n            if (apy.gt(9999)){\n              output = `>${output}`;\n            }\n          }\n        } else {\n          baseApy = output;\n          if (formatValue){\n            output = output.toFixed(trancheApyDecimals)+'%';\n          }\n        }\n\n        if (field === 'trancheApyWithTooltip'){\n          const formattedApy = output;\n          output = {\n            baseApy,\n            tokensApy,\n            formattedApy\n          };\n        }\n      break;\n      case 'realizedApy':\n        const [\n          firstDepositTx,\n          earningsPerc\n        ] = await Promise.all([\n          this.getTrancheFirstDepositTx(tokenConfig, trancheConfig, account),\n          this.loadTrancheFieldRaw(`earningsPerc`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n        // console.log('realizedApy',earningsPerc.toString(),firstDepositTx);\n\n        if (earningsPerc && firstDepositTx) {\n          const secondsFromFirstTx = parseInt(Date.now() / 1000) - parseInt(firstDepositTx.timeStamp);\n          output = this.BNify(earningsPerc).times(31536000).div(secondsFromFirstTx);\n\n          // console.log('realizedApy2',firstDepositTx,earningsPerc.toString(),output.toString());\n\n          if (formatValue) {\n            output = output.toFixed(2) + '%';\n          }\n        }\n      break;\n      case 'trancheIDLELastHarvest':\n      case 'trancheIDLEDistribution':\n        output = null;\n        rewardsTokensInfo = await this.getTrancheRewardTokensInfo(tokenConfig, trancheConfig);\n        if (rewardsTokensInfo && rewardsTokensInfo.IDLE) {\n          if (field === 'trancheIDLEDistribution') {\n            output = this.fixDistributionSpeed(rewardsTokensInfo.IDLE.tokensPerSecond, idleGovTokenConfig.distributionFrequency);\n            if (formatValue) {\n              output = '+'+this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + ` IDLE/${idleGovTokenConfig.distributionFrequency}`\n            }\n          } else {\n            output = rewardsTokensInfo.IDLE.lastAmount;\n            if (formatValue) {\n              output = '+'+this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + ` IDLE <a href=\"${this.getEtherscanTransactionUrl(rewardsTokensInfo.IDLE.latestHarvest.transactionHash)}\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">(last harvest)</a>`\n            }\n          }\n        }\n\n        // console.log('loadTrancheField',field,protocol,token,tranche,rewardsTokensInfo,output);\n      break;\n      case 'AAIDLEDistribution':\n        output = this.abbreviateNumber('1234',decimals,maxPrecision,minPrecision)+` IDLE/day`;\n      break;\n      case 'trancheAPRSplitRatio':\n        output = await this.genericContractCall(tokenConfig.CDO.name,'trancheAPRSplitRatio');\n        output= output/1000;\n        output= output.toString()+\"/\"+(100-output).toString();\n      break;\n      case 'trancheAPRRatio':\n        output = await this.genericContractCall(tokenConfig.CDO.name,'trancheAPRSplitRatio');\n        output = this.BNify(output).div(1000);\n        if (tranche === 'BB'){\n          output = this.BNify(100).minus(output);\n        }\n        if (formatValue){\n          output = output.toFixed(0)+'%';\n        }\n      break;\n      case 'BBIDLEDistribution':\n        output = this.abbreviateNumber('4321', decimals, maxPrecision, minPrecision) + ` IDLE/day`;\n      break;\n      case 'statusBadge':\n      case 'trancheLimit':\n      case 'experimentalBadge':\n        output = await this.genericContractCall(tokenConfig.CDO.name,'limit');\n        if (output){\n          output = this.fixTokenDecimals(output, tokenConfig.CDO.decimals);\n\n          if (field === 'trancheLimit'){\n            if (output.gt(0)){\n              if (formatValue) {\n                output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n              }\n            } else {\n              output = this.BNify(0);\n              if (formatValue){\n                output = 'None';\n              }\n            }\n          }\n        }\n      break;\n      case 'govTokens':\n      case 'autoFarming':\n      case 'stakingRewards':\n        output = {};\n        const [\n          rewardsTokens,\n          incentiveTokens\n        ] = await Promise.all([\n          this.genericContractCall(strategyConfig.name, 'getRewardTokens'),\n          this.genericContractCall(tokenConfig.CDO.name, 'getIncentiveTokens')\n        ]);\n\n        // Pick Senior Tranche by default\n        if (!trancheConfig){\n          trancheConfig = tokenConfig.AA;\n        }\n\n        const stakingRewards = trancheConfig ? trancheConfig.CDORewards.stakingRewards.map(tokenConfig => (tokenConfig.address.toLowerCase())) : null;\n        const govTokens = field === 'stakingRewards' && stakingRewards ? stakingRewards : (field === 'govTokens' ? rewardsTokens : (field === 'autoFarming' && rewardsTokens ? rewardsTokens.filter(rewardTokenAddr => incentiveTokens && !incentiveTokens.map(addr => addr.toLowerCase()).includes(rewardTokenAddr.toLowerCase())) : incentiveTokens));\n\n        if (govTokens) {\n          govTokens.forEach(tokenAddress => {\n            const govTokenConfig = this.getTokenConfigByAddress(tokenAddress);\n            // Skip reward token if globally disabled\n            if (!govTokenConfig || !govTokenConfig.enabled) {\n              return;\n            }\n            // Skip reward token if not enabled for this specific tranche\n            const stakingRewardsTokenConfig = trancheConfig ? trancheConfig.CDORewards.stakingRewards.find(tokenConfig => tokenConfig.address.toLowerCase() === tokenAddress.toLowerCase()) : null;\n            if (stakingRewardsTokenConfig && !stakingRewardsTokenConfig.enabled) {\n              return;\n            }\n            output[govTokenConfig.token] = govTokenConfig;\n          });\n        }\n\n        // Add hard-coded tokens\n        if (tokenConfig[field] && typeof tokenConfig[field].forEach === 'function'){\n          tokenConfig[field].forEach( govToken => {\n            const govTokenConfig = this.getGlobalConfig(['stats','tokens',govToken]);\n            if (govTokenConfig){\n              output[govToken] = govTokenConfig;\n            }\n          });\n        }\n\n        // console.log('loadTrancheField',field,protocol,token,tranche,tokenConfig,trancheConfig,stakingRewards,govTokens,output);\n      break;\n      default:\n      break;\n    }\n\n    // console.log('loadTrancheField',field,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens,formatValue);\n\n    return output;\n  }\n  loadAssetField = async (field, token, tokenConfig, account, addGovTokens = true, addCurveApy = false) => {\n\n    let output = null;\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const internal_view = this.getQueryStringParameterByName('internal_view');\n    const showIdleAPR = internal_view && parseInt(internal_view) === 1;\n\n    // Remove gov tokens for risk adjusted strategy\n    const strategyInfo = this.getGlobalConfig(['strategies', this.props.selectedStrategy]);\n    if (addGovTokens && strategyInfo && typeof strategyInfo.addGovTokens !== 'undefined') {\n      addGovTokens = strategyInfo.addGovTokens;\n    }\n\n    // Take available tokens for gov tokens fields\n    let govTokenAvailableTokens = null;\n    if (this.props.selectedStrategy && this.props.selectedToken) {\n      const newTokenConfig = this.props.availableStrategies[this.props.selectedStrategy][this.props.selectedToken];\n      if (newTokenConfig) {\n        govTokenAvailableTokens = {};\n        govTokenAvailableTokens[newTokenConfig.token] = newTokenConfig;\n      }\n    } else if (!Object.keys(govTokens).includes(token)) {\n      govTokenAvailableTokens = {};\n      govTokenAvailableTokens[token] = tokenConfig;\n    }\n\n    switch (field) {\n      case 'amountLentCurve':\n        const [\n          curveAvgSlippage,\n          curveAvgBuyPrice,\n          curveTokenBalance,\n        ] = await Promise.all([\n          this.getCurveAvgSlippage(),\n          this.getCurveAvgBuyPrice([], account),\n          this.getCurveTokenBalance(account, true),\n        ]);\n\n        if (curveAvgBuyPrice && curveTokenBalance) {\n          output = this.BNify(curveTokenBalance).times(curveAvgBuyPrice);\n          if (curveAvgSlippage) {\n            output = output.minus(output.times(curveAvgSlippage));\n          }\n          // this.customLog('amountLentCurve',curveTokenBalance.toFixed(6),curveAvgBuyPrice.toFixed(6),curveAvgSlippage.toString(),output.toFixed(6));\n        }\n        break;\n      case 'earningsPercCurve':\n        let [amountLentCurve1, redeemableBalanceCurve] = await Promise.all([\n          this.loadAssetField('amountLentCurve', token, tokenConfig, account),\n          this.loadAssetField('redeemableBalanceCurve', token, tokenConfig, account)\n        ]);\n\n        if (amountLentCurve1 && redeemableBalanceCurve && amountLentCurve1.gt(0) && redeemableBalanceCurve.gt(0)) {\n          output = redeemableBalanceCurve.div(amountLentCurve1).minus(1).times(100);\n          // this.customLog('earningsPercCurve',redeemableBalanceCurve.toFixed(6),amountLentCurve1.toFixed(6),output.toFixed(6));\n        }\n        break;\n      case 'curveApy':\n        output = await this.getCurveAPY();\n        break;\n      case 'curveAvgSlippage':\n        output = await this.getCurveAvgSlippage();\n        break;\n      case 'redeemableBalanceCurve':\n        output = await this.getCurveRedeemableIdleTokens(account);\n        // this.customLog('earningsPercCurve',output.toFixed(6));\n        break;\n      case 'redeemableBalanceCounterCurve':\n        let [\n          curveApy,\n          amountLentCurve,\n          redeemableBalanceCurveStart\n        ] = await Promise.all([\n          this.loadAssetField('curveApy', token, tokenConfig, account),\n          this.loadAssetField('amountLentCurve', token, tokenConfig, account),\n          this.loadAssetField('redeemableBalanceCurve', token, tokenConfig, account),\n        ]);\n\n        let redeemableBalanceCurveEnd = null;\n\n        if (redeemableBalanceCurveStart && curveApy && amountLentCurve) {\n          const earningPerYear = amountLentCurve.times(curveApy.div(100));\n          redeemableBalanceCurveEnd = redeemableBalanceCurveStart.plus(earningPerYear);\n          // this.customLog('redeemableBalanceCounterCurve',amountLentCurve.toFixed(6),redeemableBalanceCurveStart.toFixed(6),redeemableBalanceCurveEnd.toFixed(6));\n        }\n\n        output = {\n          redeemableBalanceCurveEnd,\n          redeemableBalanceCurveStart\n        };\n        break;\n      case 'earningsPerc':\n        let [amountLent1, redeemableBalance1] = await Promise.all([\n          this.loadAssetField('amountLent', token, tokenConfig, account, false),\n          this.loadAssetField('redeemableBalance', token, tokenConfig, account, false)\n        ]);\n\n        if (amountLent1 && redeemableBalance1 && amountLent1.gt(0)) {\n          output = redeemableBalance1.div(amountLent1).minus(1).times(100);\n        }\n        break;\n      case 'daysFirstDeposit':\n        const depositTimestamp = await this.loadAssetField('depositTimestamp', token, tokenConfig, account);\n        if (depositTimestamp) {\n          const currTimestamp = parseInt(Date.now() / 1000);\n          output = (currTimestamp - depositTimestamp) / 86400;\n        }\n        break;\n      case 'pool':\n        if (Object.keys(govTokens).includes(token)) {\n          output = await this.getGovTokenPool(token, govTokenAvailableTokens);\n        } else {\n          output = await this.getTokenPool(tokenConfig, addGovTokens);\n        }\n        break;\n      case 'userDistributionSpeed':\n        switch (token) {\n          case 'COMP':\n            output = await this.getCompUserDistribution(account, govTokenAvailableTokens);\n            break;\n          case 'WMATIC':\n          case 'stkAAVE':\n            output = await this.getStkAaveUserDistribution(account, govTokenAvailableTokens);\n            break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getUserDistribution(account, govTokenAvailableTokens);\n            break;\n          default:\n            break;\n        }\n        if (output && !this.BNify(output).isNaN()) {\n          output = this.BNify(output).div(1e18);\n          if (output) {\n            output = this.fixDistributionSpeed(output, tokenConfig.distributionFrequency, tokenConfig.distributionMode);\n          }\n        }\n        break;\n      case 'idleDistribution':\n        const idleGovToken = this.getIdleGovToken();\n        const tokenName = this.getGlobalConfig(['governance', 'props', 'tokenName']);\n        const govTokenConfig = this.getGlobalConfig(['govTokens', tokenName]);\n        output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n\n        if (output) {\n\n          output = this.fixTokenDecimals(output, govTokenConfig.decimals);\n\n          const blocksPerYear = this.BNify(this.getGlobalConfig(['network', 'blocksPerYear']));\n          switch (govTokenConfig.distributionFrequency) {\n            case 'day':\n              const blocksPerDay = blocksPerYear.div(365.242199);\n              output = output.times(blocksPerDay);\n              break;\n            case 'week':\n              const blocksPerWeek = blocksPerYear.div(52.1429);\n              output = output.times(blocksPerWeek);\n              break;\n            case 'month':\n              const blocksPerMonth = blocksPerYear.div(12);\n              output = output.times(blocksPerMonth);\n              break;\n            case 'year':\n              output = output.times(blocksPerYear);\n              break;\n            default:\n              break;\n          }\n        }\n        break;\n      case 'distributionSpeed':\n        const selectedTokenConfig = govTokenAvailableTokens[this.props.selectedToken];\n        switch (token) {\n          case 'COMP':\n            output = await this.getCompDistribution(selectedTokenConfig);\n            break;\n          case 'WMATIC':\n          case 'stkAAVE':\n            output = await this.getStkAaveDistribution(selectedTokenConfig);\n            break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getSpeed(selectedTokenConfig.idle.address);\n            break;\n          default:\n            break;\n        }\n        if (output && !this.BNify(output).isNaN()) {\n          output = this.BNify(output).div(1e18);\n        }\n        break;\n      case 'apr':\n        switch (token) {\n          case 'COMP':\n            output = await this.getCompAvgApr(govTokenAvailableTokens);\n            break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getAvgApr(govTokenAvailableTokens);\n            break;\n          default:\n            const tokenAprs = await this.getTokenAprs(tokenConfig, false, addGovTokens, showIdleAPR);\n            if (tokenAprs && tokenAprs.avgApr !== null) {\n              output = tokenAprs.avgApr;\n            }\n            break;\n        }\n        break;\n      case 'apy':\n        const tokenApys = await this.getTokenAprs(tokenConfig, false, addGovTokens, showIdleAPR);\n\n        output = this.BNify(0);\n\n        if (tokenApys && !this.BNify(tokenApys.avgApy).isNaN()) {\n          output = this.BNify(tokenApys.avgApy);\n\n          if (addCurveApy) {\n            const curveAPY = await this.getCurveAPY();\n            if (curveAPY) {\n              output = output.plus(curveAPY);\n            }\n          }\n        } else {\n\n        }\n\n        // console.log('apy - OUTPUT - ',output);\n        break;\n      case 'avgAPY':\n        const [\n          tokenPrice,\n          firstDepositTx,\n          days\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getFirstDepositTx([token], account),\n          this.loadAssetField('daysFirstDeposit', token, tokenConfig, account)\n        ]);\n\n        if (tokenPrice && firstDepositTx && firstDepositTx[token]) {\n          const tokenPriceFirstDeposit = await this.getIdleTokenPrice(tokenConfig, firstDepositTx[token].blockNumber);\n          output = this.BNify(tokenPrice).div(tokenPriceFirstDeposit).minus(1).times(365).div(days).times(100);\n        }\n        break;\n      case 'avgAPY_old':\n        const [\n          daysFirstDeposit,\n          earningsPerc\n        ] = await Promise.all([\n          this.loadAssetField('daysFirstDeposit', token, tokenConfig, account),\n          this.loadAssetField('earningsPerc', token, tokenConfig, account), // Take earnings perc instead of earnings\n        ]);\n\n        if (daysFirstDeposit && earningsPerc) {\n          output = earningsPerc.times(365).div(daysFirstDeposit);\n        }\n        break;\n      case 'depositTimestamp':\n        const depositTimestamps = account ? await this.getDepositTimestamp([token], account) : false;\n        if (depositTimestamps && depositTimestamps[token]) {\n          output = depositTimestamps[token];\n        }\n        break;\n      case 'amountLent':\n        output = account ? await this.getAmountDeposited(tokenConfig, account) : false;\n        // console.log('amountLent - OUTPUT - ',output);\n        // const amountLents = account ? await this.getAmountLent([token],account) : false;\n        // if (amountLents && amountLents[token]){\n        //   output = amountLents[token];\n        // }\n        break;\n      case 'tokenPrice':\n        if (Object.keys(govTokens).includes(token)) {\n          const govTokenConfig = govTokens[token];\n          const DAITokenConfig = {\n            address: this.getContractByName('DAI')._address\n          };\n          try {\n            output = await this.getUniswapConversionRate(DAITokenConfig, govTokenConfig);\n          } catch (error) {\n\n          }\n          if (!output || this.BNify(output).isNaN()) {\n            output = '-';\n          }\n        } else {\n          output = await this.getTokenPrice(tokenConfig.idle.token);\n        }\n        break;\n      case 'fee':\n        output = await this.getUserTokenFees(tokenConfig, account);\n        break;\n      case 'tokenBalance':\n        if (Object.keys(govTokens).includes(token)) {\n          output = await this.getTokenBalance(token, account);\n          if (!output || output.isNaN()) {\n            output = '-';\n          }\n        } else {\n          let tokenBalance = account ? await this.getTokenBalance(tokenConfig.token, account) : false;\n          if (!tokenBalance || tokenBalance.isNaN()) {\n            tokenBalance = '-';\n          }\n          output = tokenBalance;\n        }\n        break;\n      case 'idleTokenBalance':\n        const idleTokenBalance = account ? await this.getTokenBalance(tokenConfig.idle.token, account) : false;\n        if (idleTokenBalance) {\n          output = idleTokenBalance;\n        }\n        break;\n      case 'redeemableBalanceCounter':\n\n        // console.log('redeemableBalanceCounter - BEFORE',token,tokenConfig,account);\n\n        let [tokenAPY1, amountLent2, redeemableBalanceStart] = await Promise.all([\n          this.loadAssetField('apy', token, tokenConfig, account, false),\n          this.loadAssetField('amountLent', token, tokenConfig, account, false),\n          this.loadAssetField('redeemableBalance', token, tokenConfig, account, false),\n        ]);\n\n        // console.log('redeemableBalanceCounter - CALL - ',tokenAPY1,amountLent2,redeemableBalanceStart);\n\n        // debugger;\n\n        let redeemableBalanceEnd = redeemableBalanceStart;\n\n        if (redeemableBalanceStart && tokenAPY1 && amountLent2) {\n          const earningPerYear = amountLent2.times(tokenAPY1.div(100));\n          redeemableBalanceEnd = redeemableBalanceStart.plus(earningPerYear);\n        }\n\n        output = {\n          redeemableBalanceEnd,\n          redeemableBalanceStart\n        };\n\n        // console.log('redeemableBalanceCounter - OUTPUT',token,parseFloat(redeemableBalanceStart),parseFloat(redeemableBalanceEnd),output);\n        break;\n      case 'redeemableBalance':\n        if (Object.keys(govTokens).includes(token)) {\n          const govTokenConfig = govTokens[token];\n          output = await this.getGovTokenUserBalance(govTokenConfig, account, govTokenAvailableTokens);\n        } else {\n          let [\n            idleTokenPrice1,\n            idleTokenBalance2,\n            govTokensBalance\n          ] = await Promise.all([\n            this.getIdleTokenPrice(tokenConfig),\n            this.loadAssetField('idleTokenBalance', token, tokenConfig, account),\n            addGovTokens ? this.getGovTokensUserTotalBalance(account, govTokenAvailableTokens, token) : null,\n          ]);\n\n          // console.log('redeemableBalance - BEFORE - ',idleTokenBalance2,idleTokenPrice1);\n\n          if (idleTokenBalance2 && idleTokenPrice1) {\n            const tokenBalance = idleTokenBalance2.times(idleTokenPrice1);\n            let redeemableBalance = tokenBalance;\n            if (govTokensBalance && !this.BNify(govTokensBalance).isNaN()) {\n              redeemableBalance = redeemableBalance.plus(this.BNify(govTokensBalance));\n            }\n            output = redeemableBalance;\n            // console.log('redeemableBalance',token,idleTokenBalance2.toFixed(4),idleTokenPrice1.toFixed(4),tokenBalance.toFixed(4),govTokensBalance ? govTokensBalance.toFixed(4) : null,output.toFixed(4));\n          }\n          // console.log('redeemableBalance - OUTPUT - ',output);\n        }\n        break;\n      case 'earningsCurve':\n        let [amountLentCurve2, redeemableBalanceCurve1] = await Promise.all([\n          this.loadAssetField('amountLentCurve', token, tokenConfig, account),\n          this.loadAssetField('redeemableBalanceCurve', token, tokenConfig, account)\n        ]);\n\n        if (!amountLentCurve2) {\n          amountLentCurve2 = this.BNify(0);\n        }\n\n        if (!redeemableBalanceCurve1) {\n          redeemableBalanceCurve1 = this.BNify(0);\n        }\n\n        output = redeemableBalanceCurve1.minus(amountLentCurve2);\n        break;\n      case 'earnings':\n        let [amountLent, redeemableBalance2] = await Promise.all([\n          this.loadAssetField('amountLent', token, tokenConfig, account, false),\n          this.loadAssetField('redeemableBalance', token, tokenConfig, account, false)\n        ]);\n\n        if (!amountLent) {\n          amountLent = this.BNify(0);\n        }\n        if (!redeemableBalance2) {\n          redeemableBalance2 = this.BNify(0);\n        }\n\n        output = redeemableBalance2.minus(amountLent);\n\n        // console.log('earnings',token,amountLent.toFixed(5),redeemableBalance2.toFixed(5),output.toFixed(5));\n\n        if (output.lt(this.BNify(0))) {\n          output = this.BNify(0);\n        }\n        break;\n      default:\n        break;\n    }\n\n    return output;\n  }\n  getIdleTokenSupply = async (idleToken, blockNumber = 'latest') => {\n    const cachedDataKey = `idleTokenSupply_${idleToken}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let idleTokenSupply = await this.getTokenTotalSupply(idleToken, blockNumber);\n    if (idleTokenSupply) {\n      return this.BNify(idleTokenSupply);\n    }\n\n    return null;\n  }\n  getIdleTokenPriceWithFee = async (tokenConfig, account, blockNumber = 'latest') => {\n    account = account || this.props.account;\n    if (!account) {\n      return null;\n    }\n\n    let [\n      fee,\n      tokenPrice,\n      userAvgPrice\n    ] = await Promise.all([\n      this.genericContractCallCached(tokenConfig.idle.token, 'fee', [], {}, blockNumber),\n      this.genericContractCallCached(tokenConfig.idle.token, 'tokenPrice', [], {}, blockNumber),\n      this.genericContractCallCached(tokenConfig.idle.token, 'userAvgPrices', [account], {}, blockNumber)\n    ]);\n\n    fee = this.BNify(fee);\n    tokenPrice = this.BNify(tokenPrice);\n    userAvgPrice = this.BNify(userAvgPrice);\n\n    if (!tokenPrice.isNaN() && !userAvgPrice.isNaN() && !fee.isNaN() && !this.BNify(userAvgPrice).eq(0) && this.BNify(tokenPrice).gt(this.BNify(userAvgPrice))) {\n      const priceWFee = this.integerValue(this.BNify(tokenPrice).minus(parseInt(fee.div(1e5).times(tokenPrice.minus(userAvgPrice)))));\n      return priceWFee;\n    }\n\n    return tokenPrice;\n  }\n  getIdleTokenPrice = async (tokenConfig, blockNumber = 'latest', timestamp = false) => {\n\n    const cachedDataKey = `idleTokenPrice_${tokenConfig.idle.token}_${blockNumber}`;\n    // if (blockNumber !== 'latest'){\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n    // }\n\n    let decimals = tokenConfig.decimals;\n\n    let tokenPrice = await this.genericContractCallCached(tokenConfig.idle.token, 'tokenPrice', [], {}, blockNumber);\n\n    // If price is NaN try to take it from APIs\n    if (!tokenPrice && timestamp) {\n      const isRisk = this.props.selectedStrategy === 'risk';\n      const startTimestamp = parseInt(timestamp) - (60 * 60);\n      const endTimestamp = parseInt(timestamp) + (60 * 60);\n      const tokenData = await this.getTokenApiData(tokenConfig.address, isRisk, startTimestamp, endTimestamp, true);\n\n      let beforePrice = {\n        data: null,\n        timeDiff: null\n      };\n\n      let afterPrice = {\n        data: null,\n        timeDiff: null\n      };\n\n      tokenData.forEach(d => {\n        const timeDiff = Math.abs(parseInt(d.timestamp) - parseInt(timestamp));\n        if (parseInt(d.timestamp) < parseInt(timestamp) && (!beforePrice.timeDiff || timeDiff < beforePrice.timeDiff)) {\n          beforePrice.timeDiff = timeDiff;\n          beforePrice.data = d;\n        }\n\n        if (parseInt(d.timestamp) > parseInt(timestamp) && !afterPrice.timeDiff) {\n          afterPrice.timeDiff = timeDiff;\n          afterPrice.data = d;\n        }\n      });\n\n      // Take before and after and calculate correct tokenPrice based from price acceleration\n      if (beforePrice.data && afterPrice.data) {\n        const tokenPriceBefore = this.BNify(beforePrice.data.idlePrice);\n        const tokenPriceAfter = this.BNify(afterPrice.data.idlePrice);\n        const timeBefore = this.BNify(beforePrice.data.timestamp);\n        const timeAfter = this.BNify(afterPrice.data.timestamp);\n        const timeDiff = timeAfter.minus(timeBefore);\n        const priceDiff = tokenPriceAfter.minus(tokenPriceBefore);\n        const priceAcceleration = priceDiff.div(timeDiff);\n        const timeDiffFromBeforePrice = this.BNify(timestamp).minus(timeBefore);\n        tokenPrice = tokenPriceBefore.plus(priceAcceleration.times(timeDiffFromBeforePrice));\n      }\n    }\n\n    // Fix token price decimals\n    if (tokenPrice && !this.BNify(tokenPrice).isNaN()) {\n      tokenPrice = this.fixTokenDecimals(tokenPrice, decimals);\n    }\n\n    // If price is NaN then return 1\n    if (!tokenPrice || this.BNify(tokenPrice).isNaN() || this.BNify(tokenPrice).lt(1)) {\n      tokenPrice = this.BNify(1);\n    }\n\n    // if (blockNumber !== 'latest'){\n    this.setCachedDataWithLocalStorage(cachedDataKey, tokenPrice);\n    // }\n\n    // this.customLog('getIdleTokenPrice',tokenPrice.toString());\n\n    return tokenPrice;\n  }\n  clearCachedData = (clear_all = false) => {\n    if (this.props.clearCachedData && typeof this.props.clearCachedData === 'function') {\n      // this.customLog('clearCachedData',this.props.clearCachedData,typeof this.props.clearCachedData === 'function');\n      this.props.clearCachedData(null, clear_all);\n    } else {\n      // this.customLog('clearCachedData - Function not found!');\n    }\n    return false;\n  }\n  /*\n  Cache data locally for 3 minutes\n  */\n  setCachedData = (key, data, TTL = 180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function') {\n      this.props.setCachedData(key, data, TTL);\n    }\n    return data;\n  }\n  addKeyToCachedDataWithLocalStorage = (parent_key, key, data, TTL = 180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function') {\n      const cachedData = this.getCachedDataWithLocalStorage(parent_key, {});\n      cachedData[key] = data;\n      this.props.setCachedData(parent_key, cachedData, TTL, true);\n    }\n    return data;\n  }\n  setCachedDataWithLocalStorage = (key, data, TTL = 180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function') {\n      this.props.setCachedData(key, data, TTL, true);\n    }\n    return data;\n  }\n  getCachedDataWithLocalStorage = (key, defaultValue = null) => {\n    return this.getCachedData(key, defaultValue, true);\n  }\n  getCachedData = (key, defaultValue = null, useLocalStorage = false) => {\n    let cachedData = null;\n    key = key.toLowerCase();\n    // Get cache from current session\n    if (this.props.cachedData && this.props.cachedData[key]) {\n      cachedData = this.props.cachedData[key];\n      // Get cache from local storage\n    } else if (useLocalStorage) {\n      cachedData = this.getStoredItem('cachedData');\n      if (cachedData && cachedData[key]) {\n        cachedData = cachedData[key];\n      } else {\n        cachedData = null;\n      }\n    }\n\n    const cachedDataValid = cachedData && cachedData.data && (cachedData.expirationDate === null || cachedData.expirationDate >= parseInt(Date.now() / 1000));\n\n    // if (!cachedDataValid){\n    //   console.log('getCachedData - NOT VALID - ',key,(cachedData ? cachedData.expirationDate-parseInt(Date.now()/1000) : null));\n    // }\n\n    if (cachedDataValid) {\n      return cachedData.data;\n    }\n    return defaultValue;\n  }\n  getUserPoolShare = async (walletAddr, tokenConfig) => {\n    const [\n      idleTokensBalance,\n      idleTokensTotalSupply\n    ] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token, walletAddr, false),\n      this.getTokenTotalSupply(tokenConfig.idle.token)\n    ]);\n\n    let userShare = this.BNify(0);\n    if (this.BNify(idleTokensBalance).gt(0) && this.BNify(idleTokensTotalSupply).gt(0)) {\n      userShare = this.BNify(idleTokensBalance).div(this.BNify(idleTokensTotalSupply));\n    }\n\n    return userShare;\n  }\n  openWindow = (url) => {\n    return window.open(url, '_blank', 'noopener');\n  }\n  getActiveCoverages = async (account = null) => {\n    const activeCoverages = [];\n    account = account || this.props.account;\n\n    if (!account) {\n      return activeCoverages;\n    }\n\n    const currTimestamp = parseInt(Date.now() / 1000);\n\n    const coverProtocolConfig = this.getGlobalConfig(['tools', 'coverProtocol']);\n    if (coverProtocolConfig.enabled) {\n      await this.asyncForEach(coverProtocolConfig.props.coverages, async (coverage) => {\n        const token = 'Claim';\n        const coverageTokens = coverage.tokens;\n        const tokenConfig = coverageTokens[token];\n        // Initialize coverage contract\n        await this.props.initContract(tokenConfig.name, tokenConfig.address, tokenConfig.abi);\n        // Take balance\n        const balance = await this.getTokenBalance(tokenConfig.name, account);\n        if (balance && balance.gt(0)) {\n          const actionLabel = 'File Claim';\n          const collateral = coverage.collateral;\n          const protocolName = coverProtocolConfig.label;\n          const protocolImage = coverProtocolConfig.image;\n          const actionUrl = coverProtocolConfig.fileClaimUrl;\n          const status = coverage.expirationTimestamp <= currTimestamp ? 'Expired' : 'Active';\n          const actionDisabled = status === 'Expired';\n          const expirationDate = moment(coverage.expirationTimestamp * 1000).utc().format('YYYY-MM-DD HH:mm:ss') + ' UTC';\n          activeCoverages.push({\n            token,\n            status,\n            balance,\n            actionUrl,\n            collateral,\n            actionLabel,\n            protocolName,\n            protocolImage,\n            expirationDate,\n            actionDisabled\n          });\n        }\n      });\n    }\n    const nexusMutualConfig = this.getGlobalConfig(['tools', 'nexusMutual']);\n    if (nexusMutualConfig.enabled) {\n      const nexusMutualCoverages = await this.getNexusMutualCoverages(account);\n      nexusMutualCoverages.forEach(coverage => {\n        const actionLabel = 'Claim';\n        const balance = coverage.sumAssured;\n        const token = coverage.coverAssetConfig.token;\n        const collateral = coverage.yieldTokenConfig.token;\n        const portfolioCoverage = coverage.portfolioCoverage;\n        const collateralIcon = `images/tokens/${collateral}.svg`;\n        const actionDisabled = !coverage.incident && !coverage.claimId;\n        const protocolName = this.getGlobalConfig(['insurance', 'nexusMutual', 'label']);\n        const protocolImage = this.getGlobalConfig(['insurance', 'nexusMutual', 'image']);\n        const protocolImageDark = this.getGlobalConfig(['insurance', 'nexusMutual', 'imageDark']);\n        const expirationDate = moment(coverage.coverDetails.validUntil * 1000).utc().format('YYYY-MM-DD HH:mm:ss') + ' UTC';\n        const status = coverage.claimId ? 'Claimed' : parseInt(coverage.coverDetails.validUntil) <= currTimestamp ? 'Expired' : 'Active';\n        const actionUrl = `${window.location.origin}/#${this.getGlobalConfig(['dashboard', 'baseRoute'])}/tools/${nexusMutualConfig.route}/${coverage.yieldTokenConfig.token}/claim`;\n        activeCoverages.push({\n          token,\n          status,\n          balance,\n          actionUrl,\n          collateral,\n          actionLabel,\n          protocolName,\n          protocolImage,\n          expirationDate,\n          actionDisabled,\n          collateralIcon,\n          portfolioCoverage,\n          protocolImageDark\n        });\n      });\n    }\n\n    return activeCoverages;\n  }\n  getNexusMutualCoverages = async (account) => {\n    const nexusMutualConfig = this.getGlobalConfig(['tools', 'nexusMutual']);\n\n    const fromBlock = nexusMutualConfig.directProps.startBlock;\n    const feeDistributorConfig = nexusMutualConfig.directProps.contractInfo;\n    const incidentsInfo = nexusMutualConfig.directProps.incidentsInfo;\n\n    await Promise.all([\n      this.props.initContract(incidentsInfo.name, incidentsInfo.address, incidentsInfo.abi),\n      this.props.initContract(feeDistributorConfig.name, feeDistributorConfig.address, feeDistributorConfig.abi),\n    ]);\n\n    const [\n      coverBoughtEvents,\n      claimSubmittedEvents,\n    ] = await Promise.all([\n      this.getContractEvents(feeDistributorConfig.name, 'CoverBought', { fromBlock, toBlock: 'latest', filter: { buyer: account } }),\n      this.getContractEvents(feeDistributorConfig.name, 'ClaimSubmitted', { fromBlock, toBlock: 'latest', filter: { buyer: account } })\n    ]);\n\n    const nexusMutualCoverages = [];\n\n    await this.asyncForEach(coverBoughtEvents, async (cover) => {\n      // coverBoughtEvents.forEach( cover => {\n      const coverId = parseInt(cover.returnValues.coverId);\n      const claimSubmittedEvent = claimSubmittedEvents.find(claim => parseInt(claim.returnValues.coverId) === coverId);\n      const [\n        coverDetails,\n        incidentEvents\n      ] = await Promise.all([\n        this.genericContractCall(feeDistributorConfig.name, 'getCover', [coverId]),\n        this.getContractEvents(incidentsInfo.name, 'IncidentAdded', { fromBlock: cover.blockNumber, toBlock: 'latest', filter: { productId: cover.contractAddress } })\n      ]);\n\n      if (!coverDetails) {\n        return false;\n      }\n\n      // Check if the cover matches any incidents\n      const matchedIncidents = incidentEvents ? incidentEvents.filter(incident => {\n        return incident.returnValues.productId === coverDetails.contractAddress &&\n          this.BNify(incident.blockNumber).gt(cover.blockNumber)  &&\n          this.BNify(incident.returnValues.incidentDate).lt(coverDetails.validUntil) &&\n          parseInt(coverDetails.validUntil) + nexusMutualConfig.directProps.yieldTokenCoverGracePeriod >= Date.now() / 1000\n      }) : [];\n\n      // If multiple incidents match, return the one with the highest priceBefore\n      const matchedIncident = matchedIncidents.reduce((prev, curr) => {\n        if (!prev) {\n          return curr;\n        }\n\n        if (this.BNify(curr.returnValues.priceBefore).gt(prev.returnValues.priceBefore)) {\n          return curr;\n        }\n        return prev;\n      }, null);\n\n      const yieldTokenConfig = Object.values(nexusMutualConfig.props.availableTokens).find(tokenConfig => tokenConfig.address.toLowerCase() === coverDetails.contractAddress.toLowerCase());\n      const sumAssured = this.fixTokenDecimals(coverDetails.sumAssured, yieldTokenConfig.decimals);\n      const coverAssetConfig = Object.values(yieldTokenConfig.underlying).find(underlyingConfig => underlyingConfig.address.toLowerCase() === coverDetails.coverAsset.toLowerCase());\n      const expiryDate = this.strToMoment(coverDetails.validUntil * 1000).format('YYYY-MM-DD');\n\n      const claimId = claimSubmittedEvent ? claimSubmittedEvent.returnValues.claimId : null;\n      const payoutOutcome = claimId ? await this.genericContractCall(feeDistributorConfig.name, 'getPayoutOutcome', [claimId]) : null;\n      const label = `${yieldTokenConfig.name} - ${sumAssured.toFixed(4)} ${coverAssetConfig.token} - Exp. ${expiryDate}`;\n      const value = coverId;\n\n      let claimedAmount = null;\n      if (claimSubmittedEvent) {\n        const claimTxReceipt = await this.getTransactionReceipt(claimSubmittedEvent.transactionHash);\n        const claimedAmountLog = claimTxReceipt ? claimTxReceipt.logs.find(log => log.address.toLowerCase() === coverAssetConfig.address.toLowerCase()) : null;\n        claimedAmount = claimedAmountLog ? this.fixTokenDecimals(parseInt(claimedAmountLog.data, 16), coverAssetConfig.decimals) : this.BNify(0);\n      }\n\n      const claimableAmount = this.fixTokenDecimals(coverDetails.sumAssured, coverAssetConfig.decimals);\n\n      const claimablePrice = matchedIncident ? this.BNify(matchedIncident.returnValues.priceBefore).times(0.9) : this.BNify(0);\n      const maxCoveredAmount = claimablePrice.gt(0) ? this.BNify(coverDetails.sumAssured).div(claimablePrice) : this.BNify(0);\n      const coveredTokenAmount = this.normalizeTokenAmount(maxCoveredAmount, coverAssetConfig.decimals);\n\n      let [\n        tokenPrice,\n        idleTokenBalance\n      ] = await Promise.all([\n        this.getTokenPrice(yieldTokenConfig.token),\n        this.getTokenBalance(yieldTokenConfig.token, account, false)\n      ]);\n\n      tokenPrice = this.fixTokenDecimals(tokenPrice, yieldTokenConfig.decimals);\n      idleTokenBalance = this.fixTokenDecimals(idleTokenBalance, yieldTokenConfig.decimals);\n      const tokenBalance = idleTokenBalance.times(tokenPrice);\n      const portfolioCoverage = tokenBalance.gt(0) ? sumAssured.div(tokenBalance).times(100).toFixed(2) + '%' : 'N/A';\n\n      // console.log('portfolioCoverage',sumAssured.toFixed(),idleTokenBalance.toFixed(),tokenPrice.toFixed(),portfolioCoverage.toFixed());\n\n      nexusMutualCoverages.push({\n        label,\n        value,\n        claimId,\n        sumAssured,\n        coverDetails,\n        claimedAmount,\n        payoutOutcome,\n        claimableAmount,\n        maxCoveredAmount,\n        yieldTokenConfig,\n        coverAssetConfig,\n        portfolioCoverage,\n        coveredTokenAmount,\n        incident: matchedIncident ? { ...matchedIncident, id: incidentEvents.findIndex(x => x.date === matchedIncident.date) } : null\n      });\n    });\n\n    return nexusMutualCoverages;\n  }\n  getBatchedDepositExecutions = async (contractAddress) => {\n    const requiredNetwork = this.getRequiredNetworkId();\n    const etherscanInfo = this.getGlobalConfig(['network', 'providers', 'etherscan']);\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]) {\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n      const etherscanEndpoint = `${etherscanApiUrl}?&apikey=${etherscanInfo.key}&module=account&action=tokentx&address=${contractAddress}&sort=desc`;\n      const transactions = await this.makeCachedRequest(etherscanEndpoint, 1800, true);\n      if (transactions && typeof transactions.result === 'object') {\n        return transactions.result.filter(tx => tx.from === '0x0000000000000000000000000000000000000000' && tx.to.toLowerCase() === contractAddress.toLowerCase());\n      }\n    }\n    return null;\n  }\n  getBatchedDeposits = async (account = null, filter_by_status = null) => {\n    account = account || this.props.account;\n    if (!account) {\n      return null;\n    }\n\n    const batchDepositConfig = this.getGlobalConfig(['tools', 'batchDeposit']);\n    if (!batchDepositConfig.enabled) {\n      return null;\n    }\n\n    const cachedDataKey = `batchedDeposits_${account}_${filter_by_status}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const batchedDeposits = {};\n    const availableTokens = batchDepositConfig.props.availableTokens;\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const migrationContract = tokenConfig.migrationContract;\n      await this.props.initContract(migrationContract.name, migrationContract.address, migrationContract.abi);\n      const currBatchIndex = await this.genericContractCall(migrationContract.name, 'currBatch');\n      for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex); batchIndex++) {\n        let [\n          batchExecutions,\n          batchTotal,\n          batchRedeem,\n          batchDeposit\n        ] = await Promise.all([\n          this.getBatchedDepositExecutions(migrationContract.address),\n          this.genericContractCall(migrationContract.name, 'batchTotals', [batchIndex]),\n          this.genericContractCall(migrationContract.name, 'batchRedeemedTotals', [batchIndex]),\n          this.genericContractCall(migrationContract.name, 'batchDeposits', [this.props.account, batchIndex])\n        ]);\n\n        console.log(`Batch #${batchIndex} - ${batchTotal} - ${batchRedeem} - ${batchDeposit}`);\n\n        let batchTotals = null;\n        let batchRedeems = null;\n        let batchDeposits = null;\n        if (batchTotal && batchTotal !== null) {\n          batchTotals = this.fixTokenDecimals(batchTotal, tokenConfig.decimals);\n        }\n        if (batchDeposit !== null) {\n          batchRedeem = this.fixTokenDecimals(batchRedeem, 18);\n          batchDeposit = this.fixTokenDecimals(batchDeposit, tokenConfig.decimals);\n          if (batchDeposit.gt(0)) {\n            batchDeposits = batchDeposit;\n\n            // Calculate redeemable idleTokens\n            batchRedeems = batchDeposit.times(batchRedeem).div(batchTotals);\n            if (batchRedeems.gt(batchRedeem)) {\n              batchRedeems = batchRedeem;\n            }\n\n            const status = batchIndex < currBatchIndex && batchRedeems.gt(0) ? 'executed' : 'pending';\n\n            if (filter_by_status !== null && filter_by_status.toLowerCase() !== status) {\n              return;\n            }\n\n            const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n\n            batchedDeposits[token] = {\n              status,\n              batchTotals,\n              batchRedeems,\n              batchDeposits,\n              lastExecution\n            };\n          }\n        }\n      }\n    });\n\n    return this.setCachedData(cachedDataKey, batchedDeposits);\n  }\n  getETHBalance = async (walletAddr, fixDecimals = true, blockNumber = 'latest') => {\n    if (!walletAddr) {\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `ethBalance_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest') {\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()) {\n        return this.BNify(cachedData);\n      }\n    }\n\n    let tokenBalance = await this.props.web3.eth.getBalance(walletAddr);\n\n    if (tokenBalance) {\n      if (fixDecimals) {\n        tokenBalance = this.fixTokenDecimals(tokenBalance, 18);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()) {\n        if (blockNumber !== 'latest') {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, tokenBalance);\n        } else {\n          return tokenBalance;\n        }\n      }\n    }\n    return null;\n  }\n  getTokenBalance = async (contractName, walletAddr, fixDecimals = true, blockNumber = 'latest') => {\n    if (!walletAddr) {\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenBalance_${contractName}_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest') {\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()) {\n        return this.BNify(cachedData);\n      }\n    }\n\n    // Init token contract if not initialized yet\n    const tokenContract = this.getContractByName(contractName);\n    if (!tokenContract){\n      const tokenConfig = this.getGlobalConfig(['stats','tokens',contractName.toUpperCase()]);\n      if (tokenConfig){\n        await this.props.initContract(contractName, tokenConfig.address, ERC20);\n      } else {\n        return false;\n      }\n    }\n\n    let [\n      tokenDecimals,\n      tokenBalance\n    ] = await Promise.all([\n      this.getTokenDecimals(contractName),\n      this.getContractBalance(contractName, walletAddr, blockNumber)\n    ]);\n\n    if (tokenBalance) {\n      if (fixDecimals) {\n        tokenBalance = this.fixTokenDecimals(tokenBalance, tokenDecimals);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()) {\n        if (blockNumber !== 'latest') {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, tokenBalance, 30);\n        } else {\n          return tokenBalance;\n        }\n      }\n    } else {\n      this.customLogError('Error on getting balance for ', contractName);\n    }\n    return null;\n  }\n  copyToClipboard = (copyText) => {\n    if (typeof copyText.select === 'function') {\n      copyText.select();\n      copyText.setSelectionRange(0, 99999); // Select\n      const res = document.execCommand(\"copy\");\n      copyText.setSelectionRange(0, 0); // Deselect\n      return res;\n    }\n    return false;\n  }\n  loadScript = (url, props, callback) => {\n    const script = document.createElement(\"script\");\n    script.src = url;\n\n    // Append props\n    if (props) {\n      Object.keys(props).forEach((attr, i) => {\n        script[attr] = props[attr];\n      });\n    }\n\n    if (typeof callback === 'function') {\n      if (script.readyState) {  // only required for IE <9\n        script.onreadystatechange = function () {\n          if (script.readyState === 'loaded' || script.readyState === 'complete') {\n            script.onreadystatechange = null;\n            callback();\n          }\n        };\n      } else {  //Others\n        script.onload = callback;\n      }\n    }\n\n    if (!script.id || !document.getElementById(script.id)) {\n      document.body.appendChild(script);\n    }\n  }\n  isValidJSON = str => {\n    try {\n      JSON.parse(str);\n    } catch (e) {\n      return false;\n    }\n    return true;\n  }\n  checkAddress = (address) => {\n    return address ? address.match(/^0x[a-fA-F0-9]{40}$/) !== null : false;\n  }\n  getTokenTotalSupply = async (contractName, blockNumber = 'latest') => {\n    const cachedDataKey = `totalSupply_${contractName}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const totalSupply = await this.genericContractCall(contractName, 'totalSupply', [], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, totalSupply);\n  }\n  getTokenPrice = async (contractName, blockNumber = 'latest') => {\n    const cachedDataKey = `tokenPrice_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenPrice = await this.genericContractCall(contractName, 'tokenPrice', [], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, tokenPrice, 60);\n  }\n  getContractBalance = async (contractName, address, blockNumber = 'latest') => {\n    address = address ? address : this.props.tokenConfig.idle.address;\n    const cachedDataKey = `balanceOf_${contractName}_${address}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n    const balance = await this.genericContractCall(contractName, 'balanceOf', [address], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, balance, 30);\n  }\n  getProtocolBalance = async (contractName, address) => {\n    return await this.getContractBalance(contractName, address);\n  }\n  getAprs = async (contractName) => {\n    const cachedDataKey = `getAprs_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      // console.log('getAprs - CACHED - ',cachedData);\n      return typeof cachedData === 'object' ? cachedData : JSON.parse(cachedData);\n    }\n\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const aprs = await this.genericContractCall(contractName, 'getAPRs');\n    if (aprs) {\n      const result = {\n        aprs: aprs[1],\n        addresses: aprs[0]\n      };\n      return this.setCachedDataWithLocalStorage(cachedDataKey, result);\n    }\n    return null;\n  }\n  genericIdleCall = async (methodName, params = [], callParams = {}) => {\n    return await this.genericContractCall(this.props.tokenConfig.idle.token, methodName, params, callParams).catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n  }\n  estimateGas = async (contractName, methodName, params = [], callParams = {}) => {\n    let contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.methods[methodName](...params).estimateGas(callParams);\n  }\n  getTxReceipt = async (txHash, web3 = null) => {\n    web3 = web3 || this.props.web3;\n    if (!web3 || !web3.eth) {\n      return null;\n    }\n    return await (new Promise(async (resolve, reject) => {\n      web3.eth.getTransactionReceipt(txHash, (err, tx) => {\n        if (err) {\n          reject(err);\n        }\n        resolve(tx);\n      });\n    }));\n  }\n  getTxDecodedLogs = async (tx, logAddr, decodeLogs, storedTx) => {\n\n    let txReceipt = storedTx && storedTx.txReceipt ? storedTx.txReceipt : null;\n\n    if (!txReceipt) {\n      txReceipt = await (new Promise(async (resolve, reject) => {\n        this.props.web3.eth.getTransactionReceipt(tx.hash, (err, tx) => {\n          if (err) {\n            reject(err);\n          }\n          resolve(tx);\n        });\n      }));\n\n    }\n\n    if (!txReceipt) {\n      return null;\n    }\n\n    const internalTransfers = txReceipt.logs.filter((tx) => { return tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${logAddr}`; });\n\n    if (!internalTransfers.length) {\n      return null;\n    }\n\n    try {\n      return [\n        txReceipt,\n        this.props.web3.eth.abi.decodeLog(decodeLogs, internalTransfers[0].data, internalTransfers[0].topics)\n      ];\n    } catch (error) {\n      return null;\n    }\n  }\n  blocksToSeconds = (blocks) => {\n    const blocksPerSeconds = this.BNify(this.getGlobalConfig(['network', 'blocksPerYear'])).div(365.2422).div(86400);\n    return this.BNify(blocks).div(blocksPerSeconds);\n  }\n  getBlockNumber = async () => {\n    if (!this.props.web3) {\n      return false;\n    }\n    return await this.props.web3.eth.getBlockNumber();\n  }\n  getBlockInfo = async (blockNumber='latest') => {\n    const cachedDataKey = `getBlockInfo_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && blockNumber !== 'latest') {\n      return cachedData;\n    }\n    const blockInfo = await this.props.web3.eth.getBlock(blockNumber);\n    if (blockNumber === 'latest'){\n      return blockInfo;\n    }\n\n    return blockInfo ? this.setCachedDataWithLocalStorage(cachedDataKey, blockInfo, null) : null;\n  }\n  getContractPastEvents = async (contractName, methodName, params = {}) => {\n    if (!contractName) {\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    // console.log('getContractPastEvents',contractName,methodName);\n\n    return await contract.getPastEvents(methodName, params);\n  }\n\n  genericContractCallCached = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', TTL = 180) => {\n    const cachedDataKey = `genericContractCall_${contractName}_${methodName}_${JSON.stringify(params)}_${JSON.stringify(callParams)}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    // Store forever for past block\n    if (blockNumber !== 'latest') {\n      TTL = null;\n    }\n\n    const result = await this.genericContractCall(contractName, methodName, params, callParams, blockNumber);\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, result, TTL);\n  }\n\n  cachedContractCall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', TTL = 180) => {\n    return await this.genericContractCallCached(contractName, methodName, params, callParams, blockNumber, TTL);\n  }\n\n  genericContractCall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', count = 0) => {\n\n    if (!contractName) {\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLog('Wrong contract name', contractName);\n      return null;\n    }\n\n    if (!contract.methods[methodName]) {\n      this.customLog('Wrong method name', methodName);\n      return null;\n    }\n\n    blockNumber = blockNumber !== 'latest' && blockNumber && !isNaN(blockNumber) ? parseInt(blockNumber) : blockNumber;\n\n    try {\n      // console.log(`genericContractCall - ${contractName} - ${methodName} - [${params.join(',')}]`);\n      const value = await contract.methods[methodName](...params).call(callParams, blockNumber).catch(error => {\n        this.customLog(`${contractName} contract method ${methodName} error: `, error);\n      });\n      // if (!value){\n      //   console.log('genericContractCall - NULL - ',contractName,methodName,params);\n      // }\n      // console.log(`${moment().format('HH:mm:ss')} - genericContractCall (${blockNumber}) - ${contractName} - ${methodName} (${JSON.stringify(params)}) : ${value}`);\n      return value;\n    } catch (error) {\n      // console.log('genericContractCall ERROR - ',contractName,methodName,params);\n      this.customLog(\"genericContractCall error\", error);\n      // if (count<=3){\n      //   await this.asyncTimeout(1000);\n      //   return await this.genericContractCall(contractName, methodName, params, callParams, blockNumber, count+1);\n      // }\n    }\n  }\n  asyncForEach = async (array, callback, async = true) => {\n    let output = [];\n    if (async) {\n      output = await Promise.all(array.map((c, index) => {\n        return callback(c, index, array);\n      }));\n    } else {\n      for (let index = 0; index < array.length; index++) {\n        output.push(await callback(array[index], index, array));\n      }\n    }\n    return output;\n  }\n  apr2apy = (apr) => {\n    return (this.BNify(1).plus(this.BNify(apr).div(365))).pow(365).minus(1);\n  }\n  getUnlentBalance = async (tokenConfig) => {\n    let unlentBalance = await this.getProtocolBalance(tokenConfig.token, tokenConfig.idle.address);\n    if (unlentBalance) {\n      unlentBalance = this.fixTokenDecimals(unlentBalance, tokenConfig.decimals);\n    }\n    return unlentBalance;\n  }\n  getTokenPool = async (tokenConfig, addGovTokens = true) => {\n    // Check for cached data\n    const cachedDataKey = `tokenPool_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, addGovTokens);\n    if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent) {\n      const tokenPool = tokenAllocation.totalAllocationWithUnlent;\n      if (!this.BNify(tokenPool).isNaN()) {\n        return this.setCachedDataWithLocalStorage(cachedDataKey, tokenPool);\n      }\n    }\n\n    return null;\n  }\n  getLastAllocations = async (tokenConfig) => {\n    if (!tokenConfig.idle) {\n      return false;\n    }\n\n    const aprs = await this.getAprs(tokenConfig.idle.token);\n    const allAvailableTokens = aprs ? aprs.addresses : null;\n    if (allAvailableTokens) {\n      const tokenAllocations = await this.asyncForEach(allAvailableTokens, async (protocolAddr, index) => {\n        return await this.genericContractCall(tokenConfig.idle.token, 'lastAllocations', [index]);\n      });\n      return allAvailableTokens.reduce((lastAllocations, protocolAddr, index) => {\n        lastAllocations[protocolAddr.toLowerCase()] = tokenAllocations[index];\n        return lastAllocations;\n      }, {});\n    }\n\n    return {};\n  }\n  getTokenAllocation = async (tokenConfig, protocolsAprs = false, addGovTokens = true) => {\n\n    if (!tokenConfig.idle) {\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAllocation_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const tokenAllocation = {\n      avgApr: null,\n      unlentBalance: null,\n      totalAllocation: null,\n      protocolsAllocations: null,\n      protocolsAllocationsPerc: null,\n      totalAllocationConverted: null,\n      totalAllocationWithUnlent: null,\n      totalAllocationWithUnlentConverted: null,\n    };\n\n    const protocolsAllocations = {};\n    const protocolsAllocationsPerc = {};\n\n    let [\n      unlentBalance,\n      tokenPrice,\n      lastAllocations,\n      tokenUsdConversionRate,\n      totalSupply,\n      govTokensBalances,\n    ] = await Promise.all([\n      this.getUnlentBalance(tokenConfig),\n      this.getIdleTokenPrice(tokenConfig),\n      this.getLastAllocations(tokenConfig),\n      this.getTokenConversionRate(tokenConfig, false),\n      this.getIdleTokenSupply(tokenConfig.idle.token),\n      addGovTokens ? this.getGovTokensBalances(tokenConfig.idle.address) : null,\n    ]);\n\n    const totalAllocation = this.fixTokenDecimals(totalSupply, 18).times(tokenPrice).minus(unlentBalance);\n\n    if (lastAllocations) {\n      Object.keys(lastAllocations).forEach((protocolAddr) => {\n        const protocolInfo = tokenConfig.protocols.find(p => p.address.toLowerCase() === protocolAddr.toLowerCase());\n        if (protocolInfo && protocolInfo.enabled) {\n          const protocolAllocationPerc = this.BNify(lastAllocations[protocolAddr]).div(100000);\n          const protocolAllocation = totalAllocation.times(protocolAllocationPerc);\n          protocolsAllocations[protocolAddr.toLowerCase()] = protocolAllocation;\n          protocolsAllocationsPerc[protocolAddr.toLowerCase()] = protocolAllocationPerc;\n        }\n      });\n    }\n\n    tokenAllocation.unlentBalance = this.BNify(0);\n    tokenAllocation.totalAllocationWithUnlent = totalAllocation;\n\n    if (unlentBalance) {\n      tokenAllocation.unlentBalance = unlentBalance;\n      tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(unlentBalance);\n    }\n\n    tokenAllocation.totalAllocation = totalAllocation;\n    tokenAllocation.protocolsAllocations = protocolsAllocations;\n    tokenAllocation.protocolsAllocationsPerc = protocolsAllocationsPerc;\n\n    // Sum gov tokens balances\n    if (govTokensBalances && govTokensBalances.total) {\n      if (tokenUsdConversionRate) {\n        govTokensBalances.total = govTokensBalances.total.div(tokenUsdConversionRate);\n      }\n\n      // add gov token balance to total allocation\n      tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(govTokensBalances.total);\n    }\n\n    tokenAllocation.totalAllocationConverted = tokenAllocation.totalAllocation;\n    tokenAllocation.totalAllocationWithUnlentConverted = tokenAllocation.totalAllocationWithUnlent;\n\n    if (tokenUsdConversionRate) {\n      tokenAllocation.totalAllocationConverted = tokenAllocation.totalAllocationConverted.times(tokenUsdConversionRate);\n      tokenAllocation.totalAllocationWithUnlentConverted = tokenAllocation.totalAllocationWithUnlentConverted.times(tokenUsdConversionRate);\n    }\n\n    if (protocolsAprs) {\n      tokenAllocation.avgApr = this.getAvgApr(protocolsAprs, protocolsAllocations, totalAllocation);\n    }\n\n    // console.log('getTokenAllocation',tokenConfig.idle.token,totalSupply ? totalSupply.toFixed(8) : null,tokenPrice ? tokenPrice.toFixed(8) : null,unlentBalance ? unlentBalance.toFixed(8) : null,tokenAllocation);\n\n    // console.log('Allocations for '+tokenConfig.idle.token+' loaded in '+((Date.now()-start)/1000).toFixed(2)+'s');\n\n    return this.setCachedData(cachedDataKey, tokenAllocation);\n  }\n  getSushiswapPoolTokenPrice = async (contractName) => {\n    const [\n      token0_address,\n      token1_address,\n      poolReserves,\n      totalSupply\n    ] = await Promise.all([\n      this.genericContractCallCached(contractName, 'token0'),\n      this.genericContractCallCached(contractName, 'token1'),\n      this.genericContractCallCached(contractName, 'getReserves'),\n      this.getTokenTotalSupply(contractName)\n    ]);\n\n    if (token0_address && token1_address && poolReserves && totalSupply) {\n      const token0_config = {\n        address: token0_address\n      };\n      const token1_config = {\n        address: token1_address\n      };\n      const DAITokenConfig = {\n        address: this.getContractByName('DAI')._address\n      };\n\n      let [\n        token0_price,\n        token1_price\n      ] = await Promise.all([\n        this.getSushiswapConversionRate(DAITokenConfig, token0_config),\n        this.getSushiswapConversionRate(DAITokenConfig, token1_config)\n      ]);\n\n      if (token0_price && token1_price) {\n        // token0_price = this.BNify(1).div(this.BNify(token0_price));\n        // token1_price = this.BNify(1).div(this.BNify(token1_price));\n\n        const token0_pool = token0_price.times(this.fixTokenDecimals(poolReserves[0], 18));\n        const token1_pool = token1_price.times(this.fixTokenDecimals(poolReserves[1], 18));\n\n        const totalPoolSize = token0_pool.plus(token1_pool);\n        const poolTokenPrice = totalPoolSize.div(this.fixTokenDecimals(totalSupply, 18));\n\n        // console.log(parseFloat(token0_price),parseFloat(token1_price),parseFloat(poolTokenPrice));\n\n        return poolTokenPrice;\n      }\n    }\n\n    return null;\n  }\n  getSushiswapConversionRate = async (tokenConfigFrom, tokenConfigDest) => {\n\n    // Check for cached data\n    const cachedDataKey = `sushiswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = this.getContractByName('WETH')._address;\n      const one = this.normalizeTokenDecimals(18);\n\n      const path = [];\n      path.push(tokenConfigFrom.address);\n\n      // Don't pass through weth if i'm converting weth\n      if (WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()) {\n        path.push(WETHAddr);\n      }\n      path.push(tokenConfigDest.address);\n\n      const res = await this.genericContractCall('SushiswapRouter', 'getAmountsIn', [one.toFixed(), path]);\n\n      // console.log('getSushiswapConversionRate',path,res);\n\n      if (res) {\n        const price = this.BNify(res[0]).div(one);\n        return this.setCachedDataWithLocalStorage(cachedDataKey, price);\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  getUniswapConversionRate = async (tokenConfigFrom, tokenConfigDest, blockNumber='latest') => {\n\n    if (tokenConfigDest.addressForPrice) {\n      tokenConfigDest = Object.assign({}, tokenConfigDest);\n      tokenConfigDest.address = tokenConfigDest.addressForPrice;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `uniswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}_${blockNumber}`;\n    if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()) {\n        return this.BNify(cachedData);\n      }\n    }\n\n    try {\n      const WETHAddr = this.getContractByName('WETH')._address;\n      const one = this.normalizeTokenDecimals(18);\n\n      const path = [];\n      path.push(tokenConfigFrom.address);\n      // Don't pass through weth if i'm converting weth\n      if (WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()) {\n        path.push(WETHAddr);\n      }\n      path.push(tokenConfigDest.address);\n\n      const unires = await this.genericContractCall('UniswapRouter', 'getAmountsIn', [one.toFixed(), path], {}, blockNumber);\n\n      // console.log('getUniswapConversionRate',path,unires);\n\n      if (unires) {\n        const price = this.BNify(unires[0]).div(one);\n        if (blockNumber !== 'latest'){\n          return this.setCachedDataWithLocalStorage(cachedDataKey, price);\n        }\n        return price;\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  /*\n  getUniswapConversionRate_old = async (tokenConfigFrom,tokenConfigDest) => {\n    const cachedDataKey = `compUniswapConverstionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    const tokenFrom = new Token(ChainId.MAINNET, tokenConfigFrom.address, tokenConfigFrom.decimals);\n    const tokenTo = new Token(ChainId.MAINNET, tokenConfigDest.address, tokenConfigDest.decimals);\n\n    const pair = await Fetcher.fetchPairData(tokenFrom, tokenTo);\n    const route = new Route([pair], tokenTo);\n\n    let output = null;\n    if (route && route.midPrice){\n      output = this.BNify(route.midPrice.toSignificant(tokenConfigDest.decimals));\n      this.setCachedData(cachedDataKey,output);\n    }\n    return output;\n  }\n  */\n  getCurveDepositedTokens = async (account, enabledTokens = []) => {\n    account = account ? account : this.props.account;\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    if (!account || !enabledTokens || !enabledTokens.length) {\n      return [];\n    }\n\n    const curveTxs = await this.getCurveTxs(account, 0, 'latest', enabledTokens);\n\n    const idleTokensBalances = {};\n    let remainingCurveTokens = this.BNify(0);\n\n    // this.customLog('getCurveDepositedTokens',curveTxs);\n\n    curveTxs.forEach(tx => {\n\n      const idleToken = tx.idleToken;\n      const idleTokens = this.BNify(tx.idleTokens);\n\n      if (!idleTokensBalances[idleToken]) {\n        idleTokensBalances[idleToken] = this.BNify(0);\n      }\n\n      switch (tx.action) {\n        case 'CurveIn':\n        case 'CurveZapIn':\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].plus(idleTokens);\n          break;\n        case 'CurveOut':\n        case 'CurveZapOut':\n          if (idleTokens.gt(idleTokensBalances[idleToken])) {\n            remainingCurveTokens = remainingCurveTokens.plus(idleTokens.minus(idleTokensBalances[idleToken]));\n          }\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].minus(idleTokens);\n          if (idleTokensBalances[idleToken].lt(0)) {\n            idleTokensBalances[idleToken] = this.BNify(0);\n          }\n          break;\n        default:\n          break;\n      }\n\n      // this.customLog(this.strToMoment(tx.timeStamp*1000).format('DD-MM-YYYY HH:mm:ss'),tx.blockNumber,idleToken,tx.action,idleTokens.toFixed(6),idleTokensBalances[idleToken].toFixed(6),remainingCurveTokens.toFixed(6));\n\n      // Scalo il remaining tokens\n      if (remainingCurveTokens.gt(0)) {\n        Object.keys(idleTokensBalances).forEach(token => {\n          const tokenBalance = idleTokensBalances[token];\n          if (tokenBalance && tokenBalance.gt(0)) {\n            if (tokenBalance.gt(remainingCurveTokens)) {\n              idleTokensBalances[token] = idleTokensBalances[token].minus(remainingCurveTokens);\n            } else {\n              remainingCurveTokens = remainingCurveTokens.minus(idleTokensBalances[token]);\n              idleTokensBalances[token] = 0;\n            }\n          }\n        });\n      }\n    });\n\n    // this.customLog('idleTokensBalances',idleTokensBalances);\n  }\n  getCurveUnevenTokenAmounts = async (amounts, max_burn_amount) => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract) {\n      const unevenAmounts = await this.genericContractCall(curveSwapContract.name, 'remove_liquidity_imbalance', [amounts, max_burn_amount]);\n      // this.customLog('getCurveUnevenTokenAmounts',amounts,max_burn_amount,unevenAmounts);\n      return unevenAmounts;\n    }\n    return null;\n  }\n  getCurveAPY = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getCurveAPY`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const curveRatesInfo = this.getGlobalConfig(['curve', 'rates']);\n    if (curveRatesInfo) {\n      const results = await this.makeRequest(curveRatesInfo.endpoint);\n      if (results && results.data) {\n        const path = Object.values(curveRatesInfo.path);\n        let curveApy = this.getArrayPath(path, results.data);\n        if (curveApy) {\n          curveApy = this.BNify(curveApy).times(100);\n          if (!this.BNify(curveApy).isNaN()) {\n            return this.setCachedDataWithLocalStorage(cachedDataKey, curveApy);\n          }\n        }\n      }\n    }\n    return null;\n  }\n  getCurveAvailableTokens = () => {\n    if (!this.props.availableStrategies) {\n      return false;\n    }\n    const curveTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n    const strategyTokens = this.props.availableStrategies['best'];\n    const availableTokens = Object.keys(strategyTokens).reduce((availableTokens, token) => {\n      const tokenConfig = strategyTokens[token];\n      if (Object.keys(curveTokens).includes(tokenConfig.idle.token) && curveTokens[tokenConfig.idle.token].enabled) {\n        availableTokens[token] = tokenConfig;\n      }\n      return availableTokens;\n    }, {});\n\n    return availableTokens;\n  }\n  getCurveAPYContract = async () => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract) {\n      const blockNumber = await this.getBlockNumber();\n      if (blockNumber) {\n        const blocksForPrevTokenPrice = 10;\n        let [tokenPrice, prevTokenPrice] = await Promise.all([\n          this.genericContractCall(curveSwapContract.name, 'get_virtual_price'),\n          this.genericContractCallCached(curveSwapContract.name, 'get_virtual_price', [], {}, blockNumber - blocksForPrevTokenPrice)\n        ]);\n\n        if (tokenPrice && prevTokenPrice) {\n\n          const blocksMultiplier = this.BNify(this.getGlobalConfig(['network', 'blocksPerYear'])).div(blocksForPrevTokenPrice);\n          const curveAPR = this.BNify(tokenPrice).div(prevTokenPrice).minus(1).times(blocksMultiplier);\n          return this.apr2apy(curveAPR).times(100);\n        }\n      }\n    }\n    return null;\n  }\n  getCurveTokenSupply = async () => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract) {\n      return await this.getTokenTotalSupply(curvePoolContract.name);\n    }\n    return null;\n  }\n  getCurveTokenBalance = async (account = null, fixDecimals = true) => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract) {\n      account = account ? account : this.props.account;\n      return await this.getTokenBalance(curvePoolContract.name, account, fixDecimals);\n    }\n    return null;\n  }\n  getCurveTokenPrice = async (blockNumber = 'latest', fixDecimals = true) => {\n    const migrationContract = await this.getCurveDepositContract();\n    let curveTokenPrice = await this.genericContractCallCached(migrationContract.name, 'get_virtual_price', [], {}, blockNumber);\n    if (curveTokenPrice) {\n      curveTokenPrice = this.BNify(curveTokenPrice);\n      if (fixDecimals) {\n        const curvePoolContract = this.getGlobalConfig(['curve', 'poolContract']);\n        curveTokenPrice = this.fixTokenDecimals(curveTokenPrice, curvePoolContract.decimals);\n      }\n      return curveTokenPrice;\n    }\n    return null;\n  }\n  getCurveRedeemableIdleTokens = async (account) => {\n    let [curveTokenPrice, curveTokenBalance] = await Promise.all([\n      this.getCurveTokenPrice('latest'),\n      this.getCurveTokenBalance(account),\n    ]);\n    if (curveTokenBalance && curveTokenPrice) {\n      return this.BNify(curveTokenBalance).times(curveTokenPrice);\n    }\n    return null;\n  }\n  getCurveDepositContract = async () => {\n    const depositContractInfo = this.getGlobalConfig(['curve', 'depositContract']);\n    if (depositContractInfo) {\n      let curveDepositContract = this.getContractByName(depositContractInfo.name);\n      if (!curveDepositContract && depositContractInfo.abi) {\n        curveDepositContract = await this.props.initContract(depositContractInfo.name, depositContractInfo.address, depositContractInfo.abi);\n      }\n    }\n    return depositContractInfo;\n  }\n  getCurveZapContract = async () => {\n    const zapContractInfo = this.getGlobalConfig(['curve', 'zapContract']);\n    if (zapContractInfo) {\n      let curveZapContract = this.getContractByName(zapContractInfo.name);\n      if (!curveZapContract && zapContractInfo.abi) {\n        curveZapContract = await this.props.initContract(zapContractInfo.name, zapContractInfo.address, zapContractInfo.abi);\n      }\n    }\n    return zapContractInfo;\n  }\n  getCurvePoolContract = async () => {\n    const poolContractInfo = this.getGlobalConfig(['curve', 'poolContract']);\n    if (poolContractInfo) {\n      let curvePoolContract = this.getContractByName(poolContractInfo.name);\n      if (!curvePoolContract && poolContractInfo.abi) {\n        curvePoolContract = await this.props.initContract(poolContractInfo.name, poolContractInfo.address, poolContractInfo.abi);\n      }\n    }\n    return poolContractInfo;\n  }\n  getCurveSwapContract = async () => {\n    const migrationContractInfo = this.getGlobalConfig(['curve', 'migrationContract']);\n    if (migrationContractInfo) {\n      let migrationContract = this.getContractByName(migrationContractInfo.name);\n      if (!migrationContract && migrationContractInfo.abi) {\n        migrationContract = await this.props.initContract(migrationContractInfo.name, migrationContractInfo.address, migrationContractInfo.abi);\n      }\n    }\n    return migrationContractInfo;\n  }\n  getCurveIdleTokensAmounts = async (account = null, curveTokenBalance = null, max_slippage = null) => {\n    if (!account && this.props.account) {\n      account = this.props.account;\n    }\n\n    if (!account) {\n      return null;\n    }\n\n    const tokensBalances = {};\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance) {\n      curveTokenBalance = await this.getCurveTokenBalance(account, false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply) {\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n      const n_coins = Object.keys(curveAvailableTokens).length;\n\n      if (max_slippage) {\n        max_slippage = this.BNify(max_slippage).div(n_coins);\n      }\n\n      // this.customLog('curveTokenShare',this.BNify(curveTokenBalance).toString(),this.BNify(curveTokenSupply).toString(),curveTokenShare.toString());\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const curveIdleTokens = await this.genericContractCall(curveSwapContract.name, 'balances', [coinIndex]);\n        if (curveIdleTokens) {\n          let idleTokenBalance = this.BNify(curveIdleTokens).times(curveTokenShare);\n          if (max_slippage) {\n            // this.customLog('getCurveIdleTokensAmounts',idleTokenBalance.toFixed());\n            idleTokenBalance = idleTokenBalance.minus(idleTokenBalance.times(max_slippage));\n          }\n          tokensBalances[coinIndex] = this.integerValue(idleTokenBalance);\n        }\n      });\n    }\n\n    return Object.values(tokensBalances);\n  }\n\n  // Get amounts of underlying tokens in the curve pool\n  getCurveTokensAmounts = async (account = null, curveTokenBalance = null, fixDecimals = false, useCoinIndex = false) => {\n\n    if (!account && this.props.account) {\n      account = this.props.account;\n    }\n\n    if (!account) {\n      return null;\n    }\n\n    const tokensBalances = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance) {\n      curveTokenBalance = await this.getCurveTokenBalance(account, false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply) {\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        const [\n          idleTokenPrice,\n          idleTokenBalance\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.genericContractCall(curveSwapContract.name, 'balances', [coinIndex]),\n        ]);\n\n        const totalTokenSupply = this.BNify(idleTokenBalance).times(this.BNify(idleTokenPrice));\n        let tokenBalance = totalTokenSupply.times(curveTokenShare);\n        if (fixDecimals) {\n          tokenBalance = this.fixTokenDecimals(tokenBalance, 18);\n        }\n\n        tokensBalances[curveTokenConfig.baseToken] = useCoinIndex ? this.integerValue(tokenBalance) : tokenBalance;\n      });\n    }\n\n    return useCoinIndex ? Object.values(tokensBalances) : tokensBalances;\n  }\n\n  // Compile amounts array for Curve\n  getCurveAmounts = async (token, amount, deposit = false) => {\n    const amounts = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveAvailableTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n\n    await this.asyncForEach(Object.keys(curveAvailableTokens), async (idleToken) => {\n      const curveTokenConfig = curveAvailableTokens[idleToken];\n      const migrationParams = curveTokenConfig.migrationParams;\n      const coinIndex = migrationParams.coinIndex;\n      if (idleToken === token && parseFloat(amount) > 0) {\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        amount = this.fixTokenDecimals(amount, 18);\n        if (!deposit) {\n          const idleTokenPrice = await this.getIdleTokenPrice(tokenConfig);\n          amount = amount.div(idleTokenPrice);\n        }\n        amount = this.normalizeTokenAmount(amount, curveTokenConfig.decimals);\n        amounts[coinIndex] = amount;\n      } else {\n        amounts[coinIndex] = 0;\n      }\n    });\n\n    return Object.values(amounts);\n  }\n  getCurveTokenAmount = async (amounts, deposit = true) => {\n    const migrationContract = await this.getCurveSwapContract();\n    if (migrationContract) {\n      return await this.genericContractCall(migrationContract.name, 'calc_token_amount', [amounts, deposit]);\n    }\n    return null;\n  }\n  getCurveSlippage = async (token, amount, deposit = true, uneven_amounts = null) => {\n    let slippage = null;\n    const depositContract = await this.getCurveDepositContract();\n    if (depositContract) {\n\n      const n_coins = this.getGlobalConfig(['curve', 'params', 'n_coins']);\n\n      amount = this.BNify(amount)\n      if (!amount || amount.isNaN() || amount.lte(0)) {\n        return null;\n      }\n\n      let amounts = uneven_amounts;\n      if (!amounts || amounts.length !== n_coins) {\n        amounts = await this.getCurveAmounts(token, amount);\n      }\n\n      let [\n        virtualPrice,\n        tokenAmount\n      ] = await Promise.all([\n        this.genericContractCall(depositContract.name, 'get_virtual_price'),\n        this.genericContractCall(depositContract.name, 'calc_token_amount', [amounts, deposit]),\n      ]);\n\n      if (virtualPrice && tokenAmount) {\n        amount = this.fixTokenDecimals(amount, 18);\n        virtualPrice = this.fixTokenDecimals(virtualPrice, 18);\n        tokenAmount = this.fixTokenDecimals(tokenAmount, 18);\n        const Sv = tokenAmount.times(virtualPrice);\n\n        // Handle redeem in uneven amounts (Slippage 0%)\n        if (uneven_amounts && !deposit) {\n          amount = amount.times(virtualPrice);\n        }\n\n        if (deposit) {\n          slippage = Sv.div(amount).minus(1).times(-1);\n        } else {\n          slippage = amount.div(Sv).minus(1).times(-1);\n        }\n\n        // console.log('getCurveSlippage',token,deposit,amounts,tokenAmount.toFixed(6),virtualPrice.toFixed(6),Sv.toFixed(6),amount.toFixed(6),slippage.toFixed(6));\n\n        return slippage;\n      }\n    }\n    return null;\n  }\n  getStkAaveDistribution = async (tokenConfig, aTokenIdleSupply = null, annualize = true) => {\n\n    const cachedDataKey = `getStkAaveDistribution_${tokenConfig.idle.token}_${aTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const currentNetworkId = this.getRequiredNetworkId();\n\n    let aaveDistribution = this.BNify(0);\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens', 'stkAAVE']);\n    const aTokenConfig = tokenConfig.protocols.find(p => p.name === stkAAVETokenConfig.protocol);\n\n    // console.log('getStkAaveDistribution_1',tokenConfig.idle.token,aTokenConfig.token);\n    const disabledTokens = this.getArrayPath(['disabledTokens', currentNetworkId], stkAAVETokenConfig) || [];\n\n    if (!aTokenConfig || disabledTokens.includes(tokenConfig.idle.token)) {\n      return aaveDistribution;\n    }\n\n    const aaveIncentivesController_address = await this.genericContractCall(aTokenConfig.token, 'getIncentivesController');\n\n    if (!aaveIncentivesController_address) {\n      return aaveDistribution;\n    }\n\n    const IAaveIncentivesController_name = `IAaveIncentivesController_${aaveIncentivesController_address}`;\n    await this.props.initContract(IAaveIncentivesController_name, aaveIncentivesController_address, IAaveIncentivesController);\n\n    let [\n      aTokenTotalSupply,\n      tokenAllocation,\n      assetData,\n    ] = await Promise.all([\n      this.getTokenTotalSupply(aTokenConfig.token),\n      this.getTokenAllocation(tokenConfig, false, false),\n      this.genericContractCall(IAaveIncentivesController_name, 'assets', [aTokenConfig.address]),\n    ]);\n\n    // console.log('getStkAaveDistribution',IAaveIncentivesController_name,aTokenConfig.address,assetData);\n\n    if (assetData && tokenAllocation) {\n\n      const aaveAllocationPerc = tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()];\n\n      if (aaveAllocationPerc && aaveAllocationPerc.gte(0.001)) {\n        if (!aTokenIdleSupply) {\n          aTokenIdleSupply = await this.genericContractCall(aTokenConfig.token, 'balanceOf', [tokenConfig.idle.address]);\n        }\n\n        const aaveSpeed = this.BNify(assetData.emissionPerSecond);\n        aTokenIdleSupply = this.BNify(aTokenIdleSupply);\n        aTokenTotalSupply = this.BNify(aTokenTotalSupply);\n        const secondsPerYear = this.getGlobalConfig(['network', 'secondsPerYear']);\n\n        const aavePoolShare = aTokenIdleSupply.div(aTokenTotalSupply);\n        aaveDistribution = aaveSpeed.times(aavePoolShare);\n\n        if (annualize) {\n          aaveDistribution = aaveDistribution.div(1e18).times(secondsPerYear);\n        }\n\n        if (!this.BNify(aaveDistribution).isNaN()) {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, aaveDistribution);\n        }\n      }\n    }\n\n    return aaveDistribution;\n  }\n  getStkAaveUserDistribution = async (account = null, availableTokens = null) => {\n    if (!account) {\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens) {\n      return false;\n    }\n\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens', 'stkAAVE']);\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const aTokenInfo = tokenConfig.protocols.find(p => (p.name === stkAAVETokenConfig.protocol));\n      if (aTokenInfo) {\n        const [\n          userPoolShare,\n          aaveDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account, tokenConfig, false),\n          this.getStkAaveDistribution(tokenConfig, null, false),\n        ]);\n\n        if (aaveDistribution && userPoolShare && !this.BNify(aaveDistribution).isNaN() && !this.BNify(userPoolShare).isNaN()) {\n          output = output.plus(aaveDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getWMaticApr = async (token, tokenConfig, maticConversionRate = null) => {\n    const wMaticTokenConfig = this.getGlobalConfig(['govTokens', 'WMATIC']);\n    if (!wMaticTokenConfig.enabled) {\n      return false;\n    }\n\n    const cachedDataKey = `getWMaticApr_${tokenConfig.idle.token}_${maticConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let wMaticApr = this.BNify(0);\n    const distributionSpeed = await this.getStkAaveDistribution(tokenConfig);\n\n    if (distributionSpeed && this.BNify(distributionSpeed).gt(0)) {\n\n      // Get COMP conversion rate\n      if (!maticConversionRate) {\n        const DAITokenConfig = {\n          address: this.getContractByName('DAI')._address\n        };\n        try {\n          const destTokenConfig = {\n            address: wMaticTokenConfig.addressForPrice || wMaticTokenConfig.address\n          };\n          maticConversionRate = await this.getUniswapConversionRate(DAITokenConfig, destTokenConfig);\n        } catch (error) {\n\n        }\n        if (!maticConversionRate || maticConversionRate.isNaN()) {\n          maticConversionRate = this.BNify(1);\n        }\n      }\n\n      const wMaticValue = this.BNify(maticConversionRate).times(distributionSpeed);\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, false);\n\n      // console.log('wMaticApr',tokenConfig.idle.token,distributionSpeed.toFixed(),this.BNify(maticConversionRate).toFixed(),tokenAllocation);\n\n      if (tokenAllocation) {\n        wMaticApr = wMaticValue.div(tokenAllocation.totalAllocationConverted).times(100);\n\n        // console.log('wMaticApr',tokenConfig.idle.token,distributionSpeed.toFixed(),this.BNify(maticConversionRate).toFixed(),wMaticValue.toFixed(),tokenAllocation.totalAllocationConverted.toFixed(),wMaticApr.toFixed());\n\n        if (!this.BNify(wMaticApr).isNaN()) {\n          this.setCachedDataWithLocalStorage(cachedDataKey, wMaticApr);\n        }\n      }\n    }\n\n    return wMaticApr;\n  }\n  getStkAaveApr = async (token, tokenConfig, aaveConversionRate = null) => {\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens', 'stkAAVE']);\n    if (!stkAAVETokenConfig.enabled) {\n      return false;\n    }\n\n    const cachedDataKey = `getStkAaveApr_${tokenConfig.idle.token}_${aaveConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let stkAaveAPR = this.BNify(0);\n    const aaveDistribution = await this.getStkAaveDistribution(tokenConfig);\n\n    if (aaveDistribution && this.BNify(aaveDistribution).gt(0)) {\n\n      // Get COMP conversion rate\n      if (!aaveConversionRate) {\n        const DAITokenConfig = {\n          address: this.getContractByName('DAI')._address\n        };\n        try {\n          const destTokenConfig = {\n            address: stkAAVETokenConfig.addressForPrice || stkAAVETokenConfig.address\n          };\n          aaveConversionRate = await this.getUniswapConversionRate(DAITokenConfig, destTokenConfig);\n        } catch (error) {\n\n        }\n        if (!aaveConversionRate || aaveConversionRate.isNaN()) {\n          aaveConversionRate = this.BNify(1);\n        }\n      }\n\n      const stkAaveValue = this.BNify(aaveConversionRate).times(aaveDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, false);\n\n      if (tokenAllocation) {\n        stkAaveAPR = stkAaveValue.div(tokenAllocation.totalAllocationConverted).times(100);\n\n        // console.log('getStkAaveApr',tokenConfig.idle.token,aaveDistribution.toFixed(),this.BNify(aaveConversionRate).toFixed(),stkAaveValue.toFixed(),tokenAllocation.totalAllocationConverted.toFixed(),stkAaveAPR.toFixed());\n\n        if (!this.BNify(stkAaveAPR).isNaN()) {\n          this.setCachedDataWithLocalStorage(cachedDataKey, stkAaveAPR);\n        }\n      }\n    }\n\n    return stkAaveAPR;\n  }\n  getCompAPR = async (token, tokenConfig, cTokenIdleSupply = null, compConversionRate = null) => {\n    const COMPTokenConfig = this.getGlobalConfig(['govTokens', 'COMP']);\n    if (!COMPTokenConfig.enabled) {\n      return false;\n    }\n\n    const cachedDataKey = `getCompAPR_${tokenConfig.idle.token}_${cTokenIdleSupply}_${compConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let compAPR = this.BNify(0);\n    const compDistribution = await this.getCompDistribution(tokenConfig, cTokenIdleSupply);\n\n    if (compDistribution) {\n\n      const DAITokenConfig = {\n        address: this.getContractByName('DAI')._address\n      };\n\n      // Get COMP conversion rate\n      if (!compConversionRate) {\n        try {\n          compConversionRate = await this.getUniswapConversionRate(DAITokenConfig, COMPTokenConfig);\n        } catch (error) {\n\n        }\n        if (!compConversionRate || compConversionRate.isNaN()) {\n          compConversionRate = this.BNify(1);\n        }\n      }\n\n      const compValue = this.BNify(compConversionRate).times(compDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, false);\n\n      console.log('getCompAPR', tokenConfig.idle.token, compConversionRate.toFixed(5), compDistribution.toFixed(5), compValue.toFixed(5), tokenAllocation.totalAllocationConverted.toFixed(5));\n\n      if (tokenAllocation) {\n        compAPR = compValue.div(tokenAllocation.totalAllocationConverted).times(100);\n        if (!this.BNify(compAPR).isNaN()) {\n          this.setCachedDataWithLocalStorage(cachedDataKey, compAPR);\n        }\n      }\n    }\n\n    return compAPR;\n  }\n  getCompSpeed = async (cTokenAddress) => {\n    let compSpeed = await this.genericContractCallCached('Comptroller', 'compSupplySpeeds', [cTokenAddress]);\n    if (compSpeed) {\n      return this.BNify(compSpeed);\n    }\n    return null;\n  }\n  getCompDistribution = async (tokenConfig, cTokenIdleSupply = null, annualize = true) => {\n\n    const cachedDataKey = `getCompDistribution_${tokenConfig.idle.token}_${cTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const cTokenInfo = tokenConfig.protocols.find(p => (p.name === 'compound'));\n    if (cTokenInfo) {\n\n      // Get IdleToken allocation in compound\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, false);\n      const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenInfo.address.toLowerCase()];\n\n      // Calculate distribution if compound allocation >= 0.1%\n      if (compoundAllocationPerc && compoundAllocationPerc.gte(0.001)) {\n\n        // Get COMP distribution speed and Total Supply\n        const [\n          compSpeed,\n          cTokenTotalSupply\n        ] = await Promise.all([\n          this.getCompSpeed(cTokenInfo.address),\n          this.getTokenTotalSupply(cTokenInfo.token)\n        ]);\n\n        if (compSpeed && cTokenTotalSupply) {\n\n          // Get Idle liquidity supply\n          if (!cTokenIdleSupply) {\n            cTokenIdleSupply = await this.getContractBalance(cTokenInfo.token, tokenConfig.idle.address);\n          }\n\n          if (cTokenIdleSupply) {\n\n            // Get COMP distribution for Idle in a Year\n            const blocksPerYear = this.getGlobalConfig(['network', 'blocksPerYear']);\n\n            // Take 50% of distrubution for lenders side\n            const compoundPoolShare = this.BNify(cTokenIdleSupply).div(this.BNify(cTokenTotalSupply));\n            let compDistribution = this.BNify(compSpeed).times(compoundPoolShare);\n\n            if (annualize) {\n              compDistribution = this.fixTokenDecimals(compDistribution, 18).times(blocksPerYear);\n            }\n\n            if (!this.BNify(compDistribution).isNaN()) {\n              return this.setCachedDataWithLocalStorage(cachedDataKey, compDistribution);\n            }\n          }\n        }\n      }\n    }\n\n    return null;\n  }\n  getCompUserDistribution = async (account = null, availableTokens = null) => {\n    if (!account) {\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens) {\n      return false;\n    }\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const cTokenInfo = tokenConfig.protocols.find(p => (p.name === 'compound'));\n      if (cTokenInfo) {\n        const [\n          userPoolShare,\n          compDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account, tokenConfig, false),\n          this.getCompDistribution(tokenConfig, null, false),\n        ]);\n\n        if (compDistribution && userPoolShare) {\n          output = output.plus(compDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getCompAvgApr = async (availableTokens = null) => {\n    if (!availableTokens && this.props.selectedStrategy) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.BNify(0);\n    let totalAllocation = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [compApr, tokenAllocation] = await Promise.all([\n        this.getCompAPR(token, tokenConfig),\n        this.getTokenAllocation(tokenConfig, false, false)\n      ]);\n\n      if (compApr && tokenAllocation) {\n        output = output.plus(compApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n        // this.customLog(token,compApr.toString(),tokenAllocation.totalAllocation.toString(),output.toString(),totalAllocation.toString());\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n  getTokensCsv = async () => {\n\n    // eslint-disable-next-line\n    Array.prototype.sum = function () {\n      return this.reduce(function (pv, cv) { return pv + cv; }, 0);\n    };\n    // eslint-disable-next-line\n    Array.prototype.max = function () {\n      return Math.max.apply(null, this);\n    };\n    // eslint-disable-next-line\n    Array.prototype.avg = function () {\n      return this.sum() / this.length;\n    };\n\n    const csv = [];\n    const availableStrategies = this.props.availableStrategies;\n    await this.asyncForEach(Object.keys(availableStrategies), async (strategy) => {\n      const availableTokens = availableStrategies[strategy];\n      const isRisk = strategy === 'risk';\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n        const tokenConfig = availableTokens[token];\n        const rates = await this.getTokenApiData(tokenConfig.address, isRisk, null, null, false, 7200, 'ASC');\n        const header = [];\n        let protocols = null;\n        const rows = [];\n        const aprAvg = {};\n        const scoreAvg = {};\n\n        const lastRow = rates[rates.length - 1];\n\n        rates.forEach(r => {\n          if (!protocols) {\n            header.push('Token');\n            header.push('Date');\n\n            // Get protocols\n            protocols = [];\n            lastRow.protocolsData.forEach(p1 => {\n              const foundProtocol = tokenConfig.protocols.find(p2 => (p2.address.toLowerCase() === p1.protocolAddr.toLowerCase()));\n              if (foundProtocol) {\n                protocols.push(foundProtocol);\n              }\n            });\n\n            // Add APR columns\n            header.push('APR Idle');\n            header.push('SCORE Idle');\n\n            aprAvg['idle'] = [];\n            scoreAvg['idle'] = [];\n\n            protocols.forEach(p => {\n              header.push('APR ' + p.name);\n              header.push('SCORE ' + p.name);\n\n              aprAvg[p.name] = [];\n              scoreAvg[p.name] = [];\n            });\n\n            rows.push(header.join(','));\n          }\n\n          const date = moment(r.timestamp * 1000).format('YYYY-MM-DD');\n          const rate = this.BNify(r.idleRate).div(1e18).toFixed(5);\n          const score = parseFloat(r.idleScore);\n\n          const row = [];\n          row.push(`${token}-${strategy}`);\n          row.push(date);\n          row.push(rate);\n          row.push(score);\n\n          if (date >= '2020-09-15'/* && date<='2020-11-09'*/) {\n            aprAvg['idle'].push(parseFloat(rate));\n            scoreAvg['idle'].push(parseFloat(score));\n          }\n\n          protocols.forEach(pInfo => {\n            const pData = r.protocolsData.find(p => (p.protocolAddr.toLowerCase() === pInfo.address.toLowerCase()));\n            let pRate = '';\n            let pScore = '';\n            if (pData) {\n              pScore = !this.BNify(pData.defiScore).isNaN() ? parseFloat(pData.defiScore) : '0.00000';\n              pRate = !this.BNify(pData.rate).isNaN() ? this.BNify(pData.rate).div(1e18) : '0.00000';\n              if (typeof pData[`${pInfo.name}AdditionalAPR`] !== 'undefined') {\n                const additionalRate = this.BNify(pData[`${pInfo.name}AdditionalAPR`]).div(1e18);\n                if (!additionalRate.isNaN()) {\n                  pRate = pRate.plus(additionalRate);\n                }\n              }\n\n              if (date >= '2020-09-15'/* && date<='2020-11-09'*/) {\n                if (!isNaN(parseFloat(pRate))) {\n                  aprAvg[pInfo.name].push(parseFloat(pRate));\n                }\n                if (!isNaN(parseFloat(pScore))) {\n                  scoreAvg[pInfo.name].push(parseFloat(pScore));\n                }\n              }\n            }\n\n            row.push(pRate);\n            row.push(pScore);\n          });\n\n          rows.push(row.join(','));\n        });\n\n        Object.keys(aprAvg).forEach(p => {\n          const avgRate = aprAvg[p].sum() / aprAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Rate: ${avgRate}`);\n        });\n\n        Object.keys(scoreAvg).forEach(p => {\n          const avgScore = scoreAvg[p].sum() / scoreAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Score: ${avgScore}`);\n        });\n\n        // if (token==='DAI' && isRisk){\n        //   debugger;\n        // }\n\n        csv.push(rows.join('\\n'));\n      });\n    });\n\n    this.customLog(csv.join('\\n'));\n  }\n  getGovTokenPool = async (govToken = null, availableTokens = null, convertToken = null) => {\n    let output = this.BNify(0);\n\n    if (!availableTokens) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const enabledTokens = govToken ? [govToken] : null;\n      const compTokenBalance = await this.getGovTokensBalances(tokenConfig.idle.address, convertToken, enabledTokens);\n      if (compTokenBalance && compTokenBalance.total) {\n        output = output.plus(compTokenBalance.total);\n      }\n    });\n    return output;\n  }\n  getIdleGovToken = () => {\n    if (!this.idleGovToken) {\n      this.idleGovToken = new IdleGovToken(this.props);\n    } else {\n      this.idleGovToken.setProps(this.props);\n    }\n    return this.idleGovToken;\n  }\n  getGovTokensFarming = () => {\n    const output = {};\n    const availableTokens = this.props.availableTokens;\n\n    Object.keys(availableTokens).forEach(token => {\n      const tokenGovTokens = this.getTokenGovTokens(availableTokens[token]);\n      Object.keys(tokenGovTokens).forEach(govToken => {\n        output[govToken] = tokenGovTokens[govToken];\n      });\n    });\n\n    return output;\n  }\n  getTokenGovTokens = (tokenConfig) => {\n    const output = {};\n    const currentNetworkId = this.getRequiredNetworkId();\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    Object.keys(govTokens).forEach(govToken => {\n      const govTokenConfig = govTokens[govToken];\n      const disabledTokens = this.getArrayPath(['disabledTokens', currentNetworkId], govTokenConfig) || [];\n      if (!govTokenConfig.enabled || disabledTokens.includes(tokenConfig.idle.token) || (govTokenConfig.availableNetworks && !govTokenConfig.availableNetworks.includes(currentNetworkId))) {\n        return;\n      }\n\n      if (govTokenConfig.protocol === 'idle') {\n        output[govToken] = govTokenConfig;\n      } else {\n        const foundProtocol = tokenConfig.protocols.find(p => (p.enabled && p.name.toLowerCase() === govTokenConfig.protocol.toLowerCase()))\n        if (foundProtocol) {\n          output[govToken] = govTokenConfig;\n        }\n      }\n    });\n    return output;\n  }\n  fixDistributionSpeed = (speed, frequency = 'day', mode = 'block') => {\n    const blocksPerYear = this.BNify(this.getGlobalConfig(['network', 'blocksPerYear']));\n    const secondsPerYear = this.BNify(this.getGlobalConfig(['network', 'secondsPerYear']));\n    const multipliers = {\n      'day': {\n        'block': blocksPerYear.div(365.242199),\n        'second': secondsPerYear.div(365.242199)\n      },\n      'week': {\n        'block': blocksPerYear.div(52.1429),\n        'second': secondsPerYear.div(52.1429)\n      },\n      'month': {\n        'block': blocksPerYear.div(12),\n        'second': secondsPerYear.div(12)\n      },\n      'year': {\n        'block': blocksPerYear.div(1),\n        'second': secondsPerYear.div(1)\n      }\n    };\n    speed = this.BNify(speed);\n    if (speed && !speed.isNaN()) {\n      return speed.times(multipliers[frequency][mode]);\n    }\n    return null;\n  }\n  getGovTokensUserDistributionSpeed = async (account, tokenConfig = null, enabledTokens = null) => {\n    const govTokensUserDistribution = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    await this.asyncForEach(Object.keys(govTokens), async (govToken) => {\n      if (enabledTokens && !enabledTokens.includes(govToken)) {\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled) {\n        return;\n      }\n\n      const availableTokens = {};\n      availableTokens[tokenConfig.token] = tokenConfig;\n\n      let output = null;\n      switch (govToken) {\n        case 'COMP':\n          output = await this.getCompUserDistribution(account, availableTokens);\n          break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          output = await idleGovToken.getUserDistribution(account, availableTokens);\n          break;\n        default:\n          break;\n      }\n\n      if (output) {\n        output = output.div(1e18);\n        if (govTokenConfig.distributionFrequency) {\n          output = this.fixDistributionSpeed(output, govTokenConfig.distributionFrequency, govTokenConfig.distributionMode);\n        }\n        govTokensUserDistribution[govToken] = output;\n      }\n    });\n\n    return govTokensUserDistribution;\n  }\n  getGovTokensDistributionSpeed = async (tokenConfig, enabledTokens = null) => {\n    const govTokensDistribution = {};\n    const tokenGovTokens = this.getTokenGovTokens(tokenConfig);\n\n    await this.asyncForEach(Object.keys(tokenGovTokens), async (govToken) => {\n      let govSpeed = null;\n      const govTokenConfig = tokenGovTokens[govToken];\n\n      switch (govToken) {\n        case 'COMP':\n          govSpeed = await this.getCompDistribution(tokenConfig, null, false);\n          break;\n        case 'WMATIC':\n        case 'stkAAVE':\n          govSpeed = await this.getStkAaveDistribution(tokenConfig, null, false);\n          break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          govSpeed = await idleGovToken.getSpeed(tokenConfig.idle.address);\n          break;\n        default:\n          break;\n      }\n\n      if (govSpeed) {\n        govSpeed = govSpeed.div(1e18);\n        if (govTokenConfig.distributionFrequency && govTokenConfig.distributionMode) {\n          govSpeed = this.fixDistributionSpeed(govSpeed, govTokenConfig.distributionFrequency, govTokenConfig.distributionMode);\n        }\n        govTokensDistribution[govToken] = govSpeed;\n      }\n    });\n\n    return govTokensDistribution;\n  }\n  getGovTokensAprs = async (token, tokenConfig, enabledTokens = null) => {\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensAprs = {}\n\n    await this.asyncForEach(Object.keys(govTokens), async (govToken) => {\n\n      if (enabledTokens && !enabledTokens.includes(govToken)) {\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled || govTokenConfig.aprTooltipMode === false) {\n        return;\n      }\n\n      let output = null;\n      let tokenAllocation = null;\n\n      switch (govToken) {\n        case 'WMATIC':\n        case 'stkAAVE':\n          switch (govTokenConfig.aprTooltipMode) {\n            default:\n            case 'apr':\n              [output, tokenAllocation] = await Promise.all([\n                this.getStkAaveApr(token, tokenConfig),\n                this.getTokenAllocation(tokenConfig, false, false)\n              ]);\n\n              // Cut the AAVE token proportionally on Idle funds allocation in aave\n              if (tokenAllocation) {\n                const aTokenConfig = tokenConfig.protocols.find(p => (p.name === govTokenConfig.protocol));\n                if (aTokenConfig) {\n                  if (tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()]) {\n                    const aaveAllocationPerc = tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()];\n                    output = output.times(aaveAllocationPerc);\n                  }\n                }\n              }\n              break;\n          }\n          break;\n        case 'COMP':\n          switch (govTokenConfig.aprTooltipMode) {\n            default:\n            case 'apr':\n              [output, tokenAllocation] = await Promise.all([\n                this.getCompAPR(token, tokenConfig),\n                this.getTokenAllocation(tokenConfig, false, false)\n              ]);\n\n              // Cut the COMP token proportionally on Idle funds allocation in compound\n              if (tokenAllocation) {\n                const cTokenConfig = tokenConfig.protocols.find(p => (p.name === 'compound'));\n                if (cTokenConfig) {\n                  if (tokenAllocation.protocolsAllocationsPerc[cTokenConfig.address.toLowerCase()]) {\n                    const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenConfig.address.toLowerCase()];\n                    output = output.times(compoundAllocationPerc);\n                  }\n                }\n              }\n              break;\n          }\n          break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          switch (govTokenConfig.aprTooltipMode) {\n            case 'apr':\n              output = await idleGovToken.getAPR(token, tokenConfig);\n              break;\n            case 'distribution':\n              output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n              if (output) {\n                output = this.fixTokenDecimals(output, 18);\n                output = this.fixDistributionSpeed(output, govTokenConfig.distributionFrequency, govTokenConfig.distributionMode);\n              }\n              break;\n            case 'userDistribution':\n              output = await idleGovToken.getUserDistribution(tokenConfig);\n              break;\n            default:\n              break;\n          }\n          break;\n        default:\n          break;\n      }\n\n      if (output !== null && this.BNify(output).gt(0)) {\n        govTokensAprs[govToken] = output;\n      }\n    });\n\n    return govTokensAprs;\n  }\n  getGovTokensBalances = async (address = null, convertToken = 'DAI', enabledTokens = null) => {\n    if (!address) {\n      address = this.props.tokenConfig.idle.address;\n    }\n\n    const cachedDataKey = `getGovTokensBalances_${address}_${convertToken}_${JSON.stringify(enabledTokens)}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensBalances = {}\n\n    await this.asyncForEach(Object.keys(govTokens), async (token) => {\n\n      if (enabledTokens && !enabledTokens.includes(token)) {\n        return;\n      }\n\n      const govTokenConfig = govTokens[token];\n\n      if (!govTokenConfig.enabled) {\n        return;\n      }\n\n      const destTokenConfig = {\n        address: govTokenConfig.addressForPrice || govTokenConfig.address\n      };\n\n      // Get gov token balance\n      let govTokenBalance = await this.getProtocolBalance(token, address);\n\n      if (govTokenBalance) {\n        // Get gov token conversion rate\n        let tokenConversionRate = null;\n        if (convertToken) {\n          const fromTokenConfig = this.getGlobalConfig(['stats', 'tokens', convertToken.toUpperCase()]);\n          try {\n            tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig, destTokenConfig);\n          } catch (error) {\n            tokenConversionRate = this.BNify(0);\n          }\n        }\n\n        const tokenBalance = this.fixTokenDecimals(govTokenBalance, govTokens[token].decimals, tokenConversionRate);\n\n        // Fix token decimals and convert\n        govTokensBalances[token] = tokenBalance;\n\n        // Initialize Total gov Tokens\n        if (!govTokensBalances.total) {\n          govTokensBalances.total = this.BNify(0);\n        }\n\n        // Sum Total gov Tokens\n        govTokensBalances.total = govTokensBalances.total.plus(govTokensBalances[token]);\n      }\n    });\n\n    return this.setCachedData(cachedDataKey, govTokensBalances);\n  }\n  getTokenConfigByAddress = (address) => {\n    if (!address) {\n      return false;\n    }\n    const tokensConfigs = this.getGlobalConfig(['stats','tokens']);\n    let foundToken = Object.keys(tokensConfigs).find(token => {\n      const tokenConfig = tokensConfigs[token];\n      return tokenConfig.enabled && tokenConfig.address && tokenConfig.address.toLowerCase() === address.toLowerCase();\n    });\n    let foundTokenConfig = null;\n    if (foundToken){\n      foundTokenConfig = tokensConfigs[foundToken];\n      foundTokenConfig.token = foundToken;\n    } else {\n      foundTokenConfig = this.getGovTokenConfigByAddress(address);\n    }\n    return foundTokenConfig;\n  }\n  getGovTokenConfigByAddress = (address) => {\n    if (!address) {\n      return false;\n    }\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    return Object.values(govTokens).find(tokenConfig => (tokenConfig.enabled && tokenConfig.address && tokenConfig.address.toLowerCase() === address.toLowerCase()));\n  }\n  getGovTokensUserTotalBalance = async (account = null, availableTokens = null, convertToken = null, checkShowBalance = true) => {\n\n    // Check for cached data\n    const cachedDataKey = `govTokensUserTotalBalance_${account}_${availableTokens ? JSON.stringify(Object.keys(availableTokens)) : 'null'}_${convertToken}_${checkShowBalance}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account, availableTokens, convertToken, null, checkShowBalance);\n    if (govTokensUserBalances) {\n      const govTokensEarnings = Object.values(govTokensUserBalances).reduce((acc, govTokenAmount) => {\n        acc = acc.plus(this.BNify(govTokenAmount));\n        return acc;\n      }, this.BNify(0));\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey, govTokensEarnings);\n    }\n    return this.BNify(0);\n  }\n  getGovTokensIndexes = async (account, tokenConfig) => {\n    if (!account) {\n      account = this.props.account;\n    }\n    const output = {};\n    const govTokensAmounts = await this.getGovTokensUserAmounts(tokenConfig.idle.token, account);\n    if (govTokensAmounts) {\n      await this.asyncForEach(govTokensAmounts, async (govTokenAmount, govTokenIndex) => {\n        // Get gov Token config by index\n        const govTokenAddress = await this.getGovTokenAddessByIndex(tokenConfig.idle.token, govTokenIndex);\n\n        if (govTokenAddress) {\n          const govTokenConfig = this.getGovTokenConfigByAddress(govTokenAddress);\n          if (govTokenConfig) {\n            output[govTokenConfig.token] = govTokenIndex;\n          }\n        }\n      });\n    }\n\n    return output;\n  }\n  getGovTokenAddessByIndex = async (token, govTokenIndex) => {\n    const cachedDataKey = `govTokenAddressByIndex_${token}_${govTokenIndex}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    // console.log(cachedDataKey,cachedData);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const govTokenAddress = await this.genericContractCall(token, 'govTokens', [govTokenIndex]);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, govTokenAddress, null);\n  }\n  getGovTokensUserAmounts = async (token, account) => {\n    const cachedDataKey = `govTokenUserAmount_${token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const govTokenAddress = await this.genericContractCall(token, 'getGovTokensAmounts', [account]);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, govTokenAddress);\n  }\n  getGovTokensUserBalances = async (account = null, availableTokens = null, convertToken = null, govTokenConfigForced = null, checkShowBalance = false) => {\n    if (!account) {\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.availableStrategies && this.props.selectedStrategy) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    const output = {};\n\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const idleTokenConfig = availableTokens[token].idle;\n\n      // Get govTokens amounts\n      const govTokensAmounts = await this.getGovTokensUserAmounts(idleTokenConfig.token, account);\n\n      // console.log('getGovTokensUserBalances_1',idleTokenConfig.token,govTokensAmounts);\n\n      if (govTokensAmounts) {\n        await this.asyncForEach(govTokensAmounts, async (govTokenAmount, govTokenIndex) => {\n          govTokenAmount = this.BNify(govTokenAmount);\n          // Get gov Token config by index\n          const govTokenAddress = await this.getGovTokenAddessByIndex(idleTokenConfig.token, govTokenIndex);\n\n          // console.log('getGovTokensUserBalances_2',idleTokenConfig.token,govTokenIndex,govTokenAddress);\n\n          if (govTokenAddress) {\n            const govTokenConfig = govTokenConfigForced ? govTokenConfigForced : this.getGovTokenConfigByAddress(govTokenAddress);\n\n            if (govTokenConfig && (!checkShowBalance || govTokenConfig.showBalance) && govTokenConfig.address && govTokenConfig.address.toLowerCase() === govTokenAddress.toLowerCase()) {\n\n              // Get gov token conversion rate\n              let tokenConversionRate = null;\n              if (convertToken) {\n                const fromTokenConfig = this.getGlobalConfig(['stats', 'tokens', convertToken.toUpperCase()]);\n                if (fromTokenConfig) {\n                  try {\n                    tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig, govTokenConfig);\n                  } catch (error) {\n\n                  }\n                }\n              }\n\n              govTokenAmount = this.fixTokenDecimals(govTokenAmount, govTokenConfig.decimals, tokenConversionRate);\n\n              // console.log('getGovTokensUserBalances',idleTokenConfig.token,govTokenIndex,govTokenConfig.token,govTokenAddress,parseFloat(tokenConversionRate),parseFloat(govTokenAmount));\n\n              // Initialize govToken balance\n              if (!output[govTokenConfig.token]) {\n                output[govTokenConfig.token] = this.BNify(0); // this.BNify(1) for testing\n              }\n\n              // Add govTokens balance\n              output[govTokenConfig.token] = output[govTokenConfig.token].plus(govTokenAmount);\n            }\n          }\n        });\n      }\n    });\n\n    return output;\n  }\n  getTokenFees = async (tokenConfig = null) => {\n    if (!tokenConfig && this.props.tokenConfig) {\n      tokenConfig = this.props.tokenConfig;\n    }\n    const fee = await this.genericContractCallCached(tokenConfig.idle.token, 'fee', [], {}, 'latest', null);\n    if (fee) {\n      return this.BNify(fee).div(this.BNify(100000));\n    }\n    return null;\n  }\n  getUserTokenFees = async (tokenConfig = null, account = null) => {\n    if (!tokenConfig && this.props.tokenConfig) {\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!account && this.props.account) {\n      account = this.props.account;\n    }\n\n    if (!account || !tokenConfig) {\n      return null;\n    }\n\n    let [\n      feePercentage,\n      amountLent,\n      redeemableBalance\n    ] = await Promise.all([\n      this.getTokenFees(tokenConfig),\n      this.loadAssetField('amountLent', tokenConfig.token, tokenConfig, account),\n      this.loadAssetField('redeemableBalance', tokenConfig.token, tokenConfig, account)\n    ]);\n\n    if (feePercentage && amountLent && redeemableBalance) {\n      const gain = redeemableBalance.minus(amountLent);\n      const fees = gain.times(feePercentage);\n\n      // this.customLog('fees',tokenConfig.token,amountLent.toString(),redeemableBalance.toString(),gain.toString(),fees.toString());\n\n      return fees;\n    }\n\n    return null;\n  }\n  getGovTokenUserBalance = async (govTokenConfig, account = null, availableTokens = null, convertToken = null) => {\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account, availableTokens, convertToken, govTokenConfig);\n    return govTokensUserBalances && govTokensUserBalances[govTokenConfig.token] ? govTokensUserBalances[govTokenConfig.token] : this.BNify(0);\n  }\n  getTotalTVL = async () => {\n    const tokensTVL = await this.getTokensTVL();\n    return Object.values(tokensTVL).reduce((totalTVL, tokenInfo) => {\n      const tokenTVL = this.BNify(tokenInfo.totalTVL);\n      if (tokenTVL && !tokenTVL.isNaN()) {\n        totalTVL = totalTVL.plus(tokenTVL);\n      }\n      return totalTVL;\n    }, this.BNify(0));\n  }\n  getTokensTVL = async () => {\n    const output = {};\n    const DAITokenConfig = {\n      address: this.getContractByName('DAI')._address\n    };\n    await this.asyncForEach(Object.keys(this.props.availableStrategies), async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n\n        let tokenTVL = this.BNify(0);\n        let totalTVL = this.BNify(0);\n        let oldTokenTVL = this.BNify(0);\n        const tokenConfig = availableTokens[token];\n        const idleTokenName = tokenConfig.idle.token;\n\n        output[idleTokenName] = {\n          tokenTVL,\n          totalTVL,\n          oldTokenTVL,\n          govTokens: {},\n        };\n\n        const [\n          tokenPrice,\n          totalSupply\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getIdleTokenSupply(idleTokenName)\n        ]);\n\n        tokenTVL = this.fixTokenDecimals(totalSupply, 18).times(tokenPrice);\n        tokenTVL = await this.convertTokenBalance(tokenTVL, token, tokenConfig, isRisk);\n\n        output[idleTokenName].tokenTVL = tokenTVL;\n        totalTVL = totalTVL.plus(tokenTVL);\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens) {\n          await this.asyncForEach(Object.keys(govTokens).filter(govToken => (govTokens[govToken].showAUM)), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              govTokenBalance,\n              govTokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken, tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig, govTokenConfig)\n            ]);\n\n            if (govTokenBalance && govTokenConversionRate) {\n              const govTokenBalanceConverted = this.fixTokenDecimals(govTokenBalance, govTokenConfig.decimals).times(this.BNify(govTokenConversionRate));\n              if (govTokenBalanceConverted && !govTokenBalanceConverted.isNaN()) {\n                totalTVL = totalTVL.plus(govTokenBalanceConverted);\n                output[idleTokenName].govTokens[govToken] = govTokenBalanceConverted;\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract) {\n          const oldTokenConfig = Object.assign({}, tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({}, tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols) {\n            oldTokenConfig.migration.oldProtocols.forEach(oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find(p => (p.name === oldProtocol.name));\n              if (foundProtocol) {\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const [\n            oldTokenPrice,\n            oldTotalSupply\n          ] = await Promise.all([\n            this.getIdleTokenPrice(oldTokenConfig),\n            this.getIdleTokenSupply(oldTokenConfig.idle.name)\n          ]);\n\n          if (oldTokenPrice && oldTotalSupply) {\n            oldTokenTVL = this.fixTokenDecimals(oldTotalSupply, 18).times(oldTokenPrice);\n            oldTokenTVL = await this.convertTokenBalance(oldTokenTVL, token, oldTokenConfig, isRisk);\n            if (oldTokenTVL && !oldTokenTVL.isNaN()) {\n              output[idleTokenName].oldTokenTVL = oldTokenTVL;\n              totalTVL = totalTVL.plus(oldTokenTVL);\n            }\n          }\n        }\n\n        output[idleTokenName].totalTVL = totalTVL;\n      });\n    });\n\n    return output;\n  }\n  getSubstackLatestFeed = async () => {\n    const cachedDataKey = `substackLatestFeed`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const networkId = this.getRequiredNetworkId();\n    const config = this.getGlobalConfig(['stats', 'config']);\n    const endpointInfo = this.getGlobalConfig(['stats', 'substack']);\n    const idleSubstackFeed = await this.makeRequest(endpointInfo.endpoint[networkId], false, config);\n\n    if (idleSubstackFeed && idleSubstackFeed.data && idleSubstackFeed.data.items && idleSubstackFeed.data.items.length > 0) {\n      const latestFeed = idleSubstackFeed.data.items[0];\n      return this.setCachedDataWithLocalStorage(cachedDataKey, latestFeed, endpointInfo.TTL);\n    }\n\n    return null;\n  }\n  getAvailableTokenAddress = (token, strategy) => {\n    const networkId = this.getRequiredNetworkId();\n    const tokenConfig = this.getArrayPath([networkId, strategy, token], availableTokens);\n    return tokenConfig ? tokenConfig.address : null;\n  }\n  getTrancheAggregatedStats = async (tranches = null) => {\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n    if (!tranches || !tranches.length) {\n      tranches = Object.keys(this.getGlobalConfig(['tranches']));\n    }\n    await this.asyncForEach(Object.keys(this.props.availableTranches), async (protocol) => {\n      const protocolConfig = this.props.availableTranches[protocol];\n      await this.asyncForEach(Object.keys(protocolConfig), async (token) => {\n        const tokenConfig = protocolConfig[token];\n        await this.asyncForEach(tranches, async (tranche) => {\n          const trancheConfig = tokenConfig[tranche];\n          const [\n            trancheApy,\n            tranchePool\n          ] = await Promise.all([\n            this.loadTrancheFieldRaw('trancheApy', {}, protocol, token, tranche, tokenConfig, trancheConfig, null),\n            this.loadTrancheFieldRaw('tranchePoolConverted', {}, protocol, token, tranche, tokenConfig, trancheConfig, null)\n          ]);\n\n          avgAPY = avgAPY.plus(this.BNify(trancheApy).times(this.BNify(tranchePool)));\n          totalAUM = totalAUM.plus(this.BNify(tranchePool));\n\n          // console.log('getTrancheAggregatedStats',protocol, token, tranche, trancheApy.toFixed(5), tranchePool.toFixed(5),totalAUM.toFixed(5));\n        });\n      });\n    });\n\n    avgAPY = avgAPY.div(totalAUM);\n\n    // console.log('getTrancheAggregatedStats',avgAPY.toFixed(5),totalAUM.toFixed(5));\n\n    return {\n      avgAPY,\n      totalAUM\n    };\n  }\n  getAggregatedStats = async (addGovTokens = true, allNetworks = false) => {\n    const networkId = this.getRequiredNetworkId();\n    const config = this.getGlobalConfig(['stats', 'config']);\n    const endpointInfo = this.getGlobalConfig(['stats', 'tvls']);\n    let networkIds = [networkId];\n    if (allNetworks) {\n      networkIds = Object.keys(endpointInfo.endpoint);\n    }\n\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n\n    await this.asyncForEach(networkIds, async (networkId) => {\n      let tvls = await this.makeCachedRequest(endpointInfo.endpoint[networkId], endpointInfo.TTL, true, false, config);\n      if (!tvls) {\n        tvls = await this.getAggregatedStats_chain();\n      }\n\n      if (tvls) {\n        avgAPY = avgAPY.plus(this.BNify(tvls.avgAPY).times(this.BNify(tvls.totalTVL)));\n        totalAUM = totalAUM.plus(this.BNify(tvls.totalTVL));\n      }\n    });\n\n    avgAPY = avgAPY.div(totalAUM);\n\n    return {\n      avgAPY,\n      totalAUM\n    };\n  }\n  getAggregatedStats_chain = async (addGovTokens = true) => {\n\n    // Check for cached data\n    const cachedDataKey = `getAggregatedStats_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && (cachedData.avgAPR && !this.BNify(cachedData.avgAPR).isNaN()) && (cachedData.avgAPY && !this.BNify(cachedData.avgAPY).isNaN()) && (cachedData.totalAUM && !this.BNify(cachedData.totalAUM).isNaN())) {\n      return {\n        avgAPR: this.BNify(cachedData.avgAPR),\n        avgAPY: this.BNify(cachedData.avgAPY),\n        totalAUM: this.BNify(cachedData.totalAUM)\n      };\n    }\n\n    let avgAPR = this.BNify(0);\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n    const DAITokenConfig = {\n      address: this.getContractByName('DAI')._address\n    };\n    await this.asyncForEach(Object.keys(this.props.availableStrategies), async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n        const tokenConfig = availableTokens[token];\n        const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, addGovTokens);\n        const tokenAprs = await this.getTokenAprs(tokenConfig, tokenAllocation, addGovTokens);\n        if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent && !tokenAllocation.totalAllocationWithUnlent.isNaN()) {\n          const tokenAUM = await this.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent, token, tokenConfig, isRisk);\n          totalAUM = totalAUM.plus(tokenAUM);\n          // console.log(tokenConfig.idle.token+'V4',tokenAUM.toFixed());\n          if (tokenAprs && tokenAprs.avgApr && !tokenAprs.avgApr.isNaN()) {\n            avgAPR = avgAPR.plus(tokenAUM.times(tokenAprs.avgApr));\n            avgAPY = avgAPY.plus(tokenAUM.times(tokenAprs.avgApy));\n          }\n        }\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens) {\n          await this.asyncForEach(Object.keys(govTokens).filter(govToken => (govTokens[govToken].showAUM)), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              tokenBalance,\n              tokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken, tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig, govTokenConfig)\n            ]);\n\n            if (tokenBalance && tokenConversionRate) {\n              const tokenBalanceConverted = this.fixTokenDecimals(tokenBalance, govTokenConfig.decimals).times(this.BNify(tokenConversionRate));\n              if (tokenBalanceConverted && !tokenBalanceConverted.isNaN()) {\n                // console.log(tokenConfig.idle.token+'V4 - COMP',tokenBalanceConverted.toFixed());\n                totalAUM = totalAUM.plus(tokenBalanceConverted);\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract) {\n          const oldTokenConfig = Object.assign({}, tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({}, tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols) {\n            oldTokenConfig.migration.oldProtocols.forEach(oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find(p => (p.name === oldProtocol.name));\n              if (foundProtocol) {\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const oldTokenAllocation = await this.getTokenAllocation(oldTokenConfig, false, false);\n          if (oldTokenAllocation && oldTokenAllocation.totalAllocation && !oldTokenAllocation.totalAllocation.isNaN()) {\n            const oldTokenTotalAllocation = await this.convertTokenBalance(oldTokenAllocation.totalAllocation, token, oldTokenConfig, isRisk);\n            totalAUM = totalAUM.plus(oldTokenTotalAllocation);\n            // console.log(oldTokenConfig.idle.name,oldTokenTotalAllocation.toFixed(5));\n          }\n        }\n      });\n    });\n\n    avgAPR = avgAPR.div(totalAUM);\n    avgAPY = avgAPY.div(totalAUM);\n\n    const output = {\n      avgAPR,\n      avgAPY,\n      totalAUM\n    };\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, output);\n  }\n  getTokenApy = async (tokenConfig) => {\n    const tokenAprs = await this.getTokenAprs(tokenConfig);\n    if (tokenAprs && tokenAprs.avgApy !== null) {\n      return tokenAprs.avgApy;\n    }\n    return null;\n  }\n  getTokensToMigrate = async (selectedStrategy = null) => {\n\n    if (!this.props.availableStrategies || !this.props.account) {\n      return false;\n    }\n\n    const tokensToMigrate = {};\n\n    await this.asyncForEach(Object.keys(this.props.availableStrategies), async (strategy) => {\n      if (selectedStrategy && selectedStrategy !== strategy) {\n        return;\n      }\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n        const tokenConfig = availableTokens[token];\n        const {\n          migrationEnabled,\n          oldContractBalanceFormatted\n        } = await this.checkMigration(tokenConfig, this.props.account);\n\n        if (migrationEnabled) {\n          const tokenKey = selectedStrategy ? token : tokenConfig.idle.token;\n          tokensToMigrate[tokenKey] = {\n            token,\n            strategy,\n            tokenConfig,\n            oldContractBalanceFormatted\n          }\n        }\n      });\n    });\n\n    return tokensToMigrate;\n  }\n  /*\n  Get protocols tokens balances\n  */\n  getProtocolsTokensBalances = async (protocol = null) => {\n    if (!this.props.account) {\n      return false;\n    }\n    const tokenBalances = {};\n    const minTokenBalance = this.BNify(1).div(1e4);\n    const protocolsTokens = this.getGlobalConfig(['tools', 'tokenMigration', 'props', 'availableTokens']);\n    if (protocolsTokens) {\n      await this.asyncForEach(Object.keys(protocolsTokens), async (token) => {\n        const tokenConfig = protocolsTokens[token];\n        if (protocol !== null && tokenConfig.protocol.toLowerCase() !== protocol.toLowerCase()) {\n          return;\n        }\n        let tokenContract = this.getContractByName(tokenConfig.token);\n        if (!tokenContract && tokenConfig.abi) {\n          tokenContract = await this.props.initContract(tokenConfig.token, tokenConfig.address, tokenConfig.abi);\n        }\n        if (tokenContract) {\n          const tokenBalance = await this.getTokenBalance(tokenConfig.token, this.props.account);\n          if (tokenBalance && tokenBalance.gte(minTokenBalance)) {\n            tokenBalances[token] = {\n              tokenConfig,\n              balance: tokenBalance,\n            };\n          }\n        }\n      });\n    }\n\n    return tokenBalances;\n  }\n  getTokenConversionRateField = (token) => {\n    return this.getGlobalConfig(['stats', 'tokens', token.toUpperCase(), 'conversionRateField']);\n  }\n  convertTrancheTokenBalance = async (tokenBalance, tokenConfig, blockNumber='latest') => {\n    // Check for USD conversion rate\n    tokenBalance = this.BNify(tokenBalance);\n\n    const conversionRateField = this.getTokenConversionRateField(tokenConfig.token);\n    if (!conversionRateField) {\n      return tokenBalance;\n    }\n    if (tokenBalance.gt(0)){\n      const tokenUsdConversionRate = await this.getTokenConversionRateUniswap(tokenConfig,blockNumber);\n      if (tokenUsdConversionRate) {\n        tokenBalance = tokenBalance.times(tokenUsdConversionRate);\n      }\n    }\n    return tokenBalance;\n  }\n  /*\n  Convert token Balance\n  */\n  convertTokenBalance = async (tokenBalance, token, tokenConfig, isRisk = false) => {\n    // Check for USD conversion rate\n    tokenBalance = this.BNify(tokenBalance);\n    if (tokenBalance.gt(0)) {\n      const tokenUsdConversionRate = await this.getTokenConversionRate(tokenConfig, isRisk);\n      // console.log('convertTokenBalance',token,isRisk,tokenUsdConversionRate);\n      if (tokenUsdConversionRate) {\n        tokenBalance = tokenBalance.times(tokenUsdConversionRate);\n      }\n    }\n    return tokenBalance;\n  }\n  getAvgAPYStats = async (address, isRisk, startTimestamp = null, endTimestamp = null) => {\n    const apiResults = await this.getTokenApiData(address, isRisk, startTimestamp, endTimestamp, true, 7200);\n    if (apiResults && apiResults.length) {\n      const apr = apiResults.reduce((sum, r) => {\n        const idleRate = this.fixTokenDecimals(r.idleRate, 18);\n        return sum.plus(idleRate);\n      }, this.BNify(0));\n\n      // Calculate average\n      return apr.div(apiResults.length);\n    }\n\n    return this.BNify(0);\n  }\n  getTokenConversionRateUniswap = async (tokenConfig, blockNumber='latest') => {\n\n    const DAITokenConfig = {\n      address: this.getContractByName('DAI')._address\n    };\n    const ToTokenConfig = tokenConfig.token ? this.getGlobalConfig(['stats', 'tokens', tokenConfig.token.toUpperCase()]) : tokenConfig.token;\n    const conversionRate = await this.getUniswapConversionRate(DAITokenConfig, ToTokenConfig, blockNumber);\n    if (!this.BNify(conversionRate).isNaN()) {\n      return conversionRate;\n    }\n\n    return null;\n  }\n  /*\n  Get idleToken conversion rate\n  */\n  getTokenConversionRate = async (tokenConfig, isRisk, conversionRateField = null, count = 0) => {\n\n    if (!conversionRateField) {\n      conversionRateField = this.getTokenConversionRateField(tokenConfig.token);\n      if (!conversionRateField) {\n        return null;\n      }\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenConversionRate_${tokenConfig.address}_${isRisk}_${conversionRateField}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let tokenData = await this.getTokenApiData(tokenConfig.address, isRisk, null, null, false, null, 'desc', 1);\n    if (tokenData && tokenData.length) {\n      tokenData = tokenData.pop();\n      if (tokenData && !this.BNify(tokenData[conversionRateField]).isNaN()) {\n        const conversionRate = this.fixTokenDecimals(tokenData[conversionRateField], 18);\n        if (!this.BNify(conversionRate).isNaN()) {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, conversionRate);\n        }\n      }\n    }\n\n    const DAITokenConfig = {\n      address: this.getContractByName('DAI')._address\n    };\n    const ToTokenConfig = tokenConfig.token ? this.getGlobalConfig(['stats', 'tokens', tokenConfig.token.toUpperCase()]) : tokenConfig;\n    const conversionRate = await this.getUniswapConversionRate(DAITokenConfig, ToTokenConfig);\n    if (!this.BNify(conversionRate).isNaN()) {\n      return this.setCachedDataWithLocalStorage(cachedDataKey, conversionRate);\n    }\n\n    if (count < 3) {\n      return await this.getTokenConversionRate(tokenConfig, isRisk, conversionRateField, count + 1);\n    }\n\n    return null;\n  }\n\n  getTokenScore = async (tokenConfig, isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScore_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const networkId = this.getRequiredNetworkId();\n    const apiInfo = this.getGlobalConfig(['stats', 'rates']);\n    const config = this.getGlobalConfig(['stats', 'config']);\n    const endpoint = `${apiInfo.endpoint[networkId]}${tokenConfig.address}?isRisk=${isRisk}&limit=1&order=DESC`;\n    const [\n      tokenData,\n      tokenAllocation\n    ] = await Promise.all([\n      this.makeCachedRequest(endpoint, apiInfo.TTL, true, false, config),\n      this.getTokenAllocation(tokenConfig, false, false)\n    ]);\n\n    let tokenScore = this.BNify(0);\n\n    if (tokenAllocation) {\n      Object.keys(tokenAllocation.protocolsAllocationsPerc).forEach(protocolAddr => {\n        const protocolAllocationPerc = this.BNify(tokenAllocation.protocolsAllocationsPerc[protocolAddr]);\n        if (protocolAllocationPerc.gt(0.001)) {\n          let protocolScore = null;\n\n          const protocolInfo = tokenData && tokenData.length > 0 ? tokenData[0].protocolsData.find(p => (p.protocolAddr.toLowerCase() === protocolAddr.toLowerCase())) : null;\n          if (protocolInfo) {\n            protocolScore = this.BNify(protocolInfo.defiScore);\n          }\n\n          // Take protocol score from tokenConfig\n          if (!protocolScore || this.BNify(protocolScore).isNaN() || this.BNify(protocolScore).lte(0)) {\n            const protocolConfig = tokenConfig.protocols.find(p => p.address.toLowerCase() === protocolAddr.toLowerCase());\n            if (protocolConfig) {\n              protocolScore = this.BNify(protocolConfig.defiScore);\n            }\n          }\n\n          if (!protocolScore.isNaN()) {\n            tokenScore = tokenScore.plus(protocolScore.times(protocolAllocationPerc));\n          }\n        }\n      });\n    }\n\n    // Fallback\n    if (!tokenScore || tokenScore.isNaN() || tokenScore.lte(0)) {\n      tokenScore = await this.getTokenScoreApi(tokenConfig, isRisk);\n    }\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, tokenScore);\n  }\n\n  /*\n  Get idleToken score\n  */\n  getTokenScoreApi = async (tokenConfig, isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScoreApi_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const networkId = this.getRequiredNetworkId();\n    const apiInfo = this.getGlobalConfig(['stats', 'scores']);\n\n    if (!apiInfo.endpoint[networkId]) {\n      return this.BNify(0);\n    }\n\n    const config = this.getGlobalConfig(['stats', 'config']);\n    const endpoint = `${apiInfo.endpoint[networkId]}${tokenConfig.address}?isRisk=${isRisk}`;\n    let scores = await this.makeCachedRequest(endpoint, apiInfo.TTL, true, false, config);\n\n    if (scores && scores.length > 0) {\n      let tokenData = scores.find(s => s.address.toLowerCase() === tokenConfig.address.toLowerCase());\n      if (tokenData) {\n        let tokenScore = this.BNify(tokenData.idleScore);\n        if (tokenScore && tokenScore.gt(0)) {\n          // Set cached data\n          return this.setCachedData(cachedDataKey, tokenScore);\n          // Take latest historical valid score\n        } else {\n          const timestamp = parseInt(Date.now() / 1000);\n          const startTimestamp = parseInt(timestamp) - (60 * 60 * 24);\n          tokenData = await this.getTokenApiData(tokenConfig.address, isRisk, startTimestamp, null, true, null, 'DESC');\n\n          const filteredTokenData = tokenData.filter(d => (this.BNify(d.idleScore).gt(0)));\n          if (filteredTokenData.length) {\n            tokenScore = this.BNify(filteredTokenData[0].idleScore);\n            if (!this.BNify(tokenScore).isNaN()) {\n              return this.setCachedDataWithLocalStorage(cachedDataKey, tokenScore);\n            }\n          }\n        }\n      }\n    }\n\n    return this.BNify(0);\n  }\n  /*\n  Get idleTokens aggregated APR\n  */\n  getTokenAprs = async (tokenConfig, tokenAllocation = false, addGovTokens = true, showIdleAPR = false) => {\n\n    const tokenAprs = {\n      avgApr: this.BNify(0),\n      avgApy: this.BNify(0)\n    };\n\n    if (!tokenConfig.idle) {\n      return tokenAprs;\n    }\n\n    const networkId = this.getRequiredNetworkId();\n\n    // Check for cached data\n    const cachedDataKey = `tokenAprs_${networkId}_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n\n    // console.log('getTokenAprs-1',tokenConfig.idle.token,networkId,cachedDataKey,cachedData);\n\n    if (cachedData && (cachedData.avgApr && this.BNify(cachedData.avgApr).gt(0)) && (cachedData.avgApy && this.BNify(cachedData.avgApy).gt(0))) {\n      return {\n        avgApr: this.BNify(cachedData.avgApr),\n        avgApy: this.BNify(cachedData.avgApy)\n      };\n    }\n\n    tokenAprs.avgApr = await this.genericContractCall(tokenConfig.idle.token, 'getAvgAPR');\n    if (tokenAprs.avgApr) {\n      tokenAprs.avgApr = this.fixTokenDecimals(tokenAprs.avgApr, 18);\n    }\n\n    // console.log('getTokenAprs-2',tokenConfig.idle.token,networkId,this.getContractByName(tokenConfig.idle.token)._address,tokenAprs);\n\n    if (tokenAprs.avgApr) {\n\n      tokenAprs.avgApy = this.apr2apy(tokenAprs.avgApr.div(100)).times(100);\n\n      // Add $IDLE token APR\n      const idleGovTokenShowAPR = showIdleAPR || this.getGlobalConfig(['govTokens', 'IDLE', 'showAPR']);\n      const idleGovTokenEnabled = this.getGlobalConfig(['govTokens', 'IDLE', 'enabled']);\n      if (idleGovTokenEnabled && idleGovTokenShowAPR) {\n        const idleGovToken = this.getIdleGovToken();\n        const idleAPR = await idleGovToken.getAPR(tokenConfig.token, tokenConfig);\n        if (idleAPR) {\n          tokenAprs.avgApr = tokenAprs.avgApr.plus(idleAPR);\n          tokenAprs.avgApy = tokenAprs.avgApy.plus(idleAPR);\n        }\n      }\n\n      // console.log('getTokenAprs-3',tokenConfig.idle.token,networkId,tokenAprs.avgApr.toFixed(8),tokenAprs.avgApy.toFixed(8));\n\n      if (this.BNify(tokenAprs.avgApy).isNaN()) {\n        tokenAprs.avgApy = this.BNify(0);\n      }\n      if (this.BNify(tokenAprs.avgApr).isNaN()) {\n        tokenAprs.avgApr = this.BNify(0);\n      }\n\n      // console.log('Aprs for '+tokenConfig.idle.token+' loaded in '+((Date.now()-start)/1000).toFixed(2)+'s');\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey, tokenAprs);\n    }\n\n    return tokenAprs;\n  }\n  abbreviateNumber = (value, decimals = 3, maxPrecision = 5, minPrecision = 0) => {\n\n    const isNegative = parseFloat(value) < 0;\n    let newValue = this.BNify(value).abs();\n    const suffixes = [\"\", \"K\", \"M\", \"B\", \"T\"];\n    let suffixNum = 0;\n    while (newValue.gte(1000)) {\n      newValue = newValue.div(1000);\n      suffixNum++;\n    }\n\n    maxPrecision = Math.max(1, maxPrecision);\n\n    // Prevent decimals on integer number\n    if (value >= 1000) {\n      const decimalPart = decimals ? newValue.mod(1).toFixed(maxPrecision).substr(2, decimals) : null;\n      newValue = parseInt(newValue).toString() + (decimalPart ? '.' + decimalPart : '');\n    } else {\n      newValue = newValue.toFixed(decimals);\n    }\n\n    // Adjust number precision\n    if (newValue >= 1 && (newValue.length - 1) > maxPrecision) {\n      newValue = parseFloat(newValue).toPrecision(maxPrecision);\n    } else if ((newValue.length - 1) < minPrecision) {\n      const difference = minPrecision - (newValue.length - 1);\n      const append = this.BNify(value).abs().toString().replace('.', '').substr((newValue.length - 1), difference);\n      newValue += append;\n    }\n\n    // Add minus if number is negative\n    if (isNegative) {\n      newValue = '-' + newValue;\n    }\n\n    newValue += suffixes[suffixNum];\n\n    return newValue;\n  }\n  getFormattedBalance(balance, label, decimals, maxLen, highlightedDecimals) {\n    const defaultValue = '-';\n    decimals = !isNaN(decimals) ? decimals : 6;\n    maxLen = !isNaN(maxLen) ? maxLen : 10;\n    highlightedDecimals = !isNaN(highlightedDecimals) ? highlightedDecimals : 0;\n    balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n\n    const numLen = balance.toString().replace('.', '').length;\n    if (numLen > maxLen) {\n      decimals = Math.max(0, decimals - (numLen - maxLen));\n      balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n    }\n\n    const intPart = Math.floor(balance);\n    let decPart = (balance % 1).toPrecision(decimals).substr(2, decimals);;\n    decPart = (decPart + (\"0\".repeat(decimals))).substr(0, decimals);\n\n    if (highlightedDecimals) {\n      const highlightedDec = decPart.substr(0, highlightedDecimals);\n      decPart = decPart.substr(highlightedDecimals);\n      const highlightedIntPart = (<Text.span fontSize={'100%'} color={'blue'} fontWeight={'inerith'}>{intPart}.{highlightedDec}</Text.span>);\n      return !isNaN(this.trimEth(balance)) ? (<>{highlightedIntPart}<small style={{ fontSize: '70%' }}>{decPart}</small> <Text.span fontSize={[1, 2]}>{label}</Text.span></>) : defaultValue;\n    } else {\n      return !isNaN(this.trimEth(balance)) ? (<>{intPart}<small>.{decPart}</small>{label !== '%' ? ' ' : null}{label ? <Text.span fontSize={[1, 2]}>{label}</Text.span> : null}</>) : defaultValue;\n    }\n  }\n};\n\nexport default FunctionsUtil;","import React, { Component } from 'react';\nimport styles from './DashboardCard.module.scss';\nimport { Flex, Icon, Heading, Card, Tooltip } from \"rimble-ui\";\n\n\nclass DashboardCard extends Component {\n\n  state = {\n    mouseOver: false\n  }\n\n  setMouseOver(mouseOver) {\n    this.setState({\n      mouseOver\n    });\n  }\n\n  render() {\n    const isDisabled = this.props.isDisabled;\n    const isActive = this.props.isActive && !isDisabled;\n    const isInteractive = this.props.isInteractive && !isDisabled;\n    const isVisible = typeof this.props.isVisible !== 'undefined' ? this.props.isVisible : true;\n    const isRainbow = typeof this.props.isRainbow !== 'undefined' ? this.props.isRainbow : false;\n\n    const cardProps = {\n      p: 0,\n      border: 1,\n      boxShadow: 1,\n      borderRadius: 2,\n      borderColor: null,\n      position: 'relative',\n      minHeight: 'initial',\n      backgroundColor: 'cardBg'\n    };\n\n    // Replace props\n    if (this.props.cardProps && Object.keys(this.props.cardProps).length) {\n      Object.keys(this.props.cardProps).forEach(p => {\n        cardProps[p] = this.props.cardProps[p];\n      });\n    }\n\n    if (isActive || (isInteractive && this.state.mouseOver)) {\n      cardProps.border = 2;\n      cardProps.boxShadow = null;\n      cardProps.backgroundColor = 'cardBgHover';\n    }\n\n    const className = [\n      styles.defaultOpacity,\n      isActive ? styles.active : null,\n      !isVisible ? styles.hidden : null,\n      isRainbow ? styles.rainbow : null,\n      isDisabled ? styles.disabled : null,\n      isInteractive ? styles.interactive : null,\n    ];\n\n    if (this.props.className && styles[this.props.className]) {\n      className.push(styles[this.props.className]);\n    }\n\n    return (\n      <Card\n        {...cardProps}\n        className={className}\n        onClick={this.props.handleClick}\n        onMouseOut={(e) => this.setMouseOver(false)}\n        onMouseOver={(e) => this.setMouseOver(true)}\n      >\n        {\n          this.props.title && this.props.title.length > 0 &&\n          <Flex\n            mt={[3, 4]}\n            ml={[3, 4]}\n            alignItems={'center'}\n            flexDirection={'row'}\n            {...this.props.titleParentProps}\n          >\n            <Heading.h4\n              fontWeight={4}\n              fontSize={[2, 3]}\n              textAlign={'left'}\n              color={'dark-gray'}\n              lineHeight={'initial'}\n              {...this.props.titleProps}\n            >\n              {this.props.title}\n            </Heading.h4>\n            {\n              this.props.description && this.props.description.length > 0 &&\n              <Tooltip\n                placement={'top'}\n                message={this.props.description}\n              >\n                <Icon\n                  ml={2}\n                  name={\"Info\"}\n                  size={'1em'}\n                  color={'cellTitle'}\n                />\n              </Tooltip>\n            }\n\n          </Flex>\n        }\n        {this.props.children}\n      </Card>\n    );\n  }\n}\n\nexport default DashboardCard;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"defaultOpacity\":\"DashboardCard_defaultOpacity__1B1rs\",\"hidden\":\"DashboardCard_hidden__8pO5t\",\"interactive\":\"DashboardCard_interactive__2adxr\",\"rainbow\":\"DashboardCard_rainbow__3HCI7\",\"disabled\":\"DashboardCard_disabled__uqHO2\"};","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Box,\n  Button,\n  Flex,\n  Image\n} from \"rimble-ui\";\nimport Select from 'react-select';\nimport ModalCard from './ModalCard';\nimport ImageButton from '../../ImageButton/ImageButton';\nimport styles from './Header.module.scss';\nimport globalConfigs from '../../configs/globalConfigs';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass BuyModal extends React.Component {\n\n  state = {\n    selectedMethod:null,\n    availableMethods:[],\n    selectedCountry:null,\n    selectedProvider:null,\n    availableProviders:null,\n    selectedToken:this.props.buyToken,\n  }\n\n  async loadRemoteResources() {\n\n    if (!this.state.selectedToken){\n      return false;\n    }\n\n    // Load payments providers external remote resources\n    Object.keys(globalConfigs.payments.providers).forEach((provider,i) => {\n\n      const providerInfo = globalConfigs.payments.providers[provider];\n      if (providerInfo.enabled && providerInfo.remoteResources && (providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1)){\n        \n        const remoteResources = providerInfo.remoteResources;\n\n        Object.keys(remoteResources).forEach((url,j) => {\n\n          const resourceType = url.split('.').pop().toLowerCase();\n\n          switch (resourceType){\n            case 'js':\n              const scriptID = `script_${provider}_${j}_${this.state.selectedToken}`;\n\n              if (!document.getElementById(scriptID)){\n                const script = document.createElement(\"script\");\n                const remoteResourceParams = remoteResources[url];\n                const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n                const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n                if (precall && typeof precall === 'function'){\n                  precall(this.state,globalConfigs,providerInfo);\n                }\n\n                if (callback && typeof callback === 'function'){\n                  if (script.readyState) {  // only required for IE <9\n                    script.onreadystatechange = function() {\n                      if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                        script.onreadystatechange = null;\n                        callback();\n                      }\n                    };\n                  } else {  //Others\n                    script.onload = callback;\n                  }\n                }\n\n                script.id = scriptID;\n                script.className = `script_${provider}`;\n                script.src = url;\n                script.async = true;\n\n                if (remoteResourceParams && remoteResourceParams.parentElement){\n                  remoteResourceParams.parentElement.appendChild(script)\n                } else {\n                  document.head.appendChild(script);\n                }\n              }\n            break;\n            case 'css':\n              const stylesheetId = `stylesheet_${provider}_${j}`;\n\n              if (!document.getElementById(stylesheetId)){\n                const style = document.createElement(\"link\");\n\n                style.id = stylesheetId;\n                style.rel = 'stylesheet';\n                style.href = url;\n\n                document.head.appendChild(style);\n              }\n            break;\n            default:\n            break;\n          }\n        });\n      }\n    });\n  }\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadAvailableMethods(){\n    const availableMethods = {};\n    const availableMethodsKeys = this.props.availableMethods && this.props.availableMethods.length ? this.props.availableMethods : Object.keys(globalConfigs.payments.methods);\n\n    availableMethodsKeys.forEach(method => {\n      const availableProviders = this.getAvailablePaymentProviders(method,this.state.selectedToken);\n      if (availableProviders && availableProviders.length>0){\n        const methodInfo = globalConfigs.payments.methods[method];\n        methodInfo.availableProviders = availableProviders;\n        availableMethods[method] = methodInfo;\n      }\n    });\n\n    this.setState({\n      availableMethods\n    });\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n\n    this.loadAvailableMethods();\n    this.loadRemoteResources();\n  }\n\n  async componentDidMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps) {\n\n    this.loadUtils();\n\n    if ( this.props.buyToken && prevProps.buyToken !== this.props.buyToken){\n      this.selectToken(null,this.props.buyToken);\n    }\n  }\n\n  renderPaymentMethod = async (e,provider,buyParams) => {\n\n    const onSuccess = async (tx) => {\n      // Toast message\n      window.toastProvider.addMessage(`Deposit completed`, {\n        secondaryMessage: `Your ${this.state.selectedToken} have been deposited`,\n        colorTheme: 'light',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"success\",\n      });\n\n      this.props.getAccountBalance();\n    };\n\n    const onClose = async (e) => {\n      return true;\n    }\n\n    const paymentProvider = globalConfigs.payments.providers[provider];\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(this.props,globalConfigs,buyParams,onSuccess,onClose) : null;\n\n    // Render the Payment Provider\n    switch (provider){\n      default:\n        if (typeof paymentProvider.render === 'function'){\n          const currentState = Object.assign({},this.state);\n          paymentProvider.render(initParams,null,currentState,globalConfigs);\n        }\n      break;\n    }\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_provider',\n        eventLabel: provider\n      });\n\n      this.closeModal(e);\n    } else {\n      this.closeModal(e);\n    }\n  }\n\n  goBack = (e) => {\n    e.preventDefault();\n\n    if (this.state.selectedProvider){\n      this.setState({\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedMethod){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedToken){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n        selectedToken:this.props.buyToken,\n      });\n    } else {\n      this.resetModal();\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      selectedMethod:null,\n      selectedCountry:null,\n      selectedProvider:null,\n      availableProviders:null,\n      selectedToken:this.props.buyToken\n    });\n\n    this.componentWillMount();\n  }\n\n  closeModal = (e) => {\n    this.resetModal();\n    if (!this.props.showInline && typeof this.props.closeModal === 'function'){\n      this.props.closeModal();\n    }\n  }\n\n  getProviderInfo = (provider) => {\n    if (!globalConfigs.payments.providers[provider]){\n      return false;\n    }\n    let providerInfo = globalConfigs.payments.providers[provider];\n    if (typeof providerInfo.getInfo === 'function'){\n      const newProviderInfo = providerInfo.getInfo(this.state);\n      if (newProviderInfo && Object.keys(newProviderInfo).length){\n        providerInfo = Object.assign(providerInfo,newProviderInfo);\n      }\n    }\n    return providerInfo;\n  }\n\n  getDefaultPaymentProvider = (selectedMethod) => {\n    const paymentMethod = this.state.availableMethods[selectedMethod];\n    if (paymentMethod && paymentMethod.defaultProvider){\n      return paymentMethod.defaultProvider;\n    }\n    return null;\n  }\n\n  getAvailablePaymentProviders = (selectedMethod,selectedToken) => {\n    const availableProviders = [];\n\n    Object.keys(globalConfigs.payments.providers).map((provider,i) => {\n      const providerInfo = globalConfigs.payments.providers[provider];\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(selectedMethod) !== -1;\n      const providerSupportToken = selectedToken ? providerInfo.supportedTokens.indexOf(selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n      if (providerInfo.enabled && providerSupportMethod && providerSupportToken ){\n        availableProviders.push(provider);\n      }\n      return provider;\n    });\n\n    const defaultPaymentProvider = this.getDefaultPaymentProvider(selectedMethod);\n\n    if (defaultPaymentProvider && this.state.availableMethods[selectedMethod].showDefaultOnly && availableProviders.indexOf(defaultPaymentProvider) !== -1){\n      return [defaultPaymentProvider];\n    }\n\n    return availableProviders;\n  }\n\n  selectProvider = (e,selectedProvider) => {\n    if (e){\n      e.preventDefault();\n    }\n    \n    if (!selectedProvider || !globalConfigs.payments.providers[selectedProvider]){\n      return this.setState({\n        selectedProvider:null\n      });\n    }\n\n    const providerInfo = globalConfigs.payments.providers[selectedProvider];\n    if (providerInfo){\n\n      if (this.state.selectedToken){\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      const ethAvailable = providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1;\n      const tokenAvailable = providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1;\n\n      // Show tokens to buy if more are available or if the selected one is not\n      const availableTokens = [];\n      if ( (ethAvailable && tokenAvailable) || !tokenAvailable ){\n        if (ethAvailable){\n          availableTokens.push(globalConfigs.baseToken);\n        }\n        if (tokenAvailable){\n          availableTokens.push(this.props.selectedToken);\n        }\n      } else {\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      this.setState({\n        availableTokens,\n        selectedProvider\n      });\n    }\n  }\n\n  selectMethod = (e,selectedMethod) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    if (Object.keys(this.state.availableMethods).indexOf(selectedMethod) !== -1){\n      const availableProviders = this.getAvailablePaymentProviders(selectedMethod,this.state.selectedToken);\n\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_method',\n        eventLabel: selectedMethod\n      });\n\n      this.setState({\n        availableProviders,\n        selectedMethod\n      });\n    }\n  }\n\n  selectToken = (e,selectedToken) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Buy',\n      eventAction: 'select_token',\n      eventLabel: selectedToken\n    });\n\n    this.setState({ selectedToken }, async () => {\n      if (this.state.selectedProvider){\n        return this.renderPaymentMethod(e,this.state.selectedProvider,this.state);\n      } else {\n        this.loadRemoteResources();\n      }\n    });\n  }\n\n  handleCountryChange = selectedCountry => {\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled && selectedCountry){\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_country',\n        eventLabel: selectedCountry.value\n      });\n    }\n\n    this.setState({\n      selectedCountry\n    });\n  }\n\n  getAvailableCountries = () => {\n    const availableCountries = {};\n    this.state.availableProviders.forEach((provider,i) => {\n      const providerInfo = this.getProviderInfo(provider);\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(this.state.selectedMethod) !== -1;\n      const providerSupportToken = this.state.selectedToken ? providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n\n      // Skip disabled provider, not supported selected method or not supported token\n      if (!providerInfo.enabled || !providerSupportMethod || !providerSupportToken ){\n        return;\n      }\n\n      // Get available providers and countries\n      providerInfo.supportedCountries.forEach((countryCode,j) => {\n        if (!availableCountries[countryCode]){\n          availableCountries[countryCode] = {\n            providers:[],\n            label:globalConfigs.countries[countryCode],\n            value:countryCode\n          };\n        }\n        availableCountries[countryCode].providers.push(provider);\n      });\n    });\n\n    return Object.values(availableCountries);\n  }\n\n  render() {\n\n    let title = null;\n    if (this.state.selectedToken === null){\n      title = 'BUY TOKEN';\n    } else {\n      title = 'BUY '+this.state.selectedToken;\n      if (this.state.selectedMethod !== null){\n        title += ' - '+this.state.availableMethods[this.state.selectedMethod].props.caption;\n      }\n    }\n\n    let availableTokens = this.props.availableTokens && Object.keys(this.props.availableTokens).length>0 ? [globalConfigs.baseToken,...Object.keys(this.props.availableTokens)] : [globalConfigs.baseToken];\n\n    // Show all tokens\n    if (this.props.showAllTokens){\n      availableTokens = [];\n      Object.keys(globalConfigs.payments.providers).forEach( provider => {\n        const providerInfo = globalConfigs.payments.providers[provider];\n        if (providerInfo.supportedTokens){\n          providerInfo.supportedTokens.forEach(token => {\n            if (!availableTokens.includes(token)){\n              availableTokens.push(token);\n            }\n          })\n        }\n      });\n    }\n\n    const InnerComponent = props => (\n      <Box minWidth={ this.props.showInline ? 'auto' : ['auto','35em'] }>\n      {\n        this.state.selectedToken === null ? (\n          <Box mb={2}>\n            <Text\n              mb={[2,3]}\n              fontWeight={2}\n              textAlign={'center'}\n              fontSize={[2, this.props.showInline ? 2 : 3]}\n            >\n              Which token do you want to buy?\n            </Text>\n            <Flex\n              mb={4}\n              style={{\n                flexWrap:'wrap'\n              }}\n              alignItems={'center'}\n              justifyContent={'center'}\n              flexDirection={['column','row']}\n            >\n            {\n              availableTokens.map((token,i) => {\n                const imageSrc = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'icon']) || `images/tokens/${token}.svg`;\n                return (\n                  <ImageButton\n                    caption={token}\n                    imageSrc={imageSrc}\n                    key={`token_${token}`}\n                    isMobile={this.props.isMobile}\n                    handleClick={ e => { this.selectToken(e,token); } }\n                    imageProps={ this.props.isMobile ? {height:'42px'} : {p:[2,3],height:'80px'}}\n                    buttonProps={ !this.props.isMobile ? {\n                      style:{\n                        'flex':'0 0 170px'\n                      }\n                    } : null}\n                  />\n                );\n              })\n            }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === null ? (\n          <Box>\n            <Flex mb={3} flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n              {\n                !this.props.showInline &&\n                  <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n              }\n              {\n                this.props.children ?\n                  this.props.children\n                : this.props.buyText ? (\n                  <Text textAlign={'center'} fontWeight={500} fontSize={[2, this.props.showInline ? 2 : 3]} mt={3} dangerouslySetInnerHTML={{__html:this.props.buyText}}></Text>\n                ) : (\n                  <Text textAlign={'center'} fontWeight={500} fontSize={[2, this.props.showInline ? 2 : 3]}>\n                    {\n                      (this.props.showInline && this.props.buyToken ? ( Object.keys(this.state.availableMethods).length>0 ? `Ops... you don't have any ${this.props.buyToken} in your wallet, how do you prefer do buy some?` : `Ops... you don't have any ${this.props.buyToken} in your wallet.` ) : `How do you prefer to buy ${this.state.selectedToken}?`)\n                    }\n                  </Text>\n                )\n              }\n            </Flex>\n            <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n              {\n                Object.keys(this.state.availableMethods).map((method,i) => {\n                  const methodInfo = this.state.availableMethods[method];\n                  let imageProps = methodInfo.props && methodInfo.props.imageProps ? methodInfo.props.imageProps : {};\n                  const imagePropsExtended = this.props.isMobile ? {height:'42px'} : {height:'70px'};\n                  imageProps = Object.assign(imageProps,imagePropsExtended);\n\n                  return (\n                    <ImageButton\n                      {...methodInfo.props}\n                      buttonProps={{\n                        border:2\n                      }}\n                      key={`method_${method}`}\n                      imageProps={ imageProps }\n                      isMobile={ this.props.isMobile }\n                      handleClick={ e => this.selectMethod(e,method) }\n                    />\n                  );\n                })\n              }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === 'wallet' ? (\n              <Box mt={2} mb={3}>\n                <Text textAlign={'center'} fontWeight={3} fontSize={2} my={0}>\n                  <Box width={'100%'}>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableProviders.length > 0 ?\n                          (\n                            <Box>\n                              <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                                Choose your preferred payment provider:\n                              </Text>\n                              {\n                                this.state.availableProviders.map((provider,i) => {\n                                  const providerInfo = this.getProviderInfo(provider);\n                                  return (\n                                    <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => { this.renderPaymentMethod(e,provider,this.state); } } />\n                                  );\n                                })\n                              }\n                            </Box>\n                          )\n                        : (\n                          <Text textAlign={'center'} fontWeight={3} fontSize={2} my={2}>\n                            Sorry, there are no providers available for the selected method.\n                          </Text>\n                        )\n                      }\n                      </Flex>\n                    </Box>\n                </Text>\n              </Box>\n            ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              {\n                !this.state.selectedProvider &&\n                <Box\n                  mb={3}\n                  width={1}\n                  maxWidth={this.props.showInline ? '31em' : 'initial'}\n                >\n                  {\n                    !this.props.showInline &&\n                      <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n                        <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n                      </Flex>\n                  }\n                  <Text textAlign={'center'} fontWeight={ this.props.showInline ? 2 : 3 } fontSize={2} mb={2}>\n                    Select your country:\n                  </Text>\n                  <Select\n                    bg={'#162e4d'}\n                    backgroundColor={'#162e4d'}\n                    value={this.state.selectedCountry}\n                    placeholder={'Select your country'}\n                    onChange={this.handleCountryChange}\n                    options={this.getAvailableCountries()}\n                    maxWidth={ this.props.showInline && !this.props.isMobile ? '25em' : 'auto' }\n                    noOptionsMessage={ (inputValue) => 'For European countries select Europe' }\n                    className={this.props.themeMode === 'light' ? styles.select : styles.selectDark}\n                  />\n                </Box>\n              }\n              <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'} minHeight={'200px'}>\n                {\n                  !this.state.selectedProvider ?\n                    this.state.selectedCountry !== null ? (\n                      <Box width={'100%'}>\n                        <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                          Choose your preferred payment provider:\n                        </Text>\n                        <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                        {\n                          this.state.selectedCountry.providers.length > 0 ?\n                            this.state.selectedCountry.providers.map((provider,i) => {\n                              const providerInfo = this.getProviderInfo(provider);\n                              return (\n                                <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => {this.selectProvider(e,provider) } } />\n                              );\n                            })\n                          : (\n                            <Text textAlign={'center'} fontWeight={3} fontSize={2} mb={2}>\n                              Sorry, there are no providers available for the selected method.\n                            </Text>\n                          )\n                        }\n                        </Flex>\n                      </Box>\n                    ) : (\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={2}>\n                        Select the country to load the payment providers.\n                      </Text>\n                    )\n                  : false && this.state.availableTokens && this.state.availableTokens.length > 0 && (\n                    <Box mb={2}>\n                      <Flex justifyContent={'center'} my={2}>\n                        <Image src={ globalConfigs.payments.providers[this.state.selectedProvider].imageSrc } height={'35px'} />\n                      </Flex>\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                        Choose which token do you want to buy:\n                      </Text>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableTokens.map((token,i) => {\n                          const imageSrc = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'icon']) || `images/tokens/${token}.svg`;\n                          return (\n                            <ImageButton key={`token_${token}`} imageSrc={imageSrc} caption={token} imageProps={{p:[2,3],height:'80px'}} handleClick={ e => { this.selectToken(e,token); } } />\n                          );\n                        })\n                      }\n                      </Flex>\n                    </Box>\n                  )\n                }\n              </Flex>\n            </Flex>\n          )\n      }\n        {\n          this.props.showInline && this.state.selectedToken !== null  && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n            <Flex\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Button\n                my={2}\n                mx={[0, 2]}\n                size={'medium'}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.goBack(e) }\n              >\n                GO BACK\n              </Button>\n            </Flex>\n          )\n        }\n      </Box>\n    );\n\n    if (this.props.showInline){\n      return (\n        <InnerComponent\n          {...this.props}\n        />\n      );\n    }\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          <ModalCard.Header title={title}>\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <InnerComponent/>\n          </ModalCard.Body>\n          <ModalCard.Footer>\n            <Flex px={[2,0]} flexDirection={['column', 'row']} width={1} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.closeModal(e) }\n                size={this.props.isMobile ? 'small' : 'medium'}\n              >\n              CLOSE\n              </Button>\n              {\n                this.state.selectedToken !== null && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n                  <Button\n                    my={2}\n                    mx={[0, 2]}\n                    borderRadius={4}\n                    onClick={ e => this.goBack(e) }\n                    className={styles.gradientButton}\n                    size={this.props.isMobile ? 'small' : 'medium'}\n                  >\n                    GO BACK\n                  </Button>\n                )\n              }\n            </Flex>\n          </ModalCard.Footer>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default BuyModal;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TableRow extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const FieldComponent = this.props.fieldComponent;\n    const isInteractive = typeof this.props.handleClick === 'function';\n    return (\n      <DashboardCard\n        cardProps={{\n          mb:2,\n          width:1,\n          px:[2,4],\n          py:[2,'12px']\n        }}\n        id={this.props.cardId}\n        {...this.props.rowProps}\n        className={this.props.token}\n        isInteractive={isInteractive}\n        handleClick={isInteractive ? e => this.props.handleClick(this.props) : null}\n      >\n        <Flex\n          flexDirection={'row'}\n          id={this.props.rowId}\n        >\n          {\n            this.props.cols.map((colInfo,colIndex) => {\n              const visibleOnDesktop = colInfo.visibleOnDesktop || false;\n              if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile) || (colInfo.mobile === true && !visibleOnDesktop && !this.props.isMobile)){\n                return null;\n              }\n              return (\n                <Flex\n                  key={`col-${colIndex}`}\n                  {...colInfo.props}\n                >\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    {...colInfo.parentProps}\n                  >\n                    {\n                      colInfo.fields.map((fieldInfo,fieldIndex) => {\n                        if (!fieldInfo || fieldInfo.visible === false || (fieldInfo.mobile === false && this.props.isMobile)){\n                          return null;\n                        }\n                        const CustomComponent = fieldInfo.fieldComponent;\n\n                        let fieldProps = fieldInfo.props;\n\n                        // Merge with funcProps\n                        if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length>0){\n                          fieldProps = this.functionsUtil.replaceArrayPropsRecursive(fieldProps,fieldInfo.funcProps,this.props);\n                        }\n\n                        return (\n                          <Flex\n                            height={'100%'}\n                            flexDirection={'column'}\n                            alignItems={'flex-start'}\n                            justifyContent={'center'}\n                            {...fieldInfo.parentProps}\n                            style={fieldInfo.style || {\n                              overflow:'hidden'\n                            }}\n                            width={colInfo.fields.length>1 ? 'auto' : 1}\n                            id={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                            key={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                          >\n                            {\n                              CustomComponent ? (\n                                <CustomComponent\n                                  {...this.props}\n                                  {...fieldProps}\n                                />\n                              ) : (\n                                <FieldComponent\n                                  {...this.props}\n                                  fieldInfo={fieldInfo}\n                                  colProps={colInfo.props}\n                                  parentId={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                                />\n                              )\n                            }\n                          </Flex>\n                        );\n                      })\n                    }\n                  </Flex>\n                </Flex>\n              )\n            })\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default TableRow;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\n\nclass TableHeader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        px={[2,4]}\n        pb={[2,3]}\n        flexDirection={'row'}\n      >\n        {\n          this.props.cols.map((colInfo,colIndex) => {\n            // Skip non-mobile columns\n            const visibleOnDesktop = colInfo.visibleOnDesktop || false;\n            if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile) || (colInfo.mobile === true && !visibleOnDesktop && !this.props.isMobile)){\n              return null;\n            }\n\n            return (colInfo.title && colInfo.title.length) ? (\n              <TableCellHeader\n                {...this.props}\n                {...colInfo.props}\n                desc={colInfo.desc}\n                title={colInfo.title}\n                key={`col-header-${colIndex}`}\n              >\n                {colInfo.title}\n              </TableCellHeader>\n            ) : (\n              <Flex key={`col-header-${colIndex}`} {...colInfo.props}></Flex>\n            )\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableHeader;\n","import { Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass FastBalanceSelector extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n\n    let cardProps = {\n      p:2,\n      width:0.23,\n      onMouseDown:this.props.onMouseDown\n    };\n\n    let textProps = {\n      fontSize:2,\n      fontWeight:3,\n      textAlign:'center',\n      color:this.props.isActive ? 'copyColor' : 'cellText'\n    }\n\n    cardProps = this.functionsUtil.replaceArrayProps(cardProps,this.props.cardProps);\n    textProps = this.functionsUtil.replaceArrayProps(textProps,this.props.textProps);\n\n    return (\n      <DashboardCard\n        isInteractive={true}\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n      >\n        <Text \n          {...textProps}\n        >\n          {this.props.percentage}%\n        </Text>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default FastBalanceSelector;","import React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport { Flex, Link, Icon, Text } from \"rimble-ui\";\nimport CustomField from '../CustomField/CustomField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass CustomList extends Component {\n\n  state = {\n    page:1,\n    rowsPerPage:5,\n    totalPages:null,\n    processedRows:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.processRows();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const rowsChanged = JSON.stringify(prevProps.rows) !== JSON.stringify(this.props.rows);\n\n    if (rowsChanged){\n      this.setState({\n        page:1,\n      },()=>{\n        this.processRows();\n      })\n      return false;\n    }\n    const pageChanged = prevState.page !== this.state.page;\n    if (pageChanged){\n      this.processRows();\n    }\n  }\n\n  processRows = (page=null) => {\n    page = page ? page : this.state.page;\n\n    const totalRows = this.props.rows.length;\n    const totalPages = Math.ceil(totalRows/this.state.rowsPerPage);\n    \n    let processedRows = [];\n    if (this.props.paginationEnabled){\n      this.props.rows.forEach((row, i) => {\n        if (i>=((page-1)*this.state.rowsPerPage) && i<((page-1)*this.state.rowsPerPage)+this.state.rowsPerPage) {\n          processedRows.push(row);\n        }\n      });\n    } else {\n      processedRows = this.props.rows;\n    }\n\n    this.setState({\n      totalPages,\n      processedRows\n    });\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);this.processRows(page);\n    this.setState({\n      page\n    });\n  }\n\n  render() {\n\n    return (\n      <Flex id=\"custom-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"custom-list\" flexDirection={'column'}>\n          {\n            this.state.processedRows.map( (row,rowIndex) => {\n              return (\n                <TableRow\n                  row={row}\n                  {...this.props}\n                  key={`asset-${rowIndex}`}\n                  fieldComponent={CustomField}\n                  rowId={`asset-col-${rowIndex}`}\n                  cardId={`asset-card-${rowIndex}`}\n                />\n              );\n            })\n          }\n        </Flex>\n        {\n          this.props.paginationEnabled && (\n            <Flex\n              height={'50px'}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'flex-end'}\n              id={'transactions-list-pagination'}\n            >\n              <Flex mr={3}>\n                <Link mr={1} onClick={ e => this.prevPage(e) }>\n                  <Icon\n                    name={'KeyboardArrowLeft'}\n                    size={'2em'}\n                    color={ this.state.page>1 ? 'arrowActive' : 'arrowInactive' }\n                  />\n                </Link>\n                <Link onClick={ e => this.nextPage(e) }>\n                  <Icon\n                    name={'KeyboardArrowRight'}\n                    size={'2em'}\n                    color={ this.state.page<this.state.totalPages ? 'arrowActive' : 'arrowInactive' }\n                  />\n                </Link>\n              </Flex>\n              <Flex alignItems={'center'}>\n                <Text \n                  fontSize={1}\n                  fontWeight={3}\n                  color={'cellText'}\n                >\n                  Page {this.state.page} of {this.state.totalPages}\n                </Text>\n              </Flex>\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default CustomList;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n// import TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass Staking extends Component {\n\n  state = {\n    tokenConfig:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedOption:null,\n    availableTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      const tokenConfig = this.props.toolProps.availableTokens[this.state.selectedToken];\n      const contractInfo = tokenConfig.contract;\n\n      // Init contracts\n      await Promise.all([\n        this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi),\n        this.props.initContract(this.state.selectedToken,tokenConfig.address,tokenConfig.abi)\n      ]);\n\n      this.setState({\n        tokenConfig,\n        contractInfo\n      });\n    }\n  }\n\n  async loadData(){\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens).reduce( (output,token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      if (tokenConfig.enabled){\n        output.push({\n          value:token,\n          ...tokenConfig\n        });\n      }\n      return output;\n    },[]);\n\n    const selectedOption = availableTokens[0];\n    const selectedToken = selectedOption.value;\n\n    this.setState({\n      selectedToken,\n      selectedOption,\n      availableTokens\n    });\n  }\n\n  selectToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  render() {\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const SelectedComponent = this.state.tokenConfig ? this.state.tokenConfig.component : null;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTokens ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tokens...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.availableTokens.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active tokens.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text\n                        mb={1}\n                      >\n                        Select Token:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'tokens'}\n                        isSearchable={false}\n                        options={this.state.availableTokens}\n                        CustomOptionValue={CustomOptionValue}\n                        onChange={this.selectToken.bind(this)}\n                        defaultValue={this.state.selectedOption}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      SelectedComponent && (\n                        <SelectedComponent\n                          {...this.props}\n                          tokenConfig={this.state.tokenConfig}\n                          contractInfo={this.state.contractInfo}\n                          selectedToken={this.state.selectedToken}\n                        />\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Staking;","import React, { Component } from 'react';\nimport { Box, Flex, Text } from 'rimble-ui'\nimport Faquestion from '../Faquestion/Faquestion';\n\nclass GenericFaqs extends Component {\n  state = {\n    openedAnswer:null,\n    selectedSection:null\n  };\n  componentWillMount(){\n    const selectedSection = Object.keys(this.props.questions)[0];\n    this.setSection(selectedSection);\n  }\n  setSection(section) {\n    this.setState(state => ({...state, selectedSection: section, openedAnswer: null}));\n  }\n  toggleAnswer(e,i) {\n    e.preventDefault();\n    this.setState(state => ({...state, openedAnswer: state.openedAnswer===i ? null : i }));\n  };\n\n  render() {\n    const showSections = this.props.showSections === undefined || this.props.showSections;\n    return (\n      <Flex\n        width={1}\n        flexDirection={'column'}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={\"center\"}\n        >\n          {\n            showSections && (\n              <Flex\n                mb={[3,4]}\n                px={[2,0]}\n                width={[1,3/5]}\n                flexDirection={'row'}\n                justifyContent={'space-between'}\n              >\n                {\n                  Object.keys(this.props.questions).map( (section,i) => {\n                    const isSelected = section === this.state.selectedSection;\n                    return (\n                      <Flex\n                        key={`section_${i}`}\n                        textAlign={'center'}\n                        justifyContent={'center'}\n                        width={1/Object.keys(this.props.questions).length}\n                        borderBottom={ isSelected ? '3px solid #0036ff' : 'none'}\n                      >\n                        <Text\n                          mb={1}\n                          fontWeight={3}\n                          fontSize={[2, 3]}\n                          textAlign={'center'}\n                          onClick={() => this.setSection(section)}\n                          color={isSelected ? 'blue' : 'copyColor'}\n                          className={['pointer', isSelected ? 'selected' : '']}\n                        >\n                          {section}\n                        </Text>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n            )\n          }\n          <Box\n            width={1}\n          >\n            {\n              this.props.questions[this.state.selectedSection].map( (question,i) => (\n                <Faquestion\n                  key={`answer_${i}`}\n                  answer={question.a}\n                  pt={i === 0 ? 0 : ''}\n                  question={question.q}\n                  isOpened={this.state.openedAnswer === i}\n                  handleClick={ e => this.toggleAnswer(e,i) }\n                />\n              ))\n            }\n          </Box>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default GenericFaqs;","import React from \"react\";\nimport ModalCard from './ModalCard';\nimport { Text, Modal, Flex } from \"rimble-ui\";\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport RoundButton from '../../RoundButton/RoundButton.js';\n\nclass LimitReachedModal extends React.Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.loadUtils();\n  }\n\n  componentDidUpdate = async () => {\n    this.loadUtils();\n  }\n\n  closeModal = async () => {\n    this.props.closeModal();\n  }\n\n  render() {\n\n    return (\n      <Modal\n        isOpen={this.props.isOpen}\n      >\n        <ModalCard\n          maxWidth={['960px','650px']}\n          closeFunc={this.props.closeModal}\n        >\n          <ModalCard.Header\n            pt={3}\n            iconHeight={'40px'}\n            title={'Limit Reached'}\n            icon={'images/warning.svg'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              flexDirection={'column'}\n            >\n              <Text\n                fontSize={2}\n                textAlign={'left'}\n                color={'dark-gray'}\n              >\n                The pool has reached the limit size of {this.props.limit}! Please wait for the limit to be increased before trying to deposit again!\n              </Text>\n            </Flex>\n            <Flex\n              my={3}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <RoundButton\n                handleClick={this.closeModal}\n                buttonProps={{\n                  width:['100%','40%']\n                }}\n              >\n                Got it\n              </RoundButton>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default LimitReachedModal;","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TooltipText from '../TooltipText/TooltipText';\nimport { Flex, Text, Image, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheField from '../TrancheField/TrancheField';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport ShareModal from '../utilities/components/ShareModal';\nimport LimitReachedModal from '../utilities/components/LimitReachedModal';\n\nclass TrancheDetails extends Component {\n\n  state = {\n    infoText:null,\n    canUnstake:null,\n    canWithdraw:null,\n    activeModal:null,\n    balanceProp:null,\n    tokenConfig:null,\n    contractInfo:null,\n    tranchePrice:null,\n    tokenBalance:null,\n    stakedBalance:null,\n    trancheBalance:null,\n    approveEnabled:null,\n    buttonDisabled:false,\n    approveDescription:null,\n    selectedAction:'deposit',\n    userHasAvailableFunds:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = this.props.account !== prevProps.account;\n    if (accountChanged){\n      this.loadData();\n    }\n\n    const selectedActionChange = prevState.selectedAction !== this.state.selectedAction;\n    if (selectedActionChange){\n      this.loadActionData();\n    }\n  }\n\n  async loadData(){\n\n    if (!this.props.account){\n      return null;\n    }\n\n    const [\n      // blockNumber,\n      tokenBalance,\n      trancheBalance,\n      // cdoCoolingPeriod,\n      // latestHarvestBlock,\n      // stakeCoolingPeriod,\n      // rewardsTokensInfo,\n      // userStakeBlock,\n      stakedBalance,\n      trancheAPY,\n      tranchePrice\n    ] = await Promise.all([\n      // this.functionsUtil.getBlockNumber(),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.getTokenBalance(this.props.trancheConfig.name,this.props.account),\n      // this.functionsUtil.genericContractCall(this.props.tokenConfig.CDO.name,'coolingPeriod'),\n      // this.functionsUtil.genericContractCall(this.props.tokenConfig.CDO.name,'latestHarvestBlock'),\n      // this.functionsUtil.genericContractCall(this.props.trancheConfig.CDORewards.name,'coolingPeriod'),\n      // this.functionsUtil.getTrancheRewardTokensInfo(this.props.tokenConfig,this.props.trancheConfig),\n      // this.functionsUtil.genericContractCall(this.props.trancheConfig.CDORewards.name,'usersStakeBlock',[this.props.account]),\n      this.functionsUtil.getTrancheStakedBalance(this.props.trancheConfig.CDORewards.name,this.props.account,this.props.trancheConfig.CDORewards.decimals,this.props.trancheConfig.functions.stakedBalance),\n      this.functionsUtil.loadTrancheFieldRaw('trancheApy',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account),\n      this.functionsUtil.loadTrancheFieldRaw('lastTranchePrice',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account)\n    ]);\n\n    const userHasAvailableFunds = trancheBalance && trancheBalance.gt(0);\n    const canUnstake = true; // !stakeCoolingPeriod || this.functionsUtil.BNify(userStakeBlock).plus(stakeCoolingPeriod).lt(blockNumber);\n    const canWithdraw = true; // !cdoCoolingPeriod || !latestHarvestBlock || this.functionsUtil.BNify(latestHarvestBlock).plus(cdoCoolingPeriod).lt(blockNumber);\n    \n    // console.log('loadData',this.props.trancheConfig.tranche,blockNumber,cdoCoolingPeriod,latestHarvestBlock,stakeCoolingPeriod,userStakeBlock,canUnstake,canWithdraw);\n\n    this.setState({\n      trancheAPY,\n      canUnstake,\n      canWithdraw,\n      tokenBalance,\n      tranchePrice,\n      stakedBalance,\n      trancheBalance,\n      userHasAvailableFunds\n    }, () => {\n      this.loadActionData();\n    });\n  }\n\n  loadActionData(){\n    let infoBox = null;\n    let balanceProp = null;\n    let tokenConfig = null;\n    let contractInfo = null;\n    let approveEnabled = null;\n    let buttonDisabled = false;\n\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    let infoText = trancheDetails.description[this.state.selectedAction];\n\n    switch (this.state.selectedAction){\n      case 'deposit':\n        approveEnabled = true;\n        contractInfo = this.props.cdoConfig;\n        tokenConfig = this.props.tokenConfig;\n        balanceProp = this.state.tokenBalance;\n      break;\n      case 'stake':\n        approveEnabled = true;\n        tokenConfig = this.props.trancheConfig;\n        balanceProp = this.state.trancheBalance;\n        contractInfo = this.props.trancheConfig.CDORewards;\n      break;\n      case 'unstake':\n        approveEnabled = false;\n        tokenConfig = this.props.trancheConfig;\n        contractInfo = this.props.trancheConfig.CDORewards;\n        balanceProp = this.state.stakedBalance;\n        if (!this.state.canUnstake){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantUnstake;\n        }\n      break;\n      case 'withdraw':\n        approveEnabled = false;\n        contractInfo = this.props.cdoConfig;\n        // tokenConfig = this.props.tokenConfig;\n        tokenConfig = this.props.trancheConfig;\n        balanceProp = this.state.trancheBalance;\n        // balanceProp = this.state.trancheBalance.times(this.state.tranchePrice);\n        // console.log('balanceProp',this.state.trancheBalance.toFixed(),this.state.tranchePrice.toFixed(),balanceProp.toFixed());\n        if (!this.state.canWithdraw){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantWithdraw;\n          // infoBox = {\n          //   text:'You need to wait 1 block from the last ',\n          //   icon:'Warning',\n          //   iconProps:{\n          //     color:'cellText'\n          //   },\n          // };\n        }\n      break;\n      default:\n      break;\n    }\n\n    const approveDescription = `To ${this.state.selectedAction} your <strong>${tokenConfig.token}</strong> you need to approve the Smart-Contract first.`;\n\n    // console.log('loadActionData',approveEnabled);\n\n    this.setState({\n      infoBox,\n      infoText,\n      tokenConfig,\n      balanceProp,\n      contractInfo,\n      buttonDisabled,\n      approveEnabled,\n      approveDescription\n    })\n  }\n\n  changeInputCallback(){\n\n  }\n\n  contractApprovedCallback(){\n\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n\n    if (this.props.trancheConfig.functions[this.state.selectedAction]){\n      methodName = this.props.trancheConfig.functions[this.state.selectedAction];\n\n      // if (this.state.selectedAction === 'withdraw'){\n\n      // }\n\n      methodParams = [amount];\n    }\n\n    console.log('getTransactionParams',methodName,methodParams);\n\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async checkLimit(amount){\n    const trancheLimit = this.functionsUtil.BNify(this.props.tokenConfig.limit);\n    const poolSize = await this.functionsUtil.loadTrancheFieldRaw(`pool`,{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account);\n    if (poolSize.plus(amount).gt(trancheLimit)){\n      this.setState({\n        activeModal:'limit'\n      })\n      return false;\n    }\n    return true;\n  }\n\n  transactionSucceeded(){\n    this.loadData();\n    switch (this.state.selectedAction){\n      case 'stake':\n      case 'deposit':\n        this.setState({\n          activeModal:'share'\n        })\n      break;\n      default:\n      break;\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    const otherTrancheType = this.props.selectedTranche === 'AA' ? 'BB' : 'AA';\n    const otherTrancheDetails = this.functionsUtil.getGlobalConfig(['tranches',otherTrancheType]);\n    const trancheLimit = this.functionsUtil.formatMoney(this.functionsUtil.BNify(this.props.tokenConfig.limit),0)+' '+this.props.selectedToken;\n    const stakingRewards = this.props.trancheConfig.CDORewards.stakingRewards.filter( t => t.enabled );\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        maxWidth={['100%','45em']}\n      >\n        {\n          !this.props.showSelectButton && (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'flex-end'}\n            >\n              <Button\n                mb={2}\n                size={'small'}\n                width={'auto'}\n                contrastColor={'cardBg'}\n                icon={otherTrancheDetails.icon}\n                mainColor={otherTrancheDetails.color.hex}\n                onClick={e => this.props.selectTrancheType(otherTrancheDetails.route)}\n              >\n                Switch to {otherTrancheDetails.name}\n              </Button>\n            </Flex>\n          )\n        }\n        <DashboardCard\n          cardProps={{\n            py:3,\n            px:3,\n            border:null,\n            // style:{\n            //   border:`1px solid ${trancheDetails.color.hex}`\n            // }\n          }}\n        >\n          <Flex\n            pb={2}\n            mb={2}\n            alignItems={'center'}\n            flexDirection={'row'}\n            borderBottom={`1px solid ${trancheDetails.color.hex}`}\n          > \n            <Image\n              mr={2}\n              src={trancheDetails.image}\n              size={this.props.isMobile ? '1.6em' : '1.8em'}\n            />\n            <Text\n              fontWeight={4}\n              fontSize={[3,4]}\n              color={'copyColor'}\n            >\n              {trancheDetails.name}\n            </Text>\n          </Flex>\n          <Flex\n            style={{\n              flexBasis:'0',\n              flex:'1 1 0px',\n              flexWrap:'wrap',\n              borderBottom:`1px solid ${this.props.theme.colors.divider}`\n            }}\n            alignItems={'flex-start'}\n            justifyContent={'flex-start'}\n          >\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Protocol\n              </Text>\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'protocolIcon',\n                    props:{\n                      mr:2,\n                      height:['1.4em','2em']\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'protocolName',\n                    props:{\n                      fontSize:[2,3],\n                      color:'copyColor'\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Token\n              </Text>\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'tokenIcon',\n                    props:{\n                      mr:2,\n                      height:['1.4em','2em']\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'tokenName',\n                    props:{\n                      fontSize:[2,3],\n                      color:'copyColor'\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Pool Size\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'tranchePool',\n                  props:{\n                    decimals:2,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n              alignItems={'flex-start'}\n            >\n              <TooltipText\n                flexProps={{\n                  mb:1\n                }}\n                text={'Auto-Compounding'}\n                tooltipProps={{\n                  message:this.functionsUtil.getGlobalConfig(['messages','autoFarming'])\n                }}\n              />\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'autoFarming',\n                  parentProps:{\n                    justifyContent:'flex-start'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <TooltipText\n                flexProps={{\n                  mb:1\n                }}\n                text={'Staking Rewards'}\n                tooltipProps={{\n                  message:this.functionsUtil.getGlobalConfig(['messages','stakingRewards'])\n                }}\n              />\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'stakingRewards',\n                  props:{\n                    decimals:2,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <TooltipText\n                text={'APY'}\n                tooltipProps={{\n                  message:this.functionsUtil.getGlobalConfig(['messages','apyTranches'])\n                }}\n              />\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'trancheApyWithTooltip',\n                  props:{\n                    decimals:2,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n              {\n                stakingRewards.length>0 && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <TrancheField\n                      {...this.props}\n                      fieldInfo={{\n                        name:'trancheIDLELastHarvest',\n                        props:{\n                          decimals:4,\n                          fontSize:1,\n                          fontWeight:2,\n                          lineHeight:'1',\n                          color:'cellText'\n                        }\n                      }}\n                      token={this.props.selectedToken}\n                      tranche={this.props.selectedTranche}\n                      tokenConfig={this.props.tokenConfig}\n                      protocol={this.props.selectedProtocol}\n                      trancheConfig={this.props.trancheConfig}\n                    />\n                  </Flex>\n                )\n              }\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n              alignItems={'flex-start'}\n            >\n              <TooltipText\n                text={'Apr Ratio'}\n                tooltipProps={{\n                  message:this.functionsUtil.getGlobalConfig(['messages','aprRatio'])\n                }}\n              />\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'trancheAPRRatio',\n                  props:{\n                    fontWeight:3,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n              alignItems={'flex-start'}\n            >\n              <Text\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Status\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'statusBadge',\n                  props:{\n                    fontWeight:3,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            {\n              (this.props.tokenConfig.experimental || !this.props.isMobile) && (\n                <Flex\n                  mb={3}\n                  width={[0.5,0.33]}\n                  flexDirection={'column'}\n                  alignItems={'flex-start'}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={[1,2]}\n                    color={'cellText'}\n                  >\n                    Limit Cap\n                  </Text>\n                  <TrancheField\n                    {...this.props}\n                    fieldInfo={{\n                      name:'trancheLimit',\n                      props:{\n                        decimals:3,\n                        fontWeight:3,\n                        fontSize:[2,3],\n                        color:'copyColor'\n                      }\n                    }}\n                    token={this.props.selectedToken}\n                    tranche={this.props.selectedTranche}\n                    tokenConfig={this.props.tokenConfig}\n                    protocol={this.props.selectedProtocol}\n                    trancheConfig={this.props.trancheConfig}\n                  />\n                </Flex>\n              )\n            }\n          </Flex>\n          {\n            this.props.showSelectButton ? (\n                <Button\n                  mt={3}\n                  width={1}\n                  contrastColor={'cardBg'}\n                  icon={trancheDetails.icon}\n                  mainColor={trancheDetails.color.hex}\n                  onClick={e => this.props.selectTrancheType(trancheDetails.route)}\n                >\n                  {\n                    this.props.tokenConfig ? `Go to ${trancheDetails.name}` : `Start with ${trancheDetails.name}`\n                  }\n                </Button>\n            ) : (\n              <FlexLoader\n                flexProps={{\n                  mt:3,\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading Tranche Data...'}\n              />\n            )\n          }\n        </DashboardCard>\n        <LimitReachedModal\n          {...this.props}\n          limit={trancheLimit}\n          closeModal={this.resetModal}\n          isOpen={this.state.activeModal === 'limit'}\n        />\n        <ShareModal\n          confettiEnabled={true}\n          icon={`images/medal.svg`}\n          title={`Congratulations!`}\n          account={this.props.account}\n          closeModal={this.resetModal}\n          tokenName={this.props.selectedToken}\n          isOpen={this.state.activeModal === 'share'}\n          text={`You have successfully deposited in Idle!<br />Enjoy <strong>${this.state.trancheAPY ? this.state.trancheAPY.toFixed(2) : '0.00'}% APY</strong> on your <strong>${this.props.selectedToken}</strong>!`}\n          tweet={`I'm earning ${this.state.trancheAPY ? this.state.trancheAPY.toFixed(2) : '0.00'}% APY on my ${this.props.selectedToken} with @idlefinance tranches! Go to ${this.functionsUtil.getGlobalConfig(['baseURL'])}${this.props.selectedSection.route} and start earning now from your idle tokens!`}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default TrancheDetails;\n","import { Flex } from \"rimble-ui\";\nimport Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport CustomList from '../CustomList/CustomList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TrancheHarvests extends Component {\n\n  state = {\n    rows:[]\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async loadData(){\n    let rows = [];\n    const distributions = await this.functionsUtil.getTrancheStakingRewardsDistributions(this.props.tokenConfig,this.props.trancheConfig);\n\n    await this.functionsUtil.asyncForEach(Object.keys(distributions), async (token) => {\n      const txs = distributions[token];\n      const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase()]);\n      await this.functionsUtil.asyncForEach(txs, async (tx) => {\n        const tokenIcon = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${token}.svg`;\n        const blockInfo = await this.functionsUtil.getBlockInfo(tx.blockNumber);\n        const timeStamp = blockInfo.timestamp*1000;\n        const date = this.functionsUtil.strToMoment(timeStamp).format('YYYY/MM/DD HH:mm');\n        const amount = this.functionsUtil.fixTokenDecimals(tx.returnValues.amount||tx.returnValues.value,tokenConfig.decimals);\n        // console.log(token,date,amount.toString());\n        rows.push({\n          date,\n          token,\n          timeStamp,\n          tokenIcon,\n          hash:tx.transactionHash,\n          amount:this.functionsUtil.formatMoney(amount.toString(),8),\n          shortHash:this.functionsUtil.shortenHash(tx.transactionHash,10,6)\n        });\n      });\n    });\n\n    rows = rows.sort((a,b) => (parseInt(a.timeStamp) < parseInt(b.timeStamp) ? 1 : -1));\n\n    return this.setState({rows});\n  }\n\n  render() {\n    return this.state.rows.length>0 ? (\n      <Flex\n        mb={[0,4]}\n        width={1}\n        flexDirection={'column'}\n        id={'funds-overview-container'}\n      >\n        <Title my={[3,4]}>Staking Rewards Distribution</Title>\n        <CustomList\n          rows={this.state.rows}\n          paginationEnabled={true}\n          handleClick={ props => this.functionsUtil.openWindow(this.functionsUtil.getEtherscanTransactionUrl(props.row.hash)) }\n          cols={[\n            {\n              mobile:false,\n              title:'HASH',\n              props:{\n                width:[0.25,0.25]\n              },\n              fields:[\n                {\n                  type:'text',\n                  path:['shortHash'],\n                }\n              ]\n            },\n            {\n              title:'DATE',\n              props:{\n                width:[0.35,0.25],\n              },\n              fields:[\n                {\n                  type:'text',\n                  path:['date'],\n                }\n              ]\n            },\n            {\n              title:'TOKEN',\n              props:{\n                width:[0.35,0.25]\n              },\n              fields:[\n                {\n                  type:'image',\n                  props:{\n                    mr:2,\n                    size:this.props.isMobile ? '1.2em' : '1.8em'\n                  },\n                  path:['tokenIcon']\n                },\n                {\n                  type:'text',\n                  path:['token'],\n                }\n              ]\n            },\n            {\n              title:'AMOUNT',\n              props:{\n                width:[0.30,0.25],\n                justifyContent:['center','flex-start']\n              },\n              fields:[\n                {\n                  type:'text',\n                  path:['amount'],\n                  props:{\n                    decimals: this.props.isMobile ? 4 : 8\n                  }\n                },\n              ]\n            }\n          ]}\n          {...this.props}\n        />\n      </Flex>\n    ) : null;\n  }\n}\n\nexport default TrancheHarvests;\n","import React, { Component } from 'react';\nimport IconBox from '../IconBox/IconBox';\nimport ExtLink from '../ExtLink/ExtLink';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Box, Text, Icon, Link, Input, Checkbox } from \"rimble-ui\";\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\n\nclass SendTxWithBalance extends Component {\n\n  state = {\n    processing:{\n      txHash:null,\n      loading:false\n    },\n    inputValue:null,\n    txSucceeded:false,\n    permitEnabled:true,\n    showPermitBox:false,\n    approveEnabled:true,\n    buttonDisabled:true,\n    contractApproved:false,\n    fastBalanceSelector:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    await this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = prevProps.action !== this.props.action;\n    const accountChanged = prevProps.account !== this.props.account;\n    const tokenBalanceChanged = prevProps.tokenBalance !== this.props.tokenBalance;\n    const permitEnabledChanged = prevState.permitEnabled !== this.state.permitEnabled;\n    const approveEnabledChanged = prevProps.approveEnabled !== this.props.approveEnabled;\n    const contractChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    if (actionChanged || accountChanged || tokenBalanceChanged || contractChanged || approveEnabledChanged || tokenConfigChanged || permitEnabledChanged){\n      await this.loadData();\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    if (contractApprovedChanged){\n      if (typeof this.props.contractApproved === 'function'){\n        this.props.contractApproved(this.state.contractApproved);\n      }\n    }\n\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector !== prevState.fastBalanceSelector;\n    if (fastBalanceSelectorChanged || actionChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n  }\n\n  changeInputValue = (e,call_callback=true) => {\n    const fastBalanceSelector = null;\n    const inputValue = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n    if (this.state.inputValue !== inputValue){\n      this.setState((prevState) => ({\n        inputValue,\n        fastBalanceSelector\n      }),() => {\n        if (call_callback && typeof this.props.changeInputCallback === 'function'){\n          this.props.changeInputCallback(this.state.inputValue);\n        }\n      });\n    }\n  }\n\n  setInputValue = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n    const inputValue = this.props.tokenBalance && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() ? this.functionsUtil.BNify(this.props.tokenBalance).times(selectedPercentage) : null;\n\n    this.setState((prevState) => ({\n      inputValue\n    }),() => {\n      if (typeof this.props.changeInputCallback === 'function'){\n        this.props.changeInputCallback(this.state.inputValue);\n      }\n    });\n  }\n\n  getFastBalanceSelector = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    return this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  setFastBalanceSelector = (fastBalanceSelector) => {\n    this.setState({\n      fastBalanceSelector\n    });\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!amount){\n      amount = this.state.inputValue;\n    }\n    amount = this.functionsUtil.BNify(amount);\n    const buttonDisabled = amount.isNaN() || amount.lte(0) || amount.gt(this.props.tokenBalance);\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  approve = async () => {\n    // Check if the migration contract is approved\n    const contractApproved = await this.checkContractApproved();\n\n    if (!contractApproved){\n\n      const callbackApprove = (tx,error) => {\n        // Send Google Analytics event\n        const eventData = {\n          eventAction: 'approve',\n          eventCategory: 'CurveDeposit',\n          eventLabel: tx ? tx.status : null\n        };\n\n        const txSucceeded = tx && tx.status === 'success';\n\n        if (error){\n          eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n        }\n\n        // Send Google Analytics event\n        if (error || eventData.status !== 'error'){\n          this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n        }\n\n        this.setState((prevState) => ({\n          contractApproved: txSucceeded, // True\n          processing: {\n            ...prevState.processing,\n            txHash:null,\n            loading:false\n          }\n        }));\n\n        if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n          this.props.callbackApprove(tx);\n        }\n      };\n\n      const callbackReceiptApprove = (tx) => {\n        const txHash = tx.transactionHash;\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            txHash\n          }\n        }));\n      };\n\n      // console.log('Approve',this.props.tokenConfig.token,this.props.contractInfo.address);\n\n      this.functionsUtil.enableERC20(this.props.tokenConfig.token,this.props.contractInfo.address,callbackApprove,callbackReceiptApprove);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash:null,\n          loading:true\n        },\n        contractApproved:false\n      }));\n    } else {\n      this.setState({\n        contractApproved:true\n      });\n    }\n  }\n\n  executeTx = async () => {\n\n    const inputValue = this.state.inputValue ? this.functionsUtil.BNify(this.state.inputValue) : null;\n    if (!inputValue){\n      return false;\n    }\n\n    if (typeof this.props.checkLimit === 'function'){\n      const limitCheck = await this.props.checkLimit(inputValue);\n      if (!limitCheck){\n        return false;\n      }\n    }\n\n    const _amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n\n    // console.log('executeTx',params);\n\n    const callback = (tx,error) => {\n\n      const txSucceeded = tx && tx.status === 'success';\n\n      // Send Google Analytics event\n      if (tx){\n        const eventData = {\n          eventLabel: tx.status,\n          eventCategory: `CurveDeposit`,\n          eventValue: inputValue.toFixed(),\n          eventAction: this.props.tokenConfig.token,\n        };\n\n        if (error){\n          eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n        }\n\n        // Send Google Analytics event\n        if (error || eventData.status !== 'error'){\n          this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n        }\n      }\n\n      this.setState({\n        txSucceeded,\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      });\n\n      if (txSucceeded){\n        // Reset input\n        this.changeInputValue({\n          target:{\n            value:0\n          }\n        },false);\n        this.setState({\n          showPermitBox:false\n        });\n        // Call upper component callback\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx,_amount,params);\n        }\n      }\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    let params = null;\n\n    // Check contract approved without permit\n    let contractName = this.props.contractInfo.name;\n    const contractApproved = await this.checkContractApproved(false);\n\n    const permitEnabled = this.props.permitEnabled && this.state.permitEnabled && !contractApproved;\n    if (permitEnabled){\n      const signedParameters = await this.functionsUtil.signPermit(this.props.tokenConfig.token, this.props.account, contractName);\n      // console.log('signedParameters',signedParameters);\n      if (signedParameters){\n        params = this.props.getPermitTransactionParams(_amount,signedParameters);\n      }\n    } else {\n      if (this.props.getTransactionParams_async){\n        params = await this.props.getTransactionParams_async(_amount,this.state.fastBalanceSelector);\n      } else {\n        params = this.props.getTransactionParams(_amount,this.state.fastBalanceSelector);\n      }\n    }\n\n    if (params){\n      let {\n        methodName,\n        methodParams\n      } = params;\n\n      const value = params.value || null;\n      contractName = params.contractName || this.props.contractInfo.name;\n\n      // console.log('SendTxWithBalance',contractName, methodName, methodParams, value);\n\n      this.props.contractMethodSendWrapper(contractName, methodName, methodParams, value, callback, callbackReceipt);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:true\n        }\n      }));\n    } else {\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:false\n        }\n      }));\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async checkContractApproved(checkPermit=true){\n\n    if (checkPermit && this.props.permitEnabled && this.state.permitEnabled){\n      return true;\n    }\n\n    if (this.props.approveEnabled !== undefined && !this.props.approveEnabled){\n      return true;\n    }\n    \n    const contractApproved = await this.functionsUtil.checkTokenApproved(this.props.tokenConfig.token,this.props.contractInfo.address,this.props.account);\n    return contractApproved;\n  }\n\n  async loadData(){\n    const inputValue = null;\n    const fastBalanceSelector = null;\n    const approveEnabled = this.props.approveEnabled !== false;\n\n    if (this.props.contractInfo){\n      await this.props.initContract(this.props.contractInfo.name,this.props.contractInfo.address,this.props.contractInfo.abi);\n    }\n    // console.log('initContract',this.props.contractInfo);\n\n    const contractApproved = await this.checkContractApproved();\n\n    this.setState({\n      inputValue,\n      approveEnabled,\n      contractApproved,\n      fastBalanceSelector\n    });\n  }\n\n  approveCallback = () => {\n    this.loadData();\n  }\n\n  render() {\n\n    const viewOnly = this.props.connectorName === 'custom';\n    const action = this.props.action ? this.props.action : 'Deposit';\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'stretch'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          viewOnly ? (\n            <IconBox\n              cardProps={{\n                mt:3\n              }}\n              icon={'Visibility'}\n              text={'You are using Idle in \"Read-Only\" mode.<br />Logout and connect with your wallet to interact.'}\n            />\n          ) : !this.props.account ? (\n            <ConnectBox\n              {...this.props}\n            />\n          ) : this.props.tokenConfig && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && this.functionsUtil.BNify(this.props.tokenBalance).gt(0) ? (\n            <Box\n              width={1}\n            >\n              {\n                this.props.infoBox && (\n                  <IconBox\n                    cardProps={{\n                      mb:3\n                    }}\n                    {...this.props.infoBox}\n                  />\n                )\n              }\n              {\n                this.props.steps && this.props.steps.length>0 && (\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                      px:[2,4]\n                    }}\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    > \n                      {\n                        this.props.steps.map( (step,stepIndex) => (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            key={`step_${stepIndex}`}\n                          >\n                            <Icon\n                              size={'1.5em'}\n                              name={ step.completed ? 'CheckBox' : step.icon}\n                              color={ step.completed ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                            />\n                            {\n                              step.link ? (\n                                <ExtLink\n                                  ml={2}\n                                  fontSize={2}\n                                  color={'blue'}\n                                  fontWeight={1}\n                                  href={step.link}\n                                  textAlign={'left'}\n                                  hoverColor={'blue'}\n                                >\n                                  {step.description}\n                                </ExtLink>\n                              ) : (\n                                <Text\n                                  ml={2}\n                                  fontSize={2}\n                                  fontWeight={1}\n                                  color={'cellText'}\n                                  textAlign={'left'}\n                                >\n                                  {step.description}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        ) )\n                      }\n                    </Flex>\n                  </DashboardCard>\n                )\n              }\n              <Box\n                mt={2}\n                width={1}\n              >\n                {\n                  this.state.showPermitBox && this.props.permitEnabled ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:3,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          name={'Warning'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Approve and Deposit in a single transaction is supported for this transaction, disable this feature and try again if you can't deposit.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.props.permitEnabled && (\n                    <Flex\n                      p={2}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                      backgroundColor={'DashboardCard'}\n                      border={`1px solid ${this.props.theme.colors.primary}`}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Permit signature?\n                      </Link>\n                      <Icon\n                        ml={1}\n                        size={'1em'}\n                        name={'Warning'}\n                        color={'primary'}\n                      />\n                    </Flex>\n                  )\n                }\n              </Box>\n              {\n                this.state.approveEnabled && !this.state.contractApproved ?\n                  this.state.processing.loading ? (\n                    <Flex\n                      mt={3}\n                      flexDirection={'column'}\n                    >\n                      <TxProgressBar\n                        {...this.props}\n                        waitText={`Approve estimated in`}\n                        hash={this.state.processing.txHash}\n                        endMessage={`Finalizing approve request...`}\n                        cancelTransaction={this.cancelTransaction.bind(this)}\n                      />\n                    </Flex>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          name={'LockOpen'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                          dangerouslySetInnerHTML={{\n                            __html:this.props.approveDescription\n                          }}\n                        />\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.approve.bind(this)}\n                        >\n                          Approve\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  )\n                : this.state.processing.loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      {...this.props}\n                      hash={this.state.processing.txHash}\n                      endMessage={`Finalizing ${action} request...`}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      waitText={`${this.functionsUtil.capitalize(action)} estimated in`}\n                    />\n                  </Flex>\n                ) : (\n                  <Box\n                    mt={2}\n                    width={1}\n                  >\n                    <Flex\n                      mt={2}\n                      mb={3}\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        mb={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                      >\n                        {\n                          this.props.balanceSelectorInfo && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                textAlign={'left'}\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                                color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                              >\n                                {this.props.balanceSelectorInfo.text}\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                        {\n                          !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'flex-end'}\n                            >\n                              <Link\n                                fontSize={1}\n                                fontWeight={3}\n                                color={'dark-gray'}\n                                textAlign={'right'}\n                                hoverColor={'copyColor'}\n                                onClick={ (e) => this.setFastBalanceSelector(100) }\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                              >\n                                Balance: {this.functionsUtil.BNify(this.props.tokenBalance).toFixed(this.props.isMobile ? 2 : 4)} {this.props.tokenConfig.label || this.props.tokenConfig.token}\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                      <Input\n                        min={0}\n                        type={\"number\"}\n                        required={true}\n                        height={'3.4em'}\n                        borderRadius={2}\n                        fontWeight={500}\n                        borderColor={'cardBorder'}\n                        backgroundColor={'cardBg'}\n                        boxShadow={'none !important'}\n                        placeholder={`Insert amount`}\n                        onChange={this.changeInputValue.bind(this)}\n                        border={`1px solid ${this.props.theme.colors.divider}`}\n                        value={this.state.inputValue !== null ? this.functionsUtil.BNify(this.state.inputValue).toFixed() : ''}\n                      />\n                      <Flex\n                        mt={2}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        {\n                          [25,50,75,100].map( percentage => (\n                            <FastBalanceSelector\n                              percentage={percentage}\n                              key={`selector_${percentage}`}\n                              onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                              isActive={this.state.fastBalanceSelector === parseInt(percentage)}\n                            />\n                          ))\n                        }\n                      </Flex>\n                      <Flex\n                        mt={2}\n                        justifyContent={'center'}\n                      >\n                        <RoundButton\n                          handleClick={this.executeTx.bind(this)}\n                          buttonProps={Object.assign({\n                            mt:2,\n                            width:[1,1/2],\n                            style:{\n                              textTransform:'capitalize'\n                            },\n                            disabled:this.state.buttonDisabled||this.props.buttonDisabled\n                          },this.props.buttonProps)}\n                        >\n                          {this.props.action}\n                        </RoundButton>\n                      </Flex>\n                    </Flex>\n                  </Box>\n                )\n              }\n            </Box>\n          ) : this.props.children\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SendTxWithBalance;","import IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport ImageButton from '../ImageButton/ImageButton';\nimport TooltipText from '../TooltipText/TooltipText';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport TrancheField from '../TrancheField/TrancheField';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport ShareModal from '../utilities/components/ShareModal';\n// import StatsCardSmall from '../StatsCardSmall/StatsCardSmall';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport { Flex, Text, Image, Box, Icon, Button } from \"rimble-ui\";\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport LimitReachedModal from '../utilities/components/LimitReachedModal';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass TrancheDetails extends Component {\n\n  state = {\n    infoText:null,\n    canUnstake:null,\n    canWithdraw:null,\n    activeModal:null,\n    actionLabel:null,\n    balanceProp:null,\n    tokenConfig:null,\n    contractInfo:null,\n    tranchePrice:null,\n    tokenBalance:null,\n    stakeEnabled:true,\n    stakedBalance:null,\n    unstakeEnabled:true,\n    trancheBalance:null,\n    stakingEnabled:true,\n    approveEnabled:null,\n    buttonDisabled:false,\n    selectedTranche:null,\n    availableTranches:null,\n    approveDescription:null,\n    selectedAction:'deposit',\n    selectedTrancheOption:null,\n    selectedStakeAction:'stake',\n    userHasAvailableFunds:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = this.props.account !== prevProps.account;\n    if (accountChanged){\n      this.loadData();\n    }\n\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const selectedStakeActionChanged = prevState.selectedStakeAction !== this.state.selectedStakeAction;\n    if (selectedActionChanged || selectedStakeActionChanged){\n      this.loadActionData();\n    }\n  }\n\n  async loadData(){\n\n    const [\n      // blockNumber,\n      tokenBalance,\n      trancheBalance,\n      // cdoCoolingPeriod,\n      // latestHarvestBlock,\n      // stakeCoolingPeriod,\n      // rewardsTokensInfo,\n      // userStakeBlock,\n      stakedBalance,\n      trancheAPY,\n      tranchePrice\n    ] = await Promise.all([\n      // this.functionsUtil.getBlockNumber(),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.getTokenBalance(this.props.trancheConfig.name,this.props.account),\n      // this.functionsUtil.genericContractCall(this.props.tokenConfig.CDO.name,'coolingPeriod'),\n      // this.functionsUtil.genericContractCall(this.props.tokenConfig.CDO.name,'latestHarvestBlock'),\n      // this.functionsUtil.genericContractCall(this.props.trancheConfig.CDORewards.name,'coolingPeriod'),\n      // this.functionsUtil.getTrancheRewardTokensInfo(this.props.tokenConfig,this.props.trancheConfig),\n      // this.functionsUtil.genericContractCall(this.props.trancheConfig.CDORewards.name,'usersStakeBlock',[this.props.account]),\n      this.functionsUtil.getTrancheStakedBalance(this.props.trancheConfig.CDORewards.name,this.props.account,this.props.trancheConfig.CDORewards.decimals,this.props.trancheConfig.functions.stakedBalance),\n      this.functionsUtil.loadTrancheFieldRaw('trancheApy',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account),\n      this.functionsUtil.loadTrancheFieldRaw('trancheRealPrice',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account)\n    ]);\n\n    const canUnstake = true; // !stakeCoolingPeriod || this.functionsUtil.BNify(userStakeBlock).plus(stakeCoolingPeriod).lt(blockNumber);\n    const canWithdraw = true; // !cdoCoolingPeriod || !latestHarvestBlock || this.functionsUtil.BNify(latestHarvestBlock).plus(cdoCoolingPeriod).lt(blockNumber);\n    \n    // console.log('loadData',this.props.trancheConfig.tranche,blockNumber,cdoCoolingPeriod,latestHarvestBlock,stakeCoolingPeriod,userStakeBlock,canUnstake,canWithdraw);\n\n    const availableTranches = Object.values(this.functionsUtil.getGlobalConfig(['tranches'])).map( trancheInfo => ({\n      value:trancheInfo.type,\n      icon:trancheInfo.image,\n      label:trancheInfo.name,\n      tranche:trancheInfo.type,\n      trancheConfig:this.props.tokenConfig[trancheInfo.type]\n    }));\n\n    const userHasAvailableFunds = trancheBalance && trancheBalance.gt(0);\n    const selectedTrancheOption = availableTranches.find( trancheInfo => trancheInfo.value === this.props.selectedTranche );\n    const selectedTranche = selectedTrancheOption.value;\n\n    const stakingRewards = this.props.trancheConfig.CDORewards.stakingRewards.filter( t => t.enabled );\n    let stakingEnabled = stakingRewards.length>0;\n    const stakeEnabled = stakingEnabled;\n    const unstakeEnabled = stakedBalance && this.functionsUtil.BNify(stakedBalance).gt(0);\n\n    // console.log('stakingRewards',stakingRewards,stakingEnabled,unstakeEnabled);\n\n    if (!stakingEnabled && unstakeEnabled){\n      stakingEnabled = true;\n    }\n\n    let selectedStakeAction = 'stake';\n    if (!stakeEnabled && unstakeEnabled){\n      selectedStakeAction = 'unstake';\n    }\n\n    this.setState({\n      trancheAPY,\n      canUnstake,\n      canWithdraw,\n      tokenBalance,\n      stakeEnabled,\n      tranchePrice,\n      stakedBalance,\n      stakingEnabled,\n      trancheBalance,\n      unstakeEnabled,\n      selectedTranche,\n      availableTranches,\n      selectedStakeAction,\n      selectedTrancheOption,\n      userHasAvailableFunds\n    }, () => {\n      this.loadActionData();\n    });\n  }\n\n  loadActionData(){\n    let infoBox = null;\n    let balanceProp = null;\n    let tokenConfig = null;\n    let contractInfo = null;\n    let approveEnabled = null;\n    let buttonDisabled = false;\n\n    let actionLabel = this.state.selectedAction;\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    let infoText = trancheDetails.description[this.state.selectedAction];\n\n    switch (this.state.selectedAction){\n      case 'deposit':\n        approveEnabled = true;\n        contractInfo = this.props.cdoConfig;\n        tokenConfig = this.props.tokenConfig;\n        balanceProp = this.state.tokenBalance;\n      break;\n      case 'stake':\n        actionLabel = this.state.selectedStakeAction;\n        switch (this.state.selectedStakeAction){\n          case 'stake':\n            approveEnabled = true;\n            tokenConfig = this.props.trancheConfig;\n            balanceProp = this.state.trancheBalance;\n            contractInfo = this.props.trancheConfig.CDORewards;\n          break;\n          case 'unstake':\n            approveEnabled = false;\n            tokenConfig = this.props.trancheConfig;\n            contractInfo = this.props.trancheConfig.CDORewards;\n            balanceProp = this.state.stakedBalance;\n            if (!this.state.canUnstake){\n              buttonDisabled = true;\n              infoText = trancheDetails.description.cantUnstake;\n            }\n          break;\n          default:\n          break;\n        }\n        if (this.state.stakingEnabled){\n          infoText = trancheDetails.description[this.state.selectedStakeAction];\n        } else {\n          infoText = null;\n        }\n      break;\n      case 'withdraw':\n        approveEnabled = false;\n        contractInfo = this.props.cdoConfig;\n        // tokenConfig = this.props.trancheConfig;\n        // balanceProp = this.state.trancheBalance;\n\n        tokenConfig = this.props.tokenConfig;\n        balanceProp = this.state.trancheBalance.times(this.state.tranchePrice);\n\n        // console.log('balanceProp',this.state.trancheBalance,this.state.tranchePrice,balanceProp);\n\n        if (!this.state.canWithdraw){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantWithdraw;\n          // infoBox = {\n          //   text:'You need to wait 1 block from the last ',\n          //   icon:'Warning',\n          //   iconProps:{\n          //     color:'cellText'\n          //   },\n          // };\n        }\n      break;\n      default:\n      break;\n    }\n\n    const approveDescription = tokenConfig ? `To ${this.state.selectedAction} your <strong>${tokenConfig.token}</strong> you need to approve the Smart-Contract first.` : null;\n\n    // console.log('loadActionData',approveEnabled);\n\n    this.setState({\n      infoBox,\n      infoText,\n      actionLabel,\n      tokenConfig,\n      balanceProp,\n      contractInfo,\n      buttonDisabled,\n      approveEnabled,\n      approveDescription\n    })\n  }\n\n  changeInputCallback(){\n\n  }\n\n  contractApprovedCallback(){\n\n  }\n\n  getTransactionParams(amount,selectedPercentage){\n    let methodName = null;\n    let methodParams = null;\n\n    if (this.props.trancheConfig.functions[this.state.selectedAction]){\n      methodName = this.props.trancheConfig.functions[this.state.selectedAction];\n\n      if (this.state.selectedAction === 'withdraw'){\n        let trancheTokenToRedeem = null;\n        if (selectedPercentage) {\n          trancheTokenToRedeem = this.functionsUtil.BNify(this.state.trancheBalance).times(this.functionsUtil.BNify(selectedPercentage).div(100));\n        } else {\n          trancheTokenToRedeem = this.functionsUtil.BNify(amount).div(this.functionsUtil.normalizeTokenAmount(this.state.tranchePrice,18));\n        }\n\n        // Check if idleTokens to redeem > idleToken balance\n        if (trancheTokenToRedeem.gt(this.functionsUtil.BNify(this.state.trancheBalance))) {\n          trancheTokenToRedeem = this.functionsUtil.BNify(this.state.trancheBalance);\n        }\n\n        // Normalize number\n        trancheTokenToRedeem = this.functionsUtil.normalizeTokenAmount(trancheTokenToRedeem, 18);\n\n        methodParams = [trancheTokenToRedeem];\n      } else {\n        if (this.state.selectedAction === 'stake'){\n          methodName = this.props.trancheConfig.functions[this.state.selectedStakeAction];\n        }\n\n        methodParams = [amount];\n      }\n    }\n\n    console.log('getTransactionParams',this.state.selectedAction,amount,this.functionsUtil.BNify(this.state.trancheBalance).toFixed(),selectedPercentage,methodParams);\n\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async checkLimit(amount){\n    const trancheLimit = this.functionsUtil.BNify(this.props.tokenConfig.limit);\n    if (trancheLimit.gt(0)){\n      const poolSize = await this.functionsUtil.loadTrancheFieldRaw(`pool`,{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account);\n      if (poolSize.plus(amount).gt(trancheLimit)){\n        this.setState({\n          activeModal:'limit'\n        })\n        return false;\n      }\n    }\n    return true;\n  }\n\n  transactionSucceeded(){\n    this.loadData();\n    switch (this.state.selectedAction){\n      case 'stake':\n      case 'deposit':\n        if (this.state.selectedAction === 'deposit' || this.state.selectedStakeAction === 'stake'){\n          this.setState({\n            activeModal:'share'\n          });\n        }\n      break;\n      default:\n      break;\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  setStakeAction(selectedStakeAction){\n    this.setState({\n      selectedStakeAction\n    });\n  }\n\n  selectTranche(trancheType){\n    // console.log('selectTranche',trancheType);\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',trancheType]);\n    if (trancheDetails){\n      this.props.selectTrancheType(trancheDetails.route);\n    }\n  }\n\n  render() {\n\n    const isStake = this.state.selectedAction === 'stake';\n    const isDeposit = this.state.selectedAction === 'deposit';\n    const isWithdraw = this.state.selectedAction === 'withdraw';\n\n    const stakingRewards = this.props.trancheConfig.CDORewards.stakingRewards.filter( t => t.enabled );\n    const trancheLimit = this.functionsUtil.formatMoney(this.functionsUtil.BNify(this.props.tokenConfig.limit),0)+' '+this.props.selectedToken;\n\n    const CustomOptionValue = props => {\n      const selectedOption = props.options.find( option => option.value === props.value );\n      if (!selectedOption){\n        return null;\n      }\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <Image\n              mr={2}\n              src={selectedOption.icon}\n              size={this.props.isMobile ? '1.6em' : '1.8em'}\n            />\n            <Text\n              fontWeight={3}\n            >\n              {props.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n      const selectProps = props.selectProps.options.find( option => option.value === props.selectProps.value.value );\n      // console.log('CustomValueContainer',props.selectProps.options,props.selectProps.value,selectProps);\n      if (!selectProps){\n        return null;\n      }\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <Image\n              mr={2}\n              src={selectProps.icon}\n              size={this.props.isMobile ? '1.6em' : '1.8em'}\n            />\n            <Text\n              fontWeight={3}\n            >\n              {selectProps.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTranches ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tranches...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n              maxWidth={['100%','42em']}\n            >\n              <Box\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select Tranche:\n                </Text>\n                <GenericSelector\n                  {...this.props}\n                  name={'tranches'}\n                  isSearchable={false}\n                  CustomOptionValue={CustomOptionValue}\n                  options={this.state.availableTranches}\n                  onChange={this.selectTranche.bind(this)}\n                  CustomValueContainer={CustomValueContainer}\n                  defaultValue={this.state.selectedTrancheOption}\n                />\n              </Box>\n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Tranche details:\n                </Text>\n                <DashboardCard\n                  cardProps={{\n                    py:1,\n                    px:3,\n                    mb:2\n                  }}\n                  isActive={false}\n                >\n                  <Flex\n                    mt={1}\n                    mb={1}\n                    width={1}\n                    style={{\n                      flexBasis:'0',\n                      flex:'1 1 0px',\n                      flexWrap:'wrap'\n                    }}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <Flex\n                      mb={[2,3]}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        color={'cellText'}\n                        fontWeight={[2,3]}\n                      >\n                        Protocol\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'protocolIcon',\n                            props:{\n                              mr:2,\n                              height:['1.4em','2em']\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'protocolName',\n                            props:{\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={[2,3]}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        color={'cellText'}\n                        fontWeight={[2,3]}\n                      >\n                        Token\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'tokenIcon',\n                            props:{\n                              mr:2,\n                              height:['1.4em','2em']\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'tokenName',\n                            props:{\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={[2,3]}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        color={'cellText'}\n                        fontWeight={[2,3]}\n                      >\n                        Pool Size\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'tranchePool',\n                            props:{\n                              decimals:2,\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <TooltipText\n                        textProps={{\n                          fontSize:[1,2],\n                          fontWeight:[2,3]\n                        }}\n                        text={'Auto-Compounding'}\n                        message={this.functionsUtil.getGlobalConfig(['messages','autoFarming'])}\n                      />\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'autoFarming',\n                            props:{\n                              decimals:2,\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <TooltipText\n                        textProps={{\n                          fontSize:[1,2],\n                          fontWeight:[2,3]\n                        }}\n                        text={'Staking Rewards'}\n                        message={this.functionsUtil.getGlobalConfig(['messages','stakingRewards'])}\n                      />\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'stakingRewards',\n                            props:{\n                              decimals:2,\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <TooltipText\n                        textProps={{\n                          fontSize:[1,2],\n                          fontWeight:[2,3]\n                        }}\n                        text={'APY'}\n                        message={this.functionsUtil.getGlobalConfig(['messages','apyTranches'])}\n                      />\n                      <Flex\n                        flexDirection={'column'}\n                        alignItems={'flex-start'}\n                        justifyContent={'flex-start'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'trancheApyWithTooltip',\n                            props:{\n                              decimals:2,\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                        {\n                          stakingRewards.length>0 && (\n                            <Flex\n                              width={1}\n                              flexDirection={'row'}\n                              alignItems={'flex-start'}\n                            >\n                              <TrancheField\n                                {...this.props}\n                                fieldInfo={{\n                                  name:'trancheIDLELastHarvest',\n                                  props:{\n                                    decimals:4,\n                                    fontSize:1,\n                                    fontWeight:2,\n                                    lineHeight:'1',\n                                    color:'cellText'\n                                  }\n                                }}\n                                token={this.props.selectedToken}\n                                tranche={this.props.selectedTranche}\n                                tokenConfig={this.props.tokenConfig}\n                                protocol={this.props.selectedProtocol}\n                                trancheConfig={this.props.trancheConfig}\n                              />\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <TooltipText\n                        textProps={{\n                          fontSize:[1,2],\n                          fontWeight:[2,3]\n                        }}\n                        text={'Apr Ratio'}\n                        message={this.functionsUtil.getGlobalConfig(['messages','aprRatio'])}\n                      />\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'trancheAPRRatio',\n                            props:{\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        color={'cellText'}\n                        fontWeight={[2,3]}\n                      >\n                        Status\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'statusBadge'\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        color={'cellText'}\n                        fontWeight={[2,3]}\n                      >\n                        Limit Cap\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'trancheLimit',\n                            props:{\n                              decimals:3,\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                </DashboardCard>\n              </Box>\n              <Box\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select Action:\n                </Text>\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={['column','row']}\n                  justifyContent={'space-between'}\n                >\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isDeposit ? 2 : 0\n                    }}\n                    caption={'Deposit'}\n                    width={[1,'32%']}\n                    isMobile={this.props.isMobile}\n                    imageSrc={'images/deposit.png'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isDeposit}\n                    handleClick={ e => this.setSelectedAction('deposit') }\n                  />\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isStake ? 2 : 0,\n                      disabled:!this.state.stakingEnabled\n                    }}\n                    width={[1,'32%']}\n                    caption={'Stake / Unstake'}\n                    imageSrc={'images/mint.svg'}\n                    isMobile={this.props.isMobile}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isStake}\n                    handleClick={ e => this.setSelectedAction('stake') }\n                  />\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isWithdraw ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    caption={'Withdraw'}\n                    imageSrc={'images/upload.svg'}\n                    isMobile={this.props.isMobile}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isWithdraw}\n                    handleClick={ e => this.setSelectedAction('withdraw') }\n                  />\n                </Flex>\n              </Box>\n              {\n                isStake && this.state.stakingEnabled && (\n                  <Box\n                    mb={2}\n                    width={1}\n                  >\n                    <Text mb={1}>\n                      Choose stake action:\n                    </Text>\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'space-between'}\n                    >\n                      <CardIconButton\n                        {...this.props}\n                        textProps={{\n                          fontSize:[1,2]\n                        }}\n                        cardProps={{\n                          px:3,\n                          py:2,\n                          width:0.49\n                        }}\n                        text={'Stake'}\n                        icon={'Layers'}\n                        iconColor={'deposit'}\n                        iconBgColor={'#ced6ff'}\n                        handleClick={ e => this.setStakeAction('stake') }\n                        isActive={ this.state.selectedStakeAction === 'stake' }\n                      />\n                      <CardIconButton\n                        {...this.props}\n                        textProps={{\n                          fontSize:[1,2]\n                        }}\n                        cardProps={{\n                          px:3,\n                          py:2,\n                          width:0.49\n                        }}\n                        text={'Unstake'}\n                        icon={'LayersClear'}\n                        iconColor={'redeem'}\n                        iconBgColor={'#ceeff6'}\n                        isDisabled={ !this.state.unstakeEnabled }\n                        isActive={ this.state.selectedStakeAction === 'unstake' }\n                        handleClick={ e => this.state.unstakeEnabled ? this.setStakeAction('unstake') : null }\n                      />\n                    </Flex>\n                  </Box>\n                )\n              }\n              {\n                this.state.infoText && this.props.account && (\n                  <IconBox\n                    cardProps={{\n                      p:2,\n                      mt:3,\n                      mb:2,\n                      width:1,\n                    }}\n                    isActive={true}\n                    isInteractive={false}\n                    iconProps={{\n                      size:'1.2em',\n                      color:'flashColor'\n                    }}\n                    textProps={{\n                      fontWeight:500,\n                      color:'flashColor',\n                      textAlign:'center',\n                      fontSize:['13px','15px']\n                    }}\n                    icon={'LightbulbOutline'}\n                    text={this.state.infoText}\n                  />\n                )\n              }\n              <Flex\n                width={1}\n                alignItems={'stretch'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                {\n                  ((isStake && !this.state.stakingEnabled) || (isStake && this.state.selectedStakeAction === 'stake' && !this.state.stakeEnabled)) ? (\n                    <DashboardCard\n                      cardProps={{\n                        p: 2,\n                        mt: 3\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          color={'cellText'}\n                          name={'DoNotDisturb'}\n                        />\n                        <Text\n                          mt={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Staking is not enabled for this Tranche.\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  ) : isStake && this.state.selectedStakeAction === 'unstake' && !this.props.trancheConfig.CDORewards.unstakeWithBalance ? (\n                    <DashboardCard\n                      cardProps={{\n                        p: 2,\n                        pb: 3,\n                        mt: 3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          color={'cellText'}\n                          name={'MonetizationOn'}\n                        />\n                        <Text\n                          mt={1}\n                          mb={3}\n                          fontSize={[2,3]}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          You can unstake <strong>{this.state.stakedBalance.toFixed(8)} {this.state.tokenConfig.label}</strong>.\n                        </Text>\n                        <ExecuteTransaction\n                          params={[]}\n                          {...this.props}\n                          Component={Button}\n                          parentProps={{\n                            width:1,\n                            alignItems:'center',\n                            justifyContent:'center'\n                          }}\n                          componentProps={{\n                            fontSize:3,\n                            fontWeight:3,\n                            size:'medium',\n                            width:[1,1/3],\n                            borderRadius:4,\n                            value:'Unstake',\n                            mainColor:'redeem',\n                          }}\n                          action={'Unstake'}\n                          contractName={this.state.contractInfo.name}\n                          callback={this.transactionSucceeded.bind(this)}\n                          methodName={this.props.trancheConfig.functions.unstake}\n                        />\n                      </Flex>\n                    </DashboardCard>\n                  ) : (\n                    <SendTxWithBalance\n                      error={null}\n                      {...this.props}\n                      buttonProps={{\n                        width:[1,0.45]\n                      }}\n                      permitEnabled={false}\n                      tokenConfig={this.state.tokenConfig}\n                      tokenBalance={this.state.balanceProp}\n                      contractInfo={this.state.contractInfo}\n                      checkLimit={this.checkLimit.bind(this)}\n                      approveEnabled={this.state.approveEnabled}\n                      buttonDisabled={this.state.buttonDisabled}\n                      callback={this.transactionSucceeded.bind(this)}\n                      approveDescription={this.state.approveDescription}\n                      changeInputCallback={this.changeInputCallback.bind(this)}\n                      contractApproved={this.contractApprovedCallback.bind(this)}\n                      getTransactionParams={this.getTransactionParams.bind(this)}\n                      action={this.functionsUtil.capitalize(this.state.actionLabel)}\n                    >\n                      {\n                        isDeposit ? (\n                          <Flex\n                            width={1}\n                            alignItems={'stretch'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <BuyModal\n                              {...this.props}\n                              showInline={true}\n                              availableMethods={[]}\n                              buyToken={this.props.selectedToken}\n                            >\n                              {\n                                this.props.tokenConfig.buyInstructions ? (\n                                  <DashboardCard\n                                    cardProps={{\n                                      p: 2,\n                                      my: 2\n                                    }}\n                                  >\n                                    <Flex\n                                      width={1}\n                                      alignItems={'center'}\n                                      flexDirection={'column'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        size={'1.8em'}\n                                        name={'MoneyOff'}\n                                        color={'cellText'}\n                                      />\n                                      <Text\n                                        mt={1}\n                                        color={'cellText'}\n                                        textAlign={'center'}\n                                      >\n                                        You don't have any <strong>{this.props.selectedToken}</strong> to deposit.\n                                      </Text>\n                                      <Text\n                                        mt={1}\n                                        color={'cellText'}\n                                        textAlign={'center'}\n                                        dangerouslySetInnerHTML={{__html:this.props.tokenConfig.buyInstructions}}>\n                                      </Text>\n                                    </Flex>\n                                  </DashboardCard>\n                                ) : null\n                              }\n                            </BuyModal>\n                          </Flex>\n                        ) : isStake ? (\n                          <DashboardCard\n                            cardProps={{\n                              p: 2,\n                              my: 2\n                            }}\n                          >\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Icon\n                                size={'1.8em'}\n                                name={'MoneyOff'}\n                                color={'cellText'}\n                              />\n                              <Text\n                                mt={1}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                You don't have any <strong>{this.state.tokenConfig.label}</strong> token to {this.state.selectedStakeAction}.\n                              </Text>\n                            </Flex>\n                          </DashboardCard>\n                        ) : isWithdraw && (\n                          <DashboardCard\n                            cardProps={{\n                              p: 2,\n                              my: 2\n                            }}\n                          >\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Icon\n                                size={'1.8em'}\n                                name={'MoneyOff'}\n                                color={'cellText'}\n                              />\n                              <Text\n                                mt={1}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                You don't have any {this.props.selectedToken} to withdraw.<br />If you have staked your <strong>{this.state.tokenConfig.label}</strong> tokens please unstake them to be able to withdraw your {this.props.selectedToken}.\n                            </Text>\n                            </Flex>\n                          </DashboardCard>\n                        )\n                      }\n                    </SendTxWithBalance>\n                  )\n                }\n              </Flex>\n              <LimitReachedModal\n                {...this.props}\n                limit={trancheLimit}\n                closeModal={this.resetModal}\n                isOpen={this.state.activeModal === 'limit'}\n              />\n              <ShareModal\n                confettiEnabled={true}\n                icon={`images/medal.svg`}\n                title={`Congratulations!`}\n                account={this.props.account}\n                closeModal={this.resetModal}\n                tokenName={this.props.selectedToken}\n                isOpen={this.state.activeModal === 'share'}\n                text={`You have successfully deposited in Idle!<br />Enjoy <strong>${this.state.trancheAPY ? this.state.trancheAPY.toFixed(2) : '0.00'}% APY</strong> on your <strong>${this.props.selectedToken}</strong>!`}\n                tweet={`I'm earning ${this.state.trancheAPY ? this.state.trancheAPY.toFixed(2) : '0.00'}% APY on my ${this.props.selectedToken} with @idlefinance tranches! Go to ${this.functionsUtil.getGlobalConfig(['baseURL'])}${this.props.selectedSection.route} and start earning now from your idle tokens!`}\n              />\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TrancheDetails;\n","import { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquityTranches extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    if (mobileChanged || themeModeChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n    let enabledTokens = this.props.enabledTokens;\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTranches).reduce( (enabledTokens,protocol) => {\n        const tokens = Object.keys(this.props.availableTranches[protocol]);\n        tokens.forEach( token => {\n          if (!enabledTokens.includes(token)){\n            enabledTokens.push(token);\n          }\n        });\n        return enabledTokens;\n      },[]);\n    }\n\n    const transactions = this.props.transactionsList;\n\n    const chartData = [];\n    const tokensData = {};\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(transactions).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        await this.functionsUtil.asyncForEach(filteredTxs,async (tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n\n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const timeStamp = parseInt(tx.timeStamp);\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Deposit':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.functionsUtil.BNify(0);\n          }\n\n          const action = tx.action;\n          const balance = amountLent;\n          const tranche = tx.tranche;\n          const protocol = tx.protocol;\n          const blockNumber = tx.blockNumber;\n          const tranchePrice = this.functionsUtil.BNify(tx.tranchePrice);\n          const trancheTokens = this.functionsUtil.BNify(tx.trancheTokens);\n          if (!tranchePrice.isNaN() && !trancheTokens.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              tranche,\n              protocol,\n              timeStamp,\n              tokenAmount,\n              blockNumber,\n              tranchePrice,\n              trancheTokens\n            });\n\n            tokensBalance[selectedToken] = tokensBalance[selectedToken].sort((a, b) => (parseInt(a.timeStamp) > parseInt(b.timeStamp) ? 1 : -1));\n          }\n        });\n      }\n    });\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    const currTimestamp = parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment().format('YYYY-MM-DD')+' 23:59:59','YYYY-MM-DD HH:mm:ss')._d.getTime()/1000);\n\n    const trancheTokenBalance = {};\n\n    if (!firstTxTimestamp){\n      firstTxTimestamp = currTimestamp;\n    }\n\n    // let lastTimestamp = parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment().format('YYYY-MM-DD')+' 00:00:00','YYYY-MM-DD HH:mm:ss')._d.getTime()/1000);\n\n    const lastBlockNumber = await this.functionsUtil.getBlockNumber();\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      if (tokensBalance[token].length){\n        const tokenBalanceConfig = tokensBalance[token][0];\n        const firstTokenTx = tokensBalance[token][0];\n        const firstAATokenTx = tokensBalance[token].find( tx => tx.tranche==='AA' ) || null;\n        const firstBBTokenTx = tokensBalance[token].find( tx => tx.tranche==='BB' ) || null;\n\n        const firstBlockNumber = firstTokenTx.blockNumber;\n\n        const conversionRateField = this.functionsUtil.getTokenConversionRateField(token);\n        const tokenConfig = this.props.availableTranches[tokenBalanceConfig.protocol.toLowerCase()][token];\n\n        const [\n          startTokenConversionRate,\n          lastTokenConversionRate,\n          trancheAAInfos,\n          trancheBBInfos\n        ] = await Promise.all([\n          conversionRateField ? this.functionsUtil.getTokenConversionRateUniswap(tokenConfig,firstBlockNumber) : null,\n          conversionRateField ? this.functionsUtil.getTokenConversionRateUniswap(tokenConfig,lastBlockNumber) : null,\n          firstAATokenTx ? this.functionsUtil.getSubgraphTrancheInfo(tokenConfig.AA.address,firstAATokenTx.timeStamp,currTimestamp,['timeStamp','virtualPrice']) : [],\n          firstBBTokenTx ? this.functionsUtil.getSubgraphTrancheInfo(tokenConfig.BB.address,firstBBTokenTx.timeStamp,currTimestamp,['timeStamp','virtualPrice']) : [],\n        ]);\n\n        // console.log(token,firstBlockNumber,lastBlockNumber,startTokenConversionRate ? startTokenConversionRate.toString() : null,lastTokenConversionRate ? lastTokenConversionRate.toString() : null);\n\n        if (!tokensData[token]){\n          tokensData[token] = [];\n        }\n\n        if (trancheAAInfos){\n          trancheAAInfos.forEach( (trancheInfo,index) => {\n            const tokenDataAA = {\n              tranche:'AA',\n              timeStamp:trancheInfo.timeStamp,\n              tranchePrice:this.functionsUtil.BNify(trancheInfo.virtualPrice)\n            };\n            if (conversionRateField){\n              if (index === trancheAAInfos.length-1){\n                tokenDataAA[conversionRateField] = lastTokenConversionRate;\n              } else {\n                tokenDataAA[conversionRateField] = startTokenConversionRate;\n              }\n            }\n            tokensData[token].push(tokenDataAA);\n          });\n        }\n\n        if (trancheBBInfos){\n          trancheBBInfos.forEach( (trancheInfo,index) => {\n            const tokenDataBB = {\n              tranche:'BB',\n              timeStamp:trancheInfo.timeStamp,\n              tranchePrice:this.functionsUtil.BNify(trancheInfo.virtualPrice)\n            };\n            if (conversionRateField){\n              if (index === trancheBBInfos.length-1){\n                tokenDataBB[conversionRateField] = lastTokenConversionRate;\n              } else {\n                tokenDataBB[conversionRateField] = startTokenConversionRate;\n              }\n            }\n            tokensData[token].push(tokenDataBB);\n          });\n        }\n      }\n    });\n\n    // console.log('tokensData',tokensData);\n    // console.log('transactions',transactions);\n    // console.log('tokensBalance',tokensBalance);\n\n    const tranches = this.functionsUtil.getGlobalConfig(['tranches']);\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds) {\n\n      const foundBalances = {};\n      const tokensBalances = {};\n\n      // Shift timestamp to end of the day\n      if (timeStamp > currTimestamp){\n        timeStamp = currTimestamp;\n      }\n      timeStamp = parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(timeStamp*1000).format('YYYY-MM-DD')+' 23:59:59','YYYY-MM-DD HH:mm:ss')._d.getTime()/1000);\n      \n      // timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach( token => {\n\n        if (!prevBalances[token]){\n          prevBalances[token] = {};\n        }\n        if (!foundBalances[token]){\n          foundBalances[token] = {};\n        }\n        if (!tokensBalances[token]){\n          tokensBalances[token] = this.functionsUtil.BNify(0);\n        }\n        if (!trancheTokenBalance[token]){\n          trancheTokenBalance[token] = {};\n        }\n\n        Object.keys(tranches).forEach( tranche => {\n\n          // Skip tranche if no balance\n          const filteredTrancheBalances = tokensBalance[token].filter(tx => (tx.tranche===tranche));\n          if (!filteredTrancheBalances || !filteredTrancheBalances.length) {\n            return;\n          }\n\n          let lastTokenData = null;\n          const lastTokenDataUnfiltered = tokensData[token] ? Object.values(tokensData[token].filter( tx => tx.tranche===tranche )).pop() : null;\n          let filteredTokenData = tokensData[token] ? tokensData[token].filter(tx => (tx.tranche===tranche && tx.timeStamp>=prevTimestamp && tx.timeStamp<=timeStamp)) : null;\n          if (filteredTokenData && filteredTokenData.length){\n            lastTokenData = filteredTokenData.pop();\n          } else {\n            lastTokenData = lastTokenDataUnfiltered;\n            if (lastTokenData && lastTokenData.timeStamp>timeStamp){\n              lastTokenData = null;\n            }\n          }\n\n          if (!trancheTokenBalance[token][tranche]){\n            trancheTokenBalance[token][tranche] = this.functionsUtil.BNify(0);\n          }\n\n          if (!prevBalances[token][tranche]){\n            prevBalances[token][tranche] = null;\n          }\n\n          if (!foundBalances[token][tranche]){\n            foundBalances[token][tranche] = null;\n          }\n\n          const tokenDecimals = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'decimals']);\n          let filteredBalances = tokensBalance[token].filter(tx => (tx.tranche===tranche && tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n          \n          if (!filteredBalances.length){\n            if (prevBalances && prevBalances[token] && prevBalances[token][tranche]){\n              filteredBalances = prevBalances[token][tranche];\n              const lastFilteredTx = Object.values(filteredBalances).pop();\n              const currentBalance = parseFloat(lastFilteredTx.balance);\n\n              // Take tranchePrice from API and calculate new balance\n              if (currentBalance>0 && timeStamp>firstTxTimestamp && lastTokenData){\n                const trancheTokens = trancheTokenBalance[token][tranche];\n                const tranchePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.tranchePrice,tokenDecimals);\n                let newBalance = trancheTokens.times(tranchePrice);\n\n                // Set new balance and tranchePrice\n                lastFilteredTx.balance = newBalance;\n                lastFilteredTx.tranchePrice = tranchePrice;\n                filteredBalances = [lastFilteredTx];\n\n                // if (token === 'FEI'){\n                //   console.log(this.functionsUtil.strToMoment(timeStamp*1000).format('DD/MM/YYYY HH:mm:ss'),token,tranche,trancheTokens.toFixed(5),tranchePrice.toFixed(5),newBalance.toFixed(5),filteredBalances);\n                // }\n              }\n            } else {\n              filteredBalances = [{\n                balance:this.functionsUtil.BNify(0),\n                tranchePrice:this.functionsUtil.BNify(0)\n              }];\n            }\n          } else {\n            // if (token === 'FEI'){\n            //   console.log(this.functionsUtil.strToMoment(timeStamp*1000).format('DD/MM/YYYY HH:mm:ss'),timeStamp,token,tranche,lastTokenData,(lastTokenData ? this.functionsUtil.strToMoment(lastTokenData.timeStamp*1000).format('DD/MM/YYYY HH:mm:ss') : null),(lastTokenData ? lastTokenData.tranchePrice.toFixed(5) : null ));\n            // }\n            filteredBalances.forEach(tx => {\n              switch (tx.action){\n                case 'Deposit':\n                  trancheTokenBalance[token][tranche] = trancheTokenBalance[token][tranche].plus(tx.trancheTokens);\n                break;\n                default:\n                  trancheTokenBalance[token][tranche] = trancheTokenBalance[token][tranche].minus(tx.trancheTokens);\n                  if (trancheTokenBalance[token][tranche].lt(0)){\n                    trancheTokenBalance[token][tranche] = this.functionsUtil.BNify(0);\n                  }\n                break;\n              }\n            });\n          }\n\n          const lastTx = Object.values(filteredBalances).pop();\n          let lastTxBalance = trancheTokenBalance[token][tranche].times(lastTx.tranchePrice);\n          if (lastTxBalance.gt(0)){\n            // Convert token balance to USD\n            const conversionRateField = this.functionsUtil.getTokenConversionRateField(token);\n            if (!this.props.chartToken && conversionRateField){\n              const tokenUsdConversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : (lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null);\n              if (tokenUsdConversionRate && this.functionsUtil.BNify(tokenUsdConversionRate).gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n              \n            aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n            tokensBalances[token] = tokensBalances[token].plus(lastTxBalance);\n\n            // if (token === 'FEI'){\n            //   console.log(this.functionsUtil.strToMoment(timeStamp*1000).format('DD/MM/YYYY HH:mm:ss'),token,tranche,trancheTokenBalance[token][tranche].toFixed(5),lastTx.tranchePrice.toFixed(5),lastTxBalance.toFixed(5));\n            // }\n          }\n\n          foundBalances[token][tranche] = filteredBalances;\n        });\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || (momentDate.isSameOrAfter(startDate) && momentDate.isSameOrBefore(new Date(),'day'))){\n        \n        // if (momentDate.isAfter(new Date(),'day')){\n        //   momentDate = this.functionsUtil.strToMoment(new Date());\n        // }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n\n        // console.log(timeStamp,formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken.toUpperCase(),'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    // console.log('PortfolioEquityTranches',chartData);\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        format: '%b %d',\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        legendPosition: 'middle',\n        tickValues:'every '+daysFrequency+' days'\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      areaOpacity:this.props.themeMode === 'light' ? 0.1 : 0.5,\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:this.props.theme.colors.legend,\n              fontFamily:this.props.theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            (typeof point.data.balances === 'object' && Object.keys(point.data.balances).length>0) &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquityTranches;","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheField from '../TrancheField/TrancheField';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Heading, Text, Tooltip, Icon } from \"rimble-ui\";\nimport PortfolioEquityTranches from '../PortfolioEquityTranches/PortfolioEquityTranches';\n\nclass FundsOverviewTranche extends Component {\n\n  state = {\n    // govTokensAprs:null,\n    aggregatedValues:[],\n    govTokensTotalApr:null,\n    govTokensUserBalance:null,\n    govTokensDistribution:null,\n    govTokensTotalBalance:null,\n    govTokensTotalAprTooltip:null,\n    idleTokenUserDistribution:null,\n    govTokensDistributionTooltip:null,\n    govTokensTotalBalanceTooltip:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  idleGovToken = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.idleGovToken = this.functionsUtil.getIdleGovToken();\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n\n    /*\n    const govTokenAvailableTokens = {};\n    govTokenAvailableTokens[this.props.selectedToken] = this.props.tokenConfig;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const [\n      // govTokensAprs,\n      idleTokenUserDistribution,\n      govTokensUserBalance,\n      apy,\n      depositTimestamp,\n      days\n    ] = await Promise.all([\n      // this.functionsUtil.getGovTokensAprs(this.props.selectedToken,this.props.tokenConfig),\n      this.idleGovToken.getUserDistribution(this.props.account,govTokenAvailableTokens,true),\n      this.functionsUtil.getGovTokensUserBalances(this.props.account,govTokenAvailableTokens,null),\n      this.functionsUtil.loadTrancheField('apy',this.props.selectedToken,this.props.tokenConfig,this.props.account,false),\n      this.functionsUtil.loadTrancheField('depositTimestamp',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n      this.functionsUtil.loadTrancheField('daysFirstDeposit',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n    ]);\n\n    let avgAPY = await this.functionsUtil.getAvgAPYStats(this.props.tokenConfig.address,isRisk,depositTimestamp);\n\n    if (!avgAPY || this.functionsUtil.BNify(avgAPY).lte(0)){\n      avgAPY = apy;\n    }\n\n    const govTokensTotalBalance = govTokensUserBalance ? Object.values(govTokensUserBalance).reduce( (totBalance,govTokenBalance) => {\n      return totBalance.plus(this.functionsUtil.BNify(govTokenBalance));\n    },this.functionsUtil.BNify(0)) : null;\n\n    const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n      const balance = govTokensUserBalance[govToken];\n      if (balance.gt(0)){\n        return `+${balance.toFixed(2)} ${govToken}`;\n      } else {\n        return null;\n      }\n    }).filter(v => (v !== null)) : null;\n\n    const aggregatedValues = [\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Avg APY',\n          desc:this.functionsUtil.getGlobalConfig(['messages','apyLong']),\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (avgAPY ? avgAPY.toFixed(2)+'%' : '0.00%') }}\n              />\n            </Flex>\n          )\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Current Allocation',\n          children:(\n            <Flex\n              width={1}\n              id={'allocationChart'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n            >\n              <TrancheField\n                {...this.props}\n                showLoader={true}\n                fieldInfo={{\n                  name:'allocationChart'\n                }}\n                parentId={'allocationChart'}\n                token={this.props.selectedToken}\n                tokenConfig={this.props.tokenConfig}\n              />\n            </Flex>\n          ),\n          label:'',\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Days since first deposit',\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (days ? parseInt(days) : '-') }}\n              />\n            </Flex>\n          )\n        }\n      }\n    ];\n\n    this.setState({\n      // govTokensAprs,\n      aggregatedValues,\n      // govTokensTotalApr,\n      govTokensUserBalance,\n      govTokensTotalBalance,\n      // govTokensTotalAprTooltip,\n      idleTokenUserDistribution,\n      govTokensTotalBalanceTooltip\n    });\n    */\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    const stakingRewards = this.props.tokenConfig && this.props.trancheType ? this.props.tokenConfig[this.props.trancheType].CDORewards.stakingRewards : [];\n    const stakingRewardsEnabled = stakingRewards.length ? stakingRewards.filter( t => t.enabled ) : null;\n    const stakingEnabled = stakingRewardsEnabled && stakingRewardsEnabled.length>0;\n    const colWidth = stakingEnabled ? 1/6 : 1/5;\n\n    return (\n      <Flex\n        width={1}\n        flexDirection={'column'}\n      >\n        {\n          this.state.aggregatedValues.length>0 && \n            <Flex\n              width={1}\n              mb={[0,3]}\n              mt={[2,0]}\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.aggregatedValues.map((v,i) => (\n                  <Flex\n                    {...v.flexProps}\n                    flexDirection={'column'}\n                    key={`aggregatedValue_${i}`}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        py:[2,3],\n                        mb:[3,0]\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        {\n                          v.props.children ? v.props.children : (\n                            <Text\n                              lineHeight={1}\n                              fontWeight={[3,4]}\n                              color={'copyColor'}\n                              fontFamily={'counter'}\n                              fontSize={[4,'1.7em']}\n                              dangerouslySetInnerHTML={{ __html: v.props.value }}\n                            >\n                            </Text>\n                          )\n                        }\n                        <Flex\n                          mt={2}\n                          width={1}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <Text\n                            fontWeight={2}\n                            fontSize={[1,2]}\n                            color={'cellText'}\n                          >\n                            {v.props.title}\n                          </Text>\n                          {\n                            v.props.desc && \n                              <Tooltip\n                                placement={'bottom'}\n                                message={v.props.desc}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                          }\n                        </Flex>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                ))\n              }\n            </Flex>\n        }\n        <DashboardCard\n          cardProps={{\n            px:2,\n            py:3\n          }}\n        >\n          {\n            this.props.transactionsList && this.props.transactionsList.length>0 && (\n              <Flex\n                width={1}\n                ml={[0,3]}\n                id={\"funds-overview\"}\n              >\n                <PortfolioEquityTranches\n                  {...this.props}\n                  chartHeight={350}\n                  parentId={'funds-overview'}\n                  chartToken={this.props.selectedToken}\n                  enabledTokens={[this.props.selectedToken]}\n                  frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                />\n              </Flex>\n            )\n          }\n          <Flex\n            width={1}\n            flexDirection={['column','row']}\n          >\n            <Flex\n              mb={[2,0]}\n              width={[1,colWidth]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Deposited\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'trancheDeposited',\n                  props:{\n                    decimals:7,\n                    fontWeight:300,\n                    maxPrecision:8,\n                    fontSize:['1.8em','1.9em'],\n                    color:this.props.theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            {\n              stakingEnabled && (\n                <Flex\n                  mb={[2,0]}\n                  width={[1,colWidth]}\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                  justifyContent={'flex-start'}\n                >\n                  <Title\n                    mb={2}\n                    fontSize={[3,4]}\n                    component={Heading.h3}\n                  >\n                    Staked Amount\n                  </Title>\n                  <TrancheField\n                    {...this.props}\n                    addTokenName={false}\n                    fieldInfo={{\n                      name:'trancheStaked',\n                      props:{\n                        decimals:7,\n                        fontWeight:300,\n                        maxPrecision:8,\n                        fontSize:['1.8em','1.9em'],\n                        color:this.props.theme.colors.counter,\n                        flexProps:{\n                          justifyContent:'center'\n                        }\n                      }\n                    }}\n                  />\n                </Flex>\n              )\n            }\n            <Flex\n              mb={[2,0]}\n              width={[1,colWidth]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Redeemable\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'trancheRedeemableWithStaked',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      color:this.props.theme.colors.counter,\n                      fontSize: this.props.isMobile ? '1.8em' : '1.9em',\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              <Flex\n                width={1}\n                mt={'-8px'}\n                justifyContent={'center'}\n              >\n                <TrancheField\n                  {...this.props}\n                  addTokenName={false}\n                  fieldInfo={{\n                    name:'earningsPerc',\n                    props:{\n                      fontSize:1,\n                      fontWeight:2,\n                      color:'cellText',\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    }\n                  }}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,colWidth]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Earnings\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'earningsCounter',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                      color:this.props.theme.colors.counter\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              {\n                this.state.govTokensTotalBalanceTooltip && this.state.govTokensTotalBalanceTooltip.length>0 && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      this.state.govTokensTotalBalanceTooltip.map((govTokenBalance,govTokenIndex) => (\n                        <Text\n                          fontSize={1}\n                          lineHeight={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                          mt={govTokenIndex ? 1 : 0}\n                          key={`govToken_${govTokenIndex}`}\n                        >\n                          {govTokenBalance}\n                        </Text>\n                      ))\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,colWidth]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Fees\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'feesCounter',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                      color:this.props.theme.colors.counter\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,colWidth]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Realized APY\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'realizedApy',\n                  props:{\n                    decimals:2,\n                    fontWeight:300,\n                    fontSize:['1.8em','1.9em'],\n                    color:this.props.theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              {\n                this.state.idleTokenUserDistribution && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      mt={1}\n                      fontSize={1}\n                      lineHeight={1}\n                      fontWeight={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      {this.state.idleTokenUserDistribution.toFixed(4)} {this.idleGovToken.tokenName}/{this.idleGovToken.tokenConfig.distributionFrequency}\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n          </Flex>\n        </DashboardCard>\n      </Flex>\n    );\n  }\n}\n\nexport default FundsOverviewTranche;","import Title from '../Title/Title';\nimport { Button, Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport CustomList from '../CustomList/CustomList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass StakingRewardsTranche extends Component {\n\n  state = {\n    stakingRewards:null,\n    stakingRewardsRows:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadUserRewards();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const portfolioChanged = JSON.stringify(prevProps.portfolio) !== JSON.stringify(this.props.portfolio);\n    const trancheConfigChanged = JSON.stringify(prevProps.trancheConfig) !== JSON.stringify(this.props.trancheConfig);\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (accountChanged || trancheConfigChanged || portfolioChanged || transactionsChanged){\n      this.loadUserRewards();\n    }\n  }\n\n  async loadUserRewards(){\n    if (!this.props.account || !this.props.trancheConfig || !this.props.portfolio){\n      return false;\n    }\n\n    const [\n      stakingRewards,\n      trancheBalance,\n      rewardTokensInfo,\n      trancheStakedAmount\n    ] = await Promise.all([\n      this.functionsUtil.getTrancheStakingRewards(this.props.account,this.props.trancheConfig,this.props.trancheConfig.functions.rewards),\n      this.functionsUtil.getTokenBalance(this.props.trancheConfig.name,this.props.account,false),\n      this.functionsUtil.getTrancheRewardTokensInfo(this.props.tokenConfig,this.props.trancheConfig),\n      this.functionsUtil.getTrancheStakedBalance(this.props.trancheConfig.CDORewards.name,this.props.account,this.props.trancheConfig.CDORewards.decimals,this.props.trancheConfig.functions.stakedBalance)\n    ]);\n\n    const trancheBalanceInfo = this.props.portfolio.tranchesBalance.find( p => p.token === this.props.token && p.protocol === this.props.protocol && p.tranche === this.props.tranche );\n    \n    const stakingRewardsRows = [];\n    await this.functionsUtil.asyncForEach(Object.keys(stakingRewards), async (rewardToken) => {\n      const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',rewardToken.toUpperCase()]);\n      const rewardTokenInfo = rewardTokensInfo[rewardToken];\n      const tokenBalance = await this.functionsUtil.getTokenBalance(rewardToken,this.props.account);\n      const tokenAmount = !this.functionsUtil.BNify(stakingRewards[rewardToken]).isNaN() ? this.functionsUtil.BNify(stakingRewards[rewardToken]) : this.functionsUtil.BNify(0);\n\n      let distributionSpeed = rewardTokenInfo ? rewardTokenInfo.distributionSpeed : null;\n      if (trancheBalanceInfo && distributionSpeed){\n        distributionSpeed = distributionSpeed.times(trancheBalanceInfo.poolShare);\n      }\n      stakingRewardsRows.push({\n        token:rewardToken,\n        staked:trancheStakedAmount,\n        balance:tokenBalance.toFixed(8),\n        reedemable:tokenAmount.toFixed(8),\n        trancheBalance:this.functionsUtil.integerValue(trancheBalance),\n        tokenIcon:tokenConfig.icon || `images/tokens/${rewardToken}.svg`,\n        distributionSpeed:distributionSpeed ? distributionSpeed.toFixed(8)+rewardTokenInfo.distributionSpeedUnit : this.functionsUtil.BNify(0).toFixed(8)\n      });\n    });\n\n    this.setState({\n      stakingRewardsRows\n    });\n  }\n\n  claimCallback(tx){\n    this.loadUserRewards();\n  }\n\n  stakeCallback(tx){\n    this.loadUserRewards();\n  }\n\n  render() {\n    return (\n      this.state.stakingRewardsRows ?\n        <Flex\n          mb={[0,4]}\n          width={1}\n          flexDirection={'column'}\n          id={'funds-overview-container'}\n        >\n          <Title my={[3,4]}>Staking Rewards</Title>\n          <CustomList\n            rows={this.state.stakingRewardsRows}\n            cols={[\n              {\n                title:'TOKEN',\n                props:{\n                  width:[0.18,0.16]\n                },\n                fields:[\n                  {\n                    type:'image',\n                    props:{\n                      mr:2,\n                      size:this.props.isMobile ? '1.2em' : '1.8em'\n                    },\n                    path:['tokenIcon']\n                  },\n                  {\n                    type:'text',\n                    path:['token'],\n                  }\n                ]\n              },\n              {\n                mobile:false,\n                title:'BALANCE',\n                props:{\n                  width:[0.27,0.24],\n                  justifyContent:['center','flex-start']\n                },\n                fields:[\n                  {\n                    type:'text',\n                    path:['balance'],\n                    props:{\n                      decimals: this.props.isMobile ? 4 : 8\n                    }\n                  },\n                ]\n              },\n              {\n                title:'REDEEMABLE',\n                desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                props:{\n                  width:[0.29,0.24],\n                  justifyContent:['center','flex-start']\n                },\n                fields:[\n                  {\n                    type:'text',\n                    path:['reedemable'],\n                    props:{\n                      decimals: this.props.isMobile ? 4 : 8\n                    }\n                  },\n                ]\n              },\n              {\n                title:'DISTRIBUTION',\n                desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                props:{\n                  width:[0.29,0.24],\n                },\n                fields:[\n                  {\n                    type:'text',\n                    path:['distributionSpeed'],\n                    props:{\n                      decimals: this.props.isMobile ? 4 : 8\n                    }\n                  }\n                ]\n              },\n              {\n                title:'',\n                props:{\n                  width:[0.26,0.16],\n                },\n                parentProps:{\n                  width:1\n                },\n                fields:[\n                  {\n                    funcProps:{\n                      componentProps:{\n                        disabled:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? true : false ),\n                      },\n                      // value:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? 'stake' : 'claim') : 'claim'),\n                      // action:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? 'Stake' : 'Claim') : 'Claim'),\n                      // methodName:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? 'stake' : 'claim') : 'claim'),\n                      // transactionParams:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? [this.functionsUtil.BNify(props.row.trancheBalance).toFixed()] : []) : []),\n                      // callback:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? this.stakeCallback.bind(this) : this.claimCallback.bind(this)) : this.claimCallback.bind(this))\n                    },\n                    fieldComponent:ExecuteTransaction,\n                    props:{\n                      params:[],\n                      parentProps:{\n                        width:1\n                      },\n                      Component:Button,\n                      componentProps:{\n                        style:{\n                          width:'100%'\n                        },\n                        value:'Claim',\n                        borderRadius:4,\n                        mainColor:'redeem',\n                        size:this.props.isMobile ? 'small' : 'medium'\n                      },\n                      value:'Claim',\n                      action:'claim',\n                      callback:this.claimCallback.bind(this),\n                      methodName:this.props.trancheConfig.functions.claim,\n                      contractName:this.props.trancheConfig.CDORewards.name\n                    }\n                  }\n                ]\n              }\n            ]}\n            {...this.props}\n          />\n        </Flex>\n      : this.props.children || null\n    );\n  }\n}\n\nexport default StakingRewardsTranche;\n","import Title from '../Title/Title';\nimport { Box, Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport GenericFaqs from '../GenericFaqs/GenericFaqs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheDetails from '../TrancheDetails/TrancheDetails';\n// import TrancheWelcome from '../TrancheWelcome/TrancheWelcome';\nimport TrancheHarvests from '../TrancheHarvests/TrancheHarvests';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport TrancheDepositRedeem from '../TrancheDepositRedeem/TrancheDepositRedeem';\nimport FundsOverviewTranche from '../FundsOverviewTranche/FundsOverviewTranche';\nimport StakingRewardsTranche from '../StakingRewardsTranche/StakingRewardsTranche';\n\nclass TranchePage extends Component {\n\n  state = {\n    transactions:[],\n    userHasFunds:false,\n    stakingEnabled:false,\n    componentLoaded:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const trancheTypeChanged = prevProps.trancheType !== this.props.trancheType;\n    const portfolioChanged = (this.props.portfolio && !prevProps.portfolio) || JSON.stringify(this.props.portfolio) !== JSON.stringify(prevProps.portfolio);\n    if (portfolioChanged || tokenConfigChanged || trancheTypeChanged){\n      this.loadData();\n    }\n  }\n\n  loadData(){\n    const componentLoaded = true;\n    const transactions = this.props.portfolio ? this.props.portfolio.transactions.filter( t => t.protocol.toLowerCase() === this.props.selectedProtocol.toLowerCase() && t.token.toLowerCase() === this.props.selectedToken.toLowerCase() && (!this.props.trancheType || t.tranche === this.props.trancheType) ) : [];\n    const userHasFunds = this.props.portfolio && this.props.portfolio.tranchesBalance.find( balanceInfo => balanceInfo.protocol.toLowerCase() === this.props.selectedProtocol.toLowerCase() && balanceInfo.token.toLowerCase() === this.props.selectedToken.toLowerCase() && (!this.props.trancheType || balanceInfo.tranche.toLowerCase() === this.props.trancheType.toLowerCase()) ) ? true : false;\n\n    const stakingRewards = this.props.tokenConfig && this.props.trancheType ? this.props.tokenConfig[this.props.trancheType].CDORewards.stakingRewards : [];\n    const stakingRewardsEnabled = stakingRewards.length ? stakingRewards.filter( t => t.enabled ) : null;\n    const stakingEnabled = stakingRewardsEnabled && stakingRewardsEnabled.length>0;\n\n    // console.log('loadData',this.props.tokenConfig,this.props.trancheType,this.props.tokenConfig[this.props.trancheType].CDORewards,stakingRewards,stakingRewardsEnabled,stakingEnabled);\n\n    this.setState({\n      transactions,\n      userHasFunds,\n      stakingEnabled,\n      componentLoaded\n    });\n  }\n\n  render() {\n    const tranchesDetails = this.functionsUtil.getGlobalConfig(['tranches']);\n    const filteredTranchesTypes = Object.keys(tranchesDetails).filter( trancheType => !this.props.trancheType || this.props.trancheType === trancheType );\n    return (\n      <Box\n        mb={4}\n        width={1}\n      >\n        <Title\n          mb={3}\n        >\n          {this.functionsUtil.capitalize(this.props.selectedProtocol)} - {this.props.selectedToken} - {this.props.trancheDetails ? this.props.trancheDetails.name : 'Tranches'} \n        </Title>\n        {\n          /*\n          !this.props.trancheType ? (\n            <TrancheWelcome\n              {...this.props}\n              tokenConfig={this.props.tokenConfig}\n              selectTrancheType={this.props.selectTrancheType}\n            />\n          ) : (\n          */\n            <Flex\n              mt={2}\n              width={1}\n              flexDirection={['column','row']}\n              justifyContent={this.props.trancheType ? 'center' : 'space-between'}\n            >\n              {\n                filteredTranchesTypes.map( trancheType => (\n                  <Flex\n                    mb={[3,0]}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    key={`tranche_${trancheType}`}\n                    width={[1,(1/filteredTranchesTypes.length)-0.02]}\n                  >\n                    {\n                      this.props.trancheType ? (\n                        <TrancheDepositRedeem\n                          {...this.props}\n                          selectedTranche={trancheType}\n                          cdoConfig={this.props.tokenConfig.CDO}\n                          showSelectButton={!this.props.trancheType}\n                          selectTrancheType={this.props.selectTrancheType}\n                          trancheConfig={this.props.tokenConfig[trancheType]}\n                        />\n                      ) : (\n                        <TrancheDetails\n                          {...this.props}\n                          selectedTranche={trancheType}\n                          cdoConfig={this.props.tokenConfig.CDO}\n                          showSelectButton={!this.props.trancheType}\n                          selectTrancheType={this.props.selectTrancheType}\n                          trancheConfig={this.props.tokenConfig[trancheType]}\n                        />\n                      )\n                    }\n                  </Flex>\n                ))\n              }\n            </Flex>\n            /*\n          )\n        */\n        }\n        {\n          this.state.componentLoaded && this.props.account && this.state.userHasFunds && this.props.trancheType &&\n            <Flex\n              width={1}\n              mb={[0,4]}\n              flexDirection={'column'}\n              id={'funds-overview-container'}\n            >\n              <Title my={[3,4]}>Funds Overview</Title>\n              <FundsOverviewTranche\n                {...this.props}\n                token={this.props.selectedToken}\n                tranche={this.props.trancheType}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                transactionsList={this.state.transactions}\n                trancheConfig={this.props.tokenConfig[this.props.trancheType]}\n              />\n            </Flex>\n        }\n        {\n          this.state.componentLoaded && this.state.stakingEnabled && this.props.account && this.state.userHasFunds && this.props.trancheType &&\n            <StakingRewardsTranche\n              {...this.props}\n              token={this.props.selectedToken}\n              tranche={this.props.trancheType}\n              tokenConfig={this.props.tokenConfig}\n              protocol={this.props.selectedProtocol}\n              transactionsList={this.state.transactions}\n              trancheConfig={this.props.tokenConfig[this.props.trancheType]}\n            />\n        }\n        {\n          this.state.componentLoaded && this.props.account && this.props.trancheType && (\n            <TrancheHarvests\n              {...this.props}\n              token={this.props.selectedToken}\n              tranche={this.props.trancheType}\n              tokenConfig={this.props.tokenConfig}\n              protocol={this.props.selectedProtocol}\n              trancheConfig={this.props.tokenConfig[this.props.trancheType]}\n            />\n          )\n        }\n        {\n          this.props.account && this.state.transactions && this.state.transactions.length>0 && \n            <Flex\n              width={1}\n              mb={[3,4]}\n              id={'transactions'}\n              flexDirection={'column'}\n            >\n              <Title my={[3,4]}>Transactions</Title>\n              <TransactionsList\n                {...this.props}\n                enabledTokens={[this.props.selectedToken]}\n                transactionsList={this.state.transactions}\n                availableActions={this.state.transactions.reduce( (availableActions,t) => {\n                  availableActions[t.action.toLowerCase()] = t.action;\n                  return availableActions;\n                },{})}\n                cols={[\n                  {\n                    title: this.props.isMobile ? '' : 'HASH',\n                    props:{\n                      width:[0.13,0.18]\n                    },\n                    fields:[\n                      {\n                        name:'icon',\n                        props:{\n                          mr:[0,2]\n                        }\n                      },\n                      {\n                        name:'hash',\n                        mobile:false\n                      }\n                    ]\n                  },\n                  {\n                    title:'ACTION',\n                    mobile:false,\n                    props:{\n                      width:0.12,\n                    },\n                    fields:[\n                      {\n                        name:'action'\n                      }\n                    ]\n                  },\n                  {\n                    title:'DATE',\n                    props:{\n                      width:[0.27,0.15],\n                    },\n                    fields:[\n                      {\n                        name:'date'\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'STATUS',\n                    props:{\n                      width:[0.18,0.16],\n                      justifyContent:['center','flex-start']\n                    },\n                    fields:[\n                      {\n                        name:'statusIcon',\n                        props:{\n                          mr:[0,2]\n                        }\n                      },\n                      {\n                        mobile:false,\n                        name:'status'\n                      }\n                    ]\n                  },\n                  {\n                    title:'AMOUNT',\n                    props:{\n                      width:[0.23,0.11],\n                    },\n                    fields:[\n                      {\n                        name:'amount'\n                      },\n                    ]\n                  },\n                  {\n                    title:'PROTOCOL',\n                    props:{\n                      width:[0.21, 0.14],\n                    },\n                    fields:[\n                      {\n                        type:'image',\n                        name:'custom',\n                        path:['protocolIcon'],\n                        props:{\n                          mr:2,\n                          height:['1.4em','2em']\n                        }\n                      },\n                      {\n                        type:'text',\n                        mobile:false,\n                        name:'custom',\n                        path:['protocol']\n                      }\n                    ]\n                  },\n                  {\n                    title:'ASSET',\n                    props:{\n                      width:[0.16,0.14],\n                      justifyContent:['center','flex-start']\n                    },\n                    fields:[\n                      {\n                        name:'tokenIcon',\n                        props:{\n                          mr:[0,2],\n                          height:['1.4em','2em']\n                        }\n                      },\n                      {\n                        mobile:false,\n                        name:'tokenName'\n                      },\n                    ]\n                  },\n                ]}\n              />\n            </Flex>\n        }\n        {\n          this.props.trancheType && (\n            <Flex\n              width={1}\n              id={'faqs'}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Title\n                my={3}\n              >\n                Frequently asked questions\n              </Title>\n              <Flex\n                width={[1,0.5]}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <GenericFaqs\n                  showSections={false}\n                  questions={{\n                    '':[\n                      {\n                        q: 'Is there a locking period?',\n                        a: `There are no locking period or epochs and users are free to enter and exit at any time. The interest earned (and governance tokens, after being partially sold in the market) will be split between the two classes according to a predefined ratio called trancheAPRSplitRatio (eg 20% interest to Senior tranche holders and 80% to Junior tranche). Hence, the rate is variable for both classes of tranches.`\n                      },\n                      {\n                        q: 'How the APY is determined?',\n                        a: `The base APY, before being splitted between tranches, is provided by the underlying strategy that takes into account the reinvestment of the accrued governance tokens (except for eventual IDLE rewards). The actual APY of each tranche class is determined by the ratio between the current underlying TVL of Senior and Junior tranches (ie APY = share of yield allocated to senior tranches / Senior TVL). The APY has to be considered net of fees. For more info <a href=\"https://github.com/Idle-Labs/idle-tranches#idle-dynamic-tranches\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.link}\">view the readme</a>`\n                      },\n                      {\n                        q: 'What happens in case of hack?',\n                        a: `In case of hack, an emergency shutdown can be triggered (by both the guardian, which would be a multi-sig wallet, and the owner which will be the Idle governance) in order to pause both deposits and redeems.<br />The redistribution of remaining funds can happens selectively, by allowing only Senior tranche holders to withdraw first directly in the main contract, or through a separate contract for more complex cases and resolutions (managed by the Idle governance).`\n                      },\n                      {\n                        q: 'How are fees collected?',\n                        a: `Fees collected at each harvest event. When the strategy auto-reinvest accrued tokens, Idle protocol charges a 10% performance fee. Renevues get routed to FeeCollector address.`\n                      },\n                      {\n                        q: 'What are staking rewards?',\n                        a: `To keep a good ratio between Senior and Junior tranches and an healthy APY part of farmed governance tokens (eg IDLE) are redistributed to users who stakes their tranche tokens in specific tranche rewards contracts.`\n                      } \n                    ]\n                  }}\n                />\n              </Flex>\n            </Flex>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default TranchePage;","import React, { Component } from \"react\";\nimport RoundButton from \"../RoundButton/RoundButton\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport TrancheField from \"../TrancheField/TrancheField\";\nimport { Box, Flex, Icon, Text, Image } from \"rimble-ui\";\n\n//import DashboardCard from \"../DashboardCard/DashboardCard\";\n\nclass Base extends Component {\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const trancheDetails = this.props.trancheDetails;\n    const strategyInfo = this.functionsUtil.getGlobalConfig([\n      \"strategies\",\n      \"tranches\"\n    ]);\n\n    const tokenConfig =\n      this.props.tokenConfig ||\n      this.props.availableTranches[strategyInfo.protocol][strategyInfo.token];\n\n    return (\n      <Box\n        my={[3, 0]}\n        boxShadow={1}\n        borderRadius={2}\n        width={[1, 0.49]}\n      >\n        <Flex\n          p={0}\n          mx={0}\n          border={\"0\"}\n          height={\"100%\"}\n          borderRadius={2}\n          overflow={\"hidden\"}\n          flexDirection={\"column\"}\n          backgroundColor={\"cardBg\"}\n          borderColor={\"transparent\"}\n          justifyContent={[\"center\",trancheDetails.type === \"AA\" ? \"left\" : \"right\"]}\n        >\n          <Box\n            width={1}\n            borderBottom={`1px solid ${this.props.theme.colors.divider2}`}\n          >\n            <Flex\n              pb={2}\n              mx={2}\n              my={3}\n              flexDirection={\"column\"}\n            >\n              <Flex mt={3} alignItems={\"center\"}>\n                <Image\n                  ml={3}\n                  mr={1}\n                  alt={trancheDetails.name}\n                  src={trancheDetails.image}\n                  size={this.props.isMobile ? \"2em\" : \"2.4em\"}\n                />\n                <Flex mx={1}>\n                  <Text\n                    ml={[2, 0]}\n                    fontWeight={4}\n                    fontSize={[4, 5]}\n                    lineHeight={1}\n                  >\n                    {trancheDetails.name}\n                  </Text>\n                </Flex>\n              </Flex>\n              <Box\n                ml={5}\n                mr={3}\n                mt={3}\n                alignItems={\"flex-start\"}\n                flexDirection={\"column\"}\n              >\n                <Flex\n                  mr={1}\n                  flexDirection={\"row\"}\n                  alignItems={\"baseline\"}\n                >\n                  <TrancheField\n                    fieldInfo={{\n                      showTooltip: false,\n                      name: `${trancheDetails.baseName}Apy`,\n                      props: {\n                        decimals: 2,\n                        fontWeight: 4,\n                        lineHeight: \"1\",\n                        fontSize: [3, 4],\n                        textAlign: \"center\",\n                        flexProps: {\n                          justifyItems: \"flex-end\"\n                        },\n                        color: this.props.trancheDetails.color.hex\n                      }\n                    }}\n                    {...this.props}\n                    tokenConfig={tokenConfig}\n                    token={strategyInfo.token}\n                    tranche={strategyInfo.tranche}\n                    protocol={strategyInfo.protocol}\n                  />\n                  <Text\n                    my={1}\n                    ml={[2, 3]}\n                    fontSize={1}\n                    lineHeight={\"1\"}\n                    textAlign={\"left\"}\n                    color={\"cellText\"}\n                  >\n                    Current APY (variable)\n                  </Text>\n                </Flex>\n                <Text\n                  mt={3}\n                  fontWeight={2}\n                  fontSize={[1, 2]}\n                  textAlign={\"left\"}\n                  lineHeight={\"1.5\"}\n                  color={\"copyColor\"}\n                >\n                  {trancheDetails.description.long}\n                </Text>\n              </Box>\n            </Flex>\n          </Box>\n          <Flex\n            height={\"100%\"}\n            bg={\"cardBgContrast\"}\n            flexDirection={'column'}\n            justifyContent={'space-between'}\n          >\n            <Box\n              mt={3}\n              my={3}\n              pl={2}\n              width={1}\n            >\n              {trancheDetails.features.map((feature, index) => (\n                <Flex\n                  mb={2}\n                  my={1}\n                  px={2}\n                  mt={[2, 1]}\n                  alignItems={\"center\"}\n                  flexDirection={\"row\"}\n                  key={`feature_${index}`}\n                >\n                  <Icon\n                    mr={2}\n                    ml={3}\n                    name={\"Done\"}\n                    color={\"tick\"}\n                    size={this.props.isMobile ? \"1.6em\" : \"1.8em\"}\n                  />\n                  <Text ml={[2, 1]} fontSize={[1, 2]} fontWeight={\"500\"}>\n                    {feature}\n                  </Text>\n                </Flex>\n              ))}\n            </Box>\n            <Flex\n              width={1}\n              height={\"auto\"}\n              alignItems={\"flex-end\"}\n              justifyContent={\"center\"}\n            >\n              <RoundButton\n                buttonProps={{\n                  my: 3,\n                  width: 0.85,\n                  fontSize: 2,\n                  contrastColor: \"white\",\n                  mainColor: trancheDetails.color.hex\n                }}\n                handleClick={e =>\n                  this.props.selectTrancheType(trancheDetails.route)\n                }\n              >\n                {this.props.tokenConfig\n                  ? `Go to ${trancheDetails.name}`\n                  : `Enter the ${trancheDetails.name}`}\n              </RoundButton>\n            </Flex>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default Base;\n","import React, { Component } from \"react\";\nimport { Link, Flex, Text, Image } from \"rimble-ui\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\n\n//import DashboardCard from \"../DashboardCard/DashboardCard\";\n\nclass TrancheFlash extends Component {\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const flashData = this.functionsUtil.getGlobalConfig([\"tranchflash\"]);\n    return (\n      <Flex\n        width={1}\n        mx={4}\n        flexDirection={[\"column\", \"row\"]}\n        justifyContent={\"center\"}\n      >\n        <Flex mx={2} my={[2, 4]} width={[1, 0.4]} flexDirection={\"column\"}>\n          <Flex justifyContent={\"left\"} my={3} width={[1, 0.7]}>\n            <Text\n              bold={\"true\"}\n              fontWeight={4}\n              lineHeight={1}\n              color={\"white\"}\n              fontSize={[5, 6]}\n              textAlign={\"left\"}\n            >\n              {flashData.subtitle}\n            </Text>\n          </Flex>\n          <Flex\n            mt={2}\n            width={1}\n            mb={[2, 3]}\n            justifyContent={\"left\"}\n          >\n            <Text\n              color={\"white\"}\n              textAlign={\"left\"}\n              fontWeight={2}\n              fontSize={2}\n            >\n              {flashData.desc}\n            </Text>\n          </Flex>\n          <Flex\n            mt={2}\n            mb={2}\n            width={1}\n            flexDirection={\"column\"}\n          >\n            {\n              flashData.questions.map( (question,index) => (\n                <Flex\n                  my={2}\n                  key={`question_${index}`}\n                  alignItems={\"flex-start\"}\n                >\n                  <Link\n                    fontSize={2}\n                    fontWeight={2}\n                    opacity={\"50%\"}\n                    color={\"white\"}\n                    textAlign={\"left\"}\n                    onClick={e =>\n                      this.props.openTooltipModal(question.desc, question.msg)\n                    }\n                  >\n                    <Flex\n                      flexDirection={'row'}\n                      alignItems={\"flex-start\"}\n                    >\n                      <Image\n                        mr={2}\n                        src={flashData.helpcircle}\n                      />\n                      {question.desc}\n                    </Flex>\n                  </Link>\n                </Flex>\n              ))\n            }\n          </Flex>\n        </Flex>\n        <Flex\n          mt={6}\n          width={0.2}\n          hidden={this.props.isMobile ? 1 : 0}\n          alignItems={\"flex-start\"}\n        >\n          <Image hidden={this.props.isMobile ? 1 : 0} src={flashData.arrows} />\n        </Flex>\n        <Flex ml={2} my={[3, 5]} width={[1, 0.4]} flexDirection={\"column\"}>\n          <Flex my={[1, 0]} flexDirection={\"row\"} alignItems={\"flex-start\"}>\n            <Image\n              my={[0, 2]}\n              width={[\"2.4em\", \"4.7em\"]}\n              src={this.functionsUtil.getGlobalConfig([\n                \"tranches\",\n                \"AA\",\n                \"bubble\"\n              ])}\n            />\n            <Text\n              mt={[0, 2]}\n              mx={2}\n              mb={[2, 1]}\n              color={\"white\"}\n              textAlign={\"left\"}\n              fontWeight={2}\n              fontSize={2}\n              dangerouslySetInnerHTML={{\n                __html: flashData.seniorinfo\n              }}\n            ></Text>\n          </Flex>\n          <Flex my={[1, 0]} flexDirection={\"row\"} alignItems={\"flex-start\"}>\n            <Image\n              my={[0, 2]}\n              ml={[0, 4]}\n              width={[\"2.4em\", \"4.7em\"]}\n              src={this.functionsUtil.getGlobalConfig([\n                \"tranches\",\n                \"BB\",\n                \"bubble\"\n              ])}\n            />\n            <Text\n              mt={[0, 2]}\n              mx={2}\n              mb={[2, 1]}\n              color={\"white\"}\n              textAlign={\"left\"}\n              fontWeight={2}\n              fontSize={2}\n              dangerouslySetInnerHTML={{\n                __html: flashData.juniorinfo\n              }}\n            ></Text>\n          </Flex>\n        </Flex>\n        {/*<Flex width={0.3}>\n          <Text>ABC</Text>\n        </Flex>*/}\n      </Flex>\n    );\n  }\n}\nexport default TrancheFlash;\n","import Title from \"../Title/Title\";\nimport { Flex, Text } from \"rimble-ui\";\nimport ExtLink from \"../ExtLink/ExtLink\";\nimport React, { Component } from \"react\";\nimport styles from \"./TrancheWelcome.module.scss\";\nimport TrancheBox from \"../TrancheBox/TrancheBox\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport TrancheFlash from \"../TrancheFlash/TrancheFlash\";\nimport AssetsUnderManagement from \"../AssetsUnderManagement/AssetsUnderManagement\";\n\nclass TrancheWelcome extends Component {\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const tranchesDetails = this.functionsUtil.getGlobalConfig([\"tranches\"]);\n    return (\n      <Flex\n        width={1}\n        alignItems={\"center\"}\n        flexDirection={'column'}\n        justifyContent={\"center\"}\n      >\n        <AssetsUnderManagement\n          {...this.props}\n          flexProps={{\n            mb:[3,0]\n          }}\n          loaderAlign={'flex-end'}\n          subtitle={'Total Value Locked on Tranches'}\n          aggregatedStatsMethod={this.functionsUtil.getTrancheAggregatedStats}\n        />\n        <Flex\n          mb={3}\n          width={1}\n          maxWidth={8}\n          alignItems={\"center\"}\n          flexDirection={\"column\"}\n          justifyContent={\"center\"}\n        >\n          {!this.props.tokenConfig ? (\n            <>\n              <Title\n                fontSize={[5,6]}\n              >\n                Perpetual Yield Tranches\n              </Title>\n              <Flex\n                mt={[2,3]}\n                border={1}\n                borderRadius={2}\n                borderColor={\"transparent\"}\n                backgroundColor={\"newblue\"}\n                className={[styles.trancheFlash,this.props.isMobile ? styles.mobile : null]}\n              >\n                <TrancheFlash {...this.props}></TrancheFlash>\n              </Flex>\n            </>\n          ) : (\n            <Title\n              mb={3}\n              fontWeight={2}\n              fontSize={[3, 4]}\n              color={\"copyColor\"}\n              textAlign={\"center\"}\n            >\n              Select your preferred Tranche\n            </Title>\n          )}\n          <Flex my={3} mx={0} justifyContent={\"center\"}>\n            <Flex\n              width={1}\n              flexDirection={[\"column\", \"row\"]}\n              justifyContent={\"space-between\"}\n            >\n              {Object.keys(tranchesDetails).map((trancheType, index) => (\n                <TrancheBox\n                  {...this.props}\n                  key={`tranche_${index}`}\n                  tokenConfig={this.props.tokenConfig}\n                  trancheDetails={tranchesDetails[trancheType]}\n                />\n              ))}\n            </Flex>\n          </Flex>\n          <Flex\n            mt={3}\n            width={1}\n            px={[0,5]}\n            justifyContent={\"center\"}\n          >\n            <Text\n              fontSize={[0,1]}\n              color={'statValue'}\n              textAlign={\"center\"}\n            >\n              If you're still unsure in which Tranche to pick, reach out to us on our <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['forumURL'])}>Forum</ExtLink>, <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['discordURL'])}>Discord</ExtLink>, <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['telegramURL'])}>Telegram</ExtLink> or <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['twitterURL'])}>Twitter</ExtLink>.<br />The team and the community would be happy to help!\n            </Text>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TrancheWelcome;\n","import { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass GenericPieChart extends Component {\n  state = {\n    chartProps:null,\n    selectedSlice:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    if (mobileChanged){\n      this.setStateSafe({\n        chartProps:null,\n        selectedSlice:null,\n      },() => {\n        this.loadData();\n      });\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      tooltipFormat: this.props.tooltipFormat ? this.props.tooltipFormat : (v => v),\n      sliceLabel: this.props.sliceLabel,// ? this.props.sliceLabel : (d => d.value),\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {\n            background: this.props.theme.colors.cardBg\n          } : {\n            display: 'none',\n          }\n        },\n        labels:{\n          text:{\n            fontWeight:600,\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      margin: this.props.margin || {top:0,right:0,bottom:0,left:0},\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n    };\n\n    if (this.props.showLegend){\n      chartProps.legends = [\n        Object.assign({\n          itemWidth: 60,\n          itemHeight: 18,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          symbolShape: 'circle',\n          translateY: this.props.isMobile ? 25 : 50,\n          itemTextColor: this.props.theme.colors.legend,\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        },this.props.legendProps)\n      ];\n    }\n\n    this.setStateSafe({\n      chartProps\n    });\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        {\n          this.state.chartProps && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                this.state.selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={this.state.selectedSlice.image}\n                    />\n                    <SmartNumber\n                      decimals={3}\n                      fontWeight={4}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      number={this.state.selectedSlice.valueHover || this.state.selectedSlice.value}\n                      {...this.state.selectedSlice.valueHoverProps}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={this.props.defaultImage}\n                    />\n                    <Text\n                      fontSize={[3,4]}\n                      fontWeight={[3,4]}\n                    >\n                      {this.props.defaultValue}\n                    </Text>\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.props.defaultLabel}\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.props.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default GenericPieChart;","import CountUp from 'react-countup';\nimport { Box, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalBalanceCounter extends Component {\n\n  state = {\n    counterEnd:null,\n    counterStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        counterEnd:null,\n        counterStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    // const counterStart = portfolio.totalAmountLent.plus(portfolio.totalEarnings);\n    const counterStart = portfolio.totalBalance;\n    const counterEnd = counterStart.plus(counterStart.times(portfolio.avgAPY.div(100)));\n\n    this.setState({\n      counterEnd,\n      counterStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const decimals = this.props.decimals || 8;\n\n    return this.state.counterStart && this.state.counterEnd ? (\n      <Box\n        width={1}\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.counterEnd)}\n          start={parseFloat(this.state.counterStart)}\n          formattingFn={ n => '$ '+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Box>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalBalanceCounter;\n","import CountUp from 'react-countup';\nimport { Flex, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalEarningsCounter extends Component {\n\n  state = {\n    earningsEnd:null,\n    earningsStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        earningsEnd:null,\n        earningsStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    const earningsStart = portfolio.totalEarnings;\n    const earningsEnd = earningsStart.plus(portfolio.totalAmountLent.times(portfolio.avgAPY.div(100)));\n\n    this.setState({\n      earningsEnd,\n      earningsStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const unit = this.props.unit || '$ ';\n    const decimals = this.props.decimals || 8;\n\n    return this.state.earningsStart && this.state.earningsEnd ? (\n      <Flex\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.earningsEnd)}\n          start={parseFloat(this.state.earningsStart)}\n          formattingFn={ n => unit+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Flex>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalEarningsCounter;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TranchePage from '../TranchePage/TranchePage';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TranchesList from '../TranchesList/TranchesList';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TrancheWelcome from '../TrancheWelcome/TrancheWelcome';\nimport GenericPieChart from '../GenericPieChart/GenericPieChart';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport TotalBalanceCounter from '../TotalBalanceCounter/TotalBalanceCounter';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\nimport AssetsUnderManagement from \"../AssetsUnderManagement/AssetsUnderManagement\";\nimport { Box, Flex, Heading, Loader, Text, Icon, Tooltip, Image } from \"rimble-ui\";\nimport PortfolioEquityTranches from '../PortfolioEquityTranches/PortfolioEquityTranches';\n\nclass Tranches extends Component {\n\n  state = {\n    portfolio:null,\n    transactions:[],\n    tokenConfig:null,\n    trancheType:null,\n    trancheRoute:null,\n    selectedToken:null,\n    userHasFunds:false,\n    depositedTokens:[],\n    trancheDetails:null,\n    useTrancheType:false,\n    portfolioLoaded:false,\n    componentLoaded:false,\n    selectedProtocol:null,\n    allocationChartData:null,\n    portfolioEquityQuickSelection:'week'\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n\n    this.loadPortfolio().then( () => {\n      const componentLoaded = true;\n      const trancheRoute = this.props.urlParams.param1;\n      const tranchesDetails = this.functionsUtil.getGlobalConfig(['tranches']);\n      const trancheDetails = Object.values(tranchesDetails).find( t => t.route === trancheRoute );\n\n      if (trancheDetails !== undefined) {\n        const trancheType = trancheDetails.type;\n        const useTrancheType = !this.state.userHasFunds;\n        const selectedToken = this.props.urlParams.param3;\n        const selectedProtocol = this.props.urlParams.param2;\n        const tokenConfig = selectedProtocol ? (this.props.availableTranches[selectedProtocol] && this.props.availableTranches[selectedProtocol][selectedToken] ? this.props.availableTranches[selectedProtocol][selectedToken] : null) : null;\n\n        if (this.state.userHasFunds && !tokenConfig){\n          return this.props.goToSection(this.props.selectedSection.route);\n        }\n\n        this.setState({\n          trancheType,\n          tokenConfig,\n          trancheRoute,\n          selectedToken,\n          trancheDetails,\n          useTrancheType,\n          selectedProtocol\n        });\n      } else {\n        const selectedToken = this.props.urlParams.param2;\n        const selectedProtocol = this.props.urlParams.param1;\n        const tokenConfig = this.props.availableTranches[selectedProtocol] && this.props.availableTranches[selectedProtocol][selectedToken] ? this.props.availableTranches[selectedProtocol][selectedToken] : null;\n        if (tokenConfig){\n          this.setState({\n            tokenConfig,\n            selectedToken,\n            selectedProtocol\n          });\n        }\n      }\n\n      this.setState({\n        componentLoaded\n      });\n    });\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const availableTranchesChanged = JSON.stringify(prevProps.availableTranches) !== JSON.stringify(this.props.availableTranches);\n    if (accountChanged || availableTranchesChanged){\n      this.setState({\n        portfolioLoaded:false\n      },() => {\n        this.loadPortfolio();\n      });\n    }\n  }\n\n  async loadPortfolio(){\n    if (!this.props.account){\n      const userHasFunds = false;\n      const portfolioLoaded = true;\n      this.setState({\n        userHasFunds,\n        portfolioLoaded\n      });\n      return false;\n    }\n\n    const portfolio = await this.functionsUtil.getAccountPortfolioTranches(this.props.availableTranches,this.props.account);\n\n    if (portfolio){\n      const tranchesTokens = [];\n      const tranchesBalances = [];\n      const portfolioLoaded = true;\n      const tranchesConfig = this.functionsUtil.getGlobalConfig(['tranches']);\n\n      portfolio.tranchesBalance.forEach( trancheInfo => {\n        if (!tranchesBalances[trancheInfo.tranche]){\n          tranchesBalances[trancheInfo.tranche] = {\n            weight:this.functionsUtil.BNify(0),\n            balance:this.functionsUtil.BNify(0)\n          };\n        }\n        tranchesBalances[trancheInfo.tranche].weight = tranchesBalances[trancheInfo.tranche].weight.plus(trancheInfo.trancheWeight);\n        tranchesBalances[trancheInfo.tranche].balance = tranchesBalances[trancheInfo.tranche].balance.plus(trancheInfo.tokenBalance);\n\n        if (!tranchesTokens[trancheInfo.token]){\n          tranchesTokens[trancheInfo.token] = this.functionsUtil.BNify(0);\n        }\n        tranchesTokens[trancheInfo.token] = tranchesTokens[trancheInfo.token].plus(trancheInfo.tokenBalance);\n      });\n\n      const depositedTokens = Object.keys(tranchesTokens);\n\n      const portfolioDonutData = Object.keys(tranchesTokens).map( token => {\n        const balanceValue = parseFloat(tranchesTokens[token].toFixed(4));\n        const tokenPercentage = tranchesTokens[token].div(portfolio.totalBalance).times(100);\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase()]);\n        return {\n          id:token,\n          name:token,\n          label:token,\n          valueHoverProps:{\n            unit:'$',\n            unitPos:'left',\n            unitProps:{\n              mr:2,\n              fontWeight:4,\n              fontSize:[3,4]\n            }\n          },\n          valueHover:balanceValue,\n          value:Math.round(tokenPercentage),\n          description: `$ ${balanceValue} in ${token}`,\n          color:'hsl('+tokenConfig.color.hsl.join(',')+')',\n          image:tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${token.toUpperCase()}.svg`,\n        };\n      });\n\n      const allocationChartData = Object.keys(tranchesBalances).map((trancheName,i)=>{\n        const trancheConfig = tranchesConfig[trancheName];\n        const balanceInfo = tranchesBalances[trancheName];\n        const weightValue = parseFloat(balanceInfo.weight.times(100).toFixed(2));\n        return {\n          id:trancheName,\n          name:trancheName,\n          value:weightValue,\n          label: trancheConfig.name,\n          color:'hsl('+trancheConfig.color.hsl.join(',')+')',\n          description: `$ ${balanceInfo.balance.toFixed(2)} in ${trancheConfig.name}`\n        };\n      });\n\n      // console.log('allocationChartData',allocationChartData,'portfolioDonutData',portfolioDonutData);\n      \n      const transactions = portfolio.transactions;\n      const userHasFunds = portfolio && this.functionsUtil.BNify(portfolio.totalBalance).gt(0);\n\n      // console.log('loadPortfolio - userHasFunds',portfolio,userHasFunds);\n\n      this.setState({\n        portfolio,\n        userHasFunds,\n        transactions,\n        portfolioLoaded,\n        depositedTokens,\n        portfolioDonutData,\n        allocationChartData\n      });\n    }\n  }\n\n  selectTrancheType(trancheRoute){\n    let route = `${this.props.selectedSection.route}/${trancheRoute}`;\n    const tokenConfig = this.props.availableTranches[this.state.selectedProtocol] && this.props.availableTranches[this.state.selectedProtocol][this.state.selectedToken] ? this.props.availableTranches[this.state.selectedProtocol][this.state.selectedToken] : null;\n    if (tokenConfig){\n      route += `/${this.state.selectedProtocol}/${this.state.selectedToken}`;\n    }\n    this.props.goToSection(route);\n  }\n\n  selectTranche(protocol,token){\n    const tokenConfig = this.props.availableTranches[protocol] && this.props.availableTranches[protocol][token] ? this.props.availableTranches[protocol][token] : null;\n    if (tokenConfig){\n      let route = `${this.props.selectedSection.route}`;\n      if (this.state.trancheRoute){\n        route += `/${this.state.trancheRoute}`;\n      }\n      route += `/${protocol}/${token}`;\n\n      this.props.goToSection(route);\n    }\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setState({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  goBack(){\n    if (this.state.tokenConfig && this.state.trancheType){\n      if (!this.state.userHasFunds){\n        this.props.goToSection(this.props.selectedSection.route+'/'+this.state.trancheDetails.route);\n      } else {\n        this.props.goToSection(this.props.selectedSection.route+'/'+this.state.selectedProtocol+'/'+this.state.selectedToken);\n      }\n    }/* else if (this.state.trancheType){\n      this.props.goToSection(this.props.selectedSection.route);\n    } */else {\n      this.props.goToSection(this.props.selectedSection.route);\n    }\n  }\n\n  render() {\n\n    const pathLink = [];\n    const breadcrumbPath = [];\n    if (this.state.trancheType){\n      breadcrumbPath.push(this.functionsUtil.capitalize(this.state.trancheDetails.baseName));\n      if (this.state.tokenConfig){\n        if (!this.state.userHasFunds){\n          pathLink.push(this.props.selectedSection.route+'/'+this.state.trancheDetails.route);\n        } else if (this.state.tokenConfig){\n          pathLink.push(this.props.selectedSection.route+'/'+this.state.selectedProtocol+'/'+this.state.selectedToken);\n        }\n      }\n    }\n    if (this.state.selectedProtocol){\n      breadcrumbPath.push(this.functionsUtil.getGlobalConfig(['stats','protocols',this.state.selectedProtocol,'label']));\n    }\n    if (this.state.selectedToken){\n      breadcrumbPath.push(this.state.selectedToken);\n    }\n\n    return (\n      <Box\n        width={1}\n      >\n        {\n          breadcrumbPath.length>0 && (\n            <Flex\n              width={1}\n              mb={[2,0]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'flex-start'}\n            >\n              <Flex\n                width={0.5}\n              >\n                <Breadcrumb\n                  {...this.props}\n                  text={'Tranches'}\n                  pathLink={pathLink}\n                  path={breadcrumbPath}\n                  isMobile={this.props.isMobile}\n                  handleClick={this.goBack.bind(this)}\n                />\n              </Flex>\n              <Flex\n                width={0.5}\n                justifyContent={'flex-end'}\n              >\n                \n              </Flex>\n            </Flex>\n          )\n        }\n        {\n          !this.state.componentLoaded ? (\n            <FlexLoader\n              textProps={{\n                textSize:4,\n                fontWeight:2\n              }}\n              loaderProps={{\n                mb:3,\n                size:'40px'\n              }}\n              flexProps={{\n                my:3,\n                minHeight:'60vh',\n                flexDirection:'column'\n              }}\n              text={'Loading Portfolio...'}\n            />\n          ) : this.state.tokenConfig ? (\n            <TranchePage\n              {...this.props}\n              portfolio={this.state.portfolio}\n              trancheType={this.state.trancheType}\n              tokenConfig={this.state.tokenConfig}\n              userHasFunds={this.state.userHasFunds}\n              selectedToken={this.state.selectedToken}\n              trancheDetails={this.state.trancheDetails}\n              selectedProtocol={this.state.selectedProtocol}\n              availableTranches={this.props.availableTranches}\n              selectTrancheType={this.selectTrancheType.bind(this)}\n            />\n          ) : !this.state.trancheType && !this.state.userHasFunds ? (\n            <TrancheWelcome\n              {...this.props}\n              selectTrancheType={this.selectTrancheType.bind(this)}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              {this.state.useTrancheType ? (\n                <Box\n                  width={1}\n                >\n                  <AssetsUnderManagement\n                    {...this.props}\n                    flexProps={{\n                      mb:[3,0]\n                    }}\n                    loaderAlign={'flex-end'}\n                    subtitle={'Total Value Locked on Tranches'}\n                    aggregatedStatsMethod={this.functionsUtil.getTrancheAggregatedStats}\n                  />\n                  <Flex\n                    mb={3}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mr={2}\n                      src={this.state.trancheDetails.image}\n                      size={this.props.isMobile ? '1.8em' : '2.2em'}\n                    />\n                    <Title\n                    >\n                      {this.functionsUtil.capitalize(this.state.trancheDetails.baseName)} Tranches\n                    </Title>\n                  </Flex>\n                  <Flex\n                    mb={3}\n                    mx={'auto'}\n                    width={[1,0.8]}\n                    aligItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontWeight={2}\n                      fontSize={[1,2]}\n                      textAlign={'center'}\n                    >\n                      {this.functionsUtil.getGlobalConfig(['tranches',this.state.trancheType,'description','long'])}\n                    </Text>\n                  </Flex>\n                </Box>\n              ) : (\n                <Box\n                  width={1}\n                >\n                  <AssetsUnderManagement\n                    {...this.props}\n                    flexProps={{\n                      mb:[3,0]\n                    }}\n                    loaderAlign={'flex-end'}\n                    subtitle={'Total Value Locked on Tranches'}\n                    aggregatedStatsMethod={this.functionsUtil.getTrancheAggregatedStats}\n                  />\n                  <Title\n                    mb={3}\n                  >\n                    Perpetual Yield Tranches\n                  </Title>\n                </Box>\n              )}\n              {\n                this.state.portfolioLoaded && this.state.userHasFunds && (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio.avgAPY ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.portfolio.avgAPY.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg APY\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <TotalBalanceCounter\n                                    decimals={5}\n                                    {...this.props}\n                                    portfolio={this.state.portfolio}\n                                  />\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-end'}\n                                    >\n                                      <Text\n                                        fontSize={1}\n                                        fontWeight={3}\n                                        fontFamily={this.props.theme.fonts.counter}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        +{this.state.portfolio.totalEarningsPerc.toFixed(2)}%\n                                      </Text>\n                                    </Flex>\n                                    <Text\n                                      mx={1}\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      fontFamily={this.props.theme.fonts.counter}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    >|</Text>\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-start'}\n                                    >\n                                      <TotalEarningsCounter\n                                        {...this.props}\n                                        unit={'+$'}\n                                        decimals={5}\n                                        counterStyle={{\n                                          fontSize:14,\n                                          fontWeight:600,\n                                          color:this.props.theme.colors.transactions.status.completed\n                                        }}\n                                        portfolio={this.state.portfolio}\n                                      />\n                                    </Flex>\n                                  </Flex>\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Balance\n                              </Text>\n                              {\n                                /*\n                                this.state.govTokensTotalBalance && (\n                                  <Tooltip\n                                    placement={'bottom'}\n                                    message={'Total Balance does not include accrued governance tokens: '+(this.state.govTokensTotalBalance && this.state.govTokensTotalBalance.gt(0) ? ` (${this.state.govTokensTotalBalanceTooltip.join(' / ')})` : '')}\n                                  >\n                                    <Icon\n                                      ml={2}\n                                      name={\"Info\"}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                    />\n                                  </Tooltip>\n                                )\n                                */\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.allocationChartData ? (\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  id={'allocationChart'}\n                                  height={['55px','59px']}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <GenericPieChart\n                                    {...this.props}\n                                    inline={true}\n                                    showLoader={false}\n                                    tooltipFormat={v => v+'%'}\n                                    sliceLabel={d => d.value+'%'}\n                                    width={ this.props.isMobile ? 55 : 59 }\n                                    height={ this.props.isMobile ? 55 : 59 }\n                                    chartData={this.state.allocationChartData}\n                                  />\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Portfolio Distribution\n                              </Text>\n                              {\n                                /*\n                                <Tooltip\n                                  placement={'bottom'}\n                                  message={this.functionsUtil.getGlobalConfig(['messages','riskScoreShort'])}\n                                >\n                                  <Icon\n                                    ml={2}\n                                    name={\"Info\"}\n                                    size={'1em'}\n                                    color={'cellTitle'}\n                                  />\n                                </Tooltip>\n                                */\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={3}\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.328]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <GenericPieChart\n                            {...this.props}\n                            showLegend={true}\n                            showLoader={false}\n                            legendProps={{\n                              itemWidth:80,\n                              itemsSpacing:8\n                            }}\n                            tooltipFormat={v => v+'%'}\n                            defaultLabel={'Total Funds'}\n                            sliceLabel={d => {\n                              if (parseFloat(d.value)>=5){\n                                return d.value+'%';\n                              } else {\n                                return null;\n                              }\n                            }}\n                            parentId={'portfolio-composition'}\n                            chartData={this.state.portfolioDonutData}\n                            defaultImage={this.props.selectedSection.image}\n                            defaultValue={`$ ${this.functionsUtil.formatMoney(parseFloat(this.state.portfolio.totalBalance),4)}`}\n                            margin={this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 }}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.666]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquityTranches\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              transactionsList={this.state.transactions}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                )\n              }\n              <Flex\n                width={1}\n                mb={[3,4]}\n                id={\"migrate-assets\"}\n                flexDirection={'column'}\n              >\n                <Flex\n                  pb={2}\n                  width={1}\n                  mb={[2,3]}\n                  borderColor={'divider'}\n                  borderBottom={'1px solid transparent'}\n                >\n                  <Heading.h4\n                    fontSize={[2,4]}\n                    fontWeight={[3,4]}\n                  >\n                    Available Tranches\n                  </Heading.h4>\n                </Flex>\n                <TranchesList\n                  enabledProtocols={[]}\n                  trancheType={this.state.trancheType}\n                  availableTranches={this.props.availableTranches}\n                  handleClick={(props) => this.selectTranche(props.protocol,props.token)}\n                  colsProps={{\n                    fontSize:['10px','14px'],\n                  }}\n                  cols={[\n                    {\n                      title:'PROTOCOL', \n                      props:{\n                        width:[0.34, this.state.useTrancheType ? 0.15 : 0.13]\n                      },\n                      fields:[\n                        {\n                          name:'protocolIcon',\n                          props:{\n                            mr:2,\n                            height:['1.4em','2em']\n                          }\n                        },\n                        {\n                          name:'protocolName'\n                        },\n                        {\n                          mobile:false,\n                          name:'experimentalBadge',\n                          props:{\n                            ml:1,\n                            height:'1.5em'\n                          }\n                        }\n                      ]\n                    },\n                    {\n                      title:'TOKEN',\n                      props:{\n                        width:[0.15, 0.13],\n                      },\n                      fields:[\n                        {\n                          name:'tokenIcon',\n                          props:{\n                            mr:2,\n                            height:['1.4em','2em']\n                          }\n                        },\n                        {\n                          mobile:false,\n                          name:'tokenName'\n                        }\n                      ]\n                    },\n                    \n                    /*\n                    {\n                      title:'TYPE',\n                      props:{\n                        width:[0.29,0.13],\n                      },\n                      fields:[\n                        {\n                          name:'trancheTypeIcon',\n                          props:{\n                            flexProps:{\n                              mr:2\n                            },\n                            size:'1.4em'\n                          }\n                        },\n                        {\n                          name:'trancheType'\n                        }\n                      ],\n                      visible:this.state.useTrancheType\n                    },\n                    */\n                    {\n                      title:'POOL',\n                      props:{\n                        width:[0.25, this.state.useTrancheType ? 0.1 : 0.09],\n                      },\n                      fields:[\n                        {\n                          name:this.state.useTrancheType ? `${this.state.trancheDetails.baseName}PoolNoLabel` : 'pool',\n                          props:{\n                            minPrecision:1,\n                            decimals:this.props.isMobile ? 0 : 2,\n                          }\n                        }\n                      ]\n                    },\n                    {\n                      title:this.state.useTrancheType ? 'APY' : 'SENIOR APY',\n                      desc:this.functionsUtil.getGlobalConfig(['messages','apyTranches']),\n                      visible:!this.state.useTrancheType || this.state.trancheType === 'AA',\n                      props:{\n                        width:[this.state.useTrancheType ? 0.16 : 0.27,this.state.useTrancheType ? 0.09 : 0.11],\n                      },\n                      parentProps:{\n                        flexDirection:'column',\n                        alignItems:'flex-start',\n                      },\n                      fields:[\n                        {\n                          name:'seniorApy',\n                          showTooltip:true\n                        },\n                      ],\n                    },\n                    {\n                      title:this.state.useTrancheType ? 'APY' : 'JUNIOR APY',\n                      desc:this.functionsUtil.getGlobalConfig(['messages','apyTranches']),\n                      visible:!this.state.useTrancheType || this.state.trancheType === 'BB',\n                      props:{\n                        width:[this.state.useTrancheType ? 0.16 : 0.27,this.state.useTrancheType ? 0.09 : 0.11],\n                      },\n                      parentProps:{\n                        flexDirection:'column',\n                        alignItems:'flex-start',\n                      },\n                      fields:[\n                        {\n                          name:'juniorApy',\n                          props:{\n                            flexProps:{\n                              mr:3\n                            }\n                          },\n                          showTooltip:true\n                        },\n                      ],\n                    },\n                    {\n                      mobile:false,\n                      title:'APR RATIO',\n                      desc:this.functionsUtil.getGlobalConfig(['messages','aprRatio']),\n                      props:{\n                        width:[0.15, 0.1],\n                      },\n                      fields:[\n                        {\n                          name:'trancheAPRSplitRatio',\n                          props:{\n                            flexProps:{\n                              mr:2\n                            },\n                            height:['1.4em','2em']\n                          }\n                        },\n                        \n                      ]\n                    },\n                    {\n                      mobile:false,\n                      title:'AUTO-COMPOUNDING',\n                      desc:this.functionsUtil.getGlobalConfig(['messages','autoFarming']),\n                      props:{\n                        width:[0.25,0.17],\n                      },\n                      fields:[\n                        {\n                          name:'autoFarming'\n                        }\n                      ]\n                    },\n                    {\n                      mobile:false,\n                      title:'STAKING REWARDS',\n                      desc:this.functionsUtil.getGlobalConfig(['messages','stakingRewards']),\n                      props:{\n                        width:[0.25,this.state.useTrancheType ? 0.15 : 0.13],\n                      },\n                      fields:[\n                        {\n                          name:'stakingRewards'\n                        }\n                      ]\n                    },\n                    /*\n                    {\n                      mobile:true,\n                      title:'TOKENS',\n                      props:{\n                        width:[0.16,0.17],\n                      },\n                      fields:[\n                        {\n                          name:'govTokens'\n                        }\n                      ]\n                    },\n                    */\n                    {\n                      title:'',\n                      mobile:false,\n                      props:{\n                        width:[0.29, 0.15],\n                      },\n                      parentProps:{\n                        width:1\n                      },\n                      fields:[\n                        {\n                          name:'button',\n                          label: 'Deposit',\n                          props:{\n                            width:1,\n                            fontSize:3,\n                            fontWeight:3,\n                            height:'45px',\n                            borderRadius:4,\n                            boxShadow:null,\n                            mainColor:'deposit',\n                            size: this.props.isMobile ? 'small' : 'medium',\n                            handleClick:(props) => this.selectTranche(props.protocol,props.token)\n                          }\n                        }\n                      ]\n                    }\n                  ]}\n                  {...this.props}\n                />\n              </Flex>\n              {\n                this.props.account && this.state.userHasFunds && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title mb={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                      transactionsList={this.state.transactions}\n                      availableActions={this.state.transactions.reduce( (availableActions,t) => {\n                        availableActions[t.action.toLowerCase()] = t.action;\n                        return availableActions;\n                      },{})}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.13,0.18]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.12,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.27,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.16],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:[0.23,0.11],\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'PROTOCOL',\n                          props:{\n                            width:[0.21, 0.14],\n                          },\n                          fields:[\n                            {\n                              type:'image',\n                              name:'custom',\n                              path:['protocolIcon'],\n                              props:{\n                                mr:2,\n                                height:['1.4em','2em']\n                              }\n                            },\n                            {\n                              type:'text',\n                              mobile:false,\n                              name:'custom',\n                              path:['protocol']\n                            }\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.16,0.14],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','2em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default Tranches;\n","import React, { Component } from 'react';\nimport { Flex, Box, Text, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\n\nclass TokenSwap extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async loadKyberWidget(){\n\n    if (!this.state.selectedFromToken || !this.state.selectedDestToken){\n      return false;\n    }\n\n    const provider = 'kyberSwap';\n    const providerInfo = this.functionsUtil.getGlobalConfig(['payments','providers',provider]);\n    if (providerInfo.enabled && providerInfo.remoteResources){\n\n      const globalConfigs = this.functionsUtil.getGlobalConfigs();\n      const remoteResources = providerInfo.remoteResources;\n\n      Object.keys(remoteResources).forEach((url,j) => {\n\n        const resourceType = url.split('.').pop().toLowerCase();\n\n        switch (resourceType){\n          case 'js':\n            const scriptID = `script_${provider}_${j}_${this.state.selectedFromToken}_${this.state.selectedDestToken}`;\n\n            if (!document.getElementById(scriptID)){\n              const script = document.createElement(\"script\");\n              const remoteResourceParams = remoteResources[url];\n              const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n              const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n              if (precall && typeof precall === 'function'){\n                const precallProps = {\n                  baseToken:this.state.selectedFromToken,\n                  selectedToken:this.state.selectedDestToken,\n                  buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n                };\n                precall(precallProps,globalConfigs,providerInfo);\n              }\n\n              if (callback && typeof callback === 'function'){\n                if (script.readyState) {  // only required for IE <9\n                  script.onreadystatechange = function() {\n                    if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                      script.onreadystatechange = null;\n                      callback();\n                    }\n                  };\n                } else {  //Others\n                  script.onload = callback;\n                }\n              }\n\n              script.id = scriptID;\n              script.className = `script_${provider}`;\n              script.src = url;\n              script.async = true;\n\n              if (remoteResourceParams && remoteResourceParams.parentElement){\n                remoteResourceParams.parentElement.appendChild(script)\n              } else {\n                document.head.appendChild(script);\n              }\n            }\n          break;\n          case 'css':\n            const stylesheetId = `stylesheet_${provider}_${j}`;\n\n            if (!document.getElementById(stylesheetId)){\n              const style = document.createElement(\"link\");\n\n              style.id = stylesheetId;\n              style.rel = 'stylesheet';\n              style.href = url;\n\n              document.head.appendChild(style);\n            }\n          break;\n          default:\n          break;\n        }\n      });\n    }\n\n    this.setState({\n      providerInfo\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const fromTokenChanged = prevState.selectedFromToken !== this.state.selectedFromToken;\n    const destTokenChanged = prevState.selectedDestToken !== this.state.selectedDestToken;\n    if ((fromTokenChanged ||  destTokenChanged) && this.state.selectedFromToken && this.state.selectedDestToken){\n      this.loadKyberWidget();\n    }\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n    const supportedTokens = this.functionsUtil.getGlobalConfig(['payments','providers','kyberSwap','supportedTokens']);\n\n    supportedTokens.forEach( token => {\n      if (token !== selectedFromToken){\n        if (!selectedDestToken){\n          selectedDestToken = token;\n        }\n        availableDestinationTokens[token] = {\n          token\n        };\n      }\n    });\n\n    const baseToken = this.functionsUtil.getGlobalConfig(['baseToken']);\n    if (baseToken !== selectedFromToken){\n      availableDestinationTokens[baseToken] = {\n        token:baseToken\n      };\n    }\n\n    this.setState({\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n    this.setState({\n      selectedDestToken\n    });\n  }\n\n  swap = () => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    const paymentProvider = this.state.providerInfo;\n    const initProps = {\n      baseToken:this.state.selectedFromToken,\n      selectedToken:this.state.selectedDestToken,\n      buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    };\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(initProps,globalConfigs) : null;\n\n    // Render the Payment Provider\n    if (typeof paymentProvider.render === 'function'){\n      paymentProvider.render(initParams,null,initProps);\n    }\n\n    // Send GA event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Tools',\n      eventAction: 'TokenSwap',\n      eventLabel: `${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to swap:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              showBalance={false}\n              isSearchable={true}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  showBalance={false}\n                  isSearchable={true}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          <Flex\n            mt={2}\n            width={1}\n            justifyContent={'center'}\n          >\n            <Button\n              my={2}\n              mx={[0, 2]}\n              size={'medium'}\n              borderRadius={4}\n              mainColor={'blue'}\n              onClick={ e => this.swap(e) }\n              disabled={ !this.state.selectedFromToken || !this.state.selectedDestToken }\n            >\n              SWAP TOKENS\n            </Button>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenSwap;\n","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass LpStaking extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    infoBox:null,\n    globalStats:[],\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    statsLoaded:false,\n    tokenBalance:null,\n    contractInfo:null,\n    programEnded:false,\n    stakedBalance:null,\n    selectedToken:null,\n    rewardMultiplier:1,\n    accountingData:null,\n    programEndDate:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    poolTokenPrice:null,\n    availableTokens:null,\n    approveEnabled:false,\n    rewardTokenPrice:null,\n    contractApproved:false,\n    tokenWrapperProps:null,\n    distributionSpeed:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false,\n    showTokenWrapperEnabled:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.setState({\n      selectedAction:'Stake'\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const contractInfoChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    if (selectedActionChanged || contractApprovedChanged || tokenConfigChanged){\n      this.setState({\n        tokenWrapperProps:null,\n        showTokenWrapperEnabled:false\n      },() => {\n        this.updateData(selectedActionChanged);\n      });\n    }\n\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async changeInputCallback(inputValue=null){\n\n    let infoBox = null;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      inputValue = this.functionsUtil.BNify(inputValue);\n      switch (this.state.selectedAction){\n        case 'Stake':\n          const userStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.props.tokenConfig.decimals).plus(inputValue);\n          const totalStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.totalStakingShares,this.props.contractInfo.decimals).plus(inputValue);\n          const userTotalStakingShare = userStakedBalance.div(totalStakedBalance);\n          const rewardsPerDay = this.state.distributionSpeed.times(86400).times(userTotalStakingShare);//.times(this.state.distributionSpeedMultiplier);\n\n          const stakedBalanceUSD = userStakedBalance.times(this.state.poolTokenPrice);\n          const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n          const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n          // console.log(parseFloat(userStakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n          infoBox = {\n            icon:'FileDownload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By staking <strong>${inputValue.toFixed(4)} ${this.props.tokenConfig.token}</strong> you will get <strong>${rewardsPerDay.toFixed(4)} ${this.props.contractInfo.rewardToken} / day</strong> with an average APY of <strong>${apy.toFixed(2)}%</strong><br /><small style=\"color:#ff9900\">assuming you have achieved the maximum reward multiplier</small>`\n          };\n        break;\n        case 'Withdraw':\n          const normalizedInputValue = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n          let unstakeRewards = await this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unstakeQuery',[normalizedInputValue],{from:this.props.account});\n          unstakeRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(unstakeRewards,this.props.tokenConfig.decimals));\n          infoBox = {\n            icon:'FileUpload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By unstaking <strong>${inputValue.toFixed(4)} ${this.props.tokenConfig.token}</strong> you will get <strong>${unstakeRewards} ${this.props.contractInfo.rewardToken}</strong>`\n          };\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'wrapAndStake';\n        methodParams = [amount];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  getPermitTransactionParams(amount,signedParameters){\n    let methodName = null;\n    let methodParams = [];\n    const { expiry, r, s, v } = signedParameters;\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'permitWrapAndStakeUnlimited';\n        methodParams = [amount, expiry, v, r, s];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async loadStats(){\n    const stats = [];\n\n    const [\n      totalLocked,\n      totalUnlocked,\n      totalStakingShares,\n      unlockScheduleCount,\n      accountingData,\n      collectedRewards\n    ] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalLocked'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalUnlocked'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalStakingShares'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unlockScheduleCount'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'updateAccounting',[],{from:this.props.account}),\n      this.state.stakedBalance.gt(0) ? this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unstakeQuery',[this.functionsUtil.integerValue(this.state.stakedBalance)],{from:this.props.account}) : this.functionsUtil.BNify(0)\n    ]);\n\n    const unlockSchedulesPromises = [];\n    for (let i = 0; i < unlockScheduleCount ; i++){\n      unlockSchedulesPromises.push(this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unlockSchedules',[i]));\n    }\n\n    const unlockSchedules = await Promise.all(unlockSchedulesPromises);\n\n    const totalRewards = this.functionsUtil.fixTokenDecimals(this.functionsUtil.BNify(totalLocked).plus(this.functionsUtil.BNify(totalUnlocked)),this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Total Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(totalRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const totalDeposits = this.functionsUtil.fixTokenDecimals(totalStakingShares,this.props.contractInfo.decimals);\n    stats.push({\n      title:'Total Deposits',\n      value:this.functionsUtil.formatMoney(parseFloat(totalDeposits))+' '+this.props.tokenConfig.token\n    });\n\n    const lockedRewards = this.functionsUtil.fixTokenDecimals(totalLocked,this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Locked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(lockedRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const unlockedRewards = this.functionsUtil.fixTokenDecimals(totalUnlocked,this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Unlocked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(unlockedRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const programEndTime = unlockSchedules.length>0 ? unlockSchedules.reduce( (endTime,s) => {\n      endTime = Math.max(s.endAtSec,endTime);\n      return endTime;\n    },0) : null;\n\n    const programEndDate = programEndTime ? `${this.functionsUtil.strToMoment(programEndTime*1000).utc().format('DD MMM, YYYY @ HH:mm')} UTC` : 'None';\n    stats.push({\n      title:'Program End-Date',\n      value:programEndDate\n    });\n\n    const programEnded = programEndTime && programEndTime*1000<=Date.now();\n\n    const distributionSpeed = unlockSchedules.reduce( (distributionSpeed,s) => {\n      if (this.functionsUtil.BNify(s.initialLockedShares).gt(0) && this.functionsUtil.BNify(s.durationSec).gt(0)){\n        const tokensPerSecond = this.functionsUtil.fixTokenDecimals(s.initialLockedShares,this.props.contractInfo.decimals).div(s.durationSec);\n        if (!tokensPerSecond.isNaN()){\n          distributionSpeed = distributionSpeed.plus(tokensPerSecond);\n        }\n      }\n      return distributionSpeed;\n    },this.functionsUtil.BNify(0));\n\n    stats.push({\n      title:'Reward unlock rate',\n      value:this.functionsUtil.formatMoney(distributionSpeed.times(86400))+' '+this.props.contractInfo.rewardToken+' / day'\n    });\n\n    const globalStats = [];\n\n    const stakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.props.tokenConfig.decimals);\n    const stakingShare = stakedBalance.div(totalDeposits); // accountingData && accountingData[2] && this.functionsUtil.BNify(accountingData[3]).gt(0) ? this.functionsUtil.BNify(accountingData[2]).div(this.functionsUtil.BNify(accountingData[3])) : this.functionsUtil.BNify(0);\n\n    const rewardMultiplier = accountingData && this.functionsUtil.BNify(accountingData[4]).gt(0) ? this.functionsUtil.BNify(Math.max(1,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.props.contractInfo.maxMultiplier)))) : this.functionsUtil.BNify(1);\n\n    const distributionSpeedMultiplier = this.functionsUtil.BNify(1).div(this.props.contractInfo.maxMultiplier).times(rewardMultiplier);\n    const userDistributionSpeed = distributionSpeed.times(stakingShare).times(distributionSpeedMultiplier);\n    const rewardsPerDay = userDistributionSpeed.times(86400);\n\n    // console.log(parseFloat(this.functionsUtil.BNify(collectedRewards)),parseFloat(this.functionsUtil.BNify(accountingData[4])),this.props.contractInfo.maxMultiplier,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.props.contractInfo.maxMultiplier)),parseFloat(rewardMultiplier));\n\n    // globalStats.push({\n    //   title:'Distribution rate',\n    //   description:'Your daily rewards distribution based on your current multiplier',\n    //   value:this.functionsUtil.formatMoney(rewardsPerDay)+' '+this.props.contractInfo.rewardToken+' / day',\n    // });\n\n    const stakedBalanceUSD = stakedBalance.times(this.state.poolTokenPrice);\n    const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n    const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n    // console.log(parseFloat(this.state.stakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n\n    globalStats.push({\n      title:'APY',\n      value:`${apy.toFixed(2)}%`,\n      description:'Annualized rewards based on your current multiplier',\n    });\n\n    globalStats.push({\n      title:'Share',\n      value:`${stakingShare.times(100).toFixed(2)}%`,\n      description:'Your share of the total deposits',\n    });\n\n    globalStats.push({\n      title:'Multiplier',\n      value:`${rewardMultiplier.toFixed(2)}x`,\n      description:`Deposit liquidity tokens for ${this.props.contractInfo.maxBonusDays} days to achieve a ${this.props.contractInfo.maxMultiplier}x reward multiplier`\n    });\n\n    const currentRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(collectedRewards,this.props.tokenConfig.decimals));\n    globalStats.push({\n      title:'Rewards',\n      value:currentRewards+' '+this.props.contractInfo.rewardToken,\n      description:'Your share of the total unlocked reward pool. Larger your deposit and for longer, higher your share'\n    });\n\n    // console.log('loadStats',stats,globalStats);\n\n    const statsLoaded = true;\n\n    this.setState({\n      stats,\n      statsLoaded,\n      globalStats,\n      stakingShare,\n      programEnded,\n      totalRewards,\n      programEndDate,\n      accountingData,\n      rewardMultiplier,\n      distributionSpeed,\n      totalStakingShares,\n      userDistributionSpeed,\n      distributionSpeedMultiplier\n    });\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    // console.log('transactionSucceeded',tx);\n    let infoBox = null;\n    switch (this.state.selectedAction){\n      case 'Stake':\n        const stakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const stakedTokens = stakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(stakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully staked <strong>${stakedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Withdraw':\n        const unstakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() ) : null;\n        const unstakedTokens = unstakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(unstakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        const rewardTokenConfig = {\n          address:this.functionsUtil.getContractByName(this.props.contractInfo.rewardToken)._address\n        };\n        const receivedRewardsLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => (log.address.toLowerCase() === rewardTokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) )) ) : null;\n        const receivedRewards = receivedRewardsLog ? this.functionsUtil.fixTokenDecimals(parseInt(receivedRewardsLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully withdrawn <strong>${unstakedTokens.toFixed(4)} ${this.props.selectedToken}</strong> and received <strong>${receivedRewards.toFixed(4)} ${this.props.contractInfo.rewardToken}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    const transactionSucceeded = true;\n\n    this.setState({\n      infoBox,\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(selectedActionChanged=false){\n    const newState = {};\n\n    const DAITokenConfig = {\n      address:this.functionsUtil.getContractByName('DAI')._address\n    };\n    const rewardTokenConfig = {\n      address:this.functionsUtil.getContractByName(this.props.contractInfo.rewardToken)._address\n    };\n\n    const [\n      poolTokenPrice,\n      rewardTokenPrice,\n      tokenBalance,\n      stakedBalance,\n    ] = await Promise.all([\n      this.functionsUtil.getSushiswapPoolTokenPrice(this.props.selectedToken),\n      this.functionsUtil.getSushiswapConversionRate(DAITokenConfig,rewardTokenConfig),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalStakedFor',[this.props.account]),\n    ]);\n\n    newState.balanceProp = this.functionsUtil.BNify(0);\n    newState.tokenBalance = !this.functionsUtil.BNify(tokenBalance).isNaN() ? this.functionsUtil.BNify(tokenBalance) : this.functionsUtil.BNify(0);\n    newState.stakedBalance = !this.functionsUtil.BNify(stakedBalance).isNaN() ? this.functionsUtil.BNify(stakedBalance) : this.functionsUtil.BNify(0);\n    newState.poolTokenPrice = !this.functionsUtil.BNify(poolTokenPrice).isNaN() ? this.functionsUtil.BNify(poolTokenPrice) : this.functionsUtil.BNify(0);\n    newState.rewardTokenPrice = !this.functionsUtil.BNify(rewardTokenPrice).isNaN() ? this.functionsUtil.BNify(rewardTokenPrice) : this.functionsUtil.BNify(0);\n\n    switch (this.state.selectedAction){\n      case 'Stake':\n        newState.permitEnabled = true;\n        newState.approveEnabled = true;\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveDescription = 'Approve the Staking contract to stake your LP tokens';\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.props.tokenConfig\n          },\n        };\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = this.functionsUtil.fixTokenDecimals(newState.stakedBalance,this.props.tokenConfig.decimals);\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.props.tokenConfig\n          },\n        };\n      break;\n      default:\n      break;\n    }\n\n    if (newState.balanceProp.lte(0)){\n      newState.showTokenWrapperEnabled = true;\n    }\n\n    if (selectedActionChanged){\n      newState.infoBox = null;\n      newState.transactionSucceeded = false;\n    }\n\n    this.setState(newState,() => {\n      this.loadStats();\n    });\n  }\n\n  render() {\n\n    const StatsCard = props => {\n      const cardProps = {\n        p:3,\n        mb:2,\n        width:'49%',\n        ...props.cardProps\n      };\n      return (\n        <DashboardCard\n          title={props.title}\n          cardProps={cardProps}\n          titleProps={{\n            fontSize:1,\n            fontWeight:3,\n          }}\n          titleParentProps={{\n            mt:0,\n            ml:0\n          }}\n          description={props.description}\n        >\n          <Text\n            mt={1}\n            fontSize={[2,3]}\n            color={'statValue'}\n            {...props.textProps}\n          >\n            {props.value}\n          </Text>\n        </DashboardCard>\n      );\n    };\n\n    const isStake = this.state.selectedAction === 'Stake';\n    const isUnstake = this.state.selectedAction === 'Withdraw';\n    const isStats = this.state.selectedAction === 'Stats';\n    const txAction = this.state.selectedAction;\n\n    return (\n      <Box\n        width={1}\n      >\n      {\n        this.props.tokenConfig && this.props.tokenConfig.poolLink && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Pool link:\n            </Text>\n            <ExtLink\n              mt={1}\n              color={'link'}\n              hoverColor={'link'}\n              href={this.props.tokenConfig.poolLink}\n            >\n              <Text\n                color={'link'}\n                style={{\n                  maxWidth:'100%',\n                  overflow:'hidden',\n                  whiteSpace:'nowrap',\n                  textOverflow:'ellipsis'\n                }}\n              >\n                {this.props.tokenConfig.poolLink}\n              </Text>\n            </ExtLink>\n          </Box>\n        )\n      }\n      {\n        this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) && this.state.globalStats.length>0 && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Your Stats:\n            </Text>\n            <Flex\n              mt={1}\n              width={1}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.globalStats.map( (statInfo,index) =>\n                  <StatsCard\n                    key={`globalStats_${index}`}\n                    cardProps={{\n                      mb:[2,0],\n                      mr:[0,index<this.state.globalStats.length-1 ? 1 : 0],\n                      width:[1,'100%']\n                    }}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    {...statInfo}\n                  />\n                )\n              }\n            </Flex>\n          </Box>\n        )\n      }\n      {\n        this.props.selectedToken && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Select Action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStake ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stake'}\n                imageSrc={'images/mint.svg'}\n                isMobile={this.props.isMobile}\n                // subcaption={'stake LP Tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStake}\n                handleClick={ e => this.setAction('Stake') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isUnstake ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Withdraw'}\n                imageSrc={'images/upload.svg'}\n                isMobile={this.props.isMobile}\n                // subcaption={'withdraw LP tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isUnstake}\n                handleClick={ e => this.setAction('Withdraw') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStats ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stats'}\n                imageSrc={'images/stats.svg'}\n                // subcaption={'view some stats'}\n                isMobile={this.props.isMobile}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStats}\n                handleClick={ e => this.setAction('Stats') }\n              />\n            </Flex>\n            {\n              (isStake || isUnstake) ?\n                isStake && this.state.programEnded ? (\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                      mt:1\n                    }}\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    >\n                      <Icon\n                        name={'Warning'}\n                        color={'cellText'}\n                        size={this.props.isMobile ? '1.8em' : '2.3em'}\n                      />\n                      <Text\n                        mt={1}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'center'}\n                      >\n                        The {this.props.selectedToken} staking program ended on {this.state.programEndDate}.\n                      </Text>\n                    </Flex>\n                  </DashboardCard>\n                ) : (this.props.tokenConfig && this.state.balanceProp && this.state.statsLoaded && this.props.contractInfo ? (\n                  <Box\n                    mt={1}\n                    width={1}\n                    mb={[4,3]}\n                  >\n                    <SendTxWithBalance\n                      error={null}\n                      {...this.props}\n                      action={txAction}\n                      steps={this.state.steps}\n                      infoBox={this.state.infoBox}\n                      tokenConfig={this.props.tokenConfig}\n                      tokenBalance={this.state.balanceProp}\n                      contractInfo={this.props.contractInfo}\n                      permitEnabled={this.state.permitEnabled}\n                      approveEnabled={this.state.approveEnabled}\n                      callback={this.transactionSucceeded.bind(this)}\n                      approveDescription={this.state.approveDescription}\n                      contractApproved={this.contractApproved.bind(this)}\n                      balanceSelectorInfo={this.state.balanceSelectorInfo}\n                      changeInputCallback={this.changeInputCallback.bind(this)}\n                      getTransactionParams={this.getTransactionParams.bind(this)}\n                      getPermitTransactionParams={this.getPermitTransactionParams.bind(this)}\n                    >\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'MoneyOff'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.3em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              isStake ? (\n                                `You don't have any ${this.props.selectedToken} in your wallet.`\n                              ) : isUnstake && (\n                                `You don't have any staked ${this.props.selectedToken} to withdraw.`\n                              )\n                            }\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    </SendTxWithBalance>\n                  </Box>\n                ) : (\n                  <Flex\n                    mt={3}\n                    mb={3}\n                    width={1}\n                  >\n                    <FlexLoader\n                      flexProps={{\n                        flexDirection:'row'\n                      }}\n                      loaderProps={{\n                        size:'30px'\n                      }}\n                      textProps={{\n                        ml:2\n                      }}\n                      text={'Loading info...'}\n                    />\n                  </Flex>\n                )\n              ) : isStats && (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  width={1}\n                  style={{\n                    flexWrap:'wrap'\n                  }}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    (!this.state.stats || !this.state.stats.length) ? (\n                      <Flex\n                        mt={3}\n                        mb={3}\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading stats...'}\n                        />\n                      </Flex>\n                    ) : this.state.stats.map( (statInfo,index) =>\n                      <StatsCard\n                        key={`stats_${index}`}\n                        cardProps={{\n                          width:[1,'49%']\n                        }}\n                        {...statInfo}\n                      />\n                    )\n                  }\n                </Flex>\n              )\n            }\n          </Box>\n        )\n      }\n      </Box>\n    );\n  }\n}\n\nexport default LpStaking;","import { Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass Base extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    const cardProps = {\n      p:3,\n      mb:2,\n      width:'49%',\n      ...this.props.cardProps\n    };\n\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n        title={this.props.title}\n        titleProps={{\n          fontSize:1,\n          fontWeight:3,\n        }}\n        titleParentProps={{\n          mt:0,\n          ml:0\n        }}\n        description={this.props.description}\n      >\n        {\n          this.props.value ? (\n            <Text\n              mt={1}\n              fontSize={[2,3]}\n              color={'statValue'}\n              {...this.props.textProps}\n            >\n              {this.props.value}\n            </Text>\n          ) : (this.props.children || null)\n        }\n      </DashboardCard>\n    );\n  }\n}\n\nexport default Base;\n","import ExtLink from '../ExtLink/ExtLink';\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport StatsCardSmall from '../StatsCardSmall/StatsCardSmall';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport { Flex, Box, Text, Icon, Input, Button } from \"rimble-ui\";\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass IdleStaking extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    maxApr:null,\n    infoBox:null,\n    globalStats:[],\n    lockPeriods:[\n      {\n        value:14,\n        type:'day',\n        label:'2 weeks'\n      },\n      {\n        value:1,\n        type:'month',\n        label:'1 month'\n      },\n      {\n        value:1,\n        type:'year',\n        label:'1 year'\n      },\n      {\n        value:4,\n        type:'year',\n        label:'4 years'\n      },\n    ],\n    lockedEnd:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    maxTime:126144000,// 4 * 365 * 86400  # 4 years\n    lockExpired:false,\n    statsLoaded:false,\n    tokenBalance:null,\n    contractInfo:null,\n    stakedBalance:null,\n    selectedToken:null,\n    rewardMultiplier:1,\n    claimedRewards:null,\n    accountingData:null,\n    increaseAction:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    poolTokenPrice:null,\n    lockPeriodInput:null,\n    buttonDisabled:false,\n    internalInfoBox:null,\n    availableTokens:null,\n    approveEnabled:false,\n    rewardTokenPrice:null,\n    contractApproved:false,\n    tokenWrapperProps:null,\n    distributionSpeed:null,\n    distributedRewards:null,\n    selectedLockPeriod:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    lockPeriodTimestamp:null,\n    transactionSucceeded:false,\n    showTokenWrapperEnabled:false,\n    lockEndDateIsMaxEndDate:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.setState({\n      selectedAction:'Lock'\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidMount(){\n    const feeDistributorConfig = this.props.tokenConfig.feeDistributor;\n    await this.props.initContract(feeDistributorConfig.name,feeDistributorConfig.address,feeDistributorConfig.abi);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const contractInfoChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    if (selectedActionChanged || accountChanged || contractApprovedChanged || tokenConfigChanged){\n      const increaseAction = selectedActionChanged ? null : this.state.increaseAction;\n      this.setState({\n        increaseAction,\n        tokenWrapperProps:null,\n        showTokenWrapperEnabled:false,\n      },() => {\n        this.updateData(selectedActionChanged);\n      });\n    }\n\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n\n    const lockPeriodChanged = prevState.lockPeriodTimestamp !== this.state.lockPeriodTimestamp;\n    const increaseActionChanged = prevState.increaseAction !== this.state.increaseAction;\n    if (lockPeriodChanged || increaseActionChanged || selectedActionChanged){\n      if (increaseActionChanged){\n        this.setState({\n          internalInfoBox:null\n        });\n      } else if (lockPeriodChanged){\n        this.calculateStkIDLEAmount();\n      }\n      this.checkButtonDisabled();\n    }\n  }\n\n  checkButtonDisabled(){\n    let buttonDisabled = false;\n    const minLockPeriod = this.state.lockPeriods[0];\n    const maxLockPeriod = Object.assign([],this.state.lockPeriods).pop();\n\n    let minDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000).add(minLockPeriod.value,minLockPeriod.type) : this.functionsUtil.strToMoment().add(minLockPeriod.value,minLockPeriod.type);\n    minDate = this.functionsUtil.strToMoment(minDate.format('YYYY-MM-DD'),'YYYY-MM-DD');\n\n    const mDate = this.functionsUtil.strToMoment(this.state.lockPeriodInput+' '+this.functionsUtil.strToMoment().format('HH:mm:ss'),'YYYY-MM-DD HH:mm:ss');\n    const maxDate = this.functionsUtil.strToMoment().add(maxLockPeriod.value,maxLockPeriod.type);\n    switch (this.state.selectedAction){\n      default:\n      case 'Lock':\n        buttonDisabled = mDate.isAfter(maxDate) || mDate.isSameOrBefore(minDate);\n      break;\n      case 'Increase Lock':\n        if (this.state.increaseAction === 'time'){\n          buttonDisabled = mDate.isAfter(maxDate) || mDate.isSameOrBefore(minDate);\n        }\n      break;\n    }\n\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  async changeInputCallback(inputValue=null){\n    inputValue = this.functionsUtil.BNify(inputValue);\n    this.setState({\n      inputValue\n    },() => {\n      this.calculateStkIDLEAmount();\n    });\n  }\n\n  async getMaxStakeTimestamp(){\n    const blockInfo = await this.functionsUtil.getBlockInfo();\n    let timestamp = parseInt(Date.now()/1000);\n    if (blockInfo){\n      timestamp = blockInfo.timestamp;\n    }\n    timestamp += this.state.maxTime;\n    return timestamp;\n  }\n\n  async calculateStkIDLEAmount(){\n    let internalInfoBox = null;\n    if (this.state.inputValue && this.functionsUtil.BNify(this.state.inputValue).gt(0) && this.state.lockPeriodTimestamp !== null){\n      switch (this.state.selectedAction){\n        case 'Lock':\n          const currTime = parseInt(Date.now()/1000);\n          const maxStakeTimestamp = await this.getMaxStakeTimestamp();\n          const maxDate = this.functionsUtil.strToMoment(maxStakeTimestamp*1000);\n          let endDate = this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000);\n          if (endDate.isAfter(maxDate)){\n            endDate = maxDate;\n          }\n          const endDateTime = parseInt(endDate._d.getTime()/1000)-currTime;\n          const maxDateTime = parseInt(maxDate._d.getTime()/1000)-currTime;\n          const stkIDLEAmount = this.state.inputValue.times(endDateTime).div(maxDateTime);\n\n          const percentage = stkIDLEAmount.div(this.state.inputValue).times(100);\n\n          // console.log(this.state.inputValue.toString(),endDate.format('YYYY-MM-DD HH:mm:ss'),maxDate.format('YYYY-MM-DD HH:mm:ss'),endDateTime,maxDateTime,stkIDLEAmount.toFixed());\n\n          let text = `By staking <strong>${this.state.inputValue.toFixed(4)} ${this.props.selectedToken}</strong> until <strong>${endDate.utc().format('YYYY-MM-DD HH:mm')} UTC</strong> you will get back <strong>${stkIDLEAmount.toFixed(4)} ${this.props.tokenConfig.contract.name}</strong> (${Math.ceil(percentage)}% of staking power).`;\n          if (Math.ceil(percentage)<100){\n            text += `<br />Stake your tokens for <strong>4 years</strong> to reach the maximum staking power.`;\n          }\n          text += `<br /><span style=\"color:${this.props.theme.colors.alert};font-size:14px\">Keep in mind that once you lock ${this.props.selectedToken} you cannot reverse the operation until the lock end date has been reached.</span>`;\n          internalInfoBox = {\n            text,\n            icon:'LockOutline',\n            iconProps:{\n              color:'cellText'\n            },\n          };\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      internalInfoBox\n    });\n  }\n\n  getIncreaseTimeParams(){\n    const _unlock_time = parseInt(this.state.lockPeriodTimestamp);\n    // console.log('getIncreaseTimeParams',_unlock_time);\n    return [_unlock_time];\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    const _value = this.functionsUtil.toBN(amount);\n    let _unlock_time = parseInt(this.state.lockPeriodTimestamp);\n    switch (this.state.selectedAction){\n      case 'Lock':\n        methodName = 'create_lock';\n        methodParams = [_value,_unlock_time];\n      break;\n      case 'Increase Lock':\n        methodName = 'increase_amount';\n        methodParams = [_value];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async loadStats(){\n\n    const stats = [];\n    const globalStats = [];\n    const statsLoaded = true;\n\n    let [\n      etherscanRewardsTxs,\n      totalSupply,\n      tokenTotalSupply,\n      claimableRewards,\n      lockedInfo,\n      tokenUserBalance,\n      claimable,\n      claimEvents,\n      // checkpointEvents,\n      depositEvents\n    ] = await Promise.all([\n      this.functionsUtil.getIdleStakingRewardsTxs(),\n      this.functionsUtil.genericContractCallCached(this.props.contractInfo.name,'supply'),\n      this.functionsUtil.genericContractCallCached(this.props.contractInfo.name, 'totalSupply'),\n      this.functionsUtil.getTokenBalance(this.props.contractInfo.rewardToken,this.props.tokenConfig.feeDistributor.address),\n      this.props.account ? this.functionsUtil.genericContractCall(this.props.contractInfo.name,'locked',[this.props.account]) : null,\n      this.props.account ? this.functionsUtil.getContractBalance(this.props.contractInfo.name,this.props.account) : this.functionsUtil.BNify(0),\n      this.props.account ? this.functionsUtil.genericContractCall(this.props.tokenConfig.feeDistributor.name,'claim',[this.props.account]) : this.functionsUtil.BNify(0),\n      this.functionsUtil.getContractEvents(this.props.tokenConfig.feeDistributor.name,'Claimed',{fromBlock: this.props.tokenConfig.feeDistributor.fromBlock, toBlock:'latest'}),\n      // this.functionsUtil.getContractEvents(this.props.tokenConfig.feeDistributor.name,'CheckpointToken',{fromBlock: this.props.tokenConfig.feeDistributor.fromBlock, toBlock:'latest'}),\n      this.props.account ? this.functionsUtil.getContractEvents(this.props.contractInfo.name,'Deposit',{fromBlock: this.props.contractInfo.fromBlock, toBlock:'latest',filter:{provider:this.props.account}}) : []\n    ]);\n\n    const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n\n    let distributedRewards = [];\n    let totalRewards = this.functionsUtil.BNify(0);\n    let totalRewardsDays = this.functionsUtil.BNify(0);\n\n    if (etherscanRewardsTxs && etherscanRewardsTxs.length){\n      totalRewardsDays = Math.abs(etherscanRewardsTxs[0].timeStamp-etherscanRewardsTxs[etherscanRewardsTxs.length-1].timeStamp)/86400;\n      distributedRewards = etherscanRewardsTxs.map( tx => {\n        const amount = this.functionsUtil.fixTokenDecimals(tx.value,rewardTokenConfig.decimals);\n        totalRewards = totalRewards.plus(amount);\n        return {\n          amount,\n          hash:tx.hash,\n          timeStamp:tx.timeStamp,\n          tokenName:tx.tokenSymbol,\n          date:this.functionsUtil.strToMoment(parseInt(tx.timeStamp)*1000).utc().format('YYYY-MM-DD HH:mm')+' UTC'\n        };\n      });\n    }\n\n    const claimedRewards = [];\n    let totalClaimedUser = this.functionsUtil.BNify(0);\n    if (claimEvents){\n      await this.functionsUtil.asyncForEach(claimEvents, async (e) => {\n        if (this.props.account && e.returnValues && e.returnValues.recipient && e.returnValues.recipient.toLowerCase() === this.props.account.toLowerCase()){\n          const blockInfo = await this.functionsUtil.getBlockInfo(e.blockNumber);\n          if (blockInfo){\n            const claimedAmount = this.functionsUtil.fixTokenDecimals(e.returnValues.amount,rewardTokenConfig.decimals);\n            totalClaimedUser = totalClaimedUser.plus(claimedAmount);\n            claimedRewards.push({\n              amount:claimedAmount,\n              hash:e.transactionHash,\n              tokenName:this.props.contractInfo.rewardToken,\n              date:this.functionsUtil.strToMoment(parseInt(blockInfo.timestamp)*1000).utc().format('YYYY-MM-DD HH:mm')+' UTC'\n            });\n          }\n        }\n      });\n    }\n\n    tokenUserBalance = this.functionsUtil.fixTokenDecimals(tokenUserBalance,this.props.contractInfo.decimals);\n\n    const totalDeposited = totalSupply ? this.functionsUtil.fixTokenDecimals(totalSupply,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const totalLockedFunds = totalSupply ? this.functionsUtil.formatMoney(totalDeposited,4)+' '+this.props.selectedToken : (this.state.stats.length ? this.state.stats[0].value : this.functionsUtil.formatMoney(totalDeposited,4)+' '+this.props.selectedToken);\n    stats.push({\n      title:'Total Locked Funds',\n      value:totalLockedFunds\n    });\n\n    tokenTotalSupply = tokenTotalSupply ? this.functionsUtil.fixTokenDecimals(tokenTotalSupply,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const stkTokenTotalSupply = tokenTotalSupply ? this.functionsUtil.formatMoney(tokenTotalSupply,4)+' '+this.props.contractInfo.name : (this.state.stats.length ? this.state.stats[1].value : this.functionsUtil.formatMoney(tokenTotalSupply,4)+' '+this.props.contractInfo.name);\n    stats.push({\n      title:`${this.props.contractInfo.name} Total Supply`,\n      value:stkTokenTotalSupply\n    });\n\n    const claimableRewardsFormatted = claimableRewards ? this.functionsUtil.formatMoney(claimableRewards,4)+' '+this.props.contractInfo.rewardToken : (this.state.stats.length ? this.state.stats[2].value : this.functionsUtil.formatMoney(claimableRewards,4)+' '+this.props.contractInfo.rewardToken);\n    stats.push({\n      title:'Claimable Rewards',\n      value:claimableRewardsFormatted\n    });\n\n    // const totalClaimed = claimEvents.reduce( (totalClaimed,event) => {\n    //   const claimedAmount = this.functionsUtil.fixTokenDecimals(event.returnValues.amount,rewardTokenConfig.decimals);\n    //   totalClaimed = totalClaimed.plus(claimedAmount);\n    //   return totalClaimed;\n    // },this.functionsUtil.BNify(0));\n\n    const totalRewardsFormatted = this.functionsUtil.formatMoney(totalRewards,4)+' '+this.props.contractInfo.rewardToken;\n    stats.push({\n      title:'Total Rewards',\n      value:totalRewardsFormatted\n    });\n\n    const maxApr = totalRewards.div(tokenTotalSupply).times(365.2425).div(totalRewardsDays);\n    stats.push({\n      title:'APR (1 year staking)',\n      value:maxApr.div(4).times(100).toFixed(2)+'%'\n    });\n    stats.push({\n      title:'APR (4 years staking)',\n      value:maxApr.times(100).toFixed(2)+'%'\n    });\n\n    const stakedBalance = lockedInfo && lockedInfo.amount ? this.functionsUtil.fixTokenDecimals(lockedInfo.amount,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const userDeposited = this.functionsUtil.formatMoney(stakedBalance,4);\n    globalStats.push({\n      title:'Total Deposited',\n      description:'Your total deposited amount',\n      value:userDeposited+' '+this.props.contractInfo.rewardToken,\n    });\n\n    const stakingShare = tokenUserBalance.div(tokenTotalSupply);\n    globalStats.push({\n      title:'Share',\n      value:`${stakingShare.times(100).toFixed(2)}%`,\n      description:'Your share of the total deposits',\n    });\n\n    globalStats.push({\n      title:`${this.props.contractInfo.name} balance`,\n      value:`${this.functionsUtil.formatMoney(tokenUserBalance,4)} ${this.props.contractInfo.name}`,\n    });\n    \n    claimable = claimable ? this.functionsUtil.fixTokenDecimals(claimable,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const currentRewards = this.functionsUtil.formatMoney(claimable,4);\n    globalStats.push({\n      title:'Claimable Rewards',\n      value:`${currentRewards} ${this.props.contractInfo.rewardToken}`,\n      // description:'Your claimable rewards'\n    });\n\n    const totalCollectedRewards = claimable.plus(totalClaimedUser);\n\n    let stakeStartTime = depositEvents ? depositEvents.reduce( (stakedTime,event) => {\n      const depositTimestamp = this.functionsUtil.BNify(event.returnValues.ts);\n      const depositValue = this.functionsUtil.fixTokenDecimals(event.returnValues.value,this.props.tokenConfig.decimals);\n      if (depositValue.gt(0)){\n        stakedTime = stakedTime.plus(depositValue.times(depositTimestamp));\n        // console.log(depositTimestamp.toString(),depositValue.toFixed(),stakedTime.toString());\n      }\n      return stakedTime;\n    },this.functionsUtil.BNify(0)) : this.functionsUtil.BNify(0);\n\n    // console.log('stakeStartTime',stakeStartTime,stakedBalance.toFixed());\n\n    stakeStartTime = stakedBalance.gt(0) ? Math.ceil(stakeStartTime.div(stakedBalance)) : 0;\n    // const latestCheckpoint = checkpointEvents.length ? checkpointEvents[checkpointEvents.length-1] : null;\n    // const latestDistribution = etherscanRewardsTxs[0];\n    // const latestDistributionTime = latestDistribution ? this.functionsUtil.BNify(latestDistribution.timeStamp) : this.functionsUtil.BNify(parseInt(Date.now()/1000));\n    // const latestDistributionTime = latestCheckpoint ? this.functionsUtil.BNify(latestCheckpoint.returnValues.time) : this.functionsUtil.BNify(parseInt(Date.now()/1000));\n    const currTime = parseInt(Date.now()/1000);\n    const stakePeriod = this.functionsUtil.BNify(currTime).minus(stakeStartTime);\n    const currentProfit = stakedBalance.gt(0) ? totalCollectedRewards.div(stakedBalance) : this.functionsUtil.BNify(0);\n    const weeksPerYear = 52.14;\n    const secondsPerWeek = 604800;\n    const stakePeriodWeeks = Math.max(1,Math.floor(stakePeriod.div(secondsPerWeek)));\n    const apr = stakePeriod.gt(0) ? currentProfit.times(weeksPerYear).div(stakePeriodWeeks).times(100) : this.functionsUtil.BNify(0);\n    \n    // console.log('APR',currTime,stakeStartTime,apr.toFixed(),currentProfit.toFixed(),stakePeriod.toFixed(),stakePeriodWeeks,totalCollectedRewards.toFixed(),stakedBalance.toFixed());\n\n    globalStats.push({\n      title:'APR',\n      value:`${apr.toFixed(2)}%`,\n      description:'APR is based on your Claimable Rewards and Total Deposited'\n    });\n\n    const lockEndDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000).utc().format('YYYY/MM/DD HH:mm') : '';\n    globalStats.push({\n      value:lockEndDate,\n      title:'Lock End Date (UTC)',\n      description:'Ending date of your Lock'\n    });\n\n    this.setState({\n      stats,\n      maxApr,\n      claimable,\n      globalStats,\n      statsLoaded,\n      stakedBalance,\n      claimedRewards,\n      distributedRewards\n    });\n  }\n\n  async contractApprovedCallback(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  setIncreaseAction(increaseAction){\n    this.setState({\n      increaseAction\n    });\n  }\n\n  async changeLockPeriodInput(e){\n    const selectedLockPeriod = null;\n    const lockPeriodInput = e.target.value;\n    const currDate = this.functionsUtil.strToMoment();\n    const mDate = this.functionsUtil.strToMoment(lockPeriodInput+' '+currDate.format('HH:mm:ss'),'YYYY-MM-DD HH:mm:ss').add(1,'second');\n    if (mDate.isValid()){\n      let lockPeriodTimestamp = parseInt(mDate._d.getTime()/1000);\n      // Check if lockPeriodTimestamp > maxStakeTimestamp\n      const maxStakeTimestamp = await this.getMaxStakeTimestamp();\n      if (lockPeriodTimestamp>maxStakeTimestamp){\n        lockPeriodTimestamp = maxStakeTimestamp;\n      }\n\n      this.setState({\n        lockPeriodInput,\n        selectedLockPeriod,\n        lockPeriodTimestamp\n      },() => {\n        this.checkButtonDisabled()\n      });\n    }\n  }\n\n  async selectLockPeriod(selectedLockPeriod){\n    const minDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000) : this.functionsUtil.strToMoment();\n    const mDate = minDate.add(selectedLockPeriod.value,selectedLockPeriod.type).add(1,'second');\n\n    const lockPeriodInput = mDate.format('YYYY-MM-DD');\n    let lockPeriodTimestamp = parseInt(mDate._d.getTime()/1000);\n\n    // Check if lockPeriodTimestamp > maxStakeTimestamp\n    const maxStakeTimestamp = await this.getMaxStakeTimestamp();\n    if (lockPeriodTimestamp>maxStakeTimestamp){\n      lockPeriodTimestamp = maxStakeTimestamp;\n    }\n\n    this.setState({\n      lockPeriodInput,\n      selectedLockPeriod,\n      lockPeriodTimestamp\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    // console.log('transactionSucceeded',tx);\n    let infoBox = null;\n    let internalInfoBox = null;\n    switch (this.state.selectedAction){\n      case 'Lock':\n        const lockedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const lockedTokens = lockedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(lockedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully locked <strong>${lockedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Increase Lock':\n        switch (this.state.increaseAction){\n          case 'time':\n            internalInfoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully increased the lock until <strong>${this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000).utc().format('YYYY/MM/DD HH:mm')} UTC</strong>`\n            }\n          break;\n          case 'amount':\n            const increaseAmountTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            const increaseTokens = increaseAmountTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(increaseAmountTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n            internalInfoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully increased the lock by <strong>${increaseTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n            }\n          break;\n          default:\n          break;\n        }\n      break;\n      case 'Withdraw':\n        const unstakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() ) : null;\n        const unstakedTokens = unstakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(unstakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully withdrawn <strong>${unstakedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Claim':\n        const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n        const receivedRewardsLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => (log.address.toLowerCase() === rewardTokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) )) ) : null;\n        const receivedRewards = receivedRewardsLog ? this.functionsUtil.fixTokenDecimals(parseInt(receivedRewardsLog.data,16),rewardTokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully claimed <strong>${receivedRewards.toFixed(4)} ${this.props.contractInfo.rewardToken}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    const statsLoaded = false;\n    const transactionSucceeded = true;\n\n    this.setState({\n      infoBox,\n      statsLoaded,\n      internalInfoBox,\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(selectedActionChanged=false){\n    const newState = {};\n    const [\n      tokenBalance,\n      lockedEnd,\n    ] = await Promise.all([\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'locked__end',[this.props.account])\n    ]);\n\n    newState.lockedEnd = lockedEnd && parseInt(lockedEnd)>0 ? parseInt(lockedEnd) : null;\n    newState.lockExpired = newState.lockedEnd && newState.lockedEnd<=parseInt(Date.now()/1000);\n    newState.tokenBalance = !this.functionsUtil.BNify(tokenBalance).isNaN() ? this.functionsUtil.BNify(tokenBalance) : this.functionsUtil.BNify(0);\n\n    let selectedAction = this.state.selectedAction;\n\n    if (selectedAction==='Withdraw' && !newState.lockExpired){\n      selectedAction = 'Lock';\n      newState.selectedAction = selectedAction;\n    }\n\n    // Select Increase if already created a lock\n    if (newState.lockedEnd && selectedAction==='Lock'){\n      selectedAction = 'Increase Lock';\n      newState.increaseAction = 'time';\n      newState.selectedAction = selectedAction;\n    } else if (selectedAction==='Increase Lock' && !newState.increaseAction && !this.state.increaseAction){\n      newState.increaseAction = 'time';\n    }\n\n    // Select Withdraw if the lock has expired\n    if (selectedAction==='Increase Lock' && newState.lockExpired){\n      selectedAction = 'Withdraw';\n      newState.selectedAction = selectedAction;\n    }\n\n    switch (selectedAction){\n      case 'Lock':\n        newState.permitEnabled = false;\n        newState.approveEnabled = true;\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveDescription = `Approve the Staking contract to stake your ${this.props.selectedToken} tokens`;\n      break;\n      case 'Increase Lock':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = newState.tokenBalance;\n        newState.lockPeriodInput = this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD');\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = this.functionsUtil.fixTokenDecimals(newState.stakedBalance,this.props.tokenConfig.decimals);\n      break;\n      default:\n      break;\n    }\n\n    if (selectedActionChanged){\n      newState.infoBox = null;\n      newState.internalInfoBox = null;\n      newState.transactionSucceeded = false;\n    }\n\n    const maxDateTimestamp = await this.getMaxStakeTimestamp();\n    const maxDate = this.functionsUtil.strToMoment(maxDateTimestamp*1000).format('YYYY-MM-DD');\n    newState.lockEndDateIsMaxEndDate = newState.lockedEnd ? this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD')===maxDate : false;\n\n    // console.log('lockEndDateIsMaxEndDate',newState.lockEndDateIsMaxEndDate,maxDate,this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD'));\n\n    this.setState(newState,() => {\n      this.loadStats();\n    });\n  }\n\n  render() {\n\n    const isLock = this.state.selectedAction === 'Lock';\n    const isStats = this.state.selectedAction === 'Stats';\n    const isClaim = this.state.selectedAction === 'Claim';\n    const isUnstake = this.state.selectedAction === 'Withdraw';\n    const isIncrease = this.state.selectedAction === 'Increase Lock';\n    const txAction = this.state.selectedAction;\n    const canIncrease = !this.state.lockExpired;\n\n    return (\n      <Box\n        width={1}\n      >\n      {\n        this.props.tokenConfig && this.props.tokenConfig.poolLink && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Token link:\n            </Text>\n            <ExtLink\n              mt={1}\n              color={'link'}\n              hoverColor={'link'}\n              href={this.props.tokenConfig.poolLink}\n            >\n              <Text\n                color={'link'}\n                style={{\n                  maxWidth:'100%',\n                  overflow:'hidden',\n                  whiteSpace:'nowrap',\n                  textOverflow:'ellipsis'\n                }}\n              >\n                {this.props.tokenConfig.poolLink}\n              </Text>\n            </ExtLink>\n          </Box>\n        )\n      }\n      {\n        this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) && this.state.globalStats.length>0 && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Your Stats:\n            </Text>\n            <Flex\n              mt={1}\n              mb={1}\n              width={1}\n              style={{\n                flexBasis:'0',\n                flex:'1 1 0px',\n                flexWrap:'wrap'\n              }}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.globalStats.map( (statInfo,index) =>\n                  <StatsCardSmall\n                    key={`globalStats_${index}`}\n                    cardProps={{\n                      mb:2,\n                      width:['49%','33%'],\n                      // mr:[0,index<this.state.globalStats.length-1 ? 1 : 0]\n                    }}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    {...statInfo}\n                  />\n                )\n              }\n            </Flex>\n          </Box>\n        )\n      }\n      {\n        this.props.selectedToken && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Select Action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.lockedEnd === null ? (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isLock ? 2 : 0\n                    }}\n                    caption={'Lock'}\n                    width={[1,'32%']}\n                    imageSrc={'images/lock.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'stake LP Tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isLock}\n                    handleClick={ e => this.setAction('Lock') }\n                  />\n                ) : !this.state.lockExpired ? (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isIncrease ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    isActive={isIncrease}\n                    caption={'Increase Lock'}\n                    imageSrc={'images/lock.svg'}\n                    isMobile={this.props.isMobile}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '54px'\n                    }}\n                    handleClick={ e => this.setAction('Increase Lock') }\n                  />\n                ) : (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isUnstake ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    caption={'Withdraw'}\n                    imageSrc={'images/upload.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'withdraw LP tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isUnstake}\n                    handleClick={ e => this.setAction('Withdraw') }\n                  />\n                )\n              }\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isClaim ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Claim'}\n                imageSrc={'images/reward.png'}\n                isMobile={this.props.isMobile}\n                // subcaption={'withdraw LP tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isClaim}\n                handleClick={ e => this.setAction('Claim') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStats ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stats'}\n                imageSrc={'images/stats.svg'}\n                isMobile={this.props.isMobile}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStats}\n                handleClick={ e => this.setAction('Stats') }\n              />\n            </Flex>\n            {\n              this.state.internalInfoBox && (\n                <IconBox\n                  cardProps={{\n                    mt:1,\n                    mb:3\n                  }}\n                  {...this.state.internalInfoBox}\n                />\n              )\n            }\n            {\n              isStats ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  width={1}\n                  style={{\n                    flexWrap:'wrap'\n                  }}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    (!this.state.stats || !this.state.stats.length) ? (\n                      <Flex\n                        mt={3}\n                        mb={3}\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading stats...'}\n                        />\n                      </Flex>\n                    ) : this.state.stats.map( (statInfo,index) =>\n                      <StatsCardSmall\n                        key={`stats_${index}`}\n                        cardProps={{\n                          width:[1,'49%']\n                        }}\n                        {...statInfo}\n                      />\n                    )\n                  }\n                  <Text\n                    mb={1}\n                  >\n                    Distributed Rewards:\n                  </Text>\n                  <Flex\n                    mb={3}\n                    width={1}\n                    justifyContent={'center'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        pt:2,\n                        pb:3,\n                        px:3,\n                        width:1,\n                        display:'flex',\n                        justifyContent:'center'\n                      }}\n                      isActive={false}\n                      isInteractive={false}\n                    >\n                      {\n                        this.state.distributedRewards && this.state.distributedRewards.length ? (\n                          <Box\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              pt={0}\n                              pb={1}\n                              width={1}\n                              flexDirection={'row'}\n                              borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.45 : 0.4}\n                              >\n                                Date\n                              </Text>\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.4 : 0.3}\n                                textAlign={this.props.isMobile ? 'right' : 'left'}\n                              >\n                                Amount\n                              </Text>\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.15 : 0.3}\n                              >\n                                { this.props.isMobile ? '' : 'Hash' }\n                              </Text>\n                            </Flex>\n                            <Box\n                              flexDirection={'column'}\n                              alignItems={'flex-start'}\n                              overflow={['visible','scroll']}\n                              maxHeight={['initial','500px']}\n                            >\n                              {\n                                this.state.distributedRewards.map( (reward,index) => (\n                                  <Flex\n                                    width={1}\n                                    py={[2,1]}\n                                    flexDirection={'row'}\n                                    key={`rewards_${index}`}\n                                    borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                  >\n                                    <Text\n                                      fontWeight={2}\n                                      color={'statValue'}\n                                      fontSize={this.props.isMobile ? 1 : 2}\n                                      width={this.props.isMobile ? 0.45 : 0.4}\n                                    >\n                                      {reward.date}\n                                    </Text>\n                                    <Text\n                                      fontWeight={2}\n                                      color={'statValue'}\n                                      fontSize={this.props.isMobile ? 1 : 2}\n                                      width={this.props.isMobile ? 0.4 : 0.3}\n                                      textAlign={this.props.isMobile ? 'right' : 'left'}\n                                    >\n                                      {reward.amount.toFixed(4)} {reward.tokenName}\n                                    </Text>\n                                    <Flex\n                                      width={this.props.isMobile ? 0.15 : 0.13}\n                                      justifyContent={this.props.isMobile ? 'flex-end' : 'flex-start'}\n                                    >\n                                      <ExtLink\n                                        color={'link'}\n                                        hoverColor={'link'}\n                                        href={this.functionsUtil.getEtherscanTransactionUrl(reward.hash)}\n                                      >\n                                        <Flex\n                                          alignItems={'center'}\n                                          flexDirection={'row'}\n                                        >\n                                          {\n                                            !this.props.isMobile && (\n                                              <Text\n                                                fontSize={2}\n                                                fontWeight={2}\n                                                color={'link'}\n                                              >\n                                                {this.functionsUtil.shortenHash(reward.hash)}\n                                              </Text>\n                                            )\n                                          }\n                                          <Icon\n                                            ml={1}\n                                            color={'link'}\n                                            name={'OpenInNew'}\n                                            size={this.props.isMobile ? '1.4em' : '1.2em'}\n                                          />\n                                        </Flex>\n                                      </ExtLink>\n                                    </Flex>\n                                  </Flex>\n                                ))\n                              }\n                            </Box>\n                          </Box>\n                        ) : (\n                          <Text\n                            fontSize={2}\n                            color={'statValue'}\n                          >\n                            No reward distributed yet.\n                          </Text>\n                        )\n                      }\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n              ) : (this.props.account && this.props.tokenConfig && this.state.balanceProp && this.state.statsLoaded && this.props.contractInfo) ? (\n                <Box\n                  mt={1}\n                  width={1}\n                  mb={[4,3]}\n                >\n                  {\n                    (isIncrease && canIncrease) && (\n                      <Box\n                        mb={2}\n                        width={1}\n                      >\n                        <Text mb={1}>\n                          Choose increase value:\n                        </Text>\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                        >\n                          <CardIconButton\n                            {...this.props}\n                            textProps={{\n                              fontSize:[1,2]\n                            }}\n                            cardProps={{\n                              px:3,\n                              py:2,\n                              width:0.49\n                            }}\n                            icon={'AccessTime'}\n                            iconColor={'deposit'}\n                            iconBgColor={'#ced6ff'}\n                            isActive={ this.state.increaseAction === 'time' }\n                            handleClick={ e => this.setIncreaseAction('time') }\n                            text={this.props.isMobile ? 'Time' : 'Increase Time'}\n                          />\n                          <CardIconButton\n                            {...this.props}\n                            textProps={{\n                              fontSize:[1,2]\n                            }}\n                            cardProps={{\n                              px:3,\n                              py:2,\n                              width:0.49\n                            }}\n                            icon={'AttachMoney'}\n                            iconColor={'redeem'}\n                            iconBgColor={'#ceeff6'}\n                            isActive={ this.state.increaseAction === 'amount' }\n                            handleClick={ e => this.setIncreaseAction('amount') }\n                            text={this.props.isMobile ? 'Amount' : 'Increase Amount'}\n                          />\n                        </Flex>\n                      </Box>\n                    )\n                  }\n                  {\n                    ((isLock && this.state.balanceProp && this.state.contractApproved && this.state.balanceProp.gt(0)) || (isIncrease && canIncrease)) && (\n                      <Box\n                        width={1}\n                      > \n                        {\n                          (isLock || this.state.increaseAction === 'time') && (\n                            <Box\n                              width={1}\n                            >\n                              <Text mb={1}>\n                                Choose lock period:\n                              </Text>\n                              {\n                                !this.state.lockEndDateIsMaxEndDate ? (\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    justifyContent={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Input\n                                      mb={2}\n                                      width={1}\n                                      type={\"date\"}\n                                      required={true}\n                                      height={'3.4em'}\n                                      borderRadius={2}\n                                      fontWeight={500}\n                                      borderColor={'cardBorder'}\n                                      backgroundColor={'cardBg'}\n                                      boxShadow={'none !important'}\n                                      value={this.state.lockPeriodInput || ''}\n                                      onChange={this.changeLockPeriodInput.bind(this)}\n                                      border={`1px solid ${this.props.theme.colors.divider}`}\n                                    />\n                                    <Flex\n                                      mb={3}\n                                      width={1}\n                                      alignItems={'center'}\n                                      flexDirection={'row'}\n                                      justifyContent={'space-between'}\n                                    >\n                                      {\n                                        this.state.lockPeriods.map( (p,index) => {\n                                          const isActive = this.state.selectedLockPeriod ? this.state.selectedLockPeriod.value===p.value && this.state.selectedLockPeriod.type === p.type : false;\n                                          return (\n                                            <DashboardCard\n                                              cardProps={{\n                                                p:2,\n                                                width:0.24,\n                                              }}\n                                              isActive={isActive}\n                                              isInteractive={true}\n                                              key={`lockPeriod_${index}`}\n                                              handleClick={e => this.selectLockPeriod(p)}\n                                            >\n                                              <Text \n                                                fontWeight={3}\n                                                fontSize={[1,2]}\n                                                textAlign={'center'}\n                                                color={isActive ? 'copyColor' : 'cellText'}\n                                              >\n                                                {p.label}\n                                              </Text>\n                                            </DashboardCard>\n                                          );\n                                        })\n                                      }\n                                    </Flex>\n                                    {\n                                      isIncrease && (\n                                        <ExecuteTransaction\n                                          params={[]}\n                                          {...this.props}\n                                          parentProps={{\n                                            width:1,\n                                            alignItems:'center',\n                                            justifyContent:'center'\n                                          }}\n                                          Component={Button}\n                                          componentProps={{\n                                            fontSize:3,\n                                            fontWeight:3,\n                                            size:'medium',\n                                            width:[1,1/2],\n                                            borderRadius:4,\n                                            mainColor:'deposit',\n                                            value:'Increase Time',\n                                            disabled:this.state.buttonDisabled\n                                          }}\n                                          action={'Increase Time'}\n                                          methodName={'increase_unlock_time'}\n                                          contractName={this.props.contractInfo.name}\n                                          callback={this.transactionSucceeded.bind(this)}\n                                          getTransactionParams={this.getIncreaseTimeParams.bind(this)}\n                                        />\n                                      )\n                                    }\n                                  </Flex>\n                                ) : (\n                                  <IconBox\n                                    cardProps={{\n                                      mt:1,\n                                      mb:3\n                                    }}\n                                    icon={'Warning'}\n                                    iconProps={{\n                                      color:'cellText'\n                                    }}\n                                    text={`Your tokens are locked for the maxumum allowed period.`}\n                                  />\n                                )\n                              }\n                            </Box>\n                          )\n                        }\n                      </Box>\n                    )\n                  }\n                  {\n                    (isLock || this.state.increaseAction==='amount') ? (\n                      <SendTxWithBalance\n                        error={null}\n                        {...this.props}\n                        action={txAction}\n                        steps={this.state.steps}\n                        infoBox={this.state.infoBox}\n                        tokenConfig={this.props.tokenConfig}\n                        tokenBalance={this.state.balanceProp}\n                        contractInfo={this.props.contractInfo}\n                        permitEnabled={this.state.permitEnabled}\n                        buttonDisabled={this.state.buttonDisabled}\n                        approveEnabled={this.state.approveEnabled}\n                        callback={this.transactionSucceeded.bind(this)}\n                        approveDescription={this.state.approveDescription}\n                        balanceSelectorInfo={this.state.balanceSelectorInfo}\n                        changeInputCallback={this.changeInputCallback.bind(this)}\n                        contractApproved={this.contractApprovedCallback.bind(this)}\n                        getTransactionParams={this.getTransactionParams.bind(this)}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                (isLock || isIncrease) ? (\n                                  `You don't have any ${this.props.selectedToken} in your wallet.`\n                                ) : isUnstake && (\n                                  `You don't have any staked ${this.props.selectedToken} to withdraw.`\n                                )\n                              }\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </SendTxWithBalance>\n                    ) : (isIncrease && !canIncrease) ? (\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'LockOpen'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.3em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            You cannot increase an expired lock, please Withdraw.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    ) : isUnstake ? (\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        {\n                          this.state.lockExpired ? (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                name={'LockOpen'}\n                                color={'cellText'}\n                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              />\n                              <Text\n                                mt={1}\n                                mb={3}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                The lock has expired, you can withdraw your {this.props.selectedToken}.\n                              </Text>\n                              <ExecuteTransaction\n                                params={[]}\n                                {...this.props}\n                                Component={Button}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                componentProps={{\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  size:'medium',\n                                  width:[1,1/2],\n                                  borderRadius:4,\n                                  mainColor:'redeem',\n                                  value:'Withdraw',\n                                }}\n                                action={'Withdraw'}\n                                methodName={'withdraw'}\n                                contractName={this.props.contractInfo.name}\n                                callback={this.transactionSucceeded.bind(this)}\n                              />\n                            </Flex>\n                          ) : (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                name={'LockOpen'}\n                                color={'cellText'}\n                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              />\n                              <Text\n                                mt={1}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                The lock is not expired yet, please wait until {this.functionsUtil.strToMoment(this.state.lockedEnd*1000).utc().format('YYYY/MM/DD HH:mm')} UTC to withdraw your {this.props.selectedToken}.\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    ) : isClaim && (\n                      <Flex\n                        width={1}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mb:1\n                          }}\n                        >\n                          {\n                            (this.state.claimable && this.state.claimable.gt(0)) ? (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  color={'cellText'}\n                                  name={'MonetizationOn'}\n                                  size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                />\n                                <Text\n                                  mt={1}\n                                  mb={3}\n                                  fontSize={[2,3]}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You can claim <strong>{this.state.claimable.toFixed(8)} {this.props.contractInfo.rewardToken}</strong>.\n                                </Text>\n                                <ExecuteTransaction\n                                  params={[]}\n                                  {...this.props}\n                                  Component={Button}\n                                  parentProps={{\n                                    width:1,\n                                    alignItems:'center',\n                                    justifyContent:'center'\n                                  }}\n                                  componentProps={{\n                                    fontSize:3,\n                                    fontWeight:3,\n                                    size:'medium',\n                                    width:[1,1/3],\n                                    value:'Claim',\n                                    borderRadius:4,\n                                    mainColor:'redeem',\n                                  }}\n                                  action={'Claim'}\n                                  methodName={'claim'}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractName={this.props.tokenConfig.feeDistributor.name}\n                                />\n                              </Flex>\n                            ) : (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                  size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                />\n                                <Text\n                                  mt={1}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You don't have rewards to Claim yet.\n                                </Text>\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                        <Text\n                          mb={1}\n                        >\n                          Claimed Rewards:\n                        </Text>\n                        <Flex\n                          mb={3}\n                          width={1}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <DashboardCard\n                            cardProps={{\n                              pt:2,\n                              pb:3,\n                              px:3,\n                              width:1,\n                              display:'flex',\n                              alignItems:'center',\n                              justifyContent:'center'\n                            }}\n                            isActive={false}\n                            isInteractive={false}\n                          >\n                            {\n                              this.state.claimedRewards && this.state.claimedRewards.length ? (\n                                <Flex\n                                  width={1}\n                                  flexDirection={'column'}\n                                >\n                                  <Flex\n                                    pt={0}\n                                    pb={1}\n                                    width={1}\n                                    flexDirection={'row'}\n                                    borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                  >\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      width={this.props.isMobile ? 0.5 : 0.4}\n                                    >\n                                      Date\n                                    </Text>\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      width={this.props.isMobile ? 0.5 : 0.3}\n                                      textAlign={this.props.isMobile ? 'right' : 'left'}\n                                    >\n                                      Amount\n                                    </Text>\n                                    {\n                                      !this.props.isMobile && (\n                                        <Text\n                                          width={0.3}\n                                          fontSize={1}\n                                          fontWeight={3}\n                                        >\n                                          Hash\n                                        </Text>\n                                      )\n                                    }\n                                  </Flex>\n                                  {\n                                    this.state.claimedRewards.map( (claim,index) => (\n                                      <Flex\n                                        py={1}\n                                        width={1}\n                                        flexDirection={'row'}\n                                        key={`claim_${index}`}\n                                        borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                      >\n                                        <Text\n                                          fontWeight={2}\n                                          color={'statValue'}\n                                          fontSize={this.props.isMobile ? 1 : 2}\n                                          width={this.props.isMobile ? 0.5 : 0.4}\n                                        >\n                                          {claim.date}\n                                        </Text>\n                                        <Text\n                                          fontWeight={2}\n                                          color={'statValue'}\n                                          fontSize={this.props.isMobile ? 1 : 2}\n                                          width={this.props.isMobile ? 0.5 : 0.3}\n                                          textAlign={this.props.isMobile ? 'right' : 'left'}\n                                        >\n                                          {claim.amount.toFixed(4)} {claim.tokenName}\n                                        </Text>\n                                        {\n                                          !this.props.isMobile && (\n                                            <ExtLink\n                                              width={0.3}\n                                              color={'link'}\n                                              hoverColor={'link'}\n                                              href={this.functionsUtil.getEtherscanTransactionUrl(claim.hash)}\n                                            >\n                                              <Flex\n                                                alignItems={'center'}\n                                                flexDirection={'row'}\n                                              >\n                                                <Text\n                                                  fontSize={2}\n                                                  fontWeight={2}\n                                                  color={'link'}\n                                                >\n                                                  {this.functionsUtil.shortenHash(claim.hash)}\n                                                </Text>\n                                                <Icon\n                                                  ml={1}\n                                                  size={'1.2em'}\n                                                  color={'link'}\n                                                  name={'OpenInNew'}\n                                                />\n                                              </Flex>\n                                            </ExtLink>\n                                          )\n                                        }\n                                      </Flex>\n                                    ))\n                                  }\n                                </Flex>\n                              ) : (\n                                <Text\n                                  fontSize={2}\n                                  color={'statValue'}\n                                >\n                                  No reward claimed yet.\n                                </Text>\n                              )\n                            }\n                          </DashboardCard>\n                        </Flex>\n                      </Flex>\n                    )\n                  }\n                </Box>\n              ) : !this.props.account ? (\n                <ConnectBox\n                  cardProps={{\n                    mt:2\n                  }}\n                  {...this.props}\n                />\n              ) : (\n                <Flex\n                  mt={3}\n                  mb={3}\n                  width={1}\n                >\n                  <FlexLoader\n                    flexProps={{\n                      flexDirection:'row'\n                    }}\n                    loaderProps={{\n                      size:'30px'\n                    }}\n                    textProps={{\n                      ml:2\n                    }}\n                    text={'Loading info...'}\n                  />\n                </Flex>\n              )\n            }\n          </Box>\n        )\n      }\n      </Box>\n    );\n  }\n}\n\nexport default IdleStaking;","import ExtLink from '../ExtLink/ExtLink';\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n// import NXMaster from '../abis/nexus/NXMaster.json';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ButtonLoader from '../ButtonLoader/ButtonLoader';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport { Flex, Box, Text, Input, Link, Progress, Button, Icon, Tooltip } from \"rimble-ui\";\n\nclass NexusMutual extends Component {\n\n  state = {\n    step:1,\n    quote:null,\n    steps:{\n      1:'Get Quote',\n      2:'Buy Cover'\n    },\n    periodOptions:{\n      30:{\n        label:'30d'\n      },\n      60:{\n        label:'60d'\n      },\n      90:{\n        label:'90d'\n      },\n      365:{\n        label:'1y'\n      }\n    },\n    coverId:null,\n    claimId:null,\n    capacity:null,\n    loading:false,\n    coverCost:null,\n    amountValue:'',\n    periodValue:'',\n    yearlyCost:null,\n    maxCapacity:null,\n    amountValid:true,\n    periodValid:true,\n    tokenConfig:null,\n    tokenBalance:null,\n    selectedToken:null,\n    claimableCovers:[],\n    tokenApproved:false,\n    selectedPeriod:null,\n    maxPriceWithFee:null,\n    transactionParams:[],\n    transactionValue:null,\n    yieldTokenBalance:null,\n    selectedUnderlying:null,\n    selectedAction:'deposit',\n    yieldTokenApproved:false,\n    claimButtonDisabled:false,\n    selectedCoverToClaim:null,\n    defaultClaimableCover:null,\n    selectedUnderlyingConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadContracts();\n  }\n\n  async loadContracts(){\n    const claimableCovers = [];\n    const nexusMutualCoverages = await this.functionsUtil.getNexusMutualCoverages(this.props.account);\n    nexusMutualCoverages.forEach( coverage => {\n      if (coverage.incident){\n        claimableCovers.push(coverage);\n      }\n    });\n\n    const validClaimableCoverFromParam = this.props.urlParams.param3 ? claimableCovers.find( cover => parseInt(cover.value) === parseInt(this.props.urlParams.param3) ) : null;\n\n    const defaultClaimableCover = claimableCovers.length>0 ? claimableCovers[0] : null;\n    const selectedCoverToClaim = validClaimableCoverFromParam ? validClaimableCoverFromParam : defaultClaimableCover || null;\n\n    this.setState({\n      claimableCovers,\n      selectedCoverToClaim,\n      defaultClaimableCover\n    });\n\n    const selectedAction = ['deposit','claim'].includes(this.props.urlParams.param2) ? this.props.urlParams.param2 : this.state.selectedAction;\n    const paramIsValidToken = this.props.urlParams.param3 && Object.keys(this.props.toolProps.availableTokens).includes(this.props.urlParams.param3);\n    const selectedToken = paramIsValidToken ? this.props.urlParams.param3 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    this.setSelectedAction(selectedAction);\n    this.changeSelectedToken(selectedToken);\n    // console.log('coverBoughtEvents',coverBoughtEvents,'claimSubmittedEvents',claimSubmittedEvents,'claimableCovers',claimableCovers);\n  }\n\n  async getPoolCapacity(selectedUnderlying,tokenConfig){\n    const requiredNetwork = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    const baseEndpoint = this.functionsUtil.getGlobalConfig(['network','providers','nexus','endpoints',requiredNetwork]);\n    const response = await this.functionsUtil.makeRequest(`${baseEndpoint}contracts/${tokenConfig.address}/capacity`);\n    if (response && response.data){\n      const capacity = response.data;\n      // console.log('getPoolCapacity',capacity);\n      const maxCapacity = capacity && capacity[`capacity${selectedUnderlying}`] ? this.functionsUtil.fixTokenDecimals(capacity[`capacity${selectedUnderlying}`],tokenConfig.decimals) : this.functionsUtil.BNify(0);\n      return maxCapacity;\n    }\n    return false;\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const selectedUnderlyingChanged = prevState.selectedUnderlying !== this.state.selectedUnderlying;\n    if (selectedTokenChanged || selectedUnderlyingChanged){\n      this.loadTokenData();\n    }\n  }\n\n  async loadTokenData(){\n\n    const isETH = this.state.selectedToken === 'ETH';\n    const selectedUnderlyingConfig = this.state.tokenConfig.underlying[this.state.selectedUnderlying];\n\n    // Init Underlying Contract\n    await Promise.all([\n      this.props.initContract(this.state.tokenConfig.token, this.state.tokenConfig.realAddress, this.state.tokenConfig.abi),\n      this.props.initContract(selectedUnderlyingConfig.name, selectedUnderlyingConfig.address, selectedUnderlyingConfig.abi)\n    ]);\n\n    let [\n      maxCapacity,\n      yieldTokenBalance,\n      yieldTokenApproved,\n      tokenApproved,\n      tokenBalance\n    ] = await Promise.all([\n      this.getPoolCapacity(this.state.selectedUnderlying,this.state.tokenConfig),\n      this.functionsUtil.getTokenBalance(this.state.tokenConfig.token,this.props.account),\n      this.functionsUtil.checkTokenApproved(this.state.selectedToken,this.props.contractInfo.address,this.props.account),\n      this.functionsUtil.checkTokenApproved(selectedUnderlyingConfig.name,this.props.contractInfo.address,this.props.account),\n      isETH ? this.functionsUtil.getETHBalance(this.props.account,false) : this.functionsUtil.getTokenBalance(selectedUnderlyingConfig.name,this.props.account,false),\n    ]);\n\n    tokenBalance = tokenBalance || this.functionsUtil.BNify(0);\n    yieldTokenBalance = yieldTokenBalance || this.functionsUtil.BNify(0);\n\n    this.setState({\n      maxCapacity,\n      tokenBalance,\n      tokenApproved,\n      yieldTokenBalance,\n      yieldTokenApproved,\n      selectedUnderlyingConfig\n    });\n  }\n\n  async changeSelectedToken(selectedToken){\n    const periodValue = '';\n    const amountValue = '';\n    const tokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const selectedUnderlying = Object.keys(tokenConfig.underlying)[0];\n\n    this.setState({\n      amountValue,\n      periodValue,\n      tokenConfig,\n      selectedToken,\n      selectedUnderlying\n    });\n  }\n\n  changeSelectedUnderlying(selectedUnderlying){\n    this.setState({\n      selectedUnderlying\n    });\n  }\n\n  setMaxCoverAmount(){\n    const amountValue = this.state.maxCapacity.toFixed();\n    this.changeAmount({\n      target:{\n        value:amountValue\n      }\n    });\n  }\n\n  changeAmount = (e) => {\n    const amountValue = e.target.value.length && !isNaN(e.target.value) ? Math.floor(e.target.value) : '';\n    const amountValid = this.functionsUtil.BNify(amountValue).gt(0) && this.functionsUtil.BNify(amountValue).lte(this.state.maxCapacity);\n    this.setState({\n      amountValue,\n      amountValid\n    });\n  }\n\n  changePeriod = (e) => {\n    const periodValue = e.target.value.length && !isNaN(e.target.value) ? e.target.value : '';\n    const periodValid = parseInt(periodValue)>=30 && parseInt(periodValue)<=365;\n    this.setState({\n      periodValue,\n      periodValid,\n      selectedPeriod:null\n    });\n  }\n\n  selectPeriod = (selectedPeriod) => {\n    this.changePeriod({\n      target:{\n        value:selectedPeriod\n      }\n    });\n  }\n\n  async getQuote() {\n\n    this.setState({\n      loading:true\n    });\n\n    // Setup your cover data.\n    const coverData = {\n      period: this.state.periodValue, // days\n      coverAmount: this.state.amountValue, // ETH in units not wei\n      currency: this.state.selectedUnderlying,\n      contractAddress: this.state.tokenConfig.address, // the contract you will be buying cover for\n      asset: this.state.tokenConfig.underlying[this.state.selectedUnderlying].address\n    };\n\n    // URL to request a quote for.\n    // const quoteURL = 'https://api.nexusmutual.io/v1/quote?' +\n    const requiredNetwork = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    const baseEndpoint = this.functionsUtil.getGlobalConfig(['network','providers','nexus','endpoints',requiredNetwork]);\n    const quoteURL = `${baseEndpoint}quote?coverAmount=${coverData.coverAmount}&currency=${coverData.currency}&period=${coverData.period}&contractAddress=${coverData.contractAddress}`;\n\n    const response = await this.functionsUtil.makeRequest(quoteURL);\n\n    const quote = response && response.data ? response.data : null;\n\n    if (!quote){\n      this.setState({\n        loading:false\n      });\n      return false;\n    }\n\n    // encode the signature result in the data field\n    const data = this.props.web3.eth.abi.encodeParameters(\n      ['uint', 'uint', 'uint', 'uint', 'uint8', 'bytes32', 'bytes32'],\n      [quote.price, quote.priceInNXM, quote.expiresAt, quote.generatedAt, quote.v, quote.r, quote.s],\n    );\n\n    const COVER_TYPE = this.functionsUtil.toBN(0);\n    const feePercentage = await this.functionsUtil.genericContractCall(this.props.contractInfo.name,'feePercentage');\n    const basePrice = this.functionsUtil.toBN(quote.price);\n    const priceWithFee = basePrice.mul(this.functionsUtil.toBN(feePercentage)).divn(10000).add(basePrice);\n    const amountInWei = this.functionsUtil.toWei(coverData.coverAmount.toString());\n    const maxPriceWithFee = priceWithFee;\n    const coverCost = this.functionsUtil.fixTokenDecimals(maxPriceWithFee,this.state.tokenConfig.decimals);\n    const yearlyCost = coverCost.div(this.state.amountValue).times(365).div(this.state.periodValue).times(100);\n\n    // console.log('coverCost',maxPriceWithFee,coverCost.toFixed(),this.state.amountValue.toFixed(),this.state.periodValue,yearlyCost.toFixed());\n\n    const transactionParams = [\n      coverData.contractAddress,\n      coverData.asset,\n      amountInWei,\n      coverData.period,\n      COVER_TYPE,\n      maxPriceWithFee,\n      data\n    ];\n\n    const transactionValue = this.state.selectedUnderlying === 'ETH' ? priceWithFee : null;\n\n    // console.log(feePercentage,transactionParams,transactionValue,quote);\n\n    // debugger;\n\n    const step = 2;\n    const loading = false;\n\n    this.setState({\n      step,\n      quote,\n      loading,\n      coverCost,\n      yearlyCost,\n      maxPriceWithFee,\n      transactionValue,\n      transactionParams\n    });\n  }\n\n  approveSucceeded = (tx) => {\n    const tokenApproved = true;\n    this.setState({\n      tokenApproved\n    });\n  }\n\n  yieldTokenApproveSucceeded = (tx) => {\n    const yieldTokenApproved = true;\n    this.setState({\n      yieldTokenApproved\n    });\n  }\n\n  claimInputChange = (amount) => {\n    const normalizedAmount = this.functionsUtil.normalizeTokenAmount(amount,this.state.tokenConfig.decimals);\n    const claimButtonDisabled = this.functionsUtil.BNify(amount).lte(0) || this.functionsUtil.BNify(normalizedAmount).gt(this.state.selectedCoverToClaim.coveredTokenAmount);\n    this.setState({\n      claimButtonDisabled\n    });\n  }\n\n  getClaimTransactionParams = (coveredTokenAmount) => {\n    return {\n      methodName:'claimTokens',\n      methodParams:[this.state.selectedCoverToClaim.value,this.state.selectedCoverToClaim.incident.id,coveredTokenAmount,this.state.tokenConfig.realAddress]\n    };\n  }\n\n  claimTransactionSucceeded = (tx) => {\n    // const claimId = this.functionsUtil.getGlobalConfig(['txReceipt','events','ClaimSubmitted','returnValues','claimId'],tx);\n    // this.setState({\n    //   claimId\n    // });\n    this.loadContracts();\n  }\n\n  buyCoverTransactionSucceeded = (tx) => {\n    const coverId = this.functionsUtil.getGlobalConfig(['txReceipt','events','CoverBought','returnValues','coverId'],tx);\n    this.setState({\n      coverId\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    if (selectedAction !== this.state.selectedAction){\n      this.setState({\n        selectedAction\n      });\n    }\n  }\n\n  selectCoverToClaim(coverId){\n    const selectedCoverToClaim = this.state.selectedCoverToClaim ? this.state.claimableCovers.find( cover => parseInt(cover.value) === coverId ) : null;\n    // console.log('selectCoverToClaim',selectedCoverToClaim);\n    this.setState({\n      selectedCoverToClaim\n    });\n  }\n\n  reset(){\n    const step = 1;\n    const quote = null;\n    const coverId = null;\n    const periodValue = '';\n    const amountValue = '';\n    const transactionParams = [];\n    this.setState({\n      step,\n      quote,\n      coverId,\n      periodValue,\n      amountValue,\n      transactionParams\n    });\n  }\n\n  render() {\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          mb={3}\n          width={[1,0.36]}\n          flexDirection={'column'}\n        >\n          <Box\n            mb={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Choose action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:2,\n                  width:0.49\n                }}\n                textProps={{\n                  fontSize:[1,2]\n                }}\n                icon={'Security'}\n                iconColor={'deposit'}\n                text={'Buy Coverage'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.selectedAction === 'deposit' }\n                handleClick={ e => this.setSelectedAction('deposit') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:2,\n                  width:0.49\n                }}\n                textProps={{\n                  fontSize:[1,2]\n                }}\n                icon={'FileUpload'}\n                iconColor={'redeem'}\n                text={'Claim Tokens'}\n                iconBgColor={'#ceeff6'}\n                isActive={ this.state.selectedAction === 'claim' }\n                handleClick={ e => this.setSelectedAction('claim') }\n              />\n            </Flex>\n          </Box>\n          {\n            this.state.selectedAction === 'deposit' &&\n              <IconBox\n                cardProps={{\n                  py:2,\n                  px:3,\n                  my:2,\n                  width:1,\n                }}\n                isActive={true}\n                isInteractive={false}\n                icon={'LightbulbOutline'}\n                iconProps={{\n                  color:'flashColor'\n                }}\n                textProps={{\n                  color:'flashColor'\n                }}\n                text={`If your yield bearing token de-pegs in value by more than 10%, claim up to 90% of your loss by swapping your yield bearing token for a claim payment.`}\n              >\n                <ExtLink\n                  ml={1}\n                  fontWeight={500}\n                  color={'primary'}\n                  fontSize={'15px'}\n                  hoverColor={'primary'}\n                  href={'https://nexusmutual.io/pages/YieldTokenCoverv1.0.pdf'}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    Read More\n                    <Icon\n                      ml={1}\n                      size={'0.9em'}\n                      color={'primary'}\n                      name={'OpenInNew'}\n                    />\n                    .\n                  </Flex>\n                </ExtLink>\n              </IconBox>\n          }\n          {\n            this.state.selectedAction === 'deposit' ? (\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Flex\n                  mb={1}\n                  width={1}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    Object.keys(this.state.steps).map( stepIndex => (\n                      <Link\n                        style={{\n                          flexBasis:'0',\n                          flex:'1 1 0px',\n                          textDecoration:'none',\n                          cursor:this.state.step>=stepIndex ? 'pointer' : 'default'\n                        }}\n                        fontSize={2}\n                        textAlign={'center'}\n                        key={`step_${stepIndex}`}\n                        color={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                        hoverColor={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                        activeColor={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                      >\n                        {this.state.steps[stepIndex]}\n                      </Link>\n                    ) )\n                  }\n                </Flex>\n                <Flex\n                  mb={2}\n                  width={1}\n                  flexDirection={'column'}\n                >\n                  <Progress\n                    style={{\n                      width:'100%',\n                      height:'15px'\n                    }}\n                    value={(1/Object.keys(this.state.steps).length)*this.state.step}\n                  />\n                </Flex>\n                {\n                  !this.state.selectedToken || !this.state.tokenBalance ? (\n                    <FlexLoader\n                      flexProps={{\n                        mt:2,\n                        flexDirection:'row'\n                      }}\n                      loaderProps={{\n                        size:'25px',\n                      }}\n                      textProps={{\n                        ml:2\n                      }}\n                      text={'Loading assets...'}\n                    />\n                  ) : this.state.coverId ? (\n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <IconBox\n                        cardProps={{\n                          mt:1,\n                        }}\n                        icon={'DoneAll'}\n                        iconProps={{\n                          color:this.props.theme.colors.transactions.status.completed\n                        }}\n                        text={`You have successfully bought your Cover! Your Cover ID is <strong>${this.state.coverId}</strong>`}\n                      />\n                      <Link\n                        mt={2}\n                        color={'link'}\n                        hoverColor={'primary'}\n                        onClick={this.reset.bind(this)}\n                      >\n                        Get New Quote\n                      </Link>\n                    </Flex>\n                  ) : !this.state.quote ? (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Box\n                        width={1}\n                      >\n                        <Text mb={1}>\n                          Select Token to Cover:\n                        </Text>\n                        <AssetSelector\n                          {...this.props}\n                          id={'token-from'}\n                          showBalance={false}\n                          isSearchable={false}\n                          selectedToken={this.state.selectedToken}\n                          onChange={this.changeSelectedToken.bind(this)}\n                          availableTokens={this.props.toolProps.availableTokens}\n                        />\n                      </Box>\n                      <Box\n                        mt={2}\n                        width={1}\n                      >\n                        <Flex\n                          mb={1}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                        >\n                          <Text>\n                            Select Payment Asset:\n                          </Text>\n                          <Tooltip\n                            placement={'top'}\n                            message={`This is the asset that you will use as payment method for the coverage premium`}\n                          >\n                            <Icon\n                              ml={1}\n                              size={'1em'}\n                              name={\"Info\"}\n                              color={'cellTitle'}\n                            />\n                          </Tooltip>\n                        </Flex>\n                        <AssetSelector\n                          {...this.props}\n                          showBalance={false}\n                          selectedToken={this.state.selectedUnderlying}\n                          onChange={this.changeSelectedUnderlying.bind(this)}\n                          availableTokens={this.state.tokenConfig.underlying}\n                        />\n                      </Box>\n                      {\n                        this.functionsUtil.BNify(this.state.maxCapacity).gt(0) ? (\n                          <Box\n                            width={1}\n                          >\n                            <Box\n                              mt={2}\n                              width={1}\n                            >\n                              <Text\n                                mb={1}\n                              >\n                                How much do you want to cover?\n                              </Text>\n                              <Input\n                                min={0}\n                                step={1}\n                                width={'100%'}\n                                type={\"number\"}\n                                required={true}\n                                height={'3.4em'}\n                                borderRadius={2}\n                                fontWeight={500}\n                                borderColor={'cardBorder'}\n                                backgroundColor={'cardBg'}\n                                boxShadow={'none !important'}\n                                value={this.state.amountValue}\n                                onChange={this.changeAmount.bind(this)}\n                                border={`1px solid ${this.props.theme.colors.divider}`}\n                                placeholder={`Insert ${this.state.selectedUnderlying.toUpperCase()} amount`}\n                              />\n                              <Flex\n                                width={1}\n                                maxWidth={'100%'}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'flex-end'}\n                              >\n                                <Link\n                                  mt={1}\n                                  fontSize={1}\n                                  fontWeight={3}\n                                  color={'dark-gray'}\n                                  textAlign={'right'}\n                                  hoverColor={'copyColor'}\n                                  onClick={ (e) => this.setMaxCoverAmount() }\n                                  style={{\n                                    maxWidth:'100%',\n                                    overflow:'hidden',\n                                    whiteSpace:'nowrap',\n                                    textOverflow:'ellipsis'\n                                  }}\n                                >\n                                  Max Available: {this.state.maxCapacity.toFixed(this.props.isMobile ? 2 : 4)} {this.state.selectedUnderlying}\n                                </Link>\n                              </Flex>\n                            </Box>\n                            <Box\n                              mt={2}\n                              width={1}\n                            >\n                              <Text\n                                mb={1}\n                              >\n                                For how many days?\n                              </Text>\n                              <Input\n                                min={0}\n                                width={'100%'}\n                                type={\"number\"}\n                                required={true}\n                                height={'3.4em'}\n                                borderRadius={2}\n                                fontWeight={500}\n                                borderWidth={'1px'}\n                                borderStyle={'solid'}\n                                backgroundColor={'cardBg'}\n                                boxShadow={'none !important'}\n                                value={this.state.periodValue}\n                                placeholder={'Insert days of coverage'}\n                                onChange={this.changePeriod.bind(this)}\n                                borderColor={this.state.periodValid ? 'cardBorder' : 'red'}\n                              />\n                              {\n                                !this.state.periodValid && (\n                                  <Text\n                                    my={1}\n                                    fontSize={2}\n                                    color={'red'}\n                                  >\n                                    Enter a period between 30 and 365 days!\n                                  </Text>\n                                )\n                              }\n                              <Flex\n                                mt={2}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                {\n                                  Object.keys(this.state.periodOptions).map( period => {\n                                    const periodInfo = this.state.periodOptions[period];\n                                    const isActive = this.state.selectedPeriod===period;\n                                    const width = (1/Object.keys(this.state.periodOptions).length)-0.01;\n                                    return (\n                                      <DashboardCard\n                                        cardProps={{\n                                          p:2,\n                                          width:width,\n                                        }}\n                                        isActive={isActive}\n                                        isInteractive={true}\n                                        key={`coverPeriod_${period}`}\n                                        handleClick={e => this.selectPeriod(period)}\n                                      >\n                                        <Text\n                                          fontSize={2}\n                                          fontWeight={3}\n                                          textAlign={'center'}\n                                          color={this.props.isActive ? 'copyColor' : 'legend'}\n                                        >\n                                          {periodInfo.label}\n                                        </Text>\n                                      </DashboardCard>\n                                    );\n                                  })\n                                }\n                              </Flex>\n                            </Box>\n                            <Flex\n                              mt={2}\n                              width={1}\n                              justifyContent={'center'}\n                            >\n                              <ButtonLoader\n                                buttonProps={{\n                                  my:2,\n                                  mx:[0, 2],\n                                  size:'medium',\n                                  borderRadius:4,\n                                  mainColor:'blue',\n                                  disabled:(!this.state.amountValid || !this.state.selectedUnderlying || !this.state.periodValue || !this.state.periodValid)\n                                }}\n                                buttonText={'GET QUOTE'}\n                                isLoading={this.state.loading}\n                                handleClick={ e => this.getQuote(e) }\n                              />\n                            </Flex>\n                          </Box>\n                        ) : (\n                          <IconBox\n                            cardProps={{\n                              mt:3\n                            }}\n                            icon={'MoneyOff'}\n                            iconProps={{\n                              color:'cellText'\n                            }}\n                            text={`Coverage for ${this.state.selectedToken} is not available at the moment.`}\n                          />\n                        )\n                      }\n                    </Flex>\n                  ) : (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Text\n                        mb={2}\n                        fontSize={3}\n                        fontWeight={3}\n                        color={'primary'}\n                      >\n                        Cover Summary:\n                      </Text>\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          mb:2,\n                          px:3\n                        }}\n                        isActive={false}\n                        isInteractive={false}\n                      >\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Protocol:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          Idle Finance\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Yield Token:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.selectedToken}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Amount:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.amountValue} {this.state.selectedUnderlying}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Period:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.periodValue} days\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Price:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.coverCost.toFixed(6)} {this.state.selectedUnderlying}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Yearly Cost:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.yearlyCost.toFixed(2)}%\n                        </Text>\n                      </DashboardCard>\n                      <Flex\n                        mt={2}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        {\n                          this.functionsUtil.BNify(this.state.tokenBalance).lt(this.functionsUtil.BNify(this.state.quote.price)) ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mb:3\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={1}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You don't have enough {this.state.selectedUnderlying} in your wallet.\n                                </Text>\n                                <Link\n                                  mt={1}\n                                  color={'link'}\n                                  hoverColor={'primary'}\n                                  onClick={this.reset.bind(this)}\n                                >\n                                  Get New Quote\n                                </Link>\n                              </Flex>\n                            </DashboardCard>\n                          ) : !this.state.tokenApproved ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mb:3\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mb={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  To buy the coverage you need to approve the Smart-Contract.\n                                </Text>\n                                <ExecuteTransaction\n                                  {...this.props}\n                                  parentProps={{\n                                    width:1,\n                                    alignItems:'center',\n                                    justifyContent:'center'\n                                  }}\n                                  Component={Button}\n                                  componentProps={{\n                                    fontSize:3,\n                                    fontWeight:3,\n                                    size:'medium',\n                                    width:[1,1/2],\n                                    borderRadius:4,\n                                    value:'Approve',\n                                    mainColor:'deposit'\n                                  }}\n                                  action={'Approve'}\n                                  methodName={'approve'}\n                                  callback={this.approveSucceeded.bind(this)}\n                                  contractName={this.state.selectedUnderlyingConfig.name}\n                                  params={[this.props.contractInfo.address,this.props.web3.utils.toTwosComplement('-1')]}\n                                />\n                                <Link\n                                  mt={1}\n                                  color={'link'}\n                                  hoverColor={'primary'}\n                                  onClick={this.reset.bind(this)}\n                                >\n                                  Get New Quote\n                                </Link>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <ExecuteTransaction\n                                {...this.props}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                Component={Button}\n                                componentProps={{\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  size:'medium',\n                                  width:[1,1/2],\n                                  borderRadius:4,\n                                  mainColor:'deposit',\n                                  value:'Buy Coverage',\n                                  disabled:this.state.buttonDisabled\n                                }}\n                                action={'Buy Coverage'}\n                                methodName={'buyCover'}\n                                value={this.state.transactionValue}\n                                params={this.state.transactionParams}\n                                contractName={this.props.contractInfo.name}\n                                callback={this.buyCoverTransactionSucceeded.bind(this)}\n                              />\n                              <Link\n                                mt={1}\n                                color={'link'}\n                                hoverColor={'primary'}\n                                onClick={this.reset.bind(this)}\n                              >\n                                Get New Quote\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                    </Flex>\n                  )\n                }\n              </Flex>\n            ) : this.state.selectedAction === 'claim' && (\n              <Box\n                width={1}\n              >\n                {\n                  this.state.claimableCovers.length>0 ? (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Text mb={1}>\n                        Select Cover:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        isSearchable={false}\n                        name={'claimable_covers'}\n                        options={this.state.claimableCovers}\n                        onChange={this.selectCoverToClaim.bind(this)}\n                        defaultValue={this.state.defaultClaimableCover}\n                      />\n                      {\n                        this.state.selectedCoverToClaim.claimId ? (\n                          <IconBox\n                            cardProps={{\n                              mt:2,\n                            }}\n                            icon={'DoneAll'}\n                            iconProps={{\n                              color:this.props.theme.colors.transactions.status.completed\n                            }}\n                            text={`You've successfully claimed <strong>${this.state.selectedCoverToClaim.claimedAmount.toFixed(4)} ${this.state.selectedCoverToClaim.coverAsset}</strong> for this Cover!`}\n                          />\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3,\n                                mb:1\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  color={'cellText'}\n                                  name={'FileUpload'}\n                                />\n                                <Text\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You can Claim up to <strong>{this.state.selectedCoverToClaim.claimableAmount.toFixed(4)} {this.state.selectedCoverToClaim.coverAsset}</strong> for this Cover!\n                                </Text>\n                                <Text\n                                  fontSize={1}\n                                  color={'alert'}\n                                  textAlign={'center'}\n                                >\n                                  Keep in mind that the cover becomes inactive once any amount of tokens are claimed.\n                                </Text>\n                              </Flex>\n                            </DashboardCard>\n                            <SendTxWithBalance\n                              error={null}\n                              {...this.props}\n                              permitEnabled={false}\n                              approveEnabled={true}\n                              action={'Claim Token'}\n                              tokenConfig={this.state.tokenConfig}\n                              contractInfo={this.props.contractInfo}\n                              buttonDisabled={this.state.claimButtonDisabled}\n                              callback={this.claimTransactionSucceeded.bind(this)}\n                              changeInputCallback={this.claimInputChange.bind(this)}\n                              contractApproved={this.yieldTokenApproveSucceeded.bind(this)}\n                              getTransactionParams={this.getClaimTransactionParams.bind(this)}\n                              approveDescription={'To claim your tokens you need to approve the Smart-Contract.'}\n                              tokenBalance={this.functionsUtil.BNify(this.state.yieldTokenBalance).gt(this.state.selectedCoverToClaim.maxCoveredAmount) ? this.state.selectedCoverToClaim.maxCoveredAmount : this.state.yieldTokenBalance }\n                            >\n                              <DashboardCard\n                                cardProps={{\n                                  p:3,\n                                  mt:2\n                                }}\n                              >\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                >\n                                  <Icon\n                                    name={'MoneyOff'}\n                                    color={'cellText'}\n                                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                  />\n                                  <Text\n                                    mt={1}\n                                    fontSize={2}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    You don't have any {this.state.selectedToken} in your wallet.\n                                  </Text>\n                                </Flex>\n                              </DashboardCard>\n                            </SendTxWithBalance>\n                          </Flex>\n                        )\n                      }\n                    </Flex>\n                  ) : (\n                    <IconBox\n                      cardProps={{\n                        mt:1,\n                      }}\n                      icon={'Warning'}\n                      iconProps={{\n                        color:'cellText'\n                      }}\n                      text={`You cannot submit any Claim for your Covers.`}\n                    />\n                  )\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default NexusMutual;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass TokenWrapper extends Component {\n\n  state = {\n    action:null,\n    infoBox:null,\n    balanceDest:null,\n    tokenConfig:null,\n    balanceStart:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    approveEnabled:true,\n    approveDescription:null,\n    showTokenWrapperEnabled:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = (prevState.action !== this.state.action) || (this.props.action !== prevProps.action);\n    const startContractChanged = JSON.stringify(this.props.startContract) !== JSON.stringify(prevProps.startContract);\n    const destContractChanged = JSON.stringify(this.props.destContract) !== JSON.stringify(prevProps.destContract);\n    if (actionChanged || startContractChanged || destContractChanged){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    const action = this.props.action || this.state.action || 'wrap';\n    this.setState({\n      action\n    },() => {\n      this.loadBalance();\n      this.updateActionData();\n    });\n  }\n\n  async getTokenBalance(contractInfo){\n\n    if (!contractInfo){\n      return false;\n    }\n\n    let tokenBalance = null;\n    switch (contractInfo.name){\n      case 'ETH':\n        tokenBalance = await this.functionsUtil.getETHBalance(this.props.account);\n      break;\n      default:\n        // Init Contract\n        await this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi);\n        tokenBalance = await this.functionsUtil.getTokenBalance(contractInfo.name,this.props.account);\n      break;\n    }\n\n    tokenBalance = tokenBalance || this.functionsUtil.BNify(0);\n\n    return tokenBalance;\n  }\n\n  async loadBalance(){\n\n    if (!this.props.toolProps.startContract || !this.props.toolProps.destContract){\n      return false;\n    }\n\n    // Load Balances\n    const [\n      balanceDest,\n      balanceStart\n    ] = await Promise.all([\n      this.getTokenBalance(this.props.toolProps.destContract),\n      this.getTokenBalance(this.props.toolProps.startContract)\n    ]);\n\n    const tokenBalance = this.state.action === 'wrap' ? balanceStart : balanceDest;\n    // console.log('loadBalance',this.props.toolProps.startContract,parseFloat(balanceStart),this.props.toolProps.destContract,parseFloat(balanceDest));\n\n    this.setState({\n      balanceDest,\n      balanceStart,\n      tokenBalance\n    });\n  }\n\n  updateActionData(){\n    let infoBox = null;\n    let tokenConfig = null;\n    let tokenBalance = null;\n    let selectedToken = null;\n    let approveEnabled = true;\n    let approveDescription = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        approveEnabled = true;\n        tokenBalance = this.state.balanceStart;\n        tokenConfig = this.props.toolProps.startContract;\n        selectedToken = this.props.toolProps.startContract.name;\n        approveDescription = `To Mint new ${this.props.toolProps.destContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileDownload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.deposit\n          // },\n          text:`Wrap your ${this.props.toolProps.startContract.name} and get ${this.props.toolProps.destContract.name}`\n        };\n      break;\n      case 'unwrap':\n        selectedToken = this.props.toolProps.destContract.name;\n        approveEnabled = false;\n        tokenBalance = this.state.balanceDest;\n        tokenConfig = this.props.toolProps.destContract;\n        approveDescription = `To withdraw your ${this.props.toolProps.startContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileUpload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.redeem\n          // },\n          text:`Unwrap your ${this.props.toolProps.destContract.name} and get back ${this.props.toolProps.startContract.name}`\n        };\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      infoBox,\n      tokenConfig,\n      tokenBalance,\n      selectedToken,\n      approveEnabled,\n      approveDescription\n    },() => {\n      this.loadBalance();\n    });\n  }\n\n  setAction(action){\n    this.setState({\n      action\n    });\n  }\n\n  transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        const mintLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let mintedAmount = mintLog ? parseInt(mintLog.data,16) : amount;\n        mintedAmount = this.functionsUtil.fixTokenDecimals(mintedAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${mintedAmount.toFixed(4)} ${this.props.toolProps.destContract.name}</strong>`\n        }\n      break;\n      case 'unwrap':\n        const withdrawLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let withdrawnAmount = withdrawLog ? parseInt(withdrawLog.data,16) : amount;\n        withdrawnAmount = this.functionsUtil.fixTokenDecimals(withdrawnAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${withdrawnAmount.toFixed(4)} ${this.props.toolProps.startContract.name}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Update balances\n    this.loadBalance();\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    const params = {};\n    switch (this.state.action){\n      case 'wrap':\n        params.value = amount;\n        params.methodParams = [];\n        params.methodName = this.props.toolProps.startContract.wrapMethod;\n      break;\n      case 'unwrap':\n        params.value = null;\n        params.methodParams = [amount];\n        params.methodName = this.props.toolProps.destContract.unwrapMethod;\n      break;\n      default:\n      break;\n    }\n    return params;\n  }\n\n  render() {\n\n    const fullWidth = !!this.props.fullWidth;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        mt={[2,fullWidth ? 2 : 3]}\n      >\n        <Flex\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n          width={[1,fullWidth ? 1 : 0.36]}\n        >\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : (\n              <Box\n                width={1}\n              >\n                {\n                  !this.props.action && (\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        mb={2}\n                      >\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Wrap'}\n                          iconColor={'deposit'}\n                          icon={'ArrowDownward'}\n                          iconBgColor={'#ced6ff'}\n                          isActive={ this.state.action === 'wrap' }\n                          handleClick={ e => this.setAction('wrap') }\n                        />\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Unwrap'}\n                          iconColor={'redeem'}\n                          icon={'ArrowUpward'}\n                          iconBgColor={'#ceeff6'}\n                          isActive={ this.state.action === 'unwrap' }\n                          handleClick={ e => this.setAction('unwrap') }\n                        />\n                      </Flex>\n                    </Flex>\n\n                  )\n                }\n                <Box\n                  width={1}\n                  my={fullWidth ? 2 : 3}\n                >\n                  {\n                    this.state.tokenBalance!==null ? (\n                      <SendTxWithBalance\n                        {...this.props}\n                        approveEnabled={false}\n                        action={this.state.action}\n                        infoBox={this.state.infoBox}\n                        tokenConfig={this.state.tokenConfig}\n                        tokenBalance={this.state.tokenBalance}\n                        contractInfo={this.props.toolProps.destContract}\n                        callback={this.transactionSucceeded.bind(this)}\n                        approveDescription={this.state.approveDescription}\n                        // changeInputCallback={this.changeInputCallback.bind(this)}\n                        getTransactionParams={this.getTransactionParams.bind(this)}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} to {this.state.action} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </SendTxWithBalance>\n                    ) : (\n                      <Flex\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading Balance...'}\n                        />\n                      </Flex>\n                    )\n                  }\n                </Box>\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenWrapper;","import theme from '../theme';\nimport { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport AssetField from '../AssetField/AssetField';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass PortfolioDonut extends Component {\n  state = {\n    chartData:null,\n    totalFunds:null,\n    parentWidth:null,\n    selectedToken:null,\n    selectedTokenConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentWillUnmount() {\n    \n  }\n\n  async componentDidMount(){\n    this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  async loadPortfolio() {\n\n    const portfolio = {};\n    let totalFunds = this.functionsUtil.BNify(0);\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.availableTokens),async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const idleTokenBalance = await this.functionsUtil.getTokenBalance(tokenConfig.idle.token,this.props.account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.functionsUtil.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = await this.functionsUtil.convertTokenBalance(idleTokenBalance.times(tokenPrice),token,tokenConfig,isRisk);\n\n        if (tokenBalance.gt(0)){\n          portfolio[token] = tokenBalance;\n\n          // Increment total balance\n          totalFunds = totalFunds.plus(tokenBalance);\n        }\n      }\n    });\n\n    // Add Gov Tokens\n    const govTokensUserBalances = await this.functionsUtil.getGovTokensUserBalances(this.props.account,this.props.availableTokens,'DAI',null,true);\n    if (govTokensUserBalances){\n      Object.keys(govTokensUserBalances).forEach( govToken => {\n        const govTokenBalance = this.functionsUtil.BNify(govTokensUserBalances[govToken]);\n        portfolio[govToken] = govTokenBalance;\n        totalFunds = totalFunds.plus(govTokenBalance);\n      });\n    }\n\n    const chartData = [];\n\n    Object.keys(portfolio).forEach(token => {\n      const tokenBalance = portfolio[token];\n      if (tokenBalance.gt(0)){\n        const tokenPercentage = tokenBalance.div(totalFunds).times(100);\n        let tokenColorHsl = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','hsl']);\n        tokenColorHsl = tokenColorHsl ? tokenColorHsl.join(',') : '0,0%,0%';\n        chartData.push({\n          id:token,\n          color:'hsl('+tokenColorHsl+')',\n          value:Math.round(tokenPercentage),\n          label:token.substr(0,1).toUpperCase()+token.substr(1),\n        });\n      }\n    });\n\n    this.setState({\n      portfolio,\n      chartData,\n      totalFunds\n    });\n  }\n\n  render() {\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth:0,\n      cornerRadius:0,\n      innerRadius:0.65,\n      motionDamping:15,\n      motionStiffness:90,\n      colors:d => d.color,\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => {\n        if (parseFloat(d.value)>=5){\n          return d.value+'%';\n        } else {\n          return null;\n        }\n      },\n      radialLabel: d => {\n        return null;//Object.keys(this.props.availableTokens).indexOf(d.label.toUpperCase());\n      },\n      theme:{\n        tooltip: {\n          container: {\n            display: 'none'\n          },\n        },\n        labels:{\n          text:{\n            fontSize:16,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      radialLabelsLinkColor:{ from: 'color' },\n      radialLabelsLinkOffset:-parseInt(this.state.parentWidth*0.2),\n      margin: this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 },\n      onMouseEnter:(data, e) => {\n        const selectedToken = data.id;\n        const selectedTokenConfig = selectedToken ? this.props.availableTokens[selectedToken] || this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken.toUpperCase()]) : null;\n        this.setState({\n          selectedToken,\n          selectedTokenConfig\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setState({\n          selectedToken:null,\n          selectedTokenConfig:null\n        });\n      },\n      legends:[\n        {\n          itemWidth: 60,\n          itemHeight: 18,\n          translateY: this.props.isMobile ? 25 : 50,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          itemTextColor: theme.colors.legend,\n          symbolShape: 'circle',\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        }\n      ]\n    };\n\n    const selectedToken = this.state.selectedToken !== null && this.state.portfolio[this.state.selectedToken] ? this.state.portfolio[this.state.selectedToken] : false;\n    const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'icon']);\n    const convertToken = this.state.selectedToken ? this.functionsUtil.getGlobalConfig(['stats','tokens',this.state.selectedToken.toUpperCase(),'conversionRateField']) : false;\n\n    return (\n      <Flex\n        width={1}\n      >\n        { \n          (this.state.totalFunds || selectedToken) && \n            <Flex\n              zIndex={0}\n              top={['32%','35%']}\n              left={['23%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              width={['55%','46%']}\n              position={'absolute'}\n              height={['40%','35%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedToken ? (\n                  <>\n                    <AssetField\n                      fieldInfo={{\n                        name:'icon',\n                        props:{\n                          mb:1,\n                          height:'2.2em'\n                        }\n                      }}\n                      token={this.state.selectedToken}\n                      tokenConfig={this.state.selectedTokenConfig}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      unit={ convertToken ? '$' : null}\n                      number={this.state.portfolio[this.state.selectedToken]}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedToken}\n                    </Text>\n                  </>\n                ) : (\n                  <>\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={strategyIcon}\n                    />\n                    <SmartNumber\n                      unit={'$'}\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      number={this.state.totalFunds}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          {...chartProps}\n          showLoader={true}\n          data={this.state.chartData}\n          parentId={this.props.parentId}\n          parentIdHeight={this.props.parentId}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default PortfolioDonut;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport { Card, Flex, Image, Text } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\n\nclass EarningsEstimation extends Component {\n  state = {\n    tokensEarnings:null,\n    estimationStepsPerc:null,\n    estimationStepsOptions:null,\n    estimationStepsDefaultOption:null,\n    estimationSteps:{\n      0:{\n        'Month':{\n          perc:1/12,\n          width:1/3\n        },\n        '2 months':{\n          perc:1/6,\n          width:1/3\n        },\n        '3 months':{\n          perc:1/4,\n          width:1/3,\n          optionName:'3M'\n        }\n      },\n      25:{\n        '3 months':{\n          perc:3/12,\n          width:3/12\n        },\n        '8 months':{\n          perc:8/12,\n          width:5/12\n        },\n        'Year':{\n          perc:1,\n          width:4/12,\n          optionName:'1Y'\n        }\n      },\n      90:{\n        'Year':{\n          perc:1,\n          width:1/3,\n        },\n        '2 Years':{\n          perc:2,\n          width:1/3,\n        },\n        '5 Years':{\n          perc:5,\n          width:3/5,\n          optionName:'5Y'\n        }\n      }\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  setEstimationStepsPerc(estimationStepsPerc){\n    this.setState({\n      estimationStepsPerc\n    });\n  }\n\n  async loadEarnings(){\n    let stepsCount = {};\n    let tokensEarnings = {};\n    // let estimationStepsPerc = 0;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const aggregatedEarnings = {\n      earnings:this.functionsUtil.BNify(0),\n      amountLent:this.functionsUtil.BNify(0),\n      earningsYear:this.functionsUtil.BNify(0),\n    };\n\n    await this.functionsUtil.asyncForEach(this.props.enabledTokens,async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const amountDeposited = await this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account);\n\n      const [amountLent,avgBuyPrice,idleTokenPrice] = await Promise.all([\n        this.functionsUtil.convertTokenBalance(amountDeposited,token,tokenConfig,isRisk),\n        this.functionsUtil.getAvgBuyPrice([token],this.props.account),\n        this.functionsUtil.getIdleTokenPrice(tokenConfig)\n      ]);\n\n      const earningsPerc = idleTokenPrice.div(avgBuyPrice[token]).minus(1);\n      const earnings = amountLent.times(earningsPerc);\n\n      let earningsYear = 0;\n      let tokenAPY = 0;\n      const tokenAprs = await this.functionsUtil.getTokenAprs(tokenConfig);\n      if (tokenAprs && tokenAprs.avgApr !== null){\n        tokenAPY = tokenAprs.avgApy;\n        earningsYear = amountLent.times(tokenAPY.div(100));\n      }\n\n      const earningsPercStep = Math.floor(earnings.div(earningsYear).times(100));\n      \n      const possibleSteps = Object.keys(this.state.estimationSteps).filter(perc => perc<=earningsPercStep);\n      const maxPossibleStep = parseInt(possibleSteps.pop());\n\n      stepsCount[maxPossibleStep] = stepsCount[maxPossibleStep] ? stepsCount[maxPossibleStep]+1 : 1;\n\n      if (!this.functionsUtil.BNify(amountLent).isNaN() && !this.functionsUtil.BNify(idleTokenPrice).isNaN() && !this.functionsUtil.BNify(earnings).isNaN() && !this.functionsUtil.BNify(earningsYear).isNaN()){\n        tokensEarnings[token] = {\n          earnings,\n          amountLent,\n          earningsYear,\n          idleTokenPrice\n        };\n\n        // const earningsUSD = await this.functionsUtil.convertTokenBalance(earningsYearings,token,tokenConfig,isRisk);\n        // const amountLentUSD = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n        // const earningsYearUSD = await this.functionsUtil.convertTokenBalance(earningsYear,token,tokenConfig,isRisk);\n\n        aggregatedEarnings.earnings = aggregatedEarnings.earnings.plus(earnings);\n        aggregatedEarnings.amountLent = aggregatedEarnings.amountLent.plus(amountLent);\n        aggregatedEarnings.earningsYear = aggregatedEarnings.earningsYear.plus(earningsYear);\n      }\n    });\n\n    const maxCountStep = Object.keys(stepsCount).reduce( (maxCountStep,step) => {\n      const count = stepsCount[step];\n      if (count>maxCountStep.count){\n        maxCountStep.step = parseInt(step);\n        maxCountStep.count = parseInt(count);\n      }\n      return maxCountStep;\n    },{\n      step:0,\n      count:0\n    });\n\n    const estimationStepsPerc = maxCountStep.step || parseInt(Object.keys(this.state.estimationSteps)[1]);\n\n    const orderedTokensEarnings = {};\n    this.props.enabledTokens.forEach( token => {\n      if (tokensEarnings[token]){\n        orderedTokensEarnings[token] = tokensEarnings[token];\n      }\n    });\n\n    tokensEarnings = orderedTokensEarnings;\n\n    // Add USD aggregated earnings\n    if (Object.keys(tokensEarnings).length>1){\n      tokensEarnings['USD'] = aggregatedEarnings;\n    }\n\n    let estimationStepsDefaultOption = null;\n    const estimationStepsOptions = Object.keys(this.state.estimationSteps).map( step => {\n      const estimationStep = Object.values(this.state.estimationSteps[step]).pop();\n      const label = estimationStep.optionName ? estimationStep.optionName : Object.keys(this.state.estimationSteps[step]).pop();\n      const value = parseInt(step);\n      const option = { value, label };\n\n      if (value === estimationStepsPerc){\n        estimationStepsDefaultOption = option;\n      }\n      return option;\n    });\n\n    this.setState({\n      tokensEarnings,\n      estimationStepsPerc,\n      estimationStepsOptions,\n      estimationStepsDefaultOption,\n    });\n  }\n\n  render() {\n\n    if (!this.state.tokensEarnings){\n      return (\n        <FlexLoader\n          flexProps={{\n            flexDirection:'row',\n            minHeight:this.props.height\n          }}\n          loaderProps={{\n            size:'30px'\n          }}\n          textProps={{\n            ml:2\n          }}\n          text={'Loading estimations...'}\n        />\n      );\n    }\n\n    const estimationSteps = this.state.estimationSteps[this.state.estimationStepsPerc] ? this.state.estimationSteps[this.state.estimationStepsPerc] : this.state.estimationSteps[0];\n\n    return (\n      <Card\n        pr={0}\n        my={1}\n        width={1}\n        px={[3,4]}\n        py={[2,3]}\n        boxShadow={1}\n        borderRadius={2}\n        borderColor={'cardBorder'}\n        backgroundColor={'cardBg'}\n      >\n        <Flex\n          mt={2}\n          mb={3}\n          zIndex={9999}\n          justifyContent={'flex-end'}\n        >\n          <Flex\n            zIndex={9999}\n            width={[1,0.2]}\n            flexDirection={'column'}\n          >\n            <GenericSelector\n              innerProps={{\n                p:0,\n                px:1\n              }}\n              name={'estimation-step'}\n              options={this.state.estimationStepsOptions}\n              onChange={ v => this.setEstimationStepsPerc(v) }\n              defaultValue={this.state.estimationStepsDefaultOption}\n            />\n          </Flex>\n        </Flex>\n        {\n          Object.keys(this.state.tokensEarnings).map((token,tokenIndex) => {\n            const tokenConfig = this.props.availableTokens[token];\n            const tokenEarnings = this.state.tokensEarnings[token];\n            const estimationStepPerc = this.functionsUtil.BNify(Object.values(estimationSteps).pop().perc);\n            const finalEarnings = tokenEarnings.earningsYear.times(estimationStepPerc);\n            const cursorPerc = finalEarnings.gt(0) ? Math.min(1,parseFloat(tokenEarnings.earnings.div(finalEarnings))) : 1;\n            const tokenIcon = tokenConfig && tokenConfig.icon ? tokenConfig.icon :`images/tokens/${token}.svg`;\n            const tokenRGBColor = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','rgb']).join(',');\n            // console.log(tokenEarnings.earnings.toFixed(10),tokenEarnings.earningsYear.toFixed(10),finalEarnings.toFixed(10),cursorPerc.toFixed(10),estimationStepPerc.toFixed(10));\n            return (\n              <Flex\n                id={`asset-${token}`}\n                flexDirection={'row'}\n                key={`asset-${token}`}\n                borderTop={ token === 'USD' ? `1px solid ${this.props.theme.colors.divider}` : null }\n              >\n                <Flex\n                  width={[1,0.93]}\n                  position={'relative'}\n                >\n                  <Flex\n                    width={1}\n                    height={'100%'}\n                    position={'absolute'}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                    >\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      height={'100%'}\n                      flexDirection={'row'}\n                    >\n                      {\n                        Object.keys(estimationSteps).map((label,estimateIndex) => {\n                          const estimationStep = estimationSteps[label];\n                          const estimationStepEarnings = tokenEarnings.earningsYear.times(this.functionsUtil.BNify(estimationStep.perc));\n                          let estimationStepEarningsFormatted = this.functionsUtil.formatMoney(estimationStepEarnings,this.props.isMobile ? 2 : estimationStepEarnings.lt(1) ? 3 : 2);\n                          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'conversionRateField']);\n                          if (conversionRateField){\n                            estimationStepEarningsFormatted = '$ '+estimationStepEarningsFormatted;\n                          }\n                          return (\n                            <Flex\n                              pr={2}\n                              justifyContent={'flex-end'}\n                              width={estimationStep.width}\n                              pt={ token === 'USD' ? 2 : null }\n                              key={`asset-estimate-${token}-${estimateIndex}`}\n                              borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              {\n                                (token === 'USD' || (estimateIndex === Object.keys(estimationSteps).length-1)) && \n                                  <Text\n                                    fontWeight={3}\n                                    fontSize={[0,'1em']}\n                                    style={{\n                                      wordBreak:'break-all'\n                                    }}\n                                    color={tokenEarnings.earnings.gte(estimationStepEarnings) ? 'copyColor' : 'legend'}\n                                  >\n                                    {estimationStepEarningsFormatted}\n                                  </Text>\n                              }\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                  <Flex\n                    width={1}\n                    zIndex={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                    pt={ token === 'USD' ? ['2em','2.8em'] : '1.4em' }\n                    pb={ tokenIndex<Object.keys(this.state.tokensEarnings).length-1 ? '1em' : 0 }\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                      justifyContent={['flex-start','flex-end']}\n                    >\n                      <Text\n                        pr={[0,2]}\n                        fontSize={[0,3]}\n                        fontWeight={[3,4]}\n                      >\n                        {token}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      height={['20px','35px']}\n                      justifyContent={'flex-start'}\n                    >\n                      <Flex\n                        height={'100%'}\n                        width={cursorPerc}\n                        backgroundColor={'cardBg'}\n                      >\n                        <Flex\n                          height={'100%'}\n                          width={'100%'}\n                          borderRadius={['0 20px 20px 0','0 35px 35px 0']}\n                          style={{background:`linear-gradient(90deg, rgba(${tokenRGBColor},0) 0%, rgba(${tokenRGBColor},0.1) 30%, rgba(${tokenRGBColor},1) 100%)`}}\n                        ></Flex>\n                      </Flex>\n                      <Flex\n                        pl={2}\n                        width={'auto'}\n                        height={'100%'}\n                        alignItems={'center'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Image src={tokenIcon} height={['1.4em','2.2em']} />\n                      </Flex>\n                      {\n                        <Flex\n                          pl={2}\n                          alignItems={'center'}\n                        >\n                          {\n                            token !== 'USD' ? (\n                              <AssetField\n                                {...this.props}\n                                token={token}\n                                tokenConfig={tokenConfig}\n                                fieldInfo={{\n                                  name:'earningsCounter',\n                                  props:{\n                                    decimals:this.props.isMobile ? 6 : 7,\n                                    maxPrecision:this.props.isMobile ? 9 : 10,\n                                    style:{\n                                      color:this.props.theme.colors.copyColor,\n                                      fontWeight:this.props.isMobile ? 500 : 700,\n                                      fontSize:this.props.isMobile ? '14px' : '22px',\n                                    }\n                                  }\n                                }}\n                              />\n                            ) : (\n                              <TotalEarningsCounter\n                                {...this.props}\n                                decimals={this.props.isMobile ? 6 : 7}\n                                maxPrecision={this.props.isMobile ? 9 : 10}\n                                counterStyle={{\n                                  color:this.props.theme.colors.copyColor,\n                                  fontWeight:this.props.isMobile ? 500 : 700,\n                                  fontFamily:this.props.theme.fonts.sansSerif,\n                                  fontSize:this.props.isMobile ? '14px' : '22px',\n                                }}\n                              />\n                            )\n                          }\n                        </Flex>\n                      }\n                    </Flex>\n                  </Flex>\n                </Flex>\n                {\n                  !this.props.isMobile && \n                    <Flex width={0.07} alignItems={'flex-start'} justifyContent={'flex-end'}>\n                    </Flex>\n                }\n              </Flex>\n            )\n          })\n        }\n        <Flex\n          flexDirection={'row'}\n        >\n          <Flex\n            width={[1,0.93]}\n            position={'relative'}\n          >\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <Flex width={[0.15,0.1]}></Flex>\n              <Flex\n                width={[0.85,0.9]}\n                flexDirection={'row'}\n              >\n                {\n                  Object.keys(estimationSteps).map((estimationLabel,estimateIndex) => {\n                    const estimationStep = estimationSteps[estimationLabel];\n                    return (\n                      <Flex\n                        pt={2}\n                        pr={[1,2]}\n                        justifyContent={'flex-end'}\n                        width={estimationStep.width}\n                        key={`estimate-label-${estimateIndex}`}\n                        borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                      >\n                        <Text\n                          fontWeight={3}\n                          fontSize={[0,2]}\n                          color={'legend'}\n                        >\n                          {estimationLabel}\n                        </Text>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </Flex>\n          {\n            !this.props.isMobile && \n              <Flex width={0.07} alignItems={'flex-start'} justifyContent={'center'}>\n                <Text fontWeight={4} fontSize={3}></Text>\n              </Flex>\n          }\n        </Flex>\n      </Card>\n    );\n  }\n}\n\nexport default EarningsEstimation;\n","import React, { Component } from 'react';\nimport { Flex, Icon, Text, Image } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass DashboardIconButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          pr:2,\n          py:[2,3],\n          pl:[2,3],\n        }}\n        isActive={false}\n        isInteractive={true}\n        handleClick={this.props.handleClick}\n      >\n        <Flex\n          height={'100%'}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'center'}\n        > \n          <Flex\n            px={[1,0]}\n          >\n            {\n              this.props.icon ? (\n                <Icon\n                  name={this.props.icon}\n                  size={this.props.isMobile ? '1.8em' : '3em'}\n                  color={this.props.iconColor ? this.props.iconColor : 'redeem'}\n                />\n              ) : this.props.image && (\n                <Image\n                  src={this.props.image}\n                  width={this.props.isMobile ? '1.8em' : '2.7em'}\n                  height={this.props.isMobile ? '1.8em' : '2.7em'}\n                />\n              )\n            }\n          </Flex>\n          <Flex\n            ml={[2,3]}\n            flexDirection={'column'}\n            alignItems={'flex-start'}\n            justifyContent={'center'}\n          >\n            <Text\n              fontWeight={3}\n              fontSize={[1,3]}\n            >\n              {this.props.title}\n            </Text>\n            <Text\n              fontWeight={2}\n              fontSize={[0,2]}\n              color={'cellText'}\n            >\n              {this.props.text}\n            </Text>\n          </Flex>\n          <Icon\n            align={'center'}\n            color={'cellText'}\n            name={'KeyboardArrowRight'}\n            size={this.props.isMobile ? '1.8em' : '2.5em'}\n          />\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default DashboardIconButton;\n","import { Flex } from \"rimble-ui\";\nimport Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport CustomList from '../CustomList/CustomList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass PolygonBridgeTransactions extends Component {\n\n  state = {\n    loaded:false,\n    bridgeEnabled:false,\n    polygonTransactions:null,\n    polygonTransactionsAvailableTokens:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    if (accountChanged){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    if (!this.props.account){\n      return false;\n    }\n\n    let polygonTransactionsAvailableTokens = null;\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const polygonBridgeConfig = this.functionsUtil.getGlobalConfig(['tools','polygonBridge']);\n    const bridgeEnabled = polygonBridgeConfig.enabled && polygonBridgeConfig.availableNetworks.includes(currentNetwork.id);\n\n    if (!bridgeEnabled){\n      return this.setState({\n        loaded:true,\n        bridgeEnabled\n      });\n    }\n\n    const polygonTransactions = await this.functionsUtil.getPolygonBridgeTxs(this.props.account);\n\n    // console.log('polygonTransactions',this.props.account,this.props.web3,polygonTransactions);\n\n    if (polygonTransactions && polygonTransactions.length>0){\n      polygonTransactionsAvailableTokens = polygonTransactions.map( (tx) => {\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['tools','polygonBridge','props','availableTokens',tx.tokenSymbol]);\n        let actionIcon = null;\n        switch (tx.action){\n          default:\n          case 'Deposit':\n            actionIcon = 'ArrowDownward';\n          break;\n          case 'Withdraw':\n            actionIcon = 'ArrowUpward';\n          break;\n          case 'Exit':\n            actionIcon = 'Undo';\n          break;\n        }\n        const depositInfo = {\n          actionIcon,\n          amount:tx.value,\n          token:tx.tokenSymbol,\n          action:tx.action.toUpperCase(),\n          bridgeType:tx.bridgeType.toUpperCase(),\n          status:tx.included ? 'Completed' : 'pending',\n          hash:this.functionsUtil.shortenHash(tx.hash),\n          statusIcon:tx.included ? 'Done' : 'Timelapse',\n          actionIconProps:{\n            color:this.props.theme.colors.transactions.action[tx.action.toLowerCase()],\n            bgColor:this.props.theme.colors.transactions.actionBg[tx.action.toLowerCase()]\n          },\n          url:this.functionsUtil.getEtherscanTransactionUrl(tx.hash,tx.networkId),\n          date:this.functionsUtil.strToMoment(parseInt(tx.timeStamp)*1000).format('DD MMM, YYYY'),\n          statusIconProps:{\n            color:tx.included ? this.props.theme.colors.transactions.status.completed : this.props.theme.colors.transactions.status.pending\n          },\n          tokenIcon:tokenConfig.icon || this.functionsUtil.getGlobalConfig(['stats','tokens',tx.tokenSymbol.toUpperCase(),'icon']) || `images/tokens/${tx.tokenSymbol}.svg`\n        };\n        return depositInfo;\n      });\n    }\n\n    // console.log('PolygonBridgeTransactions',polygonTransactions,polygonTransactionsAvailableTokens);\n\n    this.setState({\n      loaded:true,\n      bridgeEnabled,\n      polygonTransactions,\n      polygonTransactionsAvailableTokens\n    });\n  }\n\n  render() {\n\n    if (!this.state.loaded || !this.state.bridgeEnabled){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          this.props.title && ((this.state.polygonTransactionsAvailableTokens && this.state.polygonTransactionsAvailableTokens.length>0) || this.props.children) && (\n            <Title\n              {...this.props.titleProps}\n            >\n              {this.props.title}\n            </Title>\n          )\n        }\n        {\n          this.state.polygonTransactionsAvailableTokens && this.state.polygonTransactionsAvailableTokens.length>0 ? (\n            <CustomList\n              paginationEnabled={true}\n              handleClick={(props) => this.functionsUtil.openWindow(props.row.url)}\n              cols={[\n                {\n                  title:'HASH',\n                  mobile:false,\n                  props:{\n                    width:[0.44,0.18],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'bgIcon',\n                      path:['actionIcon'],\n                    },\n                    {\n                      type:'text',\n                      path:['hash'],\n                      props:{\n                        ml:[0,2]\n                      }\n                    },\n                  ]\n                },\n                {\n                  title:'ACTION',\n                  props:{\n                    width:[0.25,0.14],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['action'],\n                    },\n                  ]\n                },\n                {\n                  title:'DATE',\n                  props:{\n                    width:[0.25,0.15],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['date'],\n                    },\n                  ]\n                },\n                {\n                  title:'BRIDGE',\n                  mobile:false,\n                  props:{\n                    width:[0.44,0.12],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['bridgeType'],\n                    },\n                  ]\n                },\n                {\n                  title:'STATUS',\n                  props:{\n                    width:[0.25,0.15],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'icon',\n                      mobile:false,\n                      path:['statusIcon'],\n                      props:{\n                        mr:2,\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      }\n                    },\n                    {\n                      name:'custom',\n                      path:['status'],\n                      props:{\n                        style:{\n                          textTransform:'capitalize'\n                        }\n                      }\n                    }\n                  ]\n                },\n                {\n                  mobile:false,\n                  title:'AMOUNT',\n                  props:{\n                    width:[0.25, 0.15],\n                  },\n                  fields:[\n                    {\n                      type:'number',\n                      path:['amount'],\n                      props:{\n                        decimals: 4\n                      }\n                    },\n                    {\n                      name:'tokenName',\n                      props:{\n                        ml:2\n                      }\n                    }\n                  ]\n                },\n                {\n                  title:'TOKEN',\n                  props:{\n                    width:[0.25,0.13]\n                  },\n                  fields:[\n                    {\n                      type:'image',\n                      path:['tokenIcon'],\n                      props:{\n                        mr:2,\n                        height:['1.4em','1.6em']\n                      }\n                    },\n                    {\n                      type:'text',\n                      path:['token'],\n                    }\n                  ]\n                },\n              ]}\n              {...this.props}\n              rows={this.state.polygonTransactionsAvailableTokens}\n            />\n          ) : this.props.children\n        }\n      </Flex>\n    )\n  }\n}\n\nexport default PolygonBridgeTransactions;","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetsList from '../AssetsList/AssetsList';\n// import RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport PortfolioDonut from '../PortfolioDonut/PortfolioDonut';\nimport ActiveCoverages from '../ActiveCoverages/ActiveCoverages';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport PortfolioEquity from '../PortfolioEquity/PortfolioEquity';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport EarningsEstimation from '../EarningsEstimation/EarningsEstimation';\nimport { Flex, Box, Heading, Text, Tooltip, Icon, Loader } from \"rimble-ui\";\nimport DashboardIconButton from '../DashboardIconButton/DashboardIconButton';\nimport TotalBalanceCounter from '../TotalBalanceCounter/TotalBalanceCounter';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\nimport PolygonBridgeTransactions from '../PolygonBridgeTransactions/PolygonBridgeTransactions';\n\n// const env = process.env;\n\nclass StrategyPage extends Component {\n\n  state = {\n    portfolio:null,\n    depositedTokens:[],\n    tokensToMigrate:{},\n    aggregatedValues:[],\n    remainingTokens:null,\n    batchedDeposits:null,\n    portfolioLoaded:false,\n    portfolioLoading:false,\n    availableGovTokens:null,\n    portfolioEquityStartDate:null,\n    batchedDepositsAvailableTokens:null,\n    portfolioEquityQuickSelection:'week',\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    await this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const availableTokensChanged = JSON.stringify(prevProps.availableTokens) !== JSON.stringify(this.props.availableTokens);\n    if (accountChanged || availableTokensChanged){\n      this.setStateSafe({\n        portfolioLoaded:false\n      },() => {\n        this.loadPortfolio();\n      });\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return await this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setStateSafe({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  async loadPortfolio(){\n    const availableTokens = this.props.availableTokens || {};\n    // const currentNetwork = this.functionsUtil.getRequiredNetwork();\n\n    if (this.state.portfolioLoaded || this.state.portfolioLoading){\n      return false;\n    }\n\n    await this.setStateSafe({\n      portfolioLoading:true\n    });\n\n    // Load portfolio if account is set\n    if (this.props.account){\n      const newState = {};\n      const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n      // Load and process Etherscan Txs\n      this.functionsUtil.getEtherscanTxs(this.props.account,firstBlockNumber,'latest',Object.keys(availableTokens))\n\n      // Load data\n      const [\n        batchedDeposits,\n        portfolio,\n      ] = await Promise.all([\n        // Load claimable batches\n        [],//this.functionsUtil.getBatchedDeposits(this.props.account),\n        // Load portfolio\n        this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account),\n      ]);\n\n      newState.portfolio = portfolio;\n\n      newState.batchedDeposits = batchedDeposits && Object.keys(batchedDeposits).length>0 ? batchedDeposits : null;\n\n      if (newState.batchedDeposits){\n        newState.batchedDepositsAvailableTokens = Object.keys(newState.batchedDeposits).reduce( (batchedDepositsAvailableTokens,token) => {\n          const batchInfo = newState.batchedDeposits[token];\n          const tokenConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit','props','availableTokens',token]);\n          if (tokenConfig.strategy === this.props.selectedStrategy){\n            switch (batchInfo.status){\n              case 'pending':\n                tokenConfig.statusIcon = 'Timelapse';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.pending\n                };\n              break;\n              case 'executed':\n                tokenConfig.statusIcon = 'Done';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.completed\n                };\n              break;\n              default:\n              break;\n            }\n            tokenConfig.token = token;\n            tokenConfig.status = batchInfo.status;\n            tokenConfig.deposited = batchInfo.batchDeposits;\n            tokenConfig.redeemable = batchInfo.batchRedeems;\n            batchedDepositsAvailableTokens[tokenConfig.baseToken] = tokenConfig;\n          }\n          return batchedDepositsAvailableTokens;\n        },{});\n      }\n\n      newState.depositedTokens = [];\n      newState.tokensToMigrate = [];\n\n      if (portfolio){\n        const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.functionsUtil.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n        newState.depositedTokens = depositedTokens;\n\n        const isRisk = this.props.selectedStrategy === 'risk';\n\n        let avgAPY = this.functionsUtil.BNify(0);\n        // let avgScore = this.functionsUtil.BNify(0);\n        let totalAmountLent = this.functionsUtil.BNify(0);\n        // let totalBalanceWithScore = this.functionsUtil.BNify(0);\n\n        await this.functionsUtil.asyncForEach(depositedTokens,async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          const [\n            tokenAprs,\n            // tokenScore,\n            amountLent,\n          ] = await Promise.all([\n            this.functionsUtil.getTokenAprs(tokenConfig),\n            // this.functionsUtil.getTokenScore(tokenConfig,isRisk),\n            this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account)\n          ]);\n\n          const amountLentToken = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n\n          const tokenBalance = portfolio.tokensBalance[token].tokenBalance;\n          const tokenWeight = tokenBalance.div(portfolio.totalBalance);\n          const tokenAPY = tokenAprs.avgApy && !this.functionsUtil.BNify(tokenAprs.avgApy).isNaN() ? this.functionsUtil.BNify(tokenAprs.avgApy) : this.functionsUtil.BNify(0);\n\n          if (!tokenAPY.isNaN()){\n            avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n          }\n\n          // if (!tokenScore.isNaN() && tokenScore.gt(0)){\n          //   avgScore = avgScore.plus(tokenScore.times(tokenBalance));\n          //   totalBalanceWithScore = totalBalanceWithScore.plus(tokenBalance);\n          // }\n\n          if (amountLentToken){\n            totalAmountLent = totalAmountLent.plus(amountLentToken);\n          }\n        });\n\n        // if (!totalBalanceWithScore.isNaN() && totalBalanceWithScore.gt(0)){\n        //   avgScore = avgScore.div(totalBalanceWithScore);\n        // }\n\n        // console.log('avgAPY',avgAPY.toFixed());\n\n        // Add gov tokens to earnings\n        const govTokensTotalBalance = await this.functionsUtil.getGovTokensUserTotalBalance(this.props.account,availableTokens,'DAI');\n        const govTokensUserBalance = await this.functionsUtil.getGovTokensUserBalances(this.props.account,availableTokens,null);\n        const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n          const balance = govTokensUserBalance[govToken];\n          if (balance.gt(0)){\n            return `+${balance.toFixed(2)} ${govToken}`;\n          } else {\n            return null;\n          }\n        }).filter(v => (v !== null)) : null;\n\n        newState.avgAPY = avgAPY;\n        // newState.avgScore = avgScore;\n        newState.tokensToMigrate = portfolio.tokensToMigrate;\n        newState.govTokensTotalBalance = govTokensTotalBalance;\n        newState.govTokensTotalBalanceTooltip = govTokensTotalBalanceTooltip;\n      }\n\n      newState.portfolioLoaded = true;\n      newState.portfolioLoading = false;\n      \n      const remainingTokens = Object.keys(availableTokens).filter(token => (!newState.depositedTokens.includes(token) && !Object.keys(newState.tokensToMigrate).includes(token)) );\n      newState.remainingTokens = remainingTokens;\n\n      // Portfolio loaded\n      this.setStateSafe(newState);\n    // Show available assets for not logged users\n    } else {\n      this.setStateSafe({\n        tokensToMigrate:{},\n        depositedTokens:[],\n        portfolioLoaded:true,\n        portfolioLoading:false,\n        remainingTokens:Object.keys(availableTokens),\n      });\n    }\n  }\n\n  render(){\n    const viewOnly = this.props.connectorName === 'custom';\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    const apyLong = this.functionsUtil.getGlobalConfig(['messages','apyLong']);\n    const yieldFarming = this.functionsUtil.getGlobalConfig(['messages','yieldFarming']);\n    const nexusMutualConfig = this.functionsUtil.getGlobalConfig(['tools','nexusMutual']);\n    const batchDepositConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    const polygonBridgeConfig = this.functionsUtil.getGlobalConfig(['tools','polygonBridge']);\n    const strategyName = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'title']);\n    const toolsToShow = ['addFunds','nexusMutual','tokenSwap'].filter( toolName => {\n      const toolConfig = this.functionsUtil.getGlobalConfig(['tools',toolName]);\n      return toolConfig.enabled && (!toolConfig.availableNetworks.length || toolConfig.availableNetworks.includes(parseInt(currentNetwork.id)));\n    })\n\n    return (\n      <Box\n        width={1}\n      >\n        <Title\n          mb={3}\n        >\n          {strategyName} strategy\n        </Title>\n        {\n          /*\n          currentNetwork.id === 137 ? (\n            <Flex\n              width={1}\n              minHeight={'45vh'}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  width:[1,0.5],\n                }}\n              >\n                <Flex\n                  aligItems={'center'}\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={'2.3em'}\n                    color={'cellText'}\n                    name={'AccessTime'}\n                  />\n                  <Text\n                    mt={2}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Hang on, please!<br />The {strategyName} strategy has not yet been activated in Polygon.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:3,\n                      width:[1,1/2]\n                    }}\n                    handleClick={e => this.props.goToSection(`stake`)}\n                  >\n                    Go to Staking\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            </Flex>\n          ) :\n          */\n          !this.state.portfolioLoaded ? (\n            <FlexLoader\n              textProps={{\n                textSize:4,\n                fontWeight:2\n              }}\n              loaderProps={{\n                mb:3,\n                size:'40px'\n              }}\n              flexProps={{\n                minHeight:'50vh',\n                flexDirection:'column'\n              }}\n              text={'Loading portfolio...'}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              {\n                this.props.account && this.state.depositedTokens.length>0 ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.avgAPY ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.avgAPY.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg APY\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <TotalBalanceCounter\n                                    decimals={5}\n                                    {...this.props}\n                                    portfolio={this.state.portfolio}\n                                  />\n                                  <Flex\n                                    mt={1}\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    {\n                                      /*\n                                      <Flex\n                                        width={0.45}\n                                        alignItems={'center'}\n                                        justifyContent={'flex-end'}\n                                      >\n                                        <Text\n                                          fontSize={1}\n                                          fontWeight={3}\n                                          fontFamily={this.props.theme.fonts.counter}\n                                          color={this.props.theme.colors.transactions.status.completed}\n                                        >\n                                          +{this.state.portfolio.totalEarningsPerc.toFixed(2)}%\n                                        </Text>\n                                      </Flex>\n                                      <Text\n                                        mx={1}\n                                        fontSize={1}\n                                        fontWeight={3}\n                                        fontFamily={this.props.theme.fonts.counter}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >|</Text>\n                                      */\n                                    }\n                                    <TotalEarningsCounter\n                                      {...this.props}\n                                      unit={'+$'}\n                                      decimals={4}\n                                      counterStyle={{\n                                        fontSize:14,\n                                        fontWeight:600,\n                                        color:this.props.theme.colors.transactions.status.completed\n                                      }}\n                                      portfolio={this.state.portfolio}\n                                    />\n                                  </Flex>\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Balance\n                              </Text>\n                              {\n                                this.state.govTokensTotalBalance && (\n                                  <Tooltip\n                                    placement={'bottom'}\n                                    message={'Total Balance does not include accrued governance tokens: '+(this.state.govTokensTotalBalance && this.state.govTokensTotalBalance.gt(0) ? ` (${this.state.govTokensTotalBalanceTooltip.join(' / ')})` : '')}\n                                  >\n                                    <Icon\n                                      ml={2}\n                                      name={\"Info\"}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                    />\n                                  </Tooltip>\n                                )\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: '<small>+</small>'+this.state.portfolio.totalEarningsPerc.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Profit\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','totalProfitPerc'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.328]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <PortfolioDonut\n                            {...this.props}\n                            parentId={'portfolio-composition'}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.666]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquity\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mb={3}\n                    mx={'auto'}\n                    width={[1,0.8]}\n                    aligItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontWeight={2}\n                      fontSize={[1,2]}\n                      textAlign={'center'}\n                    >\n                      {\n                        this.props.isMobile ?\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descShort'])\n                        :\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descLong'])\n                      }\n                    </Text>\n                  </Flex>\n                )\n              }\n              {\n                !viewOnly && this.state.depositedTokens.length>0 && this.props.account && toolsToShow.length>=2 && (\n                  <Flex\n                    mt={3}\n                    width={1}\n                    id={\"tools\"}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      pb={2}\n                      width={1}\n                      mb={[2,3]}\n                      borderColor={'divider'}\n                      borderBottom={'1px solid transparent'}\n                    >\n                      <Heading.h4\n                        fontSize={[2,4]}\n                        fontWeight={[3,4]}\n                      >\n                        Tools\n                      </Heading.h4>\n                    </Flex>\n                    <Flex\n                      flexDirection={['column','row']}\n                    >\n                      {\n                        ['addFunds','nexusMutual','tokenSwap'].map( (toolName,toolIndex) => {\n                          const toolConfig = this.functionsUtil.getGlobalConfig(['tools',toolName]);\n                          return (\n                            <Flex\n                              key={`tool_${toolIndex}`}\n                              mb={toolIndex<2 ? [2,0] : 0}\n                              pr={toolIndex<2 ? [0,3] : 0}\n                              width={[1,1/toolsToShow.length]}\n                            >\n                              <DashboardIconButton\n                                {...this.props}  \n                                icon={toolConfig.icon}\n                                text={toolConfig.desc}\n                                image={toolConfig.image}\n                                title={toolConfig.label}\n                                handleClick={ e => this.props.goToSection(`tools/${toolConfig.route}`) }\n                              />\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                )\n              }\n              {\n                nexusMutualConfig.enabled && nexusMutualConfig.availableNetworks.includes(currentNetwork.id) && this.state.portfolio && this.state.portfolio.totalBalance.gt(0) && (\n                  <Flex\n                    width={1}\n                    id={'active-coverages'}\n                    flexDirection={'column'}\n                  >\n                    <ActiveCoverages\n                      {...this.props}\n                      title={'Coverage'}\n                      titleProps={{\n                        my:4\n                      }}\n                    />\n                  </Flex>\n                )\n              }\n              {\n                this.state.batchedDeposits && (\n                  <Flex\n                    width={1}\n                    mb={[0,3]}\n                    id={'batched-deposits'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Batched Deposits</Title>\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.batchedDepositsAvailableTokens)}\n                        cols={[\n                          {\n                            title:'TOKEN',\n                            props:{\n                              width:[0.3,0.2]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.33, 0.21],\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['deposited'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                name:'tokenName',\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'REDEEMABLE',\n                            props:{\n                              width:[0.44,0.23],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['redeemable'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                type:'text',\n                                name:'custom',\n                                path:['token'],\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'STATUS',\n                            props:{\n                              width:[0.26,0.19],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'icon',\n                                mobile:false,\n                                name:'custom',\n                                path:['statusIcon'],\n                                props:{\n                                  mr:2,\n                                  size:this.props.isMobile ? '1.2em' : '1.8em'\n                                }\n                              },\n                              {\n                                name:'custom',\n                                path:['status'],\n                                props:{\n                                  style:{\n                                    textTransform:'capitalize'\n                                  }\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[0.35,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Claim',\n                                funcProps:{\n                                  disabled:(props) => (props.tokenConfig.status === 'pending')\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.goToSection(`tools/${batchDepositConfig.route}/${props.tokenConfig.token}`)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                        availableTokens={this.state.batchedDepositsAvailableTokens}\n                      />\n                    </Flex>\n                  </Flex>\n                )\n              }\n              <Flex\n                width={1}\n                id={'available-assets'}\n                flexDirection={'column'}\n                mb={!this.state.depositedTokens.length ? 4 : 0}\n              >\n                {\n                  (this.state.depositedTokens.length>0 || Object.keys(this.state.tokensToMigrate).length>0 || this.state.remainingTokens.length>0 ) &&\n                    <Title my={[3,4]}>Available assets</Title>\n                }\n                <Flex width={1} flexDirection={'column'}>\n                  {\n                    Object.keys(this.state.tokensToMigrate).length>0 &&\n                    <Flex\n                      width={1}\n                      mb={[3,4]}\n                      id={\"migrate-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Assets to migrate\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.tokensToMigrate)}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.15]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.12],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.26,0.15],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                showLoader:false,\n                                name:'idleDistribution',\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                },\n                                visible:currentNetwork.provider==='infura' ? true : false\n                              },\n                            ]\n                          },\n                          {\n                            title:'OLD APY',\n                            props:{\n                              width:[0.26,0.12],\n                            },\n                            fields:[\n                              {\n                                name:'oldApy'\n                              }\n                            ]\n                          },\n                          {\n                            title:'BALANCE',\n                            mobile:false,\n                            props:{\n                              width:[0.16,0.14],\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'amountToMigrate',\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.15],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens'\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.29 : 0 ,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: 'Migrate',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                  this.state.depositedTokens.length>0 &&\n                    <Flex\n                      mb={ this.state.remainingTokens.length>0 ? [3,4] : 0 }\n                      width={1}\n                      id={\"deposited-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Deposited assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.depositedTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            props:{\n                              width:[0.21,0.11],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.30,0.16],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                },\n                                visible:currentNetwork.provider==='infura' ? true : false\n                              },\n                            ]\n                          },\n                          {\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.22,0.15],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'amountLent'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.13],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'EARNINGS',\n                            props:{\n                              width:[0.15,0.15],\n                              textAlign:'center'\n                            },\n                            parentProps:{\n                              alignItems:'center',\n                              flexDirection:'column',\n                            },\n                            fields:[\n                              {\n                                name:'earnings',\n                                props:{\n                                  decimals:3\n                                }\n                              },\n                              {\n                                name:'earningsPerc',\n                                showLoader:false,\n                                showDirection:false,\n                                props:{\n                                  fontSize:0,\n                                  decimals:3\n                                }\n                              }\n                            ]\n                          },\n                          /*\n                          {\n                            title:'EARNINGS %',\n                            props:{\n                              width:[0.27,0.14],\n                            },\n                            fields:[\n                              {\n                                name:'earningsPerc'\n                              }\n                            ]\n                          },\n                          */\n                          {\n                            title:'',\n                            mobile:false,\n                            props:{\n                              width:0.17,\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Manage',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'redeem',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                    this.state.remainingTokens.length>0 &&\n                    <Flex id=\"remaining-assets\" width={1} flexDirection={'column'}>\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Available assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.remainingTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:true,\n                            title:'POOL',\n                            visibleOnDesktop:true,\n                            props:{\n                              width:[0.21, 0.13],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.31,0.16],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                },\n                                visible:currentNetwork.provider==='infura' ? true : false\n                              },\n                            ]\n                          },\n                          {\n                            title:'FARMING',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account !== null,\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.22,0.16],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APR LAST WEEK',\n                            mobile:false,\n                            props:{\n                              width:0.25,\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'aprChart',\n                                style:{\n                                  overflow:'visible',\n                                },\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.26 : 0 , 0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: (props) => {\n                                  return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'Migrate' : 'Deposit';\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                },\n                                funcProps:{\n                                  mainColor: (props) => {\n                                    return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'migrate' : 'deposit'\n                                  }\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                </Flex>\n              </Flex>\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id={\"yield-farming\"}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Yield Farming</Title>\n                    <AssetsList\n                      enabledTokens={Object.keys(this.functionsUtil.getGovTokensFarming())}\n                      cols={[\n                        {\n                          title:'TOKEN',\n                          props:{\n                            width:[0.3,0.15]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:2,\n                                height:['1.4em','2.3em']\n                              }\n                            },\n                            {\n                              name:'tokenName'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'BALANCE',\n                          props:{\n                            width:[0.33, 0.25],\n                          },\n                          fields:[\n                            {\n                              name:'tokenBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            }\n                          ]\n                        },\n                        {\n                          title:'REDEEMABLE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                          props:{\n                            width:[0.35,0.30],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'redeemableBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            },\n                          ]\n                        },\n                        {\n                          title:'DISTRIBUTION',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                          props:{\n                            width:[0.35,0.30],\n                          },\n                          fields:[\n                            {\n                              name:'userDistributionSpeed',\n                              props:{\n                                decimals:6\n                              }\n                            }\n                          ]\n                        },\n                        /*\n                        {\n                          mobile:false,\n                          title:'APR',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenApr']),\n                          props:{\n                            width:[0.2,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'apr',\n                            }\n                          ]\n                        },\n                        {\n                          title:'TOKEN PRICE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','tokenPrice']),\n                          mobile:false,\n                          props:{\n                            width: 0.17,\n                          },\n                          parentProps:{\n                            width:1,\n                            pr:[2,4]\n                          },\n                          fields:[\n                            {\n                              name:'tokenPrice',\n                              props:{\n                                unit:'$',\n                                unitPos:'left',\n                                unitProps:{\n                                  mr:1,\n                                  fontWeight:3,\n                                  fontSize:[0,2],\n                                  color:'cellText'\n                                }\n                              }\n                            }\n                          ]\n                        },\n                        */\n                      ]}\n                      {...this.props}\n                      availableTokens={govTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id=\"earnings-estimation\"\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Estimated earnings</Title>\n                    <EarningsEstimation\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.props.account && polygonBridgeConfig.enabled && polygonBridgeConfig.availableNetworks.includes(currentNetwork.id) && (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                    id={'polygon-transactions'}\n                  >\n                    <PolygonBridgeTransactions\n                      {...this.props}\n                      title={'Polygon Bridge Transactions'}\n                      titleProps={{\n                        my:4\n                      }}\n                    />\n                  </Flex>\n                )\n              }\n              {\n                this.props.account && this.state.depositedTokens.length>0 && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={[]}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.15,0.24]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.15,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.32,0.23],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.22],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:0.19,\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.15,0.20],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','1.6em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default StrategyPage;","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TransactionField from '../TransactionField/TransactionField';\nimport { Flex, Box, Text, Icon, Link, Checkbox, Tooltip } from \"rimble-ui\";\n\nclass BatchDeposit extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      execute:{\n        txHash:null,\n        loading:false\n      },\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    usePermit:false,\n    batchRedeems:{},\n    lastExecution:null,\n    permitEnabled:true,\n    hasDeposited:false,\n    permitSigned:false,\n    selectedToken:null,\n    showPermitBox:false,\n    currBatchIndex:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    availableTokens:null,\n    selectedStrategy:null,\n    componentLoaded:false,\n    executeSucceeded:false,\n    migrationEnabled:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    availableStrategies:null,\n    batchDepositEnabled:false,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadStrategies();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      this.setState({\n        componentLoaded:false\n      },async () => {\n        await this.loadTokens();\n      });\n    }\n\n    const selectedStrategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    if (selectedStrategyChanged){\n      const selectedToken = Object.keys(this.state.availableTokens)[0];\n      this.selectToken(selectedToken);\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const executeSucceededChanged = prevState.executeSucceeded !== this.state.executeSucceeded;\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (selectedTokenChanged || contractApprovedChanged || executeSucceededChanged){\n      this.checkBatchs();\n    }\n\n  }\n\n  async execute () {\n\n    const loading = true;\n\n    const callbackExecute = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Execute',\n        eventCategory: 'BatchDeposit',\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        executeSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          execute:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptExecute = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          execute:{\n            ...prevState.processing.execute,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'executeBatch', [true], null, callbackExecute, callbackReceiptExecute);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        execute:{\n          ...prevState.processing.execute,\n          loading\n        }\n      }\n    }));\n  }\n\n  async checkBatchs(migrationSucceeded=false){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.tokenConfig.name,this.state.tokenConfig.address,this.state.tokenConfig.abi)\n    ]);\n\n    let [\n      batchExecutions,\n      currBatchIndex,\n      migrationContractApproved\n    ] = await Promise.all([\n      this.functionsUtil.getBatchedDepositExecutions(migrationContractInfo.address),\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.tokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    // If use Permit don't ask for Approve\n    let usePermit = false;\n    if (!migrationContractApproved && migrationContractInfo.functions && migrationContractInfo.functions.length === 1){\n      const functionInfo = migrationContractInfo.functions[0];\n      usePermit = typeof functionInfo.usePermit !== 'undefined' ? functionInfo.usePermit : false;\n      const nonceMethod = this.functionsUtil.getGlobalConfig(['permit',this.state.tokenConfig.name,'nonceMethod']);\n      const permitContract = this.functionsUtil.getContractByName(this.state.tokenConfig.name);\n      usePermit = usePermit && permitContract && (!nonceMethod || permitContract.methods[nonceMethod] !== undefined);\n    }\n\n    const newState = {};\n    const batchTotals = {};\n    const batchRedeems = {};\n    const batchDeposits = {};\n    let batchCompleted = false;\n\n    currBatchIndex = currBatchIndex || 0;\n    for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex) ; batchIndex++){\n      let [\n        batchTotal,\n        batchRedeem,\n        batchDeposit\n      ] = await Promise.all([\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchRedeemedTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n      ]);\n      if (batchTotal && batchTotal !== null){\n        batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.tokenConfig.decimals);\n      }\n      if (batchDeposit !== null){\n        batchRedeem = this.functionsUtil.fixTokenDecimals(batchRedeem,18);\n        batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.tokenConfig.decimals);\n        if (batchDeposit.gt(0)){\n          batchDeposits[batchIndex] = batchDeposit;\n          // Calculate redeemable idleTokens\n          batchRedeems[batchIndex] = batchDeposit.times(batchRedeem).div(batchTotals[batchIndex]);\n          if (batchRedeems[batchIndex].gt(batchRedeem)){\n            batchRedeems[batchIndex] = batchRedeem;\n          }\n          // Check claimable\n          if (batchIndex < currBatchIndex){\n            batchCompleted = true;\n          }\n        }\n      }\n    }\n\n    newState.batchDeposits = batchDeposits;\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n    const batchDepositInfo = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    const batchDepositEnabled = batchDepositInfo.depositEnabled;\n\n    newState.usePermit = usePermit;\n    newState.showPermitBox = false;\n    newState.claimSucceeded = false;\n    newState.componentLoaded = true;\n    newState.executeSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.hasDeposited = hasDeposited;\n    newState.batchRedeems = batchRedeems;\n    newState.lastExecution = lastExecution;\n    newState.currBatchIndex = currBatchIndex;\n    newState.batchCompleted = batchCompleted;\n    newState.migrationSucceeded = migrationSucceeded;\n    newState.batchDepositEnabled = batchDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    // Prevent user to deposit if the batch has been completed\n    newState.canDeposit = batchDepositEnabled && !batchCompleted;\n    newState.migrationContractApproved = migrationContractApproved;\n    newState.action = hasDeposited || newState.canClaim ? 'redeem' : 'deposit';\n\n    this.setState(newState);\n  }\n\n  async loadStrategies(){\n\n    // Init tokens contracts\n    const availableStrategiesKeys = {};\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n      availableStrategiesKeys[tokenConfig.strategy] = true;\n    });\n\n    const availableStrategies = Object.keys(availableStrategiesKeys).map( strategy => {\n      const strategyConfig = this.functionsUtil.getGlobalConfig(['strategies',strategy]);\n      return {\n        value:strategy,\n        icon:strategyConfig.icon,\n        label:strategyConfig.title\n      };\n    });\n\n    // console.log('availableStrategies',availableStrategies);\n\n    if (availableStrategies && availableStrategies.length>0){\n      let selectedStrategy = availableStrategies[0].value;\n      let selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n      if (selectedToken){\n        const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n        selectedToken = selectedTokenConfig.baseToken;\n        selectedStrategy = selectedTokenConfig.strategy;\n      }\n\n      this.setState({\n        availableStrategies\n      },() => {\n        this.selectStrategy(selectedStrategy,selectedToken);\n      });\n    }\n  }\n\n  /*\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n    if (selectedToken){\n      this.selectToken(selectedToken);\n    }\n  }\n  */\n\n  async selectStrategy (selectedStrategy,selectedToken=null) {\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens)\n      .filter(key => this.props.toolProps.availableTokens[key].strategy === selectedStrategy )\n      .reduce((obj, key) => {\n        const tokenConfig = this.props.toolProps.availableTokens[key];\n        const baseTokenConfig = this.props.availableStrategies[selectedStrategy][tokenConfig.baseToken];\n\n        tokenConfig.abi = baseTokenConfig.abi;\n        tokenConfig.token = baseTokenConfig.token;\n        tokenConfig.address = baseTokenConfig.address;\n        tokenConfig.decimals = baseTokenConfig.decimals;\n        obj[tokenConfig.baseToken] = tokenConfig;\n        return obj;\n      }, {});\n\n    this.setState({\n      availableTokens,\n      selectedStrategy\n    },() => {\n      if (selectedToken){\n        this.selectToken(selectedToken);\n      }\n    });\n  }\n\n  async selectToken (selectedToken) {\n    const selectedTokenConfig = this.state.availableTokens[selectedToken];\n    const strategyAvailableTokens = this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.token];\n\n    const tokenConfig = {\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address,\n      decimals:baseTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:baseTokenConfig.abi,\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.token);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    },() => {\n      // Select strategy and available tokens\n      if (selectedTokenConfig.strategy !== this.state.selectedStrategy){\n        const selectedStrategy = selectedTokenConfig.strategy;\n        this.selectStrategy(selectedStrategy);\n      }\n    });\n  }\n\n  async claim () {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Claim',\n        eventCategory: `BatchDeposit`,\n        eventValue: parseInt(claimableValue),\n        eventLabel: this.props.selectedToken,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  async callbackPermit(){\n    this.setState({\n      permitSigned:true\n    });\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  async callbackApprove(migrationContractApproved){\n    // console.log('callbackApprove',this.state.migrationContractApproved,migrationContractApproved);\n    if (migrationContractApproved !== this.state.migrationContractApproved){\n      this.setState({\n        migrationContractApproved\n      });\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      const migrationSucceeded = false;\n      this.setState({\n        action,\n        migrationSucceeded\n      });\n    }\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  migrationEnabledCallback = (migrationEnabled) => {\n    this.setState({\n      migrationEnabled\n    });\n  }\n\n  migrationCallback = (tx) => {\n    this.checkBatchs(true);\n  }\n\n  render() {\n\n    if (!this.state.selectedStrategy){\n      return null;\n    }\n\n    const usePermit = this.state.permitEnabled && this.state.usePermit;\n    // const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchRedeem = this.state.batchRedeems && Object.values(this.state.batchRedeems).length>0 ? Object.values(this.state.batchRedeems)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n    const contractApproved = (usePermit && this.state.permitSigned) || (!usePermit && this.state.migrationContractApproved);\n    const canExecuteBatch = this.state.batchTotals && this.state.batchTotals[this.state.currBatchIndex] && this.state.batchTotals[this.state.currBatchIndex].gt(0);\n    const strategyDefaultValue = this.state.selectedStrategy ? this.state.availableStrategies.find( s => s.value === this.state.selectedStrategy ) : this.state.availableStrategies[0];\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Choose the strategy:\n            </Text>\n            <GenericSelector\n              {...this.props}\n              name={'strategy'}\n              isSearchable={false}\n              defaultValue={strategyDefaultValue}\n              CustomOptionValue={CustomOptionValue}\n              options={this.state.availableStrategies}\n              onChange={this.selectStrategy.bind(this)}\n              CustomValueContainer={CustomValueContainer}\n            />\n          </Box>\n          {\n            this.state.availableTokens && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select asset to deposit:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-from'}\n                  showBalance={true}\n                  isSearchable={false}\n                  onChange={this.selectToken.bind(this)}\n                  selectedToken={this.state.selectedToken}\n                  availableTokens={this.state.availableTokens}\n                />\n              </Box>\n          }\n          {\n            !this.state.componentLoaded && (\n              <Flex\n                mt={4}\n                flexDirection={'column'}\n              >\n                <FlexLoader\n                  flexProps={{\n                    flexDirection:'row'\n                  }}\n                  loaderProps={{\n                    size:'30px'\n                  }}\n                  textProps={{\n                    ml:2\n                  }}\n                  text={'Loading asset info...'}\n                />\n              </Flex>\n            )\n          }\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : this.state.componentLoaded &&  this.state.selectedTokenConfig && (this.state.canDeposit || this.state.canClaim) && (\n              <Box\n                width={1}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                    px:4,\n                    mt:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  > \n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ contractApproved ? 'CheckBox' : 'LooksOne'}\n                        color={ contractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        {\n                          usePermit ? 'Sign Approve message' : 'Approve the batch deposit contract'\n                        }\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ (this.state.hasDeposited || this.state.batchCompleted) ? 'CheckBox' : 'LooksTwo'}\n                        color={ (this.state.hasDeposited || this.state.batchCompleted) ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Deposit your {this.state.selectedToken}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                        color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Wait for batch execution\n                        <Link\n                          ml={1}\n                          fontWeight={2}\n                          color={'primary'}\n                          display={'inline'}\n                          hoverColor={'primary'}\n                          onClick={ e => this.props.openTooltipModal('Batch Execution Schedule',this.functionsUtil.getGlobalConfig(['messages','batchDepositExecutionSchedule'])) }\n                        >\n                          (Read More)\n                        </Link>\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                        color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Text\n                          ml={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'left'}\n                        >\n                          Claim your {this.state.tokenConfig.idle.token}\n                        </Text>\n                        <Tooltip\n                          placement={'top'}\n                          message={`You will start earning gov tokens after the batch is executed and you claim your ${this.state.tokenConfig.idle.token}`}\n                        >\n                          <Icon\n                            ml={1}\n                            size={'1.2em'}\n                            name={'Warning'}\n                            color={'#ffe000'}\n                            style={{\n                              cursor:'pointer'\n                            }}\n                          />\n                        </Tooltip>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                </DashboardCard>\n              </Box>\n            )\n          }\n          {\n            this.state.componentLoaded && this.props.account && this.state.availableTokens && this.state.selectedToken && (\n              <Box width={1}>\n                {\n                  (contractApproved || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:2,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          color={'cellText'}\n                          name={'LightbulbOutline'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          {this.state.selectedToken} supports Approve and Deposit in a single transaction, disable this feature and try again if you can't deposit in the batch.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded && (\n                    <Flex\n                      p={0}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Batch Deposit?\n                      </Link>\n                    </Flex>\n                  )\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    this.state.batchDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        useMetaTx={false}\n                        showActions={false}\n                        usePermit={usePermit}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        showBalanceSelector={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        migrationParams={toMigrate => [toMigrate]}\n                        selectedStrategy={this.props.selectedStrategy}\n                        callbackPermit={this.callbackPermit.bind(this)}\n                        callbackApprove={this.callbackApprove.bind(this)}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationEnabledCallback={this.migrationEnabledCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedToken} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch Deposit is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar {...this.props} web3={this.props.web3} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.tokenConfig.idle.token}!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!<br />You can now claim your {batchRedeem.toFixed(4)} {this.state.tokenConfig.idle.token}\n                            </Text>\n                            <Text\n                              fontSize={1}\n                              color={'#ff9900'}\n                              textAlign={'center'}\n                            >\n                              (You need to claim your {this.state.tokenConfig.idle.token} to start earning Gov Tokens)\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:2,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'1.8em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited <strong>{batchDeposit.toFixed(4)} {this.state.selectedToken}</strong>, please wait until the batch is executed to claim your {this.state.tokenConfig.idle.token}.\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n                {\n                  this.state.batchTotals[this.state.currBatchIndex] && \n                    <DashboardCard\n                      cardProps={{\n                        p:2,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.execute.loading ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <TxProgressBar {...this.props} waitText={`Batch execution estimated in`} endMessage={`Finalizing batch execution request...`} hash={this.state.processing.execute.txHash} />\n                          </Flex>\n                        ) : this.state.executeSucceeded ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Text\n                              fontWeight={500}\n                              color={'copyColor'}\n                              textAlign={'center'}\n                            >\n                              Batch Pool: {this.state.batchTotals[this.state.currBatchIndex].toFixed(4)} {this.state.selectedToken}\n                            </Text>\n                            {\n                              canExecuteBatch && \n                                <Link\n                                  textAlign={'center'}\n                                  hoverColor={'primary'}\n                                  onClick={this.execute.bind(this)}\n                                >\n                                  Execute Batch\n                                </Link>\n                            }\n                            {\n                              this.state.batchTotals[this.state.currBatchIndex].lt(this.state.selectedTokenConfig.minPoolSize) && (\n                                <Text\n                                  mb={1}\n                                  fontSize={1}\n                                  color={'alert'}\n                                  textAlign={'center'}\n                                >\n                                  (The pool size has to reach at least {this.functionsUtil.formatMoney(this.state.selectedTokenConfig.minPoolSize,0)} {this.state.selectedToken} to be executed)\n                                </Text>\n                              )\n                            }\n                            {\n                              this.state.lastExecution && (\n                                <Text\n                                  fontSize={0}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Last Batch Execution: {this.functionsUtil.strToMoment(this.state.lastExecution.timeStamp*1000).utc().format('YYYY-MM-DD HH:mm UTC')}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchDeposit;","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\n// import TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass PolygonBridge extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    txsToExit:[],\n    infoBox:null,\n    polygonTxs:[],\n    inputValue:null,\n    dataLoaded:false,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    availableTokens:null,\n    availableNetworks:[],\n    approveEnabled:false,\n    contractApproved:false,\n    defaultTransaction:null,\n    approveDescription:null,\n    selectedTransaction:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentDidMount(){\n    this.loadData();\n  }\n\n  async loadPolygonTxs(){\n    const polygonTxs = await this.functionsUtil.getPolygonBridgeTxs();\n    this.setState({\n      polygonTxs,\n      dataLoaded:true\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      const tokenConfig = this.props.toolProps.availableTokens[this.state.selectedToken];\n      const rootTokenConfig = tokenConfig.rootToken;\n      const childTokenConfig = tokenConfig.childToken;\n\n      // Init contracts\n      await Promise.all([\n        rootTokenConfig ? this.props.initContract(rootTokenConfig.name,rootTokenConfig.address,rootTokenConfig.abi) : null,\n        childTokenConfig ? this.props.initContract(childTokenConfig.name,childTokenConfig.address,childTokenConfig.abi) : null\n      ]);\n\n      this.setState({\n        tokenConfig\n      },() => {\n        this.updateData();\n      });\n    } else {\n      const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n      const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n      if (selectedActionChanged || contractApprovedChanged){\n        this.updateData();\n      }\n    }\n\n    const contractInfoChanged = JSON.stringify(prevState.contractInfo) !== JSON.stringify(this.state.contractInfo);\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async changeInputCallback(inputValue=null){\n\n  }\n\n  getTransactionParams(amount){\n    let value = null;\n    let methodName = null;\n    let methodParams = [];\n    let contractName = null;\n    amount = this.functionsUtil.toBN(amount);\n    const bridgeType = this.state.tokenConfig.bridgeType;\n    switch (this.state.selectedAction){\n      case 'Deposit':\n        switch (this.state.selectedToken){\n          case 'WETH':\n            methodName = 'depositEtherFor';\n            contractName = 'RootChainManager';\n            value = this.props.web3.eth.abi.encodeParameter('uint256', amount);\n            methodParams = [this.props.account];\n          break;\n          default:\n            const depositData = this.props.web3.eth.abi.encodeParameter('uint256', amount);\n            switch (bridgeType){\n              case 'plasma':\n                contractName = 'DepositManager';\n                methodName = 'depositERC20ForUser';\n                methodParams = [this.state.tokenConfig.rootToken.address,this.props.account,depositData];\n              break;\n              default:\n              case 'pos':\n                methodName = 'depositFor';\n                contractName = 'RootChainManager';\n                methodParams = [this.props.account,this.state.tokenConfig.rootToken.address,depositData];\n              break;\n            }\n          break;\n        }\n      break;\n      case 'Withdraw':\n        methodName = 'withdraw';\n        methodParams = [amount];\n        contractName = this.state.tokenConfig.childToken.name;\n        if (this.state.tokenConfig.sendValue){\n          value = this.props.web3.eth.abi.encodeParameter('uint256', amount);\n        }\n      break;\n      default:\n      break;\n    }\n\n    // console.log('getTransactionParams',{\n    //   value,\n    //   methodName,\n    //   methodParams,\n    //   contractName\n    // });\n\n    return {\n      value,\n      methodName,\n      methodParams,\n      contractName\n    };\n  }\n\n  exitCallback(){\n\n  }\n\n  async getExitTransactionParams(){\n    const txHash = this.state.selectedTransaction;\n    const exitCalldata = await this.props.maticPOSClient.exitERC20(txHash, { from:this.props.account, encodeAbi: true })\n    if (exitCalldata && exitCalldata.data){\n      return exitCalldata.data;\n    }\n    return null;\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  async selectTransaction(selectedTransaction){\n    this.setState({\n      selectedTransaction\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    /*\n    switch (this.state.selectedAction){\n      case 'Deposit':\n        const depositedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const depositedTokens = depositedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(depositedTokensLog.data,16),this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n      break;\n      case 'Withdraw':\n        const withdrawnTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const withdrawnTokens = withdrawnTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(withdrawnTokensLog.data,16),this.state.tokenConfig.decimals) : (tx.txReceipt && tx.txReceipt.events && tx.txReceipt.events.Transfer ? this.functionsUtil.fixTokenDecimals(tx.txReceipt.events.Transfer.returnValues.value,this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0));\n      break;\n      default:\n      break;\n    }\n    */\n    const transactionSucceeded = tx;\n    this.setState({\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(){\n    const newState = {};\n    const isETH = this.state.selectedToken==='WETH';\n    const bridgeType = this.state.tokenConfig.bridgeType;\n    switch (this.state.selectedAction){\n      case 'Deposit':\n        newState.steps = [];\n        newState.permitEnabled = false;\n        newState.availableNetworks = [1,5];\n        newState.approveEnabled = !isETH;\n        newState.approveDescription = `Approve the contract to deposit your ${this.state.selectedToken}`;\n        newState.contractInfo = bridgeType === 'pos' ? this.props.toolProps.contracts.ERC20Predicate : this.props.toolProps.contracts.DepositManager;\n        newState.balanceProp = isETH ? await this.functionsUtil.getETHBalance(this.props.account) : await this.functionsUtil.getTokenBalance(this.state.tokenConfig.rootToken.name,this.props.account);\n        if (this.state.transactionSucceeded){\n          let depositedTokensLog = null;\n          let depositedTokensEvent = null;\n          if (!isETH){\n            depositedTokensEvent = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events ? Object.values(this.state.transactionSucceeded.txReceipt.events).find( event => event.address.toLowerCase() === this.state.tokenConfig.rootToken.address.toLowerCase() && event.raw.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && event.raw.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && event.raw.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            depositedTokensLog = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.logs ? this.state.transactionSucceeded.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.rootToken.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          } else {\n            depositedTokensEvent = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events ? Object.values(this.state.transactionSucceeded.txReceipt.events).find( event => event.address.toLowerCase() === this.props.toolProps.contracts.EtherPredicate.address.toLowerCase() && event.raw.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && event.raw.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            depositedTokensLog = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.logs ? this.state.transactionSucceeded.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.contracts.EtherPredicate.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          }\n          const depositedTokens = depositedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(depositedTokensLog.data,16),this.state.tokenConfig.decimals) : ( depositedTokensEvent ? this.functionsUtil.fixTokenDecimals(parseInt(depositedTokensEvent.raw.data,16),this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0));\n          newState.infoBox = {\n            icon:'DoneAll',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`You have successfully deposited <strong>${depositedTokens.toFixed(4)} ${this.state.selectedToken}</strong> in the Polygon chain. Please wait ~7-8 minutes for your balance to be accounted in the Polygon chain.`\n          }\n        } else {\n          newState.infoBox = {\n            icon:'InfoOutline',\n            iconProps:{\n              color:'cellText'\n            },\n            text:`Please note that deposit of funds takes ~7-8 minutes to be accounted in the Polygon chain.`\n          }\n        }\n        // console.log('updateData',newState);\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.availableNetworks = [137,80001];\n        newState.contractInfo = this.state.tokenConfig.childToken;\n        newState.balanceProp = await this.functionsUtil.getTokenBalance(this.state.tokenConfig.childToken.name,this.props.account);\n\n        const currentNetwork = this.functionsUtil.getRequiredNetwork();\n        const maticNetwork = currentNetwork.name;\n        const mainNetworkId = this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',currentNetwork.id]);\n        const mainNetworkName = this.functionsUtil.getGlobalConfig(['network','availableNetworks',mainNetworkId,'name']);\n        newState.steps = [\n          {\n            icon:'LooksOne',\n            completed:false,\n            description:`Withdraw ${this.state.selectedToken} from ${maticNetwork} network`\n          },\n          {\n            icon:'LooksTwo',\n            completed:false,\n            description:`Wait for the checkpoint to be submitted`\n          },\n          {\n            icon:'Looks3',\n            completed:false,\n            description:`Exit ${this.state.selectedToken} from ${mainNetworkName} network`\n          },\n        ];\n        if (this.state.transactionSucceeded){\n          const withdrawnTokensEvent = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events ? Object.values(this.state.transactionSucceeded.txReceipt.events).find( event => event.address.toLowerCase() === this.state.tokenConfig.childToken.address.toLowerCase() && event.raw.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && event.raw.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && event.raw.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          const withdrawnTokensLog = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.logs ? this.state.transactionSucceeded.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.childToken.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          const withdrawnTokens = withdrawnTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(withdrawnTokensLog.data,16),this.state.tokenConfig.decimals) : (this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events && this.state.transactionSucceeded.txReceipt.events.Transfer ? this.functionsUtil.fixTokenDecimals(this.state.transactionSucceeded.txReceipt.events.Transfer.returnValues.value,this.state.tokenConfig.decimals) : ( withdrawnTokensEvent ? this.functionsUtil.fixTokenDecimals(parseInt(withdrawnTokensEvent.raw.data,16),this.state.tokenConfig.decimals)  : this.functionsUtil.BNify(0)));\n          newState.infoBox = {\n            icon:'DoneAll',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`You have successfully withdrawn <strong>${withdrawnTokens.toFixed(4)} ${this.state.selectedToken}</strong> from the Polygon chain. Please wait up to 2-3 hours to be able to complete the withdrawal.`\n          }\n        } else {\n          let text = '';\n          switch (bridgeType){\n            case 'plasma':\n              text = `Please note that withdraw of funds takes ~7 days in Plasma.`;\n            break;\n            default:\n            case 'pos':\n              text = `Please note that withdraw of funds takes ~45 mins to 1 hour in PoS.`;\n            break;\n          }\n          newState.infoBox = {\n            text,\n            icon:'InfoOutline',\n            iconProps:{\n              color:'cellText'\n            },\n          }\n        }\n      break;\n      case 'Exit':\n        newState.availableNetworks = [1,5];\n        newState.txsToExit = this.state.polygonTxs.filter( tx => tx.included && tx.action === 'Withdraw' && !tx.exited && tx.tokenSymbol === this.state.selectedToken ).map( tx => {\n          const label = this.functionsUtil.strToMoment(tx.timeStamp*1000).format('DD-MM-YYYY HH:mm')+' - '+tx.value.toFixed(6)+' '+tx.token;\n          return {\n            label,\n            data:tx,\n            value:tx.hash\n          }\n        });\n\n        newState.defaultTransaction = newState.txsToExit.length>0 ? newState.txsToExit[0] : null;\n        newState.selectedTransaction = newState.defaultTransaction ? newState.defaultTransaction.data.hash : null;\n      break;\n      default:\n      break;\n    }\n\n    if (!newState.balanceProp){\n      newState.balanceProp = this.functionsUtil.BNify(0);\n    }\n\n    // console.log('updateData',newState);\n\n    this.setState(newState);\n  }\n\n  async loadData(){\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens).reduce( (output,token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      if (tokenConfig.enabled){\n        output.push({\n          value:token,\n          label:token,\n          ...tokenConfig\n        });\n      }\n      return output;\n    },[]);\n\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const paramIsToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2];\n    const selectedToken = paramIsToken ? this.props.urlParams.param2 : (this.props.selectedToken || this.state.selectedToken || availableTokens[0].value);\n    const selectedOption = availableTokens.find( t => t.value === selectedToken );\n    const defaultAction = !paramIsToken ? (currentNetwork.provider === 'infura' ? 'Deposit' : 'Withdraw') : 'Deposit';\n    const selectedAction = this.props.action || this.state.action || defaultAction;\n    const tokenConfig = this.props.toolProps.availableTokens[selectedToken];\n\n    // console.log('loadData',this.props.urlParams);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedOption,\n      selectedAction,\n      availableTokens\n    },() => {\n      this.loadPolygonTxs();\n    });\n  }\n\n  async exitSelectedTransaction(){\n\n  }\n\n  selectToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n    const fullWidth = !!this.props.fullWidth;\n    const isExit = this.state.selectedAction === 'Exit';\n    const isDeposit = this.state.selectedAction === 'Deposit';\n    const isWithdraw = this.state.selectedAction === 'Withdraw';\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const currentNetworkId = currentNetwork.id;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTokens ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tokens...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.availableTokens.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active tokens.\n                  </Text>\n                ) : (\n                  <Flex\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                    width={[1,fullWidth ? 1 : '33em']}\n                  >\n                    {\n                      !this.props.selectedToken && (\n                        <Box\n                          width={1}\n                        >\n                          <Text\n                            mb={1}\n                          >\n                            Select Token:\n                          </Text>\n                          <AssetSelector\n                            id={'tokens'}\n                            {...this.props}\n                            showBalance={false}\n                            isSearchable={false}\n                            onChange={this.selectToken.bind(this)}\n                            selectedToken={this.state.selectedToken}\n                            availableTokens={this.props.toolProps.availableTokens}\n                          />\n                        </Box>\n                      )\n                    }\n                    {\n                      this.state.selectedToken && (\n                        <Box\n                          mt={2}\n                          width={1}\n                        >\n                          {\n                            !this.props.action && (\n                              <Box\n                                width={1}\n                              >\n                                <Text\n                                  mb={2}\n                                >\n                                  Choose the action:\n                                </Text>\n                                <Flex\n                                  mb={3}\n                                  alignItems={'center'}\n                                  flexDirection={'row'}\n                                  justifyContent={'space-between'}\n                                >\n                                  <CardIconButton\n                                    {...this.props}\n                                    cardProps={{\n                                      px:3,\n                                      py:2,\n                                      width:0.325\n                                    }}\n                                    textProps={{\n                                      fontWeight:2,\n                                      fontSize:[1,2]\n                                    }}\n                                    text={'Deposit'}\n                                    iconColor={'deposit'}\n                                    icon={'ArrowDownward'}\n                                    iconBgColor={'#ced6ff'}\n                                    handleClick={ e => this.setAction('Deposit') }\n                                    isActive={ this.state.selectedAction === 'Deposit' }\n                                  />\n                                  <CardIconButton\n                                    {...this.props}\n                                    cardProps={{\n                                      px:3,\n                                      py:2,\n                                      width:0.325\n                                    }}\n                                    textProps={{\n                                      fontWeight:2,\n                                      fontSize:[1,2]\n                                    }}\n                                    text={'Withdraw'}\n                                    iconColor={'redeem'}\n                                    icon={'ArrowUpward'}\n                                    iconBgColor={'#ceeff6'}\n                                    handleClick={ e => this.setAction('Withdraw') }\n                                    isActive={ this.state.selectedAction === 'Withdraw' }\n                                  />\n                                  <CardIconButton\n                                    {...this.props}\n                                    cardProps={{\n                                      px:3,\n                                      py:2,\n                                      width:0.325\n                                    }}\n                                    textProps={{\n                                      fontWeight:2,\n                                      fontSize:[1,2]\n                                    }}\n                                    text={'Exit'}\n                                    icon={'SwapHoriz'}\n                                    iconColor={'redeem'}\n                                    iconBgColor={'#ceeff6'}\n                                    handleClick={ e => this.setAction('Exit') }\n                                    isActive={ this.state.selectedAction === 'Exit' }\n                                  />\n                                </Flex>\n                              </Box>\n                            )\n                          }\n                          {\n                            !this.state.availableNetworks.includes(currentNetworkId) ? (\n                              <DashboardCard\n                                cardProps={{\n                                  p:3,\n                                  mb:3,\n                                  width:1\n                                }}\n                              >\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                >\n                                  <Icon\n                                    size={'1.8em'}\n                                    name={'Warning'}\n                                    color={'cellText'}\n                                  />\n                                  <Text\n                                    mt={1}\n                                    fontSize={2}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    The <strong>{this.functionsUtil.capitalize(currentNetwork.name)} network</strong> is not supported for this function, please switch to <strong>{this.functionsUtil.getGlobalConfig(['network','availableNetworks',this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',currentNetworkId]),'name'])} network</strong>.\n                                  </Text>\n                                  <RoundButton\n                                    buttonProps={{\n                                      mt:3,\n                                      width:[1,1/2],\n                                      fontSize:[1,2]\n                                    }}\n                                    handleClick={e => this.props.setRequiredNetwork(this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',currentNetworkId]))}\n                                  >\n                                    Switch Network\n                                  </RoundButton>\n                                </Flex>\n                              </DashboardCard>\n                            ) : (this.state.tokenConfig && this.state.balanceProp && this.state.contractInfo) ? (\n                              <Box\n                                mt={1}\n                                width={1}\n                                mb={[4,3]}\n                              >\n                                {\n                                  (isDeposit || isWithdraw) ? (\n                                    <SendTxWithBalance\n                                      {...this.props}\n                                      error={this.state.error}\n                                      steps={this.state.steps}\n                                      infoBox={this.state.infoBox}\n                                      action={this.state.selectedAction}\n                                      tokenConfig={this.state.tokenConfig}\n                                      tokenBalance={this.state.balanceProp}\n                                      contractInfo={this.state.contractInfo}\n                                      permitEnabled={this.state.permitEnabled}\n                                      approveEnabled={this.state.approveEnabled}\n                                      callback={this.transactionSucceeded.bind(this)}\n                                      approveDescription={this.state.approveDescription}\n                                      contractApproved={this.contractApproved.bind(this)}\n                                      balanceSelectorInfo={this.state.balanceSelectorInfo}\n                                      changeInputCallback={this.changeInputCallback.bind(this)}\n                                      getTransactionParams={this.getTransactionParams.bind(this)}\n                                    >\n                                      {\n                                        isDeposit ? (\n                                          <Flex\n                                            width={1}\n                                            alignItems={'stretch'}\n                                            flexDirection={'column'}\n                                            justifyContent={'center'}\n                                          >\n                                            <BuyModal\n                                              {...this.props}\n                                              showInline={true}\n                                              availableMethods={[]}\n                                              buyToken={this.state.selectedToken}\n                                            />\n                                          </Flex>\n                                          // `You don't have any ${this.state.selectedToken} in your wallet.`\n                                        ) : isWithdraw && (\n                                          <DashboardCard\n                                            cardProps={{\n                                              p:3\n                                            }}\n                                          >\n                                            <Flex\n                                              alignItems={'center'}\n                                              flexDirection={'column'}\n                                            >\n                                              <Icon\n                                                name={'MoneyOff'}\n                                                color={'cellText'}\n                                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                              />\n                                              <Text\n                                                mt={1}\n                                                fontSize={2}\n                                                color={'cellText'}\n                                                textAlign={'center'}\n                                              >\n                                                You don't have any {this.state.selectedToken} to withdraw.\n                                              </Text>\n                                            </Flex>\n                                          </DashboardCard>\n                                        )\n                                      }\n                                    </SendTxWithBalance>\n                                  ) : isExit && (\n                                    <Box\n                                      width={1}\n                                    >\n                                      {\n                                        !this.state.dataLoaded ? (\n                                          <Flex\n                                            mt={4}\n                                            flexDirection={'column'}\n                                          >\n                                            <FlexLoader\n                                              flexProps={{\n                                                flexDirection:'row'\n                                              }}\n                                              loaderProps={{\n                                                size:'30px'\n                                              }}\n                                              textProps={{\n                                                ml:2\n                                              }}\n                                              text={'Loading transactions...'}\n                                            />\n                                          </Flex>\n                                        ) : this.state.txsToExit.length ? (\n                                          <Box\n                                            width={1}\n                                          >\n                                            <Text mb={1}>\n                                              Select Transaction:\n                                            </Text>\n                                            <GenericSelector\n                                              {...this.props}\n                                              isSearchable={false}\n                                              name={'transactions'}\n                                              options={this.state.txsToExit}\n                                              onChange={this.selectTransaction.bind(this)}\n                                              defaultValue={this.state.defaultTransaction}\n                                            />\n                                            {\n                                              this.state.selectedTransaction && (\n                                                <ExecuteTransaction\n                                                  action={'Exit'}\n                                                  Component={RoundButton}\n                                                  parentProps={{\n                                                    mt:3,\n                                                    alignItems:'center',\n                                                    justifyContent:'center'\n                                                  }}\n                                                  componentProps={{\n                                                    buttonProps:{\n                                                      value:'Exit',\n                                                      width:[1,1/3],\n                                                      size:'medium',\n                                                      mainColor:'redeem'\n                                                    },\n                                                    value:'Exit Transaction',\n                                                  }}\n                                                  params={[]}\n                                                  methodName={'exit'}\n                                                  sendRawTransaction={true}\n                                                  contractName={'RootChainManager'}\n                                                  callback={this.exitCallback.bind(this)}\n                                                  getTransactionParamsAsync={this.getExitTransactionParams.bind(this)}\n                                                  {...this.props}\n                                                >\n                                                  <Flex\n                                                    flexDirection={'row'}\n                                                    alignItems={'center'}\n                                                    justifyContent={'center'}\n                                                  >\n                                                    <Icon\n                                                      mr={1}\n                                                      name={'Done'}\n                                                      size={'1.4em'}\n                                                      color={this.props.theme.colors.transactions.status.completed}\n                                                    />\n                                                    <Text\n                                                      fontWeight={500}\n                                                      fontSize={'15px'}\n                                                      color={'copyColor'}\n                                                      textAlign={'center'}\n                                                    >\n                                                      Transaction successfully exited!\n                                                    </Text>\n                                                  </Flex>\n                                                </ExecuteTransaction>\n                                              )\n                                            }\n                                          </Box>\n                                        ) : (\n                                          <DashboardCard\n                                            cardProps={{\n                                              p:3,\n                                              width:1\n                                            }}\n                                          >\n                                            <Flex\n                                              alignItems={'center'}\n                                              flexDirection={'column'}\n                                            >\n                                              <Icon\n                                                size={'1.8em'}\n                                                name={'Warning'}\n                                                color={'cellText'}\n                                              />\n                                              <Text\n                                                mt={1}\n                                                fontSize={2}\n                                                color={'cellText'}\n                                                textAlign={'center'}\n                                              >\n                                                You cannot exit any transaction yet.\n                                              </Text>\n                                            </Flex>\n                                          </DashboardCard>\n                                        )\n                                      }\n                                    </Box>\n                                  )\n                                }\n                              </Box>\n                            ) : (\n                              <Flex\n                                mt={3}\n                                mb={3}\n                                width={1}\n                              >\n                                <FlexLoader\n                                  flexProps={{\n                                    flexDirection:'row'\n                                  }}\n                                  loaderProps={{\n                                    size:'30px'\n                                  }}\n                                  textProps={{\n                                    ml:2\n                                  }}\n                                  text={'Loading info...'}\n                                />\n                              </Flex>\n                            )\n                          }\n                        </Box>\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default PolygonBridge;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass CoverProtocol extends Component {\n\n  state = {\n    steps:null,\n    infoBox:null,\n    swapInfo:null,\n    portfolio:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedAction:null,\n    successMessage:null,\n    activeCoverages:null,\n    defaultCoverage:null,\n    selectedCoverage:null,\n    contractApproved:false,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n    // window.transactionSucceeded = this.transactionSucceeded.bind(this);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedCoverageChanged = prevState.selectedCoverage !== this.state.selectedCoverage;\n    if (selectedCoverageChanged){\n      const selectedToken = this.state.selectedCoverage.collateral;\n      const tokenConfig = Object.values(this.props.availableStrategies)[0][selectedToken];\n      const tokenBalance = await this.functionsUtil.getTokenBalance(selectedToken,this.props.account);\n      const selectedAction = !this.state.selectedAction ? (this.props.urlParams.param2 || 'Claim') : this.state.selectedAction;\n      this.setState({\n        tokenConfig,\n        tokenBalance,\n        selectedToken,\n        selectedAction\n      });\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue && this.state.inputValue.gt(0);\n    const swapInfoChanged = JSON.stringify(prevState.swapInfo) !== JSON.stringify(this.state.swapInfo) && this.state.inputValue && this.state.inputValue.gt(0);\n    if (selectedActionChanged || inputValueChanged || swapInfoChanged || contractApprovedChanged){\n      this.updateData();\n    }\n\n    const contractInfoChanged = JSON.stringify(prevState.contractInfo) !== JSON.stringify(this.state.contractInfo);\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async getSwapInfo(amount){\n    amount = this.functionsUtil.BNify(amount);\n    if (!amount.isNaN() && amount.gt(0)){\n      // console.log('getSwapInfo',this.state.contractInfo.name,this.state.tokenConfig.address,balancerTokenConfig.address,swapFee,covTokens,tokenPrice);\n\n      if (this.state.tokenPrice && this.state.swapFee && this.state.covTokens){\n\n        const swapFee = this.state.swapFee;\n        const tokenPrice = this.state.tokenPrice;\n        let tokenAmountOut = amount.div(tokenPrice);\n        tokenAmountOut = tokenAmountOut.minus(tokenAmountOut.times(swapFee));\n\n        return {\n          amount,\n          tokenAmountOut\n        };\n      }\n    }\n\n    return null;\n  }\n\n  async changeInputCallback(inputValue=null){\n    let swapInfo = null;\n    let balanceSelectorInfo = null;\n    inputValue = inputValue || this.state.inputValue;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      switch (this.state.selectedAction){\n        case 'Mint':\n          balanceSelectorInfo = {\n            color:this.props.theme.colors.transactions.status.completed,\n            text:`You will Mint: ${inputValue.toFixed(4)} CLAIM and NOCLAIM`\n          };\n        break;\n        case 'Claim':\n        case 'NoClaim':\n          const amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.state.tokenConfig.decimals);\n          swapInfo = await this.getSwapInfo(amount);\n          if (swapInfo){\n            if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n              balanceSelectorInfo = {\n                color:this.props.theme.colors.transactions.status.completed,\n                text:`You will Buy: ~${this.functionsUtil.fixTokenDecimals(swapInfo.tokenAmountOut,18).toFixed(4)} ${this.state.selectedAction}`\n              };\n            } else {\n              balanceSelectorInfo = {\n                text:`Not enough liquidity`,\n                color:this.props.theme.colors.transactions.status.failed,\n              };\n            }\n          }\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      swapInfo,\n      inputValue,\n      balanceSelectorInfo\n    });\n  }\n\n  async getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n    amount = this.functionsUtil.BNify(amount);\n    const MAX_UINT256 = this.functionsUtil.BNify(2).pow(256).minus(1).toFixed(0);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        methodName = 'addCover';\n        methodParams = [this.state.tokenConfig.address,parseInt(this.state.selectedCoverage.expirationTimestamp),this.functionsUtil.integerValue(amount)];\n      break;\n      case 'Claim':\n      case 'NoClaim':\n        methodName = 'swapExactAmountOut';\n        const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const swapInfo = await this.getSwapInfo(amount);\n        if (swapInfo){\n          if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n            methodParams = [this.state.tokenConfig.address,this.functionsUtil.integerValue(amount),balancerTokenConfig.address, this.functionsUtil.integerValue(swapInfo.tokenAmountOut), MAX_UINT256];\n          } else {\n            return null;\n          }\n        }\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n    const dashboardUrl = `#${this.functionsUtil.getGlobalConfig(['dashboard','baseRoute'])}/best`;\n    const fixedAmount = this.functionsUtil.fixTokenDecimals(amount,this.state.tokenConfig.decimals);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        const mintedClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['Claim'].address ) : null;\n        const mintedNoClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['NoClaim'].address ) : null;\n        const mintedClaimAmount = mintedClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        const mintedNoClaimAmount = mintedNoClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedNoClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully minted <strong>${mintedClaimAmount.toFixed(4)} CLAIM</strong> and <strong>${mintedNoClaimAmount.toFixed(4)} NOCLAIM</strong> tokens<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'Claim':\n        const claimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const claimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === claimTokenConfig.address ) : null;\n        const receivedClaimAmount = claimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(claimTokensLog.data,16),claimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],claimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you are now covered in the event that there is a successful attack on the protocol<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'NoClaim':\n        debugger;\n        const noClaimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const noClaimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === noClaimTokenConfig.address ) : null;\n        const receivedNoClaimAmount = noClaimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(noClaimTokensLog.data,16),noClaimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],noClaimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedNoClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you will be rewarded if there is no successful attack on the protocol by the expiry date<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Set second step completed\n    let steps = this.state.steps;\n    steps[1].completed = true;\n\n    const transactionSucceeded = true;\n    const tokenBalance = await this.functionsUtil.getTokenBalance(this.state.selectedToken,this.props.account);\n\n    // console.log('transactionSucceeded',infoBox);\n\n    this.setState({\n      steps,\n      infoBox,\n      tokenBalance,\n      transactionSucceeded\n    });\n  }\n\n  async updateData(){\n    let apy = null;\n    const steps = [];\n    let infoBox = null;\n    let swapFee = null;\n    let covTokens = null;\n    let tokenPrice = null;\n    let tokenAmount = null;\n    let contractInfo = null;\n    let collateralAmount = null;\n    let approveDescription = null;\n\n    const claimTokenConfig = this.state.selectedCoverage.tokens['Claim'];\n    const noClaimTokenConfig = this.state.selectedCoverage.tokens['NoClaim'];\n    const balancerClaimConfig = claimTokenConfig.balancerPool;\n    const balancerNoClaimConfig = noClaimTokenConfig.balancerPool;\n\n    await Promise.all([\n      this.props.initContract(claimTokenConfig.name,claimTokenConfig.address,claimTokenConfig.abi),\n      this.props.initContract(noClaimTokenConfig.name,noClaimTokenConfig.address,noClaimTokenConfig.abi),\n      this.props.initContract(balancerClaimConfig.name,balancerClaimConfig.address,balancerClaimConfig.abi),\n      this.props.initContract(balancerNoClaimConfig.name,balancerNoClaimConfig.address,balancerNoClaimConfig.abi)\n    ]);\n\n    const [\n      claimTokenBalance,\n      noClaimTokenBalance,\n      balancerPoolClaimBalance,\n      balancerPoolNoClaimBalance\n    ] = await Promise.all([\n      // Get Claim token balance\n      this.functionsUtil.getTokenBalance(claimTokenConfig.name,this.props.account),\n      // Get NOCLAIM token balance\n      this.functionsUtil.getTokenBalance(noClaimTokenConfig.name,this.props.account),\n      // Get Balancer Claim token Pool balance\n      this.functionsUtil.getTokenBalance(balancerClaimConfig.name,this.props.account),\n      // Get Balancer NOCLAIM token Pool balance\n      this.functionsUtil.getTokenBalance(balancerNoClaimConfig.name,this.props.account)\n    ]);\n\n    // Check if user has both Claim and NOCLAIM tokens\n    const hasMintedTokens = claimTokenBalance && noClaimTokenBalance && claimTokenBalance.gt(0) && noClaimTokenBalance.gt(0);\n\n    // Set Contract Info\n    switch (this.state.selectedAction){\n      case 'Mint':\n        contractInfo = this.props.toolProps.contract;\n      break;\n      case 'NoClaim':\n        contractInfo = noClaimTokenConfig.balancerPool;\n      break;\n      case 'Claim':\n        contractInfo = claimTokenConfig.balancerPool;\n      break;\n      default:\n      break;\n    }\n\n    const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n\n    if (contractInfo){\n      if (balancerTokenConfig){\n        [\n          swapFee,\n          covTokens,\n          tokenPrice\n        ] = await Promise.all([\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSwapFee'),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getBalance',[balancerTokenConfig.address]),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSpotPrice',[this.state.tokenConfig.address,balancerTokenConfig.address])\n        ]);\n\n        // Calculate yearly returns\n        if (tokenPrice){\n          const isClaim = this.state.selectedAction === 'Claim';\n          const expirationTimestamp = this.state.selectedCoverage.expirationTimestamp;\n          const days =  (expirationTimestamp*1000 - Date.now())/(60 * 60 * 24 * 1000);\n          tokenPrice = this.functionsUtil.fixTokenDecimals(tokenPrice,this.state.tokenConfig.decimals);\n          const apyPrice = isClaim ? tokenPrice : this.functionsUtil.BNify(1).minus(tokenPrice).div(tokenPrice);\n          apy = this.functionsUtil.BNify(100).times(apyPrice).times(365).div(days);\n        }\n\n        // Fix swap Fees\n        if (swapFee){\n          swapFee = this.functionsUtil.fixTokenDecimals(swapFee,18);\n        }\n      }\n\n      switch (this.state.selectedAction){\n        case 'Mint':\n          approveDescription = `Approve the Cover Protocol contract`;\n          infoBox = {\n            icon:'MonetizationOn',\n            text:`Stake ${this.state.selectedToken} to mint both CLAIM and NOCLAIM tokens in a 1:1 ratio then add them to the respective Balancer Pool to earn trading fees.<br /><small>Prior to expiry or an accepted claim, users can redeem back their collateral with both their CLAIM and NOCLAIM tokens. <a href=\"https://docs.coverprotocol.com/user-guide/redemption\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a></small>`\n          };\n          // Add Approve Step\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:hasMintedTokens,\n            description:`Mint CLAIM and NOCLAIM tokens`\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks3',\n            description:`Add your CLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolClaimBalance && balancerPoolClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['Claim'].balancerPool.address}/`,\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks4',\n            description:`Add your NOCLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolNoClaimBalance && balancerPoolNoClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['NoClaim'].balancerPool.address}/`,\n          });\n        break;\n        case 'NoClaim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your NOCLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong> if there is no successful attack on the protocol by the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`NOCLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold if there is no successful attack on the protocol by the expiry date.`\n            };\n          }\n\n          // Add Yearly cost and read more\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly return of buying and holding NOCLAIM until expiration is <strong>${apy.toFixed(2)}%</strong>` : null}</span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the NOCLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:noClaimTokenBalance && noClaimTokenBalance.gt(0),\n            description:`Buy NOCLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        case 'Claim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            const portfolioCoveredPerc = 32;//this.state.portfolio && this.state.portfolio.totalBalance.gt(0) ? tokenAmount.div(this.state.portfolio.totalBalance).times(100) : null;\n            infoBox = {\n              icon:'BeachAccess',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your CLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong>${ portfolioCoveredPerc ? ` <strong>(${portfolioCoveredPerc}% of your portfolio)</strong>` : '' } in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'BeachAccess',\n              text:`CLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          }\n\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly cost of buying and holding CLAIM until expiration is <strong>${apy.toFixed(2)}%` : null}</strong></span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the CLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:claimTokenBalance && claimTokenBalance.gt(0),\n            description:`Buy CLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        default:\n        break;\n      }\n\n      const transactionSucceeded = false;\n      this.setState({\n        apy,\n        steps,\n        infoBox,\n        swapFee,\n        covTokens,\n        tokenPrice,\n        contractInfo,\n        approveDescription,\n        transactionSucceeded\n      });\n    }\n  }\n\n  async loadData(){\n    const currTime = parseInt(Date.now()/1000);\n    const activeCoverages = this.props.toolProps.coverages.reduce( (output,c,index) => {\n      if (c.expirationTimestamp>currTime){\n        const expirationDate = this.functionsUtil.strToMoment(c.expirationTimestamp*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n        const icon = `images/tokens/${c.collateral}.svg`;\n        const label = `Collateral: ${c.collateral} - Expiration: ${expirationDate}`;\n        output.push({\n          icon,\n          label,\n          data:c,\n          value:expirationDate,\n        });\n      }\n      return output;\n    },[]);\n\n    const portfolio = await this.functionsUtil.getAccountPortfolio();\n    const defaultCoverage = activeCoverages.length ? activeCoverages[0] : null;\n\n    this.setState({\n      portfolio,\n      defaultCoverage,\n      activeCoverages\n    },() => {\n      if (defaultCoverage){\n        this.selectCoverage(defaultCoverage);\n      }\n    });\n  }\n\n  async selectCoverage(coverage){\n    const selectedCoverage = coverage.data;\n    this.setState({\n      selectedCoverage\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n\n    const isMint = this.state.selectedAction === 'Mint';\n    const isBuyClaim = this.state.selectedAction === 'Claim';\n    const isBuyNoClaim = this.state.selectedAction === 'NoClaim';\n    const txAction = isMint ? this.state.selectedAction : `Buy ${this.state.selectedAction}`;\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.activeCoverages ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading active coverages...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.activeCoverages.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active coverages.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text mb={1}>\n                        Select Coverage:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'strategy'}\n                        isSearchable={false}\n                        options={this.state.activeCoverages}\n                        CustomOptionValue={CustomOptionValue}\n                        defaultValue={this.state.defaultCoverage}\n                        onChange={this.selectCoverage.bind(this)}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      this.state.selectedCoverage && (\n                        <Box\n                          mt={3}\n                          width={1}\n                        >\n                          <Text mb={1}>\n                            Select Action:\n                          </Text>\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={['column','row']}\n                            justifyContent={'space-between'}\n                          >\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isMint ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Add Liquidity'}\n                              imageSrc={'images/mint.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'mint CLAIM and NOCLAIM\\nand stake in Balancer Pool'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isMint}\n                              handleClick={ e => this.setAction('Mint') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy CLAIM'}\n                              imageSrc={'images/claim.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'protect in case of attacks\\nagainst the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyClaim}\n                              handleClick={ e => this.setAction('Claim') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyNoClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy NOCLAIM'}\n                              isMobile={this.props.isMobile}\n                              imageSrc={'images/noclaim.svg'}\n                              subcaption={'get rewarded if no attack\\noccurs on the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyNoClaim}\n                              handleClick={ e => this.setAction('NoClaim') }\n                            />\n                          </Flex>\n                          {\n                            this.state.tokenConfig && this.state.tokenBalance && this.state.contractInfo &&\n                              <Box\n                                mt={2}\n                                mb={3}\n                                width={1}\n                              >\n                                <SendTxWithBalance\n                                  {...this.props}\n                                  action={txAction}\n                                  error={this.state.error}\n                                  steps={this.state.steps}\n                                  infoBox={this.state.infoBox}\n                                  tokenConfig={this.state.tokenConfig}\n                                  tokenBalance={this.state.tokenBalance}\n                                  contractInfo={this.state.contractInfo}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractApproved={this.contractApproved.bind(this)}\n                                  approveDescription={this.state.approveDescription}\n                                  balanceSelectorInfo={this.state.balanceSelectorInfo}\n                                  changeInputCallback={this.changeInputCallback.bind(this)}\n                                  getTransactionParams={this.getTransactionParams.bind(this)}\n                                >\n                                  <BuyModal\n                                    {...this.props}\n                                    showInline={true}\n                                    availableMethods={[]}\n                                    buyToken={this.state.selectedToken}\n                                  />\n                                </SendTxWithBalance>\n                              </Box>\n                          }\n                        </Box>\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default CoverProtocol;\n","import Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TokenMigration extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    migrationSucceeded:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    if (selectedFromToken && selectedFromToken !== this.props.urlParams.param2){\n      this.changeFromToken(selectedFromToken);\n    }\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n  }\n\n  changeFromToken = (selectedToken) => {\n    const convertTool = this.functionsUtil.getGlobalConfig(['tools','tokenMigration']);\n    this.props.goToSection(`tools/${convertTool.route}/${selectedToken}`);\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    const tokenInfo = this.props.toolProps.availableTokens[selectedFromToken];\n\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n\n    const availableStrategies = typeof this.props.toolProps.availableStrategies !== 'undefined' ? this.props.toolProps.availableStrategies : Object.keys(this.props.availableStrategies);\n\n    availableStrategies.forEach( strategy => {\n      const strategyAvailableTokens =  this.props.availableStrategies[strategy];\n      const baseTokenConfig = strategyAvailableTokens[tokenInfo.baseToken];\n      if (!baseTokenConfig){\n        return false;\n      }\n\n      // Remove icon\n      delete baseTokenConfig.icon;\n\n      if (!selectedDestToken){\n        selectedDestToken = baseTokenConfig.idle.token;\n      }\n      baseTokenConfig.strategy = strategy;\n      baseTokenConfig.baseToken = tokenInfo.baseToken;\n      availableDestinationTokens[baseTokenConfig.idle.token] = baseTokenConfig;\n    });\n\n    this.setState({\n      tokenConfig:null,\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n\n    const destTokenConfig = this.state.availableDestinationTokens[selectedDestToken];\n    const tokenInfo = this.props.toolProps.availableTokens[this.state.selectedFromToken];\n\n    const tokenConfig = {\n      token:destTokenConfig.baseToken,\n      address:destTokenConfig.address,\n      decimals:destTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = destTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:tokenInfo.abi,\n      name:tokenInfo.token,\n      token:tokenInfo.token,\n      address:tokenInfo.address\n    };\n    \n    const migrationContract = this.props.toolProps.migrationContract;\n\n    // Add migration function\n    if (tokenInfo.migrateFunction){\n      migrationContract.functions[0].name = tokenInfo.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(destTokenConfig.strategy,tokenInfo.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedDestToken\n    });\n  }\n\n  migrationCallback = () => {\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={true}\n              onChange={this.changeFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-dest'}\n                  showBalance={false}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          {\n            this.state.selectedFromToken && this.state.selectedDestToken ? (\n              <Migrate\n                {...this.props}\n                showActions={false}\n                getTokenPrice={false}\n                isMigrationTool={true}\n                tokenConfig={this.state.tokenConfig}\n                migrationCallback={this.migrationCallback}\n                selectedToken={this.state.selectedFromToken}\n                selectedStrategy={this.props.selectedStrategy}\n              >\n                {\n                  !this.props.account ? (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'Input'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={2}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Please connect with your wallet interact with Idle.\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.props.connectAndValidateAccount}\n                        >\n                          Connect\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.migrationSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              Your {this.state.selectedFromToken} have been successfully migrated!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedFromToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Migrate>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenMigration;\n","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Box, Text, Icon, Link } from \"rimble-ui\";\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\n\nclass BatchMigration extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    hasDeposited:false,\n    selectedToken:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async checkBatchs(){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.selectedTokenConfig.name,this.state.selectedTokenConfig.address,this.state.selectedTokenConfig.abi)\n    ]);\n\n    const [currBatchIndex,migrationContractApproved] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.selectedTokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    const newState = {};\n    const batchDeposits = {};\n    const batchTotals = {};\n    let batchCompleted = false;\n\n    if (currBatchIndex !== null){\n      for (let batchIndex = 0; batchIndex <= currBatchIndex ; batchIndex++){\n        let [batchTotal,batchDeposit] = await Promise.all([\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n        if (batchTotal && batchTotal !== null){\n          batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.selectedTokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.selectedTokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n\n            batchDeposits[batchIndex] = batchDeposit;\n            // Check claimable\n            if (batchIndex < currBatchIndex){\n              batchCompleted = true;\n            }\n          }\n        }\n      }\n\n      newState.batchDeposits = batchDeposits;\n    }\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    newState.claimSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.batchCompleted = batchCompleted;\n    newState.hasDeposited = hasDeposited;\n    newState.canDeposit = !hasDeposited && batchMigrationDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    newState.action = hasDeposited ? 'redeem' : 'deposit';\n    newState.migrationContractApproved = migrationContractApproved;\n\n    this.setState(newState);\n  }\n\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      this.checkBatchs();\n    }\n  }\n\n  selectFromToken = async (selectedToken) => {\n\n    const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const strategyAvailableTokens =  this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.baseToken];\n\n    const tokenConfig = {\n      token:selectedTokenConfig.baseToken,\n      address:selectedTokenConfig.address,\n      decimals:selectedTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:selectedTokenConfig.abi,\n      name:selectedTokenConfig.name,\n      token:selectedTokenConfig.token,\n      address:selectedTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    });\n  }\n\n  claim = async () => {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: `BatchMigration`,\n        eventAction: 'Claim',\n        eventLabel: this.props.selectedToken,\n        eventValue: parseInt(claimableValue)\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  migrationCallback = () => {\n    this.checkBatchs();\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedToken){\n      return null;\n    }\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={false}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            (this.state.canDeposit || this.state.canClaim) && \n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  px:4,\n                  mt:3,\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                > \n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.migrationContractApproved ? 'CheckBox' : 'LooksOne'}\n                      color={ this.state.migrationContractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Approve the batch migration contract\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.hasDeposited ? 'CheckBox' : 'LooksTwo'}\n                      color={ this.state.hasDeposited ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Deposit your {this.state.selectedTokenConfig.token}\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                      color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Wait for the batch to be migrated\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                      color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Claim your {this.state.selectedToken}V4\n                    </Text>\n                  </Flex>\n                </Flex>\n              </DashboardCard>\n          }\n          {\n            this.state.selectedToken ? (\n              <Box width={1}>\n                {\n                  this.state.migrationContractApproved && (this.state.canDeposit || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    batchMigrationDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        showActions={false}\n                        migrationParams={[]}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        callbackApprove={this.checkBatchs.bind(this)}\n                        selectedStrategy={this.props.selectedStrategy}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedTokenConfig.token} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        {\n                          !this.props.account ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3\n                              }}\n                            >\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  size={'2.3em'}\n                                  name={'Input'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Please connect with your wallet interact with Idle.\n                                </Text>\n                                <RoundButton\n                                  buttonProps={{\n                                    mt:2,\n                                    width:[1,1/2]\n                                  }}\n                                  handleClick={this.props.connectAndValidateAccount}\n                                >\n                                  Connect\n                                </RoundButton>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                my:3\n                              }}\n                            >\n                              {\n                                batchId ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      color={'cellText'}\n                                      name={'HourglassEmpty'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      {\n                                        this.state.batchCompleted ? (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >The batch has been migrated, click on the \"Claim\" button to withdraw your tokens.</Text.span>\n                                        ) : (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >\n                                            You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your tokens.\n                                            {\n                                              typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                              <Text.span\n                                                color={'cellText'}\n                                              >\n                                                <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                              </Text.span>\n                                            }\n                                          </Text.span>\n                                        )\n                                      }\n                                    </Text>\n                                  </Flex>\n                                ) : this.state.migrationSucceeded ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'DoneAll'}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You have successfully deposited your {this.state.selectedTokenConfig.token} into the batch!\n                                    </Text>\n                                  </Flex>\n                                ) : (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'MoneyOff'}\n                                      color={'cellText'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You don't have any {this.state.selectedTokenConfig.token} in your wallet.\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                            </DashboardCard>\n                          )\n                        }\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch migration is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar {...this.props} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.selectedToken} V4!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The batch has been migrated!<br />You can now claim your {this.state.tokenConfig.idle.token} V4.\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:3,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your V4 tokens.\n                                {\n                                  typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                  </Text.span>\n                                }\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Box>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchMigration;","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport { Flex, Text, Heading, Input, Form, Field, Icon, Link, Loader, Button } from \"rimble-ui\";\n\nclass DeployB2BVesting extends Component {\n\n  state = {\n    actions:[],\n    processing: {\n      txHash:null,\n      loading:false,\n      actionIndex:[]\n    },\n    action:'deploy',\n    validated:false,\n    viewAction:null,\n    editAction:null,\n    newAction:false,\n    maxContracts:10,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    actionValid:false,\n    actionInputs:null,\n    claimedTokens:null,\n    deployedContracts:[],\n    contractDeployed:false,\n    inputs:[\n      {\n        name:'owner',\n        type:'address'\n      },\n      {\n        name:'recipient',\n        type:'address'\n      },\n      {\n        name:'vestingPeriod',\n        type:'uint256'\n      }\n    ]\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction(action){\n    this.setState({\n      action,\n      editAction:null,\n      viewAction:null,\n      claimedTokens:null,\n      contractDeployed:null\n    });\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false,\n        actionIndex:[]\n      }\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadContracts();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    this.validateForm();\n    this.checkInputs();\n\n    const contractDeployed = prevState.contractDeployed !== this.state.contractDeployed && this.state.contractDeployed;\n    if (contractDeployed){\n      this.loadContracts();\n    }\n  }\n\n  async loadContracts(){\n    const tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens','IDLE']);\n    const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n    const fromBlock = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n    const proxyCreated = await this.functionsUtil.getContractPastEvents('ProxyFactory', 'ProxyCreated', {fromBlock, toBlock: 'latest'});\n    const deployedContractsAddresses = proxyCreated.filter( p => p.returnValues.implementation.toLowerCase() === vesterImplementation.address.toLowerCase() ).map( p => p.returnValues.proxy );\n    // console.log('proxyCreated',proxyCreated,'deployedContractsAddresses',deployedContractsAddresses);\n\n    const deployedContracts = [];\n    await this.functionsUtil.asyncForEach(deployedContractsAddresses, async (contractAddress) => {\n      const contractName = `b2bVesting_${contractAddress}`;\n      await this.props.initContract(contractName,contractAddress,vesterImplementation.abi);\n      const [\n        // initialized,\n        owner,\n        recipient,\n        vestingPeriod,\n        availableBalance,\n        depositAmounts,\n      ] = await Promise.all([\n          // this.functionsUtil.genericContractCall(contractName,'initialized'),\n          this.functionsUtil.genericContractCall(contractName,'owner'),\n          this.functionsUtil.genericContractCall(contractName,'recipient'),\n          this.functionsUtil.genericContractCall(contractName,'vestingPeriod'),\n          this.functionsUtil.getTokenBalance(tokenConfig.token,contractAddress),\n          this.functionsUtil.genericContractCall(contractName,'getDepositAmounts')\n      ]);\n\n      let totalDeposited = this.functionsUtil.BNify(0);\n      if (depositAmounts) {\n        totalDeposited = depositAmounts.reduce( (total,amount) => {\n          total = total.plus(amount);\n          return total;\n        },this.functionsUtil.BNify(0));\n\n        totalDeposited = this.functionsUtil.fixTokenDecimals(totalDeposited,tokenConfig.decimals);\n      }\n\n      // console.log(contractName,initialized,owner,recipient,vestingPeriod,depositAmounts,parseFloat(totalDeposited));\n\n      deployedContracts.push({\n        owner,\n        recipient,\n        contractName,\n        vestingPeriod,\n        totalDeposited,\n        contractAddress,\n        availableBalance\n      });\n    });\n    const tokenBalance = await this.functionsUtil.getTokenBalance('IDLE',this.props.account);\n\n    // console.log(deployedContracts);\n\n    this.setState({\n      tokenConfig,\n      tokenBalance,\n      deployedContracts\n    });\n  }\n\n  validateForm(){\n    const validated = Object.values(this.state.actions).length>0;\n    if (validated !== this.state.validated){\n      this.setState({\n        validated\n      });\n    }\n  }\n\n  getTransactionParams(amount){\n    const params = {\n      value:null,\n      methodName:'deposit',\n      methodParams:[amount]\n    };\n    return params;\n  }\n\n  claimCallback(tx){\n    // console.log('claimCallback',tx);\n    if (tx.status === 'success'){\n      this.loadContracts();\n\n      const claimedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() ) : null;\n      if (claimedTokensLog){\n        const claimedTokens = this.functionsUtil.fixTokenDecimals(parseInt(claimedTokensLog.data,16),this.state.tokenConfig.decimals);\n        this.setState({\n          claimedTokens\n        });\n      }\n    }\n  }\n\n  depositCallback(tx,amount,params){\n    // console.log('depositCallback',tx,amount,params);\n    if (tx.status === 'success'){\n      this.loadContracts();\n    }\n  }\n\n  getPatternByFieldType(type,returnString=false){\n    let fieldPattern = null;\n    switch (type){\n      case 'address':\n        fieldPattern = '^0x[a-fA-F0-9]{40}$';\n      break;\n      case 'address[]':\n        fieldPattern = '^((0x[a-fA-F0-9]{40})[,]?)+$';\n      break;\n      case 'string':\n        fieldPattern = '[\\\\w]+';\n      break;\n      case 'bool':\n        fieldPattern = '(0|1)';\n      break;\n      case 'uint256':\n      case 'uint8':\n        fieldPattern = '[\\\\d]+';\n      break;\n      default:\n        fieldPattern = null;\n      break;\n    }\n\n    if (!returnString && fieldPattern){\n      fieldPattern = new RegExp(fieldPattern);\n    }\n\n    return fieldPattern;\n  }\n\n  checkInputs(){\n\n    if (!this.state.actionInputs){\n      return false;\n    }\n\n    const inputs = this.state.inputs;\n    let actionValid = Object.values(this.state.actionInputs).length === inputs.length;\n\n    if (actionValid){\n      Object.values(this.state.actionInputs).forEach( (inputValue,inputIndex) => {\n        const inputInfo = inputs[inputIndex];\n        const fieldPattern = this.getPatternByFieldType(inputInfo.type);\n        const inputValid = fieldPattern ? inputValue.match(fieldPattern) !== null : true;\n        actionValid = actionValid && inputValid;\n        // console.log('checkInputs',inputInfo.name,inputInfo.type,inputValue,inputValid,actionValid);\n      });\n    }\n\n    if (actionValid !== this.state.actionValid){\n      this.setState({\n        actionValid\n      });\n    }\n  }\n\n  valueChange(e,inputIndex){\n    let actionValue = e.target.value;\n    this.setState({\n      actionValue\n    });\n  }\n\n  inputChange(e,inputIndex){\n    let inputValue = e.target.value;\n\n    this.setState((prevState) => ({\n      actionInputs:{\n        ...prevState.actionInputs,\n        [inputIndex]:inputValue\n      }\n    }));\n  }\n\n  deleteAction(){\n    if (this.state.editAction !== null){\n      let actions = this.state.actions;\n      if (actions[this.state.editAction]){\n        delete actions[this.state.editAction];\n        actions = Object.values(actions);\n        const editAction = null;\n        const actionInputs = null;\n\n        this.setState({\n          actions,\n          editAction,\n          actionInputs\n        });\n      }\n    }\n  }\n\n  addAction(){\n\n    // Check inputs number\n    const inputs = Object\n                    .values(this.state.actionInputs).filter( v => v.length>0 )\n                    .map( (inputValue,inputIndex) => {\n                      const inputInfo = this.state.inputs[inputIndex];\n                      switch (inputInfo.type){\n                        case 'address[]':\n                          inputValue = inputValue.split(',');\n                        break;\n                        case 'uint256[]':\n                          inputValue = inputValue.split(',').map( n => this.functionsUtil.toBN(n) );\n                        break;\n                        case 'uint256':\n                          inputValue = this.functionsUtil.toBN(inputValue);\n                        break;\n                        default:\n                          if (inputInfo.type.substr(-2) === '[]'){\n                            inputValue = inputValue.split(',');\n                          }\n                        break;\n                      }\n\n                      return inputValue;\n                    });\n\n    if (inputs.length<this.state.inputs.length){\n      return false;\n    }\n\n    const action = {\n      txError:null,\n      contractAddress:null,\n      inputs:this.state.actionInputs,\n    };\n\n    const newAction = false;\n    const actions = Object.values(this.state.actions);\n\n    if (this.state.editAction === null){\n      actions.push(action);\n    } else {\n      actions[this.state.editAction] = action;\n    }\n\n    const editAction = null;\n    const actionInputs = null;\n\n    this.setState({\n      actions,\n      newAction,\n      editAction,\n      actionInputs\n    });\n  }\n\n  setEditAction(editAction){\n\n    if (!this.state.actions[editAction]){\n      return false;\n    }\n\n    if (editAction === this.state.editAction){\n      return false;\n    }\n\n    const action = this.state.actions[editAction];\n\n    const newAction = false;\n    const actionInputs = action.inputs;\n\n    this.setState({\n      newAction,\n      editAction,\n      actionInputs\n    });\n  }\n\n  setViewAction(viewAction){\n\n    if (viewAction !== this.state.viewAction){\n      const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n      const deployedContract = this.state.deployedContracts[viewAction];\n      const contractInfo = {\n        abi:vesterImplementation.abi,\n        name:deployedContract.contractName,\n        address:deployedContract.contractAddress\n      };\n      this.setState({\n        viewAction,\n        contractInfo,\n        claimedTokens:null\n      });\n    }\n  }\n\n  setNewAction(newAction){\n    if (newAction === this.state.newAction){\n      return false;\n    }\n\n    const editAction = null;\n\n    this.setState({\n      newAction,\n      editAction,\n    });\n  }\n\n  async handleSubmit(e){\n    e.preventDefault();\n\n    const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n    const idleAddress = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','address']);\n\n    const callback = (tx,error,actionIndex) => {\n      const txSucceeded = tx.status === 'success';\n      const actions = Object.values(this.state.actions);\n      const isLastAction = parseInt(actionIndex)===parseInt(this.state.actions.length)-1;\n      const contractDeployed = txSucceeded && isLastAction;\n      // console.log('callback_1 -',actionIndex,txSucceeded,contractDeployed,tx);\n      if (txSucceeded){\n        const clonedVesterAddress = tx.txReceipt.events && tx.txReceipt.events.ProxyCreated ? tx.txReceipt.events.ProxyCreated.returnValues[1] : `0x${tx.txReceipt.logs[0].data.substr(-40)}`;\n        actions[actionIndex].contractAddress = clonedVesterAddress;\n        // console.log('callback_2 -',actionIndex,actions[actionIndex].contractAddress);\n      } else {\n        actions[actionIndex].txError = true;\n      }\n\n      // console.log('callback_3 -',actionIndex,actions);\n\n      this.setState({\n        actions,\n        contractDeployed\n      },()=>{\n        if (isLastAction){\n          this.cancelTransaction();\n        }\n      });\n    };\n\n    const callbackReceipt = (tx,actionIndex) => {\n      const txHash = tx.transactionHash;\n      // console.log('callbackReceipt',actionIndex,tx);\n      const processing = Object.assign({},this.state.processing);\n      processing.txHash = txHash;\n      processing.actionIndex.push(actionIndex);\n      this.setState({\n        processing\n      });\n    };\n\n    this.state.actions.forEach((action,actionIndex) => {\n      const ownerAddress = action.inputs[0];\n      const recipientAddress = action.inputs[1];\n      const vestingPeriod = action.inputs[2];\n      const initSig = \"initialize(address,address,address,uint256)\";\n      const initData = this.props.web3.eth.abi.encodeParameters(\n        ['address','address','address','uint256'],\n        [ownerAddress,idleAddress,recipientAddress,vestingPeriod]\n      );\n      const methodParams = [vesterImplementation.address,initSig,initData];\n      this.functionsUtil.contractMethodSendWrapper('ProxyFactory', 'createAndCall', methodParams, (tx,error) => callback(tx,error,actionIndex), (tx) => callbackReceipt(tx,actionIndex) );\n    });\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    return false;\n  }\n\n  render() {\n\n    const depositContracts = this.props.account ? this.state.deployedContracts.filter( c => c.owner.toLowerCase() === this.props.account.toLowerCase() ) : [];\n    const claimContracts = this.props.account ? this.state.deployedContracts.filter( c => c.recipient.toLowerCase() === this.props.account.toLowerCase() ) : [];\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.42]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            flexDirection={'column'}\n          >\n            <Text\n              mb={2}\n            >\n              Choose the action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Deploy'}\n                icon={'CloudUpload'}\n                iconColor={'deposit'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.action === 'deploy' }\n                handleClick={ e => this.setAction('deploy') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Deposit'}\n                iconColor={'deposit'}\n                icon={'ArrowDownward'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.action === 'deposit' }\n                handleClick={ e => this.setAction('deposit') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Claim'}\n                iconColor={'redeem'}\n                icon={'ArrowUpward'}\n                iconBgColor={'#ceeff6'}\n                isActive={ this.state.action === 'claim' }\n                handleClick={ e => this.setAction('claim') }\n              />\n            </Flex>\n          </Flex>\n          <Flex\n            pb={2}\n            width={1}\n            my={[2,3]}\n            borderColor={'divider'}\n            borderBottom={'1px solid transparent'}\n          >\n            <Heading.h4\n              fontSize={[2,3]}\n              fontWeight={[2,3]}\n              style={{\n                textTransform:'capitalize'\n              }}\n            >\n              {this.state.action}\n            </Heading.h4>\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n          >\n            {\n              this.state.action === 'deploy' ? (\n                <Form\n                  width={1}\n                  validated={this.state.validated}\n                  onSubmit={this.handleSubmit.bind(this)}\n                >\n                  {\n                    Object.values(this.state.actions).map( (action,actionIndex) => {\n                      return (\n                        <DashboardCard\n                          cardProps={{\n                            py:2,\n                            px:3,\n                            mb:3,\n                            width:1\n                          }}\n                          titleParentProps={{\n                            ml:0,\n                            my:1,\n                            justifyContent:'center'\n                          }}\n                          titleProps={{\n                            fontSize:2,\n                            fontWeight:3\n                          }}\n                          isInteractive={true}\n                          key={`action_${actionIndex}`}\n                          title={ this.state.editAction === actionIndex ? 'Edit Contract' : null }\n                          handleClick={ e => /*action.contractAddress ? this.functionsUtil.openWindow(this.functionsUtil.getEtherscanAddressUrl(action.contractAddress)) : */this.setEditAction(actionIndex) }\n                        >\n                          {\n                            this.state.editAction === actionIndex ? (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                {\n                                  this.state.inputs.map( (input,inputIndex) => {\n                                    const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                    const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                    return (\n                                      <Field\n                                        style={{\n                                          width:'100%',\n                                          display:'flex',\n                                          alignItems:'stretch',\n                                          flexDirection:'column'\n                                        }}\n                                        key={`input_${inputIndex}`}\n                                        label={`${input.name} (${input.type})`}\n                                      >\n                                        <Input\n                                          required\n                                          width={1}\n                                          type={fieldType}\n                                          pattern={fieldPattern}\n                                          borderColor={'cardBorder'}\n                                          backgroundColor={'cardBg'}\n                                          placeholder={`${input.name} (${input.type})`}\n                                          onChange={ e => this.inputChange(e,inputIndex) }\n                                          value={this.state.actionInputs && this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                        />\n                                      </Field>\n                                    )\n                                  })\n                                }\n                                <Flex\n                                  mb={2}\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  {\n                                    action.contractAddress ? (\n                                      <ExtLink\n                                        fontSize={1}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                        hoverColor={this.props.theme.colors.transactions.status.completed}\n                                        href={this.functionsUtil.getEtherscanAddressUrl(action.contractAddress)}\n                                      >\n                                        Deployed at {action.contractAddress}\n                                      </ExtLink>\n                                    ) : !this.state.processing.loading && (\n                                      <Flex\n                                        width={1}\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                        justifyContent={'center'}\n                                      >\n                                        <RoundButton\n                                          buttonProps={{\n                                            px:[0,4],\n                                            type:'button',\n                                            width:[1,'auto'],\n                                            disabled:!this.state.actionValid\n                                          }}\n                                          handleClick={this.addAction.bind(this)}\n                                        >\n                                          Save Contract\n                                        </RoundButton>\n                                        <Link\n                                          mt={2}\n                                          color={'red'}\n                                          hoverColor={'red'}\n                                          onClick={this.deleteAction.bind(this)}\n                                        >\n                                          Delete Contract\n                                        </Link>\n                                      </Flex>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            ) : (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                <Text>\n                                  {this.functionsUtil.shortenHash(action.inputs[0])} - {this.functionsUtil.shortenHash(action.inputs[1])} - {action.inputs[2]} { action.contractAddress ? '- DEPLOYED' : '' }\n                                </Text>\n                                { \n                                  action.contractAddress ? (\n                                    <Flex\n                                      p={'3px'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        name={'Done'}\n                                        align={'center'}\n                                        size={this.props.isMobile ? '1.2em' : '1.8em'}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      />\n                                    </Flex>\n                                  ) : this.state.processing.loading && this.state.processing.actionIndex && this.state.processing.actionIndex.includes(parseInt(actionIndex)) ? (\n                                    <Loader size=\"28px\" />\n                                  ) : action.txError ? (\n                                    <Flex\n                                      p={'3px'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        color={'red'}\n                                        name={'Error'}\n                                        align={'center'}\n                                        size={ this.props.isMobile ? '1.2em' : '1.8em' }\n                                      />\n                                    </Flex>\n                                  ) : (\n                                    <Flex\n                                      p={['4px','7px']}\n                                      borderRadius={'50%'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                      backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                                    >\n                                      <Icon\n                                        name={'Edit'}\n                                        align={'center'}\n                                        color={'redeem'}\n                                        size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                      />\n                                    </Flex>\n                                  )\n                                }\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                      );\n                    })\n                  }\n                  {\n                    (!this.state.contractDeployed && !this.state.processing.loading && (!this.state.actions || Object.values(this.state.actions).length<this.state.maxContracts)) && (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        handleClick={ e => this.setNewAction(true) }\n                        title={ this.state.newAction ? 'Add Contract' : null }\n                      >\n                        {\n                          this.state.newAction ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        width={1}\n                                        type={fieldType}\n                                        pattern={fieldPattern}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        placeholder={`${input.name} (${input.type})`}\n                                        onChange={ e => this.inputChange(e,inputIndex) }\n                                        value={this.state.actionInputs && this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                              >\n                                <RoundButton\n                                  buttonProps={{\n                                    px:[0,4],\n                                    type:'button',\n                                    width:[1,'auto'],\n                                    disabled:!this.state.actionValid\n                                  }}\n                                  handleClick={this.addAction.bind(this)}\n                                >\n                                  Add Contract\n                                </RoundButton>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                Add Contract\n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'Add'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    )\n                  }\n                  <Flex\n                    mb={3}\n                    width={1}\n                    alignItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      this.state.contractDeployed ? (\n                        <DashboardCard\n                          cardProps={{\n                            py:3,\n                            px:4,\n                            width:[1,'100%']\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              align={'center'}\n                              size={ this.props.isMobile ? '1.4em' : '2.2em' }\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={1}\n                              fontWeight={3}\n                              fontSize={[2,3]}\n                              color={'dark-gray'}\n                              textAlign={'center'}\n                            >\n                              B2B Vesting contracts have been deployed\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      ) : this.state.processing && this.state.processing.loading ? (\n                        <TxProgressBar\n                          {...this.props}\n                          hash={this.state.processing.txHash}\n                          waitText={`Deployment estimated in`}\n                          endMessage={`Finalizing deployment request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      ) : (\n                        <RoundButton\n                          buttonProps={{\n                            type:'submit',\n                            width:[1,'15em'],\n                            disabled:!this.state.validated\n                          }}\n                        >\n                          Deploy Contracts\n                        </RoundButton>\n                      )\n                    }\n                  </Flex>\n                </Form>\n              ) : this.state.action === 'deposit' ?\n                depositContracts.length>0 ?\n                  depositContracts.map( (contractInfo,actionIndex) => {\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        key={`action_${actionIndex}`}\n                        handleClick={ e => this.setViewAction(actionIndex) }\n                        title={ this.state.viewAction === actionIndex ? 'View Contract' : null }\n                      >\n                        {\n                          this.state.viewAction === actionIndex ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Contract Address`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.contractAddress}\n                                />\n                              </Field>\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        readOnly\n                                        width={1}\n                                        type={fieldType}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        value={contractInfo[input.name]}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Total Deposited`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.totalDeposited.toFixed(6)}\n                                />\n                              </Field>\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Available Balance`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.availableBalance.toFixed(6)}\n                                />\n                              </Field>\n                              <Flex\n                                mb={2}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                borderTop={'1px solid transparent'}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <SendTxWithBalance\n                                    {...this.props}\n                                    action={this.state.action}\n                                    tokenConfig={this.state.tokenConfig}\n                                    tokenBalance={this.state.tokenBalance}\n                                    contractInfo={this.state.contractInfo}\n                                    callback={this.depositCallback.bind(this)}\n                                    getTransactionParams={this.getTransactionParams.bind(this)}\n                                    approveDescription={'You need to approve the Smart-Contract first'}\n                                  >\n                                    <DashboardCard\n                                      cardProps={{\n                                        p:3,\n                                      }}\n                                    >\n                                      <Flex\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                      >\n                                        <Icon\n                                          size={'2.3em'}\n                                          name={'MoneyOff'}\n                                          color={'cellText'}\n                                        />\n                                        <Text\n                                          mt={2}\n                                          fontSize={2}\n                                          color={'cellText'}\n                                          textAlign={'center'}\n                                        >\n                                          You don't have any $IDLE in your wallet.\n                                        </Text>\n                                      </Flex>\n                                    </DashboardCard>\n                                  </SendTxWithBalance>\n                                </Flex>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                {this.functionsUtil.shortenHash(contractInfo.owner)} - {this.functionsUtil.shortenHash(contractInfo.recipient)} - {contractInfo.vestingPeriod} \n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'ZoomIn'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    );\n                  })\n                : (\n                  <Text\n                    textAlign={'center'}\n                  >\n                    You can't deposit in any contract yet.\n                  </Text>\n                )\n              : this.state.action === 'claim' &&\n                claimContracts.length>0 ?\n                  claimContracts.map( (contractInfo,actionIndex) => {\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        key={`action_${actionIndex}`}\n                        handleClick={ e => this.setViewAction(actionIndex) }\n                        title={ this.state.viewAction === actionIndex ? 'View Contract' : null }\n                      >\n                        {\n                          this.state.viewAction === actionIndex ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Contract Address`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.contractAddress}\n                                />\n                              </Field>\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        readOnly\n                                        width={1}\n                                        type={fieldType}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        value={contractInfo[input.name]}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Total Deposited`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.totalDeposited.toFixed(6)}\n                                />\n                              </Field>\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Available Balance`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.availableBalance.toFixed(6)}\n                                />\n                              </Field>\n                              <Flex\n                                mb={2}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                borderTop={'1px solid transparent'}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  {\n                                    this.state.claimedTokens && (\n                                      <Text\n                                        mb={2}\n                                        fontSize={2}\n                                        fontWeight={3}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        You have successfully claimed {this.state.claimedTokens.toFixed(4)} {this.state.tokenConfig.token}\n                                      </Text>\n                                    )\n                                  }\n                                  {\n                                    contractInfo.availableBalance && contractInfo.availableBalance.gt(0.00000001) ? (\n                                      <ExecuteTransaction\n                                        params={[]}\n                                        {...this.props}\n                                        Component={Button}\n                                        componentProps={{\n                                          size:'medium',\n                                          value:'Claim',\n                                          mainColor:'redeem',\n                                        }}\n                                        methodName={'claim'}\n                                        action={this.state.action}\n                                        callback={this.claimCallback.bind(this)}\n                                        contractName={contractInfo.contractName}\n                                      />\n                                    ) : (\n                                      <Text\n                                        mb={2}\n                                        fontSize={2}\n                                        fontWeight={3}\n                                        color={'cellText'}\n                                      >\n                                        No balance available.\n                                      </Text>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                {this.functionsUtil.shortenHash(contractInfo.owner)} - {this.functionsUtil.shortenHash(contractInfo.recipient)} - {contractInfo.vestingPeriod} \n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'ZoomIn'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    );\n                  })\n                : (\n                  <Text\n                    textAlign={'center'}\n                  >\n                    You can't claim from any contract yet.\n                  </Text>\n                )\n            }\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default DeployB2BVesting;\n","import Staking from \"../Staking/Staking\";\nimport DAI from '../abis/tokens/DAI.json';\nimport IDLE from '../contracts/IDLE.json';\nimport Tranches from '../Tranches/Tranches';\nimport USDC from '../abis/tokens/USDC.json';\nimport WETH from '../abis/tokens/WETH.json';\nimport COMP from '../abis/compound/COMP.json';\nimport aToken from '../abis/aave/AToken.json';\nimport ERC20 from '../abis/tokens/ERC20.json';\nimport TokenSwap from '../TokenSwap/TokenSwap';\nimport yDAIv3 from '../abis/iearn/yDAIv3.json';\nimport LpStaking from '../LpStaking/LpStaking';\nimport stkIDLE from '../contracts/stkIDLE.json';\nimport yUSDCv3 from '../abis/iearn/yUSDCv3.json';\nimport yUSDTv3 from '../abis/iearn/yUSDTv3.json';\nimport ySUSDv3 from '../abis/iearn/ySUSDv3.json';\nimport yTUSDv3 from '../abis/iearn/yTUSDv3.json';\nimport Timelock from '../contracts/Timelock.json';\nimport CurveZap from '../abis/curve/CurveZap.json';\nimport CovToken from '../abis/cover/CovToken.json';\nimport B2BVester from '../contracts/B2BVester.json';\nimport IdleStaking from '../IdleStaking/IdleStaking';\n// import CurveSwap from '../abis/curve/CurveSwap.json';\nimport CurvePool from \"../abis/curve/CurvePool.json\";\nimport NexusMutual from \"../NexusMutual/NexusMutual\";\nimport CoverMint from \"../abis/cover/CoverMint.json\";\nimport LockedIDLE from \"../contracts/LockedIDLE.json\";\nimport LpStakingAbi from \"../contracts/LpStaking.json\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport TokenWrapper from \"../TokenWrapper/TokenWrapper\";\nimport PriceOracle from \"../contracts/PriceOracle.json\";\nimport FeeTreasury from \"../contracts/FeeTreasury.json\";\nimport IdleTokenV2 from \"../contracts/IdleTokenV2.json\";\nimport StrategyPage from \"../StrategyPage/StrategyPage\";\nimport BuyModal from \"../utilities/components/BuyModal\";\nimport IdleTokenV3 from \"../contracts/IdleTokenV3.json\";\nimport IdleTokenV4 from \"../contracts/IdleTokenV4.json\";\nimport BatchDeposit from \"../BatchDeposit/BatchDeposit\";\nimport ChildERC20 from '../abis/polygon/ChildERC20.json';\nimport EarlyRewards from '../contracts/EarlyRewards.json';\nimport PolygonBridge from '../PolygonBridge/PolygonBridge';\nimport CoverProtocol from '../CoverProtocol/CoverProtocol';\nimport CurveDeposit from '../abis/curve/CurveDeposit.json';\nimport VesterFactory from '../contracts/VesterFactory.json';\nimport GovernorAlpha from '../contracts/GovernorAlpha.json';\nimport EcosystemFund from '../contracts/EcosystemFund.json';\nimport Comptroller from '../abis/compound/Comptroller.json';\nimport erc20Forwarder from '../contracts/erc20Forwarder.json';\nimport BalancerPool from '../abis/balancer/BalancerPool.json';\nimport IdleController from '../contracts/IdleController.json';\nimport TokenMigration from '../TokenMigration/TokenMigration';\nimport BatchMigration from '../BatchMigration/BatchMigration';\nimport IdleBatchedMint from '../contracts/IdleBatchedMint.json';\nimport { RampInstantSDK } from '@ramp-network/ramp-instant-sdk';\nimport IdleProxyMinter from '../contracts/IdleProxyMinter.json';\nimport ERC20Predicate from '../abis/polygon/ERC20Predicate.json';\nimport EtherPredicate from '../abis/polygon/EtherPredicate.json';\nimport DepositManager from '../abis/polygon/DepositManager.json';\nimport IdleRebalancerV3 from '../contracts/IdleRebalancerV3.json';\nimport LiquidityGaugeV2 from '../abis/curve/LiquidityGaugeV2.json';\nimport DeployB2BVesting from '../DeployB2BVesting/DeployB2BVesting';\nimport RootChainManager from '../abis/polygon/RootChainManager.json';\nimport SushiV2Router02 from \"../abis/sushiswap/SushiV2Router02.json\";\nimport IdleBatchConverter from \"../contracts/IdleBatchConverter.json\";\nimport UniswapV2Router02 from \"../abis/uniswap/UniswapV2Router02.json\";\nimport ChildChainManager from '../abis/polygon/ChildChainManager.json';\nimport IdleDepositForwarder from \"../contracts/IdleDepositForwarder.json\";\nimport ProtocolDataProvider from '../abis/aave/ProtocolDataProvider.json';\nimport SushiLiquidityPool from \"../abis/sushiswap/SushiLiquidityPool.json\";\nimport NexusMutualIncidents from \"../abis/nexus/NexusMutualIncidents.json\";\nimport StakingFeeDistributor from \"../contracts/StakingFeeDistributor.json\";\nimport NexusMutualDistributor from \"../abis/nexus/NexusMutualDistributor.json\";\nimport BalancerExchangeProxy from \"../abis/balancer/BalancerExchangeProxy.json\";\nimport IdleConverterPersonalSignV4 from \"../contracts/IdleConverterPersonalSignV4.json\";\nimport MinimalInitializableProxyFactory from \"../contracts/MinimalInitializableProxyFactory.json\";\n\nconst env = process.env;\n\nconst globalConfigs = {\n  appName: \"Idle\",\n  version: \"v6.1\",\n  baseToken: \"ETH\",\n  baseURL: \"https://idle.finance\",\n  forumURL: \"https://gov.idle.finance\",\n  telegramURL: \"https://t.me/idlefinance\",\n  discordURL: \"https://discord.gg/mpySAJp\",\n  twitterURL: \"https://twitter.com/idlefinance\",\n  theme: {\n    darkModeEnabled: true\n  },\n  environments: {\n    live: {\n      requiredNetwork: 1,\n      url: \"https://idle.finance\"\n    },\n    beta: {\n      requiredNetwork: 1,\n      url: \"https://beta.idle.finance\"\n    },\n    polygon: {\n      requiredNetwork: 137,\n      url: \"https://polygon.idle.finance\"\n    }\n  },\n  betaURL: \"https://beta.idle.finance\",\n  countries: {\n    USA: \"United States of America\",\n    GBR: \"United Kingdom\",\n    AUS: \"Australia\",\n    BRA: \"Brazil\",\n    CHN: \"China\",\n    CAN: \"Canada\",\n    EUR: \"Europe\",\n    HKG: \"Hong Kong\",\n    IND: \"India\",\n    MEX: \"Mexico\",\n    RUS: \"Russia\",\n    ZAF: \"South Africa\",\n    KOR: \"South Korea\"\n  },\n  logs: {\n    // Enable logs levels\n    errorsEnabled: false,\n    messagesEnabled: false\n  },\n  connectors: {\n    // Connectors props\n    metamask: {\n      enabled: true,\n      subcaption: \"Browser extension\"\n    },\n    opera: {\n      enabled: true,\n      subcaption: \"Opera injected wallet\"\n    },\n    dapper: {\n      enabled: true,\n      icon: \"dapper.png\",\n      subcaption: \"Browser extension\"\n    },\n    coinbase: {\n      enabled: true,\n      icon: \"coinbase.png\",\n      subcaption: \"Connect with Coinbase wallet\"\n    },\n    trustwallet: {\n      enabled: true,\n      subcaption: \"Connect with Trust Wallet\"\n    },\n    walletconnect: {\n      enabled: true,\n      iconModal: \"walletconnect.png\",\n      subcaption: \"Connect with QR code\"\n    },\n    walletlink: {\n      enabled: true,\n      icon: \"coinbase.png\",\n      name: \"Coinbase Wallet\",\n      subcaption: \"Connect with QR code\"\n    },\n    gnosis: {\n      enabled: true,\n      // icon:'coinbase.png',\n      name: \"Gnosis Safe App\",\n      subcaption: \"Connect with Gnosis Safe App\"\n    },\n    fortmatic: {\n      enabled: true,\n      subcaption: \"Login with phone-number\"\n    },\n    portis: {\n      enabled: true,\n      subcaption: \"Login with e-mail\"\n    },\n    authereum: {\n      enabled: true,\n      subcaption: \"Cross-device wallet\"\n    },\n    torus: {\n      enabled: true,\n      icon: \"torus.png\",\n      subcaption: \"One-Click login for Web 3.0\"\n    },\n    trezor: {\n      enabled: true,\n      subcaption: \"Hardware wallet\"\n    },\n    ledger: {\n      enabled: true,\n      subcaption: \"Hardware wallet\"\n    },\n    ledgerlive: {\n      enabled: true,\n      subcaption: \"Ledger Live Browser\"\n    },\n    custom: {\n      enabled: true,\n      subcaption: \"Custom address\"\n    }\n  },\n  newsletterSubscription: {\n    endpoint: \"https://dev.lapisgroup.it/idle/newsletter.php\"\n  },\n  messages: {\n    scoreShort: \"Protocol Risk Score\",\n    apyShort: \"Annual Percentage Yield\",\n    totalProfitPerc: \"Total percentage profit generated on your balance\",\n    tokenPrice: \"The token price is calculated using Uniswap spot prices.\",\n    cheapRedeem: \"Amount of unlent funds available for low gas fees redeem\",\n    aprRatio:\"The % share of the underlying yield this tranche is currently receiving\",\n    curveBonusSlippage: \"Slippage or bonus depending on if the coin is low or high in the Curve Pool\",\n    distributionSpeed: \"The distribution indicates the amount of tokens distributed for the entire pool.\",\n    directMint: \"Pay an additional gas fee to rebalance the pool and help all users gain an additional APR\",\n    autoFarming:\"Tokens earned and re-invested for more underlying token which is deposited back into the strategy\",\n    performanceFee: \"This fee is charged on positive returns generated by Idle including accrued gov tokens except IDLE\",\n    userDistributionSpeed: \"The distribution indicates the amount of tokens distributed for your account based on your current pool share.\",\n    govTokenApr: \"Governance Token APR is calculated using the spot price from Uniswap and the current distribution speed for the specific pool.\",\n    apyTranches: \"The annualized rate of return earned on an investment, taking into account the effect of auto-compounding interest and harvests\",\n    stakingRewards:\"Current staking rewards received by this tranche. This requires users to deposit the tranche tokens using the staking function\",\n    govTokenRedeemableBalance: \"The redeemable balance is re-calculated on every interaction with the smart-contract so, the shown balance may be lower than the real one.\",\n    riskScoreShort: \"It's a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.\",\n    redeemSkipGov: \"This feature allows you to save some gas by skipping the redeem of all or some of your accrued governance tokens, the skipped governance tokens will be given away to the entire pool\",\n    batchDepositExecutionSchedule: \"Batches are executed twice a week, usually on Sunday and Wednesday, and only when the pool size reaches at least 20,000$. The time of each execution will vary depending on the gas price of the Ethereum network.\",\n    riskAdjustedDisabledMessageDeposit: `The Risk Adjusted strategy is no longer available.<br />Please consider to deposit in the <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://beta.idle.finance/#/dashboard/tranches/senior/idle\" class=\"link\">Senior Tranche</a> to have a similar risk profile.`,\n    apyLong: \"APY is based on (I) the current yield advertised by the underlying protocol, (II) the current distribution rate of governance tokens provided by underlying lending protocols (III) the current estimated price of governance tokens from Uniswap spot prices. (IV) IDLE token distribution is referred to the entire pool.\",\n    riskScore: `It's a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.<br /><br />The model outputs a 0-10 score, where <strong>0 is the most risky and 10 is the most safe.</strong> Visit <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://defiscore.io/overview\">https://defiscore.io/overview</a> for further information.`,\n    curveInstructions: `<strong>Depositing into the pool:</strong><br />By depositing your funds into the Curve Pool you may incur in slippage or bonus depending on if the coin is low or high in the pool.<br /><br /><strong>Withdrawing share from the pool:</strong><br />When you redeem your tokens previously deposited in the Curve Pool you get back an uneven amounts of tokens, that can give slippage or bonus depending on if the coin is low or high in the pool.`,\n    yieldFarming: 'Strategies in Idle now will be able to support and distribute a vast range of yield opportunities across multiple protocols. Users will be able to receive their equivalent share of governance token that the protocol is receiving while allocating liquidity to yield farming opportunities. <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://idlefinance.medium.com/idle-yield-farming-upgrade-18e4bc483c8f\" class=\"link\">Read more here</a>.',\n    riskAdjustedDisabledMessageRedeem: `The Risk Adjusted strategy is no longer available, please redeem your funds from this strategy. You can deposit in the <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://beta.idle.finance/#/dashboard/tranches/senior/idle\" class=\"link\">Senior Tranche</a> to maintain a similar risk profile and receive an incentive. <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://gov.idle.finance/t/risk-adjusted-removal-for-tranches-migration/673\" class=\"link\">Read more here</a>.`,\n  },\n  analytics: {\n    google: {\n      events: {\n        enabled: true, // Enable Google Analytics events\n        debugEnabled: false, // Enable sending for test environments\n        addPostfixForTestnet: true // Append testnet to eventCategory\n      },\n      pageView: {\n        enabled: true\n      }\n    }\n  },\n  modals: {\n    // Enable modals\n    first_deposit_referral: false, // Referral share modal\n    first_deposit_share: true, // First deposit share modal\n    migrate: {\n      enabled: true,\n      availableNetworks: [1]\n    },\n    welcome: {\n      // Welcome modal\n      enabled: true,\n      frequency: 604800 // One week\n    }\n  },\n  dashboard: {\n    baseRoute: \"/dashboard\",\n    theme: {\n      mode: \"light\",\n      darkModeEnabled: true\n    }\n  },\n  governance: {\n    test: false,\n    enabled: true,\n    startBlock: 11333729,\n    availableNetworks: [1],\n    baseRoute: '/governance',\n    props: {\n      tokenName: 'IDLE',\n      availableContracts: {\n        IDLE,\n        FeeTreasury,\n        PriceOracle,\n        GovernorAlpha,\n        EcosystemFund,\n        IdleController\n      }\n    },\n    proposals: {\n      18: {\n        description: `This IIP includes Governor bravo update, M1-2022 Leagues budget transfer, Idle Smart Treasury migration, and Enzyme Bug Bounty. For more information, check: <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://gov.idle.finance/t/iip-18-governor-bravo-update-m1-2022-leagues-budget-transfer-idle-smart-treasury-migration-and-enzyme-bug-bounty/895\">https://gov.idle.finance/t/iip-18-governor-bravo-update-m1-2022-leagues-budget-transfer-idle-smart-treasury-migration-and-enzyme-bug-bounty/895</a>.`,\n      },\n      12: {\n        description: 'Details in the gov forum post: <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://gov.idle.finance/t/iip-12-enable-idle-lm-on-idlerai-and-fund-leagues-mandate/620\">https://gov.idle.finance/t/iip-12-enable-idle-lm-on-idlerai-and-fund-leagues-mandate/620</a>.'\n      },\n      7: {\n        description: `Upgrade of IdleTokenGovernance contract to include the following changes:<br />\n        <ul>\n          <li>support for EIP 3165 flashLoans (fee is set to 0.08% of the flash loaned amount redistributed to LP)</li>\n          <li>support for stkAAVE distribution</li>\n          <li>support for new cWBCT distribution</li>\n          <li>other minor updates for gas and redeems</li>\n        </ul>\n        See more in the gov forum post: <a class=\"link\" href=\"https://gov.idle.finance/t/iip-7-idletoken-upgrade-stkaave-distribution/466\">https://gov.idle.finance/t/iip-7-idletoken-upgrade-stkaave-distribution/466</a>.`\n      }\n    },\n    contracts: {\n      delegates: \"IDLE\",\n      governance: \"GovernorAlpha\"\n    }\n  },\n  curve: {\n    enabled: false,\n    params: {\n      n_coins: 3,\n      label: \"Curve\",\n      route: \"/dashboard/curve\",\n      image: \"images/protocols/curve.svg\",\n      imageInactive: \"images/protocols/curve-off.svg\"\n    },\n    rates: {\n      path: [\"apy\", \"day\", \"idle\"],\n      endpoint: \"https://www.curve.fi/raw-stats/apys.json\"\n    },\n\n    poolContract: {\n      decimals: 18,\n      abi: CurvePool,\n      name: \"idleDAI+idleUSDC+idleUSDT\",\n      token: \"idleDAI+idleUSDC+idleUSDT\",\n      address: \"0x09f4b84a87fc81fc84220fd7287b613b8a9d4c05\"\n    },\n    depositContract: {\n      abi: CurveDeposit,\n      name: \"idleCurveDeposit\",\n      address: \"0x83f252f036761a1e3d10daca8e16d7b21e3744d7\"\n    },\n    gaugeContract: {\n      abi: LiquidityGaugeV2,\n      name: \"LiquidityGaugeV2\",\n      address: \"0xd69ac8d9D25e99446171B5D0B3E4234dAd294890\"\n    },\n    zapContract: {\n      abi: CurveZap,\n      name: \"idleCurveZap\",\n      address: \"0x456974df1042ba7a46fd49512a8778ac3b840a21\"\n    },\n    migrationContract: {\n      abi: CurveDeposit,\n      name: \"idleCurveDeposit\",\n      address: \"0x83f252f036761a1e3d10daca8e16d7b21e3744d7\",\n      functions: [\n        {\n          label: \"Deposit\",\n          name: \"add_liquidity\"\n        }\n      ]\n    },\n    availableTokens: {\n      idleDAIYield: {\n        decimals: 18,\n        enabled: true,\n        baseToken: \"DAI\",\n        token: \"idleDAIYield\",\n        address: \"0x3fe7940616e5bc47b0775a0dccf6237893353bb4\",\n        migrationParams: {\n          n_coins: 3,\n          coinIndex: 0\n        }\n      },\n      idleUSDCYield: {\n        decimals: 18,\n        enabled: true,\n        baseToken: \"USDC\",\n        token: \"idleUSDCYield\",\n        address: \"0x5274891bEC421B39D23760c04A6755eCB444797C\",\n        migrationParams: {\n          n_coins: 3,\n          coinIndex: 1\n        }\n      },\n      idleUSDTYield: {\n        decimals: 18,\n        enabled: true,\n        baseToken: \"USDT\",\n        token: \"idleUSDTYield\",\n        address: \"0xF34842d05A1c888Ca02769A633DF37177415C2f8\",\n        migrationParams: {\n          n_coins: 3,\n          coinIndex: 2\n        }\n      }\n    }\n  },\n  permit: {\n    DAI: {\n      version: 1,\n      EIPVersion: null,\n      nonceMethod: \"nonces\",\n      name: \"Dai Stablecoin\",\n      type: [\n        { name: \"holder\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"expiry\", type: \"uint256\" },\n        { name: \"allowed\", type: \"bool\" }\n      ]\n    },\n    USDC: {\n      version: 2,\n      name: \"USD Coin\",\n      EIPVersion: 2612,\n      nonceMethod: \"nonces\",\n      type: [\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" }\n      ]\n    },\n    SLP: {\n      version: 1,\n      EIPVersion: 2612,\n      nonceMethod: \"nonces\",\n      name: \"SushiSwap LP Token\",\n      type: [\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" }\n      ]\n    }\n  },\n  govTokens: {\n    IDLE: {\n      abi: IDLE,\n      decimals: 18,\n      token: \"IDLE\",\n      enabled: true,\n      showAUM: false, // Include IDLE balance in AUM\n      showAPR: false, // Include IDLE Apr\n      protocol: \"idle\",\n      showPrice: false, // Show price in Yield Farming section\n      showBalance: false, // Include IDLE balance in Portfolio Donut\n      aprTooltipMode: false,\n      distributionMode: \"block\",\n      availableNetworks: [1, 137],\n      distributionFrequency: \"day\", // Multiply distribution per block\n      color: \"hsl(162, 100%, 41%)\",\n      icon: \"images/tokens/IDLE.svg\",\n      addresses: {\n        1: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\",\n        137: \"0xc25351811983818c9fe6d8c580531819c8ade90f\"\n      },\n      address: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\", // MAIN\n      disabledTokens: {\n        1: [\"idleDAISafe\", \"idleUSDCSafe\", \"idleUSDTSafe\"],\n        137: [\"idleDAIYield\", \"idleUSDCYield\", \"idleWETHYield\"],\n      }\n    },\n    COMP: {\n      abi: COMP,\n      decimals: 18,\n      token: \"COMP\",\n      enabled: true,\n      showAUM: true, // Include IDLE balance in AUM\n      showAPR: true, // Include COMP Apr\n      showPrice: true,\n      showBalance: true, // Include COMP balance in Portfolio Donut\n      disabledTokens: [],\n      protocol: \"compound\",\n      aprTooltipMode: false,\n      availableNetworks: [1],\n      distributionMode: \"block\",\n      distributionFrequency: \"day\",\n      color: \"hsl(162, 100%, 41%)\",\n      address: \"0xc00e94cb662c3520282e6f5717214004a7f26888\" // MAIN\n      // address:'0x61460874a7196d6a22d1ee4922473664b3e95270' // KOVAN\n    },\n    stkAAVE: {\n      abi: aToken,\n      decimals: 18,\n      showAUM: true, // Include stkAAVE balance in AUM\n      showAPR: true, // Include stkAAVE Apr\n      enabled: true,\n      showPrice: true,\n      token: 'stkAAVE',\n      showBalance: true, // Include stkAAVE balance in Portfolio Donut\n      protocol: 'aavev2',\n      aprTooltipMode: false,\n      availableNetworks: [1],\n      distributionMode: 'second',\n      color: 'hsl(314, 41%, 51%)',\n      distributionFrequency: 'day',\n      address: '0x4da27a545c0c5b758a6ba100e3a049001de870f5', // MAIN\n      addressForPrice: '0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9', // MAIN\n      disabledTokens: {\n        1: [\"idleTUSDYield\", \"idleSUSDYield\", \"idleFEIYield\"]\n      }\n    },\n    WMATIC: {\n      abi: ERC20,\n      decimals: 18,\n      showAUM: true, // Include stkAAVE balance in AUM\n      showAPR: true, // Include stkAAVE Apr\n      enabled: true,\n      token: 'WMATIC',\n      showPrice: true,\n      showBalance: true, // Include stkAAVE balance in Portfolio Donut\n      protocol: 'aavev2',\n      disabledTokens: [],\n      aprTooltipMode: false,\n      distributionMode: 'second',\n      color: 'hsl(314, 41%, 51%)',\n      distributionFrequency: 'day',\n      availableNetworks: [137, 80001],\n      // address:'0x9c3C9283D3e44854697Cd22D3Faa240Cfb032889', // Mumbai\n      address: '0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270', // Polygon\n      addressForPrice: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0' // Mainnet\n    }\n  },\n  contracts: {\n    137: {\n      ProtocolDataProvider: {\n        abi: ProtocolDataProvider,\n        address: '0x7551b5D2763519d4e37e8B81929D336De671d46d'\n      },\n      ChildChainManager: {\n        abi: ChildChainManager,\n        // address:'0x2e5e27d50EFa501D90Ad3638ff8441a0C0C0d75e' // Mumbai\n        address: '0xA6FA4fB5f76172d178d61B04b0ecd319C5d1C0aa' // Matic\n      },\n      UniswapRouter: {\n        networkId: 1,\n        abi: UniswapV2Router02,\n        address: '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\n      },\n      SushiswapRouter: {\n        abi: SushiV2Router02,\n        address: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506'\n      },\n    },\n    1: {\n      DepositManager: {\n        abi: DepositManager,\n        address: '0x401f6c983ea34274ec46f84d70b31c151321188b'\n      },\n      RootChainManager: {\n        abi: RootChainManager,\n        // address:'0xBbD7cBFA79faee899Eaf900F13C9065bF03B1A74' // Goerli\n        address: '0xA0c68C638235ee32657e8f720a23ceC1bFc77C77' // Mainnet\n      },\n      ProxyFactory: {\n        abi: MinimalInitializableProxyFactory,\n        address: \"0x91baced76e3e327ba7850ef82a7a8251f6e43fb8\"\n      },\n      LockedIDLE: {\n        abi: LockedIDLE,\n        address: '0xF241a0151841AE2E6ea750D50C5794b5EDC31D99'\n      },\n      FeeTreasury: {\n        abi: FeeTreasury,\n        address: '0x69a62c24f16d4914a48919613e8ee330641bcb94' // MAIN\n      },\n      PriceOracle: {\n        abi: PriceOracle,\n        address: '0x972A64d108e250dF98dbeac8170678501f5EF181' // MAIN\n        // address:'0xCab5760688db837Bb453FE1DFBC5eDeE6fa8F0FF' // KOVAN\n      },\n      Timelock: {\n        abi: Timelock,\n        address: '0xD6dABBc2b275114a2366555d6C481EF08FDC2556' // MAIN\n        // address:'0xfD88D7E737a06Aa9c62B950C1cB5eE63DA379AFd' // KOVAN\n      },\n      EcosystemFund: {\n        abi: EcosystemFund,\n        address: '0xb0aA1f98523Ec15932dd5fAAC5d86e57115571C7' // MAIN\n        // address:'0x125d3D6A8e546BD13802c309429CBB4db5737d57' // KOVAN\n      },\n      VesterFactory: {\n        abi: VesterFactory,\n        address: '0xbF875f2C6e4Cc1688dfe4ECf79583193B6089972' // MAIN\n        // address:'0x9b52f91578c8AfA8e2DF07d4D7726bB6b73Ec1FE' // KOVAN\n      },\n      IdleController: {\n        abi: IdleController,\n        address: '0x275DA8e61ea8E02d51EDd8d0DC5c0E62b4CDB0BE' // MAIN\n        // address:'0x8Ad5F0644b17208c81bA5BDBe689c9bcc7143d87' // KOVAN\n      },\n      EarlyRewards: {\n        abi: EarlyRewards,\n        address: '0xa1F71ED24ABA6c8Da8ca8C046bBc9804625d88Fc' // MAIN\n        // address:'0x07A94A60B54c6b2Da19e23D6E9123180Bf92ED40' // KOVAN\n      },\n      GovernorAlpha: {\n        abi: GovernorAlpha,\n        address: '0x2256b25CFC8E35c3135664FD03E77595042fe31B' // MAIN\n        // address:'0x782cB1dbd0bD4df95c2497819be3984EeA5c2c25' // KOVAN\n      },\n      Comptroller: {\n        abi: Comptroller,\n        address: '0x3d9819210a31b4961b30ef54be2aed79b9c9cd3b', // Main\n        // address:'0x5eae89dc1c671724a672ff0630122ee834098657' // Kovan\n      },\n      SushiswapRouter: {\n        abi: SushiV2Router02,\n        address: '0xd9e1cE17f2641f24aE83637ab66a2cca9C378B9F'\n      },\n      UniswapRouter: {\n        abi: UniswapV2Router02,\n        address: '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\n      },\n      BalancerExchangeProxy: {\n        abi: BalancerExchangeProxy,\n        address: '0x3E66B66Fd1d0b02fDa6C811Da9E0547970DB2f21'\n      }\n    }\n  },\n  tokens: {\n    DAI: {\n      zeroExInstant: {\n        orderSource: \"https://api.0x.org/sra/\",\n        assetData:\n          \"0xf47261b00000000000000000000000006b175474e89094c44da98b954eedeac495271d0f\",\n        affiliateInfo: {\n          feeRecipient: \"0x4215606a720477178AdFCd5A59775C63138711e8\",\n          feePercentage: 0.0025\n        }\n      }\n    },\n    USDC: {\n      zeroExInstant: {\n        orderSource: \"https://api.0x.org/sra/\",\n        assetData:\n          \"0xf47261b0000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\",\n        affiliateInfo: {\n          feeRecipient: \"0x4215606a720477178AdFCd5A59775C63138711e8\",\n          feePercentage: 0.0025\n        }\n      }\n    }\n  },\n  tranchflash: {\n    name: \"perpetual yield tranches\",\n    subtitle: \"Make yield your own.\",\n    desc: \"Choose the benefits of high-yield or low-risk, while enjoying the flexibility of Tranches. This comes with auto-compounding for accrued governance tokens and no locking period.\",\n    arrows: \"images/idlearrows.svg\",\n    juniorinfo:\n      \"<b>Junior Tranches</b><br>Higher risk, leveraged for variable rate rewards\",\n    seniorinfo:\n      \"<b>Senior Tranches</b><br>Lower risk, built-in coverage for variable rate rewards\",\n    helpcircle: \"images/help-circle.svg\",\n    questions: [\n      {\n        desc: \"How it Works?\",\n        msg: \"This product aggregates user deposits into underlying markets and allocates the accrued yield on the sum between two different risk profile subsets. You get to choose the strategy according to your risk tolerance. Users are able to deposit funds into either the Junior or Senior Tranches in exchange for a token indicating their claim on their principal and whatever yield is allocated for them. These aggregated holdings are then deposited into the specified originating lending market, in this current version Idle Best-Yield strategy.\"\n      },\n      {\n        desc: \"What happens in a case of a default?\",\n        msg: \"In case of hack, an emergency shutdown can be triggered (by both the guardian, which would be a multi-sig wallet, and the owner which will be the Idle governance) in order to pause both deposits and redeems.<br />The redistribution of remaining funds can happens selectively, by allowing only Senior tranche holders to withdraw first directly in the main contract, or through a separate contract for more complex cases and resolutions (managed by the Idle governance).\"\n      }\n    ]\n  },\n  tranches: {\n    AA: {\n      color: {\n        hex: \"#337de5\",\n        rgb: [51, 125, 229],\n        hsl: [\"215\", \"77%\", \"55%\"]\n      },\n      type: \"AA\",\n      route: \"senior\",\n      icon: \"Security\",\n      image: \"images/SeniorTranche.svg\",\n      bubble: \"images/SeniorBubble.svg\",\n      baseName: \"senior\",\n      name: \"Senior Tranche\",\n      features: [\n        \"Covered by Junior tranches funds\",\n        \"Minimized risk exposure\",\n        \"No locking period or epochs\",\n        \"Auto-Reinvest accrued tokens\",\n        \"Stake to receive $IDLE tokens\"\n      ],\n      description: {\n        withdraw: \"You can withdraw your funds at any time from the tranche.\",\n        stake: \"Stake your tranche tokens to earn additional rewards and boost the APY.\",\n        unstake: \"By unstaking your tranche tokens you will no more get additional rewards.\",\n        cantUnstake: \"To unstake your funds you just need to wait 10 blocks after your last stake transaction.\",\n        cantWithdraw: \"To withdraw your funds you just need to wait at least 1 block from the latest harvest transaction.\",\n        long: \"Senior Tranches provide a shielded access to optimized DeFi yields, thanks to an integrated funds' coverage given by Junior Tranches\",\n        deposit: \"By depositing in the Senior Tranche in case of Smart-Contract breach your funds are covered by the funds deposited in the Junior Tranche.\",\n      }\n    },\n    BB: {\n      color: {\n        hex: \"#FAB325\",\n        rgb: [250, 179, 37],\n        hsl: [\"40\", \"95%\", \"56%\"]\n      },\n      type: \"BB\",\n      route: \"junior\",\n      icon: \"TrendingUp\",\n      image: \"images/JuniorTranche.svg\",\n      bubble: \"images/JuniorBubble.svg\",\n      baseName: \"junior\",\n      name: \"Junior Tranche\",\n      features: [\n        \"Leverage yield using Senior tranches funds\",\n        \"Higher risk exposure by protecting senior tranches\",\n        \"No locking period or epochs\",\n        \"Auto-Reinvest accrued tokens\",\n      ],\n      description: {\n        withdraw: \"You can withdraw your funds at any time from the tranche.\",\n        stake: \"Stake your tranche tokens to earn additional rewards and boost the APY.\",\n        unstake: \"By unstaking your tranche tokens you will no more get additional rewards.\",\n        cantUnstake: \"To unstake your funds you just need to wait 10 blocks after your last stake transaction.\",\n        cantWithdraw: \"To withdraw your funds you just need to wait at least 1 block from the latest harvest transaction.\",\n        long: \"The Junior Tranches provide amplified optimized DeFi yields by carrying a higher grade of risks and protecting Senior Tranches\",\n        deposit: \"By depositing in the Junior Tranche in case of Smart-Contract breach your funds will be used to cover eventual losses on the Senior Tranche.\",\n      }\n    }\n  },\n  extraicons: {\n    best: {\n      icon: \"images/sidebar/best-on.svg\",\n      iconDark: \"images/sidebar/best-on-dark.svg\",\n      iconInactive: \"images/sidebar/best-off.svg\",\n      iconInactiveDark: \"images/sidebar/best-off-dark.svg\",\n    },\n    tranches: {\n      icon: \"images/sidebar/tranches-on.svg\",\n      iconDark: \"images/sidebar/tranches-on-dark.svg\",\n      iconInactive: \"images/strategies/tranches-off.svg\",\n      iconInactiveDark: \"images/strategies/tranches-off-dark.svg\"\n    },\n    risk: {\n      icon: \"images/sidebar/risk-on.svg\",\n      iconDark: \"images/sidebar/risk-on-dark.svg\",\n      iconInactive: \"images/sidebar/risk-off.svg\",\n      iconInactiveDark: \"images/sidebar/risk-off-dark.svg\"\n    },\n    stats: {\n      icon: \"images/sidebar/stats-on.svg\",\n      iconDark: \"images/sidebar/stats-on-dark.svg\",\n      iconInactive: \"images/sidebar/stats-off.svg\",\n      iconInactiveDark: \"images/sidebar/stats-off-dark.svg\"\n    },\n    tools: {\n      icon: \"images/sidebar/tools-on.svg\",\n      iconDark: \"images/sidebar/tools-on-dark.svg\",\n      iconInactive: \"images/sidebar/tools-off.svg\",\n      iconInactiveDark: \"images/sidebar/tools-off-dark.svg\"\n    },\n    forum: {\n      icon: \"images/sidebar/forum-on.svg\",\n      iconDark: \"images/sidebar/forum-on-dark.svg\",\n      iconInactive: \"images/sidebar/forum-off.svg\",\n      iconInactiveDark: \"images/sidebar/forum-off-dark.svg\"\n    },\n    stake: {\n      icon: \"images/sidebar/stake-on.svg\",\n      iconDark: \"images/sidebar/stake-on-dark.svg\",\n      iconInactive: \"images/sidebar/stake-off.svg\",\n      iconInactiveDark: \"images/sidebar/stake-off-dark.svg\"\n    },\n    leaderboard: {\n      icon: \"images/sidebar/leaderboard-on.svg\",\n      iconDark: \"images/sidebar/leaderboard-on-dark.svg\",\n      iconInactive: \"images/sidebar/leaderboard-off.svg\",\n      iconInactiveDark: \"images/sidebar/leaderboard-off-dark.svg\"\n    }, overview: {\n      icon: \"images/sidebar/overview-on.svg\",\n      iconDark: \"images/sidebar/overview-on-dark.svg\",\n      iconInactive: \"images/sidebar/overview-off.svg\",\n      iconInactiveDark: \"images/sidebar/overview-off-dark.svg\"\n    }, proposals: {\n      icon: \"images/sidebar/proposals-on.svg\",\n      iconDark: \"images/sidebar/proposals-on-dark.svg\",\n      iconInactive: \"images/sidebar/proposals-off.svg\",\n      iconInactiveDark: \"images/sidebar/proposals-off-dark.svg\"\n    }, delegate: {\n      icon: \"images/sidebar/delegate-on.svg\",\n      iconDark: \"images/sidebar/delegate-on-dark.svg\",\n      iconInactive: \"images/sidebar/delegate-off.svg\",\n      iconInactiveDark: \"images/sidebar/delegate-off-dark.svg\"\n    },\n  },\n  landingStrategies: {\n    tranches: {\n      networkId: 1,\n      token: \"FEI\",\n      visible: true,\n      type: \"tranche\",\n      enabledEnvs: [],\n      protocol: \"idle\",\n      color: \"#f32121\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      strategy: 'tranches',\n      component: Tranches,\n      iconName: \"Whatshot\",\n      availableNetworks: [1],\n      govTokensEnabled: true,\n      title: \"Perpetual Tranches\",\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/tranches-on.png\",\n      iconInactive: \"images/strategies/tranches-off.png\",\n      iconInactiveDark: \"images/strategies/tranches-white.png\",\n      desc: \"Diversify your risk profile with dynamic tranched yield derivatives\",\n      descShort: \"Tranches deposit assets (eg DAI) into yield sources (eg Idle Finance) and split the accrued interest between 2 classes of products with different risk profiles.\",\n      descLong: \"Choose the benefits of high-yield or low-risk, while enjoying the flexibility of Tranches. This comes with auto-compounding for accrued governance tokens and no locking period.\"\n    },\n    best: {\n      networkId: 1,\n      token: \"DAI\",\n      visible: true,\n      strategy: 'best',\n      enabledEnvs: [],\n      color: \"#f32121\",\n      type: \"strategy\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      title: \"Best-Yield\",\n      iconName: \"Whatshot\",\n      availableNetworks: [],\n      govTokensEnabled: true,\n      component: StrategyPage,\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/best-on.svg\",\n      iconInactive: \"images/strategies/best-off.svg\",\n      iconInactiveDark: \"images/strategies/best-white.svg\",\n      desc: \"Maximize your returns across DeFi protocols\",\n      descLong: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.\",\n      descShort: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.\"\n    },\n    polygon: {\n      token: \"DAI\",\n      visible: true,\n      networkId: 137,\n      enabledEnvs: [],\n      strategy: 'best',\n      color: \"#f32121\",\n      type: \"strategy\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      title: \"Best-Yield\",\n      iconName: \"Whatshot\",\n      availableNetworks: [],\n      govTokensEnabled: true,\n      component: StrategyPage,\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/best-on.svg\",\n      iconInactive: \"images/strategies/best-on.svg\",\n      iconInactiveDark: \"images/strategies/best-on.svg\",\n      desc: \"Maximize your returns on Polygon across DeFi protocols\",\n      descLong: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.\",\n      descShort: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.\"\n    }\n  },\n  strategies: {\n    tranches: {\n      token: \"FEI\",\n      visible: true,\n      type: \"tranche\",\n      enabledEnvs: [],\n      protocol: \"idle\",\n      color: \"#f32121\",\n      comingSoon: false,\n      title: \"Tranches\",\n      addGovTokens: true,\n      titlePostfix: null,\n      component: Tranches,\n      iconName: \"Whatshot\",\n      availableNetworks: [1],\n      govTokensEnabled: true,\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/tranches-on.png\",\n      iconInactive: \"images/strategies/tranches-off.png\",\n      iconInactiveDark: \"images/strategies/tranches-white.png\",\n      desc: \"Diversify your risk profile with dynamic tranched yield derivatives\",\n      descShort: \"Tranches deposit assets (eg DAI) into yield sources (eg Idle Finance) and split the accrued interest between 2 classes of products with different risk profiles.\",\n      descLong: \"Choose the benefits of high-yield or low-risk, while enjoying the flexibility of Tranches. This comes with auto-compounding for accrued governance tokens and no locking period.\"\n    },\n    best: {\n      token: \"DAI\",\n      visible: true,\n      enabledEnvs: [],\n      color: \"#f32121\",\n      type: \"strategy\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      title: \"Best-Yield\",\n      iconName: \"Whatshot\",\n      govTokensEnabled: true,\n      component: StrategyPage,\n      availableNetworks: [1, 137],\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/best-on.svg\",\n      iconInactive: \"images/strategies/best-off.svg\",\n      iconInactiveDark: \"images/strategies/best-white.svg\",\n      desc: \"Maximize your returns across DeFi protocols\",\n      descLong: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.\",\n      descShort: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.\"\n    },\n    risk: {\n      token: \"DAI\",\n      visible: true,\n      enabledEnvs: [],\n      color: \"#2196F3\",\n      type: \"strategy\",\n      comingSoon: false,\n      titlePostfix: null,\n      addGovTokens: true,\n      iconName: \"Security\",\n      availableNetworks: [1],\n      title: \"Risk-Adjusted\",\n      govTokensEnabled: true,\n      component: StrategyPage,\n      chartColor: \"hsl(211,67%,47%)\",\n      icon: \"images/strategies/risk-on.svg\",\n      iconInactive: \"images/strategies/risk-off.svg\",\n      iconInactiveDark: \"images/strategies/risk-white.svg\",\n      desc: \"Optimize your risk exposure across DeFi protocols\",\n      descLong: \"The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.\",\n      descShort: \"The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.\"\n    }\n    /*\n    new:{\n      token:'DAI',\n      color:'#2196F3',\n      comingSoon:true,\n      addGovTokens:true,\n      iconName:'Adjust',\n      title:'Coming Soon',\n      chartColor:'hsl(211,67%,47%)',\n      icon:'images/strategies/solr-on.svg',\n      desc:'More strategies are coming soon!',\n      iconInactive:'images/strategies/solr-off.svg',\n      descLong:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.',\n      descShort:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.'\n    }\n    */\n  },\n  stats: {\n    enabled: true, // Enable endpoint\n    availableNetworks: [1, 137],\n    rates: {\n      TTL: 300, // 5 minutes\n      endpoint: {\n        1: \"https://api.idle.finance/rates/\",\n        137: \"https://api-polygon.idle.finance/rates/\"\n      }\n    },\n    tvls: {\n      TTL: 120,\n      endpoint: {\n        1: \"https://api.idle.finance/tvls/\",\n        137: \"https://api-polygon.idle.finance/tvls/\"\n      }\n    },\n    aprs: {\n      TTL: 120,\n      endpoint: {\n        1: \"https://api.idle.finance/aprs/\",\n        137: \"https://api-polygon.idle.finance/aprs/\"\n      }\n    },\n    substack: {\n      TTL: 1800,\n      endpoint: {\n        1: \"https://api.idle.finance/substack/\",\n        137: \"https://api-polygon.idle.finance/substack/\"\n      }\n    },\n    scores: {\n      TTL: 300, // 5 minutes\n      endpoint: {\n        1: \"https://api.idle.finance/scores/\"\n      }\n    },\n    config: {\n      headers: env.REACT_APP_IDLE_KEY ? { Authorization: `Bearer ${env.REACT_APP_IDLE_KEY}` } : {}\n    },\n    versions: {\n      /*\n      v2:{\n        label:'Idle V2',\n        startTimestamp:null,\n        additionalProtocols:[],\n        endTimestamp:1589752999,\n        enabledStrategies:['best'],\n        showPerformanceTooltip:false,\n        enabledTokens:['DAI','USDC'],\n      },\n      */\n      v3: {\n        label: \"Idle V3\",\n        additionalProtocols: [],\n        endTimestamp: 1597237542,\n        startTimestamp: 1589801874,\n        showPerformanceTooltip: false,\n        strategiesParams: {\n          risk: {\n            endTimestamp: 1597233922\n          }\n        },\n        enabledStrategies: [\"best\", \"risk\"],\n        enabledTokens: [\"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\"]\n      },\n      v4: {\n        label: \"Idle V4\",\n        endTimestamp: null,\n        startTimestamp: 1597442400, // 1598220000\n        enabledStrategies: [\"best\", \"risk\"],\n        showPerformanceTooltip: true,\n        strategiesParams: {\n          risk: {\n            startTimestamp: 1599183170\n          }\n        },\n        enabledTokens: ['DAI', 'USDC', 'USDT', 'TUSD', 'SUSD', 'WBTC', 'WETH', 'RAI', 'FEI'],\n        additionalProtocols: [\n          {\n            decimals: 16,\n            protocol: \"compound\",\n            name: \"compoundWithCOMP\",\n            enabledTokens: [\"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\", \"WETH\"]\n          },\n          {\n            decimals: 18,\n            protocol: \"aavev2\",\n            name: \"aavev2WithStkAAVE\",\n            enabledTokens: [\"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\", \"WETH\", \"RAI\"]\n          }\n        ]\n      }\n    },\n    tokens: {\n      DAI: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          rgb: [250, 184, 51],\n          hex: '#F7B24A',\n          hsl: ['40', '95%', '59%']\n        },\n        chart: {\n          labelTextColorModifiers: ['darker', 2]\n        },\n        startTimestamp: '2020-02-11',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        performanceTooltip: 'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      ETH: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#333',\n          rgb: [51, 51, 51],\n          hsl: ['0, 0%, 20%']\n        },\n        address: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0'\n      },\n      STETH: {\n        decimals: 18,\n        enabled: true,\n        label: 'stETH',\n        color: {\n          hex: '#00a3ff',\n          rgb: [0, 163, 255],\n          hsl: ['202', '100%', '50%']\n        },\n        conversionRateField: \"stETHDAIPrice\",\n        address: '0xae7ab96520de3a18e5e111b5eaab095312d7fe84'\n      },\n      CVX: {\n        decimals: 18,\n        enabled: true,\n        label: 'CVX',\n        color: {\n          hex: '#3a3a3a',\n          rgb: [58, 58, 58],\n          hsl: ['0', '0%', '23%']\n        },\n        address: '0x4e3fbd56cd56c3e72c1403e103b45db9da5b9d2b'\n      },\n      LDO: {\n        label: 'LDO',\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#3a3a3a',\n          rgb: [58, 58, 58],\n          hsl: ['0', '0%', '23%']\n        },\n        address: '0x5a98fcbea516cf06857215779fd812ca3bef1b32'\n      },\n      CRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'CRV',\n        color: {\n          hex: '#3466a3',\n          rgb: [52, 102, 163],\n          hsl: ['213', '52%', '42%']\n        },\n        address: '0xD533a949740bb3306d119CC777fa900bA034cd52'\n      },\n      FRAX3CRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'FRAX3CRV',\n        icon: \"images/tokens/FRAX3CRV.png\",\n        color: {\n          hex: '#333',\n          rgb: [51, 51, 51],\n          hsl: ['0, 0%, 20%']\n        },\n        address: '0xd632f22692FaC7611d2AA1C0D552930D43CAEd3B'\n      },\n      MIM3CRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'MIM3CRV',\n        color: {\n          hex: '#231b46',\n          rgb: [35, 27, 70],\n          hsl: ['251', '44%', '19%']\n        },\n        address: '0x5a6A4D54456819380173272A5E8E9B9904BdF41B'\n      },\n      MATIC: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#8247E5',\n          rgb: [130, 71, 229],\n          hsl: ['262, 75%, 59%']\n        },\n        address: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0'\n      },\n      USD: {\n        enabled: true,\n        color: {\n          hex: \"#85bb65\",\n          rgb: [133, 187, 101],\n          hsl: [\"98\", \"39%\", \"56%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 2]\n        },\n        address: null,\n        startTimestamp: \"2020-02-04\"\n      },\n      USDC: {\n        decimals: 6,\n        enabled: true,\n        color: {\n          hex: \"#2875C8\",\n          rgb: [40, 117, 200],\n          hsl: [\"211\", \"67%\", \"47%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 2]\n        },\n        startTimestamp: \"2020-02-04\",\n        address: \"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      USDT: {\n        decimals: 6,\n        enabled: true,\n        color: {\n          hex: \"#22a079\",\n          rgb: [34, 160, 121],\n          hsl: [\"161\", \"65%\", \"38%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        startTimestamp: \"2020-02-04\",\n        address: \"0xdac17f958d2ee523a2206206994597c13d831ec7\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      TUSD: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"0340a1\",\n          rgb: [3, 64, 161],\n          hsl: [\"217\", \"96%\", \"32%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 5]\n        },\n        startTimestamp: \"2020-06-22\",\n        address: \"0x0000000000085d4780b73119b644ae5ecd22b376\"\n      },\n      SUSD: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#1e1a31\",\n          rgb: [30, 26, 49],\n          hsl: [\"250\", \"31%\", \"15%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 5]\n        },\n        startTimestamp: \"2020-06-22\",\n        address: \"0x57ab1ec28d129707052df4df418d58a2d46d5f51\"\n      },\n      WBTC: {\n        decimals: 8,\n        enabled: true,\n        color: {\n          hex: \"#eb9444\",\n          rgb: [235, 148, 68],\n          hsl: [\"29\", \"81%\", \"59%\"]\n        },\n        startTimestamp: \"2020-06-15\",\n        conversionRateField: \"wbtcDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x2260fac5e5542a773aa44fbcfedf7c193bc2c599\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      WETH: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#ee1f79\",\n          rgb: [238, 31, 121],\n          hsl: [\"334\", \"86%\", \"53%\"]\n        },\n        startTimestamp: \"2021-02-16\",\n        conversionRateField: \"wethDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      COMP: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#00d395\",\n          rgb: [0, 211, 149],\n          hsl: [\"162\", \"100%\", \"41%\"]\n        },\n        startTimestamp: \"2020-06-15\",\n        conversionRateField: \"compDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0xc00e94cb662c3520282e6f5717214004a7f26888\"\n      },\n      stkAAVE: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#B6509E\",\n          rgb: [182, 80, 158],\n          hsl: [\"314\", \"41%\", \"51%\"]\n        },\n        startTimestamp: \"2021-04-30\",\n        conversionRateField: \"aaveDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x4da27a545c0c5b758a6ba100e3a049001de870f5\"\n      },\n      IDLE: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#0d55bb\",\n          rgb: [13, 85, 187],\n          hsl: [\"215\", \"87%\", \"39%\"]\n        },\n        startTimestamp: \"2020-11-10\",\n        conversionRateField: \"idleDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\"\n      },\n      RAI: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#378879\",\n          rgb: [55, 136, 121],\n          hsl: [\"169\", \"42%\", \"37%\"]\n        },\n        disabledCharts: [\"score\"],\n        startTimestamp: \"2021-11-16\",\n        icon: \"images/tokens/RAI.png\",\n        conversionRateField: \"raiDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x03ab458634910aad20ef5f1c8ee96f1d6ac54919\"\n      },\n      FEI: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#229b6e',\n          rgb: [34, 155, 110],\n          hsl: ['158', '64%', '37%']\n        },\n        disabledCharts: ['score'],\n        startTimestamp: '2021-09-24',\n        conversionRateField: 'feiDAIPrice',\n        chart: {\n          labelTextColorModifiers: ['darker', 4]\n        },\n        address: '0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n      },\n      WMATIC: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#2891f8',\n          rgb: [40, 145, 248],\n          hsl: ['210', '94%', '56%']\n        },\n        startTimestamp: '2021-05-25',\n        chart: {\n          labelTextColorModifiers: ['darker', 4]\n        },\n        address: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0',\n      },\n      'idleDAI+idleUSDC+idleUSDT': {\n        decimals: 18,\n        enabled: false,\n        name: 'Curve.fi',\n        color: {\n          hex: '#ff0000',\n          rgb: [255, 0, 0],\n          hsl: ['0', '100%', '50%']\n        },\n        startTimestamp: \"2020-06-15\"\n      }\n    },\n    protocols: {\n      compound: {\n        legend: true,\n        enabled: true,\n        label: \"Compound\",\n        color: {\n          rgb: [0, 209, 146],\n          hsl: [\"162\", \"100%\", \"41%\"]\n        }\n      },\n      aavev2WithStkAAVE: {\n        enabled: true,\n        label: \"Aave V2 + stkAAVE\",\n        startTimestamp: \"2021-05-08 14:30:00\",\n        // tokensProps:{\n        //   WETH:{\n        //     startTimestamp:'2021-05-19 12:20:00',\n        //   }\n        // },\n        color: {\n          hex: \"#B6509E\",\n          rgb: [182, 80, 158],\n          hsl: [\"314\", \"41%\", \"51%\"]\n        },\n        rateField: [\"rate\", \"aaveAdditionalAPR\"]\n      },\n      compoundWithCOMP: {\n        enabled: true,\n        label: \"Compound + COMP\",\n        color: {\n          rgb: [0, 153, 107],\n          hsl: [\"162\", \"100%\", \"30%\"]\n        },\n        rateField: [\"rate\", \"compoundAdditionalAPR\"]\n      },\n      fulcrum: {\n        legend: false,\n        enabled: false,\n        label: \"Fulcrum\",\n        color: {\n          rgb: [2, 138, 192],\n          hsl: [\"197\", \"98%\", \"38%\"]\n        }\n      },\n      dsr: {\n        label: \"DSR\",\n        enabled: false,\n        icon: \"CHAI.png\",\n        color: {\n          rgb: [222, 52, 67],\n          hsl: [\"355\", \"72%\", \"54%\"]\n        }\n      },\n      dydx: {\n        legend: true,\n        label: \"DyDx\",\n        enabled: true,\n        color: {\n          rgb: [87, 87, 90],\n          hsl: [\"240\", \"2%\", \"35%\"]\n        }\n      },\n      iearn: {\n        label: \"Yearn\",\n        enabled: true\n      },\n      aave: {\n        label: \"Aave V1\",\n        legend: false,\n        enabled: false,\n        color: {\n          rgb: [230, 131, 206],\n          hsl: [\"315\", \"66%\", \"71%\"]\n        }\n      },\n      aavev2: {\n        legend: true,\n        enabled: true,\n        icon: \"aave.svg\",\n        label: \"Aave V2\",\n        color: {\n          rgb: [151, 79, 141],\n          hsl: [\"308\", \"31%\", \"45%\"]\n        }\n      },\n      cream: {\n        legend: false,\n        enabled: true,\n        label: \"Cream\",\n        icon: \"cream.svg\",\n        color: {\n          rgb: [105, 226, 220],\n          hsl: [\"177\", \"68%\", \"65%\"]\n        }\n      },\n      lido: {\n        legend: false,\n        enabled: true,\n        label: \"Lido\",\n        icon: \"lido.png\",\n        color: {\n          rgb: [0, 163, 255],\n          hsl: ['202', '100%', '50%']\n        }\n      },\n      convex: {\n        legend: false,\n        enabled: true,\n        label: \"Convex\",\n        color: {\n          rgb: [58, 58, 58],\n          hsl: ['0', '0%', '23%']\n        }\n      },\n      fuse: {\n        legend: true,\n        enabled: true,\n        label: \"Fuse\",\n        icon: \"fuse.png\",\n        color: {\n          rgb: [0, 0, 0],\n          hsl: [\"0\", \"0%\", \"0%\"]\n        }\n      },\n      curve: {\n        label: \"\",\n        enabled: true,\n        color: {\n          rgb: [0, 55, 255],\n          hsl: [\"227\", \"100%\", \"50%\"]\n        }\n      },\n      idle: {\n        label: \"Idle\",\n        enabled: true,\n        color: {\n          rgb: [0, 55, 255],\n          hsl: [\"227\", \"100%\", \"50%\"]\n        }\n      }\n    }\n  },\n  contract: {\n    methods: {\n      refreshIdleSpeed: {\n        enabled: true,\n        availableNetworks: [1]\n      },\n      redeem: {\n        skipRebalance: true,\n        metaTransactionsEnabled: false\n      },\n      deposit: {\n        skipMint: true,\n        minAmountForMint: 100000,\n        erc20ForwarderEnabled: true,\n        skipMintCheckboxEnabled: true,\n        metaTransactionsEnabled: false,\n        // Proxy contract for Meta Tx or ERC20 Forwarder\n        erc20ForwarderProxyContract: {\n          forwarder: {\n            enabled: true,\n            abi: erc20Forwarder,\n            name: \"erc20Forwarder\",\n            function: \"emitMessage\",\n            address: \"0xfaadbe5f0a19f0ebf92aeb73534cbc96b96e2bda\" // Main\n            // address:'0xCB3F801C91DEcaaE9b08b1eDb915F9677D8fdB4A' // Kovan\n          },\n          tokens: {\n            DAI: {\n              enabled: true,\n              permitType: \"DAI_Permit\",\n              abi: IdleDepositForwarder,\n              function: \"permitAndDeposit\", // foo\n              name: \"IdleDepositForwarderDAI\",\n              address: \"0xDe3c769cCD1878372864375e9f89956806B86daA\" // Main\n              // address:'0x1E32F1E96B9735E5D31a23e12fe8e6D9845a9072', // Kovan\n            },\n            USDC: {\n              enabled: true,\n              abi: IdleDepositForwarder,\n              permitType: \"EIP2612_Permit\",\n              name: \"IdleDepositForwarderUSDC\",\n              function: \"permitEIP2612AndDeposit\", // 'foo'\n              address: \"0x43bD6a78b37b50E3f52CAcec53F1202dbDe6a761\" // Main\n              // address:'0x8f9048CFAa27b1A1b77c32a0b87D2DcF5D016cb5', // Kovan\n            }\n          }\n        },\n        proxyContract: {\n          enabled: false,\n          abi: IdleProxyMinter,\n          name: \"IdleProxyMinter\",\n          function: \"mintIdleTokensProxy\",\n          address: \"0x7C4414aA6B0c6CB1Bc7e5BFb7433138426AC637a\"\n        }\n      },\n      migrate: {\n        skipRebalance: true,\n        minAmountForRebalance: 10000,\n        minAmountForRebalanceMetaTx: 10000\n      },\n      redeemGovTokens: {\n        enabled: true\n      },\n      redeemSkipGov: {\n        enabled: true,\n        disabledTokens: [\"idleDAISafe\", \"idleUSDCSafe\", \"idleUSDTSafe\"]\n      },\n      rebalance: {\n        enabled: true,\n        abi: IdleRebalancerV3\n      }\n    }\n  },\n  network: { // Network configurations\n    availableNetworks: {\n      1: {\n        version: 'v1',\n        name: 'Ethereum',\n        baseToken: 'ETH',\n        color: '#4474f1',\n        provider: 'infura',\n        network: 'mainnet',\n        explorer: 'etherscan',\n        chainName: 'Ethereum Mainnet',\n      },\n      42: {\n        name: 'Kovan',\n        color: '#9064ff',\n        baseToken: 'ETH',\n        provider: 'infura',\n        explorer: 'etherscan',\n        chainName: 'Ethereum Testnet Kovan',\n      },\n      3: {\n        name: 'Ropsten',\n        color: '#ff4a8d',\n        baseToken: 'ETH',\n        provider: 'infura',\n        explorer: 'etherscan',\n        chainName: 'Ethereum Testnet Ropsten',\n      },\n      4: {\n        name: 'Rinkeby',\n        color: '#f6c343',\n        baseToken: 'ETH',\n        provider: 'infura',\n        explorer: 'etherscan',\n        chainName: 'Ethereum Testnet Rinkeby',\n      },\n      137: {\n        version: 'v1',\n        name: 'Polygon',\n        color: '#8247E5',\n        network: 'mainnet',\n        baseToken: 'MATIC',\n        explorer: 'polygon',\n        provider: 'polygon',\n        chainName: 'Matic(Polygon) Mainnet',\n      },\n      5: {\n        name: 'Görli',\n        color: '#3099f2',\n        baseToken: 'ETH',\n        version: 'mumbai',\n        network: 'testnet',\n        provider: 'infura',\n        explorer: 'etherscan',\n        chainName: 'Ethereum Testnet Görli',\n      },\n      1337: {\n        name: 'Hardhat',\n        baseToken: 'ETH',\n        color: '#4474f1',\n        provider: 'infura',\n        explorer: 'etherscan',\n        chainName: 'Ethereum Mainnet',\n      },\n      80001: {\n        name: 'Mumbai',\n        color: '#4474f1',\n        version: 'mumbai',\n        network: 'testnet',\n        baseToken: 'MATIC',\n        explorer: 'polygon',\n        provider: 'polygon',\n        chainName: 'Matic Testnet Mumbai',\n      }\n    },\n    isForked: false, // If TRUE the tx confirmation callback is fired on the receipt\n    requiredNetwork: 1, // { 1: Mainnet, 3: Ropsten, 42: Kovan }\n    blocksPerYear: 2371428,\n    secondsPerYear: 31536000,\n    requiredConfirmations: 1,\n    enabledNetworks: [1, 137],\n    firstBlockNumber: 8119247,\n    accountBalanceMinimum: 0, // in ETH for gas fees\n    providers: {\n      infura: {\n        key: env.REACT_APP_INFURA_KEY,\n        rpc: {\n          5: 'https://goerli.infura.io/v3/',\n          42: 'https://kovan.infura.io/v3/',\n          1: 'https://mainnet.infura.io/v3/',\n          1337: 'https://mainnet.infura.io/v3/',\n          137: 'https://mainnet.infura.io/v3/',\n          80001: 'https://goerli.infura.io/v3/'\n        }\n      },\n      polygon: {\n        enabled: true,\n        // key:env.REACT_APP_POLYGON_KEY,\n        key: env.REACT_APP_INFURA_KEY,\n        baseUrl: {\n          137: 'https://polygonscan.com',\n          80001: 'https://explorer-mumbai.maticvigil.com'\n        },\n        networkPairs: {\n          1: 137,\n          137: 1,\n          5: 80001,\n          80001: 5\n        },\n        publicRpc: {\n          137: 'https://polygon-rpc.com'\n        },\n        rpc: {\n          // 1:'https://rpc-mainnet.maticvigil.com/v1/',\n          // 5:'https://rpc-mumbai.maticvigil.com/v1/',\n          // 137:'https://rpc-mainnet.maticvigil.com/v1/',\n          // 80001:'https://rpc-mumbai.maticvigil.com/v1/'\n\n          1: 'https://polygon-mainnet.infura.io/v3/',\n          5: 'https://polygon-mainnet.infura.io/v3/',\n          137: 'https://polygon-mainnet.infura.io/v3/',\n          80001: 'https://polygon-mainnet.infura.io/v3/'\n\n          // 1:'https://matic-mainnet.chainstacklabs.com/',\n          // 137:'https://matic-mainnet.chainstacklabs.com/',\n          // 5:'https://matic-mumbai.chainstacklabs.com/',\n          // 80001:'https://matic-mumbai.chainstacklabs.com/' \n        }\n      },\n      nexus: {\n        endpoints: {\n          1: \"https://api.nexusmutual.io/v1/\",\n          42: \"https://api.staging.nexusmutual.io/v1/\"\n        }\n      },\n      ens: {\n        enabled: true,\n        supportedNetworks: [1]\n      },\n      covalent: {\n        enabled: true,\n        key: env.REACT_APP_COVALENT_KEY,\n        endpoints: {\n          137: 'https://api.covalenthq.com/v1/137/',\n          80001: 'https://api.covalenthq.com/v1/80001/'\n        }\n      },\n      etherscan: {\n        enabled: true, // False for empty txs list (try new wallet)\n        keys: [\n          env.REACT_APP_ETHERSCAN_KEY,\n          env.REACT_APP_ETHERSCAN_KEY2,\n          env.REACT_APP_ETHERSCAN_KEY3,\n          env.REACT_APP_ETHERSCAN_KEY4\n        ],\n        endpoints: {\n          1: 'https://api.etherscan.io/api',\n          1337: 'https://api.etherscan.io/api',\n          5: 'https://api-goerli.etherscan.io/api',\n          42: 'https://api-kovan.etherscan.io/api'\n        },\n        baseUrl: {\n          1: 'https://etherscan.io',\n          1337: 'https://etherscan.io',\n          5: 'https://goerli.etherscan.io',\n          42: 'https://kovan.etherscan.io',\n        }\n      },\n      subgraph: {\n        tranches:{\n          enabled:true,\n          endpoint:\"https://api.thegraph.com/subgraphs/name/samster91/idle-tranches\",\n          entities:{\n            trancheInfos:[\n              'id',\n              'apr',\n              'timeStamp',\n              'blockNumber',\n              'totalSupply',\n              'virtualPrice',\n              'contractValue',\n            ]\n          }\n        }\n      },\n      snapshot: {\n        whitelist: [\n          \"0x9993ADB62085AcB05Fc493f7A1D10C11227A78fa\",\n          \"0xf12ce5807e3d3128B876aa1Cec0632D63547E22E\"\n        ],\n        endpoints: {\n          proposals: \"https://hub.snapshot.org/graphql\"\n        },\n        urls: {\n          proposals: \"https://signal.idle.finance/#/idlefinance.eth/proposal/\"\n        },\n        queries: {\n          proposals: `query Proposals {\n            proposals (\n            first: 20,\n            skip: 0,\n            where: {\n            space_in: [\"idlefinance.eth\"]\n            },\n            orderBy: \"created\",\n            orderDirection: desc\n            ) {\n            id\n            ipfs\n            strategies{\n              params\n            }\n            title\n            body\n            choices\n            start\n            end\n            snapshot\n            state\n            author\n            space {\n            id\n            name\n            }\n            }\n            }`,\n          proposalsActive: `query Proposals {\n              proposals (\n              first: 20,\n              skip: 0,\n              where: {\n              space_in: [\"idlefinance.eth\"],\n              state:\"active\"\n              },\n              orderBy: \"created\",\n              orderDirection: desc\n              ) {\n              id\n              ipfs\n              strategies{\n                params\n              }\n              title\n              body\n              choices\n              start\n              end\n              snapshot\n              state\n              author\n              space {\n              id\n              name\n              }\n              }\n              }`\n        }\n      },\n      biconomy: {\n        enabled: true,\n        enableLogin: false,\n        supportedNetworks: [1, 42],\n        disabledWallets: [\"authereum\"],\n        endpoints: {\n          limits: \"https://api.biconomy.io/api/v1/dapp/checkLimits\"\n        },\n        params: {\n          debug: false,\n          apiKey: env.REACT_APP_BICONOMY_KEY, // Mainnet\n          dappId: env.REACT_APP_BICONOMY_APPID,\n          apiId: \"36572ec9-ae5c-4c4a-9530-f3ae7c7ac829\"\n          // apiKey: env.REACT_APP_BICONOMY_KEY_KOVAN, // Kovan\n        }\n      },\n      simpleID: {\n        enabled: false,\n        supportedNetworks: [1],\n        getNetwork: (networkId, availableNetworks) => {\n          let networkName = null;\n          switch (networkId) {\n            case 1:\n              networkName = \"mainnet\";\n              break;\n            default:\n              networkName = availableNetworks[networkId]\n                ? availableNetworks[networkId].toLowerCase()\n                : \"mainnet\";\n              break;\n          }\n          return networkName;\n        },\n        params: {\n          appOrigin: window.location.origin,\n          appName: \"Idle\",\n          appId: \"eb4d1754-a76e-4c58-8422-54b5ca2395e7\",\n          renderNotifications: false,\n          network: \"mainnet\"\n        }\n      }\n    }\n  },\n  events: {\n    DAI: {\n      fields: {\n        to: \"dst\",\n        from: \"src\",\n        value: \"wad\"\n      }\n    },\n    FEI: {\n      fields: {\n        to: \"dst\",\n        from: \"src\",\n        value: \"wad\"\n      }\n    }\n  },\n  notifications: [\n    {\n      enabled: false,\n      end: 1612282726374,\n      start: 1611677841027,\n      date: \"Jan 26, 2021 16:18 UTC\",\n      title: \"Cover Protocol Available\",\n      hash: \"/dashboard/tools/cover-protocol\",\n      image: \"/images/protocols/cover-logo.svg\",\n      text: \"Protect your portfolio with Cover Protocol\"\n    }\n  ],\n  tools: {\n    stake: {\n      enabled: true,\n      icon: \"Layers\",\n      label: \"Staking\",\n      route: \"staking\",\n      subComponent: Staking,\n      availableNetworks: [1],\n      desc: \"Stake your IDLE / Sushi Swap LP tokens and earn $IDLE rewards\",\n      props: {\n        availableTokens: {\n          IDLE: {\n            component: IdleStaking,\n            contract: {\n              abi: stkIDLE,\n              decimals: 18,\n              name: \"stkIDLE\",\n              fromBlock: 12561464,\n              rewardToken: \"IDLE\",\n              address: \"0xaac13a116ea7016689993193fce4badc8038136f\" // Mainnet\n            },\n            feeDistributor: {\n              fromBlock: 12649361,\n              abi: StakingFeeDistributor,\n              name: \"StakingFeeDistributor\",\n              address: \"0xbabb82456c013fd7e3f25857e0729de8207f80e2\" // Mainnet\n            },\n            abi: IDLE,\n            name: \"IDLE\",\n            token: \"IDLE\",\n            decimals: 18,\n            enabled: true,\n            label: \"IDLE\",\n            icon: \"images/tokens/IDLE.svg\",\n            address: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\", // Mainnet\n            poolLink:\n              \"https://etherscan.com/address/0x875773784Af8135eA0ef43b5a374AaD105c5D39e\"\n          },\n          SLP: {\n            component: LpStaking,\n            contract: {\n              decimals: 24,\n              name: \"LpStaking\",\n              maxMultiplier: 3,\n              abi: LpStakingAbi,\n              maxBonusDays: 120,\n              rewardToken: \"IDLE\",\n              address: \"0xcc0b9f7ed0e6bc7c2e69dbd247e8420f29aeb48d\" // Mainnet\n            },\n            name: \"SLP\",\n            token: \"SLP\",\n            decimals: 18,\n            enabled: true,\n            abi: SushiLiquidityPool,\n            label: \"SushiSwap IDLE/ETH LP Token\",\n            icon: \"images/protocols/sushiswap.png\",\n            address: \"0xa7f11e026a0af768d285360a855f2bded3047530\", // Mainnet\n            poolLink:\n              \"https://analytics.sushi.com/pairs/0xa7f11e026a0af768d285360a855f2bded3047530\"\n          }\n        }\n      }\n    },\n    stakePolygon: {\n      enabled: true,\n      icon: \"Layers\",\n      label: \"Staking\",\n      subComponent: Staking,\n      availableNetworks: [137],\n      route: \"staking-polygon\",\n      desc: \"Stake your Sushi Swap LP tokens and earn $IDLE rewards\",\n      props: {\n        availableTokens: {\n          SLP: {\n            component: LpStaking,\n            contract: {\n              decimals: 24,\n              name: \"LpStaking\",\n              maxMultiplier: 3,\n              abi: LpStakingAbi,\n              maxBonusDays: 60,\n              rewardToken: \"IDLE\",\n              address: \"0x59CDF902b6A964CD5dB04d28f12b774bFB876Be9\" // Polygon\n            },\n            name: \"SLP\",\n            token: \"SLP\",\n            decimals: 18,\n            enabled: true,\n            abi: SushiLiquidityPool,\n            label: \"SushiSwap IDLE/WETH LP Token\",\n            icon: \"images/protocols/sushiswap.png\",\n            address: \"0x5518a3af961eee8771657050c5cb23d2b3e2f6ee\", // Polygon\n            poolLink: \"https://analytics-polygon.sushi.com/pairs/0x5518a3af961eee8771657050c5cb23d2b3e2f6ee\"\n          }\n        }\n      }\n    },\n    nexusMutual: {\n      enabled: true,\n      icon: \"Security\",\n      route: \"coverage\",\n      label: \"Coverage\",\n      availableNetworks: [1],\n      desc: \"Buy Nexus Mutual coverage without KYC for your deposits\",\n      subComponent: NexusMutual,\n      props: {\n        availableTokens: {\n          idleDAIYield: {\n            decimals: 18,\n            abi: IdleTokenV4,\n            name: \"idleDAIYield\",\n            token: \"idleDAIYield\", // Mainnet\n            // token:'idleDAIYieldMock', // Kovan\n            address: \"0x0000000000000000000000000000000000000011\",\n            realAddress: \"0x3fe7940616e5bc47b0775a0dccf6237893353bb4\", // Mainnet\n            // realAddress:'0xbd0b0205408509544815d377214d8f2cbe3e5381', // Kovan\n            underlying: {\n              DAI: {\n                abi: ERC20,\n                name: \"DAI\", // Mainnet\n                token: \"DAI\",\n                decimals: 18,\n                // name:'DAIMock', // Kovan\n                address: \"0x6b175474e89094c44da98b954eedeac495271d0f\" // Mainnet\n                // address:'0x5C422252C6a47CdacF667521566Bf7bD5b0d769B' // Kovan\n              }\n            }\n          },\n          idleUSDTYield: {\n            decimals: 18,\n            abi: IdleTokenV4,\n            name: \"idleUSDTYield\",\n            token: \"idleUSDTYield\", // Mainnet\n            // token:'idleUSDTYieldMock', // Kovan\n            address: \"0x0000000000000000000000000000000000000012\",\n            realAddress: \"0xF34842d05A1c888Ca02769A633DF37177415C2f8\",\n            underlying: {\n              DAI: {\n                abi: ERC20,\n                name: \"DAI\", // Mainnet\n                token: \"DAI\",\n                decimals: 18,\n                // name:'DAIMock', // Kovan\n                address: \"0x6b175474e89094c44da98b954eedeac495271d0f\" // Mainnet\n                // address:'0x5C422252C6a47CdacF667521566Bf7bD5b0d769B' // Kovan\n              }\n            }\n          }\n        }\n      },\n      directProps: {\n        // startBlock:25858186, // Kovan\n        startBlock: 12783137, // Mainnet\n        // Yield token covers have a 14 days grace period\n        yieldTokenCoverGracePeriod: 14 * 24 * 60 * 60 * 1000,\n        contractInfo: {\n          abi: NexusMutualDistributor,\n          name: \"NexusMutualDistributor\",\n          // address:'0xe2d569dc064b3b91f514e775c6026e04d2c887a9' // Kovan\n          address: \"0xf2b36f823eae36e53a5408d8bd452748b24fbf76\" // Mainnet\n        },\n        incidentsInfo: {\n          abi: NexusMutualIncidents,\n          name: \"NexusMutualIncidents\",\n          // address:'0x322f9a880189E3FFFf59b74644e13e5763C5AdB9' // Kovan\n          address: \"0x8ceba69a8e96a4ce71aa65859dbdb180b489a719\" // Mainnet\n        }\n      }\n    },\n    b2bVesting: {\n      enabled: true,\n      visible: true,\n      icon: \"CloudUpload\",\n      label: \"B2B Vesting\",\n      availableNetworks: [1],\n      route: \"b2b-vesting-contract\",\n      subComponent: DeployB2BVesting,\n      desc: 'Deploy/Deposit/Claim for B2B Vesting Contracts<br /><small style=\"color:#ff9900\">(only for partners that joined the B2B Affiliate program)</small>',\n      props: {\n        contracts: {\n          vesterImplementation: {\n            abi: B2BVester,\n            address: \"0x3024656ae91d7bf724f613c314bc56030ba2344c\"\n          }\n        }\n      }\n    },\n    polygonBridge: {\n      enabled: true,\n      route: 'polygon-bridge',\n      availableNetworks: [1, 137],\n      subComponent: PolygonBridge,\n      image: 'images/protocols/polygon.svg',\n      label: 'Ethereum ⇔ Polygon Bridge',\n      desc: 'Transfer your tokens from Ethereum to Polygon and vice versa with Plasma and PoS Bridge.',\n      props: {\n        contracts: {\n          ERC20Predicate: {\n            abi: ERC20Predicate,\n            name: 'ERC20Predicate',\n            // address:'0xdD6596F2029e6233DEFfaCa316e6A95217d4Dc34', // Goerli\n            address: '0x40ec5B33f54e0E8A33A975908C5BA1c14e5BbbDf' // Mainnet\n          },\n          EtherPredicate: {\n            abi: EtherPredicate,\n            name: 'EtherPredicate',\n            // address:'0xdD6596F2029e6233DEFfaCa316e6A95217d4Dc34', // Goerli\n            address: '0x8484Ef722627bf18ca5Ae6BcF031c23E6e922B30' // Mainnet\n          },\n          DepositManager: {\n            abi: DepositManager,\n            name: 'DepositManager',\n            address: '0x401f6c983ea34274ec46f84d70b31c151321188b'\n          },\n          RootChainManager: {\n            name: 'RootChainManager',\n            address: '0xA0c68C638235ee32657e8f720a23ceC1bFc77C77' // Mainnet\n          },\n          StateSender: {\n            name: 'StateSender',\n            address: '0x28e4F3a7f651294B9564800b2D01f35189A5bFbE'\n          }\n        },\n        availableTokens: {\n          /*\n          DERC20:{\n            decimals:18,\n            enabled:true,\n            name:'DERC20',\n            token:'DERC20',\n            rootToken:{\n              name:'DERC20',\n              abi:DummyERC20,\n              address:'0x655F2166b0709cd575202630952D71E2bB0d61Af' // Goerli\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'DummyERC20',\n              address:'0xfe4F5145f6e09952a5ba9e956ED0C25e3Fa4c7F1' // Mumbai\n            }\n          },\n          */\n          MATIC: {\n            name: 'MATIC',\n            token: 'MATIC',\n            decimals: 18,\n            enabled: true,\n            sendValue: true,\n            bridgeType: 'plasma',\n            rootToken: {\n              abi: ERC20,\n              name: 'MATIC',\n              address: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0', // Mainnet\n            },\n            childToken: {\n              abi: ChildERC20,\n              name: 'childMATIC',\n              address: '0x0000000000000000000000000000000000001010' // Matic\n            }\n          },\n          WETH: {\n            name: 'WETH',\n            token: 'ETH',\n            decimals: 18,\n            enabled: true,\n            bridgeType: 'pos',\n            childToken: {\n              abi: ChildERC20,\n              name: 'maticWETH',\n              address: '0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619' // Matic\n            }\n          },\n          /*\n          WETH:{\n            name:'WETH',\n            token:'WETH',\n            decimals:18,\n            enabled:true,\n            sendValue:false,\n            bridgeType:'pos',\n            rootToken:{\n              abi:ERC20,\n              name:'WETH',\n              address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2', // Mainnet\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'childWETH',\n              address:'0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619' // Matic\n            }\n          },\n          */\n          DAI: {\n            name: 'DAI',\n            token: 'DAI',\n            decimals: 18,\n            enabled: true,\n            sendValue: false,\n            bridgeType: 'pos',\n            rootToken: {\n              abi: DAI,\n              name: 'DAI',\n              // address:'0x6311344B50D2077BF9804d376EA4C2cEDcB75C1f', // Goerli\n              address: '0x6b175474e89094c44da98b954eedeac495271d0f', // Mainnet\n            },\n            childToken: {\n              abi: ChildERC20,\n              name: 'childDAI',\n              // address:'0x001B3B4d0F3714Ca98ba10F6042DaEbF0B1B7b6F', // Mumbai\n              address: '0x8f3Cf7ad23Cd3CaDbD9735AFf958023239c6A063' // Matic\n            }\n          },\n          USDC: {\n            decimals: 6,\n            name: 'USDC',\n            token: 'USDC',\n            enabled: true,\n            bridgeType: 'pos',\n            rootToken: {\n              abi: USDC,\n              name: 'USDC',\n              // address:'0x98339D8C260052B7ad81c28c16C0b98420f2B46a' // Goerli\n              address: '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48', // Mainnet\n            },\n            childToken: {\n              abi: ChildERC20,\n              name: 'childUSDC',\n              // address:'0x6D4dd09982853F08d9966aC3cA4Eb5885F16f2b2' // Mubai\n              address: '0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174' // Matic\n            }\n          },\n          IDLE: {\n            decimals: 18,\n            name: 'IDLE',\n            token: 'IDLE',\n            enabled: true,\n            bridgeType: 'pos',\n            rootToken: {\n              abi: IDLE,\n              name: 'IDLE',\n              address: '0x875773784Af8135eA0ef43b5a374AaD105c5D39e', // Mainnet\n            },\n            childToken: {\n              abi: ChildERC20,\n              name: 'childUSDC',\n              address: '0xc25351811983818c9fe6d8c580531819c8ade90f' // Matic\n            }\n          },\n          /*\n          AAVE:{\n            decimals:18,\n            name:'AAVE',\n            token:'AAVE',\n            enabled:true,\n            bridgeType:'pos',\n            rootToken:{\n              abi:ERC20,\n              name:'AAVE',\n              address:'0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9', // Mainnet\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'childAAVE',\n              address:'0xD6DF932A45C0f255f85145f286eA0b292B21C90B' // Matic\n            }\n          }\n          */\n        }\n      }\n    },\n    ethWrapper: {\n      enabled: true,\n      label: 'ETH Wrapper',\n      route: 'eth-wrapper',\n      availableNetworks: [1, 42],\n      subComponent: TokenWrapper,\n      image: 'images/tokens/WETH.svg',\n      desc: 'Wrap your ETH and get WETH. Unwrap your WETH and get back ETH.',\n      props: {\n        startContract: {\n          name: 'ETH',\n          token: 'ETH',\n          decimals: 18,\n          wrapMethod: 'deposit',\n        },\n        destContract: {\n          abi: WETH,\n          name: 'WETH',\n          decimals: 18,\n          token: 'WETH',\n          unwrapMethod: 'withdraw',\n          address: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2'\n        },\n      }\n    },\n    coverProtocol: {\n      enabled: false,\n      availableNetworks: [1],\n      label: 'Cover Protocol',\n      route: 'cover-protocol',\n      subComponent: CoverProtocol,\n      image: 'images/protocols/cover-logo.svg',\n      desc: 'Get your Idle Portfolio covered against Smart Contract risk',\n      fileClaimUrl: 'https://app.coverprotocol.com/app/claims/new?protocol=IDLE',\n      props: {\n        contract: {\n          decimals: 18,\n          abi: CoverMint,\n          name: 'CoverMint',\n          address: '0x46f2f34742c1d9b9b220aabf0ff26bf59ec9f8a0'\n        },\n        coverages: [\n          {\n            collateral: \"DAI\",\n            expirationTimestamp: 1714470400,\n            tokens: {\n              Claim: {\n                abi: CovToken,\n                name: \"COVER_IDLE_2021_02_28_DAI_0_CLAIM\",\n                address: \"0xa7dac6774e5e40f56a0bf06af6cf9b1f3d037bcc\",\n                balancerPool: {\n                  decimals: 18,\n                  abi: BalancerPool,\n                  name: \"BAL_COVER_IDLE_2021_02_28_DAI_0_CLAIM\",\n                  address: \"0xeb2b9959c7943eb3c0bdb69ede25247bab4d1c6c\"\n                }\n              },\n              NoClaim: {\n                abi: CovToken,\n                name: \"COVER_IDLE_2021_02_28_DAI_0_NOCLAIM\",\n                address: \"0x53df0bfa014b7522299c129c5a7b318f02adb469\",\n                balancerPool: {\n                  decimals: 18,\n                  abi: BalancerPool,\n                  name: \"BAL_COVER_IDLE_2021_02_28_DAI_0_NOCLAIM\",\n                  address: \"0xce0e9e7a1163badb7ee79cfe96b5148e178cab73\"\n                }\n              }\n            }\n          }\n        ]\n      }\n    },\n    batchDeposit: {\n      enabled: true,\n      icon: \"Storage\",\n      claimEnabled: true,\n      depositEnabled: true,\n      availableNetworks: [1],\n      route: \"batch-deposit\",\n      label: \"Batch Deposit\",\n      subComponent: BatchDeposit,\n      desc: \"Deposit your tokens in the batch and wait until its execution to claim your Idle Tokens V4\",\n      props: {\n        availableTokens: {\n          idleDAIYield: {\n            decimals: 18,\n            strategy: \"best\",\n            baseToken: \"DAI\",\n            minPoolSize: 20000,\n            migrationContract: {\n              abi: IdleBatchedMint,\n              name: \"IdleBatchedMintDAI\",\n              address: \"0x633fb4d38B24dC890b11Db2AE2B248D13F996A79\", // Main\n              // address:'0x1B7bA0361A15CCF62521cF7d2Cbb2Ba90b1521a7', // Kovan\n              functions: [\n                {\n                  name: \"deposit\",\n                  usePermit: true,\n                  label: \"Deposit\",\n                  permitName: \"permitAndDeposit\"\n                }\n              ]\n            }\n          },\n          idleUSDCYield: {\n            decimals: 6,\n            strategy: \"best\",\n            baseToken: \"USDC\",\n            minPoolSize: 20000,\n            migrationContract: {\n              abi: IdleBatchedMint,\n              name: \"IdleBatchedMintUSDC\",\n              address: \"0x562C4fd96F0652F5Fcfa96b0a33088B5a6eAeE9B\", // Main\n              // address:'0x3F35eB839f91b614195a47A593dB46b14cd7EaF8', // Kovan\n              functions: [\n                {\n                  name: \"deposit\",\n                  label: \"Deposit\",\n                  usePermit: true,\n                  permitName: \"permitEIP2612AndDepositUnlimited\"\n                }\n              ]\n            }\n          }\n        }\n      }\n    },\n    batchMigration: {\n      enabled: true,\n      claimEnabled: true,\n      icon: \"FileDownload\",\n      depositEnabled: false,\n      availableNetworks: [1],\n      route: \"batch-migration\",\n      label: \"Batch Migration\",\n      subComponent: BatchMigration,\n      desc: \"Deposit your Idle Tokens V3 into a batch and wait until its conversion to the Idle Token V4\",\n      props: {\n        availableTokens: {\n          idleDAIYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"DAI\",\n            name: \"idleDAIYieldV3\",\n            token: \"idleDAIYieldV3\",\n            address: \"0x78751b12da02728f467a44eac40f5cbc16bd7934\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterDAI\",\n              address: \"0xe0BfD08dA4DAf8f8BA11d1c3802009E75f963497\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDCYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"USDC\",\n            name: \"idleUSDCYieldV3\",\n            token: \"idleUSDCYieldV3\",\n            address: \"0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDC\",\n              address: \"0x86c8b56d124c2a8e7ea8a9e6a7f8ed99dde5cca8\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDTYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"USDT\",\n            name: \"idleUSDTYieldV3\",\n            token: \"idleUSDTYieldV3\",\n            address: \"0x63D27B3DA94A9E871222CB0A32232674B02D2f2D\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDT\",\n              address: \"0xee5c50c7c49dec47dde2f9b0233b9e14a8f00cf2\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleSUSDYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"SUSD\",\n            name: \"idleSUSDYieldV3\",\n            token: \"idleSUSDYieldV3\",\n            address: \"0xe79e177d2a5c7085027d7c64c8f271c81430fc9b\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterSUSD\",\n              address: \"0xE2eE519399a49f1A2004a25DA61e82867A69b9b1\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleTUSDYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"TUSD\",\n            name: \"idleTUSDYieldV3\",\n            token: \"idleTUSDYieldV3\",\n            address: \"0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterTUSD\",\n              address: \"0x174a273f0ea28e55b6dd13259aa43d262b863a86\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleWBTCYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"WBTC\",\n            name: \"idleWBTCYieldV3\",\n            token: \"idleWBTCYieldV3\",\n            address: \"0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterWBTC\",\n              address: \"0xbfDC7d97559173B52EF2A2f1bC9BeCf97B0D401D\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleDAISafe: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"risk\",\n            baseToken: \"DAI\",\n            name: \"idleDAISafeV3\",\n            token: \"idleDAISafeV3\",\n            address: \"0x1846bdfDB6A0f5c473dEc610144513bd071999fB\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterDAISafe\",\n              address: \"0x08db226d63cE724A6091Ba82D28dFc76ceCa23d8\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDCSafe: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"risk\",\n            baseToken: \"USDC\",\n            name: \"idleUSDCSafeV3\",\n            token: \"idleUSDCSafeV3\",\n            address: \"0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDCSafe\",\n              address: \"0xA6C89A31D59f9C68D9Cba28d690C5E52058fb472\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDTSafe: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"risk\",\n            baseToken: \"USDT\",\n            name: \"idleUSDTSafeV3\",\n            token: \"idleUSDTSafeV3\",\n            address: \"0x42740698959761baf1b06baa51efbd88cb1d862b\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDTSafe\",\n              address: \"0xd47B96Fb33b79a4Dd81a2bfa676eBB669166f619\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          }\n        }\n      }\n    },\n    tokenMigration: {\n      enabled: true,\n      icon: \"SwapHoriz\",\n      route: \"convert\",\n      availableNetworks: [1],\n      label: \"Token Migration\",\n      desc: \"Easily convert your Compound, Fulcrum, Aave and iEarn tokens into Idle\",\n      subComponent: TokenMigration,\n      props: {\n        migrationContract: {\n          name: \"IdleConverterV4\",\n          abi: IdleConverterPersonalSignV4,\n          address: \"0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743\",\n          oldAddresses: [],\n          functions: [\n            {\n              label: \"Migrate\",\n              name: \"migrateFromToIdle\"\n            }\n          ]\n        },\n        availableStrategies: [\"best\", \"risk\"],\n        availableTokens: {\n          idleDAIv2: {\n            decimals: 18,\n            enabled: true,\n            protocol: \"idle\",\n            baseToken: \"DAI\",\n            abi: IdleTokenV2,\n            token: \"idleDAIOld\",\n            icon: \"images/tokens/idleDAI.svg\",\n            migrateFunction: \"migrateFromToIdle\",\n            address: \"0x10eC0D497824e342bCB0EDcE00959142aAa766dD\"\n          },\n          cDAI: {\n            decimals: 8,\n            enabled: true,\n            token: \"cDAI\",\n            baseToken: \"DAI\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643\"\n          },\n          iDAI: {\n            decimals: 18,\n            enabled: false,\n            token: \"iDAI\",\n            baseToken: \"DAI\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0x493c57c4763932315a328269e1adad09653b9081\"\n          },\n          aDAI: {\n            decimals: 18,\n            enabled: true,\n            token: \"aDAI\",\n            protocol: \"aave\",\n            baseToken: \"DAI\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d\"\n          },\n          yDAIv3: {\n            decimals: 18,\n            enabled: true,\n            token: \"yDAIv3\",\n            abi: yDAIv3.abi,\n            baseToken: \"DAI\",\n            protocol: \"iearn\",\n            icon: \"images/tokens/yDAI.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xC2cB1040220768554cf699b0d863A3cd4324ce32\"\n          },\n          yDAIv2: {\n            decimals: 18,\n            enabled: true,\n            token: \"yDAIv2\",\n            baseToken: \"DAI\",\n            abi: yDAIv3.abi,\n            protocol: \"iearn\",\n            icon: \"images/tokens/yDAI.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x16de59092dAE5CcF4A1E6439D611fd0653f0Bd01\"\n          },\n          idleUSDCv2: {\n            decimals: 18,\n            enabled: true,\n            protocol: \"idle\",\n            abi: IdleTokenV2,\n            baseToken: \"USDC\",\n            token: \"idleUSDCOld\",\n            icon: \"images/tokens/idleUSDC.svg\",\n            migrateFunction: \"migrateFromToIdle\",\n            address: \"0xeB66ACc3d011056B00ea521F8203580C2E5d3991\"\n          },\n          cUSDC: {\n            decimals: 8,\n            enabled: true,\n            token: \"cUSDC\",\n            baseToken: \"USDC\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0x39aa39c021dfbae8fac545936693ac917d5e7563\"\n          },\n          iUSDC: {\n            decimals: 6,\n            enabled: false,\n            token: \"iUSDC\",\n            baseToken: \"USDC\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0xf013406a0b1d544238083df0b93ad0d2cbe0f65f\"\n          },\n          aUSDC: {\n            decimals: 6,\n            enabled: true,\n            token: \"aUSDC\",\n            protocol: \"aave\",\n            baseToken: \"USDC\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x9bA00D6856a4eDF4665BcA2C2309936572473B7E\"\n          },\n          yUSDCv3: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDCv3\",\n            protocol: \"iearn\",\n            abi: yUSDCv3.abi,\n            baseToken: \"USDC\",\n            icon: \"images/tokens/yUSDC.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x26EA744E5B887E5205727f55dFBE8685e3b21951\"\n          },\n          yUSDCv2: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDCv2\",\n            protocol: \"iearn\",\n            abi: yUSDCv3.abi,\n            baseToken: \"USDC\",\n            icon: \"images/tokens/yUSDC.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xd6aD7a6750A7593E092a9B218d66C0A814a3436e\"\n          },\n          cUSDT: {\n            decimals: 8,\n            enabled: true,\n            token: \"cUSDT\",\n            baseToken: \"USDT\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9\"\n          },\n          iUSDT: {\n            decimals: 6,\n            enabled: false,\n            token: \"iUSDT\",\n            baseToken: \"USDT\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0x8326645f3aa6de6420102fdb7da9e3a91855045b\"\n          },\n          aUSDT: {\n            decimals: 6,\n            enabled: true,\n            token: \"aUSDT\",\n            protocol: \"aave\",\n            baseToken: \"USDT\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x71fc860F7D3A592A4a98740e39dB31d25db65ae8\"\n          },\n          yUSDTv3: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDTv3\",\n            abi: yUSDTv3.abi,\n            protocol: \"iearn\",\n            baseToken: \"USDT\",\n            icon: \"images/tokens/yUSDT.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xE6354ed5bC4b393a5Aad09f21c46E101e692d447\"\n          },\n          yUSDTv2: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDTv2\",\n            abi: yUSDTv3.abi,\n            protocol: \"iearn\",\n            baseToken: \"USDT\",\n            icon: \"images/tokens/yUSDT.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x83f798e925BcD4017Eb265844FDDAbb448f1707D\"\n          },\n          idleSUSDv2: {\n            decimals: 18,\n            enabled: true,\n            abi: IdleTokenV2,\n            protocol: \"idle\",\n            baseToken: \"SUSD\",\n            token: \"idleSUSDYieldOld\",\n            availableStrategies: [\"best\"],\n            migrateFunction: \"migrateFromToIdle\",\n            icon: \"images/tokens/idleSUSDYield.svg\",\n            address: \"0xb39ca0261a1b2986a6a9Fe38d344B56374963dE5\"\n          },\n          aSUSD: {\n            decimals: 6,\n            enabled: true,\n            token: \"aSUSD\",\n            protocol: \"aave\",\n            baseToken: \"SUSD\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x625aE63000f46200499120B906716420bd059240\"\n          },\n          ySUSDv3: {\n            decimals: 18,\n            enabled: true,\n            token: \"ySUSDv3\",\n            abi: ySUSDv3,\n            baseToken: \"SUSD\",\n            protocol: \"iearn\",\n            availableStrategies: [\"best\"],\n            icon: \"images/tokens/ySUSDv3.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xf61718057901f84c4eec4339ef8f0d86d2b45600\"\n          },\n          idleTUSDv2: {\n            decimals: 18,\n            enabled: true,\n            abi: IdleTokenV2,\n            protocol: \"idle\",\n            baseToken: \"TUSD\",\n            token: \"idleTUSDYieldOld\",\n            availableStrategies: [\"best\"],\n            migrateFunction: \"migrateFromToIdle\",\n            icon: \"images/tokens/idleTUSDYield.svg\",\n            address: \"0x7DB7A4a50b26602E56536189Aa94678C80F8E5b6\"\n          },\n          aTUSD: {\n            decimals: 6,\n            enabled: true,\n            token: \"aTUSD\",\n            protocol: \"aave\",\n            baseToken: \"TUSD\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x4DA9b813057D04BAef4e5800E36083717b4a0341\"\n          },\n          yTUSDv3: {\n            decimals: 18,\n            enabled: true,\n            abi: yTUSDv3,\n            token: \"yTUSDv3\",\n            baseToken: \"TUSD\",\n            protocol: \"iearn\",\n            icon: \"images/tokens/yTUSDv3.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x73a052500105205d34daf004eab301916da8190f\"\n          },\n          cWBTC: {\n            decimals: 8,\n            enabled: true,\n            token: \"cWBTC\",\n            baseToken: \"WBTC\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0xc11b1268c1a384e55c48c2391d8d480264a3a7f4\"\n          },\n          iWBTC: {\n            decimals: 8,\n            enabled: false,\n            token: \"iWBTC\",\n            baseToken: \"WBTC\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0xba9262578efef8b3aff7f60cd629d6cc8859c8b5\"\n          },\n          aWBTC: {\n            decimals: 8,\n            enabled: true,\n            token: \"aWBTC\",\n            protocol: \"aave\",\n            baseToken: \"WBTC\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0xfc4b8ed459e00e5400be803a9bb3954234fd50e3\"\n          }\n        }\n      }\n    },\n    addFunds: {\n      enabled: true,\n      route: 'add-funds',\n      label: 'Add Funds',\n      availableNetworks: [1],\n      icon: 'AddCircleOutline',\n      desc: 'Buy tokens with your Bank account, Credit card or Ethereum Wallet',\n      subComponent: BuyModal,\n      directProps: {\n        showInline: true,\n        showAllTokens: true\n      }\n    },\n    tokenSwap: {\n      enabled: true,\n      icon: \"Sync\",\n      route: \"token-swap\",\n      label: \"Token Swap\",\n      availableNetworks: [1],\n      desc: \"Easily swap your tokens using Kyber Swap widget\",\n      subComponent: TokenSwap,\n      props: {\n        availableTokens: {\n          ETH: { token: \"ETH\" },\n          DAI: { token: \"DAI\" },\n          SUSD: { token: \"SUSD\" },\n          TUSD: { token: \"TUSD\" },\n          USDC: { token: \"USDC\" },\n          USDS: { token: \"USDS\" },\n          USDT: { token: \"USDT\" },\n          WBTC: { token: \"WBTC\" },\n          WETH: { token: \"WETH\" },\n          BUSD: { token: \"BUSD\" },\n          EURS: { token: \"EURS\" },\n          \"2KEY\": { token: \"2KEY\" },\n          ABT: { token: \"ABT\" },\n          ABYSS: { token: \"ABYSS\" },\n          AMPL: { token: \"AMPL\" },\n          ANT: { token: \"ANT\" },\n          BAM: { token: \"BAM\" },\n          BAND: { token: \"BAND\" },\n          BAT: { token: \"BAT\" },\n          BLZ: { token: \"BLZ\" },\n          BNT: { token: \"BNT\" },\n          BQX: { token: \"BQX\" },\n          BTU: { token: \"BTU\" },\n          CDT: { token: \"CDT\" },\n          CVC: { token: \"CVC\" },\n          DAT: { token: \"DAT\" },\n          DGX: { token: \"DGX\" },\n          EKG: { token: \"EKG\" },\n          ELF: { token: \"ELF\" },\n          ENJ: { token: \"ENJ\" },\n          EQUAD: { token: \"EQUAD\" },\n          FXC: { token: \"FXC\" },\n          GDC: { token: \"GDC\" },\n          GEN: { token: \"GEN\" },\n          GHT: { token: \"GHT\" },\n          GNO: { token: \"GNO\" },\n          IOST: { token: \"IOST\" },\n          KEY: { token: \"KEY\" },\n          KNC: { token: \"KNC\" },\n          LEND: { token: \"LEND\" },\n          LINK: { token: \"LINK\" },\n          LOOM: { token: \"LOOM\" },\n          LRC: { token: \"LRC\" },\n          MANA: { token: \"MANA\" },\n          MCO: { token: \"MCO\" },\n          MET: { token: \"MET\" },\n          MFG: { token: \"MFG\" },\n          MKR: { token: \"MKR\" },\n          MLN: { token: \"MLN\" },\n          MTL: { token: \"MTL\" },\n          MYB: { token: \"MYB\" },\n          NEXXO: { token: \"NEXXO\" },\n          NPXS: { token: \"NPXS\" },\n          OGN: { token: \"OGN\" },\n          OMG: { token: \"OMG\" },\n          OST: { token: \"OST\" },\n          PAX: { token: \"PAX\" },\n          PBTC: { token: \"PBTC\" },\n          PLR: { token: \"PLR\" },\n          PNK: { token: \"PNK\" },\n          POLY: { token: \"POLY\" },\n          POWR: { token: \"POWR\" },\n          PT: { token: \"PT\" },\n          QKC: { token: \"QKC\" },\n          QNT: { token: \"QNT\" },\n          RAE: { token: \"RAE\" },\n          REN: { token: \"REN\" },\n          REP: { token: \"REP\" },\n          REQ: { token: \"REQ\" },\n          RLC: { token: \"RLC\" },\n          RSR: { token: \"RSR\" },\n          RSV: { token: \"RSV\" },\n          SAN: { token: \"SAN\" },\n          SNT: { token: \"SNT\" },\n          SNX: { token: \"SNX\" },\n          SPIKE: { token: \"SPIKE\" },\n          SPN: { token: \"SPN\" },\n          TKN: { token: \"TKN\" },\n          TKX: { token: \"TKX\" },\n          TRYB: { token: \"TRYB\" },\n          UBT: { token: \"UBT\" },\n          UPP: { token: \"UPP\" },\n          ZRX: { token: \"ZRX\" }\n        }\n      },\n      directProps: {}\n    }\n  },\n  insurance: {\n    nexusMutual: {\n      label: \"Nexus Mutual\",\n      image: \"images/protocols/nexus-mutual.png\",\n      imageDark: \"images/protocols/nexus-mutual-white.png\"\n    },\n    coverProtocol: {\n      label: \"Cover Protocol\",\n      image: \"images/protocols/cover-logo.svg\",\n      imageDark: \"images/protocols/cover-logo.svg\"\n    }\n  },\n  payments: {\n    // Payment methods & providers\n    methods: {\n      bank: {\n        defaultProvider: null,\n        showDefaultOnly: false,\n        props: {\n          imageSrc: \"images/bank.png\",\n          caption: \"Bank Account\"\n        }\n      },\n      card: {\n        defaultProvider: null,\n        showDefaultOnly: false,\n        props: {\n          imageSrc: \"images/debit-card.png\",\n          caption: \"Credit Card\"\n        }\n      },\n      wallet: {\n        defaultProvider: \"zeroExInstant\",\n        showDefaultOnly: false,\n        props: {\n          imageSrc: \"images/ethereum-wallet.svg\",\n          caption: \"Ethereum Wallet\",\n          imageProps: {\n            padding: [\"0\", \"5px\"]\n          }\n        }\n      }\n    },\n    providers: {\n      wyre: {\n        enabled: true,\n        imageSrc: \"images/payments/wyre.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0.75% fee ~\",\n        supportedMethods: [\"card\"],\n        supportedCountries: [\"USA\", \"GBR\", \"AUS\", \"BRA\", \"CHN\", \"MEX\", \"EUR\"],\n        supportedTokens: [\"USDC\", \"DAI\", \"ETH\"],\n        remoteResources: {},\n        env: \"prod\",\n        envParams: {\n          test: {\n            accountId: \"AC_Q2Y4AARC3TP\"\n          },\n          prod: {\n            accountId: \"AC_PQQBX33XVEQ\"\n          }\n        },\n        getInfo: props => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod) {\n            switch (props.selectedMethod) {\n              case \"bank\":\n                info.subcaption = `~ 0.75% fee ~\\nKYC REQUIRED`;\n                break;\n              case \"card\":\n                info.subcaption = `~ 3.2% fee ~\\n$250.00/day`;\n                break;\n              default:\n                break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          const env = globalConfigs.payments.providers.wyre.env;\n          const envParams = globalConfigs.payments.providers.wyre.envParams[env];\n          const referrerAccountId = envParams.accountId;\n          const url = \"https://pay.sendwyre.com/purchase\";\n\n          const params = {\n            dest: `ethereum:${props.account}`,\n            destCurrency: buyParams.selectedToken ? buyParams.selectedToken : props.tokenConfig.wyre && props.tokenConfig.wyre.destCurrency ? props.tokenConfig.wyre.destCurrency : props.selectedToken,\n            referrerAccountId,\n            redirectUrl: globalConfigs.baseURL\n            // failureRedirectUrl:globalConfigs.baseURL\n          };\n\n          return (\n            `${url}?` +\n            Object.keys(params)\n              .map(\n                k => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k])\n              )\n              .join(\"&\")\n          );\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          const wyreWidget = document.getElementById(\"wyre-widget\");\n          if (!wyreWidget) {\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"wyre-widget\" class=\"wyre-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"wyre-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                <a class=\"wyre-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('wyre-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                <div id=\"wyre-widget-container\" style=\"position:relative;z-index:2;width:400px;height:650px\">\n                  <iframe\n                    style=\"position:relative;z-index:2;\"\n                    frameborder=\"0\"\n                    height=\"100%\"\n                    src=\"${initParams}\"\n                    width=\"100%\"\n                  >\n                    <p>Your browser does not support iframes.</p>\n                  </iframe>\n                  <div id=\"wyre-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                    <div style=\"display:flex;flex-direction:row;align-items:center\">\n                      <img src=\"${globalConfigs.payments.providers.wyre.imageSrc}\" style=\"height:50px;\" />\n                      <h3 style=\"font-weight:600;font-style:italic;color:#000;padding-left:10px\">is loading...</h3>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add wyre Widget style (mobile)\n            if (!document.getElementById(\"wyreWidget_style\")) {\n              const wyreStyle = document.createElement(\"style\");\n              wyreStyle.id = \"wyreWidget_style\";\n              wyreStyle.innerHTML = `\n              @media (max-width: 40em){\n                #wyre-widget {\n                  align-items: flex-start !important;\n                }\n                #wyre-widget-overlay{\n                  background:#fff !important;\n                }\n                #wyre-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(wyreStyle);\n            }\n          }\n        }\n      },\n      ramp: {\n        enabled: true,\n        imageSrc: \"images/payments/ramp.png\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: `~ 2.5% fee ~\\nEUR / GBP`,\n        supportedMethods: [\"bank\", \"card\"],\n        badge: {\n          text: \"NO ID REQUIRED\",\n          color: \"#fff\",\n          bgColor: \"#0cade4\"\n        },\n        supportedTokens: [\"ETH\", \"DAI\", \"USDC\"],\n        supportedCountries: [\n          \"USA\",\n          \"GBR\",\n          \"AUS\",\n          \"BRA\",\n          \"CAN\",\n          \"EUR\",\n          \"HKG\",\n          \"IND\",\n          \"MEX\",\n          \"RUS\",\n          \"ZAF\",\n          \"KOR\"\n        ],\n        getInfo: props => {\n          const info = {};\n          switch (props.selectedMethod) {\n            case \"bank\":\n              info.supportedCountries = [\"GBR\", \"EUR\"];\n              info.subcaption = `~ 1.49-1.99% fee ~`;\n              break;\n            case \"card\":\n              info.supportedCountries = [\n                \"USA\",\n                \"GBR\",\n                \"AUS\",\n                \"BRA\",\n                \"CAN\",\n                \"EUR\",\n                \"HKG\",\n                \"IND\",\n                \"MEX\",\n                \"RUS\",\n                \"ZAF\",\n                \"KOR\"\n              ];\n              info.subcaption = `~ 2.90% fee ~`;\n              break;\n            default:\n              break;\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          return {\n            hostAppName: \"Idle\",\n            userAddress: props.account,\n            hostApiKey: env.REACT_APP_RAMP_KEY,\n            variant: props.isMobile ? \"mobile\" : \"desktop\",\n            hostLogoUrl: `${globalConfigs.baseURL}/images/idle-round.png`,\n            swapAsset: buyParams.selectedToken\n              ? buyParams.selectedToken\n              : props.tokenConfig.ramp && props.tokenConfig.ramp.swapAsset\n                ? props.tokenConfig.ramp.swapAsset\n                : props.selectedToken\n          };\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          new RampInstantSDK(initParams)\n            .on(\"*\", async event => {\n              const functionsUtil = new FunctionsUtil(props);\n              let tokenDecimals = null;\n              let tokenAmount = null;\n\n              switch (event.type) {\n                case \"PURCHASE_SUCCESSFUL\":\n                  // Update balance\n                  props.getAccountBalance();\n\n                  tokenDecimals = await props.getTokenDecimals();\n\n                  tokenAmount = event.payload.purchase.tokenAmount;\n                  tokenAmount = functionsUtil\n                    .BNify(tokenAmount.toString())\n                    .div(\n                      functionsUtil.BNify(\n                        Math.pow(10, parseInt(tokenDecimals)).toString()\n                      )\n                    )\n                    .toString();\n\n                  // Toast message\n                  window.toastProvider.addMessage(`Payment completed`, {\n                    secondaryMessage: `${tokenAmount} ${props.selectedToken} are now in your wallet`,\n                    colorTheme: \"light\",\n                    actionHref: \"\",\n                    actionText: \"\",\n                    variant: \"success\"\n                  });\n\n                  break;\n                default:\n                  break;\n              }\n            })\n            .show();\n        }\n      },\n      transak: {\n        enabled: true,\n        imageSrc: \"images/payments/transak.png\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: `~ 1.5% fee ~\\nALL CURRENCIES`,\n        supportedMethods: [\"bank\", \"card\"],\n        supportedCountries: [\n          \"USA\",\n          \"GBR\",\n          \"AUS\",\n          \"BRA\",\n          \"CHN\",\n          \"MEX\",\n          \"EUR\",\n          \"IND\"\n        ],\n        supportedTokens: [\"ETH\", \"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\"],\n        remoteResources: { \"https://global.transak.com/v1/widget.js\": {} },\n        env: \"prod\",\n        badge: {\n          text: \"INSTANT\",\n          bgColor: \"#0069ee\"\n        },\n        envParams: {\n          test: {\n            apiKey: env.REACT_APP_TRANSAK_KEY_TEST,\n            url: \"https://global.transak.com\"\n          },\n          prod: {\n            apiKey: env.REACT_APP_TRANSAK_KEY_PROD,\n            url: \"https://global.transak.com\"\n          }\n        },\n        getInfo: props => {\n          const info = {};\n\n          const selectedMethod = props.selectedMethod && props.selectedMethod;\n          let fee = selectedMethod === \"bank\" ? \"1.5%\" : \"4.5%\";\n\n          if (props.selectedCountry && props.selectedCountry.value) {\n            switch (props.selectedCountry.value.toUpperCase()) {\n              case \"GBR\":\n                info.badge = {\n                  text: \"INSTANT\",\n                  bgColor: \"#0069ee\"\n                };\n                info.subcaption = `~ ${fee} fee ~\\nGBP ONLY`;\n                break;\n              case \"IND\":\n                fee = \"1.0%\";\n                info.badge = {\n                  text: \"INSTANT\",\n                  bgColor: \"#0069ee\"\n                };\n                info.subcaption = `~ ${fee} fee ~\\nINR ONLY`;\n                break;\n              case \"EUR\":\n                if (selectedMethod === \"bank\") {\n                  info.badge = {\n                    text: \"SEPA\",\n                    color: \"#f7cb05 \",\n                    bgColor: \"#10288a\"\n                  };\n                } else {\n                  info.badge = {\n                    text: \"INSTANT\",\n                    bgColor: \"#0069ee\"\n                  };\n                }\n                info.subcaption = `~ ${fee} fee ~\\nEUR ONLY`;\n                break;\n              default:\n                break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          const env = globalConfigs.payments.providers.transak.env;\n          const envParams =\n            globalConfigs.payments.providers.transak.envParams[env];\n\n          let fiatCurrency = null;\n\n          if (buyParams.selectedCountry && buyParams.selectedCountry.value) {\n            switch (buyParams.selectedCountry.value.toUpperCase()) {\n              case \"IND\":\n                fiatCurrency = \"INR\";\n                break;\n              case \"GBR\":\n                fiatCurrency = \"GBP\";\n                break;\n              case \"EUR\":\n                fiatCurrency = \"EUR\";\n                break;\n              case \"USA\":\n                fiatCurrency = \"USD\";\n                break;\n              default:\n                fiatCurrency = \"GBP\";\n                break;\n            }\n          }\n\n          let cryptoCurrencyCode = buyParams.selectedToken\n            ? buyParams.selectedToken.toLowerCase()\n            : props.tokenConfig.transak &&\n              props.tokenConfig.transak.currencyCode\n              ? props.tokenConfig.transak.currencyCode\n              : props.selectedToken;\n          cryptoCurrencyCode = cryptoCurrencyCode.toUpperCase();\n\n          const apiKey = envParams.apiKey;\n          const walletAddress = props.account;\n          const partnerCustomerId = props.account;\n          const disableWalletAddressForm = false;\n\n          return {\n            apiKey,\n            cryptoCurrencyCode,\n            walletAddress,\n            fiatCurrency,\n            partnerCustomerId,\n            disableWalletAddressForm,\n            width: \"100%\",\n            height: \"100%\"\n            // email,\n          };\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          if (window.transakGlobal) {\n            const transakWidget = document.getElementById(\"transak-widget\");\n            if (!transakWidget) {\n              const iframeBox = document.createElement(\"div\");\n              iframeBox.innerHTML = `\n                <div id=\"transak-widget\" class=\"transak-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                  <div id=\"transak-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\" onclick=\"document.getElementById('transak-widget').remove();\"></div>\n                  <a class=\"transak-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('transak-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                  <div class=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\">\n                    <div id=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\"></div>\n                    <div id=\"transak-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:center\">\n                        <img src=\"${globalConfigs.payments.providers.transak.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"font-weight:600;font-style:italic;color:#0040ca\">is loading...</h3>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              `;\n              document.body.appendChild(iframeBox);\n\n              // Add transak Widget style (mobile)\n              if (!document.getElementById(\"transakWidget_style\")) {\n                const transakStyle = document.createElement(\"style\");\n                transakStyle.id = \"transakWidget_style\";\n                transakStyle.innerHTML = `\n                @media (max-width: 40em){\n                  #transak-widget {\n                    align-items: flex-start !important;\n                  }\n                  #transak-widget-overlay{\n                    background:#fff !important;\n                  }\n                  #transak-widget-container{\n                    width:100vw;\n                    min-height: calc( 100vh - 60px ) !important;\n                  }\n                }`;\n                document.body.appendChild(transakStyle);\n              }\n            }\n\n            window.transakGlobal.render(initParams, \"transak-widget-container\");\n          }\n        }\n      },\n      moonpay: {\n        enabled: true,\n        imageSrc: \"images/payments/moonpay.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 4.5% fee ~\",\n        supportedMethods: [\"card\", \"bank\"],\n        supportedCountries: [\n          \"GBR\",\n          \"EUR\",\n          \"AUS\",\n          \"BRA\",\n          \"CHN\",\n          \"MEX\",\n          \"CAN\",\n          \"HKG\",\n          \"RUS\",\n          \"ZAF\",\n          \"KOR\"\n        ],\n        supportedTokens: [\"USDC\", \"DAI\", \"ETH\"],\n        env: \"prod\",\n        envParams: {\n          test: {\n            url: \"https://buy-staging.moonpay.io\",\n            apiKey: env.REACT_APP_MOONPAY_KEY_TEST\n          },\n          prod: {\n            url: \"https://buy.moonpay.io\",\n            apiKey: env.REACT_APP_MOONPAY_KEY_PROD\n          }\n        },\n        getInfo: props => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod) {\n            switch (props.selectedMethod) {\n              case \"bank\":\n                if (props.selectedCountry && props.selectedCountry.value) {\n                  switch (props.selectedCountry.value.toUpperCase()) {\n                    case \"EUR\":\n                      info.badge = {\n                        text: \"SEPA\",\n                        color: \"#f7cb05 \",\n                        bgColor: \"#10288a\"\n                      };\n                      info.subcaption = `~ 1.5% fee ~\\nEUR ONLY`;\n                      break;\n                    case \"GBR\":\n                      info.badge = {\n                        text: \"GBP\"\n                      };\n                      info.subcaption = `~ 1.5% fee ~\\nGBP ONLY`;\n                      break;\n                    default:\n                      info.badge = null;\n                      info.subcaption = `~ 1.5% fee ~\\nEUR/GBP ONLY`;\n                      break;\n                  }\n                }\n                break;\n              case \"card\":\n                info.badge = null;\n                info.subcaption = `~ 5% fee ~`;\n                break;\n              default:\n                break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          const env = globalConfigs.payments.providers.moonpay.env;\n          const envParams =\n            globalConfigs.payments.providers.moonpay.envParams[env];\n          const apiKey = envParams.apiKey;\n          const params = {\n            apiKey,\n            currencyCode: buyParams.selectedToken\n              ? buyParams.selectedToken.toLowerCase()\n              : props.tokenConfig.moonpay &&\n                props.tokenConfig.moonpay.currencyCode\n                ? props.tokenConfig.moonpay.currencyCode\n                : props.selectedToken.toLowerCase(),\n            walletAddress: props.account,\n            baseCurrencyCode: \"USD\",\n            showWalletAddressForm: true\n          };\n\n          const methods = {\n            bank: {\n              GBR: \"gbp_bank_transfer\",\n              EUR: \"sepa_bank_transfer\"\n            },\n            card: \"credit_debit_card\"\n          };\n\n          const selectedCountry =\n            buyParams.selectedCountry && buyParams.selectedCountry.value\n              ? buyParams.selectedCountry.value.toUpperCase()\n              : null;\n\n          // Set payment method\n          if (buyParams.selectedMethod) {\n            switch (buyParams.selectedMethod) {\n              case \"bank\":\n                params.enabledPaymentMethods =\n                  methods[buyParams.selectedMethod][\"EUR\"];\n                switch (selectedCountry) {\n                  case \"GBR\":\n                  case \"EUR\":\n                    params.enabledPaymentMethods =\n                      methods[buyParams.selectedMethod][selectedCountry];\n                    break;\n                  default:\n                    params.enabledPaymentMethods = Object.values(\n                      methods[buyParams.selectedMethod]\n                    ).join(\",\");\n                    break;\n                }\n                break;\n              case \"card\":\n              default:\n                params.enabledPaymentMethods =\n                  methods[buyParams.selectedMethod];\n                break;\n            }\n          }\n\n          // Set baseCurrencyCode\n          switch (selectedCountry) {\n            case \"GBR\":\n              params.baseCurrencyCode = \"GBP\";\n              break;\n            case \"EUR\":\n              params.baseCurrencyCode = \"EUR\";\n              break;\n            default:\n              params.baseCurrencyCode = \"USD\";\n              break;\n          }\n\n          let url = envParams.url;\n\n          // Safari Fix\n          var isSafari = navigator.userAgent.indexOf(\"Safari\") > -1;\n          if (isSafari) {\n            if (\n              !document.cookie.match(\n                /^(.*;)?\\s*moonpay-fixed\\s*=\\s*[^;]+(.*)?$/\n              )\n            ) {\n              document.cookie =\n                \"moonpay-fixed=fixed; expires=Tue, 19 Jan 2038 03:14:07 UTC; path=/\";\n              url += \"/safari_fix\";\n            }\n          }\n\n          return (\n            `${url}?` +\n            Object.keys(params)\n              .map(\n                k => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k])\n              )\n              .join(\"&\")\n          );\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          const moonpayWidget = document.getElementById(\"moonpay-widget\");\n          if (!moonpayWidget) {\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"moonpay-widget\" class=\"moonpay-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"moonpay-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                  <div id=\"moonpay-widget-container\" style=\"position:relative;z-index:2;width:500px;height:490px\">\n                    <iframe\n                      style=\"position:relative;z-index:2;\"\n                      frameborder=\"0\"\n                      height=\"100%\"\n                      src=\"${initParams}\"\n                      width=\"100%\"\n                    >\n                      <p>Your browser does not support iframes.</p>\n                    </iframe>\n                    <div id=\"moonpay-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:end\">\n                        <img src=\"${globalConfigs.payments.providers.moonpay.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"padding-left:5px;font-weight:600;font-style:italic;\">is loading...</h3>\n                      </div>\n                    </div>\n                    <div id=\"moonpay-widget-footer\" style=\"position:relative;display:flex;justify-content:center;align-items:center;padding:8px 16px;width:100%;background:#fff;top:-20px;z-index:3\">\n                      <button style=\"background:#000;color:#fff;text-align:center;border-radius:5px;width:100%;height:51px;line-height:51px;font-weight:500;border:0;cursor:pointer\" onclick=\"document.getElementById('moonpay-widget').remove();\">Close</button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add Moonpay Widget style (mobile)\n            if (!document.getElementById(\"moonpayWidget_style\")) {\n              const moonpayStyle = document.createElement(\"style\");\n              moonpayStyle.id = \"moonpayWidget_style\";\n              moonpayStyle.innerHTML = `\n              @media (max-width: 40em){\n                #moonpay-widget {\n                  align-items: flex-start !important;\n                }\n                #moonpay-widget-overlay{\n                  background:#fff !important;\n                }\n                #moonpay-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(moonpayStyle);\n            }\n          }\n        }\n      },\n      zeroExInstant: {\n        enabled: true,\n        imageSrc: \"images/payments/zeroexinstant.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0.25% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\"USDC\", \"DAI\"],\n        remoteResources: { \"https://instant.0x.org/v3/instant.js\": {} },\n        getInitParams: (\n          props,\n          globalConfigs,\n          buyParams,\n          onSuccess,\n          onClose\n        ) => {\n          const tokenParams = globalConfigs.tokens[buyParams.selectedToken];\n          const connectorName = window.RimbleWeb3_context\n            ? window.RimbleWeb3_context.connectorName\n            : null;\n\n          if (!tokenParams.zeroExInstant) {\n            return null;\n          }\n\n          return {\n            networkId: globalConfigs.network.requiredNetwork,\n            chainId: globalConfigs.network.requiredNetwork,\n            provider:\n              connectorName &&\n                connectorName !== \"Injected\" &&\n                window.RimbleWeb3_context.connector[connectorName.toLowerCase()]\n                ? window.RimbleWeb3_context.connector[\n                  window.RimbleWeb3_context.connectorName.toLowerCase()\n                ].provider\n                : window.ethereum,\n            orderSource: tokenParams.zeroExInstant.orderSource,\n            affiliateInfo: tokenParams.zeroExInstant.affiliateInfo,\n            defaultSelectedAssetData: tokenParams.zeroExInstant.assetData,\n            availableAssetDatas: [tokenParams.zeroExInstant.assetData],\n            shouldDisableAnalyticsTracking: true,\n            onSuccess: onSuccess ? onSuccess : () => { },\n            onClose: onClose ? onClose : () => { }\n          };\n        },\n        render: (initParams, amount) => {\n          if (window.zeroExInstant && initParams) {\n            if (amount) {\n              initParams.defaultAssetBuyAmount = parseFloat(amount);\n            }\n            window.zeroExInstant.render(initParams, \"body\");\n          }\n        }\n      },\n      kyberSwap: {\n        enabled: true,\n        imageSrc: \"images/payments/kyber.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Swap with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0.25% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\n          \"WETH\",\n          \"USDC\",\n          \"DAI\",\n          \"USDT\",\n          \"TUSD\",\n          \"SUSD\",\n          \"WBTC\",\n          \"RAI\",\n          \"FEI\"\n        ],\n        web3Subscription: {\n          // Data for web3 subscription\n          enabled: true,\n          contractAddress: \"0x818e6fecd516ecc3849daf6845e3ec868087b755\",\n          decodeLogsData: [\n            {\n              internalType: \"address\",\n              name: \"_startAddress\",\n              type: \"address\"\n            },\n            {\n              internalType: \"address\",\n              name: \"_tokenAddress\",\n              type: \"address\"\n            },\n            {\n              internalType: \"uint256\",\n              name: \"_startAmount\",\n              type: \"uint256\"\n            },\n            {\n              internalType: \"uint256\",\n              name: \"_tokenAmount\",\n              type: \"uint256\"\n            }\n          ]\n        },\n        remoteResources: {\n          \"https://widget.kyber.network/v0.7.5/widget.css\": {},\n          \"https://widget.kyber.network/v0.7.5/widget.js\": {\n            parentElement: document.body,\n            precall: (props, globalConfigs, providerInfo) => {\n              // Remove previous elements\n              const buttons = document.querySelectorAll(\".kyber-widget-button\");\n              for (let i = 0; i < buttons.length; i++) {\n                buttons[i].remove();\n              }\n\n              // const kyberWidgetScript = document.getElementById('kyber-widget-script');\n              // if (kyberWidgetScript){\n              //   kyberWidgetScript.remove();\n              // }\n\n              const scripts = document.querySelectorAll(\".script_kyberSwap\");\n              for (let i = 0; i < scripts.length; i++) {\n                scripts[i].remove();\n              }\n\n              const buttonId = props.buttonId\n                ? props.buttonId\n                : `kyber-swapper-${props.selectedToken}`;\n              if (!document.getElementById(buttonId)) {\n                const a = document.createElement(\"a\");\n                a.id = buttonId;\n                a.href = providerInfo.getInitParams(props, globalConfigs);\n                a.target = \"_blank\";\n                a.rel = \"nofollow noopener noreferrer\";\n                a.className = \"kyber-widget-button theme-ocean theme-supported\";\n                a.title = \"Swap with Kyber\";\n                a.style = \"display:none;\";\n                document.body.appendChild(a);\n              }\n            }\n          }\n        },\n        getInitParams: (props, globalConfigs, buyParams = null) => {\n          const baseToken = props.baseToken ? props.baseToken : \"ETH\";\n          const params = {\n            lang: \"en\",\n            type: \"swap\",\n            mode: \"iframe\",\n            theme: \"theme-ocean\",\n            paramForwarding: true,\n            // callback:globalConfigs.baseURL,\n            pinnedTokens: `${baseToken}_${props.selectedToken}`,\n            title: `Swap ${baseToken} for ${props.selectedToken}`,\n            defaultPair: `${baseToken}_${props.selectedToken}`,\n            commissionId: \"0x4215606a720477178AdFCd5A59775C63138711e8\",\n            network:\n              globalConfigs.network.requiredNetwork === 1 ? \"mainnet\" : \"test\"\n          };\n\n          const url = \"https://widget.kyber.network/v0.7.5/\";\n\n          return (\n            `${url}?` +\n            Object.keys(params)\n              .map(\n                k => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k])\n              )\n              .join(\"&\")\n          );\n        },\n        render: (initParams, amount, props) => {\n          const buttonId = props.buttonId\n            ? props.buttonId\n            : `kyber-swapper-${props.selectedToken}`;\n          const a = document.getElementById(buttonId);\n          if (a) {\n            a.click();\n\n            // Observe for pending transaction\n            /*\n            if (window.MutationObserver){\n              setTimeout(() => {\n\n                const observer = new window.MutationObserver(function(mutations) {\n                  mutations.forEach((m,i) => {\n                    if (m.addedNodes.length && m.target.className === 'kyber_widget-broadcast'){\n\n                      // Show persistent toast message\n                      window.showToastMessage({\n                        variant:'processing',\n                        message:'Pending deposit',\n                        secondaryMessage:'kyberSwap is processing your request'\n                      });\n\n                      observer.disconnect();\n                    } else if (m.target.id === 'kyber-widget' && m.removedNodes.length && m.removedNodes[0].firstChild.className.includes('kyber_widget-widget-container')) {\n                      observer.disconnect();\n                    }\n                  });\n                });\n                const target = document.querySelector('#kyber-widget');\n                observer.observe(target, { childList: true, subtree: true });\n              },1000);\n            }\n            */\n          }\n        }\n      },\n      airSwap: {\n        enabled: false,\n        imageSrc: \"images/payments/airswap.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\"USDC\", \"DAI\"],\n        env: \"production\",\n        remoteResources: {\n          \"https://cdn.airswap.io/airswap-instant-widget.js\": {}\n        },\n        getInitParams: (\n          props,\n          globalConfigs,\n          buyParams,\n          onComplete,\n          onClose\n        ) => {\n          return {\n            env: \"production\",\n            mode: \"buy\",\n            token: props.tokenConfig.address,\n            baseToken: \"ETH\",\n            onComplete: onComplete ? onComplete : () => { },\n            onClose: onClose ? onClose : () => { }\n          };\n        },\n        render: (initParams, amount, props) => {\n          if (window.AirSwapInstant) {\n            if (amount) {\n              initParams.amount = amount.toString();\n            }\n            window.AirSwapInstant.render(initParams, \"body\");\n          }\n        }\n      },\n      totle: {\n        enabled: false,\n        imageSrc: \"images/payments/totle.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\"USDC\", \"DAI\"],\n        env: \"production\",\n        remoteResources: { \"https://widget.totle.com/latest/dist.js\": {} },\n        getInitParams: (\n          props,\n          globalConfigs,\n          buyParams,\n          onComplete,\n          onClose\n        ) => {\n          return {\n            sourceAssetAddress: null,\n            sourceAmountDecimal: null,\n            destinationAssetAddress: null,\n            destinationAmountDecimal: null,\n            apiKey: null,\n            partnerContractAddress: null\n          };\n        },\n        render: (initParams, amount, props) => {\n          if (window.TotleWidget) {\n            const nodeId = \"totle-widget\";\n            if (!document.getElementById(nodeId)) {\n              const totleWidgetContainer = document.createElement(\"div\");\n              totleWidgetContainer.id = nodeId;\n              document.body.appendChild(totleWidgetContainer);\n            }\n\n            window.TotleWidget.default.run(\n              initParams,\n              document.getElementById(nodeId)\n            );\n          }\n        }\n      }\n    }\n  }\n};\n\nexport default globalConfigs;\n","const address = '0xf5dce57282a584d2746faf1593d3121fcac444dc'; // mainnet\nconst abi = [\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"name\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x06fdde03\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"approve\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x095ea7b3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"reserveFactorMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x173b9904\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x17bfdfbc\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalSupply\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x18160ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"exchangeRateStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x182df0f5\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"src\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transferFrom\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x23b872dd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"pendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x26782247\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"decimals\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x313ce567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOfUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3af9e669\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"getCash\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3b1d21a2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setComptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x4576b5db\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalBorrows\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x47bd3718\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"comptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x5fe3b567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_reduceReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x601a0bf1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"initialExchangeRateMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x675d972c\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"accrualBlockNumber\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6c540baf\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"underlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6f307dc3\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x70a08231\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"totalBorrowsCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x73acee98\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x8f840ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"symbol\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95d89b41\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95dd9193\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"accrueInterest\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa6afed95\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transfer\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa9059cbb\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowIndex\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xaa5af0fd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"supplyRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xae9d70b0\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"seize\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb2a02ff1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setPendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb71d1a0c\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"exchangeRateCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xbd6d894d\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"getAccountSnapshot\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc37f68e2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"allowance\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdd62ed3e\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"_acceptAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xe9c714f2\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setInterestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf2b3abbd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"interestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf3fdb15a\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"admin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf851a440\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf8f9da28\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_setReserveFactor\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfca7820b\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"isCToken\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfe9c44ae\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"name\": \"underlying_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"comptroller_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"interestRateModel_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"initialExchangeRateMantissa_\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"name_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"symbol_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"decimals_\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"constructor\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"interestAccumulated\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowIndex\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"AccrueInterest\",\n    \"signature\": \"0x875352fb3fadeb8c0be7cbbe8ff761b308fa7033470cd0287f02f3436fd76cb9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"minter\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Mint\",\n    \"signature\": \"0x4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"redeemer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Redeem\",\n    \"signature\": \"0xe5b754fb1abb7f01b499791d0b820ae3b6af3424ac1c59768edb53f4ec31a929\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Borrow\",\n    \"signature\": \"0x13ed6866d4e1ee6da46f845c46d7e54120883d75c5ea9a2dacc1c4ca8984ab80\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"payer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"RepayBorrow\",\n    \"signature\": \"0x1a2a22cb034d26d1854bdc6666a5b91fe25efbbb5dcad3b0355478d6f5c362a1\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"LiquidateBorrow\",\n    \"signature\": \"0x298637f684da70674f26509b10f07ec2fbc77a335ab1e7d6215a4b2484d8bb52\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldPendingAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewPendingAdmin\",\n    \"signature\": \"0xca4f2f25d0898edd99413412fb94012f9e54ec8142f9b093e7720646a95b16a9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewAdmin\",\n    \"signature\": \"0xf9ffabca9c8276e99321725bcb43fb076a6c66a54b7f21c4e8146d8519b417dc\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldComptroller\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewComptroller\",\n    \"signature\": \"0x7ac369dbd14fa5ea3f473ed67cc9d598964a77501540ba6751eb0b3decf5870d\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldInterestRateModel\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewMarketInterestRateModel\",\n    \"signature\": \"0xedffc32e068c7c95dfd4bdfd5c4d939a084d6b11c4199eac8436ed234d72f926\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"NewReserveFactor\",\n    \"signature\": \"0xaaa68312e2ea9d50e16af5068410ab56e1a1fd06037b1a35664812c30f821460\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"admin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newTotalReserves\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"ReservesReduced\",\n    \"signature\": \"0x3bad0c59cf2f06e7314077049f48a93578cd16f5ef92329f1dab1420a99c177e\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"error\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"info\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"detail\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Failure\",\n    \"signature\": \"0x45b96fe442630264581b197e84bbada861235052c5a1aadfff9ea4e40a969aa0\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Transfer\",\n    \"signature\": \"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Approval\",\n    \"signature\": \"0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\",\n    \"type\": \"event\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"mint\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa0712d68\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeem\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdb006a75\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeemUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x852a12e3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"borrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc5ebeaec\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x0e752702\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrowBehalf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x2608f818\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"liquidateBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf5e3c462\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }\n];\nexport default { address, abi };\n","const address = '0x5592EC0cfb4dbc12D3aB100b257153436a1f0FEa'; // rinkeby\nconst abi = [{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"stop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"name_\",\"type\":\"bytes32\"}],\"name\":\"setName\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stopped\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"authority_\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"push\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"move\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"start\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"pull\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"symbol_\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"LogSetAuthority\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"LogSetOwner\",\"type\":\"event\"},{\"anonymous\":true,\"inputs\":[{\"indexed\":true,\"name\":\"sig\",\"type\":\"bytes4\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"foo\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"bar\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"fax\",\"type\":\"bytes\"}],\"name\":\"LogNote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}];\nexport default { address, abi };\n","import DAI from '../abis/tokens/DAI.json';\nimport CHAI from '../abis/chai/CHAI.json';\nimport cToken from '../abis/compound/cDAI';\nimport WETH from '../abis/tokens/WETH.json';\nimport USDC from '../abis/tokens/USDC.json';\nimport ERC20 from '../abis/tokens/ERC20.js';\nimport fToken from '../abis/fuse/fToken.json';\nimport aToken from '../abis/aave/AToken.json';\nimport yToken from '../abis/dydx/yToken.json';\nimport iToken from '../abis/fulcrum/iToken.json';\nimport crToken from '../abis/cream/crToken.json';\nimport IdleTokenV3 from '../contracts/IdleTokenV3.json';\nimport IdleTokenV4 from '../contracts/IdleTokenV4.json';\nimport IdleConverterPersonalSignV4 from '../contracts/IdleConverterPersonalSignV4.json';\n\nconst availableTokens = {\n  // Goerli\n  5:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x001B3B4d0F3714Ca98ba10F6042DaEbF0B1B7b6F',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x45a3598Ac8aDb2c6233979f710DC6a3D006238E0',\n        },\n        protocols:[\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            token:'amDAI',\n            address:'0x639cB7b21ee2161DF9c882483C9D55c90c20Ca3e',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n    },\n    risk:{\n\n    }\n  },\n  80001:{ // Mumbai-Testnet\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x001B3B4d0F3714Ca98ba10F6042DaEbF0B1B7b6F',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x45a3598Ac8aDb2c6233979f710DC6a3D006238E0',\n        },\n        protocols:[\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            token:'amDAI',\n            address:'0x639cB7b21ee2161DF9c882483C9D55c90c20Ca3e',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      /*\n      USDC:{\n        abi:USDC,\n        token:'USDC',\n        decimals:6,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xb7a4f3e9097c08da09517b5ab877f7a917224ede',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        ramp:{\n          swapAsset:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x0de23D3bc385a74E2196cfE827C8a640B8774B9f',\n        },\n        protocols:[\n          {\n            decimals:16,\n            enabled:true,\n            token:'cUSDC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4a92e71227d294f041bd82dd8f78591b75140d63',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n      */\n    },\n    risk:{\n      \n    }\n  },\n  137:{ // Matic Mainnet\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x8f3Cf7ad23Cd3CaDbD9735AFf958023239c6A063',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x8a999F5A3546F8243205b2c0eCb0627cC10003ab',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            name:'cream',\n            enabled:true,\n            token:'crDAI',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x4eCEDdF62277eD78623f9A94995c680f8fd6C00e',\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            token:'amDAI',\n            address:'0x27F8D03b3a2196956ED754baDc28D73be8830A6e',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        ramp:{\n          swapAsset:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x1ee6470CD75D5686d0b2b90C0305Fa46fb0C89A1',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:16,\n            name:'cream',\n            enabled:true,\n            token:'crUSDC',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x73CF8c5D14Aa0EbC89f18272A568319F5BAB6cBD',\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            token:'amUSDC',\n            address:'0x1a13F4Ca1d028320A707D99520AbFefca3998b7F',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      WETH:{\n        abi:WETH,\n        token:'WETH',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WETH'\n        },\n        ramp:{\n          swapAsset:'WETH'\n        },\n        defiPrime:{\n          token:'weth'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWETHYield',\n          address:'0xfdA25D931258Df948ffecb66b5518299Df6527C4',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            name:'cream',\n            enabled:true,\n            token:'crWETH',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x7ef18d0a9C3Fb1A716FF6c3ED0Edf52a2427F716',\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            enabled:true,\n            token:'aWETH',\n            name:'aavev2',\n            address:'0x28424507fefb6f7f8E9D3860F56504E4e5f5f390',\n            functions:{\n\n            }\n          },\n        ]\n      },\n    },\n    risk:{\n      \n    }\n  },\n  // Ethereum\n  42:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x4f96fe3b7a6cf9725f59d353f723c1bdb64ca6aa',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x295CA5bC5153698162dDbcE5dF50E436a58BA21e',\n        },\n        protocols:[\n          {\n            decimals:28,\n            token:'cDAI',\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xf0d0eb522cfa50b716b3b1604c4f0fa6f04376ad',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        token: 'USDC',\n        decimals: 6,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0xb7a4f3e9097c08da09517b5ab877f7a917224ede',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        ramp: {\n          swapAsset: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCYield',\n          address: '0x0de23D3bc385a74E2196cfE827C8a640B8774B9f',\n        },\n        protocols: [\n          {\n            decimals: 16,\n            enabled: true,\n            token: 'cUSDC',\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x4a92e71227d294f041bd82dd8f78591b75140d63',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          }\n        ]\n      },\n    },\n    risk: {\n\n    }\n  },\n  1337: {\n    best: {\n      DAI: {\n        abi: DAI,\n        token: 'DAI',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAIYield',\n          address: '0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAIYieldV3',\n            address: '0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            token: 'idleDAI',\n            abi: IdleConverterPersonalSignV4,\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            enabled: false,\n            name: 'fulcrum',\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token: 'aDAIv2',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: CHAI,\n            name: 'dsr',\n            enabled: true,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: yToken,\n            name: 'dydx',\n            enabled: true,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCYield',\n          address: '0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCYieldV3',\n            address: '0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols: [\n            {\n              abi: yToken,\n              name: 'dydx',\n              enabled: true,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aUSDCv2',\n            address: '0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions: {\n\n            }\n          },\n          {\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTYield',\n          address: '0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTYieldV3',\n            address: '0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDT',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            name: 'aavev2',\n            enabled: true,\n            token: 'aUSDTv2',\n            address: '0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions: {\n\n            }\n          }\n        ]\n      },\n      SUSD: {\n        decimals: 18,\n        token: 'SUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address: '0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre: {\n          destCurrency: 'SUSD'\n        },\n        defiPrime: {\n          token: 'susd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleSUSDYield',\n          address: '0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleSUSD',\n            name: 'idleSUSDYieldV3',\n            address: '0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleSUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x625aE63000f46200499120B906716420bd059240',\n            token: 'aSUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'aavev2',\n            enabled: true,\n            abi: aToken,\n            address: '0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token: 'aSUSDv2',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      TUSD: {\n        decimals: 18,\n        token: 'TUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(217, 100%, 20%)',\n        address: '0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre: {\n          destCurrency: 'TUSD'\n        },\n        defiPrime: {\n          token: 'tusd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleTUSDYield',\n          address: '0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleTUSD',\n            name: 'idleTUSDYieldV3',\n            address: '0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleTUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token: 'aTUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aTUSDv2',\n            address: '0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      WETH: {\n        abi: WETH,\n        token: 'WETH',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WETH'\n        },\n        ramp: {\n          swapAsset: 'WETH'\n        },\n        defiPrime: {\n          token: 'weth'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWETHYield',\n          address: '0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols: [\n          {\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token: 'cETH',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token: 'aWETH',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n        ]\n      },\n      WBTC: {\n        decimals: 8,\n        token: 'WBTC',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(29, 81%, 59%)',\n        address: '0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WBTC'\n        },\n        defiPrime: {\n          token: 'wbtc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWBTCYield',\n          address: '0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleWBTC',\n            name: 'idleWBTCYieldV3',\n            address: '0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleWBTC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            enabled: true,\n            token: 'cWBTC',\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0xccF4429DB6322D5C611ee964527D42E5d685DD6a',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            decimals: 18,\n            token: 'iWBTC',\n            enabled: false,\n            name: 'fulcrum',\n            address: '0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            token: 'aWBTC',\n            address: '0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aWBTCv2',\n            address: '0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      RAI: {\n        deposit: {},\n        token: 'RAI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        govTokensDisabled: false,\n        color: 'hsl(169,42%,37%)',\n        icon: 'images/tokens/RAI.png',\n        address: '0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleRAIYield',\n          address: '0x5C960a3DCC01BE8a0f49c02A8ceBCAcf5D07fABe',\n        },\n        protocols: [\n          {\n            abi: crToken,\n            decimals: 28,\n            enabled: true,\n            name: 'cream',\n            token: 'crRAI',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0xf8445c529d363ce114148662387eba5e62016e20',\n          },\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fRAI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x752F119bD4Ee2342CE35E2351648d21962c7CAfE',\n          }\n        ]\n      },\n      FEI: {\n        deposit: {},\n        token: 'FEI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        govTokensDisabled: false,\n        color: 'hsl(158, 64%, 37%)',\n        address: '0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleFEIYield',\n          address: '0xb2d5CB72A621493fe83C6885E4A776279be595bC',\n        },\n        protocols: [\n          {\n            abi: crToken,\n            decimals: 28,\n            enabled: true,\n            name: 'cream',\n            token: 'crFEI',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x8C3B7a4320ba70f8239F83770c4015B5bc4e6F91',\n          },\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fFEI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0xd8553552f8868C1Ef160eEdf031cF0BCf9686945',\n          }\n        ]\n      },\n    },\n    risk: {\n      DAI: {\n        abi: DAI,\n        decimals: 18,\n        token: 'DAI',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAISafe',\n          address: '0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAISafeV3',\n            address: '0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dsr',\n            enabled: true,\n            abi: CHAI,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCSafe',\n          address: '0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCSafeV3',\n            address: '0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTSafe',\n          address: '0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTSafeV3',\n            address: '0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      }\n    }\n  },\n  1: { // Mainnet\n    best: {\n      DAI: {\n        abi: DAI,\n        token: 'DAI',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAIYield',\n          address: '0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAIYieldV3',\n            address: '0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            token: 'idleDAI',\n            abi: IdleConverterPersonalSignV4,\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            enabled: false,\n            name: 'fulcrum',\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.4,\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token: 'aDAIv2',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: CHAI,\n            name: 'dsr',\n            enabled: true,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.7,\n            abi: yToken,\n            name: 'dydx',\n            enabled: true,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCYield',\n          address: '0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCYieldV3',\n            address: '0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols: [\n            {\n              abi: yToken,\n              name: 'dydx',\n              enabled: true,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 8.0,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.4,\n            abi: aToken,\n            decimals: 18,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aUSDCv2',\n            address: '0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.8,\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTYield',\n          address: '0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTYieldV3',\n            address: '0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDT',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.2,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.2,\n            abi: aToken,\n            decimals: 18,\n            name: 'aavev2',\n            enabled: true,\n            token: 'aUSDTv2',\n            address: '0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions: {\n\n            }\n          }\n        ]\n      },\n      SUSD: {\n        decimals: 18,\n        token: 'SUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address: '0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre: {\n          destCurrency: 'SUSD'\n        },\n        defiPrime: {\n          token: 'susd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleSUSDYield',\n          address: '0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleSUSD',\n            name: 'idleSUSDYieldV3',\n            address: '0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleSUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.2,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x625aE63000f46200499120B906716420bd059240',\n            token: 'aSUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.2,\n            name: 'aavev2',\n            enabled: true,\n            abi: aToken,\n            address: '0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token: 'aSUSDv2',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      TUSD: {\n        decimals: 18,\n        token: 'TUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(217, 100%, 20%)',\n        address: '0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre: {\n          destCurrency: 'TUSD'\n        },\n        defiPrime: {\n          token: 'tusd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleTUSDYield',\n          address: '0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleTUSD',\n            name: 'idleTUSDYieldV3',\n            address: '0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleTUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.8,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token: 'aTUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.8,\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aTUSDv2',\n            address: '0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      WETH: {\n        abi: WETH,\n        token: 'WETH',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WETH'\n        },\n        ramp: {\n          swapAsset: 'WETH'\n        },\n        defiPrime: {\n          token: 'weth'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWETHYield',\n          address: '0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols: [\n          {\n            defiScore: 8.8,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token: 'cETH',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 8.3,\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token: 'aWETH',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n        ]\n      },\n      WBTC: {\n        decimals: 8,\n        token: 'WBTC',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(29, 81%, 59%)',\n        address: '0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WBTC'\n        },\n        defiPrime: {\n          token: 'wbtc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWBTCYield',\n          address: '0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleWBTC',\n            name: 'idleWBTCYieldV3',\n            address: '0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleWBTC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 8.9,\n            enabled: true,\n            token: 'cWBTC',\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0xccF4429DB6322D5C611ee964527D42E5d685DD6a',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            decimals: 18,\n            token: 'iWBTC',\n            enabled: false,\n            name: 'fulcrum',\n            address: '0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 8.3,\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            token: 'aWBTC',\n            address: '0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 8.3,\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aWBTCv2',\n            address: '0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      RAI: {\n        deposit: {},\n        token: 'RAI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        defiScoreDisabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(169,42%,37%)',\n        icon: 'images/tokens/RAI.png',\n        address: '0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleRAIYield',\n          address: '0x5C960a3DCC01BE8a0f49c02A8ceBCAcf5D07fABe',\n        },\n        protocols: [\n          /*\n          {\n            abi:crToken,\n            decimals:28,\n            name:'cream',\n            token:'crRAI',\n            enabled:false,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0xf8445c529d363ce114148662387eba5e62016e20',\n          },\n          */\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fRAI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x752F119bD4Ee2342CE35E2351648d21962c7CAfE',\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            token: 'aRAI',\n            enabled: true,\n            name: 'aavev2',\n            functions: {\n            },\n            address: '0xc9bc48c72154ef3e5425641a3c747242112a46af',\n          }\n        ]\n      },\n      FEI: {\n        deposit: {},\n        token: 'FEI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        defiScoreDisabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(158, 64%, 37%)',\n        address: '0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleFEIYield',\n          address: '0xb2d5CB72A621493fe83C6885E4A776279be595bC',\n        },\n        protocols: [\n          {\n            abi: crToken,\n            decimals: 28,\n            enabled: true,\n            name: 'cream',\n            token: 'crFEI',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x8C3B7a4320ba70f8239F83770c4015B5bc4e6F91',\n          },\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fFEI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0xd8553552f8868C1Ef160eEdf031cF0BCf9686945',\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            token: 'aFEI',\n            enabled: true,\n            functions: {},\n            name: 'aavev2',\n            address: '0x683923dB55Fead99A79Fa01A27EeC3cB19679cC3',\n          }\n        ]\n      },\n    },\n    risk: {\n      DAI: {\n        abi: DAI,\n        decimals: 18,\n        token: 'DAI',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAISafe',\n          address: '0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        canDeposit: {\n          enabled: false,\n          disabledMessageRedeemKey: 'riskAdjustedDisabledMessageRedeem',\n          disabledMessageDepositKey: 'riskAdjustedDisabledMessageDeposit'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAISafeV3',\n            address: '0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dsr',\n            enabled: true,\n            abi: CHAI,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.7,\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCSafe',\n          address: '0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        canDeposit: {\n          enabled: false,\n          disabledMessageRedeemKey: 'riskAdjustedDisabledMessageRedeem',\n          disabledMessageDepositKey: 'riskAdjustedDisabledMessageDeposit'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCSafeV3',\n            address: '0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 8.0,\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.8,\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTSafe',\n          address: '0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        canDeposit: {\n          enabled: false,\n          disabledMessageRedeemKey: 'riskAdjustedDisabledMessageRedeem',\n          disabledMessageDepositKey: 'riskAdjustedDisabledMessageDeposit'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTSafeV3',\n            address: '0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.2,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      }\n    }\n  }\n};\n\nexport default availableTokens;","var map = {\n\t\"./mainnet/v1/index.json\": 1879,\n\t\"./testnet/mumbai/index.json\": 1880\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 4444;","var map = {\n\t\"./mainnet/v1/artifacts/fx-portal/FxChild.json\": 4446,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC1155ChildTunnel.json\": 4447,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC1155RootTunnel.json\": 4448,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC20ChildToken.json\": 4449,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC20ChildTunnel.json\": 4450,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC20RootToken.json\": 4451,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC20RootTunnel.json\": 4452,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC721ChildTunnel.json\": 4453,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC721RootTunnel.json\": 4454,\n\t\"./mainnet/v1/artifacts/fx-portal/FxRoot.json\": 4455,\n\t\"./mainnet/v1/artifacts/genesis/BorValidatorSet.json\": 4456,\n\t\"./mainnet/v1/artifacts/genesis/IStateReceiver.json\": 4457,\n\t\"./mainnet/v1/artifacts/genesis/Migrations.json\": 4458,\n\t\"./mainnet/v1/artifacts/genesis/StateReceiver.json\": 4459,\n\t\"./mainnet/v1/artifacts/genesis/System.json\": 4460,\n\t\"./mainnet/v1/artifacts/genesis/TestBorValidatorSet.json\": 4461,\n\t\"./mainnet/v1/artifacts/genesis/TestCommitState.json\": 4462,\n\t\"./mainnet/v1/artifacts/genesis/TestStateReceiver.json\": 4463,\n\t\"./mainnet/v1/artifacts/genesis/TestSystem.json\": 4464,\n\t\"./mainnet/v1/artifacts/genesis/ValidatorSet.json\": 4465,\n\t\"./mainnet/v1/artifacts/genesis/ValidatorVerifier.json\": 4466,\n\t\"./mainnet/v1/artifacts/plasma/BaseERC20.json\": 4467,\n\t\"./mainnet/v1/artifacts/plasma/ChainIdMixin.json\": 4468,\n\t\"./mainnet/v1/artifacts/plasma/ChildChain.json\": 4469,\n\t\"./mainnet/v1/artifacts/plasma/ChildERC20.json\": 4470,\n\t\"./mainnet/v1/artifacts/plasma/ChildERC20Proxified.json\": 4471,\n\t\"./mainnet/v1/artifacts/plasma/ChildERC721.json\": 4472,\n\t\"./mainnet/v1/artifacts/plasma/ChildERC721Mintable.json\": 4473,\n\t\"./mainnet/v1/artifacts/plasma/ChildERC721Proxified.json\": 4474,\n\t\"./mainnet/v1/artifacts/plasma/ChildToken.json\": 4475,\n\t\"./mainnet/v1/artifacts/plasma/ChildTokenProxy.json\": 4476,\n\t\"./mainnet/v1/artifacts/plasma/Common.json\": 4477,\n\t\"./mainnet/v1/artifacts/plasma/ContractReceiver.json\": 4478,\n\t\"./mainnet/v1/artifacts/plasma/ContractWitRevertingFallback.json\": 4479,\n\t\"./mainnet/v1/artifacts/plasma/ContractWithFallback.json\": 4480,\n\t\"./mainnet/v1/artifacts/plasma/ContractWithoutFallback.json\": 4481,\n\t\"./mainnet/v1/artifacts/plasma/DelegateProxy.json\": 4482,\n\t\"./mainnet/v1/artifacts/plasma/DepositManager.json\": 4483,\n\t\"./mainnet/v1/artifacts/plasma/DepositManagerHeader.json\": 4484,\n\t\"./mainnet/v1/artifacts/plasma/DepositManagerProxy.json\": 4485,\n\t\"./mainnet/v1/artifacts/plasma/DepositManagerStorage.json\": 4486,\n\t\"./mainnet/v1/artifacts/plasma/DrainStakeManager.json\": 4487,\n\t\"./mainnet/v1/artifacts/plasma/Drainable.json\": 4488,\n\t\"./mainnet/v1/artifacts/plasma/ECVerify.json\": 4489,\n\t\"./mainnet/v1/artifacts/plasma/ERC165.json\": 4490,\n\t\"./mainnet/v1/artifacts/plasma/ERC20.json\": 4491,\n\t\"./mainnet/v1/artifacts/plasma/ERC20Detailed.json\": 4492,\n\t\"./mainnet/v1/artifacts/plasma/ERC20Mintable.json\": 4493,\n\t\"./mainnet/v1/artifacts/plasma/ERC20NonTransferable.json\": 4494,\n\t\"./mainnet/v1/artifacts/plasma/ERC20Predicate.json\": 4495,\n\t\"./mainnet/v1/artifacts/plasma/ERC20PredicateBurnOnly.json\": 4496,\n\t\"./mainnet/v1/artifacts/plasma/ERC721.json\": 4497,\n\t\"./mainnet/v1/artifacts/plasma/ERC721Enumerable.json\": 4498,\n\t\"./mainnet/v1/artifacts/plasma/ERC721Full.json\": 4499,\n\t\"./mainnet/v1/artifacts/plasma/ERC721Metadata.json\": 4500,\n\t\"./mainnet/v1/artifacts/plasma/ERC721MetadataMintable.json\": 4501,\n\t\"./mainnet/v1/artifacts/plasma/ERC721Mintable.json\": 4502,\n\t\"./mainnet/v1/artifacts/plasma/ERC721PlasmaMintable.json\": 4503,\n\t\"./mainnet/v1/artifacts/plasma/ERC721Predicate.json\": 4504,\n\t\"./mainnet/v1/artifacts/plasma/ERC721PredicateBurnOnly.json\": 4505,\n\t\"./mainnet/v1/artifacts/plasma/ERCProxy.json\": 4506,\n\t\"./mainnet/v1/artifacts/plasma/ExitNFT.json\": 4507,\n\t\"./mainnet/v1/artifacts/plasma/FallbackManager.json\": 4508,\n\t\"./mainnet/v1/artifacts/plasma/GnosisSafe.json\": 4509,\n\t\"./mainnet/v1/artifacts/plasma/GnosisSafeProxy.json\": 4510,\n\t\"./mainnet/v1/artifacts/plasma/Governable.json\": 4511,\n\t\"./mainnet/v1/artifacts/plasma/Governance.json\": 4512,\n\t\"./mainnet/v1/artifacts/plasma/GovernanceLockable.json\": 4513,\n\t\"./mainnet/v1/artifacts/plasma/GovernanceLockableTest.json\": 4514,\n\t\"./mainnet/v1/artifacts/plasma/GovernanceProxy.json\": 4515,\n\t\"./mainnet/v1/artifacts/plasma/IDepositManager.json\": 4516,\n\t\"./mainnet/v1/artifacts/plasma/IERC165.json\": 4517,\n\t\"./mainnet/v1/artifacts/plasma/IERC20.json\": 4518,\n\t\"./mainnet/v1/artifacts/plasma/IERC721.json\": 4519,\n\t\"./mainnet/v1/artifacts/plasma/IERC721Enumerable.json\": 4520,\n\t\"./mainnet/v1/artifacts/plasma/IERC721Metadata.json\": 4521,\n\t\"./mainnet/v1/artifacts/plasma/IERC721Receiver.json\": 4522,\n\t\"./mainnet/v1/artifacts/plasma/IErcPredicate.json\": 4523,\n\t\"./mainnet/v1/artifacts/plasma/IGovernance.json\": 4524,\n\t\"./mainnet/v1/artifacts/plasma/IParentToken.json\": 4525,\n\t\"./mainnet/v1/artifacts/plasma/IPredicate.json\": 4526,\n\t\"./mainnet/v1/artifacts/plasma/IRootChain.json\": 4527,\n\t\"./mainnet/v1/artifacts/plasma/ISignatureValidator.json\": 4528,\n\t\"./mainnet/v1/artifacts/plasma/ISlashingManager.json\": 4529,\n\t\"./mainnet/v1/artifacts/plasma/IStakeManager.json\": 4530,\n\t\"./mainnet/v1/artifacts/plasma/IStakeManagerLocal.json\": 4531,\n\t\"./mainnet/v1/artifacts/plasma/IValidatorShare.json\": 4532,\n\t\"./mainnet/v1/artifacts/plasma/IWithdrawManager.json\": 4533,\n\t\"./mainnet/v1/artifacts/plasma/LibEIP712Domain.json\": 4534,\n\t\"./mainnet/v1/artifacts/plasma/LibTokenTransferOrder.json\": 4535,\n\t\"./mainnet/v1/artifacts/plasma/Lockable.json\": 4536,\n\t\"./mainnet/v1/artifacts/plasma/MRC20.json\": 4537,\n\t\"./mainnet/v1/artifacts/plasma/Marketplace.json\": 4538,\n\t\"./mainnet/v1/artifacts/plasma/MarketplacePredicate.json\": 4539,\n\t\"./mainnet/v1/artifacts/plasma/MarketplacePredicateTest.json\": 4540,\n\t\"./mainnet/v1/artifacts/plasma/MarketplaceToken.json\": 4541,\n\t\"./mainnet/v1/artifacts/plasma/MasterCopy.json\": 4542,\n\t\"./mainnet/v1/artifacts/plasma/MaticWETH.json\": 4543,\n\t\"./mainnet/v1/artifacts/plasma/Merkle.json\": 4544,\n\t\"./mainnet/v1/artifacts/plasma/Migrations.json\": 4545,\n\t\"./mainnet/v1/artifacts/plasma/MintableERC721Predicate.json\": 4546,\n\t\"./mainnet/v1/artifacts/plasma/MinterRole.json\": 4547,\n\t\"./mainnet/v1/artifacts/plasma/Module.json\": 4548,\n\t\"./mainnet/v1/artifacts/plasma/ModuleManager.json\": 4549,\n\t\"./mainnet/v1/artifacts/plasma/Ownable.json\": 4550,\n\t\"./mainnet/v1/artifacts/plasma/OwnableLockable.json\": 4551,\n\t\"./mainnet/v1/artifacts/plasma/OwnerManager.json\": 4552,\n\t\"./mainnet/v1/artifacts/plasma/ParentTokenMock.json\": 4553,\n\t\"./mainnet/v1/artifacts/plasma/PredicateUtils.json\": 4554,\n\t\"./mainnet/v1/artifacts/plasma/PriorityQueue.json\": 4555,\n\t\"./mainnet/v1/artifacts/plasma/Proxy.json\": 4556,\n\t\"./mainnet/v1/artifacts/plasma/ProxyStorage.json\": 4557,\n\t\"./mainnet/v1/artifacts/plasma/ProxyTestImpl.json\": 4558,\n\t\"./mainnet/v1/artifacts/plasma/ProxyTestImplStorageLayoutChange.json\": 4559,\n\t\"./mainnet/v1/artifacts/plasma/Registry.json\": 4560,\n\t\"./mainnet/v1/artifacts/plasma/RootChain.json\": 4561,\n\t\"./mainnet/v1/artifacts/plasma/RootChainHeader.json\": 4562,\n\t\"./mainnet/v1/artifacts/plasma/RootChainProxy.json\": 4563,\n\t\"./mainnet/v1/artifacts/plasma/RootChainStorage.json\": 4564,\n\t\"./mainnet/v1/artifacts/plasma/RootChainable.json\": 4565,\n\t\"./mainnet/v1/artifacts/plasma/RootERC721.json\": 4566,\n\t\"./mainnet/v1/artifacts/plasma/SlashingManager.json\": 4567,\n\t\"./mainnet/v1/artifacts/plasma/StakeManager.json\": 4568,\n\t\"./mainnet/v1/artifacts/plasma/StakeManagerProxy.json\": 4569,\n\t\"./mainnet/v1/artifacts/plasma/StakeManagerStorage.json\": 4570,\n\t\"./mainnet/v1/artifacts/plasma/StakeManagerTest.json\": 4571,\n\t\"./mainnet/v1/artifacts/plasma/StakeManagerTestable.json\": 4572,\n\t\"./mainnet/v1/artifacts/plasma/StakingInfo.json\": 4573,\n\t\"./mainnet/v1/artifacts/plasma/StakingNFT.json\": 4574,\n\t\"./mainnet/v1/artifacts/plasma/StateReceiver.json\": 4575,\n\t\"./mainnet/v1/artifacts/plasma/StateSender.json\": 4576,\n\t\"./mainnet/v1/artifacts/plasma/StateSyncerVerifier.json\": 4577,\n\t\"./mainnet/v1/artifacts/plasma/TestMRC20.json\": 4578,\n\t\"./mainnet/v1/artifacts/plasma/TestToken.json\": 4579,\n\t\"./mainnet/v1/artifacts/plasma/TransferWithSigPredicate.json\": 4580,\n\t\"./mainnet/v1/artifacts/plasma/TransferWithSigUtils.json\": 4581,\n\t\"./mainnet/v1/artifacts/plasma/UpgradableProxy.json\": 4582,\n\t\"./mainnet/v1/artifacts/plasma/ValidatorShare.json\": 4583,\n\t\"./mainnet/v1/artifacts/plasma/ValidatorShareFactory.json\": 4584,\n\t\"./mainnet/v1/artifacts/plasma/ValidatorShareProxy.json\": 4585,\n\t\"./mainnet/v1/artifacts/plasma/ValidatorShareTest.json\": 4586,\n\t\"./mainnet/v1/artifacts/plasma/WETH.json\": 4587,\n\t\"./mainnet/v1/artifacts/plasma/WithdrawManager.json\": 4588,\n\t\"./mainnet/v1/artifacts/plasma/WithdrawManagerHeader.json\": 4589,\n\t\"./mainnet/v1/artifacts/plasma/WithdrawManagerProxy.json\": 4590,\n\t\"./mainnet/v1/artifacts/plasma/WithdrawManagerStorage.json\": 4591,\n\t\"./mainnet/v1/artifacts/pos/AccessControl.json\": 4592,\n\t\"./mainnet/v1/artifacts/pos/AccessControlMixin.json\": 4593,\n\t\"./mainnet/v1/artifacts/pos/ChainConstants.json\": 4594,\n\t\"./mainnet/v1/artifacts/pos/ChildChainManager.json\": 4595,\n\t\"./mainnet/v1/artifacts/pos/ChildChainManagerProxy.json\": 4596,\n\t\"./mainnet/v1/artifacts/pos/ChildERC1155.json\": 4597,\n\t\"./mainnet/v1/artifacts/pos/ChildERC20.json\": 4598,\n\t\"./mainnet/v1/artifacts/pos/ChildERC721.json\": 4599,\n\t\"./mainnet/v1/artifacts/pos/ChildMintableERC721.json\": 4600,\n\t\"./mainnet/v1/artifacts/pos/ChildTunnel.json\": 4601,\n\t\"./mainnet/v1/artifacts/pos/DummyERC1155.json\": 4602,\n\t\"./mainnet/v1/artifacts/pos/DummyERC20.json\": 4603,\n\t\"./mainnet/v1/artifacts/pos/DummyERC721.json\": 4604,\n\t\"./mainnet/v1/artifacts/pos/DummyMintableERC721.json\": 4605,\n\t\"./mainnet/v1/artifacts/pos/DummyStateSender.json\": 4606,\n\t\"./mainnet/v1/artifacts/pos/EIP712Base.json\": 4607,\n\t\"./mainnet/v1/artifacts/pos/ERC1155.json\": 4608,\n\t\"./mainnet/v1/artifacts/pos/ERC1155Predicate.json\": 4609,\n\t\"./mainnet/v1/artifacts/pos/ERC1155PredicateProxy.json\": 4610,\n\t\"./mainnet/v1/artifacts/pos/ERC1155Receiver.json\": 4611,\n\t\"./mainnet/v1/artifacts/pos/ERC165.json\": 4612,\n\t\"./mainnet/v1/artifacts/pos/ERC20.json\": 4613,\n\t\"./mainnet/v1/artifacts/pos/ERC20Predicate.json\": 4614,\n\t\"./mainnet/v1/artifacts/pos/ERC20PredicateProxy.json\": 4615,\n\t\"./mainnet/v1/artifacts/pos/ERC721.json\": 4616,\n\t\"./mainnet/v1/artifacts/pos/ERC721Predicate.json\": 4617,\n\t\"./mainnet/v1/artifacts/pos/ERC721PredicateProxy.json\": 4618,\n\t\"./mainnet/v1/artifacts/pos/EtherPredicate.json\": 4619,\n\t\"./mainnet/v1/artifacts/pos/EtherPredicateProxy.json\": 4620,\n\t\"./mainnet/v1/artifacts/pos/ICheckpointManager.json\": 4621,\n\t\"./mainnet/v1/artifacts/pos/IChildChainManager.json\": 4622,\n\t\"./mainnet/v1/artifacts/pos/IChildToken.json\": 4623,\n\t\"./mainnet/v1/artifacts/pos/IERC1155.json\": 4624,\n\t\"./mainnet/v1/artifacts/pos/IERC1155MetadataURI.json\": 4625,\n\t\"./mainnet/v1/artifacts/pos/IERC1155Receiver.json\": 4626,\n\t\"./mainnet/v1/artifacts/pos/IERC165.json\": 4627,\n\t\"./mainnet/v1/artifacts/pos/IERC20.json\": 4628,\n\t\"./mainnet/v1/artifacts/pos/IERC721.json\": 4629,\n\t\"./mainnet/v1/artifacts/pos/IERC721Enumerable.json\": 4630,\n\t\"./mainnet/v1/artifacts/pos/IERC721Metadata.json\": 4631,\n\t\"./mainnet/v1/artifacts/pos/IERC721Receiver.json\": 4632,\n\t\"./mainnet/v1/artifacts/pos/IERCProxy.json\": 4633,\n\t\"./mainnet/v1/artifacts/pos/IMintableERC721.json\": 4634,\n\t\"./mainnet/v1/artifacts/pos/IRootChainManager.json\": 4635,\n\t\"./mainnet/v1/artifacts/pos/IStateSender.json\": 4636,\n\t\"./mainnet/v1/artifacts/pos/ITokenPredicate.json\": 4637,\n\t\"./mainnet/v1/artifacts/pos/MaticWETH.json\": 4638,\n\t\"./mainnet/v1/artifacts/pos/Merkle.json\": 4639,\n\t\"./mainnet/v1/artifacts/pos/MerklePatriciaTest.json\": 4640,\n\t\"./mainnet/v1/artifacts/pos/Migrations.json\": 4641,\n\t\"./mainnet/v1/artifacts/pos/MintableERC1155Predicate.json\": 4642,\n\t\"./mainnet/v1/artifacts/pos/MintableERC1155PredicateProxy.json\": 4643,\n\t\"./mainnet/v1/artifacts/pos/MintableERC20Predicate.json\": 4644,\n\t\"./mainnet/v1/artifacts/pos/MintableERC20PredicateProxy.json\": 4645,\n\t\"./mainnet/v1/artifacts/pos/MintableERC721Predicate.json\": 4646,\n\t\"./mainnet/v1/artifacts/pos/MintableERC721PredicateProxy.json\": 4647,\n\t\"./mainnet/v1/artifacts/pos/MockCheckpointManager.json\": 4648,\n\t\"./mainnet/v1/artifacts/pos/NativeMetaTransaction.json\": 4649,\n\t\"./mainnet/v1/artifacts/pos/NetworkAgnostic.json\": 4650,\n\t\"./mainnet/v1/artifacts/pos/Proxy.json\": 4651,\n\t\"./mainnet/v1/artifacts/pos/ProxyTestImpl.json\": 4652,\n\t\"./mainnet/v1/artifacts/pos/ProxyTestImplStorageLayoutChange.json\": 4653,\n\t\"./mainnet/v1/artifacts/pos/RootChainManager.json\": 4654,\n\t\"./mainnet/v1/artifacts/pos/RootChainManagerProxy.json\": 4655,\n\t\"./mainnet/v1/artifacts/pos/RootChainManagerStorage.json\": 4656,\n\t\"./mainnet/v1/artifacts/pos/RootTunnel.json\": 4657,\n\t\"./mainnet/v1/artifacts/pos/UpgradableProxy.json\": 4658,\n\t\"./mainnet/v1/index.json\": 1879,\n\t\"./networks.json\": 1878,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxChild.json\": 4659,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC1155ChildTunnel.json\": 4660,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC1155RootTunnel.json\": 4661,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC20ChildToken.json\": 4662,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC20ChildTunnel.json\": 4663,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC20RootToken.json\": 4664,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC20RootTunnel.json\": 4665,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC721ChildTunnel.json\": 4666,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC721RootTunnel.json\": 4667,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxRoot.json\": 4668,\n\t\"./testnet/mumbai/artifacts/genesis/BorValidatorSet.json\": 4669,\n\t\"./testnet/mumbai/artifacts/genesis/IStateReceiver.json\": 4670,\n\t\"./testnet/mumbai/artifacts/genesis/Migrations.json\": 4671,\n\t\"./testnet/mumbai/artifacts/genesis/StateReceiver.json\": 4672,\n\t\"./testnet/mumbai/artifacts/genesis/System.json\": 4673,\n\t\"./testnet/mumbai/artifacts/genesis/TestBorValidatorSet.json\": 4674,\n\t\"./testnet/mumbai/artifacts/genesis/TestCommitState.json\": 4675,\n\t\"./testnet/mumbai/artifacts/genesis/TestStateReceiver.json\": 4676,\n\t\"./testnet/mumbai/artifacts/genesis/TestSystem.json\": 4677,\n\t\"./testnet/mumbai/artifacts/genesis/ValidatorSet.json\": 4678,\n\t\"./testnet/mumbai/artifacts/genesis/ValidatorVerifier.json\": 4679,\n\t\"./testnet/mumbai/artifacts/plasma/BaseERC20.json\": 4680,\n\t\"./testnet/mumbai/artifacts/plasma/ChainIdMixin.json\": 4681,\n\t\"./testnet/mumbai/artifacts/plasma/ChildChain.json\": 4682,\n\t\"./testnet/mumbai/artifacts/plasma/ChildERC20.json\": 4683,\n\t\"./testnet/mumbai/artifacts/plasma/ChildERC20Proxified.json\": 4684,\n\t\"./testnet/mumbai/artifacts/plasma/ChildERC721.json\": 4685,\n\t\"./testnet/mumbai/artifacts/plasma/ChildERC721Mintable.json\": 4686,\n\t\"./testnet/mumbai/artifacts/plasma/ChildERC721Proxified.json\": 4687,\n\t\"./testnet/mumbai/artifacts/plasma/ChildToken.json\": 4688,\n\t\"./testnet/mumbai/artifacts/plasma/ChildTokenProxy.json\": 4689,\n\t\"./testnet/mumbai/artifacts/plasma/Common.json\": 4690,\n\t\"./testnet/mumbai/artifacts/plasma/ContractReceiver.json\": 4691,\n\t\"./testnet/mumbai/artifacts/plasma/ContractWitRevertingFallback.json\": 4692,\n\t\"./testnet/mumbai/artifacts/plasma/ContractWithFallback.json\": 4693,\n\t\"./testnet/mumbai/artifacts/plasma/ContractWithoutFallback.json\": 4694,\n\t\"./testnet/mumbai/artifacts/plasma/DelegateProxy.json\": 4695,\n\t\"./testnet/mumbai/artifacts/plasma/DepositManager.json\": 4696,\n\t\"./testnet/mumbai/artifacts/plasma/DepositManagerHeader.json\": 4697,\n\t\"./testnet/mumbai/artifacts/plasma/DepositManagerProxy.json\": 4698,\n\t\"./testnet/mumbai/artifacts/plasma/DepositManagerStorage.json\": 4699,\n\t\"./testnet/mumbai/artifacts/plasma/DrainStakeManager.json\": 4700,\n\t\"./testnet/mumbai/artifacts/plasma/Drainable.json\": 4701,\n\t\"./testnet/mumbai/artifacts/plasma/ECVerify.json\": 4702,\n\t\"./testnet/mumbai/artifacts/plasma/ERC165.json\": 4703,\n\t\"./testnet/mumbai/artifacts/plasma/ERC20.json\": 4704,\n\t\"./testnet/mumbai/artifacts/plasma/ERC20Detailed.json\": 4705,\n\t\"./testnet/mumbai/artifacts/plasma/ERC20Mintable.json\": 4706,\n\t\"./testnet/mumbai/artifacts/plasma/ERC20NonTransferable.json\": 4707,\n\t\"./testnet/mumbai/artifacts/plasma/ERC20Predicate.json\": 4708,\n\t\"./testnet/mumbai/artifacts/plasma/ERC20PredicateBurnOnly.json\": 4709,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721.json\": 4710,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721Enumerable.json\": 4711,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721Full.json\": 4712,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721Metadata.json\": 4713,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721MetadataMintable.json\": 4714,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721Mintable.json\": 4715,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721PlasmaMintable.json\": 4716,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721Predicate.json\": 4717,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721PredicateBurnOnly.json\": 4718,\n\t\"./testnet/mumbai/artifacts/plasma/ERCProxy.json\": 4719,\n\t\"./testnet/mumbai/artifacts/plasma/ExitNFT.json\": 4720,\n\t\"./testnet/mumbai/artifacts/plasma/FallbackManager.json\": 4721,\n\t\"./testnet/mumbai/artifacts/plasma/GnosisSafe.json\": 4722,\n\t\"./testnet/mumbai/artifacts/plasma/GnosisSafeProxy.json\": 4723,\n\t\"./testnet/mumbai/artifacts/plasma/Governable.json\": 4724,\n\t\"./testnet/mumbai/artifacts/plasma/Governance.json\": 4725,\n\t\"./testnet/mumbai/artifacts/plasma/GovernanceLockable.json\": 4726,\n\t\"./testnet/mumbai/artifacts/plasma/GovernanceLockableTest.json\": 4727,\n\t\"./testnet/mumbai/artifacts/plasma/GovernanceProxy.json\": 4728,\n\t\"./testnet/mumbai/artifacts/plasma/IDepositManager.json\": 4729,\n\t\"./testnet/mumbai/artifacts/plasma/IERC165.json\": 4730,\n\t\"./testnet/mumbai/artifacts/plasma/IERC20.json\": 4731,\n\t\"./testnet/mumbai/artifacts/plasma/IERC721.json\": 4732,\n\t\"./testnet/mumbai/artifacts/plasma/IERC721Enumerable.json\": 4733,\n\t\"./testnet/mumbai/artifacts/plasma/IERC721Metadata.json\": 4734,\n\t\"./testnet/mumbai/artifacts/plasma/IERC721Receiver.json\": 4735,\n\t\"./testnet/mumbai/artifacts/plasma/IErcPredicate.json\": 4736,\n\t\"./testnet/mumbai/artifacts/plasma/IGovernance.json\": 4737,\n\t\"./testnet/mumbai/artifacts/plasma/IParentToken.json\": 4738,\n\t\"./testnet/mumbai/artifacts/plasma/IPredicate.json\": 4739,\n\t\"./testnet/mumbai/artifacts/plasma/IRootChain.json\": 4740,\n\t\"./testnet/mumbai/artifacts/plasma/ISignatureValidator.json\": 4741,\n\t\"./testnet/mumbai/artifacts/plasma/ISlashingManager.json\": 4742,\n\t\"./testnet/mumbai/artifacts/plasma/IStakeManager.json\": 4743,\n\t\"./testnet/mumbai/artifacts/plasma/IStakeManagerLocal.json\": 4744,\n\t\"./testnet/mumbai/artifacts/plasma/IValidatorShare.json\": 4745,\n\t\"./testnet/mumbai/artifacts/plasma/IWithdrawManager.json\": 4746,\n\t\"./testnet/mumbai/artifacts/plasma/LibEIP712Domain.json\": 4747,\n\t\"./testnet/mumbai/artifacts/plasma/LibTokenTransferOrder.json\": 4748,\n\t\"./testnet/mumbai/artifacts/plasma/Lockable.json\": 4749,\n\t\"./testnet/mumbai/artifacts/plasma/MRC20.json\": 4750,\n\t\"./testnet/mumbai/artifacts/plasma/Marketplace.json\": 4751,\n\t\"./testnet/mumbai/artifacts/plasma/MarketplacePredicate.json\": 4752,\n\t\"./testnet/mumbai/artifacts/plasma/MarketplacePredicateTest.json\": 4753,\n\t\"./testnet/mumbai/artifacts/plasma/MarketplaceToken.json\": 4754,\n\t\"./testnet/mumbai/artifacts/plasma/MasterCopy.json\": 4755,\n\t\"./testnet/mumbai/artifacts/plasma/MaticWETH.json\": 4756,\n\t\"./testnet/mumbai/artifacts/plasma/Merkle.json\": 4757,\n\t\"./testnet/mumbai/artifacts/plasma/Migrations.json\": 4758,\n\t\"./testnet/mumbai/artifacts/plasma/MintableERC721Predicate.json\": 4759,\n\t\"./testnet/mumbai/artifacts/plasma/MinterRole.json\": 4760,\n\t\"./testnet/mumbai/artifacts/plasma/Module.json\": 4761,\n\t\"./testnet/mumbai/artifacts/plasma/ModuleManager.json\": 4762,\n\t\"./testnet/mumbai/artifacts/plasma/Ownable.json\": 4763,\n\t\"./testnet/mumbai/artifacts/plasma/OwnableLockable.json\": 4764,\n\t\"./testnet/mumbai/artifacts/plasma/OwnerManager.json\": 4765,\n\t\"./testnet/mumbai/artifacts/plasma/ParentTokenMock.json\": 4766,\n\t\"./testnet/mumbai/artifacts/plasma/PredicateUtils.json\": 4767,\n\t\"./testnet/mumbai/artifacts/plasma/PriorityQueue.json\": 4768,\n\t\"./testnet/mumbai/artifacts/plasma/Proxy.json\": 4769,\n\t\"./testnet/mumbai/artifacts/plasma/ProxyStorage.json\": 4770,\n\t\"./testnet/mumbai/artifacts/plasma/ProxyTestImpl.json\": 4771,\n\t\"./testnet/mumbai/artifacts/plasma/ProxyTestImplStorageLayoutChange.json\": 4772,\n\t\"./testnet/mumbai/artifacts/plasma/Registry.json\": 4773,\n\t\"./testnet/mumbai/artifacts/plasma/RootChain.json\": 4774,\n\t\"./testnet/mumbai/artifacts/plasma/RootChainHeader.json\": 4775,\n\t\"./testnet/mumbai/artifacts/plasma/RootChainProxy.json\": 4776,\n\t\"./testnet/mumbai/artifacts/plasma/RootChainStorage.json\": 4777,\n\t\"./testnet/mumbai/artifacts/plasma/RootChainable.json\": 4778,\n\t\"./testnet/mumbai/artifacts/plasma/RootERC721.json\": 4779,\n\t\"./testnet/mumbai/artifacts/plasma/SlashingManager.json\": 4780,\n\t\"./testnet/mumbai/artifacts/plasma/StakeManager.json\": 4781,\n\t\"./testnet/mumbai/artifacts/plasma/StakeManagerProxy.json\": 4782,\n\t\"./testnet/mumbai/artifacts/plasma/StakeManagerStorage.json\": 4783,\n\t\"./testnet/mumbai/artifacts/plasma/StakeManagerTest.json\": 4784,\n\t\"./testnet/mumbai/artifacts/plasma/StakeManagerTestable.json\": 4785,\n\t\"./testnet/mumbai/artifacts/plasma/StakingInfo.json\": 4786,\n\t\"./testnet/mumbai/artifacts/plasma/StakingNFT.json\": 4787,\n\t\"./testnet/mumbai/artifacts/plasma/StateReceiver.json\": 4788,\n\t\"./testnet/mumbai/artifacts/plasma/StateSender.json\": 4789,\n\t\"./testnet/mumbai/artifacts/plasma/StateSyncerVerifier.json\": 4790,\n\t\"./testnet/mumbai/artifacts/plasma/TestMRC20.json\": 4791,\n\t\"./testnet/mumbai/artifacts/plasma/TestToken.json\": 4792,\n\t\"./testnet/mumbai/artifacts/plasma/TransferWithSigPredicate.json\": 4793,\n\t\"./testnet/mumbai/artifacts/plasma/TransferWithSigUtils.json\": 4794,\n\t\"./testnet/mumbai/artifacts/plasma/UpgradableProxy.json\": 4795,\n\t\"./testnet/mumbai/artifacts/plasma/ValidatorShare.json\": 4796,\n\t\"./testnet/mumbai/artifacts/plasma/ValidatorShareFactory.json\": 4797,\n\t\"./testnet/mumbai/artifacts/plasma/ValidatorShareProxy.json\": 4798,\n\t\"./testnet/mumbai/artifacts/plasma/ValidatorShareTest.json\": 4799,\n\t\"./testnet/mumbai/artifacts/plasma/WETH.json\": 4800,\n\t\"./testnet/mumbai/artifacts/plasma/WithdrawManager.json\": 4801,\n\t\"./testnet/mumbai/artifacts/plasma/WithdrawManagerHeader.json\": 4802,\n\t\"./testnet/mumbai/artifacts/plasma/WithdrawManagerProxy.json\": 4803,\n\t\"./testnet/mumbai/artifacts/plasma/WithdrawManagerStorage.json\": 4804,\n\t\"./testnet/mumbai/artifacts/pos/AccessControl.json\": 4805,\n\t\"./testnet/mumbai/artifacts/pos/AccessControlMixin.json\": 4806,\n\t\"./testnet/mumbai/artifacts/pos/ChainConstants.json\": 4807,\n\t\"./testnet/mumbai/artifacts/pos/ChildChainManager.json\": 4808,\n\t\"./testnet/mumbai/artifacts/pos/ChildChainManagerProxy.json\": 4809,\n\t\"./testnet/mumbai/artifacts/pos/ChildERC1155.json\": 4810,\n\t\"./testnet/mumbai/artifacts/pos/ChildERC20.json\": 4811,\n\t\"./testnet/mumbai/artifacts/pos/ChildERC721.json\": 4812,\n\t\"./testnet/mumbai/artifacts/pos/ChildMintableERC721.json\": 4813,\n\t\"./testnet/mumbai/artifacts/pos/ChildTunnel.json\": 4814,\n\t\"./testnet/mumbai/artifacts/pos/DummyERC1155.json\": 4815,\n\t\"./testnet/mumbai/artifacts/pos/DummyERC20.json\": 4816,\n\t\"./testnet/mumbai/artifacts/pos/DummyERC721.json\": 4817,\n\t\"./testnet/mumbai/artifacts/pos/DummyMintableERC721.json\": 4818,\n\t\"./testnet/mumbai/artifacts/pos/DummyStateSender.json\": 4819,\n\t\"./testnet/mumbai/artifacts/pos/EIP712Base.json\": 4820,\n\t\"./testnet/mumbai/artifacts/pos/ERC1155.json\": 4821,\n\t\"./testnet/mumbai/artifacts/pos/ERC1155Predicate.json\": 4822,\n\t\"./testnet/mumbai/artifacts/pos/ERC1155PredicateProxy.json\": 4823,\n\t\"./testnet/mumbai/artifacts/pos/ERC1155Receiver.json\": 4824,\n\t\"./testnet/mumbai/artifacts/pos/ERC165.json\": 4825,\n\t\"./testnet/mumbai/artifacts/pos/ERC20.json\": 4826,\n\t\"./testnet/mumbai/artifacts/pos/ERC20Predicate.json\": 4827,\n\t\"./testnet/mumbai/artifacts/pos/ERC20PredicateProxy.json\": 4828,\n\t\"./testnet/mumbai/artifacts/pos/ERC721.json\": 4829,\n\t\"./testnet/mumbai/artifacts/pos/ERC721Predicate.json\": 4830,\n\t\"./testnet/mumbai/artifacts/pos/ERC721PredicateProxy.json\": 4831,\n\t\"./testnet/mumbai/artifacts/pos/EtherPredicate.json\": 4832,\n\t\"./testnet/mumbai/artifacts/pos/EtherPredicateProxy.json\": 4833,\n\t\"./testnet/mumbai/artifacts/pos/ICheckpointManager.json\": 4834,\n\t\"./testnet/mumbai/artifacts/pos/IChildChainManager.json\": 4835,\n\t\"./testnet/mumbai/artifacts/pos/IChildToken.json\": 4836,\n\t\"./testnet/mumbai/artifacts/pos/IERC1155.json\": 4837,\n\t\"./testnet/mumbai/artifacts/pos/IERC1155MetadataURI.json\": 4838,\n\t\"./testnet/mumbai/artifacts/pos/IERC1155Receiver.json\": 4839,\n\t\"./testnet/mumbai/artifacts/pos/IERC165.json\": 4840,\n\t\"./testnet/mumbai/artifacts/pos/IERC20.json\": 4841,\n\t\"./testnet/mumbai/artifacts/pos/IERC721.json\": 4842,\n\t\"./testnet/mumbai/artifacts/pos/IERC721Enumerable.json\": 4843,\n\t\"./testnet/mumbai/artifacts/pos/IERC721Metadata.json\": 4844,\n\t\"./testnet/mumbai/artifacts/pos/IERC721Receiver.json\": 4845,\n\t\"./testnet/mumbai/artifacts/pos/IERCProxy.json\": 4846,\n\t\"./testnet/mumbai/artifacts/pos/IMintableERC721.json\": 4847,\n\t\"./testnet/mumbai/artifacts/pos/IRootChainManager.json\": 4848,\n\t\"./testnet/mumbai/artifacts/pos/IStateSender.json\": 4849,\n\t\"./testnet/mumbai/artifacts/pos/ITokenPredicate.json\": 4850,\n\t\"./testnet/mumbai/artifacts/pos/MaticWETH.json\": 4851,\n\t\"./testnet/mumbai/artifacts/pos/Merkle.json\": 4852,\n\t\"./testnet/mumbai/artifacts/pos/MerklePatriciaTest.json\": 4853,\n\t\"./testnet/mumbai/artifacts/pos/Migrations.json\": 4854,\n\t\"./testnet/mumbai/artifacts/pos/MintableERC1155Predicate.json\": 4855,\n\t\"./testnet/mumbai/artifacts/pos/MintableERC1155PredicateProxy.json\": 4856,\n\t\"./testnet/mumbai/artifacts/pos/MintableERC20Predicate.json\": 4857,\n\t\"./testnet/mumbai/artifacts/pos/MintableERC20PredicateProxy.json\": 4858,\n\t\"./testnet/mumbai/artifacts/pos/MintableERC721Predicate.json\": 4859,\n\t\"./testnet/mumbai/artifacts/pos/MintableERC721PredicateProxy.json\": 4860,\n\t\"./testnet/mumbai/artifacts/pos/MockCheckpointManager.json\": 4861,\n\t\"./testnet/mumbai/artifacts/pos/NativeMetaTransaction.json\": 4862,\n\t\"./testnet/mumbai/artifacts/pos/NetworkAgnostic.json\": 4863,\n\t\"./testnet/mumbai/artifacts/pos/Proxy.json\": 4864,\n\t\"./testnet/mumbai/artifacts/pos/ProxyTestImpl.json\": 4865,\n\t\"./testnet/mumbai/artifacts/pos/ProxyTestImplStorageLayoutChange.json\": 4866,\n\t\"./testnet/mumbai/artifacts/pos/RootChainManager.json\": 4867,\n\t\"./testnet/mumbai/artifacts/pos/RootChainManagerProxy.json\": 4868,\n\t\"./testnet/mumbai/artifacts/pos/RootChainManagerStorage.json\": 4869,\n\t\"./testnet/mumbai/artifacts/pos/RootTunnel.json\": 4870,\n\t\"./testnet/mumbai/artifacts/pos/UpgradableProxy.json\": 4871,\n\t\"./testnet/mumbai/index.json\": 1880\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 4445;","import theme from '../theme';\nimport React, { Component } from 'react';\nimport styles from './TransactionListFilters.module.scss';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\nimport { Flex, Text, Icon, Radio, Button, Link } from \"rimble-ui\";\n\nclass TransactionListFilters extends Component {\n\n  state = {\n    maxWidth:0.4,\n    minWidth:0.18,\n    maxHeight:425,\n    isOpened:false,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null\n    }\n  }\n\n  setFilter = (filter,value) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:value\n      }\n    }));\n  }\n\n  applyFilters = (toggle=true) => {\n    if (typeof this.props.applyFilters === 'function'){\n      this.props.applyFilters(this.state.activeFilters);\n    }\n    if (toggle){\n      this.toggleOpened();\n    }\n  }\n\n  resetFilter = (filter) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:null\n      }\n    }),() => {\n      this.applyFilters(false);\n    });\n  }\n\n  resetFilters = (toggle=true) => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null\n      }\n    },() => {\n      if (typeof this.props.resetFilters === 'function'){\n        this.props.resetFilters();\n      }\n      if (toggle){\n        this.toggleOpened();\n      }\n    })\n  }\n\n  toggleOpened = () => {\n    this.setState((prevState) => ({\n      isOpened: !prevState.isOpened\n    }));\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={3}\n        top={0}\n        width={1}\n        zIndex={1}\n        flexDirection={'column'}\n        alignItems={'flex-start'}\n        justifyContent={'center'}\n        position={['relative','absolute']}\n      >\n        <DashboardCard\n          cardProps={{\n            py:2,\n            px:3,\n            width:[1, this.state.isOpened ? this.state.maxWidth : this.state.minWidth ],\n            style:{\n              transition:'width 0.3s ease-in-out'\n            }\n          }}\n          isInteractive={ !this.state.isOpened }\n          handleClick={ !this.state.isOpened ? this.toggleOpened : null }\n        >\n          <Flex\n            width={1}\n            style={{\n              cursor:'pointer'\n            }}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'space-between'}\n            onClick={ this.state.isOpened ? this.toggleOpened : null }\n          >\n            <Text\n              fontSize={2}\n              fontWeight={500}\n              color={'copyColor'}\n            >\n              Filters\n            </Text>\n            <Icon\n              color={'copyColor'}\n              size={ this.props.isMobile ? '1.3em' : '1.5em'}\n              name={ this.state.isOpened ? 'Close' : 'Tune' }\n            />\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n            style={{\n              overflow:'hidden',\n              transition:'max-height 0.3s ease-in-out',\n              maxHeight:this.state.isOpened ? this.state.maxHeight : 0\n            }}\n          >\n            <Flex\n              mt={2}\n              py={2}\n              width={1}\n              flexDirection={'row'}\n              borderTop={`1px solid ${theme.colors.divider}`}\n            >\n              {\n                Object.keys(this.props.filters).map((filterCategory) => {\n                  const filterValues = this.props.filters[filterCategory];\n                  return (\n                    <Flex\n                      flexDirection={'column'}\n                      key={`filter_${filterCategory}`}\n                      style={{\n                        flexBasis:'0',\n                        flex:'1 1 0px'\n                      }}\n                    >\n                      <TableCellHeader\n                        pb={2}\n                        fontWeight={3}\n                        fontSize={[0,2]}\n                        color={'cellText'}\n                      >\n                        {filterCategory.toUpperCase()}\n                      </TableCellHeader>\n                      {\n                        Object.keys(filterValues).map((filterValue) => {\n                          const filterLabel = filterValues[filterValue];\n                          const isChecked = this.state.activeFilters[filterCategory]===filterValue;\n                          return (\n                            <Radio\n                              my={2}\n                              fontSize={[0,2]}\n                              label={filterLabel}\n                              checked={isChecked}\n                              className={styles.radioBtn}\n                              key={`filter_${filterCategory}_${filterValue}`}\n                              onChange={ e => this.setFilter(filterCategory,filterValue) }\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                  );\n                })\n              }\n            </Flex>\n            <Flex\n              flexDirection={'row'}\n            >\n              <Button.Text\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.applyFilters}\n              >\n                Apply filters\n              </Button.Text>\n              <Button.Text\n                ml={3}\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.resetFilters}\n              >\n                Reset\n              </Button.Text>\n            </Flex>\n          </Flex>\n        </DashboardCard>\n        {\n          !this.state.isOpened && this.props.activeFilters && Object.values(this.props.activeFilters).filter( v => (v !== null) ).length>0 &&\n            <Flex\n              mt={3}\n              width={1}\n              flexDirection={['column','row']}\n              alignItems={['flex-start','flex-end']}\n              justifyContent={['flex-end','flex-start']}\n            >\n              {\n                Object.keys(this.props.activeFilters).map((filterName) => {\n                  const filterValue = this.props.activeFilters[filterName];\n                  if (filterValue !== null){\n                    const filterLabel = this.props.filters[filterName][filterValue];\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:[2,0],\n                          mr:[0,3],\n                          width:[1,this.state.minWidth]\n                        }}\n                        isInteractive={true}\n                        key={`filter_${filterName}`}\n                      >\n                        <Flex\n                          width={1}\n                          style={{\n                            cursor:'pointer'\n                          }}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                          onClick={e => this.resetFilter(filterName)}\n                        >\n                          <Text\n                            fontSize={2}\n                            fontWeight={500}\n                            color={'cellText'}\n                            style={{\n                              textTransform:'capitalize'\n                            }}\n                          >\n                            {filterLabel}\n                          </Text>\n                          <Icon\n                            name={'Close'}\n                            color={'cellText'}\n                            size={ this.props.isMobile ? '1.3em' : '1.5em'}\n                          />\n                        </Flex>\n                      </DashboardCard>\n                    );\n                  }\n                  return null;\n                })\n              }\n              <Link\n                mt={[2,0]}\n                fontSize={[3,2]}\n                fontWeight={[3]}\n                color={'dark-gray'}\n                hoverColor={'copyColor'}\n                textAlign={['center','left']}\n                onClick={ e => this.resetFilters(false) }\n              >\n                Clear all filters\n              </Link>\n            </Flex>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionListFilters;","import React, { Component } from 'react';\n// import style from './TransactionsList.module.scss';\nimport TableRow from '../TableRow/TableRow';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Heading, Text, Link, Icon } from \"rimble-ui\";\nimport TransactionField from '../TransactionField/TransactionField';\nimport TransactionListFilters from '../TransactionListFilters/TransactionListFilters';\n\nclass TransactionsList extends Component {\n\n  state = {\n    page:1,\n    prevTxs:{},\n    txsPerPage:5,\n    loading:false,\n    totalTxs:null,\n    totalPages:null,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null,\n    },\n    filters:{\n      actions:{\n        deposit:'Deposit',\n        redeem:'Redeem',\n        send:'Send',\n        receive:'Receive',\n        migrate:'Migrate',\n        swap:'Swap-In',\n        swapout:'Swap-Out',\n        withdraw:'Withdraw',\n        // curvein:'CurveIn',\n        // curveout:'CurveOut',\n        // curvezapin:'CurveZapIn',\n        // curvezapout:'CurveZapOut',\n      },\n      status:{\n        completed:'Completed',\n        pending:'Pending',\n        failed:'Failed'\n      },\n      assets:{}\n    },\n    renderedTxs:null,\n    processedTxs:null,\n    lastBlockNumber:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);this.processTxs(page);\n    this.setState({\n      page\n    });\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadTxs();\n  }\n\n  applyFilters = activeFilters => {\n    this.setState({\n      activeFilters\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  resetFilters = () => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null,\n      }\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const transactionsChanged = JSON.stringify(prevProps.transactions) !== JSON.stringify(this.props.transactions);\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n\n    if (tokenChanged || transactionsChanged){\n      this.setState({\n        page:1,\n        prevTxs:{}\n      },()=>{\n        this.loadTxs();\n      })\n      return false;\n    }\n    const pageChanged = prevState.page !== this.state.page;\n    if (pageChanged){\n      this.processTxs();\n    }\n  }\n\n  async loadTxs(count,endBlockNumber='latest'){\n    if (!this.props.account){\n      return false;\n    }\n\n    count = count ? count : 0;\n\n    this.setState({\n      loading:true\n    });\n\n    const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n    // Take last block number, is null take first block number\n    let prevTxs = {...this.state.prevTxs};\n    let lastBlockNumber = Math.max(firstBlockNumber,this.state.lastBlockNumber);\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const assets = {...this.state.filters.assets};\n\n    enabledTokens.forEach((token) => {\n      assets[token] = token;\n    });\n\n    let actions = this.props.availableActions || {...this.state.filters.actions};\n    \n    const enabledActions = typeof this.props.enabledActions !== 'undefined' ? this.props.enabledActions : [];\n\n    if (enabledActions.length){\n      actions = {};\n      enabledActions.forEach( action => {\n        actions[action.toLowerCase()] = action;\n      });\n    }\n\n    const etherscanTxs = this.props.transactionsList || await this.functionsUtil.getEtherscanTxs(this.props.account,lastBlockNumber,'latest',enabledTokens);\n\n    // console.log('TransactionsList',etherscanTxs);\n\n    // Merge new txs with previous ones\n    if (etherscanTxs && etherscanTxs.length){\n      etherscanTxs.forEach((tx) => {\n        if (tx.hashKey){\n          prevTxs[tx.hashKey] = tx;\n        } else {\n          prevTxs[`t${tx.timeStamp}`] = tx;\n        }\n      });\n    }\n\n    const lastTx = Object.values(prevTxs).pop();\n\n    // Update last block number\n    if (lastTx && lastTx.blockNumber && (!this.state.lastBlockNumber || lastTx.blockNumber>this.state.lastBlockNumber)){\n      lastBlockNumber = parseInt(lastTx.blockNumber)+1;\n    }\n\n    return this.setState( prevState => ({\n      prevTxs,\n      loading:false,\n      lastBlockNumber,\n      filters:{\n        ...prevState.filters,\n        assets,\n        actions\n      }\n    }), () => {\n      this.processTxs()\n    });\n  };\n\n  processTxs = (page=null) => {\n\n    page = page ? page : this.state.page;\n\n    const availableActions = Object.keys(this.state.filters.actions).map( action => (action.toLowerCase()) );\n\n    // Sort prevTxs by timeStamp\n    const txsIndexes = Object.values(this.state.prevTxs)\n                        .filter(tx => (!!parseFloat(tx.value))) // Filter txs with value\n                        .filter(tx => (\n                          (this.state.activeFilters.status === null || (tx.status && tx.status.toLowerCase() === this.state.activeFilters.status.toLowerCase())) && \n                          (this.state.activeFilters.assets === null || (tx.token && tx.token.toLowerCase() === this.state.activeFilters.assets.toLowerCase())) &&\n                          ( tx.action && availableActions.includes(tx.action.toLowerCase()) && (this.state.activeFilters.actions === null || (tx.action.toLowerCase() === this.state.activeFilters.actions.toLowerCase()) ))\n                        )) // Filter by activeFilters\n                        .sort((a,b) => (a.timeStamp > b.timeStamp) ? -1 : 1 );\n\n    // Calculate max number of pages\n    const totalTxs = txsIndexes.length;\n    const totalPages = Math.ceil(totalTxs/this.state.txsPerPage);\n\n    const processedTxs = [];\n\n    // console.log(this.state.prevTxs,txsIndexes);\n\n    txsIndexes.forEach((tx, i) => {\n      const selectedToken = tx.token;\n      const tokenConfig = this.props.availableTokens && this.props.availableTokens[selectedToken] ? this.props.availableTokens[selectedToken] : this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken.toUpperCase()]);\n      const decimals = Math.min(tokenConfig.decimals,8);\n      \n      const date = new Date(tx.timeStamp*1000);\n      const action = tx.action ? tx.action : this.functionsUtil.getTxAction(tx,tokenConfig);\n\n      const parsedValue = parseFloat(tx.tokenAmount);\n\n      const amount = parsedValue ? (this.props.isMobile ? parsedValue.toFixed(4) : parsedValue.toFixed(decimals)) : '-';\n      const momentDate = this.functionsUtil.strToMoment(date);\n\n      // Save new params\n      tx.action = action;\n      tx.amount = amount;\n      tx.momentDate = momentDate;\n      tx.status = tx.status ? tx.status : 'Completed';\n\n      if (i>=((page-1)*this.state.txsPerPage) && i<((page-1)*this.state.txsPerPage)+this.state.txsPerPage) {\n        processedTxs.push(tx);\n      }\n    });\n\n    // console.log('processedTxs',this.state.page,txsIndexes,processedTxs);\n\n    const loading = false;\n  \n    this.setState({\n      loading,\n      totalTxs,\n      totalPages,\n      processedTxs\n    });\n  }\n\n  render() {\n\n    const hasActiveFilters = Object.values(this.state.activeFilters).filter( v => (v !== null) ).length>0;\n\n    // console.log('processedTxs',this.state.processedTxs);\n    const processedTxs = this.state.processedTxs ? Object.values(this.state.processedTxs) : null;\n\n    return (\n      <Flex flexDirection={'column'} width={1} m={'0 auto'}>\n        {\n          this.state.loading ? (\n            <FlexLoader\n              flexProps={{\n                flexDirection:'row',\n                minHeight:this.props.height\n              }}\n              loaderProps={{\n                size:'30px'\n              }}\n              textProps={{\n                ml:2\n              }}\n              text={'Loading transactions...'}\n            />\n          ) : (\n            <Flex\n              width={1}\n              position={'relative'}\n              flexDirection={'column'}\n              id={'transactions-list-container'}\n              pt={[0, hasActiveFilters ? '116px' : 5]}\n            >\n              <TransactionListFilters\n                {...this.props}\n                filters={this.state.filters}\n                activeFilters={this.state.activeFilters}\n                resetFilters={this.resetFilters.bind(this)}\n                applyFilters={this.applyFilters.bind(this)}\n              />\n              {\n                processedTxs && processedTxs.length ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <TableHeader\n                      cols={this.props.cols}\n                      isMobile={this.props.isMobile}\n                    />\n                    <Flex\n                      id={'transactions-list'}\n                      flexDirection={'column'}\n                    >\n                      {\n                        processedTxs.map( (tx,index) => {\n                          const txHash = tx.hash;\n                          const txHashKey = tx.hashKey;\n                          const handleClick = (e) => {\n                            return (txHash ? window.open(this.functionsUtil.getEtherscanTransactionUrl(txHash)) : null);\n                          };\n\n                          return (\n                            <TableRow\n                              {...this.props}\n                              rowProps={{\n                                isInteractive:true\n                              }}\n                              hash={txHash}\n                              transaction={tx}\n                              key={`tx-${index}`}\n                              handleClick={handleClick}\n                              rowId={`tx-col-${txHashKey}`}\n                              cardId={`tx-card-${txHashKey}`}\n                              fieldComponent={TransactionField}\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                    <Flex\n                      height={'50px'}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'flex-end'}\n                      id={'transactions-list-pagination'}\n                    >\n                      <Flex mr={3}>\n                        <Link mr={1} onClick={ e => this.prevPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowLeft'}\n                            size={'2em'}\n                            color={ this.state.page>1 ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                        <Link onClick={ e => this.nextPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowRight'}\n                            size={'2em'}\n                            color={ this.state.page<this.state.totalPages ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                      </Flex>\n                      <Flex alignItems={'center'}>\n                        <Text \n                          fontSize={1}\n                          fontWeight={3}\n                          color={'cellText'}\n                        >\n                          Page {this.state.page} of {this.state.totalPages}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontWeight={2} fontSize={[2]} color={'dark-gray'}>\n                    There are no transactions\n                  </Heading.h3>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionsList;\n","import React, { Component } from 'react';\nimport styles from './Migrate.module.scss';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\nimport { Box, Flex, Text, Icon, Checkbox, Input, Link, Image } from \"rimble-ui\";\n\nclass Migrate extends Component {\n\n  state = {\n    nonce:0,\n    loading:true,\n    action:'migrate',\n    processing:{\n      approve:{\n        txHash:null,\n        loading:false\n      },\n      migrate:{\n        txHash:null,\n        loading:false\n      },\n      redeem:{\n        txHash:null,\n        loading:false\n      }\n    },\n    inputValue:{},\n    usePermit:false,\n    oldTokenName:null,\n    oldIdleTokens:null,\n    skipMigration:false,\n    buttonDisabled:true,\n    migrationEnabled:null,\n    fastBalanceSelector:{},\n    oldContractBalance:null,\n    biconomyLimitReached:false,\n    metaTransactionsEnabled:true,\n    oldContractTokenDecimals:null,\n    migrationContractApproved:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  toggleSkipMigration = (skipMigration) => {\n    this.setState({\n      skipMigration\n    });\n\n    if (typeof this.props.toggleSkipMigration === 'function'){\n      this.props.toggleSkipMigration(skipMigration);\n    }\n  }\n\n  changeInputValue = (e) => {\n    if (!this.state.action){\n      return false;\n    }\n    const amount = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: null\n      },\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!this.state.action){\n      return false;\n    }\n    if (!amount){\n      amount = this.state.inputValue[this.state.action];\n    }\n    let buttonDisabled = true;\n    if (amount){\n      buttonDisabled = amount.lte(0);\n      switch (this.state.action){\n        case 'migrate':\n        case 'redeem':\n          buttonDisabled = buttonDisabled || amount.gt(this.state.oldIdleTokens);\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  setInputValue = () => {\n    if (!this.state.action || this.state.fastBalanceSelector[this.state.action] === null){\n      return false;\n    }\n\n    let amount = null;\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n\n    switch(this.state.action){\n      case 'migrate':\n      case 'redeem':\n        amount = this.state.oldIdleTokens ? this.functionsUtil.BNify(this.state.oldIdleTokens).times(selectedPercentage) : null;\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  setFastBalanceSelector = (percentage) => {\n    if (!this.state.action){\n      return false;\n    }\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: percentage\n      }\n    }));\n  }\n\n  executeAction = async () => {\n\n    const inputValue = this.state.inputValue[this.state.action];\n\n    if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)){\n      return false;\n    }\n\n    const loading = true;\n\n    switch (this.state.action){\n      case 'redeem':\n\n        if (!this.props.tokenConfig.migration || !this.props.tokenConfig.migration.oldContract){\n          return false;\n        }\n\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n\n        const idleTokenToRedeem = this.functionsUtil.normalizeTokenAmount(inputValue,18);\n\n        // Get amounts for best allocations\n        const _skipRebalance = true;\n        let paramsForRedeem = null;\n\n        /*\n        if (this.props.account){\n          const callParams = { from: this.props.account, gas: this.props.web3.utils.toBN(5000000) };\n          paramsForRedeem = await this.functionsUtil.genericContractCall(oldContractName,'getParamsForRedeemIdleToken',[idleTokenToRedeem, _skipRebalance],callParams);\n        }\n        */\n\n        const _clientProtocolAmountsRedeem = paramsForRedeem && paramsForRedeem.length ? paramsForRedeem[1] : [];\n        const gasLimitRedeem = _clientProtocolAmountsRedeem.length && _clientProtocolAmountsRedeem.indexOf('0') === -1 ? this.functionsUtil.BNify(1500000) : this.functionsUtil.BNify(1000000);\n\n        const callbackRedeem = (tx,error) => {\n          const txSucceeded = tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: `Redeem_old`,\n            eventAction: this.props.selectedToken,\n            eventLabel: tx.status,\n            eventValue: parseInt(inputValue)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (txSucceeded){\n            this.setState((prevState) => ({\n              inputValue:{\n                ...prevState.inputValue,\n                [this.state.action]: this.functionsUtil.BNify(0)\n              }\n            }));\n          }\n        };\n\n        const callbackReceiptRedeem = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                ...prevState.processing[this.state.action],\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.props.contractMethodSendWrapper(oldContractName, 'redeemIdleToken', [\n          idleTokenToRedeem, _skipRebalance, _clientProtocolAmountsRedeem\n        ], null, callbackRedeem, callbackReceiptRedeem, gasLimitRedeem);\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        [this.state.action]:{\n          ...prevState.processing[this.state.action],\n          loading\n        }\n      }\n    }));\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n    this.checkMigration();\n  }\n\n  componentDidMount(){\n    \n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const biconomyChanged = prevProps.biconomy !== this.props.biconomy;\n    const usePermitChanged = prevProps.usePermit !== this.props.usePermit;\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken || (!prevProps.tokenConfig && this.props.tokenConfig);\n\n    if (tokenChanged || accountChanged || biconomyChanged || usePermitChanged){\n      this.checkMigration();\n    }\n\n    const actionChanged = this.state.action !== prevState.action;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector[this.state.action] !== prevState.fastBalanceSelector[this.state.action];\n    if (actionChanged || fastBalanceSelectorChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (contractApprovedChanged){\n      // console.log(this.props.selectedToken,'contractApprovedChanged',this.state.migrationContractApproved);\n      if (typeof this.props.callbackApprove === 'function'){\n        this.props.callbackApprove(this.state.migrationContractApproved);\n      }\n    }\n  }\n\n  toggleMetaTransactionsEnabled = (metaTransactionsEnabled) => {\n    this.setState({\n      metaTransactionsEnabled\n    });\n  }\n\n  checkMigrationContractApproved = async () => {\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.migrationContract){\n      const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n      const migrationContractName = migrationContractInfo.name;\n      const migrationContract = this.functionsUtil.getContractByName(migrationContractName);\n      if (migrationContract){\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n        const tokenApproved = await this.functionsUtil.checkTokenApproved(oldContractName,migrationContractInfo.address,this.props.account);\n        return tokenApproved;\n      }\n    }\n    return false;\n  }\n\n  checkMigration = async () => {\n\n    if (!this.props.tokenConfig || !this.props.account){\n      return false;\n    }\n\n    let loading = true;\n    this.setState({\n      loading,\n      processing:{\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n\n    let migrationEnabled = false;\n    let oldTokenName = 'idleTokens';\n    let oldIdleTokensConverted = null;\n    let oldContractTokenDecimals = null;\n    let migrationContractApproved = false;\n    let oldTokenPrice = this.functionsUtil.BNify(0);\n    let oldIdleTokens = this.functionsUtil.BNify(0);\n    let oldContractBalance = this.functionsUtil.BNify(0);\n    const getTokenPrice = this.props.getTokenPrice !== undefined ? this.props.getTokenPrice : true;\n\n    // Check migration contract enabled and balance\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.enabled){\n      const oldContractInfo = this.props.tokenConfig.migration.oldContract;\n      const oldContractABI = oldContractInfo.abi;\n      const oldContractName = oldContractInfo.name;\n      let oldContract = this.functionsUtil.getContractByName(oldContractName);\n\n      // Initialize contract\n      if (!oldContract && oldContractABI){\n        oldContract = await this.props.initContract(oldContractName,oldContractInfo.address,oldContractABI);\n      }\n\n      let migrationContract = this.functionsUtil.getContractByName(this.props.tokenConfig.migration.migrationContract.name);\n\n      if (!migrationContract && this.props.tokenConfig.migration.migrationContract.abi){\n        migrationContract = await this.props.initContract(this.props.tokenConfig.migration.migrationContract.name,this.props.tokenConfig.migration.migrationContract.address,this.props.tokenConfig.migration.migrationContract.abi);\n      }\n\n      if (oldContract && migrationContract){\n\n        oldTokenName = this.props.tokenConfig.migration.oldContract.token;\n\n        [\n          oldContractTokenDecimals,\n          migrationContractApproved,\n          oldContractBalance,\n          oldTokenPrice,\n        ] = await Promise.all([\n          // Get old contract token decimals\n          this.functionsUtil.getTokenDecimals(oldContractName),\n          // Check migration contract approval\n          this.checkMigrationContractApproved(),\n          // Check old contractBalance\n          this.functionsUtil.getContractBalance(oldContractName,this.props.account),\n          // Get token price\n          (getTokenPrice ? this.functionsUtil.genericContractCall(oldContractName,'tokenPrice') : null)\n        ]);\n\n        // console.log('Migration',oldContractName,migrationContractApproved,this.props.selectedToken,oldContractBalance ? oldContractBalance.toString() : null,oldTokenPrice ? oldTokenPrice.toString() : null);\n\n        if (oldContractBalance){\n          // Convert old idleTokens\n          oldIdleTokens = this.functionsUtil.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          if (oldTokenPrice){\n            oldTokenPrice = this.functionsUtil.fixTokenDecimals(oldTokenPrice,this.props.tokenConfig.decimals);\n            oldIdleTokensConverted = this.functionsUtil.BNify(oldIdleTokens).times(this.functionsUtil.BNify(oldTokenPrice));\n          }\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.functionsUtil.BNify(oldContractBalance).gt(0);\n        }\n      }\n    }\n    \n    loading = false;\n\n    // If use Permit don't ask for Approve\n    const usePermit = this.props.usePermit;\n\n    const newState = {\n      loading,\n      usePermit,\n      oldTokenName,\n      oldIdleTokens,\n      migrationEnabled,\n      oldContractBalance,\n      oldIdleTokensConverted,\n      oldContractTokenDecimals,\n      migrationContractApproved\n    };\n\n    if (this.props.biconomy){\n      const biconomyLimits = await this.functionsUtil.checkBiconomyLimits(this.props.account);\n      if (biconomyLimits && !biconomyLimits.allowed){\n        newState.biconomyLimitReached = true;\n      }\n    }\n\n    if (typeof this.props.migrationEnabledCallback === 'function'){\n      this.props.migrationEnabledCallback(migrationEnabled);\n    }\n\n    // console.log('checkMigration',this.props.selectedToken,'usePermit',this.props.usePermit,'migrationContractApproved',newState.migrationContractApproved);\n\n    // Set migration contract balance\n    return this.setState(newState);\n  }\n\n  disapproveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n      this.disableERC20(null,this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address);\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n  }\n\n  approveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      if (!migrationContractApproved){\n\n        const callbackApprove = (tx,error) => {\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: 'approve',\n            eventLabel: tx ? tx.status : null\n          };\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // console.log('callbackApprove',tx,error);\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            migrationContractApproved: txSucceeded, // True\n            processing: {\n              ...prevState.processing,\n              approve:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n            this.props.callbackApprove(tx);\n          }\n\n          this.checkMigration();\n        };\n\n        const callbackReceiptApprove = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              approve:{\n                ...prevState.processing.approve,\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.functionsUtil.enableERC20(this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address,callbackApprove,callbackReceiptApprove);\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            approve:{\n              txHash:null,\n              loading:true\n            }\n          },\n          migrationContractApproved:false\n        }));\n      } else {\n        this.setState({\n          migrationContractApproved:true\n        });\n      }\n    }\n  }\n\n  migrate = async (e,migrationMethod) => {\n    e.preventDefault();\n\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      // const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      // if (!migrationContractApproved){\n      //   return this.approveMigration();\n      // } else {\n        const callbackMigrate = (tx,error) => {\n\n          if (!error && tx && tx.status === 'error'){\n            error = {\n              message:'Unknown error'\n            };\n          } else if (!tx && error){\n            tx = {\n              status:'error'\n            };\n          }\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: migrationMethod,\n            eventLabel: tx ? tx.status : null,\n            eventValue: parseInt(oldIdleTokens)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          // console.log('callbackMigrate',tx,tx.status,txSucceeded,error,this.props.migrationCallback);\n\n          if (txSucceeded){\n            // Toast message\n            window.toastProvider.addMessage(`Migration completed`, {\n              secondaryMessage: `Your funds has been migrated`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"success\",\n            });\n\n            if (this.props.migrationCallback && typeof this.props.migrationCallback === 'function'){\n              this.props.migrationCallback(tx);\n            }\n\n          } else { // Show migration error toast only for real error\n            window.toastProvider.addMessage(`Migration error`, {\n              secondaryMessage: `The migration has failed, try again...`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n            });\n\n            // Check migration if failed\n            this.checkMigration();\n          }\n\n          this.setState((prevState) => ({\n            migrationEnabled:txSucceeded ? false : true,\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n        }\n\n        const callbackReceiptMigrate = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                ...prevState.processing.migrate,\n                txHash\n              }\n            }\n          }));\n        };\n\n        const callbackPermit = () => {\n          if (typeof this.props.callbackPermit === 'function'){\n            this.props.callbackPermit();\n          }\n        }\n\n        const useMetaTx = this.props.useMetaTx !== false && this.props.biconomy && this.state.metaTransactionsEnabled && !this.state.biconomyLimitReached;\n\n        // Call migration contract function to migrate funds\n        const oldIdleTokens = this.state.oldIdleTokens;\n        const toMigrate = this.props.showBalanceSelector ? this.functionsUtil.integerValue(this.functionsUtil.normalizeTokenAmount(this.state.inputValue[this.state.action],this.state.oldContractTokenDecimals)) : this.functionsUtil.integerValue(this.state.oldContractBalance);\n        // const toMigrate =  this.functionsUtil.normalizeTokenAmount('1',this.state.oldContractTokenDecimals).toString(); // TEST AMOUNT\n\n        let _skipRebalance = typeof this.props.tokenConfig.skipMintForDeposit !== 'undefined' ? this.props.tokenConfig.skipMintForDeposit : this.functionsUtil.getGlobalConfig(['contract','methods','migrate','skipRebalance']);\n\n        // Mint if someone mint over X amount\n        let minAmountForRebalance = null;\n        \n        if (_skipRebalance){\n\n          // Check if the amount is over a certain amount to rebalance the pool\n          if (useMetaTx){\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalanceMetaTx']);\n          } else {\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalance']);\n          }\n\n          if (minAmountForRebalance){\n            const amountToDeposit = await this.functionsUtil.convertTokenBalance(oldIdleTokens,this.props.selectedToken,this.props.tokenConfig,false);\n            if (amountToDeposit.gte(this.functionsUtil.BNify(minAmountForRebalance))){\n              _skipRebalance = false;\n            }\n          }\n        }\n\n        let migrationParams = this.props.migrationParams ? this.props.migrationParams : [toMigrate,this.props.tokenConfig.migration.oldContract.address,this.props.tokenConfig.idle.address,this.props.tokenConfig.address,_skipRebalance];\n\n        if (typeof migrationParams === 'function'){\n          migrationParams = migrationParams(toMigrate);\n        }\n\n        // Check if Biconomy is enabled\n        if (useMetaTx){\n          const functionSignature = migrationContract.methods[migrationMethod](...migrationParams).encodeABI();\n          this.functionsUtil.sendBiconomyTxWithPersonalSign(migrationContractInfo.name, functionSignature, callbackMigrate, callbackReceiptMigrate);\n          // this.functionsUtil.sendBiconomyTx(migrationContractInfo.name, migrationContractInfo.address, functionSignature, callbackMigrate, callbackReceiptMigrate);\n        } else {\n          const permitContract = this.functionsUtil.getContractByName(this.props.tokenConfig.name);\n          const functionInfo = migrationContractInfo.functions.find( f => f.name === migrationMethod );\n          if (this.props.usePermit && permitContract){\n            this.functionsUtil.sendTxWithPermit(this.props.tokenConfig.name, this.props.account, migrationContractInfo.name, functionInfo.permitName, migrationParams, callbackMigrate, callbackReceiptMigrate, callbackPermit);\n          } else {\n            // Send migration tx\n            this.functionsUtil.contractMethodSendWrapper(migrationContractInfo.name, migrationMethod, migrationParams, callbackMigrate, callbackReceiptMigrate);\n          }\n        }\n\n        // debugger;\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            migrate:{\n              txHash:null,\n              loading:true\n            }\n          }\n        }));\n      // }\n    }\n\n    return false;\n  }\n\n  render() {\n\n    if (!this.props.tokenConfig || !this.props.selectedToken){\n      return null;\n    }\n\n    const contractApproved = this.props.usePermit || this.state.migrationContractApproved;\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationEnabled = batchMigrationInfo.enabled && typeof batchMigrationInfo.props.availableTokens[this.props.tokenConfig.idle.token] !== 'undefined';\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    // console.log('contractApproved',contractApproved,this.props.usePermit,this.state.migrationContractApproved);\n\n    const SkipMigrationComponent = (props) => (\n      <DashboardCard\n        cardProps={{\n          pt:2,\n          pb:3,\n          px:2,\n          mb:2,\n          display:'flex',\n          alignItems:'center',\n          flexDirection:'column',\n          justifyContent:'center',\n          mt:this.state.skipMigration ? 3 : 2,\n        }}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={'FastForward'}\n          />\n        </Flex>\n        <Checkbox\n          required={false}\n          checked={this.state.skipMigration}\n          label={`Skip migration and deposit in Idle v4`}\n          onChange={ e => this.toggleSkipMigration(e.target.checked) }\n        />\n      </DashboardCard>\n    );\n\n    const biconomyEnabled = this.functionsUtil.getGlobalConfig(['network','providers','biconomy','enabled']) && !this.state.biconomyLimitReached;\n\n    return (\n      this.state.loading && this.props.account ? (\n        <DashboardCard\n          cardProps={{\n            p:3,\n            mt:3,\n            minHeight:'195px',\n            style:{\n              display:'flex',\n              alignItems:'center',\n              justifyContent:'center'\n            }\n          }}\n        >\n          <FlexLoader\n            flexProps={{\n              flexDirection:'row'\n            }}\n            loaderProps={{\n              size:'30px'\n            }}\n            textProps={{\n              ml:2\n            }}\n            text={'Checking migration...'}\n          />\n        </DashboardCard>\n      ) : (\n        (this.state.migrationEnabled && !this.state.skipMigration) ? (\n          <Box width={1}>\n            {\n              !this.props.isMigrationTool &&\n              <Flex\n                mt={3}\n                flexDirection={'column'}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  >\n                    <Icon\n                      size={'2.3em'}\n                      color={'cellText'}\n                      name={ this.props.isMigrationTool ? 'SwapHoriz' : 'Warning' }\n                    />\n                    <Text\n                      mt={1}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      { this.props.migrateTextBefore !== null ? this.props.migrateTextBefore : null }\n                      { this.props.migrateTextBefore !== null &&\n                        <br />\n                      }\n                      You { !this.props.isMigrationTool ? 'still' : '' } have <strong>{this.state.oldIdleTokens.toFixed(4)} {this.state.oldTokenName} {this.state.oldIdleTokensConverted ? `(${this.state.oldIdleTokensConverted.toFixed(4)} ${this.props.selectedToken})` : ''}</strong> to migrate.<br />\n                      { this.props.migrateText !== null ? this.props.migrateText : 'Please use the section below to migrate or redeem your old tokens.' }\n                    </Text>\n                  </Flex>\n                </DashboardCard>\n              </Flex>\n            }\n            {\n              (this.props.showActions === undefined || this.props.showActions) && \n                <Flex\n                  mt={2}\n                  flexDirection={'column'}\n                >\n                  {\n                    !this.props.isMigrationTool && \n                      <SkipMigrationComponent />\n                  }\n                  <Text mb={2}>\n                    Choose the action:\n                  </Text>\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('migrate');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'migrate' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'migrate'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Migrate\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('redeem');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'redeem' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'redeem'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Redeem\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n            }\n            {\n              this.state.action === 'migrate' ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  flexDirection={'column'}\n                >\n                  {\n                    (batchMigrationEnabled && batchMigrationDepositEnabled && !this.props.isMigrationTool) &&\n                      <Flex\n                        mb={3}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <Link\n                          textAlign={'center'}\n                          hoverColor={'primary'}\n                          href={`/#/dashboard/tools/${batchMigrationInfo.route}/${this.props.tokenConfig.idle.token}`}\n                        >\n                          Gas fees too high? Save gas with our Batch Migrator!\n                        </Link>\n                        <Icon\n                          ml={1}\n                          size={'1em'}\n                          color={'primary'}\n                          name={'LocalGasStation'}\n                        />\n                      </Flex>\n                  }\n                  {\n                    contractApproved ? (\n                      this.state.processing.migrate.loading ? (\n                        <Flex\n                          mt={3}\n                          flexDirection={'column'}\n                        >\n                          <TxProgressBar\n                            {...this.props}\n                            hash={this.state.processing.migrate.txHash}\n                            endMessage={`Finalizing migration request...`}\n                            cancelTransaction={this.cancelTransaction.bind(this)}\n                            waitText={ this.props.waitText ? this.props.waitText : 'Migration estimated in'}\n                            sendingMessage={ this.props.biconomy && this.state.metaTransactionsEnabled ? 'Sending meta-transaction...' : 'Sending transaction...' }\n                          />\n                        </Flex>\n                      ) : this.props.showBalanceSelector ? (\n                        <Flex\n                          mt={1}\n                          flexDirection={'column'}\n                        >\n                          <Flex\n                            mb={3}\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              mb={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                            >\n                              {\n                                this.props.balanceSelectorInfo && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                  >\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      textAlign={'left'}\n                                      style={{\n                                        maxWidth:'100%',\n                                        overflow:'hidden',\n                                        whiteSpace:'nowrap',\n                                        textOverflow:'ellipsis'\n                                      }}\n                                      color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                                    >\n                                      {this.props.balanceSelectorInfo.text}\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                              {\n                                this.state.oldIdleTokens && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'flex-end'}\n                                  >\n                                    <Link\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      color={'dark-gray'}\n                                      textAlign={'right'}\n                                      hoverColor={'copyColor'}\n                                      onClick={ (e) => this.setFastBalanceSelector(100) }\n                                    >\n                                      Balance: {this.state.oldIdleTokens.toFixed(6)} {this.props.selectedToken}\n                                    </Link>\n                                  </Flex>\n                                )\n                              }\n                            </Flex>\n                            <Input\n                              min={0}\n                              type={\"number\"}\n                              required={true}\n                              height={'3.4em'}\n                              borderRadius={2}\n                              fontWeight={500}\n                              borderColor={'cardBorder'}\n                              backgroundColor={'cardBg'}\n                              boxShadow={'none !important'}\n                              placeholder={'Insert amount'}\n                              onChange={this.changeInputValue.bind(this)}\n                              border={`1px solid ${this.props.theme.colors.divider}`}\n                              value={this.state.inputValue[this.state.action] ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toFixed() : ''}\n                            />\n                            <Flex\n                              mt={2}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              {\n                                [25,50,75,100].map( percentage => (\n                                  <FastBalanceSelector\n                                    percentage={percentage}\n                                    key={`selector_${percentage}`}\n                                    onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                                    isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(percentage)}\n                                  />\n                                ))\n                              }\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            mt={1}\n                            width={1}\n                            alignItems={'center'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      width:[1,0.5],\n                                      disabled:this.state.buttonDisabled,\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                          </Flex>\n                        </Flex>\n                      ) : (\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:2,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            {\n                              this.props.migrationImage ? (\n                                <Image\n                                  {...this.props.migrationImage}\n                                />\n                              ) : (\n                                <Icon\n                                  size={'2.3em'}\n                                  color={'cellText'}\n                                  name={ this.props.migrationIcon ? this.props.migrationIcon : (this.props.isMigrationTool ? 'SwapHoriz' : 'Repeat') }\n                                />\n                              )\n                            }\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                this.props.migrationText ? (\n                                  <Text.span\n                                    migrationTextProps={this.props.migrationTextProps}\n                                    dangerouslySetInnerHTML={{\n                                      __html:this.props.migrationText\n                                    }}\n                                  >\n                                  </Text.span>\n                                ) : (\n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    You are one step away from the migration of your { this.props.isMigrationTool ? this.state.oldIdleTokens.toFixed(4) : 'old' } {this.state.oldTokenName}{ this.props.isMigrationTool ? ` into the Idle ${this.props.tokenConfig.token} ${this.props.selectedStrategy} strategy` : '' }!\n                                  </Text.span>\n                                )\n                              }\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                            {\n                              biconomyEnabled && \n                                <Flex\n                                  py={3}\n                                  px={2}\n                                  mt={2}\n                                  width={1}\n                                  borderRadius={2}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                  backgroundColor={'dashboardBg'}\n                                  border={`1px solid ${this.props.theme.colors.boxBorder}`}\n                                >\n                                  <Text\n                                    mt={1}\n                                    fontSize={1}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    {\n                                      this.props.biconomy ?\n                                        `Meta-Transactions allow you to migrate without spending a dime! But, if you are stuck, please disable it and try again.`\n                                      :\n                                        'Your wallet does not support Meta-transactions, you are still able to migrate with a normal transaction.'\n                                    }\n                                  </Text>\n                                  {\n                                  this.props.biconomy &&\n                                    <Checkbox\n                                      mt={2}\n                                      required={false}\n                                      label={\"Migrate with Meta-Transaction\"}\n                                      checked={this.state.metaTransactionsEnabled}\n                                      onChange={ e => this.toggleMetaTransactionsEnabled(e.target.checked) }\n                                    />\n                                  }\n                                </Flex>\n                            }\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      mt:3,\n                                      width:[1,0.5],\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      )\n                    ) : this.state.processing.approve.loading ? (\n                      <Flex\n                        mt={3}\n                        flexDirection={'column'}\n                      >\n                        <TxProgressBar\n                          {...this.props}\n                          waitText={`Approve estimated in`}\n                          hash={this.state.processing.approve.txHash}\n                          endMessage={`Finalizing approve request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      </Flex>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          mt:2,\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            size={'2.3em'}\n                            name={'LockOpen'}\n                            color={'cellText'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              this.props.approveText ? this.props.approveText : `To migrate your ${ !this.props.isMigrationTool ? 'old' : '' } ${this.state.oldTokenName} you need to approve our Smart-Contract first.`\n                            }\n                          </Text>\n                          <RoundButton\n                            buttonProps={{\n                              mt:3,\n                              width:[1,1/2]\n                            }}\n                            handleClick={this.approveMigration.bind(this)}\n                          >\n                            Approve\n                          </RoundButton>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  }\n                </Flex>\n              ) : (\n                !this.state.processing[this.state.action].loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <Input\n                      min={0}\n                      type={\"number\"}\n                      required={true}\n                      height={'3.4em'}\n                      borderRadius={2}\n                      fontWeight={500}\n                      className={styles.input}\n                      borderColor={'cardBorder'}\n                      backgroundColor={'cardBg'}\n                      boxShadow={'none !important'}\n                      onChange={this.changeInputValue.bind(this)}\n                      border={`1px solid ${this.props.theme.colors.divider}`}\n                      placeholder={`Insert ${this.state.oldTokenName} amount`}\n                      value={this.state.inputValue[this.state.action] !== null ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toString() : ''}\n                    />\n                    <Flex\n                      mt={3}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'space-between'}\n                    >\n                      <FastBalanceSelector\n                        percentage={25}\n                        onMouseDown={()=>this.setFastBalanceSelector(25)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(25)}\n                      />\n                      <FastBalanceSelector\n                        percentage={50}\n                        onMouseDown={()=>this.setFastBalanceSelector(50)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(50)}\n                      />\n                      <FastBalanceSelector\n                        percentage={75}\n                        onMouseDown={()=>this.setFastBalanceSelector(75)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(75)}\n                      />\n                      <FastBalanceSelector\n                        percentage={100}\n                        onMouseDown={()=>this.setFastBalanceSelector(100)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(100)}\n                      />\n                    </Flex>\n                    <Flex\n                      mt={3}\n                      justifyContent={'center'}\n                    >\n                      <RoundButton\n                        buttonProps={{\n                          width:[1,1/2],\n                          disabled:this.state.buttonDisabled,\n                          style:{\n                            textTransform:'capitalize'\n                          }\n                        }}\n                        handleClick={this.state.buttonDisabled ? null : this.executeAction.bind(this) }\n                      >\n                        {this.state.action}\n                      </RoundButton>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mt={4}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      {...this.props}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      hash={this.state.processing[this.state.action].txHash}\n                      endMessage={`Finalizing ${this.state.action} request...`}\n                      waitText={`${this.functionsUtil.capitalize(this.state.action)} estimated in`}\n                    />\n                  </Flex>\n                )\n              )\n            }\n          </Box>\n        ) : (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'column'}\n            justifyContent={'center'}\n          >\n            {\n              (!this.props.isMigrationTool && this.state.migrationEnabled) && \n                <SkipMigrationComponent />\n            }\n            {\n              this.props.children ? this.props.children : null\n            }\n          </Flex>\n        )\n      )\n    )\n  }\n}\n\nexport default Migrate;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass ChartCustomTooltipRow extends Component {\n\n  async componentWillMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps,prevState){\n\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default ChartCustomTooltipRow;\n","import Footer from '../Footer/Footer';\nimport styles from './Tos.module.scss';\nimport React, { Component } from 'react';\nimport { Box, Flex, Text, Heading } from 'rimble-ui'\n\nclass Tos extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} pb={[3,5]} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} pb={3} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.2em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                Terms of Service\n              </Heading.h1>\n              <Heading.h2 fontWeight={'400'} lineHeight={['1.4em', '2em']} fontSize={[2,3]} textAlign={'center'} color={'white'}>\n                Updated: November 28, 2019\n              </Heading.h2>\n            </Flex>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"70em\"]} mx={'auto'} textAlign={'center'}>\n              <Box className={styles.textContainer} alignItems={'center'} width={'100%'} minHeight={['auto','20em']} backgroundColor={'white'} color={'dark-gray'} p={[3,4]} boxShadow={'0 0 25px 5px rgba(102, 139, 255, 0.7)'} borderRadius={'15px'} style={{position:'relative'}}>\n                <Box id={'first-paragraph'} pb={3}>\n                  <Text pb={3}>\n                    These terms of service, together with any documents and additional terms they expressly incorporate by reference (collectively, these “Terms”), are entered into between Idle Labs Inc. (“Idle,” “we,” “us” and “our”) and you or the company or other legal entity you represent (“you” or “your”), and constitute a binding legal agreement.\n                  </Text>\n                  <Text pb={3}>\n                    Please read these Terms carefully, as these Terms govern your use of our Portal and our Services, and expressly cover your rights and obligations, and our disclaimers and limitations of legal liability, relating to such use. By accessing or using the Interface, you signify that you have read, understand, and agree to be bound by and to comply with these Terms, including the mandatory arbitration provision in Section 12. If you do not agree to these Terms, you must not access or use our Portal or the Services.\n                  </Text>\n                  <Text pb={3}>\n                    You must be able to form a legally binding contract online either on behalf of a company or as an individual. Accordingly, you represent that: (a) if you are agreeing to these Terms on behalf of a company or other legal entity, you have the legal authority to bind the company or other legal entity to these Terms; and (b) you are at least 18 years old (or the age of majority where you reside, whichever is older), can form a legally binding contract online, and have the full, right, power and authority to enter into and to comply with the obligations under these Terms.\n                  </Text>\n                  <Text pb={3}>\n                    In addition to the foregoing, you also represent and warrant that you are not a citizen or resident of a state, country, territory or other jurisdiction that is embargoed by the United States or where your use of the Portal or the Services would be illegal or otherwise violate any applicable law.  Specifically, you represent that you are not located in, organized in, or a resident of New York, Cuba, Iran, Syria, North Korea, the Crimea region, Venezuela, or any other jurisdiction where Applicable law prohibits you from accessing or using the Services; and you represent that you are not be named on the Office of Foreign Asset Control of the U.S. Department of the Treasury’s Specially Designated and Blocked Persons List.\n                   </Text>\n                  <Text>\n                    Please carefully review the disclosures and disclaimers set forth in Section 9 in their entirety before using any software developed by Idle. The information in Section 9 provides important details about the legal obligations associated with your use of the Idle open-source software. By accessing or using our Portal or our Services, you agree that Idle is a provider of open-source software that optimizes the allocation of your digital assets to third-party decentralized web protocols.  Idle is not affiliated with and has no control over these third-party protocols and is not responsible for any losses that occur as a result of interconnection with these third-party protocols. The Protocol is open-source software deployed on the Ethereum Blockchain.  While Idle developed and deployed the Protocol, the software operates in an autonomous fashion on a decentralized network and, as a result, Idle has no control over user transactions. You accordingly acknowledge that you use the Services at your own risk and agree that Idle will not be responsible for any losses that occur as a result of your use of the Services.\n                  </Text>\n                </Box>\n\n                <Box id={'key-definitions'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    1. KEY DEFINITIONS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    For the purpose of these Terms, the following capitalized terms shall have the following meanings:\n                  </Text>\n\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>1.1. “Affiliate”</strong> means, with respect to a party to these Terms, any legal entity that, directly or indirectly controls, is controlled by, or is under common control with such party.\n                    </li>\n                    <li>\n                      <strong>1.2. “Applicable Law”</strong> means any domestic or foreign law, rule, statute, regulation, by-law, order, protocol, code, decree, or other directive, requirement or guideline, published or in force which applies to or is otherwise intended to govern or regulate any person, property, transaction, activity, event or other matter, including any rule, order, judgment, directive or other requirement or guideline issued by any Governmental Authority having jurisdiction over Idle, you, the Portal or the Services, or as otherwise duly enacted, enforceable by law, the common law or equity.\n                    </li>\n                    <li>\n                      <strong>1.3. “Ether”</strong> means the Ethereum Blockchain utility token that may be used to purchase computational resources to run decentralized applications or perform actions on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.4. “Ethereum Address”</strong> means the unique public key digital asset identifier that points to an Ethereum-compatible wallet to which Ether may be sent or stored.\n                    </li>\n                    <li>\n                      <strong>1.5. “Ethereum Blockchain”</strong> means the underlying blockchain infrastructure which the Portal leverages to perform portions of the Services.\n                    </li>\n                    <li>\n                      <strong>1.6. “Governmental Authority”</strong> includes any domestic or foreign federal, provincial or state, municipal, local or other governmental, regulatory, judicial or administrative authority.\n                    </li>\n                    <li>\n                      <strong>1.7. “Portal”</strong> means the Idle site located at https://idle.finance and all associated sites linked thereto by Idle and its Affiliates, which includes, for certainty, Idle’s decentralized application layer on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.8. “Protocol”</strong> means the Idle decentralized web protocol, which optimizes the allocation of users’ digital assets to third-party decentralized web protocols.\n                    </li>\n                    <li>\n                      <strong>1.9. “Token”</strong> means an “ERC-20” digital asset issued on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.10. “Services”</strong> has the meaning set out in Section 3.1.\n                    </li>\n                    <li>\n                      <strong>1.11. “Third-Parties Services”</strong> means other services (such as fiat-to-token gateway, or token-to-token swap) provided by third parties services running on Ethereum Blockchain.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'modifications-terms'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    2. MODIFICATIONS TO THESE TERMS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    We reserve the right, in our sole discretion, to modify these Terms from time to time. If we make changes, we will provide you with notice of such changes, such as by sending an email, providing a notice through our Services or updating the date at the top of these Terms. Unless we say otherwise in our notice, any and all such modifications are effective immediately, and your continued use of our Services after we provide such notice will confirm your acceptance of the changes. If you do not agree to the amended Terms, you must stop using our Services.\n                  </Text>\n                </Box>\n\n                <Box id={'services'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    3. SERVICES\n                  </Heading.h3>\n                </Box>\n\n                <ul className={styles.list}>\n                  <li>\n                    <strong>3.1. Services</strong><br />\n                    The primary purpose of the Portal and Protocol is to enable users to interact with smart contracts that allocate their digital assets to third-party decentralized web protocols and enable users to receive an optimized allocation of digital assets from these protocols in return (the “Services”).\n                  </li>\n                  <li>\n                    <strong>3.2. Fees</strong><br />\n                    Use of the Services is provided to you at no charge. Fees are charged on-top of Third-Parties.\n                  </li>\n                  <li>\n                    <strong>3.3. Ethereum Gas Charges</strong><br />\n                    Some Services involve the use of the Ethereum Blockchain, which may require that you pay a fee, commonly known as “Ethereum Gas Charges,” for the computational resources required to perform a transaction on the Ethereum Blockchain. You acknowledge and agree that Idle has no control over: (a) any Ethereum Blockchain transactions; (b) the method of payment of any Ethereum Gas Charges; or (c) any actual payments of Ethereum Gas Charges. Accordingly, you must ensure that you have a sufficient balance of Ether stored at your Ethereum Address to complete any transaction on the Ethereum Blockchain before initiating such Ethereum Blockchain transaction. We will make reasonable efforts to notify you of any Ethereum Gas Charges before initiating any Services that require the use of the Ethereum Blockchain.\n                  </li>\n                  <li>\n                    <strong>3.4. Conditions and Restrictions</strong><br />\n                    We may, at any time and in our sole discretion, restrict your access to, or otherwise impose conditions or restrictions upon your use of, the Services or the Portal, with or without prior notice.\n                  </li>\n                  <li>\n                    <strong>3.5. No Broker, Legal or Fiduciary Relationship</strong><br />\n                    Idle is not your broker, lawyer, intermediary, agent, or advisor and has no fiduciary relationship or obligation to you regarding any other decisions or activities that you effect when using the Portal or the Services. Neither our communications nor any information that we provide to you is intended as, or shall be considered or construed as, advice.\n                  </li>\n                  <li>\n                    <strong>3.6. Your Responsibilities</strong><br />\n                    As a condition to accessing or using the Services or the Portal, you shall:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>only use the Services and the Portal for lawful purposes and in accordance with these Terms;</li>\n                      <li>ensure that, at all times, all information that you provide on the Portal is current, complete and accurate; and maintain the security and confidentiality of your Ethereum Address.</li>\n                      <li>shall be responsible for payment of all applicable taxes, if any, to which the Services might be subject and any and all other taxes which may apply to you.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.7. Unacceptable Use or Conduct</strong><br />\n                    As a condition to accessing or using the Portal or the Services, you will not:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>violate any Applicable Law, including, without limitation, any relevant and applicable anti-money laundering and anti-terrorist financing laws, such as the Bank Secrecy Act, each as may be amended;</li>\n                      <li>infringe on or misappropriate any contract, intellectual property or other third-party right, or commit a tort while using the Portal or the Services;</li>\n                      <li>use the Services in any manner that could interfere with, disrupt, negatively affect, or inhibit other users from fully enjoying the Services, or that could damage, disable, overburden, or impair the functioning of the Services in any manner;</li>\n                      <li>attempt to circumvent any content filtering techniques or security measures that Idle employs on the Portal, or attempt to access any service or area of the Portal or the Services that you are not authorized to access;</li>\n                      <li>use the Services to pay for, support, or otherwise engage in any illegal gambling activities, fraud, money-laundering, or terrorist activities, or other illegal activities;</li>\n                      <li>use any robot, spider, crawler, scraper, or other automated means or interface not provided by us, to access the Services or to extract data;</li>\n                      <li>introduce any malware, virus, Trojan horse, worm, logic bomb, drop-dead device, backdoor, shutdown mechanism or other harmful material into the Portal or the Services;</li>\n                      <li>provide false, inaccurate, or misleading information;</li>\n                      <li>post content or communications on the Portal that are, in our sole discretion, libelous, defamatory, profane, obscene, pornographic, sexually explicit, indecent, lewd, vulgar, suggestive, harassing, hateful, threatening, offensive, discriminatory, bigoted, abusive, inflammatory, fraudulent, deceptive or otherwise objectionable;</li>\n                      <li>post content on the Portal containing unsolicited promotions, political campaigning, or commercial messages or any chain messages or user content designed to deceive or trick the user of the Service;</li>\n                      <li>use the Portal or the Services from a jurisdiction that we have, in our sole discretion, or a relevant Governmental Authority has determined is a jurisdiction where the use of the Portal or the Services is prohibited; or</li>\n                      <li>encourage or induce any third party to engage in any of the activities prohibited under this Section 3.7.</li>\n                    </ul>\n                  </li>\n\n                  <li>\n                    <strong>3.8. Your Assumption of Risks</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>have the necessary technical expertise and ability to review and evaluate the security, integrity and operation of any transactions that you engage in through the Protocol;</li>\n                      <li>have the knowledge, experience, understanding, professional advice and information to make your own evaluation of the merits, risks and applicable compliance requirements under Applicable Law of engaging in transactions through the Protocol;</li>\n                      <li>acknowledge and understand that the Protocol allocates your digital assets to third-party decentralized web protocols to facilitate your lending and borrowing through these third-party protocols and that Idle is not responsible or liable for these transactions or the operation of these third-party protocols;</li>\n                      <li>know, understand and accept the risks associated with your Ethereum Address, the Ethereum Blockchain, Ether and Tokens; and</li>\n                      <li>accept the risks associated with lending, borrowing and trading Ether and Tokens, and are responsible for conducting your own independent analysis of the risks specific to any Ether and Tokens lent, borrowed or traded by you and your use of the Services.</li>\n                    </ul>\n                    You hereby assume, and agree that Idle will have no responsibility or liability for, such risks. You hereby irrevocably waive, release and discharge all claims, whether known or unknown to you, against Idle, its affiliates and their respective shareholders, members, directors, officers, employees, agents and representatives related to any of the risks set forth herein.\n                  </li>\n                  <li>\n                    <strong>3.9. Additional Representations</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>are not using the Protocol to engage in the leveraged, margined, or financed purchase of digital assets; and</li>\n                      <li>are using the Protocol for the purpose of accessing third-party decentralized web protocols.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.10. Your Content</strong><br />\n                    You hereby grant to us a royalty-free, fully paid-up, sublicensable, transferable, perpetual, irrevocable, non-exclusive, worldwide license to use, copy, modify, create derivative works of, display, perform, publish and distribute, in any form, medium or manner, any content that is available to other users via the Idle Platform as a result of your use of the Portal (collectively, “Your Content”) through your use of the Services or the Portal, including, without limitation, for promoting Idle (or its Affiliates), the Services or the Portal. You represent and warrant that: (a) you own Your Content or have the right to grant the rights and licenses in these Terms; and (b) Your Content and our use of Your Content, as licensed herein, does not and will not violate, misappropriate or infringe on any third party’s rights.\n                  </li>\n                </ul>\n\n                <Box id={'privacy-policy'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    4. PRIVACY POLICY\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please refer to our privacy policy available at https://idle.finance/privacy-policy for information about how we collect, use, share and otherwise process information about you.\n                  </Text>\n                </Box>\n\n                <Box id={'proprietary-rights'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    5. PROPRIETARY RIGHTS\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>5.1. Ownership of Services; License to Services</strong><br />\n                      Excluding any open source software (as further described in Section 5.2) or third-party software that the Portal or the Services incorporates, as between you and Idle, Idle owns the Portal and the Services, including all technology, content and other materials used, displayed or provided on the Portal or in connection with the Services (including all intellectual property rights subsisting therein), and hereby grants you a limited, revocable, transferable, license to access and use those portions of the Portal and the Services that are proprietary to Idle.\n                    </li>\n                    <li>\n                      <strong>5.2. Idle License; Open Source Software License; Limitations</strong><br />\n                      The Portal and the Services are governed by the most recent version of the open source license commonly known as the Apache 2.0 a copy of which (as it applies to the Portal and the Services) can be found at:  https://apache.org/licenses/LICENSE-2.0 (as of the date these Terms were last updated) and any other applicable licensing terms for the Portal and the Services in these Terms (collectively, the “Idle License”). You acknowledge that the Portal or the Services may use, incorporate or link to certain open-source components and that your use of the Portal or Services is subject to, and you will comply with any, applicable open-source licenses that govern any such open-source components (collectively, “Open-Source Licenses”). Without limiting the generality of the foregoing, you may not: (a) resell, lease, lend, share, distribute or otherwise permit any third party to use the Portal or the Services; (b) use the Portal or the Services for time-sharing or service bureau purposes; or (c) otherwise use the Portal or the Services in a manner that violates the Idle License or any other Open-Source Licenses.\n                    </li>\n                    <li>\n                      <strong>5.3. Trademarks</strong><br />\n                      Any of Idle’s product or service names, logos, and other marks used in the Portal or as a part of the Services, including Idle's name and logo are trademarks owned by Idle, its Affiliates or its applicable licensors. You may not copy, imitate or use them without Idle’s (or the applicable licensor’s) prior written consent.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'changes-suspension-termination'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    6. CHANGES; SUSPENSION; TERMINATION\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>6.1. Changes to Services</strong><br />\n                      We may, at our sole discretion, from time to time and with or without prior notice to you, modify, suspend or disable, temporarily or permanently, the Services, in whole or in part, for any reason whatsoever, including, but not limited to, as a result of a security incident.\n                    </li>\n                    <li>\n                      <strong>6.2. No Liability</strong><br />\n                      We will not be liable for any losses suffered by you resulting from any modification to any Services or from any suspension or termination, for any reason, of your access to all or any portion of the Portal or the Services.\n                    </li>\n                    <li>\n                      <strong>6.3. Survival</strong><br />\n                      The following sections will survive any termination of your access to the Portal or the Services, regardless of the reasons for its expiration or termination, in addition to any other provision which by law or by its nature should survive: Sections 1, 4, 5, 6.3, and 7-14.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'electronic-notices'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    7. ELECTRONIC NOTICES\n                  </Heading.h3>\n                  <Text py={2}>\n                    You consent to receive all communications, agreements, documents, receipts, notices, and disclosures electronically (collectively, our “Communications”) that we provide in connection with these Terms or any Services. You agree that we may provide our Communications to you by posting them on the Portal or by emailing them to you at the email address you provide in connection with using the Services, if any. You should maintain copies of our Communications by printing a paper copy or saving an electronic copy. You may also contact our support team to request additional electronic copies of our Communications by filing a support request at info@idle.finance.\n                  </Text>\n                </Box>\n\n                <Box id={'indemnification'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    8. INDEMNIFICATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    You will defend, indemnify, and hold harmless us, our Affiliates, and our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers and contractors (collectively, “Indemnified Parties”) from any claim, demand, lawsuit, action, proceeding, investigation, liability, damage, loss, cost or expense, including without limitation reasonable attorneys’ fees, arising out of or relating to (a) your use of, or conduct in connection with, the Portal, Services or Margin Tokens; (b) Ethereum Blockchain assets associated with your Ethereum Address; (c) any feedback or user content you provide to the Portal, if any; (d) your violation of these Terms; or (e) your infringement or misappropriation of the rights of any other person or entity. If you are obligated to indemnify any Indemnified Party, Idle (or, at its discretion, the applicable Indemnified Party) will have the right, in its sole discretion, to control any action or proceeding and to determine whether Idle wishes to settle, and if so, on what terms.\n                  </Text>\n                </Box>\n\n                <Box id={'disclosures-disclaimers'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    9. Disclosures; DISCLAIMERS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Idle is a developer of open-source software. Idle does not operate a digital asset exchange platform or execute peer-to-peer transactions through its Protocol and therefore has no oversight, involvement, or control with respect to your transactions, which are executed through third-party protocols and the Ethereum Blockchain.  The Protocol is an autonomous decentralized web protocol deployed to the Ethereum Blockchain that operates in a disintermediated fashion, and, as such, Idle does not participate in any of these transactions.  In each instance, when you interact with the Protocol, you are interacting with a smart contract that transfers your digital assets to a third-party protocol.\n                  </Text>\n                  <Text py={2}>\n                    [Under U.S. federal law, unless you are an “eligible contract participant” as defined in 7 U.S.C. § 1a(18), your transaction must settle within 28 days. Individuals who do not have more than $10 million invested on a discretionary basis (or $5 million if the transaction is for the purpose of managing risk associated with an asset owned or liability incurred, or reasonably likely to be owned or incurred) are not eligible contract participants and may not enter into transactions using the Idle open-source software that do not result in actual delivery of digital assets within 28 days.]\n                  </Text>\n                  <Text py={2}>\n                    You are responsible for complying with all laws and regulations applicable to your transactions, including, but not limited to, the Commodity Exchange Act and the regulations promulgated thereunder by the U.S. Commodity Futures Trading Commission (“CFTC”), and the federal securities laws and the regulations promulgated thereunder by the U.S. Securities and Exchange Commission (“SEC”).\n                  </Text>\n                  <Text py={2}>\n                    You understand that Idle is not registered or licensed by the CFTC, SEC, the Financial Crimes Enforcement Network or any financial regulatory authority. No financial regulatory authority has reviewed or approved the use of the Idle open-source software. This website and the Idle open-source software do not constitute advice or a recommendation concerning any commodity, security or other asset. Idle is not acting as an investment adviser or commodity trading adviser to any person.\n                  </Text>\n                  <Text py={2}>\n                    Idle does not own or control the underlying software protocols that enable the Protocol to function. In general, the underlying protocols are open-source and anyone can use, copy, modify, and distribute them. Idle is not responsible for operation of the underlying protocols, and Idle makes no guarantee of their functionality, security, or availability.\n                  </Text>\n                  <Text py={2}>\n                    To the maximum extent permitted under Applicable Law, the Portal and the Services (and any of their content or functionality) provided by or on behalf of us are provided on an “AS IS” and “AS AVAILABLE” basis, and we expressly disclaim, and you hereby waive, any representations, conditions or warranties of any kind, whether express or implied, legal, statutory or otherwise, or arising from statute, otherwise in law, course of dealing, or usage of trade, including, without limitation, the implied or legal warranties and conditions of merchantability, merchantable quality, quality or fitness for a particular purpose, title, security, availability, reliability, accuracy, quiet enjoyment and non-infringement of third party rights. Without limiting the foregoing, we do not represent or warrant that the Portal or the Services (including any data relating thereto) will be uninterrupted, available at any particular time or error-free. Further, we do not warrant that errors in the Portal or the Service are correctable or will be correctable.\n                  </Text>\n                  <Text py={2}>\n                    You acknowledge that your data on the Portal may become irretrievably lost or corrupted or temporarily unavailable due to a variety of causes, and agree that, to the maximum extent permitted under Applicable Law, we will not be liable for any loss or damage caused by denial-of-service attacks, software failures, viruses or other technologically harmful materials (including those which may infect your computer equipment), protocol changes by third party providers, Internet outages, force majeure events or other disasters, scheduled or unscheduled maintenance, or other causes either within or outside our control.\n                  </Text>\n                  <Text py={2}>\n                    The disclaimer of implied warranties contained herein may not apply if and to the extent such warranties cannot be excluded or limited under the Applicable Law of the jurisdiction in which you reside.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    10. EXCLUSION OF CONSEQUENTIAL AND RELATED DAMAGES\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall we (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) be liable for any incidental, indirect, special, punitive, consequential or similar damages or liabilities whatsoever (including, without limitation, damages for loss of data, information, revenue, goodwill, profits or other business or financial benefit) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any execution or settlement of a transaction, any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability, breach of warranties, or under any other theory of liability, and whether or not we have been advised of, knew of or should have known of the possibility of such damages and notwithstanding any failure of the essential purpose of these Terms or any limited remedy hereunder nor is Idle in any way responsible for the execution or settlement of transactions between users of Idle open-source software.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    11. LIMITATION OF LIABILITY\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall our aggregate liability (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability or other theory of liability exceed the amount of fees paid by you to us under these Terms, if any, in the twelve (12) month period immediately preceding the event giving rise to the claim for liability.\n                  </Text>\n                </Box>\n\n                <Box id={'dispute-resolution-arbitration'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    12. DISPUTE RESOLUTION AND ARBITRATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please read the following section carefully because it requires you to arbitrate certain disputes and claims with Idle and limits the manner in which you can seek relief from us, unless you opt out of arbitration by following the instructions set forth below. In addition, arbitration precludes you from suing in court or having a jury trial.\n                    You and Idle agree that any dispute arising out of or related to these Terms or our Services is personal to you and Idle and that any dispute will be resolved solely through individual action, and will not be brought as a class arbitration, class action or any other type of representative proceeding.\n                  </Text>\n                  <Text py={2}>\n                    Except for small claims disputes in which you or Idle seeks to bring an individual action in small claims court located in the county of your billing address or disputes in which you or Idle seeks injunctive or other equitable relief for the alleged unlawful use of intellectual property, you and Idle waive your rights to a jury trial and to have any dispute arising out of or related to these Terms or our Services resolved in court. Instead, for any dispute or claim that you have against Idle or relating in any way to the Services, you agree to first contact Idle and attempt to resolve the claim informally by sending a written notice of your claim (“Notice”) to Idle by email at info@idle.finance or by certified mail addressed to info@idle.finance. The Notice must (a) include your name, residence address, email address, and telephone number; (b) describe the nature and basis of the claim; (c) set forth the specific relief sought. Our notice to you will be similar in form to that described above. If you and Idle cannot reach an agreement to resolve the claim within thirty (30) days after such Notice is received, then either party may submit the dispute to binding arbitration administered by JAMS or, under the limited circumstances set forth above, in court. All disputes submitted to JAMS will be resolved through confidential, binding arbitration before one arbitrator. Arbitration proceedings will be held in New York City, New York, in accordance with the JAMS Streamlined Arbitration Rules and Procedures (“JAMS Rules”). The most recent version of the JAMS Rules are available on the JAMS website and are hereby incorporated by reference. You either acknowledge and agree that you have read and understand the JAMS Rules or waive your opportunity to read the JAMS Rules and waive any claim that the JAMS Rules are unfair or should not apply for any reason.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that these Terms affect interstate commerce and that the enforceability of this Section 12 will be substantively and procedurally governed by the Federal Arbitration Act, 9 U.S.C. § 1, et seq. (the “FAA”), to the maximum extent permitted by applicable law. As limited by the FAA, these Terms and the JAMS Rules, the arbitrator will have exclusive authority to make all procedural and substantive decisions regarding any dispute and to grant any remedy that would otherwise be available in court, including the power to determine the question of arbitrability. The arbitrator may conduct only an individual arbitration and may not consolidate more than one individual’s claims, preside over any type of class or representative proceeding or preside over any proceeding involving more than one individual.\n                  </Text>\n                  <Text py={2}>\n                    The arbitrator, Idle, and you will maintain the confidentiality of any arbitration proceedings, judgments and awards, including, but not limited to, all information gathered, prepared and presented for purposes of the arbitration or related to the dispute(s) therein. The arbitrator will have the authority to make appropriate rulings to safeguard confidentiality, unless the law provides to the contrary. The duty of confidentiality does not apply to the extent that disclosure is necessary to prepare for or conduct the arbitration hearing on the merits, in connection with a court application for a preliminary remedy or in connection with a judicial challenge to an arbitration award or its enforcement, or to the extent that disclosure is otherwise required by law or judicial decision.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that for any arbitration you initiate, you will pay the filing fee and Idle will pay the remaining JAMS fees and costs. For any arbitration initiated by Idle, Idle will pay all JAMS fees and costs. You and Idle agree that the state or federal courts of the State of New York and the United States sitting in New York City, New York have exclusive jurisdiction over any appeals and the enforcement of an arbitration award.\n                  </Text>\n                  <Text py={2}>\n                    Any claim arising out of or related to these Terms or our Services must be filed within one year after such claim arose; otherwise, the claim is permanently barred, which means that you and Idle will not have the right to assert the claim.\n                  </Text>\n                  <Text py={2}>\n                    You have the right to opt out of binding arbitration within 30 days of the date you first accepted the terms of this Section 12 by emailing us at info@idle.finance. In order to be effective, the opt-out notice must include your full name and address and clearly indicate your intent to opt out of binding arbitration. By opting out of binding arbitration, you are agreeing to resolve disputes in accordance with Section 13.\n                  </Text>\n                  <Text py={2}>\n                    If any portion of this Section 12 is found to be unenforceable or unlawful for any reason, (a) the unenforceable or unlawful provision shall be severed from these Terms; (b) severance of the unenforceable or unlawful provision shall have no impact whatsoever on the remainder of this Section 12 or the parties’ ability to compel arbitration of any remaining claims on an individual basis pursuant to this Section 12; and (c) to the extent that any claims must therefore proceed on a class, collective, consolidated, or representative basis, such claims must be litigated in a civil court of competent jurisdiction and not in arbitration, and the parties agree that litigation of those claims shall be stayed pending the outcome of any individual claims in arbitration. Further, if any part of this Section 12 is found to prohibit an individual claim seeking public injunctive relief, that provision will have no effect to the extent such relief is allowed to be sought out of arbitration, and the remainder of this Section 12 will be enforceable.\n                  </Text>\n                </Box>\n\n                <Box id={'governing-law'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    13. GOVERNING LAW\n                  </Heading.h3>\n                  <Text py={2}>\n                    The interpretation and enforcement of these Terms, and any dispute related to these Terms, the Portal or the Services, will be governed by and construed and enforced in accordance with the laws of the State of Delaware, as applicable, without regard to conflict of law rules or principles (whether of the State of Delaware or any other jurisdiction) that would cause the application of the laws of any other jurisdiction. You agree that we may initiate a proceeding related to the enforcement or validity of our intellectual property rights in any court having jurisdiction. With respect to any other proceeding that is not subject to arbitration under these Terms, the state and federal courts located in Wilmington, Delaware, will have exclusive jurisdiction. You waive any objection to venue in any such courts.\n                  </Text>\n                </Box>\n\n                <Box id={'miscellaneous'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    14. MISCELLANEOUS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Any right or remedy of Idle set forth in these Terms is in addition to, and not in lieu of, any other right or remedy whether described in these Terms, under Applicable Law, at law or in equity. Our failure or delay in exercising any right, power, or privilege under these Terms shall not operate as a waiver thereof. The invalidity or unenforceability of any of these Terms shall not affect the validity or enforceability of any other of these Terms, all of which shall remain in full force and effect. We will have no responsibility or liability for any failure or delay in performance of the Portal or any of the Services, or any loss or damage that you may incur, due to any circumstance or event beyond our control, including without limitation any flood, extraordinary weather conditions, earthquake, or other act of God, fire, war, insurrection, riot, labor dispute, accident, action of government, communications, power failure, or equipment or software malfunction. You may not assign or transfer any right to use the Portal or the Services, or any of your rights or obligations under these Terms, without our express prior written consent, including by operation of law or in connection with any change of control. We may assign or transfer any or all of our rights or obligations under these Terms, in whole or in part, without notice or obtaining your consent or approval. Headings of sections are for convenience only and shall not be used to limit or construe such sections. These Terms contain the entire agreement and supersede all prior and contemporaneous understandings between the parties regarding the Portal and the Services. In the event of any conflict between these Terms and any other agreement you may have with us, these Terms will control unless the other agreement specifically identifies these Terms and declares that the other agreement supersedes these Terms.\n                  </Text>\n                </Box>\n\n              </Box>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default Tos;\n","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from 'polished';\n\n// theme.js\nexport default {\n  breakpoints: ['52em', '64em'],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5,\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: ['0', '4px', '8px', '16px', '2rem'],\n  width: [0, 16, 32, 64, 128, 256],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, '1px solid #0d2034', '1px solid #475d7c'],\n  borderWidths: ['0', '1px', '2px', '4px'],\n  shadows: [\n    '0',\n    '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    '0 7px 14px rgba(50,50,93,.1)',\n    '1px 1px 0px rgba(0,0,0,0.2)',\n    '0px 0px 16px 2px rgb(71,93,123,0.6)'\n  ],\n  opacity: {\n    disabled: 0.4,\n  },\n  colors: {\n    primary: '#fcfcfc',\n    'gradient-bg': 'linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)',\n    'primary-light': blue.light[1],\n    'primary-dark': blue.dark[1],\n    bgBlue: '#0030e0',\n    blue: '#0036ff',\n    tick: \"#00b84a\",\n    'dark-blue': '#00219a',\n    skyBlue: '#00abfe',\n    lightBlue: '#79f4e1',\n    copyColor: '#fcfcfc',\n    subColor: '#a7a7a7',\n    black: baseColors.black,\n    'near-black': '#1e3657',\n    'dark-gray': '#fcfcfc',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#a4aec6',\n    white: '#fff',\n    transparent: 'transparent',\n    green: '#00b84a',\n    /*\n    NEW COLORS\n    */\n    text: \"#C6CBD2\",\n    border: \"#546278\",\n    newblue: \"#2B65D9\",\n    alert: '#ff9900',\n    arrowActive: '#d8d8d8',\n    arrowInactive: '#4f4f4f',\n    selectBgFocused: '#1e3657',\n    selectBg: '#162e4d',\n    backButtonBg: '#162e4d',\n    lineChartStroke: '#a4aec6',\n    wrongNetworkBannerBg: '#0e2133',\n    dashboardBg: '#13273f',\n    statValue: '#a4aec6',\n    boxBorder: '#eeeeee',\n    cellTitle: '#a4aec6',\n    cellText: '#a4aec6',\n    divider: '#a4aec6',\n    counter: '#a4aec6',\n    redeem: '#00a9fe',\n    link: '#00a9fe',\n    deposit: '#0239ff',\n    migrate: '#00a9fe',\n    legend: '#c9c9c9',\n    cardBg: '#162e4d',\n    menuBg: '#162e4d',\n    menuHover: '#1e3657',\n    flashColor: '#bac5ff',\n    cardBgHover: '#1e3657',\n    cardBorder: '#0d2034',\n    pageActive: '#d8d8d8',\n    pageInactive: '#4f4f4f',\n    menuIconActive: '#2a65d9',\n    cardBgContrast: \"#1e3657\",\n    menuRightBorder: '#0d2034',\n    experimental: \"#8500ff\",\n    production: \"#00b84a\",\n    cardHoverShadow: '0px 0px 0px 1px rgb(45 74 114)',\n    transactions: {\n      action: {\n        send: '#10a0dd',\n        swap: '#3d53c0',\n        exit: '#10a0dd',\n        boost: '#ffff00',\n        redeem: '#10a0dd',\n        swapout: '#10a0dd',\n        deposit: '#3d53c0',\n        curvein: '#10a0dd',\n        receive: '#3d53c0',\n        migrate: '#3d53c0',\n        default: '#4f4f4f',\n        curveout: '#3d53c0',\n        withdraw: '#10a0dd',\n        curvedepositin: '#10a0dd',\n        curvedepositout: '#3d53c0'\n      },\n      actionBg: {\n        send: '#ceeff6',\n        swap: '#ced6ff',\n        exit: '#ceeff6',\n        boost: '#ff7979',\n        redeem: '#ceeff6',\n        swapout: '#ceeff6',\n        deposit: '#ced6ff',\n        curvein: '#ceeff6',\n        default: '#dadada',\n        receive: '#ced6ff',\n        migrate: '#ced6ff',\n        withdraw: '#ceeff6',\n        curveout: '#ced6ff',\n        curvedepositin: '#ceeff6',\n        curvedepositout: '#ced6ff'\n      },\n      status: {\n        completed: '#00b84a',\n        pending: '#a5a5a5',\n        failed: '#fa0000'\n      }\n    },\n    blacks: [\n      'rgba(0,0,0,.0125)',\n      'rgba(0,0,0,.025)',\n      'rgba(0,0,0,.05)',\n      'rgba(0,0,0,.1)',\n      'rgba(0,0,0,.2)',\n      'rgba(0,0,0,.3)',\n      'rgba(0,0,0,.4)',\n      'rgba(0,0,0,.5)',\n      'rgba(0,0,0,.6)',\n      'rgba(0,0,0,.7)',\n      'rgba(0,0,0,.8)',\n      'rgba(0,0,0,.9)',\n    ],\n    whites: [\n      'rgba(255,255,255,.0125)',\n      'rgba(255,255,255,.025)',\n      'rgba(255,255,255,.05)',\n      'rgba(255,255,255,.1)',\n      'rgba(255,255,255,.2)',\n      'rgba(255,255,255,.3)',\n      'rgba(255,255,255,.4)',\n      'rgba(255,255,255,.5)',\n      'rgba(255,255,255,.6)',\n      'rgba(255,255,255,.7)',\n      'rgba(255,255,255,.8)',\n      'rgba(255,255,255,.9)',\n    ],\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base,\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base,\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base,\n    },\n    info: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      '--main-color': blue.base,\n      '--contrast-color': blue.text,\n    },\n    normal: {\n      color: baseColors.black,\n      '--contrast-color': baseColors.black,\n    },\n    success: {\n      '--main-color': green.base,\n      '--contrast-color': green.text,\n    },\n    danger: {\n      '--main-color': red.base,\n      '--contrast-color': red.text,\n    },\n  },\n  buttonSizes: {\n    small: {\n      fontSize: '0.75rem',\n      height: '2rem',\n      minWidth: '2rem',\n      padding: '0 1rem',\n    },\n    medium: {\n      fontSize: '1rem',\n      height: '3rem',\n      minWidth: '3rem',\n    },\n    large: {\n      fontSize: '1.5rem',\n      height: '4rem',\n      minWidth: '4rem',\n      borderRadius: '2rem'\n    },\n  },\n};\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class TorusConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Torus, initParams, ...rest } = kwargs;\n    super(rest);\n\n    this.torus = null;\n    this.Torus = Torus;\n    this.initParams = initParams;\n  }\n\n  async onActivation() {\n    if (!this.torus) {\n      this.torus = new this.Torus({\n        buttonPosition: \"bottom-right\" // default: bottom-left\n      });\n    }\n    await this.torus.init();\n    await this.torus.login();\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.torus.provider);\n    });\n  }\n\n  async getAccount(provider) {\n    const userInfo = await this.torus.getUserInfo();\n    if (userInfo){\n      return await this.torus.getPublicAddress({\n        verifier:userInfo.verifier,\n        verifierId:userInfo.verifierId\n      });\n    }\n    return null;\n  }\n\n  async onDeactivation() {\n    await this.torus.logout();\n  }\n\n  changeNetwork(network) {\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class AuthereumConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Authereum, network, ...rest } = kwargs;\n    super(rest);\n\n    this.authereum = null;\n    this.Authereum = Authereum;\n    this.network = network;\n  }\n\n  async onActivation() {\n    if (!this.authereum) {\n      this.authereum = new this.Authereum(this.network);\n    }\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.authereum.getProvider());\n    });\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      const accounts = await provider.getAccounts();\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.disable();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      api: this.Authereum,\n      network\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class GnosisSafeConnector extends Connector {\n\n  constructor(SafeAppConnector) {\n    super(...arguments);\n    this.safeLoaded = false;\n    this.SafeAppConnector = SafeAppConnector;\n    this.provider = new this.SafeAppConnector();\n    this.checkSafeApp();\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.SafeAppConnector();\n    }\n\n    if (this.provider){\n      await this.provider.activate();\n      return this.provider;\n    }\n  }\n\n  async getAccount() {\n    if (this.provider){\n      return await this.provider.getAccount();\n    }\n  }\n\n  async getProvider(){\n    if (this.provider){\n      return await this.provider.getProvider();\n    }\n  }\n\n  async getSafeInfo() {\n    if (this.provider){\n      return await this.provider.getSafeInfo();\n    }\n  }\n\n  async getChainId() {\n    if (this.provider){\n      return await this.provider.getChainId();\n    }\n  }\n\n  async checkSafeApp() {\n    if (this.provider){\n      const isSafeApp = await this.provider.isSafeApp();\n      this.safeLoaded = true;\n      return isSafeApp;\n    }\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.deactivate();\n      return this.provider;\n    }\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletLinkConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletLink, appName, infuraUrl, chainId, appLogoUrl, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.walletLink = null;\n    this.appName = appName;\n    this.chainId = chainId;\n    this.infuraUrl = infuraUrl;\n    this.appLogoUrl = appLogoUrl;\n    this.WalletLink = WalletLink;\n  }\n\n  async onActivation() {\n    if (!this.walletLink){\n      this.walletLink = new this.WalletLink({\n        darkMode: false,\n        appName: this.appName,\n        infuraUrl: this.infuraUrl,\n        appLogoUrl: this.appLogoUrl,\n      });\n    }\n\n    const provider = this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  getProvider(){\n    if (!this.provider){\n      this.provider = this.walletLink.makeWeb3Provider(this.infuraUrl, this.chainId);\n    }\n    return this.provider;\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      // Use eth_RequestAccounts\n      const accounts = await provider.send('eth_requestAccounts');\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = this.getProvider();\n    if (provider){\n      this.walletLink.disconnect();\n      await provider.close();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      network,\n      api: this.WalletLink,\n      appName: this.appName,\n      chainId: this.chainId,\n      infuraUrl: this.infuraUrl,\n      appLogoUrl: this.appLogoUrl,\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletConnectConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletConnectProvider, defaultNetwork, infuraId, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.WalletConnectProvider = WalletConnectProvider;\n    this.infuraId = infuraId;\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.WalletConnectProvider({\n        infuraId:this.infuraId\n      });\n    }\n\n    if (this.provider){\n      await this.provider.enable();\n      return this.provider;\n    }\n  }\n\n  async getProvider(){\n    return this.provider;\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.close();\n      return this.provider;\n    }\n  }\n}\n","import WalletLink from 'walletlink';\nimport AuthereumApi from 'authereum';\nimport PortisApi from \"@portis/web3\";\nimport FortmaticApi from \"fortmatic\";\nimport TrezorApi from \"trezor-connect\";\nimport { Connectors } from \"web3-react\";\nimport TorusApi from '@toruslabs/torus-embed';\nimport globalConfigs from '../configs/globalConfigs';\nimport TorusConnector from './connectors/TorusConnector';\nimport AuthereumConnector from './connectors/AuthereumConnector';\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport GnosisSafeConnector from './connectors/GnosisSafeConnector';\nimport WalletLinkConnector from './connectors/WalletLinkConnector';\nimport { SafeAppConnector } from '@gnosis.pm/safe-apps-web3-react';\nimport WalletConnectConnector from './connectors/WalletConnectConnector';\n\nconst {\n  InjectedConnector,\n  NetworkOnlyConnector,\n  TrezorConnector,\n  LedgerConnector,\n  FortmaticConnector,\n  PortisConnector\n} = Connectors;\n\nconst env = process.env;\n\nconst manifestEmail = env.REACT_APP_TREZOR_MANIFEST_EMAIL; // trezor\nconst manifestAppUrl = env.REACT_APP_TREZOR_MANIFEST_URL; // trezor\nconst defaultNetwork = globalConfigs.network.requiredNetwork;\nconst fortmaticApiKey = env.REACT_APP_FORTMATIC_KEY_MAINNET;\nconst portisDAppId = env.REACT_APP_PORTIS_DAPP_ID;\nconst portisNetwork = env.REACT_APP_PORTIS_NETWORK;\n\nconst supportedNetworkURLs = {};\n  \nObject.keys(globalConfigs.network.providers.infura.rpc).forEach((networkId,index) => {\n  networkId = parseInt(networkId);\n  supportedNetworkURLs[networkId] = globalConfigs.network.providers.infura.rpc[networkId]+env.REACT_APP_INFURA_KEY;\n});\n\nconst Injected = new InjectedConnector({\n  supportedNetworks: globalConfigs.network.enabledNetworks\n});\n\nconst Infura = new NetworkOnlyConnector({\n  providerURL: supportedNetworkURLs[defaultNetwork]\n});\n\n\nconst Trezor = new TrezorConnector({\n  api: TrezorApi,\n  supportedNetworkURLs,\n  defaultNetwork,\n  manifestEmail,\n  manifestAppUrl\n});\n\nconst Ledger = new LedgerConnector({\n  supportedNetworkURLs,\n  defaultNetwork\n});\n\nconst WalletConnect = new WalletConnectConnector({\n  defaultNetwork,\n  supportedNetworkURLs,\n  api: WalletConnectProvider,\n  infuraId:env.REACT_APP_INFURA_KEY,\n  bridge: \"https://bridge.walletconnect.org\",\n});\n\nconst Fortmatic = new FortmaticConnector({\n  api: FortmaticApi,\n  apiKey: fortmaticApiKey,\n  logoutOnDeactivation: false\n});\n\nconst Portis = new PortisConnector({\n  api: PortisApi,\n  dAppId: portisDAppId,\n  network: portisNetwork\n});\n\nconst Authereum = new AuthereumConnector({\n  api: AuthereumApi,\n  network: globalConfigs.network.availableNetworks[defaultNetwork].name.toLowerCase()\n});\n\nconst walletLink = new WalletLinkConnector({\n  api: WalletLink,\n  darkMode: false,\n  chainId: defaultNetwork,\n  appName: globalConfigs.appName,\n  infuraUrl: supportedNetworkURLs[defaultNetwork],\n  appLogoUrl: 'https://idle.finance/images/idle-mark.png',\n});\n\nconst Torus = new TorusConnector({\n  api: TorusApi,\n  initParams:{\n    buildEnv: 'production', // default: production\n    enableLogging: false, // default: false\n    network: {\n      host: globalConfigs.network.availableNetworks[defaultNetwork].name.toLowerCase(), // default: mainnet\n      chainId: defaultNetwork, // default: 1\n      networkName: globalConfigs.network.availableNetworks[defaultNetwork].name.toLowerCase() // default: Main Ethereum Network\n    },\n    showTorusButton: false // default: true\n  }\n});\n\nconst gnosis = new GnosisSafeConnector(SafeAppConnector);\n\nexport default {\n  Injected,\n  Infura,\n  WalletConnect,\n  gnosis,\n  walletLink,\n  Fortmatic,\n  Portis,\n  Authereum,\n  Torus,\n  Trezor,\n  Ledger,\n};","import React from \"react\";\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\n\nclass WrongNetworkBanner extends React.Component {\n  render() {\n    const bannerStyle = {\n      position: \"fixed\",\n      bottom: 0,\n      left: 0,\n      right: 0,\n      width: \"100%\",\n      zIndex: 9999\n    };\n\n    return (\n      <Box style={bannerStyle} backgroundColor={'wrongNetworkBannerBg'} p={3}>\n        <Flex alignItems={\"center\"}>\n          <Box p={4}>\n            <Icon name=\"Warning\" color=\"gold\" size=\"30\" />\n          </Box>\n          <Flex flexDirection={\"column\"}>\n            <Text fontWeight={\"bold\"}>\n              Looks like you're on the wrong network\n            </Text>\n            <Text>\n              The network you are currently connected{\" \"}\n              <Text.span style={{ textTransform: \"capitalize\" }}>\n                ({this.props.network.current.name})\n              </Text.span>{\" \"}\n              is not supported - please switch to the correct network.\n            </Text>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default WrongNetworkBanner;\n","import React from \"react\";\n\nimport WrongNetworkBanner from \"./components/WrongNetworkBanner\";\n\nclass NetworkUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        { this.props.network.isSupportedNetwork === false && this.props.web3 &&\n          <WrongNetworkBanner\n            network={this.props.network}\n          />\n        }\n      </div>\n    );\n  }\n}\n\nexport default NetworkUtil;\n","import React from \"react\";\nimport { Box, Heading, Text, Modal, Link } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport RimbleUtil from \"@rimble/utils\";\n\nclass NoWeb3BrowserModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2\n          fontSize={4}\n          fontWeight={3}\n          lineHeight={\"1.375em\"}\n          my={3}\n        >\n          Switch browsers to use the Idle App\n        </Heading.h2>\n\n        {RimbleUtil.isMobileDevice() ? (\n          <Text my={4}>\n            You can't use our blockchain features, like increasing the count\n            value, in this browser. We recommend using{\" \"}\n            <Link\n              href=\"https://status.im/\"\n              title=\"status.im website\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Status\n            </Link>\n            ,{\" \"}\n            <Link\n              href=\"https://www.cipherbrowser.com/\"\n              title=\"Cipher Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Cipher\n            </Link>{\" \"}\n            or{\" \"}\n            <Link\n              href=\"https://wallet.coinbase.com/\"\n              title=\"Coinbase Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Coinbase wallet\n            </Link>{\" \"}\n            browsers.\n          </Text>\n        ) : (\n          <Box>\n            <Text my={4}>\n              You can't use our blockchain features, like increasing the\n              count value, in this browser. Switch to{\" \"}\n              <Link\n                href=\"https://brave.com/download/\"\n                title=\"Download Brave browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Brave\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.mozilla.org/\"\n                title=\"Download FireFox browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                FireFox\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.opera.com/download\"\n                title=\"Download Opera Browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Opera\n              </Link>\n              , or{\" \"}\n              <Link\n                href=\"https://www.google.com/chrome/\"\n                title=\"Download Chrome browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Chrome\n              </Link>{\" \"}\n              to continue.\n            </Text>\n\n            <Text>\n              <Text.span bold>Rather use your phone?</Text.span> You can use\n              the Idle App in mobile browser wallets like{\" \"}\n              <Link\n                href=\"https://status.im/\"\n                title=\"status.im website\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Status\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.cipherbrowser.com/\"\n                title=\"Cipher Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Cipher\n              </Link>{\" \"}\n              or{\" \"}\n              <Link\n                href=\"https://wallet.coinbase.com/\"\n                title=\"Coinbase Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Coinbase wallet\n              </Link>\n              .\n            </Text>\n          </Box>\n        )}\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWeb3BrowserModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Flex,\n  Icon,\n  Modal,\n  Link,\n  Button\n} from \"rimble-ui\";\n\nclass NoWalletModal extends React.Component {\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card p={5} maxWidth={\"600px\"}>\n          <Button.Text\n            icononly\n            icon={\"Close\"}\n            color={\"moon-gray\"}\n            position={\"absolute\"}\n            top={0}\n            right={0}\n            mt={3}\n            mr={3}\n            onClick={this.props.closeModal}\n          />\n\n          <Flex flexDirection={\"column\"} justifyContent={\"space-between\"}>\n            <Flex justifyContent={\"center\"} my={4}>\n              <Icon name=\"Warning\" color=\"gold\" size=\"40\" />\n            </Flex>\n\n            <Heading.h2 my={3}>No Wallet Available</Heading.h2>\n\n            <Text my={4}>\n              Your current browser does not have a blockchain connected wallet.\n              Try using MetaMask, Fortmatic, Portis.\n            </Text>\n\n            <Link\n              href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              <Button.Outline size=\"small\">Get MetaMask Extension</Button.Outline>\n            </Link>\n          </Flex>\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWalletModal;\n","// Checks for MetaMask\nconst GeneralUtil = {\n  hasMetaMask: () => {\n    let hasMetaMask = false;\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasMetaMask = typeof window.ethereum.isMetaMask !== \"undefined\";\n    } else if (typeof window.web3 !== 'undefined') {\n      hasMetaMask = typeof window.web3.currentProvider.isMetaMask !== 'undefined' && window.web3.currentProvider.isMetaMask;\n    }\n\n    return hasMetaMask;\n  },\n  isTrustWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isTrust !== 'undefined' && window.web3.currentProvider.isTrust;\n    }\n    return false;\n  },\n  isCoinbaseWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isCoinbaseWallet !== 'undefined' && window.web3.currentProvider.isCoinbaseWallet;\n    }\n    return false;\n  },\n  hasDapper: () => {\n    let hasDapper = typeof window.DapperEthereum !== 'undefined';\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasDapper = typeof window.ethereum.isDapper !== \"undefined\" && window.ethereum.isDapper;\n    }\n\n    return hasDapper;\n  },\n  isOpera: () => {\n    return /Opera|OPR\\//.test(navigator.userAgent);\n  },\n  // Current device is Android\n  isAndroid: () => {\n    const isAndroid = /android/i.test(navigator.userAgent) ? true : false;\n\n    return isAndroid;\n  },\n  // Current device is iOS\n  isIos() {\n    const isIos =\n      /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream\n        ? true\n        : false;\n\n    return isIos;\n  }\n};\n\nexport default GeneralUtil;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Flex,\n  Modal,\n  Button,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\nimport RimbleUtils from \"@rimble/utils\";\n\nclass WrongNetworkModal extends React.Component {\n  renderContent = () => {\n    return (\n      <ModalCard.Body>\n        <Heading.h2 my={3}>\n          Switch to the {this.props.network.required.name} network in{\" \"}\n          {GeneralUtil.hasMetaMask() ? `MetaMask` : `Settings`}\n        </Heading.h2>\n\n        <Text my={4}>\n          The Idle App only works on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {this.props.network.required.name}\n          </Text.span>{\" \"}\n          network. You’re currently on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {\" \"}\n            {this.props.network.current.name}\n          </Text.span>{\" \"}\n          network.\n        </Text>\n\n        {GeneralUtil.hasMetaMask() && !RimbleUtils.isMobileDevice() ? (\n          <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n            <Flex alignItems={\"center\"}>\n              <Box position={\"relative\"} width={\"4em\"}>\n                <Box>\n                  <Loader size={\"3em\"} />\n                </Box>\n              </Box>\n              <Box>\n                <Text fontWeight={4}>Waiting for the right network...</Text>\n                <Text fontWeight={2}>\n                  Go to your Wallet and to switch\n                </Text>\n              </Box>\n            </Flex>\n          </Box>\n        ) : null}\n\n        <Box display={[\"block\", \"none\"]}>\n          <Button onClick={this.props.closeModal} width={1}>\n            OK\n          </Button>\n        </Box>\n      </ModalCard.Body>\n    )\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <React.Fragment>\n            {this.renderContent()}\n          </React.Fragment>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default WrongNetworkModal;\n","import React from \"react\";\nimport { Heading, Text, Box, Flex, Icon } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nfunction TransactionFeeModal(props) {\n  return (\n    <Box>\n      <ModalCard.Header title={'Transaction fees, what are you paying for?'} subtitle={'You need to pay a fee to use the Ethereum blockchain.'} subtitle2={'This pays for someone to process your transaction and store the data.'}></ModalCard.Header>\n      <ModalCard.Body>\n        <Flex flexDirection={['column', 'row']}\n          justifyContent={\"space-between\"}\n          my={[0, 4]}>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"Fingerprint\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Undeniable proof</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You get a public record of any funds you send or receive, a bit like\n              a deed for a house.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"EnhancedEncryption\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unbreakable encryption</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              Your funds can only ever go to your intended recipients.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"AccountBalance\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n              <Icon\n                name=\"NotInterested\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unparalleled control</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You can pay or get paid without using any banks or companies.\n            </Text>\n          </Box>\n        </Flex>\n      </ModalCard.Body>\n    </Box>\n  );\n}\n\nexport default TransactionFeeModal;\n","import React from 'react'\nimport moment from 'moment';\nimport connectors from '../App/connectors';\nimport { useWeb3Context } from 'web3-react';\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport globalConfigs from '../configs/globalConfigs';\nimport styles from './Web3ConnectionButtons.module.scss';\nimport { Button, Box, Text, Flex, Link } from 'rimble-ui';\n\nconst LOG_ENABLED = false;\nconst customLog = (...props) => { if (LOG_ENABLED) console.log(moment().format('HH:mm:ss'),...props); };\n\nexport default function Web3ConnectionButtons(props) {\n  const context = useWeb3Context();\n\n  if (!context.active && !context.error) {\n    customLog('context loading', context);\n  } else if (context.error) {\n    customLog('context error', context);\n  } else {\n    customLog('context success', context);\n  }\n\n  const setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n    if (localStorage) {\n      localStorage.setItem('walletProvider', walletProvider);\n      localStorage.setItem('connectorName', connectorName);\n    }\n\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector(connectorName,walletProvider);\n    }\n    \n    // Close modal\n    if (typeof props.connectionCallback === 'function'){\n      props.connectionCallback();\n    }\n\n    return connectorName;\n    // return await context.setConnector(connectorName);\n  };\n\n  const unsetConnector = async () => {\n    context.unsetConnector();\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector('Infura','Infura');\n    }\n  };\n\n  // Show provider fields to detect in-app browser\n  // alert(JSON.stringify(Object.keys(window.web3.currentProvider)));\n    \n  const isOpera = GeneralUtil.isOpera();\n  const isDapper = GeneralUtil.hasDapper();\n  const isMetamask = GeneralUtil.hasMetaMask();\n  const isTrustWallet = GeneralUtil.isTrustWallet();\n  const isGnosisSafe = !!connectors.gnosis.provider.safe;\n  const isCoinbaseWallet = GeneralUtil.isCoinbaseWallet();\n  const browserWalletDetected = isMetamask || isOpera || isDapper || isCoinbaseWallet || isTrustWallet;\n  \n  const allowedConnectors = props.allowedConnectors;\n  const registerPage = props.registerPage;\n\n  if (connectors.Portis) {\n    if (registerPage) {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = true;\n    } else {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = false;\n    }\n  }\n\n  let basicConnectorsName = Object.keys(connectors).filter(c => c !== 'Infura');\n\n  if (allowedConnectors) {\n    basicConnectorsName = basicConnectorsName.filter(n => allowedConnectors.map((v) => { return v.toLowerCase(); }).indexOf(n.toLowerCase()) !== -1 );\n  }\n\n  // Handle Gnosis Safe connector\n  if (isGnosisSafe){\n    const injectedIndex = basicConnectorsName.indexOf('Injected');\n    // Remove Injected\n    basicConnectorsName.splice(injectedIndex,1);\n    // Remove Gnosis\n    const gnosisIndex = basicConnectorsName.indexOf('gnosis');\n    basicConnectorsName.splice(gnosisIndex,1);\n    // Insert Gnosis in first place\n    basicConnectorsName.unshift('gnosis');\n  } else {\n    const gnosisIndex = basicConnectorsName.indexOf('gnosis');\n    // Remove Gnosis\n    basicConnectorsName.splice(gnosisIndex,1);\n  }\n\n  const buttons = basicConnectorsName.map( (connectorName,index) => {\n    switch (connectorName) {\n      case 'Injected':\n        if (browserWalletDetected) {\n          let name = null;\n          if (isMetamask) {\n            name = 'Metamask';\n          } else if (isOpera) {\n            name = 'Opera';\n          } else if (isDapper){\n            name = 'Dapper';\n          } else if (isCoinbaseWallet){\n            name = 'Coinbase';\n          } else if (isTrustWallet){\n            name = 'TrustWallet';\n          }\n\n          const connectorInfo = globalConfigs.connectors[name.toLowerCase()];\n          if (connectorInfo && connectorInfo.enabled){\n            const walletIcon = connectorInfo.icon ? connectorInfo.icon : `${name.toLowerCase()}.svg`;\n            return (\n              <Flex\n                width={1}\n                key={`wallet_${name}`}\n                justifyContent={'space-between'}\n                style={{\n                  flex:'0 100%',\n                }}\n                flexDirection={['column','row']}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={name}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  imageProps={{width:'auto',height:'42px'}}\n                  imageSrc={`images/connectors/${walletIcon}`}\n                  handleClick={ async () => await setConnector(connectorName,name)}\n                  subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${name}` }\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  caption={'Watch Address'}\n                  imageSrc={`images/tokens/ETH.svg`}\n                  subcaption={'Watch an Ethereum address'}\n                  imageProps={{width:'auto',height:'42px'}}\n                  handleClick={ e => props.setCustomAddress(true) }\n                />\n              </Flex>\n            )\n          }\n          return null;\n        } else {\n          const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={'Browser Wallet'}\n              key={`wallet_${connectorName}`}\n              imageProps={{width:'auto',height:'42px'}}\n              imageSrc={`images/connectors/browser-wallet.png`}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using a browser wallet`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n      default:\n        const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n        if (connectorInfo && connectorInfo.enabled){\n          const walletIcon = connectorInfo.iconModal ? connectorInfo.iconModal : (connectorInfo.icon ? connectorInfo.icon : `${connectorName.toLowerCase()}.svg`);\n\n          let caption = connectorInfo.name ? connectorInfo.name : connectorName;\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={caption}\n              key={`wallet_${connectorName}`}\n              imageSrc={`images/connectors/${walletIcon}`}\n              imageProps={{width:'auto',height:'42px'}}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${connectorName}`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n        return null;\n    }\n  });\n\n  return (\n    <Box width={[1]}>\n      <Flex flexDirection={'column'} alignItems={\"center\"}>\n        {context.error && (\n          <Text.p textAlign=\"center\">\n            An error occurred, are you using an Ethereum browser such as\n            <Link href=\"https://metamask.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Metamask &nbsp;\n            </Link>\n             or\n            <Link href=\"https://www.meetdapper.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Dapper\n            </Link>\n            ?\n            If you do not have an Ethereum wallet follow the\n            \"I'm new to Ethereum\" flow when connecting.\n            If you do have a wallet, click Reset and retry one of the wallet listed below,\n            Generic wallet option is used for Ethereum browsers only.\n          </Text.p>\n        )}\n        {(context.active || (context.error && context.connectorName)) && context.connectorName !== 'Infura' && (\n          <Button.Outline\n            width={[1/2]}\n            className={[styles.button]}\n            mb={[1, 3]}\n            size={'large'}\n            key={'reset'}\n            onClick={async () => await unsetConnector()}\n          >\n            {context.active ? \"Deactivate Connector\" : \"Reset\"}\n          </Button.Outline>\n        )}\n      </Flex>\n      <Flex\n        flexWrap={'wrap'}\n        flexDirection={'row'}\n        justifyContent={'space-between'}\n      >\n        {buttons}\n      </Flex>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport {\n  Box,\n  Text,\n  Link,\n  Icon,\n  Flex,\n  Field,\n  Modal,\n  Input,\n  Loader,\n  Button,\n  Heading\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard.js';\nimport styles from './Header.module.scss';\nimport FunctionsUtil from '../FunctionsUtil.js';\nimport ImageButton from '../../ImageButton/ImageButton.js';\nimport TransactionFeeModal from \"./TransactionFeeModal.js\";\nimport Web3ConnectionButtons from \"../../Web3ConnectionButtons/Web3ConnectionButtons.js\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass ConnectionModal extends React.Component {\n  // TODO save pref in localstorage and do not show 'Before connecting' info every time\n  state = {\n    validated:false,\n    showTxFees:false,\n    customAddress:'',\n    currentSection:null,\n    showInstructions:false,\n    askCustomAddress:false,\n    closeRemainingTime:null,\n    customAddressError:false,\n    newToEthereumChoice:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  toggleShowTxFees = e => {\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  }\n\n  setStoredSection = () => {\n    let currentSection = null;\n    if (localStorage){\n      currentSection = localStorage.getItem('currentSection');\n      if (currentSection){\n        this.setState({\n          currentSection\n        });\n      }\n    }\n    return currentSection;\n  }\n\n  componentDidMount = () => {\n    this.loadUtils();\n    this.setStoredSection();\n  }\n\n  componentDidUpdate = () => {\n    this.loadUtils();\n  }\n\n  resetModal = e => {\n    this.setState({\n      showTxFees: false,\n      currentSection:null,\n      askCustomAddress:false,\n      showInstructions: false,\n      newToEthereumChoice:null,\n    });\n  }\n\n  setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory:'Connect',\n      eventLabel:walletProvider,\n      eventAction:'select_wallet'\n    });\n\n    if (this.props.setConnector && typeof this.props.setConnector === 'function'){\n      this.props.setConnector(connectorName,walletProvider);\n    }\n\n    // Set Wallet choice\n    this.setState({\n      newToEthereumChoice: connectorName\n    });\n\n    this.closeCountdown();\n\n    return connectorName;\n\n    // return await window.RimbleWeb3_context.setConnector(connectorName);\n  }\n\n  closeCountdown = () => {\n    const closeRemainingTime = this.state.closeRemainingTime ? this.state.closeRemainingTime-1 : 5;\n    if (!closeRemainingTime){\n      this.closeModal();\n    } else {\n      setTimeout(() => { this.closeCountdown() },1000);\n    }\n    this.setState({\n      closeRemainingTime\n    });\n  }\n\n  setWalletChoice = (e,choice) => {\n    e.preventDefault();\n    this.setState({\n      newToEthereumChoice: choice\n    });\n  }\n\n  closeModal = () => {\n    // Reset modal\n    this.resetModal();\n    // Set latest stored sections\n    this.setStoredSection();\n    // Close modal\n    this.props.closeModal();\n  }\n\n  setCurrentSection = (e,currentSection) => {\n    e.preventDefault();\n    this.setState({\n      currentSection\n    });\n\n    if (currentSection!=='instructions'){\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Connect',\n        eventAction: 'select_mode',\n        eventLabel: currentSection\n      });\n\n      this.functionsUtil.setLocalStorage('currentSection',currentSection);\n    }\n  }\n\n  connectCustomAddress = () => {\n    const addressValid = this.functionsUtil.checkAddress(this.state.customAddress);\n    if (addressValid){\n      this.setCustomAddress(false);\n      this.functionsUtil.setCustomAddress(this.state.customAddress);\n      this.setConnector('custom','custom');\n      setTimeout(() => { this.closeModal() },1000);\n      return true;\n    } else {\n      return this.setState({\n        customAddressError:true\n      });\n    }\n  }\n\n  updateCustomAddress = (e) => {\n    const customAddressError = false;\n    const customAddress = e.target.value;\n    const validated = this.functionsUtil.checkAddress(customAddress);\n    this.setState({\n      validated,\n      customAddress,\n      customAddressError\n    });\n  }\n\n  setCustomAddress = (askCustomAddress) => {\n    this.setState({\n      askCustomAddress\n    });\n  }\n\n  renderModalContent = () => {\n\n    const TOSacceptance = (\n      <Box>\n        <Text textAlign={'center'} fontSize={1} py={[2,3]}>By connecting, I accept Idle's <RouterLink to=\"/terms-of-service\" color={'primary'} style={{color:this.props.theme.colors.primary,textDecoration:'underline'}} target={'_blank'} rel=\"nofollow noopener noreferrer\">Terms of Service</RouterLink></Text>\n      </Box>\n    );\n\n    const newToEthereum = this.state.currentSection === 'new';\n    const showConnectionButtons = this.state.currentSection === 'wallet';\n    const showInstructions = this.state.currentSection === 'instructions';\n\n    if (showInstructions){\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Before you connect'} subtitle={'Connecting lets you use Idle via your Ethereum account.'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              flexDirection={['column', 'row']}\n              justifyContent={\"space-between\"}\n              my={[0, 3]}\n            >\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"Public\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>The blockchain is public</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  Your Ethereum account activity is public on the\n                  blockchain. Choose an account you don’t mind being\n                  linked with your activity here.\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"AccountBalanceWallet\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have some Ether for fees</Heading>\n                <Text fontSize={1} mb={3} textAlign={'center'}>\n                  You’ll need Ether to pay transaction fees. Buy Ether\n                  from exchanges like Coinbase or directly via enabled wallet\n                  such as Portis or Dapper.<br />\n                  <Link\n                    title=\"Learn about Ethereum transaction fees\"\n                    fontWeight={'0'}\n                    color={'blue'}\n                    textAlign={'center'}\n                    hoverColor={'blue'}\n                    href=\"#\"\n                    onClick={this.toggleShowTxFees}\n                  >\n                    What are transaction fees?\n                  </Link>\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"People\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have the right account ready</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  If you have multiple Ethereum accounts, check that the\n                  one you want to use is active in your browser.\n                </Text>\n              </Box>\n            </Flex>\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    if (this.state.askCustomAddress){\n      return (\n        <Box>\n          <ModalCard.Header\n            title={'Connect ETH wallet'}\n            icon={'images/idle-mark.png'}\n            subtitle={'And get started with Idle.'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              minWidth={[1,'30em']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Field\n                width={1}\n                label={'Ethereum address'}\n              >\n                <Input\n                  required\n                  width={1}\n                  type={'text'}\n                  className={styles.input}\n                  borderColor={'cardBorder'}\n                  backgroundColor={'cardBg'}\n                  pattern={'^0x[a-fA-F0-9]{40}$'}\n                  value={this.state.customAddress}\n                  onChange={ e => this.updateCustomAddress(e) }\n                  placeholder={'Insert a valid Ethereum address'}\n                />\n              </Field>\n              {\n                this.state.customAddressError && (\n                  <Text\n                    mb={2}\n                    fontSize={2}\n                    color={'red'}\n                    fontWeight={3}\n                    textAlign={'center'}\n                  >\n                    Insert a valid Ethereum Address\n                  </Text>\n                )\n              }\n              <Button\n                px={[3,4]}\n                mx={'auto'}\n                fontWeight={3}\n                size={'medium'}\n                fontSize={[2,2]}\n                borderRadius={4}\n                contrastColor={'primary'}\n                className={[styles.gradientButton]}\n                onClick={ e => this.connectCustomAddress() }\n              >\n                CONNECT\n              </Button>\n            </Flex>\n            <Flex\n              pt={3}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Link\n                hoverColor={'blue'}\n                textAlign={'center'}\n                onClick={ e => this.setCustomAddress(false) }\n              >\n                Select another Wallet\n              </Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (showConnectionButtons) {\n      return (\n        <Box>\n          <ModalCard.Header title={'Select your Wallet'} subtitle={'And get started with Idle.'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex width={1} px={[0,5]} flexDirection={'column'} justifyContent={'center'}>\n              <Web3ConnectionButtons\n                width={1/2}\n                isMobile={this.props.isMobile}\n                setConnector={this.setConnector}\n                connectionCallback={this.closeModal}\n                size={this.props.isMobile ? 'medium' : 'large'}\n                setCustomAddress={this.setCustomAddress.bind(this)}\n              />\n            </Flex>\n            <Flex pt={3} alignItems={'center'} justifyContent={'center'}>\n              <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'new') }>I don't have a wallet</Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (newToEthereum) {\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Let\\'s create your first Ethereum wallet'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            {\n              !this.state.newToEthereumChoice ? (\n                <Flex width={1} px={[0,4]} flexDirection={'column'} justifyContent={'center'}>\n                  <Box mb={3}>\n                    <Text fontSize={[2,3]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                      Connect with e-mail or phone number?\n                    </Text>\n                  </Box>\n                  <Flex mb={3} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use e-mail'}\n                      imageSrc={'images/email.svg'}\n                      isMobile={this.props.isMobile}\n                      subcaption={'Powered by Portis'}\n                      handleClick={ e => this.setConnector('Portis','Portis') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use phone number'}\n                      isMobile={this.props.isMobile}\n                      imageSrc={'images/mobile.svg'}\n                      subcaption={'Powered by Fortmatic'}\n                      handleClick={ e => this.setConnector('Fortmatic','Fortmatic') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                  </Flex>\n                  <Flex alignItems={'center'} justifyContent={'center'}>\n                    <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'wallet') }>I already have a wallet</Link>\n                  </Flex>\n                </Flex>\n              ) : (\n                <Box>\n                  <Text fontSize={3} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                    We are connecting you to {this.state.newToEthereumChoice} wallet provider...\n                  </Text>\n                  <Flex\n                    mt={2}\n                    justifyContent={'center'}\n                    alignItems={'center'}\n                    textAlign={'center'}>\n                    <Loader size=\"40px\" /> <Text ml={2} color={'dark-gray'}>Closing in {this.state.closeRemainingTime} seconds...</Text>\n                  </Flex>\n                </Box>\n              )\n            }\n            { TOSacceptance }\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    return (\n      <React.Fragment>\n        <ModalCard.Header title={'Connect to Idle'} icon={'images/idle-mark.png'}></ModalCard.Header>\n        <ModalCard.Body>\n          {\n            <Flex\n              width={1}\n              px={[0,4]}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Box mb={3}>\n                <Text\n                  fontWeight={2}\n                  fontSize={[2,3]}\n                  lineHeight={1.5}\n                  textAlign={'center'}\n                >\n                  How do you want to connect to Idle?\n                </Text>\n              </Box>\n              <Flex\n                mb={[2,3]}\n                alignItems={'center'}\n                justifyContent={'center'}\n                flexDirection={['column','row']}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`Ethereum wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Choose your favourite'}\n                  imageSrc={'images/ethereum-wallet.svg'}\n                  handleClick={ e => this.setCurrentSection(e,'wallet') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`New wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Use email / phone'}\n                  imageSrc={'images/new-wallet.png'}\n                  handleClick={ e => this.setCurrentSection(e,'new') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n              </Flex>\n              <Flex\n                alignItems={'center'}\n                justifyContent={'center'}\n              >\n                <Link\n                  color={'primary'}\n                  hoverColor={'primary'}\n                  onClick={ e => this.setCustomAddress(true) }\n                >\n                  Watch Ethereum Address\n                </Link>\n              </Flex>\n            </Flex>\n          }\n          { TOSacceptance }\n        </ModalCard.Body>\n      </React.Fragment>\n    );\n  }\n\n  renderFooter = () => {\n\n    if (this.state.newToEthereumChoice || (this.state.currentSection && this.state.askCustomAddress)){\n      return null;\n    }\n\n    return (\n      <ModalCard.Footer>\n        { !this.state.currentSection ? (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={ e => this.setCurrentSection(e,'instructions') }\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              READ INSTRUCTIONS\n            </Button>\n          ) : (!this.state.askCustomAddress || this.state.currentSection==='instructions') && (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={this.resetModal}\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              BACK\n            </Button>\n          )\n        }\n      </ModalCard.Footer>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          {this.state.showTxFees === false ? (\n            <React.Fragment>\n              {this.renderModalContent()}\n              {this.renderFooter()}\n            </React.Fragment>\n          ) : (\n            <Box>\n              <TransactionFeeModal />\n              {this.renderFooter()}\n            </Box>\n          )}\n\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionModal;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Modal,\n  Flex,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\n\nclass ConnectionPendingModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>Connect Ethereum account</Heading.h2>\n\n        <Text my={4}>\n          Confirm the request that's just appeared. If you can't see a\n          request, open your{\" \"}\n          {GeneralUtil.hasMetaMask()\n            ? `MetaMask extension`\n            : `eth wallet settings`}\n          .\n        </Text>\n\n        <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n          <Flex alignItems={\"center\"}>\n            <Box position={\"relative\"} width={\"4em\"}>\n              <Box>\n                <Loader size={\"3em\"} />\n              </Box>\n            </Box>\n            <Box>\n              <Text fontWeight={4}>\n                Waiting for connection confirmation...\n              </Text>\n              <Text fontWeight={2}>This won’t cost you any Ether</Text>\n            </Box>\n          </Flex>\n        </Box>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionPendingModal;\n","import React from \"react\";\nimport { Heading, Text, Flex, Button, Modal } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nclass UserRejectedConnectionModal extends React.Component {\n  sendMessageAgain = event => {\n    this.props.closeModal();\n    this.props.initAccount();\n  };\n\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>\n          You can't continue without connecting your account\n        </Heading.h2>\n\n        <Text my={4}>\n          To use our blockchain features you need to confirm the connection\n          request.\n        </Text>\n\n        <Flex flexDirection={['column', 'row']} justifyContent={\"flex-end\"} mt={4}>\n          <Button.Outline onClick={this.props.closeModal} mr={[0, 3]} mb={[3, 0]}>\n            Cancel connection\n          </Button.Outline>\n          <Button onClick={this.sendMessageAgain}>\n            Try again\n          </Button>\n        </Flex>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default UserRejectedConnectionModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Modal,\n  Flex,\n  Box,\n  Button,\n  EthAddress,\n  QR,\n  Link\n} from \"rimble-ui\";\nimport TransactionFeeModal from \"./TransactionFeeModal\";\n\nclass LowFundsModal extends React.Component {\n  state = {\n    showSecondary: false,\n    showTxFees: false\n  };\n\n  toggleQRVisible = () => {\n    this.setState({\n      showSecondary: !this.state.showSecondary\n    });\n  };\n\n  toggleShowTxFees = e => {\n    console.log(\"showTxFees\", this.state.showTxFees);\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  };\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card\n          pr={[0, 5]}\n          pl={[0, 5]}\n          pt={[\"48px\", 5]}\n          pb={[\"97px\", 4]}\n          maxWidth={\"960px\"}\n          overflow={\"hidden\"}\n          position={\"relative\"}\n        >\n          <Box position={\"relative\"}>\n            <Flex\n              justifyContent={\"flex-end\"}\n              mr={[0, -5]}\n              mt={[\"-48px\", -5]}\n              position={\"absolute\"}\n              top={\"0\"}\n              left={\"0\"}\n              right={\"0\"}\n              bg={\"white\"}\n              zIndex={\"1\"}\n            >\n              <Button.Text\n                icononly\n                icon={\"Close\"}\n                color={\"moon-gray\"}\n                onClick={this.props.closeModal}\n              />\n            </Flex>\n          </Box>\n\n          {this.state.showSecondary === false &&\n          this.state.showTxFees === false ? (\n            <Box>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start primary content */}\n\n                  <Box alignContent=\"center\" py={3}>\n                    <Heading.h2>\n                      Not enough Ether for transaction fees\n                    </Heading.h2>\n                  </Box>\n                  <Text mb={4}>\n                    This is a blockchain action so you’ll have to pay a\n                    transaction fee. A few dollars worth of Ether should be\n                    enough but fees do change based on how busy the network is.{\" \"}\n                    <strong>Fund your account and try again.</strong>{\" \"}\n                    <Link\n                      title=\"Learn about Ethereum transaction fees\"\n                      as={\"a\"}\n                      href=\"#\"\n                      onClick={this.toggleShowTxFees}\n                    >\n                      What are transaction fees?\n                    </Link>\n                  </Text>\n\n                  <Heading.h3>How to add funds</Heading.h3>\n\n                  <Flex\n                    alignItems={\"stretch\"}\n                    mx={0}\n                    mb={[4, 5]}\n                    mt={[3, 4]}\n                    flexWrap={[\"wrap\", \"no-wrap\"]}\n                  >\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>Buy ETH from an exchange</Heading.h5>\n                          <Text fontSize=\"1\">\n                            You can buy ETH from exchanges like Coinbase and\n                            send it to your account. If you don’t already have\n                            a Coinbase account, it can take a while to get set\n                            up.\n                          </Text>\n                        </Box>\n\n                        <Button.Outline my={3}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"OpenInNew\" mr={2} />\n                            Go to CoinBase\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>\n                            Send ETH from another account\n                          </Heading.h5>\n                          <Text fontSize=\"1\">\n                            If you have ETH in another Ethereum account, you\n                            can send it to this account using your public\n                            Ethereum address or QR code.\n                          </Text>\n                        </Box>\n                        <Button.Outline my={3} onClick={this.toggleQRVisible}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"FilterCenterFocus\" mr={2} />\n                            Show account QR code\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                  </Flex>\n                  {/* End primary content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex pt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button onClick={this.props.closeModal} width={[1, \"auto\"]}>\n                    Back to Idle\n                  </Button>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showSecondary ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start secondary content */}\n                  <Flex my={3} justifyContent={\"center\"}>\n                    <QR\n                      size={130}\n                      value={\n                        this.props.account ? this.props.account : \"1234512345\"\n                      }\n                    />\n                  </Flex>\n\n                  <EthAddress my={4} address={this.props.account} />\n                  <Flex mb={3} />\n                  {/* End secondary content */}\n                </Box>\n              </Box>\n\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start secondary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex mt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleQRVisible}\n                  >\n                    Go back\n                  </Button.Outline>\n                </Flex>\n                {/* End secondary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showTxFees ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start tx fee content */}\n                  <TransactionFeeModal />\n                  {/* End tx fee content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex\n                  pt={4}\n                  justifyContent={[\"center\", \"flex-end\"]}\n                  borderTop={1}\n                  borderColor={\"#eee\"}\n                >\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleShowTxFees}\n                  >\n                    Go Back\n                  </Button.Outline>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default LowFundsModal;\n","import React from \"react\";\n\nimport NoWeb3BrowserModal from \"./components/NoWeb3BrowserModal\";\nimport NoWalletModal from \"./components/NoWalletModal\";\nimport WrongNetworkModal from \"./components/WrongNetworkModal\";\n\nimport ConnectionModal from \"./components/ConnectionModal\";\nimport ConnectionPendingModal from \"./components/ConnectionPendingModal\";\nimport UserRejectedConnectionModal from \"./components/UserRejectedConnectionModal\";\n\nimport LowFundsModal from \"./components/LowFundsModal\";\n\nclass ConnectionModalUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        <NoWeb3BrowserModal\n          closeModal={this.props.modals.methods.closeNoWeb3BrowserModal}\n          isOpen={this.props.modals.data.noWeb3BrowserModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <NoWalletModal\n          closeModal={this.props.modals.methods.closeNoWalletModal}\n          isOpen={this.props.modals.data.noWalletModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <WrongNetworkModal\n          closeModal={this.props.modals.methods.closeWrongNetworkModal}\n          isOpen={this.props.modals.data.wrongNetworkModalIsOpen}\n          network={this.props.network}\n        />\n\n        <ConnectionModal\n          {...this.props}\n          isMobile={this.props.isMobile}\n          setConnector={this.props.setConnector}\n          currentNetwork={this.props.network.current}\n          validateAccount={this.props.validateAccount}\n          closeModal={this.props.modals.methods.closeConnectionModal}\n          isOpen={ this.props.modals.data.connectionModalIsOpen && !this.props.accountValidated }\n        />\n\n        <ConnectionPendingModal\n          closeModal={this.props.modals.methods.closeConnectionPendingModal}\n          isOpen={this.props.modals.data.accountConnectionPending}\n          currentNetwork={this.props.network.current}\n        />\n        <UserRejectedConnectionModal\n          closeModal={\n            this.props.modals.methods.closeUserRejectedConnectionModal\n          }\n          isOpen={this.props.modals.data.userRejectedConnect}\n          initAccount={this.props.initAccount}\n        />\n\n        <LowFundsModal\n          closeModal={this.props.modals.methods.closeLowFundsModal}\n          isOpen={this.props.modals.data.lowFundsModalIsOpen}\n          currentNetwork={this.props.network.current}\n          account={this.props.account}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ConnectionModalUtil;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ConnectionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    // Disconnect to Infura only if the wallet is not logged\n    if (!this.props.account){\n      // await this.props.context.setFirstValidConnector(['Infura']);\n      // this.props.context.setConnector('Infura');\n      this.props.context.unsetConnector();\n      this.props.setConnector('Infura',null);\n      await this.props.context.setFirstValidConnector(['Infura']);\n    }\n    this.props.modals.methods.closeConnectionErrorModal();\n  }\n\n  render() {\n\n    const walletProvider = this.functionsUtil.getWalletProvider();\n    const isLedger = (walletProvider && walletProvider.toLowerCase() === 'ledger') || (typeof this.props.modals.data.connectionError === 'string' && this.props.modals.data.connectionError.toLowerCase().includes('ledger'));\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ isLedger ? 'Ledger Error' : `Connection Error` } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to connect with your { isLedger ? 'Ledger' : 'account' }:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.connectionError}\"</Text.span><br />\n                {\n                  isLedger ? (\n                    <Text.span>\n                      Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n\n                    </Text.span>\n                  ) : 'Make sure that your wallet is unlocked and try again.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionErrorModal;","import React from \"react\";\nimport {\n  Text,\n  Link,\n  Flex,\n  Modal,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass TransactionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    this.props.modals.methods.closeTransactionErrorModal();\n  }\n\n  render() {\n\n    const isLedgerError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('ledger');\n    const isSlowTxError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('not mined within 50 blocks');\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ 'Transaction Error' } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to send a transaction:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.transactionError}\"</Text.span><br />\n                {\n                  isLedgerError ? (\n                    <Text.span\n                      fontSize={1}\n                    >\n                      <br />Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n                      We also suggest you to connect your Ledger with Metamask, read the <Link fontSize={1} color={'blue'} hoverColor={'blue'} target={'_blank'} rel={\"nofollow noopener noreferrer\"} href={'https://metamask.zendesk.com/hc/en-us/articles/360020394612-How-to-connect-a-Trezor-or-Ledger-Hardware-Wallet'}>instructions here</Link>.\n                    </Text.span>\n                  ) : isSlowTxError ? 'This could happen when the gas price is low, check the transaction status with your Wallet.' : 'Make sure that your have enough funds in your wallet.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default TransactionErrorModal;","import Web3 from \"web3\";\nimport React from 'react';\nimport BigNumber from 'bignumber.js';\nimport SimpleID from 'simpleid-js-sdk';\nimport NetworkUtil from \"./NetworkUtil\";\nimport { Biconomy } from \"@biconomy/mexa\";\nimport * as Sentry from '@sentry/browser';\nimport FunctionsUtil from './FunctionsUtil';\nimport MaticJs from '@maticnetwork/maticjs';\nimport globalConfigs from '../configs/globalConfigs';\nimport ConnectionModalUtil from \"./ConnectionModalsUtil\";\n// import detectEthereumProvider from '@metamask/detect-provider';\nimport { IFrameEthereumProvider } from '@ledgerhq/iframe-provider';\nimport ConnectionErrorModal from './components/ConnectionErrorModal';\nimport TransactionErrorModal from './components/TransactionErrorModal';\n\nrequire('dotenv').config();\n\nconst RimbleTransactionContext = React.createContext({\n  web3: {},\n  account: {},\n  biconomy: {},\n  simpleID: {},\n  contracts: [],\n  web3Infura: {},\n  currentWeb3: {},\n  web3Polygon: {},\n  tokenConfig: {},\n  transactions: {},\n  permitClient: {},\n  web3Providers: {},\n  accountBalance: {},\n  initWeb3: () => {},\n  accountValidated: {},\n  maticPlasmaClient :{},\n  initAccount: () => {},\n  accountBalanceLow: {},\n  contractsNetworks: {},\n  initSimpleID: () => {},\n  initContract: () => {},\n  erc20ForwarderClient: {},\n  accountBalanceToken: {},\n  checkPreflight: () => {},\n  validateAccount: () => {},\n  network: {\n    current: {},\n    required: {},\n    checkNetwork: () => {},\n    isCorrectNetwork: null,\n    isSupportedNetwork: null,\n  },\n  accountInizialized: false,\n  getTokenDecimals: () => {},\n  rejectValidation: () => {},\n  getAccountBalance: () => {},\n  contractsInitialized: false,\n  accountValidationPending: {},\n  initializeContracts: () => {},\n  rejectAccountConnect: () => {},\n  enableUnderlyingWithdraw: false,\n  connectAndValidateAccount: () => {},\n  modals: {\n    data: {\n      connectionError: {},\n      lowFundsModalIsOpen: {},\n      noWalletModalIsOpen: {},\n      userRejectedConnect: {},\n      connectionModalIsOpen: {},\n      userRejectedValidation: {},\n      wrongNetworkModalIsOpen: {},\n      accountValidationPending: {},\n      accountConnectionPending: {},\n      noWeb3BrowserModalIsOpen: {},\n      transactionConnectionModalIsOpen: {},\n    },\n    methods: {\n      openLowFundsModal: () => {},\n      closeLowFundsModal: () => {},\n      openWrongNetworkModal: () => {},\n      closeWrongNetworkModal: () => {},\n      openNoWeb3BrowserModal: () => {},\n      closeNoWeb3BrowserModal: () => {},\n      openConnectionErrorModal: () => {},\n      closeConnectionErrorModal: () => {},\n      openTransactionErrorModal: () => {},\n      closeTransactionErrorModal: () => {},\n      openConnectionPendingModal: () => {},\n      closeConnectionPendingModal: () => {},\n      openUserRejectedConnectionModal: () => {},\n      openUserRejectedValidationModal: () => {},\n      closeUserRejectedConnectionModal: () => {},\n      closeUserRejectedValidationModal: () => {},\n    }\n  },\n  transaction: {\n    data: {\n      transactions: {}\n    },\n    meta: {},\n    methods: {}\n  }\n});\n\nlet setConnectorName = null;\nlet biconomyLoginProcessing = false;\n\nclass RimbleTransaction extends React.Component {\n  static Consumer = RimbleTransactionContext.Consumer;\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    const props = Object.assign({},this.props);\n    props.contracts = this.state.contracts;\n    if (this.functionsUtil){\n      props.account = this.state.account;\n      this.functionsUtil.setProps(props);\n    } else {\n      props.account = this.state.account;\n      this.functionsUtil = new FunctionsUtil(props);\n    }\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.checkNetwork();\n\n    // detect Network account change\n    if (window.ethereum){\n      window.ethereum.on('networkChanged', async (networkId) => {\n        this.handleNetworkChanged(networkId);\n        // window.location.reload();\n      });\n    }\n\n    window.initWeb3 = this.initWeb3;\n    window.initAccount = this.initAccount;\n  }\n\n  handleNetworkChanged = async (networkId=null) => {\n    this.functionsUtil.removeStoredItem('cachedRequests');\n    this.functionsUtil.removeStoredItem('cachedRequests_polygon');\n    this.functionsUtil.removeStoredItem('transactions');\n    await this.props.clearCachedData(async () => {\n      // console.log(networkId,this.state.network);\n      // const network = await this.checkNetwork();\n      // if (network.isCorrectNetwork){\n      //   window.location.reload();\n      // }\n\n      if (this.state.network.required && networkId && parseInt(networkId) === parseInt(this.state.network.required.id)){\n        window.location.reload();\n      } else {\n        this.setState({\n          web3:null,\n          contracts:[],\n          biconomy:null,\n          permitClient:null,\n          contractsNetworks:{},\n          networkInitialized:false,\n          erc20ForwarderClient:null,\n          contractsInitialized:false\n        },() => {\n          this.checkNetwork();\n        });\n      }\n    });\n  }\n\n  componentDidMount = async () => {\n    // this.initSimpleID();\n    // this.initWeb3();\n\n    this.connectGnosisSafe();\n\n    // TEST - Manually triggers transaction error\n    // this.openTransactionErrorModal(null,'Your Ledger device is Ineligible');\n\n    window.testTransaction = (method) => {\n      const transaction = this.createTransaction();\n      transaction.method = method;\n      this.addTransaction(transaction);\n      return transaction;\n    }\n\n    window.updateTransaction = (transaction,hash,status,params) => {\n      // Add meta data to transaction\n      transaction.status = status;\n      transaction.params = params;\n      transaction.type = \"contract\";\n      transaction.created = Date.now();\n      transaction.transactionHash = hash;\n\n      // console.log('window.updateTransaction',transaction);\n\n      this.updateTransaction(transaction);\n      return transaction;\n    }\n  }\n\n  connectGnosisSafe = () => {\n    const gnosisSafeLoaded = this.props.connectors.gnosis.safeLoaded;\n    if (gnosisSafeLoaded){\n      const walletProvider = this.functionsUtil.getWalletProvider();\n      const isGnosisSafe = this.props.connectors.gnosis.safeLoaded && !!this.props.connectors.gnosis.provider.safe;\n      // console.log('isGnosisSafe',this.props.connectors.gnosis.provider.safe,isGnosisSafe);\n      if (isGnosisSafe){\n        this.props.setConnector('gnosis','gnosis');\n      } else if (walletProvider === 'gnosis') {\n        this.props.setConnector('Infura',null);\n      }\n    }\n  }\n\n  componentDidUpdate = async (prevProps, prevState) => {\n\n    this.loadUtils();\n\n    // console.log('componentDidUpdate',prevProps.connectorName,this.props.connectorName,this.props.context.connectorName,prevProps.context.active,this.props.context.active,(this.props.context.error ? this.props.context.error.message : null));\n\n    const gnosisSafeLoaded = !this.state.gnosisSafeLoaded && this.props.connectors.gnosis.safeLoaded;\n    // console.log('gnosisSafeLoaded',this.state.gnosisSafeLoaded,this.props.connectors.gnosis.safeLoaded,gnosisSafeLoaded);\n    if (gnosisSafeLoaded){\n      this.setState({\n        gnosisSafeLoaded:true\n      },() => {\n        this.connectGnosisSafe();\n      });\n    }\n\n    if ((prevProps.connectorName !== this.props.connectorName && this.props.connectorName) || (this.props.context.active && prevProps.context.active !== this.props.context.active)){\n      // console.log('initWeb3_1',prevProps.connectorName,this.props.connectorName,prevProps.context.active,this.props.context.active);\n      this.initWeb3();\n    } else if ( prevProps.context !== this.props.context ){\n      if (this.props.context.error instanceof Error && this.props.context.error.message.length){\n        const errorMessage = this.props.context.error.message;\n        const isWalletConnectClosedModalError = (errorMessage === 'User closed WalletConnect modal' || errorMessage === 'User closed modal');\n        // this.functionsUtil.customLog('componentDidUpdate',setConnectorName,errorMessage);\n        if (setConnectorName === 'WalletConnect' && isWalletConnectClosedModalError){\n          // this.functionsUtil.customLog('WalletConnect disconnected! Set Infura connector');\n          this.props.setConnector('Infura',null);\n          // this.functionsUtil.removeStoredItem('walletProvider');\n          // this.functionsUtil.removeStoredItem('connectorName');\n          // this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:'Infura'}));\n          setConnectorName = null;\n          // await this.props.context.setConnector('Infura');\n        } else if (!isWalletConnectClosedModalError) {\n          this.openConnectionErrorModal(null,errorMessage);\n        } else {\n          // console.log('initWeb3_2',prevProps.connectorName,this.props.connectorName,prevProps.context.active,this.props.context.active);\n          this.initWeb3();\n        }\n      // WalletConnect double trigger initWeb3\n      } else if (this.props.context.active && this.props.context.connectorName!=='WalletConnect' && this.props.connectorName==='WalletConnect'){\n        // console.log('initWeb3_3',prevProps.context.connectorName,this.props.context.connectorName,prevProps.context.active,this.props.context.active);\n        this.initWeb3();\n      }\n    } else if ((this.props.context.connectorName && this.props.context.connectorName !== this.props.connectorName) || prevProps.customAddress !== this.props.customAddress){\n      // console.log('initWeb3_4',prevProps.context.connectorName,this.props.context.connectorName,prevProps.context.active,this.props.context.active);\n      this.initWeb3();\n    }\n\n    const currentNetworkChanged = this.state.networkInitialized && prevState.network.current.id !== this.state.network.current.id;\n    if (currentNetworkChanged){\n      // console.log('requiredNetworkChanged',this.state.networkInitialized,JSON.stringify(prevState.network),JSON.stringify(this.state.network));\n      this.initWeb3();\n    }\n\n    const requiredNetworkChanged = prevState.network.required.id !== this.state.network.required.id;\n    if (requiredNetworkChanged){\n      // console.log('requiredNetworkChanged',this.state.networkInitialized,JSON.stringify(prevState.network),JSON.stringify(this.state.network));\n      this.setState({\n        contracts:[],\n        contractsNetworks:{},\n        contractsInitialized:false\n      }, () => {\n        this.props.setNetwork(this.state.network);\n        this.initWeb3();\n      });\n    }\n\n    const availableStrategiesChanged = (!prevProps.availableStrategies && this.props.availableStrategies) || (prevProps.availableStrategies && this.props.availableStrategies && JSON.stringify(Object.keys(prevProps.availableStrategies)) !== JSON.stringify(Object.keys(this.props.availableStrategies)));\n    // console.log('availableStrategiesChanged',this.props.availableStrategies,availableStrategiesChanged);\n    if (availableStrategiesChanged){\n      await this.initializeContracts();\n    }\n\n    const customAddressChanged = prevProps.customAddress !== this.props.customAddress;\n    const contextAccountChanged = prevProps.context.account !== this.props.context.account;\n    const accountDisconnected = prevProps.connectorName !== this.props.connectorName && this.props.connectorName === 'Infura';\n    if (contextAccountChanged){\n      // console.log('contextAccountChanged',prevProps.context.account,this.props.context.account,contextAccountChanged);\n    }\n\n    if (accountDisconnected){\n      // console.log('accountDisconnected',prevProps.connectorName,this.props.connectorName,accountDisconnected);\n    }\n\n    if (customAddressChanged || contextAccountChanged || accountDisconnected){\n      this.initAccount();\n    }\n\n    // const availableTokensChanged = prevProps.availableTokens && this.props.availableTokens && JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n\n    // Reset tokenDecimals if token is changed\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged){\n      this.setState({\n        tokenDecimals: null\n      });\n    }\n\n    // this.functionsUtil.customLog(prevProps.enableUnderlyingWithdraw,this.props.enableUnderlyingWithdraw,this.state.enableUnderlyingWithdraw);\n    if (prevProps.enableUnderlyingWithdraw !== this.props.enableUnderlyingWithdraw){\n      this.setState({\n        enableUnderlyingWithdraw:this.props.enableUnderlyingWithdraw\n      });\n    }\n\n    if (localStorage){\n      const context = JSON.parse(localStorage.getItem('context'));\n      if (!context || (this.props.context.active !== context.active || this.props.context.connectorName !== context.connectorName)){\n        this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:this.props.context.connectorName}));\n      }\n    }\n\n    const selectedNetworkChanged = prevProps.config.requiredNetwork !== this.props.config.requiredNetwork;\n    if (selectedNetworkChanged){\n      // console.log('selectedNetworkChanged',JSON.stringify(prevProps.config.requiredNetwork),this.props.config.requiredNetwork);\n      this.handleNetworkChanged();\n    }\n  }\n\n  initCurrentWeb3 = async () => {\n\n  }\n\n  // Initialize a web3 provider\n  initWeb3 = async (connectorName=null) => {\n\n    // Detect ethereum provider\n    // const metamaskProvider = await detectEthereumProvider();\n    // if (metamaskProvider && (!window.ethereum || window.ethereum !== metamaskProvider)){\n    //   window.ethereum = metamaskProvider;\n    // }\n    if (!this.state.networkInitialized){\n      return false;\n    }\n\n    const context = this.props.context;\n    const networkId = this.state.network.required.id;\n    const walletProvider = this.functionsUtil.getWalletProvider();\n\n    // console.log(this.functionsUtil.strToMoment().format('HH:mm:ss'),'initWeb3 - START',networkId,walletProvider);\n\n    const availableNetworks = this.functionsUtil.getGlobalConfig(['network','availableNetworks']);\n    const networkConfig = availableNetworks[networkId];\n    const provider = networkConfig ? networkConfig.provider : 'infura';\n    const web3RpcKey = this.functionsUtil.getGlobalConfig(['network','providers',provider,'key']);\n    const web3Rpc = this.functionsUtil.getGlobalConfig(['network','providers',provider,'rpc',networkId])+web3RpcKey;\n\n    const useWeb3Provider = this.state.networkInitialized && this.state.network.isCorrectNetwork;\n    const web3InfuraRpc = this.functionsUtil.getGlobalConfig(['network','providers','infura','rpc',networkId])+this.functionsUtil.getGlobalConfig(['network','providers','infura','key']);\n    \n\n    const enabledNetworks = this.functionsUtil.getGlobalConfig(['network','enabledNetworks']);\n    const web3Providers = Object.keys(availableNetworks).filter( netId => enabledNetworks.includes(parseInt(netId)) ).reduce( (acc,netId) => {\n      const networkConfig = availableNetworks[netId];\n      const providerConfig = this.functionsUtil.getGlobalConfig(['network','providers',networkConfig.provider]);\n      const providerRpc = providerConfig.rpc[netId]+providerConfig.key;\n      acc[netId] = new Web3(new Web3.providers.HttpProvider(providerRpc));\n      return acc;\n    },{});\n\n    const web3Infura = new Web3(new Web3.providers.HttpProvider(web3InfuraRpc));\n\n    let currentWeb3 = context.library;\n    let web3 = useWeb3Provider ? context.library : null;\n\n    // 0x Instant Wallet Provider Injection\n    if (!window.RimbleWeb3_context || context.connectorName !== window.RimbleWeb3_context.connectorName){\n      window.RimbleWeb3_context = context;\n    }\n\n    // Reset setConnectorName if force connectorName\n    if (connectorName){\n      setConnectorName = null;\n    } else {\n      connectorName = this.props.connectorName;\n    }\n\n    // if (connectorName !== 'Infura' && connectorName !== 'Injected' && !context.library){\n    //   connectorName = 'Infura';\n    //   this.props.setConnector('Infura',null);\n    //   if (web3 && typeof web3.currentProvider.disable === 'function'){\n    //     web3.currentProvider.disable();\n    //   } else if (context.connector && typeof context.connector.disable === 'function'){\n    //     context.connector.disable();\n    //   }\n    // }\n\n    // const last_context = localStorage ? JSON.parse(localStorage.getItem('context')) : null;\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorName,context.connectorName,context.connector,(web3 && web3.currentProvider ? web3.currentProvider.disable : null),(context.connector ? context.connector.disable : null));\n    if (context && connectorName === 'Infura' && connectorName !== context.connectorName){\n      if (web3 && typeof web3.currentProvider.disable === 'function'){\n        web3.currentProvider.disable();\n      } else if (context.connector && typeof context.connector.disable === 'function'){\n        context.connector.disable();\n      }\n      web3 = null;\n      currentWeb3 = null;\n      setConnectorName = null;\n    }\n\n    const connectorNameChanged = (context.connectorName && context.connectorName !== connectorName) || (connectorName !== 'Infura' && connectorName !== setConnectorName);\n\n    // console.log('context',context.active,connectorNameChanged,context.connectorName,connectorName,setConnectorName);\n\n    if (connectorName !== 'ledgerLive'){\n      if (!context.active || connectorNameChanged) {\n        // Select preferred web3 provider\n        if (connectorName && connectorNameChanged){\n\n          if (connectorName === 'gnosis' && !this.state.gnosisSafeLoaded){\n            return false;\n          }\n\n          // this.functionsUtil.customLog('initWeb3 set connector',connectorName);\n          setConnectorName = connectorName;\n          await context.setConnector(connectorName);\n          // await context.setFirstValidConnector([connectorName, 'Infura']);\n          return web3;\n        }\n      }\n    }\n\n    let web3Host = web3Rpc;\n    let web3Provider = null;\n\n    // console.log('initWeb3-PRE',connectorName,currentWeb3,web3,context);\n\n    if (!web3) { // safety web3 implementation\n      if (window.ethereum) {\n        this.functionsUtil.customLog(\"Using modern web3 provider.\");\n        web3Provider = window.ethereum;\n      } else if (window.web3) {\n        this.functionsUtil.customLog(\"Legacy web3 provider. Try updating.\");\n        web3Provider = window.web3;\n      } else {\n        this.functionsUtil.customLog(\"Non-Ethereum browser detected. Using Infura fallback.\");\n        web3Host = web3InfuraRpc;\n      }\n    } else {\n      web3Provider = web3.currentProvider;\n    }\n\n    let forceCallback = false;\n\n    if ((!connectorName || connectorName === 'Infura') && web3Provider && typeof web3Provider.enable === 'function'){\n      try {\n        await web3Provider.enable();\n      } catch (connectionError){\n        web3Provider = null;\n        web3Host = web3InfuraRpc;\n        forceCallback = true;\n      }\n    }\n\n    // Ledger Live\n    if (connectorName === 'ledgerLive'){\n      web3Provider = new IFrameEthereumProvider();\n    }\n\n    // Injected web3 provider\n    if (web3Provider && useWeb3Provider){\n      web3 = new Web3(web3Provider);\n    // Infura\n    } else if (web3Host) {\n      web3 = web3Providers[networkId];\n    }\n\n    // console.log('initWeb3',connectorName,currentWeb3,web3,context,web3Provider/*,web3Provider===context.library.currentProvider*/);\n\n    let web3Polygon = null;\n    let maticPOSClient = null;\n    let maticPlasmaClient = null;\n\n    // const infuraConfig = globalConfigs.network.providers.infura;\n    const polygonConfig = globalConfigs.network.providers.polygon;\n\n    const currentNetwork = this.functionsUtil.getGlobalConfig(['network','availableNetworks',networkId]);\n    const polygonNetworkId = currentNetwork.provider === 'polygon' ? networkId : this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',networkId]);\n\n    if (polygonConfig && polygonConfig.enabled && polygonConfig.rpc && Object.keys(polygonConfig.rpc).includes(parseInt(polygonNetworkId).toString())){\n      const web3PolygonRpc = polygonConfig.rpc[polygonNetworkId]+this.functionsUtil.getGlobalConfig(['network','providers','polygon','key']);\n      web3Polygon = new Web3(new Web3.providers.HttpProvider(web3PolygonRpc));\n\n      const maticProvider = new Web3(new Web3.providers.HttpProvider(web3PolygonRpc));\n      const parentProvider = new Web3(new Web3.providers.HttpProvider(web3InfuraRpc));\n      // console.log('maticProvider',web3PolygonRpc);\n      // console.log('parentProvider',web3InfuraRpc);\n\n      const maticPOSClientConfig = {\n        maticProvider,\n        parentProvider,\n        network: networkConfig.network,\n        version: networkConfig.version\n      };\n      maticPOSClient = new MaticJs.MaticPOSClient(maticPOSClientConfig);\n\n      // console.log('maticPOSClientConfig',networkConfig,maticPOSClientConfig);\n\n      const maticPlasmaClientConfig = {\n        maticProvider,\n        parentProvider,\n        network: networkConfig.network,\n        version: networkConfig.version\n      };\n      maticPlasmaClient = new MaticJs(maticPlasmaClientConfig);\n    }\n\n    window.web3Polygon = web3Polygon;\n    window.maticPOSClient = maticPOSClient;\n    window.maticPlasmaClient = maticPlasmaClient;\n\n    if (window.ethereum) {\n      currentWeb3 = new Web3(window.ethereum);\n    } else if (window.web3) {\n      currentWeb3 = new Web3(window.web3);\n    } else {\n      currentWeb3 = web3Providers[networkId];\n    }\n\n    this.setState({\n      web3Infura,\n      currentWeb3,\n      web3Polygon,\n      web3Providers,\n      maticPOSClient,\n      maticPlasmaClient\n    },() => {\n      // this.checkNetwork();\n    });\n\n    const web3Callback = async () => {\n\n      window.web3Injected = this.state.web3;\n      // window.web3InfuraInjected = this.state.web3Infura;\n\n      if (typeof this.props.callbackAfterLogin === 'function'){\n        this.props.callbackAfterLogin();\n        this.props.setCallbackAfterLogin(null);\n      }\n\n      // console.log(this.functionsUtil.strToMoment().format('HH:mm:ss'),'initWeb3 - web3Callback');\n\n      // console.log('web3Callback',context);\n\n      // After setting the web3 provider, check network\n      try {\n        // if (!this.state.networkInitialized){\n        //   await this.checkNetwork();\n        // }\n\n        if (this.state.network.isSupportedNetwork){\n\n          // if (!this.state.contractsInitialized){\n            await this.initializeContracts();\n          // }\n\n          if (context.active && context.connectorName===connectorName && context.account){\n            // Login with biconomy\n            if (this.state.biconomy){\n              const biconomy = this.state.biconomy;\n              const biconomyInfo = globalConfigs.network.providers.biconomy;\n              if (biconomyInfo.enableLogin && !biconomy.isLogin && !biconomyLoginProcessing){\n                biconomyLoginProcessing = true;\n                biconomy.login(context.account, (error, response) => {\n                  // this.functionsUtil.customLog('biconomy login',error,response);\n                  // Failed to login with Biconomy\n                  if (error) {\n                    return this.setState({\n                      biconomy:false,\n                    },() => {\n                      this.initAccount(context.account);\n                    });\n                  }\n\n                  biconomyLoginProcessing = false;\n\n                  if (response.transactionHash) {\n                    this.initAccount(context.account);\n                  } else if(response.userContract) {\n                    this.initAccount(context.account);\n                  }\n                });\n                return false;\n              }\n            }\n\n            await this.initAccount(context.account);\n          } else {\n            await this.initAccount();\n            // await this.setState({\n            //   accountInizialized: true,\n            //   account: this.props.customAddress\n            // });\n          }\n        }\n      // Initialize Infura Web3 and display error\n      } catch (error) {\n        this.openConnectionErrorModal(null,error.message);\n      }\n    }\n\n    // Save original web3 connector in case Mexa initialization fails\n    const originalWeb3 = web3;\n    const biconomyInfo = globalConfigs.network.providers.biconomy;\n\n    if (connectorName !== 'Infura' && biconomyInfo && biconomyInfo.enabled && biconomyInfo.supportedNetworks.includes(networkId) && (!walletProvider || !biconomyInfo.disabledWallets.includes(walletProvider.toLowerCase()))){\n\n      const biconomyWeb3Provider = web3Provider ? web3Provider : new Web3.providers.HttpProvider(web3Host);\n      if (this.state.biconomy === null || this.state.biconomy.currentProvider !== biconomyWeb3Provider ){\n        const biconomy = new Biconomy(biconomyWeb3Provider,biconomyInfo.params);\n        if (biconomy && typeof biconomy.onEvent === 'function'){\n          web3 = new Web3(biconomy);\n          biconomy.onEvent(biconomy.READY, () => {\n            if (this.componentUnmounted || this.state.biconomy === false || this.state.biconomy === biconomy){\n              return false;\n            }\n            \n            const permitClient = biconomy.permitClient;\n            const erc20ForwarderClient = biconomy.erc20ForwarderClient;\n\n            const newState = {\n              web3,\n              biconomy,\n              web3Infura,\n              permitClient,\n              web3Providers,\n              erc20ForwarderClient\n            };\n            // console.log('biconomy',newState);\n\n            if (web3 !== this.state.web3){\n              this.setState(newState, web3Callback);\n            }\n          }).onEvent(biconomy.ERROR, (error, message) => {\n            // console.error('Biconomy error',error,message,this.state.biconomy);\n            web3 = originalWeb3;\n            // Handle error while initializing mexa\n            if (this.state.biconomy !== false){\n              this.setState({\n                web3,\n                biconomy:false\n              }, web3Callback);\n            }\n          });\n        } else {\n          this.setState({\n            web3,\n            biconomy:false\n          }, web3Callback);\n        }\n      }\n    } else {\n      if (web3 !== this.state.web3){\n        this.setState({\n          web3\n        }, web3Callback);\n      } else if (context.account || forceCallback){\n        web3Callback();\n      }\n    }\n\n    return web3;\n  }\n\n  initContract = async (name, address, abi, useInfuraProvider=false) => {\n    // console.log(`initContract: ${name} - addr: ${address}`);\n    return await this.createContract(name, address, abi, useInfuraProvider);\n  }\n\n  initContractWithoutSet = (name, address, abi, networkId=null) => {\n    // Reset networkId is equal to injected\n    if (networkId && parseInt(networkId) === parseInt(this.state.network.required.id) && this.state.network.isCorrectNetwork){\n      networkId = null;\n    }\n    const web3Provider = networkId && this.state.web3Providers[networkId] ? this.state.web3Providers[networkId] : (this.state.network.isCorrectNetwork ? this.state.web3 : this.state.web3Providers[this.state.network.required.id]);\n\n    if (!web3Provider){\n      return null;\n    }\n\n    // Create contract on initialized web3 provider with given abi and address\n    try {\n      const contract = new web3Provider.eth.Contract(abi, address);\n      return {name, contract};\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Could not create contract.\",name,address,error);\n    }\n\n    return null;\n  }\n\n  createContract = async (name, address, abi, useInfuraProvider=false) => {\n\n    const web3Provider = useInfuraProvider && this.state.web3Infura ? this.state.web3Infura : (this.state.network.isCorrectNetwork ? this.state.web3 : this.state.web3Providers[this.state.network.required.id]);\n\n    // if (name==='ERC20Predicate'){\n    //   console.log('createContract',this.state.network,web3Provider);\n    // }\n\n    if (!web3Provider){\n      return null;\n    }\n\n    if (!abi){\n      abi = [];\n    }\n\n    // Create contract on initialized web3 provider with given abi and address\n    try {\n      const contract = new web3Provider.eth.Contract(abi, address);\n      const contractInfo = {name, contract};\n\n      this.setState(prevState => {\n        // Remove old contract\n        const contracts = prevState.contracts.filter( c => c.name !== contractInfo.name );\n        // Insert updated contract\n        contracts.push(contractInfo);\n        return {\n          contracts\n        };\n      });\n\n      return contractInfo;\n    } catch (error) {\n      console.error(\"Could not create contract.\",name,address,abi,error);\n    }\n\n    return null;\n  }\n\n  initSimpleID = () => {\n\n    if (this.state.simpleID){\n      return this.state.simpleID;\n    }\n\n    const simpleIDInfo = globalConfigs.network.providers.simpleID;\n    let simpleID = null;\n    const networkId = this.state.network.current.id || this.state.network.required.id;\n\n    if (simpleIDInfo && simpleIDInfo.enabled && simpleIDInfo.supportedNetworks.indexOf(networkId) !== -1 ){\n      const simpleIDParams = simpleIDInfo.params;\n      simpleIDParams.network = simpleIDInfo.getNetwork(this.state.network.current.id,globalConfigs.network.availableNetworks);\n      simpleID = new SimpleID(simpleIDParams);\n    }\n\n    window.simpleID = simpleID;\n\n    this.setState({\n      simpleID\n    });\n\n    return simpleID;\n  }\n\n  initAccount = async (account=false) => {\n    \n    const customAddress = this.props.customAddress;\n    const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n\n    if (customAddress){\n      // Set custom account\n      return this.setState({\n        account:customAddress,\n        accountInizialized:true,\n      },()=>{\n        this.getAccountBalance();\n      });\n    } else if (this.props.connectorName === 'Infura' || !this.props.connectorName){\n      return this.setState({\n        account:null,\n        accountInizialized:true\n      });\n    }\n\n    try {\n\n      if (this.props.context.active && this.props.context.connectorName===this.props.connectorName && this.props.context.account){\n        account = this.props.context.account;\n      }\n\n      if (!account){\n        // const wallets = await Promise.race([\n        //     this.state.web3.eth.getAccounts(),\n        //     new Promise((resolve) => setTimeout(resolve, 300))\n        // ]);\n        const wallets = await this.state.web3.eth.getAccounts();\n\n        if (wallets && wallets.length){\n          account = wallets[0];\n        }\n      }\n\n      // console.log('initAccount',account,this.props.context.account);\n\n      if (!account){\n        account = this.props.context.account;\n      }\n\n      if (!account || this.state.account === account){\n        return this.setState({\n          accountInizialized: true\n        });\n      }\n\n      // Request account access if needed\n      if (account){\n\n        // Send address info to SimpleID\n        const simpleID = this.initSimpleID();\n\n        if (simpleID){\n\n          const notifications = await simpleID.notifications();\n\n          if (notifications && notifications.length && window.$crisp){\n\n            let shownNotifications = [];\n            if (localStorage){\n              shownNotifications = localStorage.getItem('shownNotifications') && JSON.parse(localStorage.getItem('shownNotifications')) ? JSON.parse(localStorage.getItem('shownNotifications')) : [];\n            }\n\n            notifications.forEach((n,i) => {\n\n              const notificationId = n.name;\n\n              // Show notification if not shown already\n              if (shownNotifications.indexOf(notificationId) === -1){\n                window.$crisp.push([\"do\", \"message:show\", [\"text\", this.functionsUtil.normalizeSimpleIDNotification(n.content) ]]);\n\n                // Save notification id\n                shownNotifications.push(notificationId);\n              }\n            });\n\n            // Store shown notification\n            if (localStorage){\n              this.functionsUtil.setLocalStorage('shownNotifications',JSON.stringify(shownNotifications));\n            }\n          }\n        }\n\n        // Send Google Analytics connection event\n        this.functionsUtil.sendGoogleAnalyticsEvent({\n          eventCategory: 'Connect',\n          eventAction: 'connected',\n          eventLabel: walletProvider\n        });\n\n        // this.functionsUtil.customLog('initAccount',account);\n\n        // Set custom account\n        this.setState({\n          account,\n          // web3SocketProvider,\n          accountInizialized: true\n        });\n\n        // After account is complete, get the balance\n        this.getAccountBalance();\n\n        // TODO subscribe for account changes, no polling\n        // set a state flag which indicates if the subscribe handler has been\n        // called at least once\n      } else {\n        return this.setState({\n          account:null,\n          accountInizialized: true,\n        });\n      }\n    } catch (error) {\n\n      this.setState({\n        accountInizialized: true\n      });\n\n      // User denied account access...\n      this.functionsUtil.customLog(\"User cancelled connect request. Error:\", error);\n\n      // this.functionsUtil.customLog(error);\n\n      // Catch ledger error\n      if (error && error.message && error.message.includes('MULTIPLE_OPEN_CONNECTIONS_DISALLOWED')) {\n        return;\n      }\n\n      // Send Sentry connection error\n      const isError = error instanceof Error;\n      if (this.functionsUtil.checkUrlOrigin() && isError){\n        Sentry.captureException(error);\n      }\n\n      // Reject Connect\n      // this.rejectAccountConnect(error);\n    }\n  }\n\n  // TODO: Can this be moved/combined?\n  rejectAccountConnect = error => {\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  getAccountBalance = async (increaseAmount) => {\n\n    increaseAmount = increaseAmount ? this.functionsUtil.BNify(increaseAmount) : null;\n\n    try {\n\n      let [accountBalance,accountBalanceToken,tokenDecimals] = await Promise.all([\n        this.state.web3.eth.getBalance(this.state.account), // Get ETH balance\n        this.getTokenBalance(this.state.account), // Get token balance\n        this.getTokenDecimals()\n      ]);\n\n      // console.log('getAccountBalance',parseFloat(accountBalance));\n\n      if (accountBalance) {\n\n        // Convert to wei if decimals found\n        if (accountBalance.toString().includes('.')){\n          accountBalance = this.state.web3.utils.toWei(accountBalance);\n        }\n\n        // Convert to Eth amount\n        accountBalance = this.state.web3.utils.fromWei(\n          accountBalance,\n          'ether'\n        );\n\n        accountBalance = this.functionsUtil.BNify(accountBalance).toString();\n\n        this.setState({\n          accountBalance\n        });\n\n        this.functionsUtil.customLog(\"account balance: \", accountBalance);\n      }\n\n      // this.functionsUtil.customLog('accountBalance',res,(accountBalanceToken ? accountBalanceToken.toString() : null),tokenDecimals,increaseAmount);\n\n      if (accountBalanceToken) {\n\n        accountBalanceToken = this.functionsUtil.BNify(accountBalanceToken);\n\n        // Increase balance amount if passed and balance didn't change\n        if (increaseAmount && this.state.accountBalanceToken && this.functionsUtil.normalizeTokenAmount(this.state.accountBalanceToken,tokenDecimals).toString() === accountBalanceToken.toString()){\n          accountBalanceToken = accountBalanceToken.plus(increaseAmount);\n        }\n        \n        accountBalanceToken = this.functionsUtil.fixTokenDecimals(accountBalanceToken,tokenDecimals).toString();\n\n        // this.functionsUtil.customLog('increaseAmount',(increaseAmount ? increaseAmount.toString() : '0'),(this.state.accountBalanceToken ? this.state.accountBalanceToken.toString() : '0'),(accountBalanceToken ? accountBalanceToken.toString() : 'ERROR'));\n        // this.functionsUtil.customLog(`account balance ${this.props.selectedToken}: `, accountBalanceToken);\n\n        this.setState({\n          accountBalanceToken,\n          [`accountBalance${this.props.selectedToken}`]:accountBalanceToken\n        });\n\n      } else {\n        this.functionsUtil.customLog('accountBalanceToken is not set:',accountBalanceToken);\n      }\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Failed to get account balance.\", error);\n    }\n  }\n\n  initializeContracts = async () => {\n\n    if (!this.state.web3 || !this.props.availableStrategies){\n      return false;\n    }\n\n    // console.log(this.functionsUtil.strToMoment().format('HH:mm:ss'),'initializeContracts - START',this.state.network.required.id,this.props.availableStrategies,this.props.availableStrategiesNetworks);\n\n    const contracts = [];\n    const contractsNetworks = {};\n    const requiredNetworkId = parseInt(this.state.network.required.id);\n    const availableNetworks = this.functionsUtil.getGlobalConfig(['network','enabledNetworks']);\n\n    if (this.props.availableStrategiesNetworks){\n      Object.keys(this.props.availableStrategiesNetworks).forEach( networkId => {\n        contractsNetworks[networkId] = [];\n        const strategies = this.props.availableStrategiesNetworks[networkId];\n        Object.keys(strategies).forEach( strategy => {\n          const availableTokens = this.props.availableStrategiesNetworks[networkId][strategy];\n          Object.keys(availableTokens).forEach( token => {\n            const tokenConfig = availableTokens[token];\n\n            this.functionsUtil.customLog('initializeContracts, init contract',token, tokenConfig.address);\n            contractsNetworks[networkId].push(this.initContractWithoutSet(token, tokenConfig.address, tokenConfig.abi, networkId));\n\n            this.functionsUtil.customLog('initializeContracts, init contract',tokenConfig.idle.token, tokenConfig.idle.address);\n            contractsNetworks[networkId].push(this.initContractWithoutSet(tokenConfig.idle.token, tokenConfig.idle.address, tokenConfig.idle.abi, networkId));\n\n            tokenConfig.protocols.forEach(async (p,i) => {\n              this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n              contractsNetworks[networkId].push(this.initContractWithoutSet(p.token, p.address, p.abi, networkId));\n            });\n          })\n        });\n      });\n    }\n\n    // console.log('initializeContracts',this.state.network,this.state.web3,contracts,this.props.availableStrategies);\n\n    const contractsToInitialize = this.functionsUtil.getGlobalConfig(['contracts',requiredNetworkId]);\n    if (contractsToInitialize){\n      Object.keys(contractsToInitialize).forEach( contractName => {\n        const contractInfo = contractsToInitialize[contractName];\n        if (contractInfo.address !== null && contractInfo.abi !== null){\n          const networkId = contractInfo.networkId ? parseInt(contractInfo.networkId) : requiredNetworkId;\n          // console.log('initializeContracts, init contract', requiredNetworkId, contractName, contractInfo.address);\n          contracts.push(this.initContractWithoutSet(contractName, contractInfo.address, contractInfo.abi, networkId));\n          contractsNetworks[requiredNetworkId].push(this.initContractWithoutSet(contractName, contractInfo.address, contractInfo.abi, networkId));\n        }\n      });\n    }\n\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    if (govTokens){\n      Object.keys(govTokens).forEach( token => {\n        const govTokenConfig = govTokens[token];\n        if (!govTokenConfig.enabled){\n          return;\n        }\n        availableNetworks.forEach( networkId => {\n          // Initialize govToken contracts\n          const contractAddress = govTokenConfig.addresses && govTokenConfig.addresses[networkId] ? govTokenConfig.addresses[networkId] : govTokenConfig.address;\n          this.functionsUtil.customLog('initializeContracts, init contract', token, contractAddress);\n          if (parseInt(networkId) === parseInt(requiredNetworkId)){\n            contracts.push(this.initContractWithoutSet(token, contractAddress, govTokenConfig.abi));\n          }\n          contractsNetworks[networkId].push(this.initContractWithoutSet(token, contractAddress, govTokenConfig.abi, networkId));\n        });\n      });\n    }\n\n    if (this.props.availableStrategies){\n      // Initialize Tokens Contracts\n      Object.keys(this.props.availableStrategies).forEach( strategy => {\n        const availableTokens = this.props.availableStrategies[strategy];\n        Object.keys(availableTokens).forEach( token => {\n          const tokenConfig = availableTokens[token];\n\n          this.functionsUtil.customLog('initializeContracts, init contract',token, tokenConfig.address);\n          contracts.push(this.initContractWithoutSet(token, tokenConfig.address, tokenConfig.abi));\n\n          // Initialize idleTokens contracts\n          this.functionsUtil.customLog('initializeContracts, init contract',tokenConfig.idle.token, tokenConfig.idle.address);\n          contracts.push(this.initContractWithoutSet(tokenConfig.idle.token, tokenConfig.idle.address, tokenConfig.idle.abi));\n\n          // Initialize protocols contracts\n          tokenConfig.protocols.forEach(async (p,i) => {\n            this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n            contracts.push(this.initContractWithoutSet(p.token, p.address, p.abi));\n          });\n\n          // Check migration contract\n          if (tokenConfig.migration){\n\n            if (tokenConfig.migration.oldContract){\n              const oldContract = tokenConfig.migration.oldContract;\n              this.functionsUtil.customLog('initializeContracts, init '+oldContract.name+' contract',oldContract);\n              contracts.push(this.initContractWithoutSet(oldContract.name, oldContract.address, oldContract.abi));\n            }\n\n            // Initialize protocols contracts\n            if (tokenConfig.migration.oldProtocols){\n              tokenConfig.migration.oldProtocols.forEach(async (p,i) => {\n                this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n                contracts.push(this.initContractWithoutSet(p.token, p.address, p.abi));\n              });\n            }\n\n            if (tokenConfig.migration.migrationContract){\n              const migrationContract = tokenConfig.migration.migrationContract;\n              this.functionsUtil.customLog('initializeContracts, init '+migrationContract.name+' contract',migrationContract);\n              contracts.push(this.initContractWithoutSet(migrationContract.name, migrationContract.address, migrationContract.abi));\n            }\n          }\n        })\n      });\n    }\n\n    const tranchesConfig = this.functionsUtil.getGlobalConfig(['strategies','tranches']);\n    if (this.props.availableTranches){\n      Object.keys(this.props.availableTranches).forEach( protocol => {\n        const tokens = this.props.availableTranches[protocol];\n        Object.keys(tokens).forEach( token => {\n          const tokenConfig = tokens[token];\n          if (!tranchesConfig.availableNetworks || tranchesConfig.availableNetworks.includes(requiredNetworkId)){\n            if (tokenConfig.abi){\n              contracts.push(this.initContractWithoutSet(tokenConfig.token,tokenConfig.address,tokenConfig.abi));\n            }\n            contracts.push(this.initContractWithoutSet(tokenConfig.AA.name,tokenConfig.AA.address,tokenConfig.AA.abi));\n            contracts.push(this.initContractWithoutSet(tokenConfig.BB.name,tokenConfig.BB.address,tokenConfig.BB.abi));\n            contracts.push(this.initContractWithoutSet(tokenConfig.CDO.name,tokenConfig.CDO.address,tokenConfig.CDO.abi));\n            contracts.push(this.initContractWithoutSet(tokenConfig.AA.CDORewards.name,tokenConfig.AA.CDORewards.address,tokenConfig.AA.CDORewards.abi));\n            contracts.push(this.initContractWithoutSet(tokenConfig.BB.CDORewards.name,tokenConfig.BB.CDORewards.address,tokenConfig.BB.CDORewards.abi));\n          }\n\n          if (tokenConfig.abi){\n            contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.token,tokenConfig.address,tokenConfig.abi,1));\n          }\n          contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.AA.name,tokenConfig.AA.address,tokenConfig.AA.abi,1));\n          contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.BB.name,tokenConfig.BB.address,tokenConfig.BB.abi,1));\n          contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.CDO.name,tokenConfig.CDO.address,tokenConfig.CDO.abi,1));\n          contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.AA.CDORewards.name,tokenConfig.AA.CDORewards.address,tokenConfig.AA.CDORewards.abi,1));\n          contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.BB.CDORewards.name,tokenConfig.BB.CDORewards.address,tokenConfig.BB.CDORewards.abi,1));\n        });\n      });\n    }\n\n    const newContracts = Object.assign([],this.state.contracts);\n    contracts.forEach( contractInfo => {\n      if (contractInfo){\n        const contractFound = newContracts.find( c => c.name===contractInfo.name );\n        if (!contractFound){\n          newContracts.push(contractInfo);\n        } else {\n          const contractIndex = newContracts.indexOf(contractFound);\n          newContracts[contractIndex] = contractInfo;\n        }\n      }\n    });\n\n    // console.log('initializeContracts',newContracts);\n\n    const newState = {\n      contractsNetworks,\n      contracts:newContracts,\n      contractsInitialized:true\n    };\n\n    return this.setState(newState);\n  }\n\n  getContractByName = async (contractName) => {\n    let contract = this.state.contracts.find(c => c.name === contractName);\n\n    if (!contract && this.props.tokenConfig) {\n      const tokenConfig = this.props.tokenConfig;\n      contract = await this.initContract(contractName, tokenConfig.address, tokenConfig.abi);\n    }\n\n    return contract ? contract.contract : null;\n  }\n\n  getTokenDecimals = async () => {\n    let tokenDecimals = null;\n\n    if (!this.state.tokenDecimals){\n\n      tokenDecimals = await this.functionsUtil.getTokenDecimals(this.props.selectedToken);\n\n      this.setState({\n        tokenDecimals\n      });\n    } else {\n      tokenDecimals = await (new Promise( async (resolve, reject) => {\n        resolve(this.state.tokenDecimals);\n      }));\n    }\n\n    return tokenDecimals;\n  }\n\n  getTokenBalance = async (account) => {\n    const contract = await this.getContractByName(this.props.selectedToken);\n\n    if (!contract) {\n      this.functionsUtil.customLogError('Wrong contract name', this.props.selectedToken);\n      return null;\n    }\n\n    if (!contract.methods['balanceOf']){\n      this.customLogError('Wrong method name balanceOf');\n      return null;\n    }\n\n    return await contract.methods.balanceOf(account).call().catch(error => {\n      this.functionsUtil.customLog(`Failed to get ${this.props.selectedToken} balance`, error);\n    });\n  }\n\n  determineAccountLowBalance = () => {\n    // If provided a minimum from config then use it, else default to 1\n    const accountBalanceMinimum =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.accountBalanceMinimum !== \"undefined\"\n        ? this.props.config.accountBalanceMinimum\n        : 1;\n    // Determine if the account balance is low\n    const accountBalanceLow =\n      this.state.accountBalance < accountBalanceMinimum;\n\n    this.setState({\n      accountBalanceLow\n    });\n  }\n\n  connectAndValidateAccount = async (callbackAfterLogin) => {\n    // Check for account\n    if (!this.state.account) {\n      this.props.setCallbackAfterLogin(callbackAfterLogin);\n      // Show modal to connect account\n      this.openConnectionModal();\n    }\n  }\n\n  getRequiredNetwork = () => {\n     const networkId = typeof this.props.config !== \"undefined\" && typeof this.props.config.requiredNetwork !== \"undefined\" ? this.props.config.requiredNetwork : globalConfigs.network.requiredNetwork;\n     const networkName = networkId && globalConfigs.network.availableNetworks[networkId] ? globalConfigs.network.availableNetworks[networkId].name : 'unknown';\n     return {\n       id: networkId,\n       name: networkName\n     };\n   }\n\n   getCurrentNetwork = async (networkId=null) => {\n     const currentWeb3 = this.functionsUtil.getCurrentWeb3();\n\n     networkId = parseInt(networkId) || await currentWeb3.eth.net.getId();\n     const networkName = this.functionsUtil.getGlobalConfig(['network','availableNetworks',networkId,'name']) || await currentWeb3.eth.net.getNetworkType();\n\n     return {\n       id:networkId,\n       name:networkName\n     }\n   }\n\n  getNetworkId = async () => {\n    try {\n      return this.state.web3.eth.net.getId((error, networkId) => {\n        let current = { ...this.state.network.current };\n        current.id = networkId;\n        let network = Object.assign({},this.state.network);\n        network.current = current;\n        network.isCorrectNetwork = globalConfigs.network.enabledNetworks.includes(networkId);\n        this.setState({ network });\n      });\n    } catch (error) {\n      this.functionsUtil.customLog(\"Could not get network ID: \", error);\n    }\n  }\n\n  checkNetwork = async (networkId=null) => {\n    const network = {...this.state.network};\n\n    network.required = this.getRequiredNetwork();\n    network.current = await this.getCurrentNetwork(networkId);\n\n    const networkInitialized = !!network.current.id;\n    network.isCorrectNetwork = !networkInitialized || network.current.id === network.required.id;\n    network.isSupportedNetwork = !network.current.id || globalConfigs.network.enabledNetworks.includes(network.current.id);\n\n    const currentNetworkChanged = network.current.id && network.current.id !== this.state.network.current.id;\n    const requiredNetworkChanged = network.required.id && network.required.id !== this.state.network.required.id;\n\n    if (!this.state.network.current.id || currentNetworkChanged || requiredNetworkChanged || !this.state.networkInitialized){\n      this.setState({\n        network,\n        networkInitialized\n      });\n    }\n\n    return network;\n  }\n\n  contractMethodSendWrapper = async (contractName, contractMethod, params = [], value = null, callback = null, callback_receipt = null, gasLimit = null, txData = null) => {\n    // Is it on the correct network?\n    if (!this.state.network.isCorrectNetwork) {\n      // wrong network modal\n      this.state.modals.methods.openWrongNetworkModal();\n      return false;\n    }\n\n    // Is a wallet connected and verified?\n    if (!this.state.account) {\n      this.openConnectionModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_not_connected');\n      }\n      return false;\n    }\n\n    // Are there a minimum amount of funds?\n    if (this.state.accountBalanceLow) {\n      this.openLowFundsModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_balance_low');\n      }\n      return false;\n    }\n\n    // Is the contract loaded?\n\n    // Create new tx and add to collection\n    // Maybe this needs to get moved out of the wrapper?\n    let transaction = this.createTransaction(txData);\n    transaction.method = contractMethod;\n\n    this.addTransaction(transaction);\n\n    // Add meta data to transaction\n    transaction.type = \"contract\";\n    transaction.status = \"started\";\n    transaction.params = params;\n\n    // Show toast for starting transaction\n    this.updateTransaction(transaction);\n\n    const { account, contracts } = this.state;\n    let contract = contracts.find(c => c.name === contractName);\n    if (!contract) {\n      if (typeof callback === 'function') {\n        callback(null,'contract_not_found');\n      }\n      return this.functionsUtil.customLog(`No contract with name ${contractName}`);\n    }\n\n    contract = contract.contract;\n\n    // Does the method exists?\n    // if (typeof contract.methods[contractMethod] === 'undefined'){\n    //   return false;\n    // }\n\n    let manualConfirmationTimeoutId = null;\n\n    try {\n\n      if (!value){\n        value = this.functionsUtil.BNify(0);\n      }\n\n      this.functionsUtil.customLog('contractMethodSendWrapper',contractName,contract._address,account,contractMethod,params,(value ? { from: account, value } : { from: account }));\n\n      // estimate gas price\n      let gas = await contract.methods[contractMethod](...params)\n        .estimateGas(value ? { from: account, value } : { from: account })\n        .catch(e => console.error(e));\n\n      if (gas) {\n\n        gas = this.functionsUtil.BNify(gas);\n        gas = gas.plus(gas.times(this.functionsUtil.BNify('0.2'))); // Increase 20% of enstimation\n\n        // Check if gas is under the gasLimit param\n        if (gasLimit && gas.lt(this.functionsUtil.BNify(gasLimit))){\n          gas = this.functionsUtil.BNify(gasLimit);\n        }\n\n        // Convert gasLimit toBN with web3 utils\n        gas = this.state.web3.utils.toBN(gas.integerValue(BigNumber.ROUND_FLOOR));\n      }\n\n      const confirmationCallback = (confirmationNumber, receipt) => {\n\n        // this.functionsUtil.customLog('confirmationCallback', confirmationNumber, receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // this.functionsUtil.customLog('txOnConfirmation', receipt);\n        // Update confirmation count on each subsequent confirmation that's received\n        transaction.confirmationCount += 1;\n\n        const call_callback = !globalConfigs.network.isForked && typeof callback === 'function' && transaction.confirmationCount===1;\n\n        // How many confirmations should be received before informing the user\n        const confidenceThreshold = this.props.config.requiredConfirmations || 1;\n\n        if (transaction.confirmationCount === 1) {\n          // Initial confirmation receipt\n          transaction.status = \"confirmed\";\n        } else if (transaction.confirmationCount < confidenceThreshold) {\n          // Not enough confirmations to match threshold\n        }\n\n        if (transaction.confirmationCount === confidenceThreshold) {\n          // Confirmations match threshold\n          // Check the status from result since we are confident in the result\n          if (receipt.status) {\n            transaction.status = \"success\";\n          } else if (!receipt.status) {\n            transaction.status = \"error\";\n          }\n        } else if (transaction.confirmationCount > confidenceThreshold) {\n          // Confidence threshold met\n        }\n\n\n        if (call_callback){\n          // Update transaction with receipt details\n          if (receipt){\n            transaction.txReceipt = receipt;\n          }\n          transaction.recentEvent = \"confirmation\";\n          this.updateTransaction(transaction);\n          \n          callback(transaction);\n\n          this.functionsUtil.customLog('Confirmed', confirmationNumber, receipt, transaction);\n        }\n      };\n\n      const manualConfirmation = (transactionHash,timeout) => {\n        if (!transactionHash){\n          return false;\n        }\n        this.state.web3.eth.getTransactionReceipt(transactionHash,(err,txReceipt) => {\n          if (txReceipt && txReceipt.status){\n            this.functionsUtil.customLog('Tx manualConfirmation', txReceipt);\n            confirmationCallback(1,txReceipt);\n          } else {\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(transactionHash,timeout) , timeout);\n          }\n        });\n      };\n\n      const receiptCallback = receipt => {\n\n        // this.functionsUtil.customLog('txOnReceipt', receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // Received receipt, met total number of confirmations\n        if (receipt){\n          transaction.txReceipt = receipt;\n        }\n        transaction.recentEvent = \"receipt\";\n\n        // If the network is forked use the receipt for confirmation\n        if (globalConfigs.network.isForked){\n          transaction.status = \"success\";\n          if (typeof callback === 'function') {\n            callback(transaction);\n          }\n        } else {\n          this.updateTransaction(transaction);\n\n          // Transaction mined, wait for manual confirmation\n          if (receipt.status){\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(receipt.transactionHash,4000), 2000);\n          }\n        }\n      };\n\n      // const networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n      // const common = { customChain:{ chainId: 1337, networkId: 1337 } };\n\n      return contract.methods[contractMethod](...params)\n        .send(value ? { from: account, value, gas/*, common*/ } : { from: account, gas/*, common*/ })\n        .on(\"transactionHash\", hash => {\n          this.functionsUtil.customLog('txOnTransactionHash', hash);\n\n          if (!hash){\n            this.functionsUtil.customLog('Skip transactionHash due to hash empty', hash);\n            return false;\n          }\n\n          transaction.transactionHash = hash;\n          transaction.status = \"pending\";\n          transaction.recentEvent = \"transactionHash\";\n          this.updateTransaction(transaction);\n\n          if (callback_receipt){\n            callback_receipt(transaction);\n          }\n\n          // Wait for manual confirmation only for mobile\n          if (this.props.isMobile){\n            if (manualConfirmationTimeoutId){\n              window.clearTimeout(manualConfirmationTimeoutId);\n            }\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(hash,60000), 20000);\n          }\n        })\n        .on(\"receipt\", receiptCallback)\n        .on(\"confirmation\", confirmationCallback)\n        .on(\"error\", error => {\n\n          console.log('Tx error',error);\n          \n          const isDeniedTx = error && error.message && typeof error.message.includes === 'function' ? error.message.includes('User denied transaction signature') : false;\n          \n          // Set error on transaction\n          transaction.status = \"error\";\n          transaction.recentEvent = \"error\";\n          this.updateTransaction(transaction);\n\n\n          // Show ToastProvider\n          if (!isDeniedTx){\n            window.toastProvider.addMessage(\"Something went wrong\", {\n              icon: 'Block',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n              colorTheme: 'light',\n              secondaryMessage: \"Please retry\",\n            });\n\n            const isError = error instanceof Error;\n\n            if (typeof error.message !== 'undefined'){\n              this.openTransactionErrorModal(null,error.message);\n            } else if (this.functionsUtil.checkUrlOrigin() && isError){\n              Sentry.captureException(error);\n            }\n          }\n\n          if (typeof callback === 'function') {\n            callback(transaction,error);\n          }\n        });\n    } catch (error) {\n\n      console.log('Tx catch error',error);\n\n      transaction.status = \"error\";\n      this.updateTransaction(transaction);\n\n      // TODO: should this be a custom error? What is the error here?\n      // TODO: determine how to handle error messages globally\n      window.toastProvider.addMessage(\"Something went really wrong, we are sorry\", {\n        icon: 'Block',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"failure\",\n        colorTheme: 'light',\n        secondaryMessage: \"Try refreshing the page :(\",\n      });\n\n      const isDeniedTx = error && error.message ? error.message.includes('User denied transaction signature') : false;\n\n      const isError = error instanceof Error;\n      if ( this.functionsUtil.checkUrlOrigin() && isError && !isDeniedTx){\n        Sentry.captureException(error);\n      }\n\n      if (typeof callback === 'function') {\n        // this.functionsUtil.customLog('Tx Failed',error,transaction,typeof callback);\n        callback(transaction,error);\n      }\n\n      return false;\n    }\n  }\n\n  // Create tx\n  createTransaction = (txData=null) => {\n    let transaction = {\n      ...txData\n    };\n    transaction.txReceipt = {};\n    transaction.created = Date.now();\n    transaction.confirmationCount = 0;\n    transaction.status = \"initialized\";\n    transaction.lastUpdated = Date.now();\n    transaction.token = this.props.selectedToken;\n    transaction.strategy = this.props.selectedStrategy;\n    transaction.networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    return transaction;\n  }\n\n  addTransaction = transaction => {\n    const transactions = { ...this.state.transactions };\n    transactions[`tx${transaction.created}`] = transaction;\n    this.setState({ transactions });\n  }\n\n  // Add/update transaction in state\n  updateTransaction = updatedTransaction => {\n    const transactions = { ...this.state.transactions };\n    const transaction = { ...updatedTransaction };\n    transaction.lastUpdated = Date.now();\n    transactions[`tx${updatedTransaction.created}`] = transaction;\n    this.setState({ transactions });\n\n    // Save transactions in localStorage only if pending or succeeded\n    // console.log('updateTransaction',transaction);\n    if (transaction.transactionHash){\n      // Clear cached data\n      this.functionsUtil.clearCachedData();\n\n      // Store transaction\n      this.functionsUtil.addStoredTransaction(`tx${transaction.created}`,transaction);\n    }\n\n    return transaction;\n  }\n\n  // CONNECTION MODAL METHODS\n  closeConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = false;\n    // this.functionsUtil.customLog(\"this.state\", this.state);\n    this.setState({ modals });\n  }\n\n  openConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = true;\n    this.setState({ modals: modals });\n  }\n\n  closeConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    this.setState({ modals });\n  }\n\n  openConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = true;\n    modals.data.transactionConnectionModalIsOpen = false;\n    modals.data.connectionModalIsOpen = false;\n\n    this.setState({ modals });\n  }\n\n  closeTransactionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = false;\n    this.setState({ modals });\n  }\n\n  openTransactionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = error;\n\n    this.setState({ modals });\n  }\n\n  closeConnectionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n\n    if (!this.state.modals.data.connectionError){\n      return false;\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionError = false;\n    this.setState({ modals });\n  }\n\n  openConnectionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n\n    // Handle generic error\n    if (error==='[object Object]'){\n      error = 'Unable to access to the wallet.'\n    }\n    \n    if (this.state.modals.data.connectionError !== error){\n      // console.log('openConnectionErrorModal',typeof error,typeof error === 'object' ? JSON.stringify(error) : error);\n      modals.data.connectionError = error;\n      this.setState({ modals });\n    }\n  }\n\n  closeUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = false;\n    this.setState({ modals });\n  }\n\n  openUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  closeNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  state = {\n    web3: null,\n    context:null,\n    account: null,\n    contracts: [],\n    biconomy: null,\n    simpleID: null,\n    web3Infura:null,\n    transactions: {},\n    web3Providers:{},\n    CrispClient: null,\n    currentWeb3: null,\n    permitClient:null,\n    tokenDecimals:null,\n    accountBalance: null,\n    contractsNetworks: {},\n    web3Subscription: null,\n    accountValidated: null,\n    gnosisSafeLoaded:false,\n    maticPlasmaClient:null,\n    accountBalanceDAI: null,\n    initWeb3: this.initWeb3,\n    accountBalanceLow: null,\n    networkInitialized:false,\n    accountInizialized:false,\n    erc20ForwarderClient:null,\n    subscribedTransactions:{},\n    contractsInitialized:false,\n    initAccount: this.initAccount,\n    accountValidationPending: null,\n    initSimpleID: this.initSimpleID,\n    initContract: this.initContract,\n    checkPreflight: this.checkPreflight,\n    validateAccount: this.validateAccount,\n    rejectValidation: this.rejectValidation,\n    getTokenDecimals: this.getTokenDecimals,\n    getAccountBalance: this.getAccountBalance,\n    initializeContracts: this.initializeContracts,\n    rejectAccountConnect: this.rejectAccountConnect,\n    contractMethodSendWrapper: this.contractMethodSendWrapper,\n    connectAndValidateAccount: this.connectAndValidateAccount,\n    enableUnderlyingWithdraw: this.props.enableUnderlyingWithdraw,\n    network: {\n      current: {},\n      required: {},\n      isCorrectNetwork: null,\n      checkNetwork: this.checkNetwork\n    },\n    modals: {\n      data: {\n        connectionError: null,\n        lowFundsModalIsOpen: null,\n        userRejectedConnect: null,\n        connectionModalIsOpen: null,\n        userRejectedValidation: null,\n        wrongNetworkModalIsOpen: null,\n        accountConnectionPending: null,\n        accountValidationPending: null,\n        transactionConnectionModalIsOpen: null,\n        noWalletModalIsOpen: this.noWalletModalIsOpen,\n        noWeb3BrowserModalIsOpen: this.noWeb3BrowserModalIsOpen,\n      },\n      methods: {\n        openLowFundsModal: this.openLowFundsModal,\n        openNoWalletModal: this.openNoWalletModal,\n        closeNoWalletModal: this.closeNoWalletModal,\n        closeLowFundsModal: this.closeLowFundsModal,\n        openConnectionModal: this.openConnectionModal,\n        closeConnectionModal: this.closeConnectionModal,\n        openWrongNetworkModal: this.openWrongNetworkModal,\n        closeWrongNetworkModal: this.closeWrongNetworkModal,\n        openNoWeb3BrowserModal: this.openNoWeb3BrowserModal,\n        closeNoWeb3BrowserModal: this.closeNoWeb3BrowserModal,\n        openConnectionErrorModal: this.openConnectionErrorModal,\n        closeConnectionErrorModal: this.closeConnectionErrorModal,\n        openTransactionErrorModal: this.openTransactionErrorModal,\n        closeTransactionErrorModal: this.closeTransactionErrorModal,\n        openConnectionPendingModal: this.openConnectionPendingModal,\n        closeConnectionPendingModal: this.closeConnectionPendingModal,\n        openUserRejectedValidationModal: this.openUserRejectedValidationModal,\n        openUserRejectedConnectionModal: this.openUserRejectedConnectionModal,\n        closeUserRejectedValidationModal: this.closeUserRejectedValidationModal,\n        closeUserRejectedConnectionModal: this.closeUserRejectedConnectionModal,\n      }\n    },\n    transaction: {\n      data: {\n        transactions: null\n      },\n      meta: {},\n      methods: {}\n    }\n  }\n\n  render() {\n    const connectionErrorModalOpened = typeof this.state.modals.data.connectionError === 'string' && this.state.modals.data.connectionError.length>0;\n    const transactionErrorModalOpened = typeof this.state.modals.data.transactionError === 'string' && this.state.modals.data.transactionError.length>0;\n    return (\n      <div>\n        <RimbleTransactionContext.Provider\n          {...this.props}\n          value={this.state}\n        />\n        <ConnectionModalUtil\n          {...this.props}\n          modals={this.state.modals}\n          network={this.state.network}\n          account={this.state.account}\n          isMobile={this.props.isMobile}\n          initAccount={this.state.initAccount}\n          setConnector={this.props.setConnector}\n          validateAccount={this.state.validateAccount}\n          accountValidated={this.state.accountValidated}\n          accountConnectionPending={this.state.accountConnectionPending}\n          accountValidationPending={this.state.accountValidationPending}\n        />\n        <TransactionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={transactionErrorModalOpened}\n        />\n        <ConnectionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={connectionErrorModalOpened}\n          setConnector={this.props.setConnector}\n        />\n        <NetworkUtil\n          web3={this.state.web3}\n          theme={this.props.theme}\n          network={this.state.network}\n          currentSection={this.props.currentSection}\n        />\n      </div>\n    );\n  }\n}\n\nexport default RimbleTransaction;\n","import React from \"react\";\nimport ExtLink from '../../ExtLink/ExtLink';\nimport FunctionsUtil from '../FunctionsUtil';\nimport { Box, Flex, Image, Text, Link, Icon } from \"rimble-ui\";\n// import NetworkIndicator from \"../../NetworkIndicator/NetworkIndicator\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass Header extends React.Component {\n  state = {\n\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidMount() {\n\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n\n    this.loadUtils();\n\n    if (this.props.network && !this.props.network.isCorrectNetwork){\n      return false;\n    }\n  }\n\n  render() {\n\n    let logoSrc = 'images/logo.svg';\n    let logoHeight = ['35px','48px'];\n    const isChristmas = this.functionsUtil.checkChristmas();\n    if (isChristmas){\n      logoHeight = ['42px','70px'];\n      logoSrc = 'images/logo-christmas.svg';\n    }\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n\n    return (\n      <Box\n        style={{\n          left: '0',\n          right: '0',\n          zIndex: 99,\n          position: 'absolute',\n        }}\n      >\n        <Flex\n          p={2}\n          alignItems={'center'}\n          justifyContent={'center'}\n          backgroundColor={'dark-blue'}\n          flexDirection={['column','row']}\n        >\n          <Text\n            color={'white'}\n            textAlign={'center'}\n          >\n            IDLE Governance Token is now live!\n          </Text>\n          <ExtLink\n            pr={2}\n            py={1}\n            mt={[1,0]}\n            ml={[0,2]}\n            pl={'12px'}\n            color={'white'}\n            style={{\n              display:'flex',\n              borderRadius:'8px',\n              flexDirection:'row',\n              alignItems:'flex-end'\n            }}\n            backgroundColor={'#0037ff'}\n            href={'https://idlefinance.medium.com/idle-governance-is-live-9b55e8f407d7'}\n          >\n            Read More\n            <Icon\n              ml={1}\n              size={'1.3em'}\n              color={'white'}\n              name={'KeyboardArrowRight'}\n            >\n            </Icon>\n          </ExtLink>\n        </Flex>\n        <Flex\n          pt={[3,4]}\n          mx={'auto'}\n          bg={\"transparent\"}\n          width={['98%','100%']}\n          maxWidth={['100%','100em']}\n          alignItems={['center','flex-start']}\n        >\n          <Flex\n            ml={[3, 5]}\n            width={[0.5, 3/12]}\n          >\n            <RouterLink\n              to=\"/\"\n            >\n              <Image\n                src={logoSrc}\n                position={'relative'}\n                height={logoHeight}\n              />\n            </RouterLink>\n          </Flex>\n          <Flex\n            width={[0.5,8/12]}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={\"flex-end\"}\n          >\n            <Flex\n              pr={[3,0]}\n              alignItems={'center'}\n              flexDirection={'row'}\n            >\n              {\n                governanceEnabled && \n                  <Link\n                    fontSize={3}\n                    color={'white'}\n                    hoverColor={'white'}\n                    fontFamily={'sansSerif'}\n                    textAlign={['center','left']}\n                    onClick={ (e) => window.location.hash='#/governance' }\n                  >\n                    Governance\n                  </Link>\n              }\n              {\n                !this.props.isMobile && (\n                  <>\n                    <Link\n                      mx={4}\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('contacts').offsetTop,300)}}\n                    >\n                      Contact Us\n                    </Link>\n                    <Link\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('faq').offsetTop,300)}}\n                    >\n                      FAQs\n                    </Link>\n                  </>\n                )\n              }\n            </Flex>\n            {\n              /*\n              <Flex\n                ml={4}\n              >\n                <NetworkIndicator\n                  {...this.props}\n                />\n              </Flex>\n              */\n            }\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default Header;\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}","import Footer from '../Footer/Footer';\nimport React, { Component } from 'react';\nimport styles from './PageNotFound.module.scss';\nimport { Box, Flex, Heading, Button } from 'rimble-ui'\nimport Header_styles from '../utilities/components/Header.module.scss';\nimport {\n  Link as RouterLink,\n} from \"react-router-dom\";\n\nclass PageNotFound extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.3em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                This page doesn't exist!\n              </Heading.h1>\n              <Heading.h3 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.6em'} fontWeight={2} fontSize={['1.5em',4]} textAlign={'center'} color={'white'}>\n                Sorry, the page you are looking for cannot be found.\n              </Heading.h3>\n              <RouterLink to=\"/\" style={{textDecoration:'none'}}>\n                <Button\n                  className={Header_styles.gradientButton}\n                  borderRadius={4}\n                  size={this.props.isMobile ? 'medium' : 'medium'}\n                  mainColor={'blue'}\n                  contrastColor={'white'}\n                  fontWeight={3}\n                  fontSize={[2,2]}\n                  mx={'auto'}\n                  px={[4,5]}\n                  mt={2}\n                >\n                  GO TO HOMEPAGE\n                </Button>\n              </RouterLink>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default PageNotFound;\n","import React from \"react\";\nimport { Box, Flex, Text } from \"rimble-ui\";\n\nclass NetworkOverview extends React.Component {\n  getNetworkCircleColor = () => {\n    let circleColor = \"#333\";\n    if (this.props.network) {\n      switch (this.props.network.id) {\n        case 1:\n          circleColor = \"#56b3ae\";\n          break;\n        case 2:\n          circleColor = \"#000\";\n          break;\n        case 3:\n          circleColor = \"#ed5a8d\";\n          break;\n        case 4:\n          circleColor = \"#efc35c\";\n          break;\n        case 42:\n          circleColor = \"#6a5ff6\";\n          break;\n        default:\n          circleColor = \"#ccc\";\n      }\n    }\n\n    return circleColor;\n  };\n\n  render() {\n    const networkCircle = {\n      borderRadius: \"50%\",\n      backgroundColor: this.getNetworkCircleColor(),\n      height: \"1em\",\n      width: \"1em\"\n    };\n\n    return (\n      <Flex alignItems={\"center\"}>\n        <Box style={networkCircle} mr={2} />\n        <Text style={{ textTransform: \"capitalize\" }}>\n          {this.props.network.name}\n        </Text>\n      </Flex>\n    );\n  }\n}\n\nexport default NetworkOverview;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Flex,\n  ToastMessage,\n  Box,\n  Button,\n  Link\n} from \"rimble-ui\";\nimport NetworkOverview from \"../utilities/components/NetworkOverview\";\n\nconst DebuggerButtons = props => (\n  <Box mt={4} borderTop={1} borderColor=\"#E8E8E8\" pt={3}>\n    <Heading.h4 textAlign={\"center\"}>Show Modal</Heading.h4>\n    <Button\n      onClick={props.modals.methods.openWrongNetworkModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Blocking Wrong Network\n    </Button>\n\n    <Button\n      onClick={props.modals.methods.openConnectionModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Connection\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openConnectionPendingModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Pending\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openUserRejectedConnectionModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Rejected\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={event => {\n        props.modals.methods.openLowFundsModal(event);\n      }}\n      mr={2}\n      mb={2}\n    >\n      Low Funds\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWeb3BrowserModal}\n      mr={2}\n      mb={2}\n    >\n      Not Web3 Browser\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWalletModal}\n      mr={2}\n      mb={2}\n    >\n      No Wallet\n    </Button>\n  </Box>\n);\n\nclass Web3Debugger extends React.Component {\n  render() {\n    return (\n      <Card width={\"600px\"} mx={\"auto\"} px={4}>\n        <Heading.h3 textAlign={\"center\"}>Get Connected</Heading.h3>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            <Icon name=\"Check\" color={\"green\"} mr={2} />\n            <Text>Modern & Web3 Capable Browser</Text>\n          </Flex>\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.web3 ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Browser-connected Wallet</Text>\n          </Flex>\n\n          {!this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">You do not have a wallet.</Text>\n              </Flex>\n\n              <Link\n                href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                <Button.Outline size=\"small\">\n                  Get MetaMask Extension\n                </Button.Outline>\n              </Link>\n            </Flex>\n          ) : null}\n        </Box>\n\n        {this.props.web3 ? (\n          <Flex\n            py={3}\n            my={3}\n            borderTop={1}\n            borderBottom={1}\n            borderColor={\"#E8E8E8\"}\n            textAlign={\"center\"}\n            justifyContent={\"space-around\"}\n            alignItems={\"center\"}\n          >\n            <Button\n              size=\"small\"\n              onClick={this.props.connectAndValidateAccount}\n              disabled={!this.props.web3}\n            >\n              Connect and verify\n            </Button>\n            <Text>- or -</Text>\n            <Button size=\"small\" disabled>\n              Initiate On-Chain Action\n            </Button>\n          </Flex>\n        ) : null}\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.network.isCorrectNetwork ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Correct Network</Text>\n          </Flex>\n\n          {this.props.web3 && !this.props.network.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Box>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Current network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.current} />\n                  </Flex>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Required network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.required} />\n                  </Flex>\n                </Box>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.checkNetwork}>\n                Check Network\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.web3 && this.props.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <NetworkOverview network={this.props.network.current} />\n            </Flex>\n          ) : null}\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.account && this.props.accountValidated ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Wallet connected and verified</Text>\n          </Flex>\n\n          {!this.props.account &&\n          this.props.web3 &&\n          !this.props.userRejectedConnect ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Not connected to this dApp.</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.account && this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n              <Box>\n                <Text color=\"#999\">Connected wallet {this.props.account}</Text>\n                <Text color={this.props.accountBalanceLow ? \"red\" : \"#999\"}>\n                  Account balance {this.props.accountBalance}\n                </Text>\n              </Box>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedConnect ? (\n            <Flex ml={4} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">User rejected Connect request</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {(this.props.accountValidated === null ||\n            this.props.accountValidated === false) &&\n          this.props.web3 ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.accountValidated === false ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedValidation === false ? (\n            <Flex ml={4}>\n              <Icon name=\"Error\" mr={2} color=\"red\" />\n              <Text color=\"red\">Account not verified</Text>\n            </Flex>\n          ) : null}\n        </Box>\n\n        <DebuggerButtons {...this.props} />\n\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </Card>\n    );\n  }\n}\n\nexport default Web3Debugger;\n","import ERC20 from '../contracts/ERC20.json';\nimport IdleCDO from '../contracts/IdleCDO.json';\nimport IdleStrategy from '../contracts/IdleStrategy.json';\nimport IdleCDOTrancheRewards from '../contracts/IdleCDOTrancheRewards.json';\nimport TrancheStakingRewards from '../contracts/TrancheStakingRewards.json';\nconst availableTranches = {\n  idle:{\n    DAI:{\n      token:'DAI',\n      decimals:18,\n      protocol:'idle',\n      blockNumber:13054628,\n      address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_idleDAIYield',\n        address:'0xd0DbcD556cA22d3f3c142e9a3220053FD7a247BC'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_idleDAIYield'\n      },\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA',\n          stakedBalance:'usersStakes',\n          rewards:'expectedUserReward'\n        },\n        CDORewards:{\n          decimals:18,\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_idleDAIYield_AA',\n          address:'0x9c3bC87693c65E740d8B2d5F0820E04A61D8375B',\n          stakingRewards:[\n            {\n              token:'IDLE',\n              enabled:true,\n              address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e'\n            }\n          ]\n        },\n        label:'idleDAI AA',\n        blockNumber:13054628,\n        name:'AA_idleDAIYield',\n        token:'AA_idleDAIYield',\n        address:'0xE9ada97bDB86d827ecbaACCa63eBcD8201D8b12E'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB',\n          stakedBalance:'usersStakes'\n        },\n        CDORewards:{\n          decimals:18,\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_idleDAIYield_BB',\n          address:'0x4473bc90118b18be890af42d793b5252c4dc382d',\n          stakingRewards:[\n            {\n              token:'IDLE',\n              enabled:false,\n              address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e'\n            }\n          ]\n        },\n        label:'idleDAI BB',\n        blockNumber:13054628,\n        name:'BB_idleDAIYield',\n        token:'BB_idleDAIYield',\n        address:'0x730348a54bA58F64295154F0662A08Cbde1225c2'\n      }\n    },\n    FEI:{\n      token:'FEI',\n      decimals:18,\n      protocol:'idle',\n      blockNumber:13575397,\n      address:'0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_idleFEIYield',\n        address:'0x77648a2661687ef3b05214d824503f6717311596'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_idleFEIYield'\n      },\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA',\n          stakedBalance:'usersStakes',\n          rewards:'expectedUserReward'\n        },\n        CDORewards:{\n          decimals:18,\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_idleFEIYield_AA',\n          address:'0x8fcD21253AaA7E228531291cC6f644d13B3cF0Ba',\n          stakingRewards:[\n            {\n              token:'IDLE',\n              enabled:true,\n              address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e'\n            }\n          ]\n        },\n        label:'idleFEI AA',\n        blockNumber:13575397,\n        name:'AA_idleFEIYield',\n        token:'AA_idleFEIYield',\n        address:'0x9cE3a740Df498646939BcBb213A66BBFa1440af6'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB',\n          stakedBalance:'usersStakes'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_idleFEIYield_BB',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        label:'idleFEI BB',\n        blockNumber:13575397,\n        name:'BB_idleFEIYield',\n        token:'BB_idleFEIYield',\n        address:'0x2490D810BF6429264397Ba721A488b0C439aA745'\n      }\n    }\n  },\n  lido:{\n    stETH:{\n      abi:ERC20,\n      decimals:18,\n      token:'stETH',\n      protocol:'lido',\n      blockNumber:13776954,\n      address:'0xae7ab96520de3a18e5e111b5eaab095312d7fe84',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_lido_stETH',\n        address:'0x34dcd573c5de4672c8248cd12a99f875ca112ad8'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_lido_stETH'\n      },\n      buyInstructions:'To get stETH token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://stake.lido.fi\">Lido ETH staking</a>.',\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          unstake:'exit',\n          rewards:'earned',\n          claim:'getReward',\n          deposit:'depositAA',\n          withdraw:'withdrawAA',\n          rewardsRate:'rewardRate',\n          stakedBalance:'balanceOf'\n        },\n        CDORewards:{\n          decimals:18,\n          unstakeWithBalance:false,\n          stakingRewards:[\n            {\n              token:'LDO',\n              enabled:true,\n              address:'0x5a98fcbea516cf06857215779fd812ca3bef1b32'\n            }\n          ],\n          abi:TrancheStakingRewards,\n          name:'TrancheStakingRewards_lido_stETH_AA',\n          address:'0xd7c1b48877a7dfa7d51cf1144c89c0a3f134f935'\n        },\n        blockNumber:13776954,\n        name:'AA_lido_stETH',\n        token:'AA_lido_stETH',\n        label:'lido stETH AA',\n        address:'0x2688fc68c4eac90d9e5e1b94776cf14eade8d877'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB',\n          stakedBalance:'usersStakes'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_lido_stETH_BB',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:13776954,\n        name:'BB_lido_stETH',\n        token:'BB_lido_stETH',\n        label:'lido stETH BB',\n        address:'0x3a52fa30c33caf05faee0f9c5dfe5fd5fe8b3978'\n      }\n    }\n  },\n  convex:{\n    FRAX3CRV:{\n      abi:ERC20,\n      decimals:18,\n      token:'FRAX3CRV',\n      protocol:'convex',\n      blockNumber:13812864,\n      autoFarming:['CVX','CRV'],\n      address:'0xd632f22692FaC7611d2AA1C0D552930D43CAEd3B',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_convex_frax3crv',\n        address:'0x4ccaf1392a17203edab55a1f2af3079a8ac513e7'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_convex_frax3crv'\n      },\n      buyInstructions:'To get FRAX3CRV token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/frax/deposit\">FRAX Curve Pool</a>.',\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA',\n          stakedBalance:'usersStakes',\n          rewards:'expectedUserReward'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_frax3crv_AA',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:13812864,\n        name:'AA_convex_frax3crv',\n        token:'AA_convex_frax3crv',\n        label:'convex frax3crv AA',\n        address:'0x15794da4dcf34e674c18bbfaf4a67ff6189690f5'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB',\n          stakedBalance:'usersStakes'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_frax3crv_BB',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:13812864,\n        name:'BB_convex_frax3crv',\n        token:'BB_convex_frax3crv',\n        label:'convex frax3crv BB',\n        address:'0x18cf59480d8c16856701f66028444546b7041307'\n      }\n    },\n    MIM3CRV:{\n      abi:ERC20,\n      decimals:18,\n      token:'MIM3CRV',\n      protocol:'convex',\n      blockNumber:13848124,\n      autoFarming:['CVX','CRV'],\n      address:'0x5a6A4D54456819380173272A5E8E9B9904BdF41B',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_convex_mim3crv',\n        address:'0x151e89e117728ac6c93aae94c621358b0ebd1866'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_convex_mim3crv'\n      },\n      buyInstructions:'To get MIM3CRV token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/mim/deposit\">MIM Curve Pool</a>.',\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA',\n          stakedBalance:'usersStakes',\n          rewards:'expectedUserReward'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_mim3crv_AA',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:13848124,\n        name:'AA_convex_mim3crv',\n        token:'AA_convex_mim3crv',\n        label:'convex mim3crv AA',\n        address:'0xFC96989b3Df087C96C806318436B16e44c697102'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB',\n          stakedBalance:'usersStakes'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_mim3crv_BB',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:13848124,\n        name:'BB_convex_mim3crv',\n        token:'BB_convex_mim3crv',\n        label:'convex mim3crv BB',\n        address:'0x5346217536852CD30A5266647ccBB6f73449Cbd1'\n      }\n    }\n  }\n};\nexport default availableTranches;","const TransactionToastMessages = {\n    initialized: {\n      message: \"{action} request initialized\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    started: {\n      message: \"{action} request submitted\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    pending: {\n      message: \"Processing {action} request...\",\n      secondaryMessage: \"This may take a few minutes\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: \"InfoOutline\"\n    },\n    confirmed: {\n      message: \"First block confirmed\",\n      secondaryMessage: \"Your {action} request is in progress\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: 'CheckCircle'\n    },\n    success: {\n      message: \"{action} request completed\",\n      variant: \"success\",\n      icon: 'CheckCircle'\n    },\n    error: {\n      message: \"{action} request failed\",\n      secondaryMessage: \"Could not complete transaction.\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"failure\",\n      icon: \"Block\"\n    }\n  };\n\n  export default TransactionToastMessages;\n","import React from \"react\";\nimport { ToastMessage } from \"rimble-ui\";\nimport TransactionToastMessages from \"./TransactionToastMessages\";\n\nclass TransactionToastUtil extends React.Component {\n  // Determines if collections are same size\n  collectionHasNewObject = (prevCollection, currentCollection) => {\n    return (\n      typeof prevCollection === \"undefined\" ||\n      Object.keys(prevCollection).length !==\n        Object.keys(currentCollection).length\n    );\n  };\n\n  // Returns object from currentCollection that doesn't exist in prevCollection\n  getNewObjectFromCollection = (prevCollection, currentCollection) => {\n    if (typeof prevCollection !== \"undefined\") {\n      const objectKey = Object.keys(currentCollection).filter(key => {\n        return !Object.keys(prevCollection).includes(key);\n      });\n      return currentCollection[objectKey];\n    } else {\n      return Object.keys(currentCollection).map(key => {\n        return currentCollection[key];\n      });\n    }\n  };\n\n  // Compare two collections of objects, return single object from current collection that differs from prev collection\n  getUpdatedObjectFromCollection = (prevCollection, currentCollection) => {\n    const updatedTransaction = Object.keys(prevCollection)\n      .map(key => {\n        if (\n          prevCollection[key].lastUpdated !== currentCollection[key].lastUpdated\n        ) {\n          return currentCollection[key];\n        } else {\n          return null;\n        }\n      })\n      .filter(object => object !== null);\n    return updatedTransaction[0];\n  };\n\n  // Returns an transaction from a collection based on a given identifier\n  getTransactionFromCollection = (identifier, collection) => {\n    const object = collection[`tx${identifier}`];\n    return object;\n  };\n\n  // Returns either a new object or finds an updated object in a collection against a previous collection\n  getUpdatedTransaction = (prevCollection, currentCollection) => {\n    let tx = null;\n    let currentTx = {};\n    let prevTx = {};\n\n    if (this.collectionHasNewObject(prevCollection, currentCollection)) {\n      tx = this.getNewObjectFromCollection(prevCollection, currentCollection);\n    } else {\n      currentTx = this.getUpdatedObjectFromCollection(\n        prevCollection,\n        currentCollection\n      );\n      if (currentTx) {\n        prevTx = this.getTransactionFromCollection(\n          currentTx.created,\n          prevCollection\n        );\n      } else {\n        return false;\n      }\n\n      if (currentTx.status !== prevTx.status) {\n        tx = currentTx;\n      }\n    }\n    return tx;\n  };\n\n  // Check for updates to the transactions collection\n  processTransactionUpdates = prevProps => {\n    let tx = null;\n    if (Object.keys(this.props.transactions).length) {\n      tx = this.getUpdatedTransaction(\n        prevProps.transactions,\n        this.props.transactions\n      );\n    }\n\n    if (tx) {\n      this.showTransactionToast(tx);\n    }\n  };\n\n  showTransactionToast = transaction => {\n    // console.log(\"showTransactionToast: \", { ...transaction });\n    // Get text info for toast\n    let toastMeta = this.getTransactionToastMeta(transaction);\n    toastMeta.colorTheme = this.props.themeMode;\n    toastMeta.closeElem = true;\n    // console.log('toastMeta',toastMeta);\n\n    // Show toast\n    window.toastProvider.addMessage(\".\", toastMeta);\n  };\n\n  getTransactionToastMeta = transaction => {\n    let transactionToastMeta = {};\n    let status = transaction.status;\n\n    switch (status) {\n      case \"initialized\":\n        transactionToastMeta = TransactionToastMessages.initialized;\n        break;\n      case \"started\":\n        transactionToastMeta = TransactionToastMessages.started;\n        break;\n      case \"pending\":\n        transactionToastMeta = TransactionToastMessages.pending;\n        break;\n      case \"confirmed\":\n        transactionToastMeta = TransactionToastMessages.confirmed;\n        break;\n      case \"success\":\n        transactionToastMeta = TransactionToastMessages.success;\n        break;\n      case \"error\":\n        transactionToastMeta = TransactionToastMessages.error;\n        break;\n      default:\n        // do nothing\n        break;\n    }\n\n    let transactionAction = '';\n    switch (transaction.method){\n      case 'redeemIdleToken':\n        transactionAction = 'Redeem';\n      break;\n      case 'redeemGovTokens':\n        transactionAction = 'Redeem (Gov Tokens)';\n      break;\n      case 'mintIdleToken':\n      case 'mintIdleTokensProxy':\n        transactionAction = 'Lending';\n      break;\n      case 'migrateFromToIdle':\n      case 'migrateFromCompoundToIdle':\n      case 'migrateFromFulcrumToIdle':\n      case 'migrateFromAaveToIdle':\n      case 'migrateFromIearnToIdle':\n      case 'bridgeIdleV1ToIdleV2':\n        transactionAction = 'Migration';\n      break;\n      case 'executeMetaTransaction':\n        transactionAction = 'Meta-Tx';\n      break;\n      case 'approve':\n        transactionAction = 'Approve';\n      break;\n      case 'rebalance':\n        transactionAction = 'Rebalance';\n      break;\n      default:\n        transactionAction = transaction.method.charAt(0).toUpperCase() + transaction.method.substr(1);\n      break;\n    }\n\n    transactionToastMeta = JSON.parse(JSON.stringify(transactionToastMeta));\n\n    let newMessage = transactionToastMeta.message.replace('{action}',transactionAction);\n    newMessage = newMessage.charAt(0).toUpperCase() + newMessage.slice(1);\n    transactionToastMeta.message = newMessage;\n    transactionToastMeta.closeElem = true;\n    transactionToastMeta.colorTheme = this.props.themeMode;\n\n    return transactionToastMeta;\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    this.processTransactionUpdates(prevProps);\n  }\n\n  render() {\n    return (\n      <div>\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </div>\n    );\n  }\n}\n\nexport default TransactionToastUtil;\n","import Web3 from \"web3\";\nimport jQuery from \"jquery\";\nimport theme from \"../theme\";\nimport Tos from \"../Tos/Tos\";\nimport themeDark from \"../theme-dark\";\nimport connectors from \"./connectors\";\nimport Web3Provider from \"web3-react\";\nimport { Web3Consumer } from \"web3-react\";\nimport CookieConsent from \"react-cookie-consent\";\nimport RimbleWeb3 from \"../utilities/RimbleWeb3\";\nimport FlexLoader from \"../FlexLoader/FlexLoader\";\nimport React, { Component, Suspense } from \"react\";\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport Header from \"../utilities/components/Header\";\nimport globalConfigs from \"../configs/globalConfigs\";\nimport ScrollToTop from \"../ScrollToTop/ScrollToTop\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport PageNotFound from \"../PageNotFound/PageNotFound\";\nimport Web3Debugger from \"../Web3Debugger/Web3Debugger\";\nimport availableTokens from \"../configs/availableTokens\";\nimport availableTranches from \"../configs/availableTranches\";\nimport TransactionToastUtil from \"../utilities/TransactionToastUtil\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { ThemeProvider, Box, Text, Link, Image, Flex } from \"rimble-ui\";\n\n// Lazy Loading\nconst Landing = React.lazy(() => import(\"../Landing/Landing\"));\nconst Dashboard = React.lazy(() => import(\"../Dashboard/Dashboard\"));\nconst Governance = React.lazy(() => import(\"../Governance/Governance\"));\n\nclass App extends Component {\n  state = {\n    network: null,\n    cachedData: {},\n    buyToken: null,\n    currentEnv: null,\n    selectedTab: '1',\n    route: \"default\", // or 'onboarding'\n    themeMode: 'light',\n    connecting: false,\n    tokenConfig: null,\n    genericError: null,\n    customAddress: null,\n    connectorName: null,\n    selectedToken: null,\n    selectedTheme: theme,\n    currentSection: null,\n    walletProvider: null,\n    availableTokens: null,\n    buyModalOpened: false,\n    selectedProtocol: null,\n    selectedStrategy: null,\n    toastMessageProps: null,\n    callbackAfterLogin: null,\n    width: window.innerWidth,\n    availableStrategies: null,\n    height: window.innerHeight,\n    config:globalConfigs.network,\n    unsubscribeFromHistory: null,\n    enableUnderlyingWithdraw: false,\n    availableStrategiesNetworks: null\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n    // window.functionsUtil = this.functionsUtil;\n  }\n\n  closeToastMessage = (e) => {\n    if (e) {\n      e.preventDefault();\n    }\n    this.setState({\n      toastMessageProps: null\n    });\n  }\n\n  showToastMessage = (props) => {\n    this.setState({\n      toastMessageProps: props\n    });\n  }\n\n  processCustomParam = (props, prevProps) => {\n    // const params = props ? props.match.params : null;\n    // const prevParams = prevProps ? prevProps.match.params : null;\n\n    // Reset params\n    /*\n    if ( prevParams && params && prevParams.customParam !== params.customParam && (!params || !params.customParam || params.customParam === undefined)){\n      this.setState({\n        customAddress:null,\n        enableUnderlyingWithdraw:false\n      });\n    } else if (params && typeof params.customParam === 'string') {\n      // Check if custom address\n      if (params.customParam.toLowerCase().match(/0x[\\w]{40}/) && this.state.customAddress !== params.customParam){\n        this.setCustomAddress(params.customParam);\n      } else if (params && params.customParam === 'withdraw' && !this.state.enableUnderlyingWithdraw){\n        this.setState({\n          customAddress:null,\n          enableUnderlyingWithdraw:true\n        });\n      }\n    }\n    */\n  }\n\n  clearCachedData = async (callback = null, clear_all = false) => {\n\n    if (!this.state.network){\n      return false;\n    }\n\n    const requiredNetworkId = this.state.network.required.id;\n\n    const cachedData = { ...this.state.cachedData };\n    Object.keys(cachedData[requiredNetworkId]).forEach(key => {\n      const data = cachedData[requiredNetworkId][key];\n      if (data.expirationDate !== null) {\n        delete cachedData[requiredNetworkId][key];\n      }\n    });\n\n    const storedCachedData = clear_all ? {} : this.functionsUtil.getStoredItem('cachedData');\n    if (storedCachedData && storedCachedData[requiredNetworkId]){\n      Object.keys(storedCachedData[requiredNetworkId]).forEach( key => {\n        const storedData = storedCachedData[requiredNetworkId][key];\n        if (storedData.expirationDate !== null){\n          delete storedCachedData[requiredNetworkId][key];\n        }\n      });\n    }\n\n    this.functionsUtil.setLocalStorage('cachedData', storedCachedData, true);\n\n    await this.setState({\n      cachedData\n    }, () => {\n      if (typeof callback === 'function') {\n        callback();\n      }\n    });\n\n    return true;\n  }\n\n  setCachedData = (key, data, TTL = null, useLocalStorage = false) => {\n\n    if (!this.state.network){\n      return false;\n    }\n\n    key = key.toLowerCase();\n    const currentTime = parseInt(Date.now() / 1000);\n    const requiredNetworkId = this.state.network.required.id;\n    const cachedKeyFound = this.state.cachedData[requiredNetworkId] ? this.state.cachedData[requiredNetworkId][key] : null;\n\n    const update_key = !cachedKeyFound || ((cachedKeyFound.expirationDate !== null && cachedKeyFound.expirationDate >= currentTime) || JSON.stringify(cachedKeyFound.data) !== JSON.stringify(data));\n\n    let output = false;\n\n    if (update_key) {\n      const expirationDate = TTL ? currentTime + (TTL) : null;\n\n      // Save cached data in local storage\n      if (useLocalStorage) {\n        let storedCachedData = this.functionsUtil.getStoredItem('cachedData');\n        if (!storedCachedData) {\n          storedCachedData = {};\n          storedCachedData[requiredNetworkId] = {};\n        }\n\n        // const storedData = typeof data === 'object' ? JSON.stringify(data) : data;\n\n        storedCachedData = {\n          ...storedCachedData,\n          [requiredNetworkId]:{\n            ...storedCachedData[requiredNetworkId],\n            [key]: {\n              data,\n              expirationDate\n            }\n          }\n        };\n        \n        this.functionsUtil.setLocalStorage('cachedData',storedCachedData,true);\n      }\n\n      // Set new cached data state\n      this.setState((prevState) => ({\n        cachedData: {\n          ...prevState.cachedData,\n          [requiredNetworkId]:{\n            ...prevState.cachedData[requiredNetworkId],\n            [key]: {\n              data,\n              expirationDate\n            }\n          }\n        }\n      }), () => {\n        window.cachedData = this.state.cachedData;\n      });\n\n      output = true;\n    }\n\n    return output;\n  }\n\n  setCallbackAfterLogin = (callbackAfterLogin) => {\n    this.setState({\n      callbackAfterLogin\n    });\n  }\n\n  setCustomAddress = (customAddress) => {\n    // Reset customAddress if not well formatted\n    if (customAddress && !customAddress.toLowerCase().match(/0x[\\w]{40}/)) {\n      customAddress = null;\n    }\n\n    if (customAddress !== this.state.customAddress) {\n      this.setState({\n        customAddress,\n        enableUnderlyingWithdraw: false\n      });\n    }\n  }\n\n  async selectTab(e, tabIndex) {\n    return this.setState(state => ({ ...state, selectedTab: tabIndex }));\n  }\n\n  async loadAvailableTokens() {\n    const newState = {};\n    const availableStrategies = {};\n    const availableStrategiesNetworks = {};\n    const requiredNetwork = this.state.network && this.state.network.isCorrectNetwork ? (this.state.network.current.id || this.state.network.required.id) : this.state.config.requiredNetwork;\n\n    // console.log('loadAvailableTokens_1',this.state.network,requiredNetwork,availableTokens);\n\n    // Load available strategies\n    Object.keys(availableTokens).filter( networkId => this.functionsUtil.getGlobalConfig(['network','enabledNetworks']).includes(parseInt(networkId)) ).forEach (networkId => {\n      availableStrategiesNetworks[networkId] = {};\n      Object.keys(availableTokens[networkId]).forEach((strategy) => {\n\n        availableStrategiesNetworks[networkId][strategy] = Object.keys(availableTokens[networkId][strategy]).reduce((enabledTokens, token) => {\n          const tokenConfig = availableTokens[networkId][strategy][token];\n          const envEnabled = !tokenConfig.enabledEnvs || !tokenConfig.enabledEnvs.length || tokenConfig.enabledEnvs.includes(this.state.currentEnv);\n          if (tokenConfig.enabled && envEnabled) {\n            enabledTokens[token] = tokenConfig;\n          }\n          return enabledTokens;\n        }, {});\n\n        if (parseInt(networkId) === parseInt(requiredNetwork)){\n          availableStrategies[strategy] = availableStrategiesNetworks[networkId][strategy];\n        }\n      });\n    });\n\n    newState.availableStrategies = availableStrategies;\n    newState.availableStrategiesNetworks = availableStrategiesNetworks;\n\n    // console.log('availableStrategiesNetworks',availableStrategiesNetworks);\n\n    // Load strategy\n    const selectedStrategy = this.state.selectedStrategy;\n    if (selectedStrategy && availableStrategies[selectedStrategy]) {\n      newState.availableTokens = availableStrategies[selectedStrategy];\n\n      // Load token\n      const selectedToken = this.state.selectedToken;\n      if (selectedToken && newState.availableTokens[selectedToken]) {\n        newState.tokenConfig = newState.availableTokens[selectedToken];\n      }\n    }\n\n    // console.log('loadAvailableTokens',newState);\n\n    await this.setState(newState);\n  }\n\n  async setStrategyToken(selectedStrategy, selectedToken,selectedProtocol=null) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    // console.log(selectedToken,selectedProtocol)\n    const newState = {\n      tokenConfig: !selectedToken ? null : this.state.tokenConfig,\n      availableTokens: !selectedToken ? null : this.state.availableTokens,\n      selectedToken: !selectedToken ? selectedToken : this.state.selectedToken,\n      selectedStrategy: !selectedStrategy ? selectedStrategy : this.state.selectedStrategy,\n    };\n    // console.log(\"here\",newState.selectedToken)\n\n    if (selectedStrategy && this.state.availableStrategies && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())) {\n      newState.selectedStrategy = selectedStrategy.toLowerCase();\n    }\n    else if(selectedStrategy==='tranches'&&selectedStrategy!==this.state.selectedStrategy)\n    {\n      newState.selectedStrategy = selectedStrategy.toLowerCase();\n    }\n\n      \n     if (selectedToken && selectedToken !== this.state.selectedToken) {\n       // console.log(\"Step1\")\n        if(selectedStrategy==='tranches') {\n          // console.log(\"Step2\");\n          // console.log(availableTranches);\n          if(availableTranches && Object.keys(availableTranches[selectedProtocol]).includes(selectedToken)) {\n            newState.selectedToken = selectedToken;\n            newState.availableTokens = availableTranches;\n            newState.selectedProtocol = selectedProtocol;\n            newState.tokenConfig = availableTranches[selectedProtocol][selectedToken];\n          }\n        }\n      else if (this.state.availableTokens && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase())) {\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableTokens[selectedToken];\n      } \n      else if (this.state.availableStrategies && Object.keys(this.state.availableStrategies[selectedStrategy]).includes(selectedToken.toUpperCase())) {\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableStrategies[selectedStrategy][newState.selectedToken];\n        newState.availableTokens = this.state.availableStrategies[selectedStrategy];\n      }\n    }\n\n    // console.log('setStrategyToken',selectedStrategy,selectedToken,newState);\n    // console.log(newState);\n    await this.setState(newState, callback);\n  }\n\n\n  async setRequiredNetwork(requiredNetwork,forceChangeChain=false){\n    requiredNetwork = parseInt(requiredNetwork);\n    if (globalConfigs.network.enabledNetworks.includes(requiredNetwork)){\n      this.functionsUtil.setLocalStorage('requiredNetwork',requiredNetwork);\n      // console.log('setRequiredNetwork',requiredNetwork);\n      if (forceChangeChain || (this.state.currentSection && this.state.currentSection !== 'landing')){\n        this.functionsUtil.addEthereumChain(requiredNetwork);\n      }\n      return await this.setState(prevState => ({\n        config:{\n          ...prevState.config,\n          requiredNetwork\n        }\n      }));\n    }\n  }\n\n  async setStrategy(selectedStrategy) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n    console.log(\"availabble\",this.state.availableStrategies)\n\n    if (selectedStrategy && selectedStrategy !== this.state.selectedStrategy && (Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())||selectedStrategy==='tranches')) {\n      selectedStrategy = selectedStrategy.toLowerCase();\n      await this.setState({\n        selectedStrategy\n      }, callback);\n    } else if (!selectedStrategy) {\n      await this.setState({\n        selectedStrategy\n      }, callback);\n    }\n  }\n\n  async setToken(selectedToken) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase())) {\n      selectedToken = selectedToken.toUpperCase();\n      const newState = {\n        selectedToken\n      };\n      newState.tokenConfig = this.state.availableTokens[selectedToken];\n      await this.setState(newState, callback);\n    } else if (!selectedToken) {\n      await this.setState({\n        selectedToken,\n        tokenConfig: null\n      }, callback);\n    }\n  }\n\n  async componentWillMount() {\n\n    this.loadUtils();\n\n    window.BNify = this.functionsUtil.BNify;\n\n    // Suppress warnings and errors in production\n    const isProduction = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n    if (isProduction) {\n      window.console.error = () => { };\n      window.console.warn = () => { };\n    }\n\n    window.jQuery = jQuery;\n\n    if (window.localStorage) {\n      this.functionsUtil.removeStoredItem('context');\n\n      // Clear all localStorage data except walletProvider and connectorName if version has changed\n      const version = this.functionsUtil.getStoredItem('version', false);\n      if (version !== globalConfigs.version) {\n        // Clear cached data\n        this.clearCachedData(() => {\n          // Reset Localstorage\n          this.functionsUtil.clearStoredData(['walletProvider', 'connectorName', 'themeMode', 'requiredNetwork']);\n          this.functionsUtil.setLocalStorage('version', globalConfigs.version);\n        }, true);\n      }\n\n      console.log(`Client Version: ${globalConfigs.version}`);\n    }\n\n    const themeMode = this.functionsUtil.getStoredItem('themeMode', false);\n    if (themeMode) {\n      this.setThemeMode(themeMode);\n    }\n\n    const requiredNetwork = this.functionsUtil.getStoredItem('requiredNetwork',false);\n    if (requiredNetwork){\n      this.setRequiredNetwork(requiredNetwork);\n    }\n\n    window.closeIframe = (w) => {\n      const iFrames = document.getElementsByTagName('iframe');\n      for (let i = 0; i < iFrames.length; i++) {\n        const iframe = iFrames[i];\n        if (iframe.contentWindow === w) {\n          window.jQuery(iframe).parents('.iframe-container')[0].remove();\n        }\n      }\n    }\n\n    window.addEventListener('resize', this.handleWindowSizeChange);\n\n    this.loadCurrentEnvironment();\n    this.loadCustomAddress();\n  }\n\n  async loadCurrentEnvironment() {\n    const currentEnv = this.functionsUtil.getCurrentEnvironment();\n    this.setState({\n      currentEnv\n    }, async () => {\n      // const envRequiredNetwork = this.functionsUtil.getGlobalConfig(['environments',this.state.currentEnv,'requiredNetwork']);\n      // const storedRequiredNetwork = this.functionsUtil.getStoredItem('requiredNetwork',null);\n      // if (!storedRequiredNetwork || parseInt(storedRequiredNetwork) !== parseInt(envRequiredNetwork)){\n      //   const requiredNetwork = storedRequiredNetwork || envRequiredNetwork;\n      //   console.log('setRequiredNetwork',requiredNetwork);\n      //   await this.setRequiredNetwork(requiredNetwork);\n      // }\n      this.loadAvailableTokens();\n    })\n  }\n\n  loadCustomAddress() {\n    if (!this.state.customAddress) {\n      const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n      if (walletProvider === 'custom') {\n        const customAddress = this.functionsUtil.getCustomAddress();\n        if (customAddress && customAddress !== this.state.customAddress) {\n          this.setState({\n            customAddress\n          });\n        }\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const currentSectionChanged = prevState.currentSection !== this.state.currentSection;\n    if (currentSectionChanged) {\n      if (this.state.currentSection === 'landing') {\n        this.setThemeMode('light', false);\n      } else {\n        // Get stored Mode\n        const themeMode = this.functionsUtil.getStoredItem('themeMode', false) || this.functionsUtil.getGlobalConfig(['dashboard', 'theme', 'mode']);\n        this.setThemeMode(themeMode);\n      }\n    }\n\n    const tokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const strategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    const networkChanged = JSON.stringify(prevState.network) !== JSON.stringify(this.state.network);\n\n    if (tokenChanged || strategyChanged || networkChanged) {\n      this.loadAvailableTokens();\n    }\n  }\n\n  componentDidMount() {\n\n    // Close iFrame\n    // if (window.self !== window.top && window.top.location.href.indexOf(globalConfigs.baseURL) !== -1 && typeof window.parent.closeIframe === 'function' ){\n    //   window.parent.closeIframe(window.self);\n    // }\n\n    window.showToastMessage = this.showToastMessage;\n    window.closeToastMessage = this.closeToastMessage;\n\n    if (localStorage) {\n      let connectorName = localStorage.getItem('connectorName') ? localStorage.getItem('connectorName') : 'Infura';\n      let walletProvider = localStorage.getItem('walletProvider') ? localStorage.getItem('walletProvider') : 'Infura';\n\n      // Check Ledger Live\n      const isLedgerLive = window.location.href.includes(\"ledger-live=1\");\n      if (isLedgerLive) {\n        connectorName = 'ledgerLive';\n        walletProvider = 'ledger';\n      }\n      // console.log('isLedgerLive',isLedgerLive,connectorName,walletProvider);\n\n      this.setConnector(connectorName, walletProvider);\n    }\n  }\n\n  handleWindowSizeChange = () => {\n    const newState = {\n      width: this.state.width,\n      height: this.state.height,\n    };\n\n    const widthChanged = window.innerWidth !== this.state.width;\n    const heightChanged = window.innerHeight !== this.state.height;\n\n    if (widthChanged || heightChanged) {\n      if (widthChanged) {\n        newState.width = window.innerWidth;\n      }\n      if (heightChanged) {\n        newState.height = window.innerHeight;\n      }\n      return this.setState(newState);\n    }\n\n    return null;\n  };\n\n  showRoute(route) {\n    return this.setState({ route });\n  }\n\n  closeBuyModal(e) {\n    if (e) {\n      e.preventDefault();\n    }\n    return this.setState({\n      buyToken: null,\n      buyModalOpened: false\n    });\n  }\n\n  openBuyModal(e, buyToken) {\n    e.preventDefault();\n\n    return this.setState({\n      buyToken,\n      buyModalOpened: true\n    });\n  }\n\n  async logout() {\n    // Reset Custom Address\n    this.setState({\n      customAddress: null\n    });\n    // Clear cached data\n    this.clearCachedData(() => {\n      // Reset Localstorage except some keys\n      this.functionsUtil.clearStoredData(['version', 'themeMode', 'lastLogin', 'cachedData','requiredNetwork']);\n    });\n  }\n\n  setNetwork(network) {\n    this.setState({\n      network,\n      availableStrategies:null\n    });\n  }\n\n  setConnector(connectorName, walletProvider) {\n\n    let connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n    if (!connectorInfo && walletProvider) {\n      connectorInfo = globalConfigs.connectors[walletProvider.toLowerCase()];\n    }\n\n    // console.log('setConnector - BEFORE',connectorInfo,connectorName,walletProvider);\n\n    if ((connectorInfo && !connectorInfo.enabled) || (connectorName !== 'Injected' && !Object.keys(globalConfigs.connectors).includes(connectorName.toLowerCase())) || (walletProvider && !Object.keys(globalConfigs.connectors).includes(walletProvider.toLowerCase()))) {\n      connectorName = 'Infura';\n      walletProvider = 'Infura';\n    } else if (connectorName === 'Injected') {\n      const hasMetamask = GeneralUtil.hasMetaMask();\n      const hasDapper = GeneralUtil.hasDapper()\n\n      // Check if injected connector is valid\n      switch (walletProvider) {\n        case 'Metamask':\n          if (!hasMetamask && hasDapper) {\n            walletProvider = 'Dapper';\n          }\n          break;\n        case 'Dapper':\n          if (!hasDapper && hasMetamask) {\n            walletProvider = 'Metamask';\n          }\n          break;\n        default:\n          break;\n      }\n    }\n\n    this.functionsUtil.setLocalStorage('connectorName', connectorName);\n    this.functionsUtil.setLocalStorage('walletProvider', walletProvider);\n\n    return this.setState({\n      connectorName,\n      walletProvider\n    }, () => {\n      this.loadCustomAddress();\n    });\n  }\n\n  setThemeMode(themeMode, store = true) {\n    let selectedTheme = null;\n\n    // Check Dark Mode Enabled\n    const darkModeEnabled = this.functionsUtil.getGlobalConfig(['dashboard', 'theme', 'darkModeEnabled']);\n    if (themeMode === 'dark' && !darkModeEnabled) {\n      themeMode = 'light';\n    }\n\n    switch (themeMode) {\n      default:\n      case 'light':\n        selectedTheme = theme;\n        break;\n      case 'dark':\n        selectedTheme = themeDark;\n        break;\n    }\n\n    if (store) {\n      this.functionsUtil.setLocalStorage('themeMode', themeMode);\n    }\n\n    this.setState({\n      themeMode,\n      selectedTheme\n    });\n  }\n\n  setCurrentSection(currentSection) {\n    this.setState({\n      currentSection\n    });\n  }\n\n  render() {\n    const isMobile = this.state.width <= 768;\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance', 'enabled']);\n\n    // console.log(this.state.selectedToken,this.state.tokenConfig);\n\n    const SuspenseLoader = (\n      <Flex\n        width={1}\n        minHeight={'100vh'}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        backgroundColor={'selectBg'}\n      >\n        <FlexLoader\n          textProps={{\n            textSize: 4,\n            fontWeight: 2\n          }}\n          loaderProps={{\n            mb: 3,\n            size: '80px',\n            color: 'primary'\n          }}\n          flexProps={{\n            my: 3,\n            flexDirection: 'column'\n          }}\n          text={''}\n        />\n      </Flex>\n    );\n\n    return (\n      <Router>\n        <ScrollToTop />\n        <ThemeProvider\n          theme={this.state.selectedTheme}\n        >\n          <Web3Provider\n            web3Api={Web3}\n            connectors={connectors}\n            libraryName={'web3.js'}\n          >\n            <Web3Consumer\n              recreateOnNetworkChange={false}\n              recreateOnAccountChange={false}\n            >\n              {context => {\n                //console.log('Web3Consumer render',context);\n                return (\n                  <RimbleWeb3\n                    context={context}\n                    isMobile={isMobile}\n                    connectors={connectors}\n                    config={this.state.config}\n                    theme={this.state.selectedTheme}\n                    cachedData={this.state.cachedData}\n                    tokenConfig={this.state.tokenConfig}\n                    availableTranches={availableTranches}\n                    setNetwork={this.setNetwork.bind(this)}\n                    customAddress={this.state.customAddress}\n                    selectedToken={this.state.selectedToken}\n                    connectorName={this.state.connectorName}\n                    currentSection={this.state.currentSection}\n                    walletProvider={this.state.walletProvider}\n                    setConnector={this.setConnector.bind(this)}\n                    availableTokens={this.state.availableTokens}\n                    setCachedData={this.setCachedData.bind(this)}\n                    clearCachedData={this.clearCachedData.bind(this)}\n                    callbackAfterLogin={this.state.callbackAfterLogin}\n                    availableStrategies={this.state.availableStrategies}\n                    setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                    enableUnderlyingWithdraw={this.state.enableUnderlyingWithdraw}\n                    availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                  >\n                    <RimbleWeb3.Consumer>\n                      {({\n                        web3,\n                        modals,\n                        network,\n                        account,\n                        initWeb3,\n                        simpleID,\n                        biconomy,\n                        contracts,\n                        web3Infura,\n                        web3Polygon,\n                        transaction,\n                        initAccount,\n                        initContract,\n                        checkNetwork,\n                        transactions,\n                        initSimpleID,\n                        permitClient,\n                        tokenDecimals,\n                        accountBalance,\n                        needsPreflight,\n                        validateAccount,\n                        rejectValidation,\n                        accountValidated,\n                        getTokenDecimals,\n                        getAccountBalance,\n                        contractsNetworks,\n                        accountBalanceLow,\n                        networkInitialized,\n                        accountInizialized,\n                        accountBalanceToken,\n                        userRejectedConnect,\n                        initializeContracts,\n                        erc20ForwarderClient,\n                        rejectAccountConnect,\n                        contractsInitialized,\n                        userRejectedValidation,\n                        accountValidationPending,\n                        connectAndValidateAccount,\n                        contractMethodSendWrapper,\n                        initContractCustomProvider\n                      }) => {\n                        return (\n                          <Box>\n                            <Switch>\n                              <Route\n                                path=\"/dashboard/:section?/:param1?/:param2?/:param3?\"\n                                render={\n                                  (props) => \n                                    <Suspense\n                                      fallback={SuspenseLoader}\n                                    >\n                                      <Dashboard\n                                        {...props}\n                                        web3={web3}\n                                        modals={modals}\n                                        network={network}\n                                        context={context}\n                                        account={account}\n                                        isDashboard={true}\n                                        initWeb3={initWeb3}\n                                        biconomy={biconomy}\n                                        isMobile={isMobile}\n                                        simpleID={simpleID}\n                                        contracts={contracts}\n                                        web3Infura={web3Infura}\n                                        web3Polygon={web3Polygon}\n                                        initAccount={initAccount}\n                                        permitClient={permitClient}\n                                        initSimpleID={initSimpleID}\n                                        initContract={initContract}\n                                        transactions={transactions}\n                                        buyToken={this.state.buyToken}\n                                        logout={this.logout.bind(this)}\n                                        accountBalance={accountBalance}\n                                        themeMode={this.state.themeMode}\n                                        theme={this.state.selectedTheme}\n                                        validateAccount={validateAccount}\n                                        currentEnv={this.state.currentEnv}\n                                        connecting={this.state.connecting}\n                                        cachedData={this.state.cachedData}\n                                        setToken={this.setToken.bind(this)}\n                                        accountValidated={accountValidated}\n                                        getTokenDecimals={getTokenDecimals}\n                                        rejectValidation={rejectValidation}\n                                        tokenConfig={this.state.tokenConfig}\n                                        contractsNetworks={contractsNetworks}\n                                        availableTranches={availableTranches}\n                                        getAccountBalance={getAccountBalance}\n                                        accountBalanceLow={accountBalanceLow}\n                                        accountInizialized={accountInizialized}\n                                        networkInitialized={networkInitialized}\n                                        selectedToken={this.state.selectedToken}\n                                        connectorName={this.state.connectorName}\n                                        setStrategy={this.setStrategy.bind(this)}\n                                        userRejectedConnect={userRejectedConnect}\n                                        accountBalanceToken={accountBalanceToken}\n                                        initializeContracts={initializeContracts}\n                                        walletProvider={this.state.walletProvider}\n                                        buyModalOpened={this.state.buyModalOpened}\n                                        erc20ForwarderClient={erc20ForwarderClient}\n                                        contractsInitialized={contractsInitialized}\n                                        openBuyModal={this.openBuyModal.bind(this)}\n                                        rejectAccountConnect={rejectAccountConnect}\n                                        handleMenuClick={this.selectTab.bind(this)}\n                                        setConnector={this.setConnector.bind(this)}\n                                        setThemeMode={this.setThemeMode.bind(this)}\n                                        availableTokens={this.state.availableTokens}\n                                        closeBuyModal={this.closeBuyModal.bind(this)}\n                                        setCachedData={this.setCachedData.bind(this)}\n                                        selectedStrategy={this.state.selectedStrategy}\n                                        selectedProtocol={this.state.selectedProtocol}\n                                        userRejectedValidation={userRejectedValidation}\n                                        clearCachedData={this.clearCachedData.bind(this)}\n                                        setStrategyToken={this.setStrategyToken.bind(this)}\n                                        accountValidationPending={accountValidationPending}\n                                        availableStrategies={this.state.availableStrategies}\n                                        setCurrentSection={this.setCurrentSection.bind(this)}\n                                        connectAndValidateAccount={connectAndValidateAccount}\n                                        contractMethodSendWrapper={contractMethodSendWrapper}\n                                        setRequiredNetwork={this.setRequiredNetwork.bind(this)}\n                                        initContractCustomProvider={initContractCustomProvider}\n                                        setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                        availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                                      />\n                                    </Suspense>\n\n                                }\n                              >\n                              </Route>\n                              {\n                                governanceEnabled && (\n                                  <Route\n                                    path=\"/governance/:section?/:item_id?\"\n                                    render={\n                                      (props) =>\n                                        <Suspense\n                                          fallback={SuspenseLoader}\n                                        >\n                                          <Governance\n                                            {...props}\n                                            web3={web3}\n                                            modals={modals}\n                                            network={network}\n                                            context={context}\n                                            account={account}\n                                            initWeb3={initWeb3}\n                                            biconomy={biconomy}\n                                            isMobile={isMobile}\n                                            simpleID={simpleID}\n                                            isGovernance={true}\n                                            contracts={contracts}\n                                            web3Infura={web3Infura}\n                                            web3Polygon={web3Polygon}\n                                            initAccount={initAccount}\n                                            initSimpleID={initSimpleID}\n                                            initContract={initContract}\n                                            checkNetwork={checkNetwork}\n                                            transactions={transactions}\n                                            buyToken={this.state.buyToken}\n                                            logout={this.logout.bind(this)}\n                                            accountBalance={accountBalance}\n                                            themeMode={this.state.themeMode}\n                                            theme={this.state.selectedTheme}\n                                            validateAccount={validateAccount}\n                                            currentEnv={this.state.currentEnv}\n                                            connecting={this.state.connecting}\n                                            cachedData={this.state.cachedData}\n                                            setToken={this.setToken.bind(this)}\n                                            accountValidated={accountValidated}\n                                            getTokenDecimals={getTokenDecimals}\n                                            rejectValidation={rejectValidation}\n                                            tokenConfig={this.state.tokenConfig}\n                                            contractsNetworks={contractsNetworks}\n                                            getAccountBalance={getAccountBalance}\n                                            accountBalanceLow={accountBalanceLow}\n                                            accountInizialized={accountInizialized}\n                                            networkInitialized={networkInitialized}\n                                            selectedToken={this.state.selectedToken}\n                                            connectorName={this.state.connectorName}\n                                            setStrategy={this.setStrategy.bind(this)}\n                                            userRejectedConnect={userRejectedConnect}\n                                            accountBalanceToken={accountBalanceToken}\n                                            initializeContracts={initializeContracts}\n                                            walletProvider={this.state.walletProvider}\n                                            buyModalOpened={this.state.buyModalOpened}\n                                            contractsInitialized={contractsInitialized}\n                                            openBuyModal={this.openBuyModal.bind(this)}\n                                            rejectAccountConnect={rejectAccountConnect}\n                                            handleMenuClick={this.selectTab.bind(this)}\n                                            setConnector={this.setConnector.bind(this)}\n                                            setThemeMode={this.setThemeMode.bind(this)}\n                                            availableTokens={this.state.availableTokens}\n                                            closeBuyModal={this.closeBuyModal.bind(this)}\n                                            setCachedData={this.setCachedData.bind(this)}\n                                            selectedStrategy={this.state.selectedStrategy}\n                                            userRejectedValidation={userRejectedValidation}\n                                            clearCachedData={this.clearCachedData.bind(this)}\n                                            setStrategyToken={this.setStrategyToken.bind(this)}\n                                            accountValidationPending={accountValidationPending}\n                                            availableStrategies={this.state.availableStrategies}\n                                            setCurrentSection={this.setCurrentSection.bind(this)}\n                                            connectAndValidateAccount={connectAndValidateAccount}\n                                            contractMethodSendWrapper={contractMethodSendWrapper}\n                                            setRequiredNetwork={this.setRequiredNetwork.bind(this)}\n                                            setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                            availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                                          />\n                                        </Suspense>\n                                    }\n                                  >\n                                  </Route>\n                                )\n                              }\n                              <Route>\n                                <Header\n                                  modals={modals}\n                                  network={network}\n                                  context={context}\n                                  account={account}\n                                  initWeb3={initWeb3}\n                                  isMobile={isMobile}\n                                  contracts={contracts}\n                                  initAccount={initAccount}\n                                  initContract={initContract}\n                                  buyToken={this.state.buyToken}\n                                  accountBalance={accountBalance}\n                                  logout={this.logout.bind(this)}\n                                  validateAccount={validateAccount}\n                                  connecting={this.state.connecting}\n                                  accountValidated={accountValidated}\n                                  getTokenDecimals={getTokenDecimals}\n                                  rejectValidation={rejectValidation}\n                                  setToken={e => { this.setToken(e) }}\n                                  tokenConfig={this.state.tokenConfig}\n                                  contractsNetworks={contractsNetworks}\n                                  getAccountBalance={getAccountBalance}\n                                  accountBalanceLow={accountBalanceLow}\n                                  networkInitialized={networkInitialized}\n                                  selectedToken={this.state.selectedToken}\n                                  connectorName={this.state.connectorName}\n                                  userRejectedConnect={userRejectedConnect}\n                                  accountBalanceToken={accountBalanceToken}\n                                  walletProvider={this.state.walletProvider}\n                                  buyModalOpened={this.state.buyModalOpened}\n                                  contractsInitialized={contractsInitialized}\n                                  openBuyModal={this.openBuyModal.bind(this)}\n                                  rejectAccountConnect={rejectAccountConnect}\n                                  handleMenuClick={this.selectTab.bind(this)}\n                                  setConnector={this.setConnector.bind(this)}\n                                  availableTokens={this.state.availableTokens}\n                                  closeBuyModal={this.closeBuyModal.bind(this)}\n                                  userRejectedValidation={userRejectedValidation}\n                                  accountValidationPending={accountValidationPending}\n                                  connectAndValidateAccount={connectAndValidateAccount}\n                                  setRequiredNetwork={this.setRequiredNetwork.bind(this)}\n                                  availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                                />\n\n                                {\n                                  this.state.route === \"onboarding\" && (\n                                    <Web3Debugger\n                                      web3={web3}\n                                      account={account}\n                                      accountBalance={accountBalance}\n                                      accountBalanceToken={accountBalanceToken}\n                                      accountBalanceLow={accountBalanceLow}\n                                      initAccount={initAccount}\n                                      rejectAccountConnect={rejectAccountConnect}\n                                      userRejectedConnect={userRejectedConnect}\n                                      accountValidated={accountValidated}\n                                      accountValidationPending={accountValidationPending}\n                                      rejectValidation={rejectValidation}\n                                      userRejectedValidation={userRejectedValidation}\n                                      validateAccount={validateAccount}\n                                      connectAndValidateAccount={connectAndValidateAccount}\n                                      modals={modals}\n                                      network={network}\n                                      transaction={transaction}\n                                    />\n                                  )\n                                }\n\n                                {\n                                  this.state.route === \"default\" && (\n                                    <Switch>\n                                      <Route exact path=\"/\"\n                                        render={(props) =>\n                                          <Suspense\n                                            fallback={SuspenseLoader}\n                                          >\n                                            <Landing\n                                              {...props}\n                                              web3={web3}\n                                              network={network}\n                                              account={account}\n                                              isMobile={isMobile}\n                                              simpleID={simpleID}\n                                              contracts={contracts}\n                                              initContract={initContract}\n                                              innerWidth={this.state.width}\n                                              logout={this.logout.bind(this)}\n                                              innerHeight={this.state.height}\n                                              accountBalance={accountBalance}\n                                              themeMode={this.state.themeMode}\n                                              theme={this.state.selectedTheme}\n                                              setToken={e => {this.setToken(e)}}\n                                              cachedData={this.state.cachedData}\n                                              currentEnv={this.state.currentEnv}\n                                              connecting={this.state.connecting}\n                                              selectedTab={this.state.selectedTab}\n                                              tokenConfig={this.state.tokenConfig}\n                                              accountBalanceLow={accountBalanceLow}\n                                              getAccountBalance={getAccountBalance}\n                                              availableTranches={availableTranches}\n                                              contractsNetworks={contractsNetworks}\n                                              networkInitialized={networkInitialized}\n                                              customAddress={this.state.customAddress}\n                                              selectedToken={this.state.selectedToken}\n                                              accountBalanceToken={accountBalanceToken}\n                                              closeToastMessage={this.closeToastMessage}\n                                              contractsInitialized={contractsInitialized}\n                                              openBuyModal={this.openBuyModal.bind(this)}\n                                              setThemeMode={this.setThemeMode.bind(this)}\n                                              processCustomParam={this.processCustomParam}\n                                              availableTokens={this.state.availableTokens}\n                                              setCachedData={this.setCachedData.bind(this)}\n                                              updateSelectedTab={this.selectTab.bind(this)}\n                                              toastMessageProps={this.state.toastMessageProps}\n                                              clearCachedData={this.clearCachedData.bind(this)}\n                                              availableStrategies={this.state.availableStrategies}\n                                              setCurrentSection={this.setCurrentSection.bind(this)}\n                                              connectAndValidateAccount={connectAndValidateAccount}\n                                              setRequiredNetwork={this.setRequiredNetwork.bind(this)}\n                                              availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                                            />\n                                            <CookieConsent\n                                              expires={365}\n                                              buttonText={\"Ok\"}\n                                              location={\"bottom\"}\n                                              acceptOnScroll={true}\n                                              cookieName={\"cookieAccepted\"}\n                                              acceptOnScrollPercentage={5}\n                                              style={{ background: \"rgba(255,255,255,0.95)\", zIndex: '9999999' }}\n                                              buttonStyle={{ display: isMobile ? \"block\" : \"none\", backgroundColor: '#0036ff', color: 'white', marginTop: isMobile ? \"0px\" : \"15px\" }}\n                                            >\n                                              <Flex flexDirection={'row'} alignItems={['flex-start', 'center']} justifyContent={'flex-start'} maxHeight={['150px', 'initial']} style={isMobile ? { overflowY: 'scroll' } : null}>\n                                                <Image display={['none', 'block']} src={'images/cookie.svg'} width={'42px'} height={'42px'} />\n                                                <Text pl={[0, 3]} color={'dark-gray'} fontSize={1} textAlign={'justify'}>\n                                                  This website or its third-party tools process personal data (e.g. browsing data or IP addresses) and use cookies or other identifiers, which are necessary for its functioning and required to achieve the purposes illustrated in the cookie policy. To learn more, please refer to the <Link href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'} target={'_blank'} rel=\"nofollow noopener noreferrer\" hoverColor={'blue'}>cookie policy</Link>.\n                                                  You accept the use of cookies or other identifiers by closing or dismissing this notice, by scrolling this page, by clicking a link or button or by continuing to browse otherwise.\n                                              </Text>\n                                              </Flex>\n                                            </CookieConsent>\n                                          </Suspense>\n                                        }\n                                      ></Route>\n                                      <Route exact path=\"/terms-of-service\">\n                                        <Tos />\n                                      </Route>\n                                      <Route>\n                                        <PageNotFound />\n                                      </Route>\n                                    </Switch>\n                                  )\n                                }\n                              </Route>\n                            </Switch>\n                            <TransactionToastUtil\n                              transactions={transactions}\n                              themeMode={this.state.themeMode}\n                            />\n                          </Box>\n                        )\n                      }}\n                    </RimbleWeb3.Consumer>\n                  </RimbleWeb3>\n                );\n              }}\n            </Web3Consumer>\n          </Web3Provider>\n        </ThemeProvider>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport * as Sentry from '@sentry/browser';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\n\nif (window.location.hostname !== 'localhost') {\n  Sentry.init({\n    dsn: \"https://56f5c0bce273442390d7f25698fefe53@sentry.io/1547544\",\n    beforeSend(event, hint) {\n      let output = event;\n      const error = hint.originalException;\n      if (error && error.message){\n        if (error.message.match(/Failed to subscribe to new newBlockHeaders/i)){\n          output = false;\n        }\n      }\n      return output;\n    }\n  });\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport AssetField from '../AssetField/AssetField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass AssetsList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    return (\n      <Flex id=\"assets-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"assets-list\" flexDirection={'column'}>\n          {\n            enabledTokens.map(token => {\n              const tokenConfig = this.props.availableTokens ? this.props.availableTokens[token] : null;\n              if (!tokenConfig){\n                return null;\n              }\n              return (\n                <TableRow\n                  token={token}\n                  {...this.props}\n                  key={`asset-${token}`}\n                  tokenConfig={tokenConfig}\n                  rowId={`asset-col-${token}`}\n                  cardId={`asset-card-${token}`}\n                  fieldComponent={this.props.fieldComponent || AssetField}\n                />\n              );\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default AssetsList;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__38P6I\",\"link\":\"Footer_link__13yZU\"};","import React from \"react\";\nimport styles from './ModalCard.module.scss';\nimport { Box, Flex, Card, Button, Heading, Image } from \"rimble-ui\";\n\nconst ModalCard = ({children, closeFunc, ...props}) => (\n  <Card\n    p={0}\n    border={0}\n    mx={'auto'}\n    my={'auto'}\n    height={'auto'}\n    borderRadius={2}\n    overflow={'auto'}\n    width={ props.width ? props.width : 'auto' }\n    minWidth={ props.minWidth ? props.minWidth : 'auto' }\n    maxWidth={ props.maxWidth ? props.maxWidth : '960px'}\n  >\n    <Box\n      top={'0'}\n      zIndex={1}\n      right={'0'}\n      position={\"absolute\"}\n    >\n      <Button.Text\n        icononly\n        icon={\"Close\"}\n        size={'2.5em'}\n        onClick={closeFunc}\n        mainColor={ props.mainColor ? props.mainColor :  'copyColor' }\n      />\n    </Box>\n    <Flex\n      height={'100%'}\n      flex={'1 1 auto'}\n      flexDirection={'column'}\n      className={[ props.bgLayer ? styles.bg : null]}\n      style={{\n        overflow: 'auto',\n        backgroundRepeat:'no-repeat',\n        backgroundPosition:'bottom right',\n        backgroundSize: !props.background ? '65%' : null,\n        backgroundImage:'url(/images/bg-bottom-right.png)',\n        background: props.background ? props.background : null,\n      }}\n      backgroundColor={'cardBg'}\n    >\n      {children}\n    </Flex>\n  </Card>\n);\n\nModalCard.Header = (props) => (\n  <Box\n    width={1}\n    mb={[2,3]}\n    pb={[2,2]}\n    pt={ props.pt ? props.pt : (props.icon ? 3 : [5,3]) }\n    borderBottom={ props.borderBottom ? props.borderBottom : '1px solid #eee' }\n  >\n    <Flex\n      px={[1,2]}\n      alignItems={'center'}\n      flexDirection={'column'}\n    >\n      { props.icon && <Image width={ props.iconHeight ? props.iconHeight : '50px' } src={props.icon} /> }\n      <Heading.h3\n        mb={0}\n        fontSize={[3,3]}\n        color={'copyColor'}\n        textAlign={'center'}\n        mt={props.icon ? 2 : 0}\n        fontFamily={'sansSerif'}\n        {...props.titleProps}\n      >\n        {props.title}\n      </Heading.h3>\n      {\n        props.subtitle &&\n        <Heading.h4\n          pt={[1,2]}\n          fontWeight={2}\n          fontSize={[2,2]}\n          lineHeight={1.5}\n          color={'dark-gray'}\n          textAlign={'center'}\n          {...props.subtitleProps}\n        >\n          {props.subtitle}\n        </Heading.h4>\n      }\n      {\n        props.subtitle2 &&\n        <Heading.h4 pt={0} fontSize={[2,2]} textAlign={'center'} fontWeight={2} lineHeight={1.5} color={'dark-gray'}>\n          {props.subtitle2}\n        </Heading.h4>\n      }\n    </Flex>\n  </Box>\n);\n\nModalCard.Body = ({children, ...props}) => (\n  <Box\n    width={1}\n    px={[3,5]}\n    {...props}\n  >\n    {children}\n  </Box>\n);\n/*\nModalCard.Body = ({children, ...props}) => (\n  <Flex flex={'1 1 auto'} style={{ overflow: 'auto' }} >\n    <Box width={1} px={[4,5]} py={[3,4]} m={'auto'}>\n      {children}\n    </Box>\n  </Flex>\n);\n*/\n\nModalCard.Footer = ({children, ...props}) => (\n  <Flex\n    flex={'1 0 auto'}\n    justifyContent={'center'}\n    borderTop={1}\n    borderColor={'light-gray'}\n    px={[0,3]}\n    py={3}\n  >\n    {children}\n  </Flex>\n);\n\n\nModalCard.BackButton = ({onClick, ...props}) => (\n  <Box\n    position={'absolute'}\n    top={'0'}\n    left={'0'}\n    m={3}\n    bg={'white'}\n  >\n    <Button.Outline\n      onClick={onClick}\n      icononly\n      icon={'ArrowBack'}\n      size={'2.5em'}\n    />\n  </Box>\n);\n\nexport default ModalCard;\n","import { tint, shade, readableColor } from 'polished';\n\n// rimble base colors\nconst baseColors = {\n  black: '#000e1a',\n  white: '#FFF',\n  blue: '#0036ff',\n  darkBlue: '#0028be',\n  green: '#28C081',\n  yellow: '#FD9D28',\n  red: '#DC2C10',\n  blurple: '#4E3FCE',\n  consensysblue: '#3259D6',\n};\n\n// rimble palette\nconst colors = {\n  blurple: {\n    base: baseColors.blurple,\n    text: readableColor(baseColors.blurple),\n    light: [null, tint(0.2, baseColors.blurple)],\n    dark: [null, shade(0.2, baseColors.blurple)],\n  },\n  blue: {\n    base: baseColors.blue,\n    text: readableColor(baseColors.blue),\n    light: [null, tint(0.9, baseColors.blue)],\n    dark: [null, shade(0.4, baseColors.blue)],\n  },\n  green: {\n    base: baseColors.green,\n    text: baseColors.white,\n    light: [null, tint(0.9, baseColors.green)],\n    dark: [null, shade(0.4, baseColors.green)],\n  },\n  yellow: {\n    base: baseColors.yellow,\n    text: readableColor(baseColors.yellow),\n    light: [null, tint(0.9, baseColors.yellow)],\n    dark: [null, shade(0.4, baseColors.yellow)],\n  },\n  red: {\n    base: baseColors.red,\n    text: readableColor(baseColors.red),\n    light: [null, tint(0.9, baseColors.red)],\n    dark: [null, shade(0.4, baseColors.red)],\n  },\n};\n\nconst blurple = colors.blurple;\nconst blue = colors.blue;\nconst green = colors.green;\nconst yellow = colors.yellow;\nconst red = colors.red;\n\nexport { blurple };\nexport { blue };\nexport { green };\nexport { yellow };\nexport { red };\nexport default baseColors;\n","import Title from '../Title/Title';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport { Box, Flex, Text, Loader } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass AssetsUnderManagement extends Component {\n\n  state = {\n    totalAUM:null,\n    totalAUMEndOfYear:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalAUM();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalAUM();\n    }\n  }\n\n  async loadTotalAUM(){\n\n    const allNetworks = this.props.allNetworks || false;\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized || (allNetworks && this.state.totalAUM)){\n      return true;\n    }\n\n    if (this.props.totalAUM && this.props.totalAUMEndOfYear){\n      return this.setState({\n        totalAUM:this.props.totalAUM,\n        totalAUMEndOfYear:this.props.totalAUMEndOfYear\n      });\n    }\n\n    const aggregatedStatsMethodParams = this.props.aggregatedStatsMethodParams || [true,allNetworks];\n\n    const {\n      avgAPY,\n      totalAUM\n    } = typeof this.props.aggregatedStatsMethod === 'function' ? await this.props.aggregatedStatsMethod(...aggregatedStatsMethodParams) : await this.functionsUtil.getAggregatedStats(...aggregatedStatsMethodParams);\n\n    let totalAUMEndOfYear = this.functionsUtil.BNify(0);\n    if (!this.functionsUtil.BNify(totalAUM).isNaN() && !this.functionsUtil.BNify(avgAPY).isNaN()){\n      totalAUMEndOfYear = totalAUM.plus(totalAUM.times(avgAPY.div(100)));\n    }\n\n    return this.setState({\n      totalAUM,\n      totalAUMEndOfYear\n    });\n  }\n\n  render() {\n    return this.state.totalAUM ? (\n      <Box\n        width={1}\n        {...this.props.flexProps}\n      >\n        <CountUp\n          delay={0}\n          decimals={4}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          duration={31536000}\n          start={parseFloat(this.state.totalAUM)}\n          end={parseFloat(this.state.totalAUMEndOfYear)}\n          formattingFn={ n => '$ '+this.functionsUtil.formatMoney(n,4) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              style={ this.props.counterStyle ? this.props.counterStyle : {\n                display:'block',\n                color:'dark-gray',\n                whiteSpace:'nowrap',\n                fontFamily:this.props.theme.fonts.counter,\n                fontWeight:this.props.theme.fontWeights[5],\n                textAlign: this.props.isMobile ? 'center' : 'right',\n                fontSize: this.props.isMobile ? '1.6em' : this.props.theme.fontSizes[6]\n              }}\n              ref={countUpRef}\n            />\n          )}\n        </CountUp>\n        {\n          (typeof this.props.subtitle === 'undefined' || this.props.subtitle) && (\n            <Title\n              fontWeight={3}\n              fontSize={[2,2]}\n              color={'cellTitle'}\n              textAlign={['center','right']}\n              {...this.props.subtitleProps}\n            >\n              <Text.span fontWeight={'inherit'} color={'inherit'} fontSize={'inherit'}>{this.props.subtitle || 'Assets Under Management'}</Text.span>\n            </Title>\n          )\n        }\n      </Box>\n    ) : (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        justifyContent={this.props.loaderAlign || 'center'}\n      >\n        <Loader\n          size={\"30px\"}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default AssetsUnderManagement;\n","import { Flex, Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass VariationNumber extends Component {\n\n  render() {\n\n    const IconDirection = () => (\n      <Icon\n        color={ this.props.direction === 'up' ?  '#6dd400' : '#f7b500' }\n        name={ this.props.direction === 'up' ?  'ArrowDropUp' : 'ArrowDropDown' }\n        size={ this.props.iconSize ? this.props.iconSize : ( this.props.isMobile ? '1.4em' : '2em') }\n      />\n    );\n\n    return (\n      <Flex\n        alignItems={'center'}\n        flexDirection={'row'}\n        width={ this.props.width ? this.props.width : 1 }\n        justifyContent={this.props.justifyContent ? this.props.justifyContent : 'center'}\n      >\n        {\n          (!this.props.iconPos || this.props.iconPos==='left') &&\n            <IconDirection />\n        }\n        {this.props.children}\n        {\n          this.props.iconPos==='right' &&\n            <IconDirection />\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default VariationNumber;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchInput\":\"GenericSelector_searchInput__vl2hJ\",\"genericSelector\":\"GenericSelector_genericSelector__1Nqkd\",\"dark\":\"GenericSelector_dark__zCOnP\",\"searchInputHidden\":\"GenericSelector_searchInputHidden__2Zm1B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading-dots\":\"LoadingSpinner_loading-dots__2-3YZ\",\"loading-dots--dot\":\"LoadingSpinner_loading-dots--dot__2Y25C\",\"dot-keyframes\":\"LoadingSpinner_dot-keyframes__3SU_M\"};","import React, { Component } from 'react';\nimport { Flex, Icon, Text } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ConnectBox extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          p:3,\n          mt:3,\n          ...this.props.cardProps\n        }}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            name={'Input'}\n            color={'cellText'}\n          />\n          <Text\n            mt={2}\n            fontSize={2}\n            color={'cellText'}\n            textAlign={'center'}\n          >\n            Please connect with your wallet interact with Idle.\n          </Text>\n          <RoundButton\n            buttonProps={{\n              mt:2,\n              width:[1,1/2]\n            }}\n            handleClick={this.props.connectAndValidateAccount}\n          >\n            Connect\n          </RoundButton>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ConnectBox;\n","import React, { Component } from 'react';\nimport { Flex, Loader, Text } from \"rimble-ui\";\n\nclass FlexLoader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        justifyContent={'center'}\n        {...this.props.flexProps}\n      >\n        <Loader {...this.props.loaderProps} />\n        {\n          this.props.text &&\n            <Text {...this.props.textProps}>{this.props.text}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default FlexLoader;\n","import { Heading } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass Title extends Component {\n  render() {\n    const props = {\n      fontWeight:4,\n      fontSize:[4,6],\n      color:'copyColor',\n      textAlign:'center',\n      lineHeight:'initial',\n    };\n\n    // Replace props\n    if (this.props && Object.keys(this.props).length){\n      Object.keys(this.props).forEach(p => {\n        props[p] = this.props[p];\n      });\n    }\n\n    const HeadingComponent = this.props.component ? this.props.component : Heading.h1;\n\n    return (\n      <HeadingComponent\n        {...props}\n      >\n        {this.props.children}\n      </HeadingComponent>\n    );\n  }\n}\n\nexport default Title;\n","import CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport CustomField from '../CustomField/CustomField';\nimport TooltipText from '../TooltipText/TooltipText';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Image, Text, Loader, Button, Flex, Icon, Tooltip } from \"rimble-ui\";\n\nclass TrancheField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n    // console.log('componentDidMount',this.props.protocol,this.props.token,this.props.tranche);\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const trancheChanged = prevProps.tranche !== this.props.tranche;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const protocolChanged = prevProps.protocol !== this.props.protocol;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractsInitialized = !prevProps.contractsInitialized && this.props.contractsInitialized;\n    const requiredNetworkChanged = (!prevProps.network && this.props.network) || (prevProps.network && this.props.network && JSON.stringify(prevProps.network.required) !== JSON.stringify(this.props.network.required));\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || protocolChanged || trancheChanged || accountChanged || transactionsChanged || contractsInitialized || requiredNetworkChanged){\n      // console.log('componentDidUpdate-1',fieldChanged,tokenChanged,protocolChanged,trancheChanged,accountChanged,transactionsChanged,(contractsInitialized && !this.state.ready));\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.loadField();\n      });\n    } else if (mobileChanged || themeModeChanged){\n      // console.log('componentDidUpdate-2',mobileChanged,themeModeChanged);\n      const oldState = Object.assign({},this.state);\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n\n    if (this.componentUnmounted || !this.props.protocol || !this.props.token || !this.props.tokenConfig || !this.props.contractsInitialized){\n      return false;\n    }\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n    const formatValue = typeof this.props.formatValue !== 'undefined' ? this.props.formatValue : true;\n    const addTokenName = typeof this.props.addTokenName !== 'undefined' ? this.props.addTokenName : true;\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        default:\n          output = await this.functionsUtil.loadTrancheField(fieldName,fieldProps,this.props.protocol,this.props.token,this.props.tranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account,addGovTokens,formatValue,addTokenName);\n          if (output !== undefined && setState){\n            this.setStateSafe({\n              ready:true,\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n\n    return output;\n  }\n\n  render(){\n    let output = null;\n    const fieldInfo = this.props.fieldInfo;\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    // const tokenName = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'label']) || this.functionsUtil.capitalize(this.props.token);\n\n    // const tokenConfig = this.props.tokenConfig;// || this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token]);\n    const maxPrecision = fieldProps && parseInt(fieldProps.maxPrecision)>=0 ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && parseInt(fieldProps.decimals)>=0 ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const minPrecision = fieldProps && parseInt(fieldProps.minPrecision)>=0 ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    // console.log('TrancheField',fieldInfo.name,fieldProps);\n    const flexProps = fieldProps.flexProps;\n    delete fieldProps.flexProps;\n\n    switch (fieldInfo.name){\n      case 'protocolIcon':\n        const protocolConfig = this.functionsUtil.getGlobalConfig(['stats', 'protocols', this.props.protocol]);\n        const protocolIcon = protocolConfig && protocolConfig.icon ? protocolConfig.icon : `${this.props.protocol}.svg`;\n        output = (\n          <Image src={`images/protocols/${protocolIcon}`} {...fieldProps} />\n        );\n      break;\n      case 'experimentalBadge':\n        output = null;\n        if (this.state.experimentalBadge && this.functionsUtil.BNify(this.state.experimentalBadge).gt(0)){\n          const limitCap = this.functionsUtil.abbreviateNumber(this.state.experimentalBadge, 2, maxPrecision, 0) + ` ${this.props.token}`;\n          output = (\n            <Tooltip\n              placement={'top'}\n              message={`This pool is experimental and has a cap limit of ${limitCap}`}\n            >\n              <Image src={`images/experimental.png`} {...fieldProps} />\n            </Tooltip>\n          );\n        }\n      break;\n      case 'statusBadge':\n        output = null;\n        let badgeText = null;\n        let badgeColor = null;\n\n        if (!this.state.statusBadge){\n          output = loader;\n        } else {\n          if (this.functionsUtil.BNify(this.state.statusBadge).gt(0)){\n            badgeText = 'Experimental';\n            badgeColor = 'experimental';\n          } else {\n            badgeText = 'Production';\n            badgeColor = 'production';\n          }\n          output = (\n            <Flex\n              px={2}\n              py={1}\n              borderRadius={2}\n              alignItems={'center'}\n              justifyContent={'center'}\n              backgroundColor={badgeColor}\n            >\n              <Text\n                fontSize={1}\n                fontWeight={3}\n                color={'white'}\n              >\n                {badgeText}\n              </Text>\n            </Flex>\n          );\n        }\n      break;\n      case 'trancheTypeIcon':\n        const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.tranche]);\n        output = (\n          <Flex\n            p={'6px'}\n            borderRadius={'50%'}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={`rgba(${trancheDetails.color.rgb.join(',')},0.2)`}\n            {...flexProps}\n          >\n            <Icon\n              {...fieldProps}\n              align={'center'}\n              name={trancheDetails.icon}\n              color={trancheDetails.color.hex}\n            />\n          </Flex>\n        );\n      break;\n      case 'tokenIcon':\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token.toUpperCase()]);\n        const tokenIcon = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${this.props.token.toUpperCase()}.svg`;\n        output = (\n          <Image src={tokenIcon} {...fieldProps} />\n        );\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <Button {...fieldProps} onClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</Button>\n        );\n      break;\n      case 'custom':\n        output = (\n          <CustomField\n            row={this.props}\n            fieldInfo={fieldInfo}\n          />\n        );\n      break;\n      case 'feesCounter':\n        output = this.state.ready && this.state.feesCounter && this.state.feesCounter.feesStart && this.state.feesCounter.feesEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.feesCounter.feesEnd)}\n            start={parseFloat(this.state.feesCounter.feesStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounter':\n        output = this.state.ready && this.state.earningsCounter && this.state.earningsCounter.earningsStart && this.state.earningsCounter.earningsEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsCounter.earningsEnd)}\n            start={parseFloat(this.state.earningsCounter.earningsStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'trancheApyWithTooltip':\n        if (this.state[fieldInfo.name]){\n          let tooltipMessage = [`${this.props.token}: ${this.state[fieldInfo.name].baseApy.toFixed(decimals)+'%'}`];\n          Object.keys(this.state[fieldInfo.name].tokensApy).forEach( govToken => {\n            const value = this.state[fieldInfo.name].tokensApy[govToken].toFixed(decimals);\n            tooltipMessage.push(`${govToken}: ${value}%`);\n            // return `${govToken}: ${value}%`;\n          });//.join(\"; \");\n          tooltipMessage = tooltipMessage.join('; ');\n          const formattedApy = this.state[fieldInfo.name].formattedApy;\n          if (Object.keys(this.state[fieldInfo.name].tokensApy).length>0){\n            output = (\n              <TooltipText\n                tooltipProps={{\n                  placement:\"right\"\n                }}\n                text={formattedApy}\n                textProps={fieldProps}\n                message={tooltipMessage}\n              />\n            );\n          } else {\n            output = (<Text {...fieldProps} dangerouslySetInnerHTML={{__html:formattedApy}}></Text>);\n          }\n        } else {\n          output = (this.state[fieldInfo.name] === undefined ? loader : null);\n        }\n      break;\n      case 'govTokens':\n      case 'autoFarming':\n      case 'stakingRewards':\n        output = this.state[fieldInfo.name] && Object.keys(this.state[fieldInfo.name]).length>0 ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n            {...fieldInfo.parentProps}\n          >\n            {\n              Object.keys(this.state[fieldInfo.name]).map( (govToken,govTokenIndex) => {\n                const govTokenConfig = this.state[fieldInfo.name][govToken];\n                return (\n                  <AssetField\n                    token={govToken}\n                    tokenConfig={govTokenConfig}\n                    key={`asset_${govTokenIndex}`}\n                    fieldInfo={{\n                      name:'iconTooltip',\n                      tooltipProps:{\n                        message:`${govToken}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govToken] ? `: ${this.state.getGovTokensDistributionSpeed[govToken].toFixed(decimals)}/${govTokenConfig.distributionFrequency} (for the whole pool)` : '')\n                      },\n                      props:{\n                        borderRadius:'50%',\n                        position:'relative',\n                        height:['1.4em','2em'],\n                        ml:govTokenIndex ? '-10px' : 0,\n                        zIndex:Object.values(this.state[fieldInfo.name]).length-govTokenIndex,\n                        boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                      }\n                    }}\n                  />\n                );\n              })\n            }\n          </Flex>\n        ) : this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>-</Text>\n        ) : loader\n      break;\n      default:\n        let formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps} dangerouslySetInnerHTML={{__html:formattedValue}}></Text>\n        ) : (this.state[fieldInfo.name] === undefined ? loader : null)\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TrancheField;\n","import {\n  Link as RouterLink,\n} from \"react-router-dom\";\nimport ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport styles from './Footer.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Heading, Image, Link } from 'rimble-ui';\n\nclass Footer extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  render() {\n    const currYear = new Date().getFullYear();\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n    const columnWidth = governanceEnabled ? 1/4 : 1/3;\n    return (\n      <Flex\n        pl={0}\n        id={\"footer\"}\n        alignItems={'center'}\n        flexDirection={'column'}\n        className={styles.footer}\n        backgroundColor={'white'}\n        justifyContent={'flex-start'}\n      >\n        <Flex\n          width={1}\n          px={[3,6]}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            height={['auto','100%']}\n            alignItems={'flex-start'}\n            maxWidth={['35em','70em']}\n            justifyContent={'flex-start'}\n            flexDirection={['column','row']}\n          >\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Resources\n              </Heading.h3>\n              <Flex width={1} flexDirection={'column'}>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://developers.idle.finance'}\n                >\n                  <span role=\"img\" aria-label=\"documentation\">📚</span> Documentation\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://idlelabs.notion.site/Idle-Brand-Assets-fd63e4161cb64c999531646c7549bc4b'}\n                >\n                  <span role=\"img\" aria-label=\"brand-assets\">🎨</span> Brand Assets\n                </ExtLink>\n                <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                  <RouterLink\n                    color={'blue'}\n                    to=\"/terms-of-service\"\n                    className={styles.link}\n                  >\n                    <Text\n                      fontWeight={3}\n                      color={'blue'}\n                      fontSize={[3,2]}\n                      hoverColor={'blue'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                    >\n                      <span role=\"img\" aria-label=\"terms-of-service\">📑</span> Terms of Service\n                    </Text>\n                  </RouterLink>\n                </Flex>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749'}\n                >\n                  <span role=\"img\" aria-label=\"privacy-policy\">🕵️‍♂️</span> Privacy Policy\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'}\n                >\n                  <span role=\"img\" aria-label=\"cookie-policy\">🍪</span> Cookie Policy\n                </ExtLink>\n              </Flex>\n            </Flex>\n            {\n              governanceEnabled && \n                <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n                  <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                    Governance\n                  </Heading.h3>\n                  <Flex width={1} flexDirection={'column'}>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        to={\"/governance\"}\n                        className={styles.link}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-overview\">🏛</span> Overview\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/proposals\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-proposals\">💡</span> Proposals\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/leaderboard\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-leaderboard\">📋</span> Leaderboard\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://gov.idle.finance/\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🤝</span> Forum\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://www.notion.so/idlelabs/ffe8115b7b53489ab0a7f84e656e4bb0?v=916250f54ff24daabad72cf095fd6d88\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🌎</span> Team\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                  </Flex>\n                </Flex>\n            }\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Start a Conversation\n              </Heading.h3>\n              <Link textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>\n                <span role=\"img\" aria-label=\"email\">✉️</span> info@idle.finance\n              </Link>\n            </Flex>\n            <Flex width={[1,columnWidth]} flexDirection={'column'}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Explore\n              </Heading.h3>\n              <Flex flexDirection={'row'} justifyContent={['space-evenly','flex-start']}>\n                <ExtLink href=\"https://twitter.com/idlefinance\">\n                  <Image src=\"images/social/twitter.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://t.me/idlefinance\">\n                  <Image src=\"images/social/telegram.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://discord.gg/mpySAJp\">\n                  <Image src=\"images/social/discord.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://medium.com/@idlefinance\">\n                  <Image src=\"images/social/medium.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://github.com/Idle-Labs/\">\n                  <Image src=\"images/social/github.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://www.linkedin.com/company/idlefinance\">\n                  <Image src=\"images/social/linkedin.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://defipulse.com/defi-list\">\n                  <Image src=\"images/social/defi-pulse.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n              </Flex>\n            </Flex>\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n          height={['auto','100%']}\n          flexDirection={'column'}\n          alignItems={['center','flex-end']}\n          justifyContent={['center','flex-end']}\n        >\n          <Flex\n            p={2}\n            width={1}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={'dark-blue'}\n            flexDirection={['column','row']}\n          >\n            <Text\n              color={'white'}\n              textAlign={['center','flex-end']}\n            >\n              &copy; {currYear} - Idle Labs Inc.\n            </Text>\n            <RouterLink\n              color={'blue'}\n              to={'/terms-of-service'}\n              style={{textDecoration:'none'}}\n            >\n              <Text\n                pl={2}\n                color={'#0df'}\n                textAlign={['center','flex-end']}\n              >\n                Terms of Service\n              </Text>\n            </RouterLink>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport styles from './TableCellHeader.module.scss';\nimport { Flex, Heading, Icon, Link, Tooltip } from \"rimble-ui\";\n\nclass TableCellHeader extends Component {\n  render() {\n\n    const ColTitle = (props) => (\n      <Heading.h4\n        fontWeight={[3,4]}\n        color={'cellTitle'}\n        style={{\n          width:'100%',\n          whiteSpace:'nowrap'\n        }}\n        fontSize={['10px',3]}\n        lineHeight={'initial'}\n        {...props}\n        {...props.colsProps}\n      >\n        {props.children}\n      </Heading.h4>\n    );\n\n    return (\n      <Flex\n        width={this.props.width}\n      >\n        {\n          (this.props.desc && this.props.desc.length>1) ? (\n            <Flex\n              alignItems={'center'}\n            >\n              <ColTitle\n                {...this.props}\n              />\n              <Link\n                style={{\n                  cursor:'pointer'\n                }}\n                onClick={ e => this.props.openTooltipModal(this.props.title,this.props.desc) }\n              >\n                <Tooltip\n                  placement={'top'}\n                  message={'Click to read the description'}\n                >\n                  <Icon\n                    ml={1}\n                    name={\"Info\"}\n                    color={'cellTitle'}\n                    className={styles.tooltip}\n                    size={ this.props.isMobile ? '1em' : '1.2em'}\n                  />\n                </Tooltip>\n              </Link>\n            </Flex>\n          ) : (\n            <ColTitle\n              {...this.props}\n            />\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableCellHeader;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ChartCustomTooltip extends Component {\n\n  async componentWillMount(){\n\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    \n  }\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos && this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ChartCustomTooltip;\n","import React, { Component } from 'react';\nimport {\n  Button,\n  Flex,\n  Box,\n  Text\n} from \"rimble-ui\";\nimport styles from './TwitterShareButton.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TwitterShareButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  share = () => {\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Share',\n      eventAction: 'twitter',\n      eventLabel: this.props.parent\n    });\n\n    const w = Math.min(window.innerWidth,600);\n    const h = 350;\n    const x = (window.innerWidth-w)/2;\n    const y = 150;\n    window.open(`https://twitter.com/intent/tweet?text=${this.props.tweet}`,\"_blank\",`toolbar=yes,scrollbars=no,resizable=no,top=${y},left=${x},width=${w},height=${h}`);\n  }\n\n  render() {\n    return (\n        <Button\n          borderRadius={1}\n          mainColor={'#2aa6f2'}\n          contrastColor={'white'}\n          onClick={ e => { this.share() } }\n        >\n          <Flex flexDirection={'row'} alignItems={'center'} justifyContent={'center'}>\n            <Box className={styles.twitterIcon} />\n            <Text color={'white'} fontWeight={3} ml={2}>{ this.props.text ? this.props.text : 'Tweet' }</Text>\n          </Flex>\n        </Button>\n    );\n  }\n}\n\nexport default TwitterShareButton;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Link,\n  Flex\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport TwitterShareButton from '../../TwitterShareButton/TwitterShareButton.js';\nimport Confetti from 'react-confetti/dist/react-confetti';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass ShareModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  closeModal = async (action) => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Share',\n        eventAction: action,\n        eventLabel: 'ShareModal'\n      });\n      this.props.closeModal();\n    } else {\n      this.props.closeModal();\n    }\n  }\n\n  render() {\n    const tweet = window.escape(this.props.tweet);\n    const customText = {__html: this.props.text};\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          {\n            this.props.confettiEnabled &&\n            <Confetti\n              style={{ position: 'fixed','zIndex':9999 }}\n              run={true}\n              recycle={true}\n              width={window.innerWidth}\n              height={window.innerHeight}\n            />\n          }\n          <ModalCard.Header title={this.props.title} icon={this.props.icon}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={3} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text color={'dark-gray'} textAlign={'center'} fontSize={3} mb={2} dangerouslySetInnerHTML={customText}></Text>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <TwitterShareButton tweet={tweet} text={'Share now'} parent={'ShareModal'} />\n              <Link mt={2} onClick={ e => this.closeModal('continue_without_sharing') } hoverColor={'blue'}>continue without sharing</Link>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ShareModal;","import React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Text, Icon, Image, Button, Link, Flex } from \"rimble-ui\";\n\nclass CustomField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText'\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    let CustomComponent = null;\n    let componentHasChildren = false;\n    const fieldType = fieldInfo.type;\n    const fieldPath = fieldInfo.path;\n    let customValue = fieldPath ? this.functionsUtil.getArrayPath(fieldPath,this.props.row) : null;\n\n    switch (fieldType){\n      case 'image':\n        CustomComponent = Image;\n        fieldProps.src = customValue;\n      break;\n      case 'number':\n        customValue = this.functionsUtil.BNify(customValue).toString();\n        CustomComponent = SmartNumber;\n        fieldProps.number = customValue;\n      break;\n      case 'link':\n        CustomComponent = Link;\n      break;\n      case 'icon':\n        CustomComponent = Icon;\n        fieldProps.name = customValue;\n      break;\n      case 'bgIcon':\n        CustomComponent = (props) => (\n          <Flex\n            p={'5px'}\n            borderRadius={'50%'}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={props.bgColor}\n          >\n            <Icon\n              align={'center'}\n              name={customValue}\n              color={props.color}\n              size={this.props.isMobile ? '1em' : '1.4em'}\n            />\n          </Flex>\n        );\n        fieldProps.name = customValue;\n      break;\n      case 'button':\n        CustomComponent = Button;\n        componentHasChildren = true;\n        customValue = fieldInfo.label || fieldProps.label;\n        fieldProps.onClick=() => fieldProps.handleClick(this.props)\n      break;\n      default:\n        CustomComponent = Text;\n        componentHasChildren = true;\n      break;\n    }\n\n    if (!customValue){\n      return null;\n    }\n\n    // Add custom field extra props\n    if (fieldPath){\n      const customFieldName = Object.values(fieldPath).pop();\n      if (this.props.row[`${customFieldName}Props`]){\n        const customFieldProps = this.props.row[`${customFieldName}Props`];\n        // Replace props\n        if (customFieldProps && Object.keys(customFieldProps).length){\n          Object.keys(customFieldProps).forEach(p => {\n            fieldProps[p] = customFieldProps[p];\n          });\n        }\n      }\n    }\n\n    return CustomComponent ? (componentHasChildren ? (<CustomComponent {...fieldProps}>{customValue}</CustomComponent>) : (<CustomComponent {...fieldProps} />) ) : null;\n  }\n}\n\nexport default CustomField;","import React, { Component } from \"react\";\nimport { Button, Image, Flex, Text, Icon, Box } from 'rimble-ui';\n\nclass ImageButton extends Component {\n\n  render() {\n\n    const isMobile = typeof this.props.isMobile !== 'undefined' ? this.props.isMobile : false;\n    const image = this.props.imageSrc ? (<Image width={'auto'} src={this.props.imageSrc} {...this.props.imageProps} />) : ( this.props.iconName ? (<Icon name={this.props.iconName} {...this.props.iconProps} />) : null );\n    const caption = (<Text textAlign={ isMobile ? 'left' : 'center'} fontSize={2} fontWeight={3} color={'dark-gray'}>{this.props.caption}</Text>);\n\n    return (\n        <Button\n          color={'white'}\n          borderRadius={3}\n          px={ isMobile ? [3,4] : 4 }\n          py={ isMobile ? 0 : [3,4] }\n          my={ isMobile ? 2 : [2,2] }\n          mx={ isMobile ? 0 : [0,2] }\n          onClick={ this.props.handleClick }\n          height={ isMobile ? '58px' : ['150px','170px']}\n          mainColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          contrastColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          width={this.props.width ? this.props.width : (isMobile ? '100%' : ['150px','170px'])}\n          style={this.props.buttonStyle ? this.props.buttonStyle : (isMobile ? {justifyContent:'flex-start'} : null)}\n          {...this.props.buttonProps}\n        >\n          <>\n            {\n              this.props.badge && (\n                <Box\n                  position={'absolute'}\n                  borderRadius={'16px'}\n                  backgroundColor={ this.props.badge.bgColor ? this.props.badge.bgColor : 'blue' }\n                  style={ isMobile ? {right:'-25px',top:'-17px'} : {right:'-25px',top:'-25px'} }\n                  px={['5px','7px']}\n                  py={['1px','3px']}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={'10px'}\n                    color={ this.props.badge.color ? this.props.badge.color : '#fff' }\n                  >\n                  {this.props.badge.text}\n                  </Text>\n                </Box>\n              )\n            }\n            <Flex flexDirection={ isMobile ? 'row' : 'column'} justifyContent={ isMobile ? 'flex-start' : 'center'} alignItems={'center'}>\n              <Flex width={ isMobile ? '45px' : 1 } mr={ isMobile ? 2 : 0 } justifyContent={ isMobile ? 'flex-start' : 'center' }>\n                { this.props.captionPos && this.props.captionPos === 'top' ? caption : image }\n              </Flex>\n              <Flex width={ isMobile ? 'auto' : 1 } flexDirection={'column'} justifyContent={ isMobile ? 'flex-start' : 'center' } >\n                { this.props.captionPos && this.props.captionPos === 'top' ? image : caption }\n                {\n                  this.props.subcaption && this.props.subcaption.split('\\n').map((v,i) => {\n                    // Smaller caption for second line\n                    if (i){\n                      v = (<small>{v}</small>);\n                    }\n                    return (\n                      <Text key={`subcaption_${i}`} lineHeight={'1.3'} textAlign={ isMobile ? 'left' : 'center'} color={'darkGray'} fontWeight={1} fontSize={1}>{v}</Text>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </>\n        </Button>\n    );\n  }\n}\nexport default ImageButton;\n","import { Button } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass RoundButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      width:1,\n      fontWeight:3,\n      height:'45px',\n      fontSize:[2,3],\n      boxShadow:null,\n      borderRadius:4,\n      mainColor:'blue'\n    },this.props.buttonProps);\n\n    return (\n       <Button\n        {...buttonProps}\n        onClick={this.props.handleClick}\n       >\n        {this.props.children}\n       </Button>\n    );\n  }\n}\n\nexport default RoundButton;\n","import { Link } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass ExtLink extends Component {\n\n  render() {\n    return (\n      <Link\n        color={'link'}\n        target={'_blank'}\n        rel={'nofollow noopener noreferrer'}\n        {...this.props}\n      >\n        {this.props.children}\n      </Link>\n    );\n  }\n}\n\nexport default ExtLink;\n","import { Line } from '@nivo/line';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport { linearGradientDef } from '@nivo/core'\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport CustomTooltip from '../CustomTooltip/CustomTooltip';\nimport VariationNumber from '../VariationNumber/VariationNumber';\nimport AllocationChart from '../AllocationChart/AllocationChart';\nimport CustomTooltipRow from '../CustomTooltip/CustomTooltipRow';\nimport { Image, Text, Loader, Button, Tooltip, Icon, Flex, Link } from \"rimble-ui\";\n\nclass AssetField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractsInitialized = !prevProps.contractsInitialized && this.props.contractsInitialized;\n    const requiredNetworkChanged = (!prevProps.network && this.props.network) || (prevProps.network && this.props.network && JSON.stringify(prevProps.network.required) !== JSON.stringify(this.props.network.required));\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || accountChanged || transactionsChanged || contractsInitialized || requiredNetworkChanged){\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.loadField();\n      });\n    } else if (mobileChanged || themeModeChanged){\n      const oldState = Object.assign({},this.state);\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n    // Exit if component unmounted\n    // console.log('loadField',this.props.fieldInfo.name,this.props.account,this.props.token,this.props.tokenConfig);\n\n    if (this.componentUnmounted || !this.props.token || !this.props.tokenConfig || !this.props.contractsInitialized){\n      return null;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n    // const addCurveApy = typeof this.props.addCurveApy !== 'undefined' ? this.props.addCurveApy : false;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const tokenConfigStats = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token.toUpperCase()]);\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        case 'tokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              tokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'govTokens':\n          const govTokens = this.functionsUtil.getTokenGovTokens(this.props.tokenConfig);\n          const getGovTokensDistributionSpeed = await this.functionsUtil.getGovTokensDistributionSpeed(this.props.tokenConfig);\n          this.setStateSafe({\n            govTokens,\n            getGovTokensDistributionSpeed\n          });\n        break;\n        case 'tokenPrice':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenPrice = '-';\n            if (typeof this.props.tokenConfig.showPrice === 'undefined' || this.props.tokenConfig.showPrice){\n              tokenPrice = output.toString();\n            }\n            this.setStateSafe({\n              tokenPrice\n            });\n          }\n        break;\n        case 'fee':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              fee:output.toString()\n            });\n          }\n        break;\n        case 'amountToMigrate':\n          const {\n            oldContractBalanceFormatted\n          } = await this.functionsUtil.checkMigration(this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (setState && oldContractBalanceFormatted){\n            this.setStateSafe({\n              amountToMigrate:oldContractBalanceFormatted.toString()\n            });\n            output = oldContractBalanceFormatted;\n          }\n        break;\n        case 'amountLent':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              amountLent:output.toString()\n            });\n          }\n        break;\n        case 'idleTokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              idleTokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'redeemableBalanceCounterCurve':\n          const {\n            redeemableBalanceCurveEnd,\n            redeemableBalanceCurveStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceCurveStart && redeemableBalanceCurveEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceCurveEnd,\n                redeemableBalanceCurveStart\n              });\n            }\n\n            output = {\n              redeemableBalanceCurveEnd,\n              redeemableBalanceCurveStart\n            };\n          }\n        break;\n        case 'redeemableBalanceCounter':\n          const {\n            redeemableBalanceEnd,\n            redeemableBalanceStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceStart && redeemableBalanceEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceEnd,\n                redeemableBalanceStart\n              });\n            }\n\n            output = {\n              redeemableBalanceEnd,\n              redeemableBalanceStart\n            };\n          }\n        break;\n        case 'earnings':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earnings:output.toString()\n            });\n          }\n        break;\n        case 'feesCounter':\n          const [earningsCounter,feePercentage] = await Promise.all([\n            this.loadField('earningsCounter'),\n            this.functionsUtil.getTokenFees(this.props.tokenConfig)\n          ]);\n\n          if (earningsCounter && earningsCounter.earningsStart && earningsCounter.earningsEnd && feePercentage){\n\n            const feesStart = earningsCounter.earningsStart.times(feePercentage);\n            const feesEnd = earningsCounter.earningsEnd.times(feePercentage);\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                feesEnd,\n                feesStart\n              });\n            }\n\n            output = {\n              feesEnd,\n              feesStart\n            };\n          }\n        break;\n        case 'earningsCounterCurve':\n          const [curveApy,earningsCurveStart,amountLentCurve] = await Promise.all([\n            this.functionsUtil.getCurveAPY(),\n            this.functionsUtil.loadAssetField('earningsCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLentCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n          if (amountLentCurve && earningsCurveStart && curveApy){\n            const earningsCurveEnd = amountLentCurve.gt(0) ? amountLentCurve.times(curveApy.div(100)).plus(earningsCurveStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsCurveEnd,\n                earningsCurveStart\n              });\n            }\n\n            output = {\n              earningsCurveEnd,\n              earningsCurveStart\n            };\n          }\n        break;\n        case 'earningsCounter':\n          let [tokenAPY2,earningsStart,amountLent2] = await Promise.all([\n            this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('earnings',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLent',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n\n          if (amountLent2 && earningsStart && tokenAPY2){\n            const earningsEnd = amountLent2.gt(0) ? amountLent2.times(tokenAPY2.div(100)).plus(earningsStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsEnd,\n                earningsStart\n              });\n            }\n\n            output = {\n              earningsEnd,\n              earningsStart\n            };\n          }\n        break;\n        case 'redeemableBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              redeemableBalance:output.toString()\n            });\n          }\n        break;\n        case 'score':\n          const tokenScore = await this.functionsUtil.getTokenScore(this.props.tokenConfig,isRisk);\n          if (setState){\n            this.setStateSafe({\n              score:tokenScore ? tokenScore : false\n            });\n          }\n          output = tokenScore;\n        break;\n        case 'pool':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              poolSize:output.toString()\n            });\n          }\n        break;\n        case 'earningsPercCurve':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPercCurveDirection:parseFloat(output)>0 ? 'up' : 'down',\n              earningsPercCurve:parseFloat(output).toFixed(decimals)\n            });\n          }\n        break;\n        case 'earningsPerc':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPerc:parseFloat(output).toFixed(decimals),\n              earningsPercDirection:parseFloat(output)>0 ? 'up' : 'down'\n            });\n          }\n        break;\n        case 'apr':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenAPR = '-';\n            if (typeof this.props.tokenConfig.showAPR === 'undefined' || this.props.tokenConfig.showAPR){\n              tokenAPR = parseFloat(output).toFixed(decimals);\n            }\n            this.setStateSafe({\n              tokenAPR\n            });\n          }\n        break;\n        case 'oldApy':\n          if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.oldContract){\n            const oldTokenConfig = Object.assign({},this.props.tokenConfig);\n            oldTokenConfig.idle = Object.assign({},this.props.tokenConfig.migration.oldContract);\n            oldTokenConfig.protocols = Object.values(this.props.tokenConfig.protocols);\n\n            // Override token with name\n            oldTokenConfig.idle.token = oldTokenConfig.idle.name;\n\n            // Replace protocols with old protocols\n            if (oldTokenConfig.migration.oldProtocols){\n              oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n                const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n                if (foundProtocol){\n                  const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                  oldTokenConfig.protocols[protocolPos] = oldProtocol;\n                }\n              });\n            }\n\n            output = await this.functionsUtil.loadAssetField('apy',this.props.token,oldTokenConfig,this.props.account,false);\n\n          } else {\n            output = await this.loadField('apyNoGov');\n          }\n\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                oldAPY:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                oldAPY:false\n              });\n            }\n          }\n        break;\n        case 'apyNoGov':\n          output = await this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,false);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                tokenAPYNoGov:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPYNoGov:false\n              });\n            }\n          }\n        break;\n        case 'curveApy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveApy:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveApy:false\n              });\n            }\n          }\n        break;\n        case 'curveAvgSlippage':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveAvgSlippage:(parseFloat(output)*100).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveAvgSlippage:false\n              });\n            }\n          }\n        break;\n\n        case 'apy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // console.log(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens,output);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              const tokenAPY = parseFloat(output).toFixed(decimals);\n              const showTooltip = !this.props.isMobile && (fieldInfo.showTooltip !== undefined && fieldInfo.showTooltip);\n              const govTokensAprs = showTooltip ? await this.functionsUtil.getGovTokensAprs(this.props.token,this.props.tokenConfig) : null;\n              this.setStateSafe({\n                tokenAPY,\n                govTokensAprs\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPY:false\n              });\n            }\n          }\n        break;\n        case 'allocationChart':\n          let allocationChartWidth = 0;\n          let allocationChartHeight = 0;\n\n          const resizeAllocationChart = () => {\n            const allocationChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (allocationChartRowElement){\n              const $allocationChartRowElement = window.jQuery(allocationChartRowElement);\n              allocationChartWidth = $allocationChartRowElement.innerWidth()-parseFloat($allocationChartRowElement.css('padding-right'))-parseFloat($allocationChartRowElement.css('padding-left'));\n              allocationChartHeight = $allocationChartRowElement.innerHeight();\n\n              // Make it a square\n              allocationChartWidth = parseInt(allocationChartWidth)>0 ? Math.min(allocationChartWidth,allocationChartHeight) : allocationChartHeight;\n              allocationChartHeight = allocationChartWidth;\n\n\n              if (allocationChartWidth !== this.state.allocationChartWidth){\n                if (setState){\n                  this.setStateSafe({\n                    allocationChartWidth,\n                    allocationChartHeight\n                  });\n                }\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAllocationChart();\n          window.removeEventListener('resize', resizeAllocationChart.bind(this));\n          window.addEventListener('resize', resizeAllocationChart.bind(this));\n\n          if (setState){\n            this.setStateSafe({\n              allocationChartWidth,\n              allocationChartHeight\n            });\n          }\n        break;\n        case 'aprChart':\n          // Set start timestamp for v3 tokens\n          const aprChartEndTimestamp = isRisk ? this.functionsUtil.getGlobalConfig(['stats','versions','v3','endTimestamp']) : null;\n          const aprChartStartTimestamp = isRisk ? aprChartEndTimestamp-(7*24*60*60) : Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).format('DD/MM/YYYY 00:00:00'),'DD/MM/YYYY HH:mm:ss').subtract(7,'days')._d.getTime()/1000));\n\n          // Check for cached data\n          let aprChartData = null;\n          const cachedDataKey = `aprChart_${this.props.tokenConfig.address}_${isRisk}`;\n          const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n\n          aprChartData = [{\n            id:this.props.token,\n            color: this.props.color ? this.props.color : 'hsl('+tokenConfigStats.color.hsl.join(',')+')',\n            data: []\n          }];\n\n          if (cachedData !== null && cachedData[0] && cachedData[0].data && cachedData[0].data.length>0){\n            aprChartData = cachedData;\n          } else {\n\n            // FAKE CHART DATA\n            if (this.props.token === 'COMP'){\n              aprChartData[0].data = [];\n              const startTimestamp = new Date().getTime();\n              let y = 20;\n              for (var i=0; i<=16; i++) {\n                const mDate = this.functionsUtil.strToMoment(startTimestamp).add(i,'day');\n                const x = mDate.format(\"YYYY/MM/DD HH:mm\");\n                // Grow\n                if ((i>=5 && i<=10) || (i>=13)){\n                  y+=Math.random()*4+2; // Risk\n                  // y+=Math.random()*7+4; // Best\n                // Decrease\n                } else {\n                  y-=Math.random()*3+1; // Risk\n                  // y-=Math.random()*3+1; // Best\n                }\n                aprChartData[0].data.push({x,y});\n              }\n            } else {\n              const frequencySeconds = this.functionsUtil.getFrequencySeconds('hour',12);\n\n              // console.log('apiResultsAprChart',this.props.tokenConfig.token,this.props.tokenConfig.address,this.props.network.required);\n\n              const apiResultsAprChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,aprChartStartTimestamp,aprChartEndTimestamp,false,frequencySeconds);\n\n              let itemIndex = 0;\n              const totalItems = apiResultsAprChart.length;\n\n              apiResultsAprChart.forEach((d,i) => {\n                const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const y = parseFloat(this.functionsUtil.fixTokenDecimals(d.idleRate,18));\n                const itemPos = Math.floor(itemIndex++/totalItems*100);\n                aprChartData[0].data.push({ x, y, itemPos });\n              });\n            }\n\n            if (aprChartData[0].data.length>0){\n              this.functionsUtil.setCachedData(cachedDataKey,aprChartData);\n            }\n          }\n\n          // Add same value\n          if (aprChartData[0].data.length === 1){\n            const newPoint = Object.assign({},aprChartData[0].data[0]);\n            newPoint.x = this.functionsUtil.strToMoment(newPoint,\"YYYY/MM/DD HH:mm\").add(1,'hours').format(\"YYYY/MM/DD HH:mm\")\n            aprChartData[0].data.push(newPoint);\n          }\n\n          let aprChartWidth = 0;\n          let aprChartHeight = 0;\n\n          const resizeAprChart = () => {\n            const aprChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (aprChartRowElement){\n              const $aprChartRowElement = window.jQuery(aprChartRowElement);\n              aprChartWidth = $aprChartRowElement.innerWidth()-parseFloat($aprChartRowElement.css('padding-right'))-parseFloat($aprChartRowElement.css('padding-left'));\n              aprChartHeight = $aprChartRowElement.innerHeight();\n              if (aprChartWidth !== this.state.aprChartWidth || !this.state.aprChartHeight){\n                this.setStateSafe({\n                  aprChartWidth,\n                  aprChartHeight: this.state.aprChartHeight ? this.state.aprChartHeight : aprChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAprChart();\n          window.removeEventListener('resize', resizeAprChart.bind(this));\n          window.addEventListener('resize', resizeAprChart.bind(this));\n\n          // Set chart type\n          const aprChartType = Line;\n\n          const aprChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            axisLeft:null,\n            animate:false,\n            axisBottom:null,\n            enableArea:true,\n            areaOpacity:0.1,\n            curve:'monotoneX',\n            enableGridX:false,\n            enableGridY:false,\n            pointBorderWidth:2,\n            isInteractive:true,\n            colors:d => d.color,\n            defs:[\n              linearGradientDef('gradientArea', [\n                  { offset: 0, color: '#faf047' },\n                  { offset: 50, color: '#e4b400' },\n              ])\n            ],\n            enableSlices:this.props.isMobile ? false : 'x',\n            yFormat:value => parseFloat(value).toFixed(2)+'%',\n            fill:[\n              { match: { id: this.props.token } , id: 'gradientArea' },\n            ],\n            margin: { top: 10, right: 0, bottom: 0, left: 0 },\n            sliceTooltip:(slideData) => {\n              const { slice } = slideData;\n              const point = slice.points[0];\n              return (\n                <CustomTooltip\n                  point={point}\n                >\n                  {\n                  typeof slice.points === 'object' && slice.points.length &&\n                    slice.points.map(point => {\n                      const protocolName = point.serieId;\n                      const protocolEarning = point.data.yFormatted;\n                      // const protocolApy = point.data.apy;\n                      return (\n                        <CustomTooltipRow\n                          key={point.id}\n                          color={point.color}\n                          label={protocolName}\n                          value={protocolEarning}\n                        />\n                      );\n                    })\n                  }\n                </CustomTooltip>\n              );\n            }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                aprChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              aprChartType,\n              aprChartData,\n              aprChartProps,\n              aprChartWidth,\n              aprChartHeight\n            });\n          }\n          output = aprChartData;\n        break;\n        case 'performanceChart':\n          let firstTokenPrice = null;\n          let firstIdleBlock = null;\n          /*\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const performanceChartRowElement = document.getElementById(this.props.rowId) ? document.getElementById(this.props.rowId) : document.getElementById(this.props.parentId);\n          if (performanceChartRowElement){\n            performanceChartWidth = parseFloat(performanceChartRowElement.offsetWidth)>0 ? performanceChartRowElement.offsetWidth* (this.props.colProps ? this.props.colProps.width : 1) : 0;\n            performanceChartHeight = parseFloat(performanceChartRowElement.offsetHeight);\n          }\n          */\n\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const resizePerformanceChart = () => {\n            const PerformanceChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (PerformanceChartRowElement){\n              const $PerformanceChartRowElement = window.jQuery(PerformanceChartRowElement);\n              performanceChartWidth = $PerformanceChartRowElement.innerWidth()-parseFloat($PerformanceChartRowElement.css('padding-right'))-parseFloat($PerformanceChartRowElement.css('padding-left'));\n              performanceChartHeight = $PerformanceChartRowElement.innerHeight();\n              if (performanceChartWidth !== this.state.performanceChartWidth || !this.state.performanceChartHeight){\n                this.setStateSafe({\n                  performanceChartWidth,\n                  performanceChartHeight: this.state.performanceChartHeight ? this.state.performanceChartHeight : performanceChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizePerformanceChart();\n          window.removeEventListener('resize', resizePerformanceChart.bind(this));\n          window.addEventListener('resize', resizePerformanceChart.bind(this));\n\n          const apr_end_date = this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).subtract(1,'day').format('YYYY-MM-DD 23:59'),'YYYY-MM-DD HH:mm');\n          const apr_start_date = apr_end_date.clone().subtract(1,'week');\n\n          // Set start timestamp for v3 tokens\n          const apr_start_timestamp =  Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(apr_start_date._d.getTime()/1000));\n          // const apr_end_timestamp = parseInt(apr_end_date._d.getTime()/1000);\n\n          let apiResultsPerformanceChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,apr_start_timestamp,null,false,43200);\n\n          const idleTokenPerformance = apiResultsPerformanceChart.map((d,i) => {\n            let y = 0;\n            const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n            const tokenPrice = this.functionsUtil.fixTokenDecimals(d.idlePrice,this.props.tokenConfig.decimals);\n\n            if (!firstTokenPrice){\n              firstTokenPrice = tokenPrice;\n            } else {\n              y = parseFloat(tokenPrice.div(firstTokenPrice).minus(1).times(100));\n            }\n\n            if (firstIdleBlock === null){\n              firstIdleBlock = parseInt(d.blocknumber);\n            }\n\n            return { x, y };\n          });\n\n          const performanceChartData = [{\n            id:'Idle',\n            color: 'hsl('+tokenConfigStats.color.hsl.join(',')+')',\n            data: idleTokenPerformance\n          }];\n\n          // Set chart type\n          const performanceChartType = Line;\n\n          const performanceChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            animate:false,\n            axisLeft:null,\n            axisBottom:null,\n            enableArea:true,\n            enableGridX:false,\n            enableGridY:false,\n            curve:'monotoneX',\n            enableSlices:false,\n            pointBorderWidth:1,\n            colors:d => d.color,\n            pointLabelYOffset:-12,\n            margin: { top: 0, right: 0, bottom: 0, left: 0 }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                performanceChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              performanceChartType,\n              performanceChartData,\n              performanceChartProps,\n              performanceChartWidth,\n              performanceChartHeight\n            });\n          }\n          output = performanceChartData;\n        break;\n        case 'custom':\n          const path = fieldInfo.path;\n          output = this.functionsUtil.getArrayPath(path,this.props.tokenConfig);\n          if (output){\n            this.setStateSafe({\n              [fieldName]:output\n            });\n          }\n        break;\n        default:\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              ready:true,\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n\n    return output;\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n    let output = null;\n\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    const tokenConfigStats = this.props.token ? this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token.toUpperCase()]) : null;\n    const tokenConfig = this.props.tokenConfig || tokenConfigStats;\n      \n    const maxPrecision = fieldProps && fieldProps.maxPrecision ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const minPrecision = fieldProps && fieldProps.minPrecision ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    switch (fieldInfo.name){\n      case 'iconTooltip':\n        const icon1 = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Tooltip\n            placement={'top'}\n            message={this.props.token}\n            {...fieldInfo.tooltipProps}\n          >\n            <Image src={icon1} {...fieldProps} />\n          </Tooltip>\n        );\n      break;\n      case 'icon':\n        const icon2 = tokenConfig && tokenConfig.icon ? tokenConfig.icon : (this.props.token===\"FRAX3CRV\")?`images/tokens/${this.props.token}.png`:`images/tokens/${this.props.token}.svg`;\n        output = (\n          <Image src={icon2} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        output = (\n          <Text {...fieldProps}>{this.props.token}</Text>\n        );\n      break;\n      case 'strategyIcon':\n        const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'icon']);\n        if (strategyIcon){\n          output = (\n            <Image src={strategyIcon} {...fieldProps} />\n          );\n        }\n      break;\n      case 'strategyName':\n        const strategyName = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'title']);\n        output = (\n          <Text {...fieldProps}>{strategyName}</Text>\n        );\n      break;\n      case 'tokenBalance':\n        output = this.state.tokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenBalance} />\n        ) : loader\n      break;\n      case 'fee':\n        output = this.state.fee ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.fee} />\n        ) : loader\n      break;\n      case 'tokenPrice':\n        output = this.state.tokenPrice ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenPrice} />\n        ) : loader\n      break;\n      case 'amountToMigrate':\n        output = this.state.amountToMigrate ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.amountToMigrate} />\n        ) : loader\n      break;\n      case 'idleTokenBalance':\n        output = this.state.idleTokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.idleTokenBalance} />\n        ) : loader\n      break;\n      case 'redeemableBalanceCounterCurve':\n        output = this.state.ready && this.state.redeemableBalanceCurveStart && this.state.redeemableBalanceCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceCurveEnd)}\n            start={parseFloat(this.state.redeemableBalanceCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalanceCounter':\n        output = this.state.ready && this.state.redeemableBalanceStart && this.state.redeemableBalanceEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceEnd)}\n            start={parseFloat(this.state.redeemableBalanceStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'feesCounter':\n        output = this.state.ready && this.state.feesStart && this.state.feesEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.feesEnd)}\n            start={parseFloat(this.state.feesStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounterCurve':\n        output = this.state.ready && this.state.earningsCurveStart && this.state.earningsCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsCurveEnd)}\n            start={parseFloat(this.state.earningsCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounter':\n        output = this.state.ready && this.state.earningsStart && this.state.earningsEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsEnd)}\n            start={parseFloat(this.state.earningsStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalance':\n        output = this.state.redeemableBalance ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.redeemableBalance} />\n        ) : loader\n      break;\n      case 'govTokens':\n        output = this.state.govTokens && Object.keys(this.state.govTokens).length>0 ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n          >\n            {\n              Object.values(this.state.govTokens).map( (govTokenConfig,govTokenIndex) => (\n                <AssetField\n                  token={govTokenConfig.token}\n                  tokenConfig={govTokenConfig}\n                  key={`asset_${govTokenIndex}`}\n                  fieldInfo={{\n                    name:'iconTooltip',\n                    tooltipProps:{\n                      message:`${govTokenConfig.token}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govTokenConfig.token] ? `: ${this.state.getGovTokensDistributionSpeed[govTokenConfig.token].toFixed(decimals)}/${govTokenConfig.distributionFrequency} (for the whole pool)` : '')\n                    },\n                    props:{\n                      borderRadius:'50%',\n                      position:'relative',\n                      height:['1.1em','2em'],\n                      ml:govTokenIndex ? '-10px' : 0,\n                      zIndex:Object.values(this.state.govTokens).length-govTokenIndex,\n                      boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                    }\n                  }}\n                />\n              ))\n            }\n          </Flex>\n        ) : this.state.govTokens ? (\n          <Text {...fieldProps}>-</Text>\n        ) : loader\n      break;\n      case 'amountLentCurve':\n        output = this.state.amountLentCurve ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLentCurve} />\n        ) : loader\n      break;\n      case 'amountLent':\n        output = this.state.amountLent ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLent} />\n        ) : loader\n      break;\n      case 'pool':\n        output = this.state.poolSize ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.poolSize} />\n        ) : loader\n      break;\n      case 'score':\n        output = (this.props.tokenConfig && this.props.tokenConfig.defiScoreDisabled) ? (<Text {...fieldProps}>N/A</Text>) : (this.state.score !== undefined && this.state.score !== null && this.functionsUtil.BNify(this.state.score).gt(0)) ? (\n          <SmartNumber {...fieldProps} decimals={2} number={this.state.score} />\n        ) : (this.functionsUtil.BNify(this.state.score).lte(0) ? (<Text {...fieldProps}>-</Text>) : loader)\n      break;\n      case 'earningsPerc':\n        output = this.state.earningsPerc ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsPercCurve':\n        output = this.state.earningsPercCurve ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercCurveDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsCurve':\n        output = this.state.earningsCurve ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earningsCurve}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'earnings':\n        output = this.state.earnings ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earnings}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'idleDistribution':\n        const governanceTokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n        const idleTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',governanceTokenName]);\n        output = this.state.idleDistribution ? (\n          <Text {...fieldProps}>+{this.state.idleDistribution.toFixed(decimals)} IDLE/{idleTokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'userDistributionSpeed':\n        output = this.state.userDistributionSpeed ? (\n          <Text {...fieldProps}>{this.state.userDistributionSpeed.toFixed(decimals)}/{this.props.tokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'distributionSpeed':\n        output = this.state.distributionSpeed ? (\n          <Text {...fieldProps}>{this.state.distributionSpeed.toFixed(decimals)}</Text>\n        ) : loader\n      break;\n      case 'apr':\n        output = this.state.tokenAPR ? (\n          <Text {...fieldProps}>{this.state.tokenAPR}{!isNaN(parseFloat(this.state.tokenAPR)) ? '%' : ''}</Text>\n        ) : loader\n      break;\n      case 'oldApy':\n        output = this.state.oldAPY !== undefined ? (\n          <Text {...fieldProps}>{this.state.oldAPY !== false ? this.state.oldAPY : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apyNoGov':\n        output = this.state.tokenAPYNoGov !== undefined ? (\n          <Text {...fieldProps}>{this.state.tokenAPYNoGov !== false ? this.state.tokenAPYNoGov : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveApy':\n        output = this.state.curveApy !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveApy !== false ? this.state.curveApy : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveAvgSlippage':\n        output = this.state.curveAvgSlippage !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveAvgSlippage !== false ? this.state.curveAvgSlippage : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apy':\n        output = this.state.tokenAPY !== undefined ? (\n          <Flex\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text {...fieldProps}>{this.state.tokenAPY !== false ? this.state.tokenAPY : '-' }<small>%</small></Text>\n            {\n              this.state.govTokensAprs && Object.keys(this.state.govTokensAprs).length>0 && \n                <AssetField\n                  fieldInfo={{\n                    name:'tooltip',\n                    props:{\n                      iconProps:{\n                        ml:1\n                      },\n                      placement:'top',\n                      message:Object.keys(this.state.govTokensAprs).map( govToken => {\n                        const distributionFrequency = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'distributionFrequency']);\n                        const tooltipMode = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'aprTooltipMode']);\n                        let value = this.state.govTokensAprs[govToken].toFixed(decimals);\n                        switch (tooltipMode){\n                          default:\n                          case 'apr':\n                            value += '%';\n                          break;\n                          case 'distribution':\n                            value = `${value}/${distributionFrequency}`;\n                          break;\n                        }\n                        return `${govToken}: ${value}`\n                      }).join('; ')\n                    }\n                  }}\n                />\n            }\n          </Flex>\n        ) : loader\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <Button {...fieldProps} onClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</Button>\n        );\n      break;\n      case 'performanceChart':\n        output = this.state.performanceChartData ? (\n          <GenericChart\n            {...this.state.performanceChartProps}\n            type={this.state.performanceChartType}\n            data={this.state.performanceChartData}\n            width={this.state.performanceChartWidth}\n            height={this.state.performanceChartHeight}\n          />\n        ) : loader\n      break;\n      case 'allocationChart':\n        output = this.state.allocationChartWidth && this.state.allocationChartHeight ? (\n          <AllocationChart\n            {...this.props}\n            loaderProps={{\n              size:'20px'\n            }}\n            loaderText={''}\n            selectedToken={this.props.token}\n            width={this.state.allocationChartWidth}\n            height={this.state.allocationChartHeight}\n            inline={typeof this.props.inline !== 'undefined' ? this.props.inline : true}\n            showLoader={typeof this.props.showLoader !== 'undefined' ? this.props.showLoader : false}\n          />\n        ) : loader\n      break;\n      case 'tooltip':\n        output = (\n          <Tooltip\n            {...fieldProps}\n          >\n            <Icon\n              ml={2}\n              name={\"Info\"}\n              size={'1em'}\n              color={'cellTitle'}\n              {...fieldProps.iconProps}\n            />\n          </Tooltip>\n        );\n      break;\n      case 'aprChart':\n        output = this.state.aprChartData ? (\n          <GenericChart\n            {...this.state.aprChartProps}\n            type={this.state.aprChartType}\n            data={this.state.aprChartData}\n            width={this.state.aprChartWidth}\n            height={this.state.aprChartHeight}\n          />\n        ) : loader\n      break;\n      case 'custom':\n        let CustomComponent = null;\n        let customValue = this.state[fieldInfo.name];\n        switch (fieldInfo.type){\n          case 'number':\n            customValue = this.functionsUtil.BNify(customValue).toString();\n            CustomComponent = SmartNumber;\n            fieldProps.number = customValue;\n          break;\n          case 'link':\n            CustomComponent = Link;\n          break;\n          case 'icon':\n            CustomComponent = Icon;\n            fieldProps.name = customValue;\n          break;\n          default:\n            CustomComponent = Text;\n          break;\n        }\n\n        // Custom Field Props\n        const customFieldName = Object.values(fieldInfo.path).pop();\n        if (this.props.tokenConfig[`${customFieldName}Props`]){\n          const customFieldProps = this.props.tokenConfig[`${customFieldName}Props`];\n          // Replace props\n          if (customFieldProps && Object.keys(customFieldProps).length){\n            Object.keys(customFieldProps).forEach(p => {\n              fieldProps[p] = customFieldProps[p];\n            });\n          }\n        }\n\n        output = customValue ? (\n          <CustomComponent {...fieldProps}>{customValue}</CustomComponent>\n        ) : loader\n      break;\n      default:\n        let formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>{formattedValue}</Text>\n        ) : loader\n      break;\n    }\n    return output;\n  }\n}\n\nexport default AssetField;\n"],"sourceRoot":""}