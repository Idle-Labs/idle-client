{"version":3,"sources":["PageNotFound/PageNotFound.module.scss","utilities/components/Header.module.scss","TableCellHeader/TableCellHeader.module.scss","TransactionListFilters/TransactionListFilters.module.scss","utilities/components/ModalCard.module.scss","NewsletterForm/NewsletterForm.module.scss","TwitterShareButton/TwitterShareButton.module.scss","MenuAccount/MenuAccount.module.scss","CryptoInput/CryptoInput.module.scss","Web3ConnectionButtons/Web3ConnectionButtons.module.scss","Governance/ProposalListFilters/ProposalListFilters.module.scss","Tos/Tos.module.scss","Governance/NewProposal/NewProposal.module.scss","DashboardCard/DashboardCard.module.scss","colors.js","theme.js","ExtLink/ExtLink.js","utilities/IdleGovToken.js","SmartNumber/SmartNumber.js","FlexLoader/FlexLoader.js","GenericChart/GenericChart.js","VariationNumber/VariationNumber.js","AllocationChart/AllocationChart.js","AssetField/AssetField.js","DashboardCard/DashboardCard.js","GenericSelector/GenericSelector.js","AssetSelector/AssetSelector.js","TokenSwap/TokenSwap.js","LoadingSpinner/LoadingSpinner.js","ButtonLoader/ButtonLoader.js","NexusMutual/NexusMutual.js","Title/Title.js","TableRow/TableRow.js","TableCellHeader/TableCellHeader.js","TableHeader/TableHeader.js","AssetsList/AssetsList.js","PortfolioDonut/PortfolioDonut.js","ChartCustomTooltip/ChartCustomTooltip.js","ChartCustomTooltipRow/ChartCustomTooltipRow.js","PortfolioEquity/PortfolioEquity.js","utilities/components/ShortHash.js","TransactionField/TransactionField.js","TransactionListFilters/TransactionListFilters.js","TransactionsList/TransactionsList.js","EarningsEstimation/EarningsEstimation.js","StrategyPage/StrategyPage.js","utilities/components/ModalCard.js","ImageButton/ImageButton.js","utilities/components/BuyModal.js","RoundButton/RoundButton.js","TxProgressBar/TxProgressBar.js","FastBalanceSelector/FastBalanceSelector.js","Migrate/Migrate.js","TokenMigration/TokenMigration.js","BatchMigration/BatchMigration.js","configs/globalConfigs.js","utilities/FunctionsUtil.js","Footer/Footer.js","Tos/Tos.js","App/connectors/TorusConnector.js","App/connectors/AuthereumConnector.js","App/connectors/WalletLinkConnector.js","App/connectors/WalletConnectConnector.js","App/connectors.js","Faquestion/Faquestion.js","Faq/Faq.js","FlexCards/FlexCards.js","AuditCard/AuditCard.js","HowItWorks/HowItWorks.js","StrategyBox/StrategyBox.js","NewsletterForm/NewsletterForm.js","RoundIconButton/RoundIconButton.js","FloatingToastMessage/FloatingToastMessage.js","AssetsUnderManagement/AssetsUnderManagement.js","Landing/Landing.js","DashboardMenu/DashboardMenu.js","Stats/StatsChart.js","Rebalance/Rebalance.js","StatsCard/StatsCard.js","Breadcrumb/Breadcrumb.js","utilities/components/DateRangeModal.js","ExecuteTransaction/ExecuteTransaction.js","Stats/Stats.js","Utils/Utils.js","FundsOverview/FundsOverview.js","ConnectBox/ConnectBox.js","CurveRedeem/CurveRedeem.js","TwitterShareButton/TwitterShareButton.js","utilities/components/ShareModal.js","DepositRedeem/DepositRedeem.js","CardIconButton/CardIconButton.js","EstimatedEarnings/EstimatedEarnings.js","AssetPage/AssetPage.js","CurveDeposit/CurveDeposit.js","PortfolioEquityCurve/PortfolioEquityCurve.js","FundsOverviewCurve/FundsOverviewCurve.js","CurveStrategy/CurveStrategy.js","utilities/components/WelcomeModal.js","utilities/components/TooltipModal.js","utilities/components/MigrateModal.js","utilities/components/UpgradeModal.js","utilities/components/AccountModal.js","MenuAccount/MenuAccount.js","utilities/components/GovModal.js","utilities/GovernanceUtil.js","DelegateVesting/DelegateVesting.js","DashboardHeader/DashboardHeader.js","Dashboard/Dashboard.js","utilities/components/WrongNetworkBanner.js","utilities/NetworkUtil.js","utilities/components/NoWeb3BrowserModal.js","utilities/components/NoWalletModal.js","utilities/GeneralUtil.js","utilities/components/WrongNetworkModal.js","utilities/components/TransactionFeeModal.js","Web3ConnectionButtons/Web3ConnectionButtons.js","utilities/components/ConnectionModal.js","utilities/components/ConnectionPendingModal.js","utilities/components/UserRejectedConnectionModal.js","utilities/components/LowFundsModal.js","utilities/ConnectionModalsUtil.js","utilities/components/ConnectionErrorModal.js","utilities/components/TransactionErrorModal.js","utilities/RimbleWeb3.js","Governance/ProposalField/ProposalField.js","Governance/ProposalListFilters/ProposalListFilters.js","Governance/ProposalsList/ProposalsList.js","Governance/DelegateField/DelegateField.js","Governance/DelegatesList/DelegatesList.js","Governance/Overview.js","Governance/DelegateVote/DelegateVote.js","Governance/Delegate.js","Governance/NewProposal/NewProposal.js","Governance/CastVote/CastVote.js","Governance/ProposalDetails/ProposalDetails.js","Governance/Proposals.js","Governance/DelegateDetails/DelegateDetails.js","Governance/Leaderboard.js","Governance/Governance.js","utilities/components/Header.js","ScrollToTop/ScrollToTop.js","PageNotFound/PageNotFound.js","utilities/components/NetworkOverview.js","Web3Debugger/Web3Debugger.js","abis/tokens/DAI.js","abis/compound/cDAI.js","configs/availableTokens.js","utilities/TransactionToastMessages.js","utilities/TransactionToastUtil.js","App/App.js","serviceWorker.js","index.js","Footer/Footer.module.scss","LoadingSpinner/LoadingSpinner.module.scss","HowItWorks/HowItWorks.module.scss","GenericSelector/GenericSelector.module.scss","Landing/Landing.module.scss"],"names":["module","exports","headerContainer","headerBgFiller","bgContainer","list","textContainer","gradientButton","empty","tooltip","radioBtn","bg","twitterIcon","balanceButton","newLink","newPill","mainInput","button","newPillContainerAnim","input","defaultOpacity","hidden","interactive","active","rainbow","disabled","baseColors","black","white","blue","darkBlue","green","yellow","red","blurple","consensysblue","colors","base","text","readableColor","light","tint","dark","shade","theme","breakpoints","fontSizes","fontWeights","letterSpacings","lineHeights","solid","title","copy","fonts","serif","sansSerif","counter","space","radii","width","minWidths","maxWidths","heights","minHeights","maxHeights","borders","borderWidths","shadows","opacity","primary","gradient-bg","primary-light","primary-dark","bgBlue","dark-blue","skyBlue","lightBlue","copyColor","subColor","near-black","dark-gray","mid-gray","gray","grey","silver","light-silver","moon-gray","light-gray","near-white","transparent","lineChartStroke","dashboardBg","statValue","boxBorder","cellTitle","cellText","divider","redeem","deposit","migrate","legend","cardBg","transactions","action","send","swap","swapout","boost","receive","default","withdraw","actionBg","status","completed","pending","failed","blacks","whites","zIndices","messageStyle","color","backgroundColor","borderColor","success","warning","danger","info","buttons","--main-color","--contrast-color","normal","buttonSizes","small","fontSize","height","minWidth","padding","medium","large","borderRadius","ExtLink","react_default","a","createElement","index_es","Object","assign","target","rel","this","props","children","Component","IdleGovToken","_this","classCallCheck","tokenName","tokenConfig","functionsUtil","setProps","FunctionsUtil","getGlobalConfig","getBalance","asyncToGenerator","regenerator_default","mark","_callee","balance","wrap","_context","prev","next","getTokenBalance","account","sent","BNify","isNaN","abrupt","stop","claimRewards","_ref2","_callee2","callback","callbackReceipt","_context2","contractMethodSendWrapper","_x","_x2","apply","arguments","getPriorVotes","_callee3","priorVotes","_args3","_context3","length","undefined","genericContractCall","refreshIdleSpeed","_callee4","_context4","getUnclaimedTokens","_callee5","rewards","_context5","fixTokenDecimals","decimals","getAPR","_ref6","_callee6","token","conversionRate","IDLETokenConfig","cachedDataKey","APR","_ref7","_ref8","idleDistribution","tokenAllocation","DAITokenConfig","tokenPool","idleDistributedPerYearUSD","_args6","_context6","enabled","concat","idle","Promise","all","getDistribution","getTokenAllocation","slicedToArray","getUniswapConversionRate","t0","lte","convertTokenBalance","totalAllocationWithUnlent","times","div","setCachedData","_x3","_x4","getSpeed","_ref9","_callee7","idleTokenAddress","cachedData","idleSpeeds","_context7","getCachedDataWithLocalStorage","setCachedDataWithLocalStorage","_x5","_ref10","_callee8","blocksPerYear","distribution","_context8","address","_x6","getUserDistribution","_callee10","availableTokens","fixByFrequency","totalSpeed","_args10","_context10","selectedStrategy","availableStrategies","asyncForEach","keys","_ref12","_callee9","_ref13","_ref14","idleSpeed","userPoolShare","tokenSpeed","_context9","getUserPoolShare","plus","_x7","fixDistributionSpeed","distributionFrequency","getAvgApr","_callee12","output","totalAllocation","_args12","_context12","_ref16","_callee11","_ref17","_ref18","idleApr","_context11","_x8","SmartNumber","loadUtils","_this2","formattedNumber","number","type","formatMoney","precision","abbreviateNumber","maxPrecision","minPrecision","flexProps","alignItems","flexDirection","justifyContent","forEach","p","showUnit","unitPos","unit","unitProps","FlexLoader","loaderProps","textProps","GenericChart","state","componentUnmounted","window","addEventListener","handleWindowSizeChange","bind","removeEventListener","prevProps","isMobile","newState","objectSpread","parentId","chartContainer","document","getElementById","chartWidth","parseFloat","offsetWidth","parentIdHeight","chartContainerH","chartHeight","setState","ChartType","parseInt","chartProps","showLoader","data","src_FlexLoader_FlexLoader","minHeight","size","ml","loaderText","VariationNumber","IconDirection","direction","name","iconSize","iconPos","AllocationChart","chartData","selectedSlice","protocolsAllocations","protocolsAllocationsPerc","loadData","prevState","selectedToken","setStateSafe","padAngle","animate","borderWidth","cornerRadius","motionDamping","innerRadius","motionStiffness","d","onMouseEnter","e","_this3","onMouseLeave","sliceLabel","value","tooltipFormat","v","radialLabel","container","inline","display","labels","fontWeight","fontFamily","legends","slicesLabelsSkipAngle","radialLabelsSkipAngle","enableRadialLabels","radialLabelsTextXOffset","slicesLabelsTextColor","radialLabelsTextColor","radialLabelsLinkStrokeWidth","radialLabelsLinkDiagonalLength","radialLabelsLinkHorizontalLength","enableSlicesLabels","radialLabelsLinkColor","from","modifiers","margin","top","right","bottom","left","protocols","protocolInfo","i","protocolName","protocolAddr","toLowerCase","protocolAllocationPercParsed","toFixed","push","id","globalConfigs","stats","hsl","join","label","capitalize","protocolIcon","icon","position","zIndex","textAlign","mb","src","src_SmartNumber_SmartNumber","src_GenericChart_GenericChart","Pie","AssetField","ready","loadField","fieldName","isRisk","fieldInfo","fieldProps","addGovTokens","govTokens","getGovTokensDistributionSpeed","tokenPrice","oldContractBalanceFormatted","_ref3","redeemableBalanceCurveEnd","redeemableBalanceCurveStart","_ref4","redeemableBalanceEnd","redeemableBalanceStart","_ref5","earningsCounter","feePercentage","feesStart","feesEnd","curveApy","earningsCurveStart","amountLentCurve","earningsCurveEnd","tokenAPY2","earningsStart","amountLent2","earningsEnd","tokenScore","tokenAPR","oldTokenConfig","tokenAPY","govTokensAprs","allocationChartWidth","allocationChartHeight","resizeAllocationChart","aprChartEndTimestamp","aprChartStartTimestamp","aprChartData","startTimestamp","y","mDate","x","frequencySeconds","newPoint","aprChartWidth","aprChartHeight","resizeAprChart","aprChartType","aprChartProps","firstTokenPrice","firstIdleBlock","performanceChartWidth","performanceChartHeight","resizePerformanceChart","apr_end_date","apr_start_date","apr_start_timestamp","apiResultsPerformanceChart","idleTokenPerformance","performanceChartData","performanceChartType","performanceChartProps","_args","loadAssetField","tokenBalance","toString","getTokenGovTokens","showPrice","fee","checkMigration","amountToMigrate","amountLent","idleTokenBalance","earnings","getTokenFees","getCurveAPY","gt","redeemableBalance","getTokenScore","score","poolSize","earningsPercCurveDirection","earningsPercCurve","earningsPercDirection","earningsPerc","showAPR","migration","oldContract","values","oldProtocols","oldProtocol","foundProtocol","find","protocolPos","indexOf","oldAPY","tokenAPYNoGov","curveAvgSlippage","showTooltip","getGovTokensAprs","t1","allocationChartRowElement","rowId","$allocationChartRowElement","jQuery","innerWidth","css","innerHeight","Math","min","assertThisInitialized","max","strToMoment","Date","format","subtract","_d","getTime","getCachedData","add","random","getFrequencySeconds","getTokenApiData","timestamp","idleRate","aprChartRowElement","$aprChartRowElement","Line","pointSize","lineWidth","useMesh","axisLeft","curve","axisBottom","enableArea","areaOpacity","enableGridX","enableGridY","pointBorderWidth","enableSlices","isInteractive","defs","linearGradientDef","offset","fill","match","PerformanceChartRowElement","$PerformanceChartRowElement","clone","map","idlePrice","minus","blocknumber","pointLabelYOffset","defineProperty","tokenChanged","accountChanged","fieldChanged","contractInitialized","contractsInitialized","transactionsChanged","filter","tx","loader","funcProps","icon1","placement","message","tooltipProps","icon2","build_default","delay","decimal","separator","useEasing","duration","end","start","formattingFn","n","_ref11","countUpRef","style","ref","_ref15","govTokenConfig","govTokenIndex","key","boxShadow","showDirection","src_VariationNumber_VariationNumber","earningsCurve","governanceTokenName","idleTokenConfig","userDistributionSpeed","distributionSpeed","iconProps","govToken","tooltipMode","buttonLabel","onClick","handleClick","src_AllocationChart_AllocationChart","formattedValue","_isBigNumber","DashboardCard","isDisabled","isActive","isVisible","isRainbow","cardProps","background","className","styles","mt","titleParentProps","h4","lineHeight","titleProps","description","GenericSelector","loadComponents","selectedTokenChanged","optionsChanged","JSON","stringify","options","defaultValueChanged","defaultValue","componentsChanged","CustomOptionValue","CustomValueContainer","ControlComponent","innerProps","cursor","menuIsOpen","src_DashboardCard_DashboardCard","CustomIndicatorSeparator","CustomMenu","selectProps","CustomInputContainer","isSearchable","searchInput","searchInputHidden","CustomOption","selectedValue","o","px","py","genericSelector","isFocused","react_select_browser_esm","onChange","components","Menu","Option","Control","Input","SingleValue","IndicatorSeparator","AssetSelector","toUpperCase","src_AssetField_AssetField","mr","showCustomField","showBalance","flex","src_GenericSelector_GenericSelector","changeToken","TokenSwap","selectedFromToken","selectedDestToken","availableDestinationTokens","selectFromToken","baseToken","selectDestToken","getGlobalConfigs","paymentProvider","providerInfo","initProps","buttonId","initParams","getInitParams","render","sendGoogleAnalyticsEvent","eventCategory","eventAction","eventLabel","remoteResources","url","j","split","pop","scriptID","script","remoteResourceParams","precall","readyState","onreadystatechange","onload","async","parentElement","appendChild","head","stylesheetId","href","loadTokens","toolProps","getContractByName","abi","initContract","fromTokenChanged","destTokenChanged","loadKyberWidget","_this4","src_AssetSelector_AssetSelector","my","mx","mainColor","LoadingSpinner","ButtonLoader","buttonProps","isLoading","src_LoadingSpinner_LoadingSpinner","buttonText","NexusMutual","step","steps","1","2","3","loading","amountValue","periodValue","quoteResponse","changeAmount","changePeriod","makeRequest","stepIndex","flexBasis","textDecoration","hoverColor","activeColor","changeSelectedToken","required","border","placeholder","src_ButtonLoader_ButtonLoader","getQuote","Title","HeadingComponent","component","Heading","h1","TableRow","FieldComponent","fieldComponent","cardId","rowProps","cols","colInfo","colIndex","visible","mobile","parentProps","fields","fieldIndex","overflow","colProps","TableCellHeader","ColTitle","whiteSpace","desc","openTooltipModal","TableHeader","pb","src_TableCellHeader_TableCellHeader","AssetsList","enabledTokens","src_TableHeader_TableHeader","src_TableRow_TableRow","PortfolioDonut","totalFunds","parentWidth","selectedTokenConfig","loadPortfolio","portfolio","_ref","getIdleTokenPrice","getGovTokensUserBalances","govTokensUserBalances","govTokenBalance","tokenPercentage","tokenColorHsl","substr","round","radialLabelsLinkOffset","itemWidth","itemHeight","translateY","symbolSize","anchor","itemTextColor","symbolShape","effects","on","strategyIcon","convertToken","Fragment","ChartCustomTooltip","point","itemPos","xFormatted","ChartCustomTooltipRow","pr","textTransform","dangerouslySetInnerHTML","__html","PortfolioEquity","startDate","chartwidth","loadChartData","quickDateSelectionChanged","quickDateSelection","componentDidMount","getEtherscanTxs","etherscanTxs","tokensBalance","firstTxTimestamp","filteredTxs","index","hash","timeStamp","tokenAmount","lt","idleTokens","currentDate","days","prevBalances","prevTimestamp","minChartValue","maxChartValue","aggregatedBalance","aggregatedBalancesKeys","tokensBalancesPerDate","currTimestamp","tokensData","foundBalances","tokensBalances","lastTokenData","lastTokenDataUnfiltered","filteredTokenData","tokenDecimals","filteredBalances","lastFilteredTx","newBalance","lastTx","lastTxBalance","tokenUsdConversionRate","conversionRateField","chartToken","momentDate","isSameOrAfter","isAfter","formattedDate","_loop","aggregatedBalances","date","balances","itemIndex","item","floor","yFormatDecimals","gridYStep","gridYValues","gridYValue","daysCount","daysFrequency","ceil","xScale","yScale","stacked","xFormat","yFormat","tickSize","tickPadding","orient","legendOffset","legendPosition","tickValues","tickRotation","pointLabel","areaBaselineValue","pointColor","axis","ticks","grid","line","stroke","strokeDasharray","sliceTooltip","slideData","slice","points","src_ChartCustomTooltip_ChartCustomTooltip","src_ChartCustomTooltipRow_ChartCustomTooltipRow","serieId","yFormatted","formattedBalance","ShortHash","shortenHash","shortHash","txStart","txEnd","React","TransactionField","hashChanged","bgColor","transaction","maxWidth","textOverflow","align","components_ShortHash","amount","tokenSymbol","TransactionListFilters","maxHeight","isOpened","activeFilters","assets","actions","setFilter","applyFilters","toggle","toggleOpened","resetFilter","resetFilters","transition","borderTop","filters","filterCategory","filterValues","filterValue","filterLabel","isChecked","checked","Text","filterName","TransactionsList","page","prevTxs","txsPerPage","totalTxs","totalPages","renderedTxs","processedTxs","lastBlockNumber","processTxs","availableActions","txsIndexes","includes","sort","b","getTxAction","parsedValue","preventDefault","loadTxs","count","firstBlockNumber","enabledActions","hashKey","blockNumber","hasActiveFilters","m","pt","src_TransactionListFilters_TransactionListFilters","txHash","txHashKey","open","prevPage","nextPage","h3","EarningsEstimation","tokensEarnings","estimationStepsPerc","estimationStepsOptions","estimationStepsDefaultOption","estimationSteps","0","Month","perc","2 months","3 months","optionName","25","8 months","Year","90","2 Years","5 Years","loadEarnings","getAmountLent","amountLents","aggregatedEarnings","earningsYear","avgBuyPrice","idleTokenPrice","tokenAprs","earningsPercStep","possibleSteps","maxPossibleStep","getAvgBuyPrice","getTokenAprs","avgApr","avgApy","orderedTokensEarnings","estimationStep","option","setEstimationStepsPerc","tokenIndex","tokenEarnings","estimationStepPerc","finalEarnings","cursorPerc","tokenRGBColor","estimateIndex","estimationStepEarnings","estimationStepEarningsFormatted","borderRight","wordBreak","gte","pl","estimationLabel","StrategyPage","tokensToMigrate","aggregatedValues","depositedTokens","remainingTokens","portfolioLoaded","availableGovTokens","portfolioEquityStartDate","portfolioEquityQuickSelection","getAccountPortfolio","avgAPY","avgScore","totalEarnings","totalAmountLent","amountLentToken","tokenWeight","tokenEarningsPerc","totalBalance","getGovTokensUserTotalBalance","govTokensTotalBalance","govTokensUserBalance","govTokensTotalBalanceTooltip","getTokensToMigrate","apyLong","riskScore","yieldFarming","src_Title_Title","src_PortfolioDonut_PortfolioDonut","aligItems","setPortfolioEquityQuickSelection","src_PortfolioEquity_PortfolioEquity","borderBottom","src_AssetsList_AssetsList","src_EarningsEstimation_EarningsEstimation","src_TransactionsList_TransactionsList","textSize","ModalCard","closeFunc","objectWithoutProperties","icononly","bgLayer","backgroundSize","Header","iconHeight","subtitle","subtitleProps","subtitle2","Body","Footer","BackButton","Outline","ImageButton","image","imageSrc","imageProps","iconName","caption","contrastColor","buttonStyle","badge","captionPos","subcaption","BuyModal","selectedMethod","availableMethods","selectedCountry","selectedProvider","availableProviders","buyToken","renderPaymentMethod","provider","buyParams","onSuccess","onClose","currentState","toastProvider","addMessage","secondaryMessage","colorTheme","actionHref","actionText","variant","getAccountBalance","payments","providers","analytics","google","events","closeModal","goBack","resetModal","componentWillMount","showInline","getProviderInfo","getInfo","newProviderInfo","getDefaultPaymentProvider","paymentMethod","defaultProvider","getAvailablePaymentProviders","providerSupportMethod","supportedMethods","providerSupportToken","supportedTokens","defaultPaymentProvider","showDefaultOnly","selectProvider","ethAvailable","tokenAvailable","selectMethod","selectToken","loadRemoteResources","handleCountryChange","getAvailableCountries","availableCountries","supportedCountries","countryCode","countries","methods","method","loadAvailableMethods","toConsumableArray","showAllTokens","InnerComponent","flexWrap","src_ImageButton_ImageButton","methodInfo","imagePropsExtended","noOptionsMessage","inputValue","isOpen","components_ModalCard","RoundButton","TxProgressBar","error","ended","percentage","processing","txTimestamp","initialized","estimatedTime","remainingTime","initProgressBar","getTransaction","resolve","reject","customLog","web3","eth","err","getBlockTime","blockTime","axios","get","getPredictionTable","predictTable","getTxEstimatedTime","gasPrice","prediction","gasprice","pdValues","_estimateWait","gas","txMeanSecs","block_time","calculateRemainingTime","secondsPassed","timePassed","setTimeout","updateProgressBar","getTxInfo","txProgressBarKey","txProgressBarData","localStorage","getItem","parse","setLocalStorage","clearTimeout","gasoffered","minedProb","expectedWait","sum1","sum2","prob","exp","minutes","seconds","textColor","endMessage","waitText","span","renderRemainingTime","loadingMessage","sendingMessage","cancelTransaction","cancelTextColor","cancelTextHoverColor","FastBalanceSelector","onMouseDown","replaceArrayProps","Migrate","approve","oldTokenName","oldIdleTokens","skipMigration","buttonDisabled","migrationEnabled","fastBalanceSelector","oldContractBalance","biconomyLimitReached","metaTransactionsEnabled","oldContractTokenDecimals","migrationContractApproved","setAction","toggleSkipMigration","changeInputValue","checkButtonDisabled","setInputValue","selectedPercentage","setFastBalanceSelector","executeAction","oldContractName","idleTokenToRedeem","_clientProtocolAmountsRedeem","gasLimitRedeem","callbackRedeem","callbackReceiptRedeem","normalizeTokenAmount","txSucceeded","eventData","eventValue","getTransactionError","transactionHash","toggleMetaTransactionsEnabled","checkMigrationContractApproved","migrationContractInfo","migrationContractName","tokenApproved","migrationContract","checkTokenApproved","oldIdleTokensConverted","oldTokenPrice","getTokenPrice","oldContractInfo","oldContractABI","biconomyLimits","getTokenDecimals","getContractBalance","biconomy","checkBiconomyLimits","allowed","disapproveMigration","disableERC20","approveMigration","callbackApprove","callbackReceiptApprove","enableERC20","migrationMethod","params","callbackMigrate","callbackReceiptMigrate","useMetaTx","toMigrate","_skipRebalance","minAmountForRebalance","migrationParams","_migrationContract$me","functionSignature","migrationCallback","integerValue","skipMintForDeposit","encodeABI","sendBiconomyTxWithPersonalSign","biconomyChanged","actionChanged","fastBalanceSelectorChanged","batchMigrationInfo","batchMigrationEnabled","batchMigrationDepositEnabled","depositEnabled","SkipMigrationComponent","biconomyEnabled","isMigrationTool","migrateTextBefore","migrateText","showActions","src_TransactionField_TransactionField","route","src_TxProgressBar_TxProgressBar","migrationImage","migrationIcon","migrationText","migrationTextProps","functions","functionInfo","functionName","src_RoundButton_RoundButton","approveText","src_FastBalanceSelector_FastBalanceSelector","TokenMigration","migrationSucceeded","changeFromToken","convertTool","goToSection","tokenInfo","strategy","baseTokenConfig","destTokenConfig","migrateFunction","setStrategyToken","urlParams","param2","src_Migrate_Migrate","connectAndValidateAccount","BatchMigration","canClaim","batchTotals","canDeposit","batchDeposits","claim","hasDeposited","batchCompleted","claimSucceeded","strategyAvailableTokens","batchId","callbackClaim","callbackReceiptClaim","checkBatchs","currBatchIndex","batchIndex","batchTotal","batchDeposit","env","process","appName","version","baseURL","USA","GBR","AUS","BRA","CHN","CAN","EUR","HKG","IND","MEX","RUS","ZAF","KOR","logs","errorsEnabled","messagesEnabled","connectors","metamask","opera","dapper","coinbase","trustwallet","walletconnect","iconModal","walletlink","fortmatic","portis","authereum","torus","trezor","ledger","newsletterSubscription","endpoint","messages","scoreShort","apyShort","cheapRedeem","curveBonusSlippage","directMint","performanceFee","govTokenApr","govTokenRedeemableBalance","curveInstructions","addPostfixForTestnet","debugEnabled","modals","first_deposit_referral","first_deposit_share","welcome","frequency","dashboard","baseRoute","governance","test","startBlock","availableContracts","IDLE","PriceOracle","GovernorAlpha","EcosystemFund","IdleController","contracts","delegates","n_coins","imageInactive","rates","path","poolContract","CurvePool","depositContract","CurveDeposit","zapContract","CurveZap","CurveSwap","idleDAIYield","coinIndex","idleUSDCYield","idleUSDTYield","idleTUSDYield","showAUM","protocol","aprTooltipMode","COMP","Timelock","VesterFactory","EarlyRewards","Comptroller","UniswapRouter","UniswapV2Router02","tokens","DAI","zeroExInstant","orderSource","assetData","affiliateInfo","feeRecipient","USDC","strategies","best","comingSoon","titlePostfix","govTokensEnabled","chartColor","iconInactive","descLong","descShort","risk","new","TTL","scores","versions","v3","additionalProtocols","endTimestamp","showPerformanceTooltip","strategiesParams","enabledStrategies","v4","rgb","hex","chart","labelTextColorModifiers","performanceTooltip","USD","USDT","TUSD","SUSD","WBTC","YDAI+YUSDC+YUSDT+YTUSD","compound","compoundWithCOMP","rateField","fulcrum","dsr","dydx","iearn","aave","0xfc1e690f61efd961294b3e1ce3313fbd8aa4f85d","9599092","9599138","9599263","9599267","9599295","9599299","9599307","9599315","9599579","9599866","9600156","9600433","9600704","9600982","9601051","9601073","9601077","9601345","9601619","9601891","9602144","9602429","9602724","9602993","9603272","9603536","9603826","9603840","9604038","9604182","9604457","9604701","9604979","9605247","9605505","9605793","9606073","9606368","9606639","9606896","9607147","9607406","9607722","9608130","9608395","9608656","9608959","9609544","9609811","9610073","9610341","9610601","9610871","9611120","9611386","9611665","9611949","9612210","9612487","9612758","9613012","9613276","9613542","9613824","9614069","9614327","9614596","9614864","9615111","9615394","9615679","9615958","9616245","9616531","9616803","9617053","9617326","0x9ba00d6856a4edf4665bca2c2309936572473b7e","9598633","9598646","9598684","9598823","9598869","9598915","contract","skipRebalance","skipMint","minAmountForMint","skipMintCheckboxEnabled","proxyContract","IdleProxyMinter","function","minAmountForRebalanceMetaTx","redeemGovTokens","rebalance","IdleRebalancerV3","network","availableNetworks","4","42","isForked","requiredNetwork","requiredConfirmations","accountBalanceMinimum","infura","etherscan","endpoints","enableLogin","supportedNetworks","disabledWallets","limits","debug","apiKey","REACT_APP_BICONOMY_KEY","dappId","REACT_APP_BICONOMY_APPID","apiId","terminal","REACT_APP_TERMINAL_KEY","projectId","REACT_APP_TERMINAL_PROJECT_ID","source","web3Version","Web3Versions","one","simpleID","getNetwork","networkId","networkName","appOrigin","location","origin","appId","renderNotifications","tools","batchMigration","claimEnabled","subComponent","IdleTokenV3","IdleBatchConverter","idleSUSDYield","idleWBTCYield","idleDAISafe","idleUSDCSafe","idleUSDTSafe","tokenMigration","IdleConverterPersonalSignV4","oldAddresses","idleDAIv2","IdleTokenV2","cDAI","iDAI","aDAI","yDAIv3","yDAIv2","idleUSDCv2","cUSDC","iUSDC","aUSDC","yUSDCv3","yUSDCv2","cUSDT","iUSDT","aUSDT","yUSDTv3","yUSDTv2","idleSUSDv2","aSUSD","ySUSDv3","idleTUSDv2","aTUSD","yTUSDv3","cWBTC","iWBTC","aWBTC","addFunds","directProps","insurance","ETH","ens","tokenSwap","USDS","WETH","BUSD","EURS","2KEY","ABT","ABYSS","AMPL","ANT","BAM","BAND","BAT","BLZ","BNT","BQX","BTU","CDT","CVC","DAT","DGX","EKG","ELF","ENJ","EQUAD","FXC","GDC","GEN","GHT","GNO","IOST","KEY","KNC","LEND","LINK","LOOM","LRC","MANA","MCO","MET","MFG","MKR","MLN","MTL","MYB","NEXXO","NPXS","OGN","OMG","OST","PAX","PBTC","PLR","PNK","POLY","POWR","PT","QKC","QNT","RAE","REN","REP","REQ","RLC","RSR","RSV","SAN","SNT","SNX","SPIKE","SPN","TKN","TKX","TRYB","UBT","UPP","ZRX","bank","card","wallet","wyre","envParams","accountId","prod","referrerAccountId","dest","destCurrency","redirectUrl","k","encodeURIComponent","iframeBox","innerHTML","body","wyreStyle","ramp","hostAppName","userAddress","hostApiKey","REACT_APP_RAMP_KEY","hostLogoUrl","swapAsset","RampInstantSDK","event","payload","purchase","pow","show","transak","https://global.transak.com/v1/widget.js","REACT_APP_TRANSAK_KEY_TEST","REACT_APP_TRANSAK_KEY_PROD","fiatCurrency","cryptoCurrencyCode","currencyCode","walletAddress","partnerCustomerId","disableWalletAddressForm","transakGlobal","transakStyle","moonpay","REACT_APP_MOONPAY_KEY_TEST","REACT_APP_MOONPAY_KEY_PROD","baseCurrencyCode","showWalletAddressForm","enabledPaymentMethods","navigator","userAgent","cookie","moonpayStyle","https://instant.0x.org/v3/instant.js","tokenParams","connectorName","RimbleWeb3_context","chainId","connector","ethereum","defaultSelectedAssetData","availableAssetDatas","shouldDisableAnalyticsTracking","defaultAssetBuyAmount","kyberSwap","web3Subscription","contractAddress","decodeLogsData","internalType","https://widget.kyber.network/v0.7.5/widget.css","https://widget.kyber.network/v0.7.5/widget.js","querySelectorAll","remove","scripts","lang","mode","paramForwarding","pinnedTokens","defaultPair","commissionId","click","airSwap","https://cdn.airswap.io/airswap-instant-widget.js","onComplete","AirSwapInstant","totle","https://widget.totle.com/latest/dist.js","sourceAssetAddress","sourceAmountDecimal","destinationAssetAddress","destinationAmountDecimal","partnerContractAddress","TotleWidget","nodeId","totleWidgetContainer","run","ethereumjsABI","require","idleGovToken","trimEth","toBN","utils","BN","toEth","wei","fromWei","toWei","BNify_obj","s","BigNumber","String","_len","Array","_key","moment","customLogError","_console","_len2","_key2","console","contractName","c","normalizeSimpleIDNotification","replace","str","arr1","arr2","stripHtml","html","tmp","textContent","innerText","scrollTo","to","scrollY","change","currentTime","easeInOutQuad","t","animateScroll","val","depositProxyContractInfo","migrationContractAddr","migrationContractOldAddrs","batchMigrationContractAddr","isMigrationTx","isSendTransferTx","isReceiveTransferTx","isDepositTx","isRedeemTx","isSwapTx","orderedTokensBalance","_args2","getCurveAvgSlippage","processedHashes","curveTokensBalance","curveTxs","avgSlippage","totalDeposited","getCurveAvailableTokens","getCurveTxs","curveTokens","curveTokenPrice","price","received","slippage","deposited","getCurveAvgBuyPrice","_args4","prevAvgBuyPrice","_args5","idleTokensBalance","getDepositTimestamp","deposits","depositTimestamp","getAmountDeposited","userAvgPrice","amountDeposited","_args8","getEtherscanBaseTxs","endBlockNumber","firstIdleBlockNumber","etherscanInfo","results","etherscanBaseTxs","etherscanBaseEndpoint","etherscanApiUrl","lastCachedTx","lastCachedBlockNumber","etherscanEndpointLastBlock","latestTxs","latestBlockNumbers","txs","_args9","REACT_APP_ETHERSCAN_KEY","getCachedRequest","result","makeCachedRequest","filterEtherscanTxs","saveEtherscanTxs","filterCurveTxs","txsToStore","cachedRequest","saveCachedRequest","allAvailableTokens","_args11","processStoredTxs","_callee13","curveTransfersTxs","curveTransfersTxsToDelete","curveZapContract","curvePoolContract","curveSwapContract","curveDepositContract","_args13","_context13","tokenMigrationToolParams","curveEnabled","curveTokenConfig","idleToken","internalTxs","r","isRightToken","iTx","isBatchMigrationTx","isDepositInternalTx","iTx2","isRedeemInternalTx","isConversionTx","isWithdrawTx","isSwapOutTx","curveTx","isCurveTx","isCurveDepositTx","isCurveRedeemTx","isCurveDepositIn","isCurveDepositOut","isCurveZapIn","isCurveZapOut","isCurveTransferOut","isCurveTransferIn","tokenDecimal","tokenValue","newValue","iTxs","withdrawnValue","processEtherscanTransactions","addStoredTransaction","txKey","tokenKey","storedTxs","getStoredTransactions","updateStoredTransactions","getStoredItem","_callee18","txReceipts","baseTokensConfigs","baseTokensAddresses","curveAvailableTokens","_args18","_context18","baseTokenAddress","_callee17","minedTxs","_context17","_ref19","_callee16","storedTx","tokensTransfered","_curveTokenPrice","_curveTokenPrice2","curveTxReceipt","filteredLogs","_curveTokenPrice3","_curveTxReceipt","idleTokenDecimals","_filteredLogs","_context16","getCurveTokenPrice","_ref20","_callee14","_context14","getTransactionReceipt","_x10","_x11","log","topics","baseTokensConfig","t2","_ref21","_callee15","_context15","_x12","_x13","_x9","_ref22","_callee24","txsToProcess","_args24","_context24","_ref23","_callee23","_context23","_ref24","_callee22","isStoredTx","allowedMethods","pendingStatus","txPending","isMetaTx","methodIsAllowed","realTx","txValue","redeemedValueFixed","executeMetaTransactionReceipt","executeMetaTransactionContractAddr","executeMetaTransactionInternalTransfers","IdleProxyMinterInfo","internalTransfer","metaTxValue","metaTxValueFixed","migrationTxReceipt","migrationTxInternalTransfers","migrationInternalTransfer","decodedLogs","migrationValue","migrationValueFixed","_context22","mintIdleToken","redeemIdleToken","migrateFromToIdle","mintIdleTokensProxy","migrateFromAaveToIdle","migrateFromIearnToIdle","executeMetaTransaction","migrateFromFulcrumToIdle","migrateFromCompoundToIdle","created","_ref25","_callee19","_context19","txReceipt","_x18","_x19","_ref26","_callee20","_context20","_x20","_x21","raw","_ref27","_callee21","_context21","_x22","_x23","decodeLog","_token","_x16","_x17","_x15","_x14","alias","cachedRequests","_ref28","_callee25","error_callback","config","_args25","_context25","catch","_x24","_ref29","_callee26","return_data","_args26","_context26","_x25","code","errorCode","getArrayPath","array","prop","shift","configs","checkUrlOrigin","_ref30","_callee28","googleEventsInfo","originOk","currentNetwork","_args28","_context28","ga","_ref31","_callee27","_context27","hitCallback","hitCallbackFail","_x27","_x28","_x26","createContract","_ref32","_callee29","_context29","Contract","_x29","_x30","_x31","getWalletProvider","simpleIDPassUserInfo","userInfo","email","initSimpleID","passUserInfo","getEtherscanTransactionUrl","tx_address","getEtherscanAddressUrl","decimalCount","thousands","abs","negativeSign","Number","_ref33","_callee30","forceStartTimestamp","order","limit","filteredCachedData","filteredData","apiInfo","_args30","_context30","_x32","_ref34","_callee31","_context31","_x33","aprs","allocations","reduce","aprWeighted","allocation","apr","quantity","hour","day","week","getProtocolInfoByAddress","addr","ROUND_FLOOR","normalizeTokenDecimals","normalizedTokenDecimals","exchangeRate","checkContractPaused","_callee32","contractPaused","_args32","_context32","parse_json","return_default","clearStoredData","excludeKeys","clear","storedKeysToRemove","storedKey","removeStoredItem","removeItem","setItem","checkRebalance","_ref36","_callee35","rebalancer","idleRebalancerInstance","allocationsPromises","availableTokensPromises","protocolIndex","nextAllocations","newTotalAllocation","newProtocolsAllocations","shouldRebalance","_context35","allocationPromise","_ref37","_callee33","_context33","lastAmounts","call","_x35","_x36","availableTokenPromise","_ref38","_callee34","_context34","_x37","_x38","accumulator","availableTokenInfo","nextAllocation","protocolAllocation","protocolAllocationPerc","newProtocolAllocation","_x34","_ref39","_callee36","_context36","_x39","_x40","_ref40","_callee37","signedParameters","callback_receipt","_contract$methods","_context37","getGasPrice","once","confirmationNumber","receipt","_x41","_x42","_x43","_x44","_x45","getSignatureParameters_v4","signature","isHexStrict","Error","hexToNumber","constructMetaTransactionMessage","nonce","soliditySHA3","toBuffer","_ref41","_callee38","biconomyInfo","res","_context38","headers","x-api-key","_x46","_ref42","_callee39","messageToSign","_this$getSignaturePar","_context39","getNonce","_address","personal","sign","_x47","_x48","_x49","_x50","sendBiconomyTx","_ref43","_callee40","EIP712Domain","MetaTransaction","domainData","dataToSign","_context40","getChainId","verifyingContract","types","domain","primaryType","currentProvider","jsonrpc","response","_x51","_x52","_x53","_x54","_x55","_ref44","_callee41","contractAddr","walletAddr","allowance","_context41","getAllowance","_x56","_x57","_x58","_ref45","_callee42","_context42","_x59","_x60","_x61","methodName","txData","toTwosComplement","_ref46","_callee43","field","addCurveApy","strategyInfo","govTokenAvailableTokens","newTokenConfig","_ref47","_ref48","curveAvgBuyPrice","curveTokenBalance","_ref49","_ref50","amountLentCurve1","redeemableBalanceCurve","_ref51","_ref52","earningPerYear","_ref53","_ref54","amountLent1","redeemableBalance1","_idleGovToken","blocksPerDay","blocksPerWeek","blocksPerMonth","_idleGovToken2","_idleGovToken3","tokenApys","curveAPY","_ref55","_ref56","daysFirstDeposit","depositTimestamps","_govTokenConfig","_ref57","_ref58","tokenAPY1","_earningPerYear","_govTokenConfig2","_ref59","_ref60","idleTokenPrice1","idleTokenBalance2","govTokensBalance","_tokenBalance","_ref61","_ref62","amountLentCurve2","redeemableBalanceCurve1","_ref63","_ref64","redeemableBalance2","_args43","_context43","getCurveTokenBalance","getCurveRedeemableIdleTokens","getGovTokenPool","getTokenPool","getCompUserDistribution","getIdleGovToken","t3","getCompDistribution","t4","getCompAvgApr","t5","t6","t7","getUserTokenFees","t8","t9","getGovTokenUserBalance","_x62","_x63","_x64","_x65","_ref65","_callee44","tokenData","beforePrice","afterPrice","tokenPriceBefore","tokenPriceAfter","timeBefore","timeAfter","timeDiff","priceDiff","priceAcceleration","timeDiffFromBeforePrice","_args44","_context44","_x66","clearCachedData","useLocalStorage","expirationDate","_ref66","_callee45","_ref67","_ref68","idleTokensTotalSupply","userShare","_context45","_x67","_x68","_ref69","_callee46","fixDecimals","_ref70","_ref71","_args46","_context46","_x69","_x70","copyToClipboard","copyText","select","setSelectionRange","execCommand","loadScript","attr","isValidJSON","checkAddress","_ref72","_callee47","_context47","getProtocolBalance","_x71","_x72","_ref73","_callee48","_context48","_x73","_x74","getAprs","_ref74","_callee49","_context49","_x75","genericIdleCall","_ref75","_callee50","callParams","_args50","_context50","_x76","estimateGas","_ref76","_callee51","_contract$methods2","_args51","_context51","_x77","_x78","getTxDecodedLogs","_ref77","_callee53","logAddr","decodeLogs","internalTransfers","_context53","_ref78","_callee52","_context52","_x83","_x84","_x79","_x80","_x81","_x82","getBlockNumber","_callee54","_context54","getContractPastEvents","_ref80","_callee55","_args55","_context55","getPastEvents","_x85","_x86","_ref81","_callee56","_contract$methods3","_args56","_context56","_x87","_x88","_ref82","_callee57","_args57","_context57","_x89","_x90","apr2apy","getUnlentBalance","_ref83","_callee58","unlentBalance","_context58","_x91","_ref84","_callee59","_args59","_context59","_x92","_ref85","_callee61","protocolsAprs","exchangeRates","protocolsBalances","govTokensBalances","_args61","_context61","totalAllocationConverted","totalAllocationWithUnlentConverted","_ref86","_callee60","_ref87","_ref88","protocolBalance","_context60","_x94","_x95","getGovTokensBalances","total","getTokenConversionRate","_x93","getUniswapConversionRate_path","_ref89","_callee62","unires","_context62","_x96","_ref90","_callee63","tokenConfigFrom","tokenConfigDest","_context63","_x97","_x98","getCurveDepositedTokens","_ref91","_callee64","idleTokensBalances","remainingCurveTokens","_args64","_context64","_x99","getCurveUnevenTokenAmounts","_ref92","_callee65","amounts","max_burn_amount","unevenAmounts","_context65","getCurveSwapContract","_x100","_x101","_callee66","curveRatesInfo","_context66","strategyTokens","getCurveAPYContract","_callee67","blocksForPrevTokenPrice","_ref95","_ref96","prevTokenPrice","blocksMultiplier","curveAPR","_context67","getCurveTokenSupply","_callee68","_context68","getCurvePoolContract","_callee69","_args69","_context69","_callee70","_args70","_context70","_ref100","_callee71","_ref101","_ref102","_context71","_x102","getCurveDepositContract","_callee72","depositContractInfo","_context72","getCurveZapContract","_callee73","zapContractInfo","_context73","_callee74","poolContractInfo","_context74","_callee75","_context75","getCurveIdleTokensAmounts","_callee77","max_slippage","curveTokenSupply","curveTokenShare","_args77","_context77","_ref108","_callee76","curveIdleTokens","_context76","_x103","getCurveTokensAmounts","_callee79","_args79","_context79","_ref110","_callee78","_ref111","_ref112","totalTokenSupply","_context78","_x104","getCurveAmounts","_ref113","_callee81","_args81","_context81","_ref114","_callee80","_context80","_x107","_x105","_x106","getCurveTokenAmount","_ref115","_callee82","_args82","_context82","_x108","getCurveSlippage","_ref116","_callee83","uneven_amounts","_ref117","_ref118","virtualPrice","Sv","_args83","_context83","_x109","_x110","getCompAPR","_ref119","_callee84","cTokenIdleSupply","compConversionRate","COMPTokenConfig","compAPR","compDistribution","compValue","_args84","_context84","_x111","_x112","getCompSpeed","_ref120","_callee85","cTokenAddress","compSpeed","_context85","_x113","_ref121","_callee86","annualize","cTokenInfo","compoundAllocationPerc","_ref122","_ref123","cTokenTotalSupply","compoundPoolShare","_args86","_context86","_x114","_callee88","_args88","_context88","_ref125","_callee87","_ref126","_ref127","_context87","_x115","_callee90","_args90","_context90","_ref129","_callee89","_ref130","_ref131","compApr","_context89","_x116","getTokensCsv","_callee93","csv","_context93","prototype","sum","pv","cv","avg","_ref133","_callee92","_context92","_ref134","_callee91","header","rows","aprAvg","scoreAvg","lastRow","_context91","protocolsData","p1","p2","rate","idleScore","row","pInfo","pData","pRate","pScore","defiScore","additionalRate","avgRate","_x118","_x117","_callee95","_args95","_context95","_ref136","_callee94","compTokenBalance","_context94","_x119","speed","getGovTokensUserDistributionSpeed","_ref137","_callee97","govTokensUserDistribution","_args97","_context97","_ref138","_callee96","_context96","_x121","_x120","_ref139","_callee99","govTokensDistribution","_args99","_context99","_ref140","_callee98","govSpeed","_context98","_x123","_x122","_ref141","_callee101","_args101","_context101","_ref142","_callee100","_ref143","_ref144","compoundInfo","_context100","_x126","_x124","_x125","_callee103","_args103","_context103","_ref146","_callee102","tokenConversionRate","fromTokenConfig","_context102","_x127","getGovTokenConfigByAddress","_callee104","checkShowBalance","govTokensEarnings","_args104","_context104","acc","govTokenAmount","_callee107","govTokenConfigForced","_args107","_context107","_ref149","_callee106","govTokensAmounts","_context106","_ref150","_callee105","govTokenAddress","_context105","_x129","_x130","_x128","_callee108","_args108","_context108","_callee109","_ref153","_ref154","gain","fees","_args109","_context109","_ref155","_callee110","_args110","_context110","_x131","getAggregatedStats","_callee114","avgAPR","totalAUM","_args114","_context114","_ref157","_callee113","_context113","_ref158","_callee112","oldTokenAllocation","oldTokenTotalAllocation","_context112","_ref159","_callee111","_ref160","_ref161","tokenBalanceConverted","_context111","_x134","_x133","_x132","getTokenApy","_ref162","_callee115","_context115","_x135","_callee118","_args118","_context118","_ref164","_callee117","_context117","_ref165","_callee116","_ref166","_context116","_x137","_x136","getProtocolsTokensBalances","_callee120","tokenBalances","minTokenBalance","protocolsTokens","_args120","_context120","_ref168","_callee119","tokenContract","_context119","_x138","_ref169","_callee121","_args121","_context121","_x139","_x140","_x141","_ref170","_callee122","_args122","_context122","_x142","_x143","_ref171","_callee123","_ref172","_ref173","_context123","protocolScore","getTokenScoreApi","_x144","_x145","_ref174","_callee124","_context124","_x146","_x147","_ref175","_callee126","Aprs","addresses","protocolsApys","idleGovTokenShowAPR","idleAPR","_args126","_context126","_ref176","_callee125","addrIndex","protocolApr","protocolApy","_context125","_x149","_x150","_x148","isNegative","suffixNum","decimalPart","mod","toPrecision","difference","maxLen","highlightedDecimals","numLen","intPart","decPart","repeat","highlightedDec","highlightedIntPart","currYear","getFullYear","governanceEnabled","columnWidth","footer","src_ExtLink_ExtLink","react_router_dom","link","Tos","h2","listStyle","src_Footer_Footer","TorusConnector","kwargs","Torus","api","rest","possibleConstructorReturn","getPrototypeOf","buttonPosition","init","login","getUserInfo","getPublicAddress","verifier","verifierId","logout","updateNetworkId","Connector","AuthereumConnector","Authereum","getProvider","enable","getAccounts","accounts","disable","constructor","WalletLinkConnector","WalletLink","infuraUrl","appLogoUrl","walletLink","darkMode","makeWeb3Provider","close","WalletConnectConnector","WalletConnectProvider","infuraId","defaultNetwork","InjectedConnector","Connectors","NetworkOnlyConnector","TrezorConnector","LedgerConnector","FortmaticConnector","PortisConnector","manifestEmail","REACT_APP_TREZOR_MANIFEST_EMAIL","manifestAppUrl","REACT_APP_TREZOR_MANIFEST_URL","fortmaticApiKey","REACT_APP_FORTMATIC_KEY_MAINNET","portisDAppId","REACT_APP_PORTIS_DAPP_ID","portisNetwork","REACT_APP_PORTIS_NETWORK","supportedNetworkURLs","REACT_APP_INFURA_KEY","Injected","Infura","providerURL","Trezor","TrezorApi","Ledger","WalletConnect","bridge","Fortmatic","FortmaticApi","logoutOnDeactivation","Portis","PortisApi","dAppId","AuthereumApi","TorusApi","buildEnv","enableLogging","host","showTorusButton","Faquestion","isShowingAnswer","question","answer","Faq","openedAnswer","selectedSection","generalQuestions","q","guidelinesQuestions","ratesQuestions","section","_this$state","generalDivs","src_Faquestion_Faquestion","toggleAnswer","guidelinesDivs","ratesDivs","isGeneralSelected","isGuidelinesSelected","isRatesSelected","setSection","FlexCards","itemPerc","itemsPerRow","cards","AuditCard","transform","HowItWorks","bulletCard","StrategyBox","getHighestAprToken","highestValue","tokensAprs","strategyUrl","fontStyle","NewsletterForm","validated","privacy","handleSubmit","handleValidation","messageColor","post","then","parentNode","classList","onSubmit","Field","outline","toggleCheckbox","RoundIconButton","FloatingToastMessage","ToastComponent","ToastMessage","Success","Processing","Failure","closeElem","handleClose","AssetsUnderManagement","totalAUMEndOfYear","loadTotalAUM","counterStyle","scrolling","Landing","carouselMax","carouselIndex","activeCarousel","runConfetti","activeBullet","testPerformed","carouselOffsetLeft","setActiveCarousel","carouselIntervalID","randomAllocationEnabled","handleCarousel","multiplier","$element","processScrolling","bulletCards","getElementsByClassName","offsetParent","offsetY","offsetTop","getAllocations","remainingAllocation","totProtocols","alloc","startLending","updateSelectedTab","setConfetti","connectAndGoToRoute","goToLocation","processCustomParam","mainViewport","paddingBottom","isCorrectNetwork","textAlignLast","overflowY","strategyIndex","src_StrategyBox_StrategyBox","src_RoundIconButton_RoundIconButton","src_HowItWorks_HowItWorks","src_AssetsUnderManagement_AssetsUnderManagement","src_AuditCard_AuditCard","gradientBackground","h5","sandbox","src_FlexCards_FlexCards","src_Faq_Faq","src_NewsletterForm_NewsletterForm","toastMessageProps","src_FloatingToastMessage_FloatingToastMessage","closeToastMessage","DashboardMenu","buyModalOpened","menu","visibleLinks","menuLink","showMobile","menuIndex","LinkComponent","isExternalLink","RouterLink","selected","StatsChart","chartType","parseAum","loadApiData","CustomTooltipRow","CustomTooltip","maxGridLines","apiResults","apiResults_unfiltered","totalItems","versionInfo","tempData","axisBottomIndex","idleChartData","divergingData","maxRange","_i","_i2","_i3","prevValue","_i4","prevApr","prevData","startBalance","currentBalance","_i5","_i6","chartMode","idleVersion","redeems","idleSupply","idleTokensPrev","eq","diff","Bar","indexBy","enableLabel","minValue","maxValue","axisRight","markers","lineStyle","strokeOpacity","textStyle","legendOrientation","legendOffsetX","labelTextColor","labelSkipWidth","labelSkipHeight","dataFrom","translateX","itemsSpacing","indexValue","depositFormatted","redeemFormatted","aum","z","foundItem","pos","showAdvanced","serieColor","protocolColor","protocolAllocationFormatted","protocolData","protocolPaused","borderCollapse","allocationPerc","protocolEarning","apy","earning","additionalProtocol","unshift","chartRow","baseProfit","firstProtocolData","firstProtocolBlock","protocolRate","idlePerformance","d1","rowData","lastRowData","lastTokenPrice","tokenExchangeRate","tokenPriceFixed","lastYDiff","showAdvancedChanged","apiResultsChanged","Rebalance","StatsCard","titleMinHeight","valueProps","labelTooltip","Breadcrumb","showPathMobile","pathLink","Link","borderLeft","DateRangeModal","quickSelection","ranges","endDate","componentDidUpdate","selection","handleSelect","startTimestampObj","endTimestampObj","handleQuickSelect","react_date_range_dist","minDate","maxDate","ExecuteTransaction","txStatus","ExecuteComponent","execute","componentProps","Stats","delta","rebalances","buttonGroups","statsVersions","minStartTime","govTokensPool","showRefreshIdleSpeed","dateRangeModalOpened","quickSelections","weeks","month","setDateRange","isSame","isBefore","maxEndDate","toggleAdvancedCharts","setDateRangeModal","filterTokenData","setIdleVersion","firstResult","lastResult","firstIdlePrice","lastIdlePrice","firstCompoundData","lastCompoundData","compoundWithCOMPInfo","compoundAvgApr","firstCompoundPrice","lastCompoundPrice","compoundApr","compoundData","compoundRate","prevRow","prevTotalAllocation","hasRebalanced","prevP","prevAllocation","loadParams","latestVersion","versionInfoExtra","param","currentNetworkAvailableTokens","customToken","getLatestAvailableVersion","getVersionInfo","newEndTimestampObj","newStartTimestampObj","initWeb3","loadCarousel","strategyChanged","dateChanged","versionChanged","idleTokenEnabled","versionsOptions","versionDefaultValue","src_Breadcrumb_Breadcrumb","src_StatsCard_StatsCard","Stats_StatsChart","src_Rebalance_Rebalance","components_DateRangeModal","statsTokens","statsProtocols","src_ExecuteTransaction_ExecuteTransaction","Button","Utils","SubComponent","selectedSubsection","submenu","tool","toolIndex","FundsOverview","govTokensTotalApr","govTokensTotalAprTooltip","idleTokenUserDistribution","govTokensDistributionTooltip","totBalance","totApr","ConnectBox","CurveRedeem","maxSlippage","showMaxSlippage","curveTokensAmounts","redeemUnevenAmounts","curveRedeemableIdleTokens","toggleUnevenAmounts","initToken","curveConfig","withdrawSlippage","_amount","min_amounts","coin_index","min_amount","_token_amount","calculateSlippage","isGreaterThan","getFastBalanceSelector","setMaxSlippage","normalizedAmount","curveIdleTokensAmounts","redeemUnevenAmountsChanged","inputChanged","maxSlippageChanged","showSlippage","curveTokenName","TwitterShareButton","share","parent","w","tweet","ShareModal","escape","customText","confettiEnabled","react_confetti_default","recycle","src_TwitterShareButton_TwitterShareButton","DepositRedeem","txError","canRedeem","activeModal","showBuyFlow","showRedeemFlow","canRedeemCurve","canDepositCurve","actionProxyContract","componentMounted","redeemCurveEnabled","depositCurveBalance","depositCurveEnabled","showAdvancedOptions","depositCurveSlippage","setShowRedeemFlow","setShowBuyFlow","toggleShowAdvancedOptions","toggleRedeemCurve","toggleDepositCurve","toggleSkipMint","toggleRedeemGovTokens","setActiveModal","approveContract","approveToken","loadTokenInfo","curveTokenEnabled","checkAction","loadAPY","contractSendResult","callbackDeposit","callbackReceiptDeposit","curvePoolContractInfo","tokensToDeposit","minMintAmount","depositParams","_tokensToDeposit","depositMetaTransactionsEnabled","_depositParams","mintProxyContractInfo","mintProxyContract","_mintProxyContract$me","_skipMint","maxUnlentPerc","depositPerc","_callbackRedeem","_callbackReceiptRedeem","redeemParams","lendingProcessing","lendAmount","genericError","loadProxyContracts","hasProxyContract","approved","tokenBalanceChanged","depositCurveChanged","calculateCurveSlippage","govTokensDisabled","skipMintForDepositEnabled","redeemGovTokenEnabled","metaTransactionsAvailable","depositCurve","showDepositOptions","canPerformAction","showDepositCurve","showRedeemCurve","showActionFlow","showCurveSlippage","showRebalanceOption","showAdvancedDepositOptions","tokenFeesPercentage","src_ConnectBox_ConnectBox","src_CurveRedeem_CurveRedeem","components_BuyModal","components_ShareModal","CardIconButton","EstimatedEarnings","tokenApy","maxInputValue","loadChart","amountMonth","amount3Months","amount6Months","amountYear","monthColor","month3","month3Color","month6","month6Color","year","yearColor","showAPYDisclaimer","verticalAlign","AssetPage","tokenFees","loadTokensInfo","userHasFunds","src_CardIconButton_CardIconButton","src_DepositRedeem_DepositRedeem","src_FundsOverview_FundsOverview","src_EstimatedEarnings_EstimatedEarnings","depositSlippage","approveCallback","normalizeIdleTokenBalance","idleTokenBalanceChanged","hasCurveTokens","getMigrationParams","PortfolioEquityCurve","aggregatedBalanceParsed","FundsOverviewCurve","src_PortfolioEquityCurve_PortfolioEquityCurve","redeemBalance","depositBalance","setSelectedToken","getSelectedToken","param1","updateAssetSelector","curveTokensToRedeem","src_CurveDeposit_CurveDeposit","src_FundsOverviewCurve_FundsOverviewCurve","WelcomeModal","subscribed","sendingForm","sendUserInfo","sendEmail","walletProvider","lastLogin","signedUp","header_styles","TooltipModal","content","MigrateModal","dontShowAgain","toggleDontShowAgain","tokenMigrationRoute","protocolsTokensBalances","UpgradeModal","convert","oldIdleTokensToMigrate","AccountModal","loadBalances","strategyToken","setConnector","context","acccount","renderBalances","MenuAccount","isModalOpen","toggleModal","modalName","loadIdleTokenBalance","unclaimed","connectorInfo","walletIcon","alt","setGovModal","components_AccountModal","GovModal","claimCallback","GovernanceUtil","getTotalSupply","totalSupply","getTokensBalance","getVestingContract","vestingContract","VesterABI","delegateVesting","delegate","getVestingAmount","vestingAmount","getCurrentDelegate","getCurrentVotes","votes","_args7","queueProposal","proposalId","executeProposal","proposeAndVoteFor","targets","signatures","calldatas","batcher","Batcher","propose","args","castVote","support","setDelegate","getDelegatesChanges","delegationsCalls","fromBlock","delegatesContractName","toBlock","all_delegations","delegations","getDelegatesVotesChanges","getDelegates","all_votes","delegateAccounts","_args16","getVotes","_e$returnValues","returnValues","rank","vote_weight","proposals","voter","splice","getProposalParams","govContractName","proposalThreshold","proposalMaxOperations","governanceContractName","_e$returnValues2","getProposals","voted_by","enumerateProposalState","proposalCount","proposalGets","proposalStateGets","_arr","proposalStates","proposalQueuedEvents","proposalCreatedEvents","proposalCanceledEvents","proposalExecutedEvents","_args20","reverse","createdEvent","canceledEvent","executedEvent","queuedEvent","createdBlockInfo","createdState","activeState","canceledBlockInfo","canceledState","queuedBlockInfo","succeededState","queuedState","executedBlockInfo","executedState","endBlockInfo","endState","_createdEvent$returnV","states","getBlock","end_time","start_time","trx_hash","endBlock","eta","executed","canceled","forVotes","proposer","againstVotes","DelegateVesting","newDelegate","delegatee","currentDelegate","delegateAddressValid","delegateDifferentWallet","vestingContractDelegated","governanceUtil","delegatesChanges","lastDelegateTx","delegator","toDelegate","revoke","changeDelegate","setDelegateDifferentWallet","DashboardHeader","govModalOpened","isDashboard","isGovernance","governanceRoute","dashboardRoute","src_MenuAccount_MenuAccount","src_DelegateVesting_DelegateVesting","components_GovModal","Dashboard","currentRoute","pageComponent","currentSection","showResetButton","timeoutId","modalTitle","modalContent","curveParams","CurveStrategy","u","section_is_strategy","param1_is_strategy","param1_is_token","param2_is_token","sectionRoute","subm","loadMenu","accountInizialized","initAccount","initializeContracts","checkModals","prevParams","checkTokensToMigrate","checkWelcomeModal","checkProtocolsTokensBalances","showUpgradeModal","welcomeIsOpen","welcomeModalProps","currTime","lastTime","migrateModalEnabled","showMigrateModal","newRoute","routeParts","PageComponent","src_DashboardMenu_DashboardMenu","overflowX","src_DashboardHeader_DashboardHeader","components_UpgradeModal","components_MigrateModal","components_TooltipModal","components_WelcomeModal","current","baseTokenName","WrongNetworkBanner","NetworkUtil","components_WrongNetworkBanner","NoWeb3BrowserModal","renderContent","RimbleUtil","isMobileDevice","bold","NoWalletModal","GeneralUtil","hasMetaMask","isMetaMask","isTrustWallet","isTrust","isCoinbaseWallet","hasDapper","DapperEthereum","isDapper","isOpera","isAndroid","isIos","MSStream","WrongNetworkModal","RimbleUtils","TransactionFeeModal","Web3ConnectionButtons","useWeb3Context","connectionCallback","unsetConnector","isMetamask","browserWalletDetected","allowedConnectors","registerPage","registerPageByDefault","basicConnectorsName","ConnectionModal","showTxFees","closeRemainingTime","newToEthereumChoice","showInstructions","toggleShowTxFees","setStoredSection","closeCountdown","setWalletChoice","choice","setCurrentSection","renderModalContent","TOSacceptance","showConnectionButtons","newToEthereum","marginBottom","renderFooter","components_TransactionFeeModal","ConnectionPendingModal","UserRejectedConnectionModal","sendMessageAgain","LowFundsModal","showSecondary","toggleQRVisible","alignContent","as","ConnectionModalUtil","components_NoWeb3BrowserModal","closeNoWeb3BrowserModal","noWeb3BrowserModalIsOpen","components_NoWalletModal","closeNoWalletModal","noWalletModalIsOpen","components_WrongNetworkModal","closeWrongNetworkModal","wrongNetworkModalIsOpen","components_ConnectionModal","validateAccount","closeConnectionModal","connectionModalIsOpen","accountValidated","components_ConnectionPendingModal","closeConnectionPendingModal","accountConnectionPending","components_UserRejectedConnectionModal","closeUserRejectedConnectionModal","userRejectedConnect","components_LowFundsModal","closeLowFundsModal","lowFundsModalIsOpen","ConnectionErrorModal","setFirstValidConnector","closeConnectionErrorModal","isLedger","connectionError","TransactionErrorModal","closeTransactionErrorModal","isLedgerError","transactionError","isSlowTxError","INFURA_KEY","RimbleTransactionContext","createContext","web3Infura","accountBalance","accountBalanceLow","accountBalanceToken","checkPreflight","checkNetwork","rejectValidation","accountValidationPending","rejectAccountConnect","enableUnderlyingWithdraw","userRejectedValidation","transactionConnectionModalIsOpen","openLowFundsModal","openWrongNetworkModal","openNoWeb3BrowserModal","openConnectionErrorModal","openTransactionErrorModal","openConnectionPendingModal","openUserRejectedConnectionModal","openUserRejectedValidationModal","closeUserRejectedValidationModal","meta","setConnectorName","biconomyLoginProcessing","RimbleTransaction","testTransaction","createTransaction","addTransaction","updateTransaction","errorMessage","isWalletConnectClosedModalError","availableStrategiesChanged","customAddress","metamaskProvider","connectorNameChanged","web3Host","web3Provider","forceCallback","terminalInfo","TerminalHttpProviderParams","terminalSourceType","terminalHttpProvider","web3Callback","originalWeb3","biconomyWeb3Provider","detectEthereumProvider","autoRefreshOnNetworkChange","Web3","HttpProvider","library","SourceType","customHttpProvider","TerminalHttpProvider","web3Injected","callbackAfterLogin","setCallbackAfterLogin","isLogin","userContract","Biconomy","onEvent","READY","ERROR","useInfuraProvider","simpleIDInfo","simpleIDParams","SimpleID","wallets","notifications","shownNotifications","isError","$crisp","notificationId","Sentry","increaseAmount","contractInfo","balanceOf","determineAccountLowBalance","openConnectionModal","getRequiredNetwork","getNetworkId","net","getId","getNetworkName","getNetworkType","contractMethod","gasLimit","manualConfirmationTimeoutId","confirmationCallback","manualConfirmation","receiptCallback","isDeniedTx","confirmationCount","call_callback","confidenceThreshold","recentEvent","timeout","now","lastUpdated","updatedTransaction","openNoWalletModal","CrispClient","accountBalanceDAI","subscribedTransactions","connectionErrorModalOpened","transactionErrorModalOpened","Provider","ConnectionModalsUtil","components_TransactionErrorModal","components_ConnectionErrorModal","utilities_NetworkUtil","Consumer","ProposalField","proposal","totalVotes","vote","ProposalListFilters","ProposalsList","rowsPerPage","totalRows","defeated","succeeded","queued","expired","processedRows","processList","pageChanged","proposalsChanged","filtersEnabled","hasRows","Governance_ProposalListFilters_ProposalListFilters","DelegateField","opts","bgcolor","spotcolor","seed","DelegatesList","maxRows","delegatesChanged","delegateId","Overview","dataLoaded","votesDelegated","Governance_ProposalsList_ProposalsList","Governance_DelegatesList_DelegatesList","DelegateVote","checkNewDelegate","loadUserData","isUndelegated","canClose","Delegate","Governance_DelegateVote_DelegateVote","NewProposal","actionValue","customABI","newAction","editAction","actionInputs","actionValid","contractOptions","proposalCreated","functionsOptions","selectedContract","selectedFunction","selectedSignature","availableFunctions","validateForm","checkInputs","loadFunctionsOptions","contractABI","getContractABI","f","constant","inputs","stateMutability","valid","fieldPattern","getPatternByFieldType","returnString","RegExp","inputIndex","inputInfo","inputValid","validateField","inputTypes","calldata","encodeParameters","_this5","handleInput","actionIndex","setEditAction","changeContract","pattern","changeFunction","payable","valueChange","fieldType","inputChange","addAction","deleteAction","setNewAction","CastVote","loaded","userVote","voteSucceed","showDelegateBox","setVote","Governance_ProposalField_ProposalField","toggleDelegateBox","ProposalDetails","showActionParams","lastState","hasVotes","forVotesPerc","againstVotesPerc","forVotesAddrs","againstVotesAddrs","canQueue","canExecute","Governance_CastVote_CastVote","decodedParams","attrs","decodeParameters","toggleShowParams","paramIndex","stateInfo","stateIndex","voteInfo","voteIndex","Proposals","addProposal","selectedProposal","item_id","foundProposal","Governance_ProposalDetails_ProposalDetails","Governance_NewProposal_NewProposal","DelegateDetails","loadProposals","Leaderboard","selectedDelegate","Governance_DelegateDetails_DelegateDetails","ScrollToTop","pathname","useLocation","useEffect","PageNotFound","Header_styles","NetworkOverview","getNetworkCircleColor","circleColor","networkCircle","DebuggerButtons","Web3Debugger","components_NetworkOverview","Web3Debugger_DebuggerButtons","node","outputs","anonymous","indexed","ERC20","defiPrime","IdleTokenV4","cToken","yToken","iToken","aToken","CHAI","TransactionToastMessages","started","confirmed","TransactionToastUtil","collectionHasNewObject","prevCollection","currentCollection","getNewObjectFromCollection","objectKey","getUpdatedObjectFromCollection","object","getTransactionFromCollection","identifier","collection","getUpdatedTransaction","currentTx","prevTx","processTransactionUpdates","showTransactionToast","toastMeta","getTransactionToastMeta","transactionToastMeta","transactionAction","charAt","newMessage","App","selectedTab","connecting","unsubscribeFromHistory","showToastMessage","customParam","setCustomAddress","cachedKeyFound","storedCachedData","widthChanged","heightChanged","tabIndex","loadAvailableTokens","warn","closeIframe","iFrames","getElementsByTagName","iframe","contentWindow","parents","self","hasMetamask","web3_react_dist_default","libraryName","web3Api","web3_react_dist","RimbleWeb3","needsPreflight","react_router","src_Dashboard_Dashboard","setToken","setStrategy","openBuyModal","handleMenuClick","selectTab","closeBuyModal","Governance","components_Header","src_Web3Debugger_Web3Debugger","exact","src_Landing_Landing","react_cookie_consent_build_default","expires","acceptOnScroll","cookieName","acceptOnScrollPercentage","marginTop","src_Tos_Tos","src_PageNotFound_PageNotFound","utilities_TransactionToastUtil","Boolean","hostname","dsn","beforeSend","hint","originalException","ReactDOM","src_App_App","serviceWorker","registration","unregister","loading-dots","loading-dots--dot","dot-keyframes","graySection","whiteSection","howItWork","skewBg","bgHeart","platformLogo","bulletCardFirst","bulletCardActive","bulletPoint","bulletRight","bulletTop","bulletLeft","bulletBottom","bulletBottomLeft","bulletBottomBottom","bulletMobile","carouselItem","pos1","carouselItemMobile","pos2","pos3","bentTube","bounceArrow","bounce","rebalanceCircle","spin","carouselDesc","carouselNav","socialIcon","bentTubeLeft","bentTubeRight","bentTubeActive","bg1"],"mappings":"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","file":"static/js/main.7bf320cf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"PageNotFound_headerContainer__Ly5Tz\",\"headerBgFiller\":\"PageNotFound_headerBgFiller__1NzlO\",\"bgContainer\":\"PageNotFound_bgContainer__1Racj\",\"list\":\"PageNotFound_list__Cnz-b\",\"textContainer\":\"PageNotFound_textContainer__g_kTm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gradientButton\":\"Header_gradientButton__2mrQl\",\"empty\":\"Header_empty__3fhiX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tooltip\":\"TableCellHeader_tooltip__3xM3k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radioBtn\":\"TransactionListFilters_radioBtn__1vgHa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bg\":\"ModalCard_bg__3ocwQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gradientButton\":\"NewsletterForm_gradientButton__PMcBV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"twitterIcon\":\"TwitterShareButton_twitterIcon__2QCmn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"balanceButton\":\"MenuAccount_balanceButton__3t7wZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newLink\":\"CryptoInput_newLink__35W_s\",\"newPill\":\"CryptoInput_newPill__2Q8cA\",\"mainInput\":\"CryptoInput_mainInput__1zffg\",\"button\":\"CryptoInput_button__1N9EQ\",\"gradientButton\":\"CryptoInput_gradientButton__2kh5r\",\"newPillContainerAnim\":\"CryptoInput_newPillContainerAnim__RvOCw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Web3ConnectionButtons_button__1Wov0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radioBtn\":\"ProposalListFilters_radioBtn__2_8YL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"Tos_headerContainer__23W_f\",\"headerBgFiller\":\"Tos_headerBgFiller__36Nfk\",\"bgContainer\":\"Tos_bgContainer__rX7uJ\",\"list\":\"Tos_list__3bMLG\",\"textContainer\":\"Tos_textContainer__3hUuq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"NewProposal_input__KvbCb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"defaultOpacity\":\"DashboardCard_defaultOpacity__1B1rs\",\"hidden\":\"DashboardCard_hidden__8pO5t\",\"interactive\":\"DashboardCard_interactive__2adxr\",\"active\":\"DashboardCard_active__2XLas\",\"rainbow\":\"DashboardCard_rainbow__3HCI7\",\"disabled\":\"DashboardCard_disabled__uqHO2\"};","import { tint, shade, readableColor } from 'polished';\n\n// rimble base colors\nconst baseColors = {\n  black: '#000e1a',\n  white: '#FFF',\n  blue: '#0036ff',\n  darkBlue: '#0028be',\n  green: '#28C081',\n  yellow: '#FD9D28',\n  red: '#DC2C10',\n  blurple: '#4E3FCE',\n  consensysblue: '#3259D6',\n};\n\n// rimble palette\nconst colors = {\n  blurple: {\n    base: baseColors.blurple,\n    text: readableColor(baseColors.blurple),\n    light: [null, tint(0.2, baseColors.blurple)],\n    dark: [null, shade(0.2, baseColors.blurple)],\n  },\n  blue: {\n    base: baseColors.blue,\n    text: readableColor(baseColors.blue),\n    light: [null, tint(0.9, baseColors.blue)],\n    dark: [null, shade(0.4, baseColors.blue)],\n  },\n  green: {\n    base: baseColors.green,\n    text: baseColors.white,\n    light: [null, tint(0.9, baseColors.green)],\n    dark: [null, shade(0.4, baseColors.green)],\n  },\n  yellow: {\n    base: baseColors.yellow,\n    text: readableColor(baseColors.yellow),\n    light: [null, tint(0.9, baseColors.yellow)],\n    dark: [null, shade(0.4, baseColors.yellow)],\n  },\n  red: {\n    base: baseColors.red,\n    text: readableColor(baseColors.red),\n    light: [null, tint(0.9, baseColors.red)],\n    dark: [null, shade(0.4, baseColors.red)],\n  },\n};\n\nconst blurple = colors.blurple;\nconst blue = colors.blue;\nconst green = colors.green;\nconst yellow = colors.yellow;\nconst red = colors.red;\n\nexport { blurple };\nexport { blue };\nexport { green };\nexport { yellow };\nexport { red };\nexport default baseColors;\n","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from 'polished';\n\n// theme.js\nexport default {\n  breakpoints: ['52em', '64em'],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5,\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: ['0', '4px', '8px', '16px', '2rem'],\n  width: [0, 16, 32, 64, 128, 256],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, '1px solid #e0e0e0'],\n  borderWidths: ['0', '1px', '2px', '4px'],\n  shadows: [\n    '0',\n    '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    '0 7px 14px rgba(50,50,93,.1)',\n    '1px 1px 0px rgba(0,0,0,0.2)',\n    '0px 0px 16px 2px rgba(0,54,255,0.3)'\n  ],\n  opacity: {\n    disabled: 0.4,\n  },\n  colors: {\n    primary: blue.base,\n    'gradient-bg': 'linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)',\n    'primary-light': blue.light[1],\n    'primary-dark': blue.dark[1],\n    bgBlue: '#0030e0',\n    blue: '#0036ff',\n    'dark-blue': '#00219a',\n    skyBlue: '#00abfe',\n    lightBlue: '#79f4e1',\n    copyColor: '#3F3D4B',\n    subColor: '#a7a7a7',\n    black: baseColors.black,\n    'near-black': '#111',\n    'dark-gray': '#4e4e4e',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#f4f4f4',\n    white: '#fff',\n    transparent: 'transparent',\n    /*\n    NEW COLORS\n    */\n    lineChartStroke:'#dbdbdb',\n    dashboardBg: '#f9fafd',\n    statValue: '#959595',\n    boxBorder: '#eeeeee',\n    cellTitle: '#a3a4a5',\n    cellText: '#a6a6a6',\n    divider: '#d8d8d8',\n    counter: '#5d5d5d',\n    redeem: '#00a9fe',\n    deposit: '#0239ff',\n    migrate: '#00a9fe',\n    legend: '#c9c9c9',\n    cardBg:'#fff',\n    transactions:{\n      action:{\n        send:'#10a0dd',\n        swap:'#3d53c0',\n        redeem:'#10a0dd',\n        swapout:'#10a0dd',\n        deposit:'#3d53c0',\n        boost:'#ffff00',\n        receive:'#3d53c0',\n        migrate:'#3d53c0',\n        default:'#4f4f4f',\n        withdraw:'#10a0dd',\n      },\n      actionBg:{\n        send:'#ceeff6',\n        swap:'#ced6ff',\n        redeem:'#ceeff6',\n        swapout:'#ceeff6',\n        deposit:'#ced6ff',\n        boost:'#ff7979',\n        default:'#dadada',\n        receive:'#ced6ff',\n        migrate:'#ced6ff',\n        withdraw:'#ceeff6',\n      },\n      status:{\n        completed:'#00b84a',\n        pending:'#a5a5a5',\n        failed:'#fa0000'\n      }\n    },\n    blacks: [\n      'rgba(0,0,0,.0125)',\n      'rgba(0,0,0,.025)',\n      'rgba(0,0,0,.05)',\n      'rgba(0,0,0,.1)',\n      'rgba(0,0,0,.2)',\n      'rgba(0,0,0,.3)',\n      'rgba(0,0,0,.4)',\n      'rgba(0,0,0,.5)',\n      'rgba(0,0,0,.6)',\n      'rgba(0,0,0,.7)',\n      'rgba(0,0,0,.8)',\n      'rgba(0,0,0,.9)',\n    ],\n    whites: [\n      'rgba(255,255,255,.0125)',\n      'rgba(255,255,255,.025)',\n      'rgba(255,255,255,.05)',\n      'rgba(255,255,255,.1)',\n      'rgba(255,255,255,.2)',\n      'rgba(255,255,255,.3)',\n      'rgba(255,255,255,.4)',\n      'rgba(255,255,255,.5)',\n      'rgba(255,255,255,.6)',\n      'rgba(255,255,255,.7)',\n      'rgba(255,255,255,.8)',\n      'rgba(255,255,255,.9)',\n    ],\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: shade(0.4, '#AAA'),\n      backgroundColor: tint(0.9, '#AAA'),\n      borderColor: '#AAA',\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base,\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base,\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base,\n    },\n    info: {\n      color: shade(0.4, blue.base),\n      backgroundColor: '#f3f6ff',\n      borderColor: '#b6c2ff',\n    },\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      '--main-color': blue.base,\n      '--contrast-color': blue.text,\n    },\n    normal: {\n      color: baseColors.black,\n      '--contrast-color': baseColors.black,\n    },\n    success: {\n      '--main-color': green.base,\n      '--contrast-color': green.text,\n    },\n    danger: {\n      '--main-color': red.base,\n      '--contrast-color': red.text,\n    },\n  },\n  buttonSizes: {\n    small: {\n      fontSize: '0.75rem',\n      height: '2rem',\n      minWidth: '2rem',\n      padding: '0 1rem',\n    },\n    medium: {\n      fontSize: '1rem',\n      height: '3rem',\n      minWidth: '3rem',\n    },\n    large: {\n      fontSize: '1.5rem',\n      height: '4rem',\n      minWidth: '4rem',\n      borderRadius: '2rem'\n    },\n  },\n};\n","import { Link } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass ExtLink extends Component {\n\n  render() {\n    return (\n      <Link\n        target={'_blank'}\n        rel={'nofollow noopener noreferrer'}\n        {...this.props}\n      >\n        {this.props.children}\n      </Link>\n    );\n  }\n}\n\nexport default ExtLink;\n","import FunctionsUtil from './FunctionsUtil';\n\nclass IdleGovToken{\n  // Attributes\n  props = {};\n  tokenName = null;\n  tokenConfig = null;\n  functionsUtil = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.tokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n    this.tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n  }\n\n  getBalance = async () => {\n    let balance = await this.functionsUtil.getTokenBalance(this.tokenName,this.props.account);\n    if (!balance || this.functionsUtil.BNify(balance).isNaN()){\n      balance = this.functionsUtil.BNify(0);\n    }\n    return balance;\n  }\n\n  claimRewards = async (callback,callbackReceipt) => {\n    return this.functionsUtil.contractMethodSendWrapper('EarlyRewards', 'claim', [], callback, callbackReceipt);\n  }\n\n  getPriorVotes = async (account=null) => {\n    account = account ? account : this.props.account;\n    let priorVotes = await this.functionsUtil.genericContractCall(this.tokenName,'getPriorVotes',[account]);\n    if (priorVotes){\n      return this.functionsUtil.BNify(priorVotes);\n    }\n    return null;\n  }\n\n  refreshIdleSpeed = async () => {\n    return this.functionsUtil.genericContractCall('IdleController','refreshIdleSpeeds');\n  }\n\n  getUnclaimedTokens = async () => {\n    let rewards =  await this.functionsUtil.genericContractCall('EarlyRewards','rewards',[this.props.account]);\n    if (rewards){\n      return this.functionsUtil.fixTokenDecimals(rewards,this.tokenConfig.decimals);\n    }\n    return this.functionsUtil.BNify(0);\n  }\n\n  getAPR = async (token,tokenConfig,conversionRate=null) => {\n    const IDLETokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n    if (!IDLETokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getIdleAPR_${tokenConfig.idle.token}_${conversionRate}`;\n    /*\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n    */\n\n    let APR = this.functionsUtil.BNify(0);\n\n    const [\n      idleDistribution,\n      tokenAllocation\n    ] = await Promise.all([\n      this.getDistribution(tokenConfig),\n      this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    if (idleDistribution && tokenAllocation){\n\n      const DAITokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get IDLE oconversion rate\n      if (!conversionRate){\n        try {\n          conversionRate = await this.functionsUtil.getUniswapConversionRate(DAITokenConfig,IDLETokenConfig);\n        } catch (error) {\n\n        }\n        if (!conversionRate || conversionRate.isNaN()){\n          conversionRate = this.functionsUtil.BNify(0);\n        }\n      }\n\n      if (!conversionRate || this.functionsUtil.BNify(conversionRate).lte(0)){\n        return this.functionsUtil.BNify(0);\n      }\n\n      const tokenPool = await this.functionsUtil.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig);\n\n      const idleDistributedPerYearUSD = this.functionsUtil.BNify(conversionRate).times(idleDistribution);\n      APR = idleDistributedPerYearUSD.div(tokenPool).times(100);\n\n      // console.log(token,idleDistributedPerYearUSD.toFixed(5),conversionRate.toFixed(5),APR.toFixed(5));\n\n      return this.functionsUtil.setCachedData(cachedDataKey,APR);\n    }\n\n    return APR;\n  }\n\n  // Get IDLE distribution speed\n  getSpeed = async (idleTokenAddress) => {\n\n    const cachedDataKey = `getIdleSpeed_${idleTokenAddress}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    let idleSpeeds = await this.functionsUtil.genericContractCall('IdleController','idleSpeeds',[idleTokenAddress]);\n    if (idleSpeeds && !this.functionsUtil.BNify(idleSpeeds).isNaN()){\n      idleSpeeds = this.functionsUtil.BNify(idleSpeeds);\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,idleSpeeds);\n    }\n    return null;\n  }\n\n  getDistribution = async (tokenConfig) => {\n\n    const cachedDataKey = `getIdleDistribution_${tokenConfig.idle.token}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    // Get IDLE distribution speed and Total Supply\n    const idleSpeeds = await this.getSpeed(tokenConfig.idle.address);\n\n    if (idleSpeeds){\n\n      // Get IDLE distribution for Idle in a Year\n      const blocksPerYear = this.functionsUtil.getGlobalConfig(['network','blocksPerYear']);\n\n      // Take 50% of distrubution for lenders side\n      const distribution = this.functionsUtil.BNify(idleSpeeds).times(this.functionsUtil.BNify(blocksPerYear)).div(1e18);\n\n      if (!this.functionsUtil.BNify(distribution).isNaN()){\n        return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,distribution);\n      }\n    }\n\n    return null;\n  }\n\n  getUserDistribution = async (account=null,availableTokens=null,fixByFrequency=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    let totalSpeed = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [\n        idleSpeed,\n        userPoolShare\n      ] = await Promise.all([\n        this.getSpeed(tokenConfig.idle.address),\n        this.functionsUtil.getUserPoolShare(account,tokenConfig)\n      ]);\n\n      if (idleSpeed && userPoolShare){\n        const tokenSpeed = idleSpeed.times(userPoolShare);\n        totalSpeed = totalSpeed.plus(tokenSpeed);\n      }\n    });\n\n    if (fixByFrequency){\n      totalSpeed = this.functionsUtil.fixTokenDecimals(totalSpeed,this.tokenConfig.decimals);\n      totalSpeed = this.functionsUtil.fixDistributionSpeed(totalSpeed,this.tokenConfig.distributionFrequency)\n    }\n\n    return totalSpeed;\n  }\n\n  getAvgApr = async (availableTokens=null) => {\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.functionsUtil.BNify(0);\n    let totalAllocation = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [idleApr,tokenAllocation] = await Promise.all([\n        this.getAPR(token,tokenConfig),\n        this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (idleApr && tokenAllocation){\n        output = output.plus(idleApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n\n}\n\nexport default IdleGovToken;","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass SmartNumber extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  render() {\n    let formattedNumber = '-';\n    const number = typeof this.props.number !== 'undefined' && !isNaN(this.props.number) && this.props.number !== false && this.props.number !== null ? this.props.number : null;\n\n    if (number){\n      switch (this.props.type){\n        case 'money':\n          formattedNumber = this.functionsUtil.formatMoney(number,this.props.precision);\n        break;\n        default:\n          formattedNumber = this.functionsUtil.abbreviateNumber(number,this.props.decimals,this.props.maxPrecision,this.props.minPrecision);\n        break;\n      }\n    } else {\n      formattedNumber = '-';\n    }\n\n    const flexProps = {\n      width:1,\n      alignItems:'center',\n      flexDirection:'row',\n      justifyContent:'center'\n    };\n\n    // Replace props\n    if (this.props.flexProps && Object.keys(this.props.flexProps).length){\n      Object.keys(this.props.flexProps).forEach(p => {\n        flexProps[p] = this.props.flexProps[p];\n      });\n    }\n\n    const showUnit = formattedNumber !== '-';\n    const unitPos = this.props.unitPos ? this.props.unitPos : 'right';\n\n    return (\n      <Flex\n        {...flexProps}\n      >\n        {\n          this.props.unit && unitPos === 'left' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n        <Text {...this.props}>{formattedNumber}</Text>\n        {\n          this.props.unit && unitPos === 'right' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SmartNumber;\n","import React, { Component } from 'react';\nimport { Flex, Loader, Text } from \"rimble-ui\";\n\nclass FlexLoader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        justifyContent={'center'}\n        {...this.props.flexProps}\n      >\n        <Loader {...this.props.loaderProps} />\n        {\n          this.props.text &&\n            <Text {...this.props.textProps}>{this.props.text}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default FlexLoader;\n","/*\nTheming: https://github.com/plouc/nivo/issues/308\n*/\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n\nclass GenericChart extends Component {\n  state = {\n    width:null,\n    height:null\n  };\n\n  componentUnmounted = false;\n\n  componentWillMount() {\n    window.addEventListener('resize', this.handleWindowSizeChange.bind(this));\n  }\n\n  componentWillUnmount() {\n    this.componentUnmounted = true;\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidMount(){\n    this.handleWindowSizeChange();\n  }\n\n  componentDidUpdate(prevProps){\n    if (prevProps.isMobile !== this.props.isMobile){\n      this.handleWindowSizeChange();\n    }\n  }\n\n  handleWindowSizeChange(){\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    const newState = {...this.state};\n\n    if (this.props.parentId){\n      const chartContainer = document.getElementById(this.props.parentId);\n      if (chartContainer){\n        const chartWidth = parseFloat(chartContainer.offsetWidth)>0 ? chartContainer.offsetWidth : 0;\n\n        if (chartWidth && chartWidth !== newState.width){\n          newState.width = chartWidth;\n        }\n      }\n    }\n\n    if (!newState.width && this.props.width && this.props.width !== newState.width) {\n      newState.width = this.props.width;\n    }\n\n    if (this.props.parentIdHeight){\n      const chartContainerH = document.getElementById(this.props.parentIdHeight);\n      if (chartContainerH){\n        const chartHeight = parseFloat(chartContainerH.offsetWidth)>0 ? chartContainerH.offsetWidth : 0;\n        if (chartHeight && chartHeight !== newState.height){\n          newState.height = chartHeight;\n        }\n      }\n    }\n\n    if (!newState.height && this.props.height && this.props.height !== newState.height) {\n      newState.height = this.props.height;\n    }\n\n    if (Object.keys(newState).length>0){\n      this.setState(newState);\n    }\n  };\n\n  render() {\n    const ChartType = this.props.type;\n\n    const height = this.state.height && !isNaN(this.state.height) ? parseInt(this.state.height) : 350;\n    const width = this.state.width && !isNaN(this.state.width) ? parseInt(this.state.width) : 0;\n\n    let chartProps = Object.assign({},this.props);\n    chartProps = {\n      ...chartProps,\n      height,\n      width\n    }\n\n    return chartProps.showLoader && (!chartProps.data || !width || !height) ? (\n      <FlexLoader\n        flexProps={{\n          flexDirection:'row',\n          minHeight:height\n        }}\n        loaderProps={ this.props.loaderProps ? this.props.loaderProps : {\n          size:'30px'\n        }}\n        textProps={{\n          ml:2\n        }}\n        text={ this.props.loaderText !== undefined ? this.props.loaderText : 'Loading graph data...'}\n      />\n    ) : this.props.data && (\n      <ChartType\n        {...chartProps}\n      />\n    )\n  }\n}\n\nexport default GenericChart;","import { Flex, Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass VariationNumber extends Component {\n\n  render() {\n\n    const IconDirection = () => (\n      <Icon\n        color={ this.props.direction === 'up' ?  '#6dd400' : '#f7b500' }\n        name={ this.props.direction === 'up' ?  'ArrowDropUp' : 'ArrowDropDown' }\n        size={ this.props.iconSize ? this.props.iconSize : ( this.props.isMobile ? '1.4em' : '2em') }\n      />\n    );\n\n    return (\n      <Flex\n        alignItems={'center'}\n        flexDirection={'row'}\n        width={ this.props.width ? this.props.width : 1 }\n        justifyContent={this.props.justifyContent ? this.props.justifyContent : 'center'}\n      >\n        {\n          (!this.props.iconPos || this.props.iconPos==='left') &&\n            <IconDirection />\n        }\n        {this.props.children}\n        {\n          this.props.iconPos==='right' &&\n            <IconDirection />\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default VariationNumber;\n","import theme from '../theme';\nimport { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport globalConfigs from '../configs/globalConfigs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass AllocationChart extends Component {\n  state = {\n    chartData:null,\n    chartProps:null,\n    selectedSlice:null,\n    totalAllocation:null,\n    protocolsAllocations:null,\n    protocolsAllocationsPerc:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged){\n      this.setStateSafe({\n        chartData:null,\n        chartProps:null,\n        selectedSlice:null,\n        totalAllocation:null,\n        protocolsAllocations:null,\n        protocolsAllocationsPerc:null\n      },() => {\n        this.loadData();\n      });\n    } else if (prevProps.isMobile !== this.props.isMobile){\n      this.loadData()\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n    const {\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    } = await this.functionsUtil.getTokenAllocation(this.props.tokenConfig);\n\n    // console.log('AllocationChart',this.props.token,totalAllocation,protocolsAllocations,protocolsAllocationsPerc);\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      sliceLabel: d => d.value+'%',\n      tooltipFormat: v => v+'%',\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {} : {\n            display: 'none'\n          }\n        },\n        labels:{\n          text:{\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontWeight:600,\n            fontFamily: theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n      margin: this.props.inline ? {top:0,right:15,bottom:0,left:1} : (this.props.isMobile ? { top: 10, right: 15, bottom: 0, left: 15 } : { top: 10, right: 35, bottom: 0, left: 35 }),\n    };\n\n    const chartData = [];\n\n    this.props.tokenConfig.protocols.forEach((protocolInfo,i)=>{\n      const protocolName = protocolInfo.name;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n      if (protocolsAllocationsPerc[protocolAddr]){\n        const protocolAllocationPercParsed = parseFloat(protocolsAllocationsPerc[protocolAddr].times(100).toFixed(2));\n        chartData.push({\n          id:protocolAddr,\n          value:protocolAllocationPercParsed,\n          color:'hsl('+globalConfigs.stats.protocols[protocolName].color.hsl.join(',')+')',\n          label: globalConfigs.stats.protocols[protocolName].label ? globalConfigs.stats.protocols[protocolName].label : this.functionsUtil.capitalize(protocolName)\n        });\n      }\n\n    });\n\n    this.setStateSafe({\n      chartData,\n      chartProps,\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    });\n  }\n\n  render() {\n    \n    const selectedSlice = this.state.selectedSlice !== null && this.state.protocolsAllocations[this.state.selectedSlice.id] ? this.state.protocolsAllocations[this.state.selectedSlice.id] : false;\n    const protocolIcon = this.state.selectedSlice !== null ? (globalConfigs.stats.protocols[this.state.selectedSlice.label.toLowerCase()] && globalConfigs.stats.protocols[this.state.selectedSlice.label.toLowerCase()].icon ? globalConfigs.stats.protocols[this.state.selectedSlice.label.toLowerCase()].icon : `${this.state.selectedSlice.label.toLowerCase()}.svg`) : null;\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n      >\n        {\n          this.state.totalAllocation && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/protocols/${protocolIcon}`}\n                    />\n                    <SmartNumber\n                      fontSize={[3,4]}\n                      decimals={3}\n                      fontWeight={4}\n                      maxPrecision={5}\n                      number={selectedSlice}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      Funds in {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/idle-mark.png`}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontWeight:3,\n                        fontSize:[3,4]\n                      }}\n                      decimals={3}\n                      fontWeight={4}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      number={this.state.totalAllocation}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.state.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default AllocationChart;","import { Line } from '@nivo/line';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport { linearGradientDef } from '@nivo/core'\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport VariationNumber from '../VariationNumber/VariationNumber';\nimport AllocationChart from '../AllocationChart/AllocationChart';\nimport { Image, Text, Loader, Button, Tooltip, Icon, Flex } from \"rimble-ui\";\n\nclass AssetField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized && this.props.contractsInitialized;\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || accountChanged || transactionsChanged || (contractInitialized && !this.state.ready)){\n      this.setStateSafe({},() => {\n        this.loadField();\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n    // Exit if component unmounted\n    // console.log('loadField',this.props.fieldInfo.name,this.props.account,this.props.token,this.props.tokenConfig);\n\n    if (this.componentUnmounted || !this.props.token || !this.props.tokenConfig){\n      return false;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    // const addCurveApy = typeof this.props.addCurveApy !== 'undefined' ? this.props.addCurveApy : false;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        case 'tokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              tokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'govTokens':\n          const govTokens = this.functionsUtil.getTokenGovTokens(this.props.tokenConfig);\n          const getGovTokensDistributionSpeed = await this.functionsUtil.getGovTokensDistributionSpeed(this.props.tokenConfig);\n          this.setStateSafe({\n            govTokens,\n            getGovTokensDistributionSpeed\n          });\n        break;\n        case 'tokenPrice':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenPrice = '-';\n            if (typeof this.props.tokenConfig.showPrice === 'undefined' || this.props.tokenConfig.showPrice){\n              tokenPrice = output.toString();\n            }\n            this.setStateSafe({\n              tokenPrice\n            });\n          }\n        break;\n        case 'fee':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              fee:output.toString()\n            });\n          }\n        break;\n        case 'amountToMigrate':\n          const {\n            oldContractBalanceFormatted\n          } = await this.functionsUtil.checkMigration(this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (setState && oldContractBalanceFormatted){\n            this.setStateSafe({\n              amountToMigrate:oldContractBalanceFormatted.toString()\n            });\n            output = oldContractBalanceFormatted;\n          }\n        break;\n        case 'amountLent':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              amountLent:output.toString()\n            });\n          }\n        break;\n        case 'idleTokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              idleTokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'redeemableBalanceCounterCurve':\n          const {\n            redeemableBalanceCurveEnd,\n            redeemableBalanceCurveStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceCurveStart && redeemableBalanceCurveEnd){\n            if (setState){\n              this.setStateSafe({\n                redeemableBalanceCurveEnd,\n                redeemableBalanceCurveStart\n              });\n            }\n\n            output = {\n              redeemableBalanceCurveEnd,\n              redeemableBalanceCurveStart\n            };\n          }\n        break;\n        case 'redeemableBalanceCounter':\n          const {\n            redeemableBalanceEnd,\n            redeemableBalanceStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceStart && redeemableBalanceEnd){\n            if (setState){\n              this.setStateSafe({\n                redeemableBalanceEnd,\n                redeemableBalanceStart\n              });\n            }\n\n            output = {\n              redeemableBalanceEnd,\n              redeemableBalanceStart\n            };\n          }\n        break;\n        case 'earnings':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earnings:output.toString()\n            });\n          }\n        break;\n        case 'feesCounter':\n          const [earningsCounter,feePercentage] = await Promise.all([\n            this.loadField('earningsCounter'),\n            this.functionsUtil.getTokenFees(this.props.tokenConfig)\n          ]);\n\n          if (earningsCounter && earningsCounter.earningsStart && earningsCounter.earningsEnd && feePercentage){\n\n            const feesStart = earningsCounter.earningsStart.times(feePercentage);\n            const feesEnd = earningsCounter.earningsEnd.times(feePercentage);\n\n            if (setState){\n              this.setStateSafe({\n                feesEnd,\n                feesStart\n              });\n            }\n\n            output = {\n              feesEnd,\n              feesStart\n            };\n          }\n        break;\n        case 'earningsCounterCurve':\n          const [curveApy,earningsCurveStart,amountLentCurve] = await Promise.all([\n            this.functionsUtil.getCurveAPY(),\n            this.functionsUtil.loadAssetField('earningsCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLentCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n          if (amountLentCurve && earningsCurveStart && curveApy){\n            const earningsCurveEnd = amountLentCurve.gt(0) ? amountLentCurve.times(curveApy.div(100)).plus(earningsCurveStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                earningsCurveEnd,\n                earningsCurveStart\n              });\n            }\n\n            output = {\n              earningsCurveEnd,\n              earningsCurveStart\n            };\n          }\n        break;\n        case 'earningsCounter':\n          const [tokenAPY2,earningsStart,amountLent2] = await Promise.all([\n            this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('earnings',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLent',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n          if (amountLent2 && earningsStart && tokenAPY2){\n            const earningsEnd = amountLent2.gt(0) ? amountLent2.times(tokenAPY2.div(100)).plus(earningsStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                earningsEnd,\n                earningsStart\n              });\n            }\n\n            output = {\n              earningsEnd,\n              earningsStart\n            };\n          }\n        break;\n        case 'redeemableBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              redeemableBalance:output.toString()\n            });\n          }\n        break;\n        case 'score':\n          const tokenScore = await this.functionsUtil.getTokenScore(this.props.tokenConfig,isRisk);\n          if (setState){\n            this.setStateSafe({\n              score:tokenScore ? tokenScore : false\n            });\n          }\n          output = tokenScore;\n        break;\n        case 'pool':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              poolSize:output.toString()\n            });\n          }\n        break;\n        case 'earningsPercCurve':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPercCurveDirection:parseFloat(output)>0 ? 'up' : 'down',\n              earningsPercCurve:parseFloat(output).toFixed(decimals)\n            });\n          }\n        break;\n        case 'earningsPerc':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPercDirection:parseFloat(output)>0 ? 'up' : 'down',\n              earningsPerc:parseFloat(output).toFixed(decimals)\n            });\n          }\n        break;\n        case 'apr':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenAPR = '-';\n            if (typeof this.props.tokenConfig.showAPR === 'undefined' || this.props.tokenConfig.showAPR){\n              tokenAPR = parseFloat(output).toFixed(decimals);\n            }\n            this.setStateSafe({\n              tokenAPR\n            });\n          }\n        break;\n        case 'oldApy':\n          if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.oldContract){\n            const oldTokenConfig = Object.assign({},this.props.tokenConfig);\n            oldTokenConfig.idle = Object.assign({},this.props.tokenConfig.migration.oldContract);\n            oldTokenConfig.protocols = Object.values(this.props.tokenConfig.protocols);\n\n            // Override token with name\n            oldTokenConfig.idle.token = oldTokenConfig.idle.name;\n\n            // Replace protocols with old protocols\n            if (oldTokenConfig.migration.oldProtocols){\n              oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n                const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n                if (foundProtocol){\n                  const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                  oldTokenConfig.protocols[protocolPos] = oldProtocol;\n                }\n              });\n            }\n\n            output = await this.functionsUtil.loadAssetField('apy',this.props.token,oldTokenConfig,this.props.account,false);\n\n          } else {\n            output = await this.loadField('apyNoGov');\n          }\n\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                oldAPY:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                oldAPY:false\n              });\n            }\n          }\n        break;\n        case 'apyNoGov':\n          output = await this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,false);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                tokenAPYNoGov:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPYNoGov:false\n              });\n            }\n          }\n        break;\n        case 'curveApy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveApy:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveApy:false\n              });\n            }\n          }\n        break;\n        case 'curveAvgSlippage':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveAvgSlippage:(parseFloat(output)*100).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveAvgSlippage:false\n              });\n            }\n          }\n        break;\n\n        case 'apy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              const tokenAPY = parseFloat(output).toFixed(decimals);\n              const showTooltip = !this.props.isMobile && (fieldInfo.showTooltip !== undefined && fieldInfo.showTooltip);\n              const govTokensAprs = showTooltip ? await this.functionsUtil.getGovTokensAprs(this.props.token,this.props.tokenConfig) : null;\n              this.setStateSafe({\n                tokenAPY,\n                govTokensAprs\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPY:false\n              });\n            }\n          }\n        break;\n        case 'allocationChart':\n          let allocationChartWidth = 0;\n          let allocationChartHeight = 0;\n\n          const resizeAllocationChart = () => {\n            const allocationChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (allocationChartRowElement){\n              const $allocationChartRowElement = window.jQuery(allocationChartRowElement);\n              allocationChartWidth = $allocationChartRowElement.innerWidth()-parseFloat($allocationChartRowElement.css('padding-right'))-parseFloat($allocationChartRowElement.css('padding-left'));\n              allocationChartHeight = $allocationChartRowElement.innerHeight();\n\n              // Make it a square\n              allocationChartWidth = parseInt(allocationChartWidth)>0 ? Math.min(allocationChartWidth,allocationChartHeight) : allocationChartHeight;\n              allocationChartHeight = allocationChartWidth;\n\n\n              if (allocationChartWidth !== this.state.allocationChartWidth){\n                if (setState){\n                  this.setStateSafe({\n                    allocationChartWidth,\n                    allocationChartHeight\n                  });\n                }\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAllocationChart();\n          window.removeEventListener('resize', resizeAllocationChart.bind(this));\n          window.addEventListener('resize', resizeAllocationChart.bind(this));\n\n          if (setState){\n            this.setStateSafe({\n              allocationChartWidth,\n              allocationChartHeight\n            });\n          }\n        break;\n        case 'aprChart':\n          // Set start timestamp for v3 tokens\n          const aprChartEndTimestamp = isRisk ? this.functionsUtil.getGlobalConfig(['stats','versions','v3','endTimestamp']) : null;\n          const aprChartStartTimestamp = isRisk ? aprChartEndTimestamp-(7*24*60*60) : Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).format('DD/MM/YYYY 00:00:00'),'DD/MM/YYYY HH:mm:ss').subtract(7,'days')._d.getTime()/1000));\n\n          // Check for cached data\n          let aprChartData = null;\n          const cachedDataKey = `aprChart_${this.props.tokenConfig.address}_${isRisk}`;\n          const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n\n          aprChartData = [{\n            id:this.props.token,\n            color: this.props.color ? this.props.color : 'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'color','hsl']).join(',')+')',\n            data: []\n          }];\n\n          if (cachedData !== null){\n            aprChartData = cachedData;\n          } else {\n\n            // FAKE CHART DATA\n            if (this.props.token === 'COMP'){\n              aprChartData[0].data = [];\n              const startTimestamp = new Date().getTime();\n              let y = 20;\n              for (var i=0; i<=16; i++) {\n                const mDate = this.functionsUtil.strToMoment(startTimestamp).add(i,'day');\n                const x = mDate.format(\"YYYY/MM/DD HH:mm\");\n                // Grow\n                if ((i>=5 && i<=10) || (i>=13)){\n                  y+=Math.random()*4+2; // Risk\n                  // y+=Math.random()*7+4; // Best\n                // Decrease\n                } else {\n                  y-=Math.random()*3+1; // Risk\n                  // y-=Math.random()*3+1; // Best\n                }\n                aprChartData[0].data.push({x,y});\n              }\n            } else {\n              const frequencySeconds = this.functionsUtil.getFrequencySeconds('hour',12);\n              const apiResultsAprChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,aprChartStartTimestamp,aprChartEndTimestamp,false,frequencySeconds);\n\n              // if (isRisk){\n              //   debugger;\n              // }\n\n              apiResultsAprChart.forEach((d,i) => {\n                const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const y = parseFloat(this.functionsUtil.fixTokenDecimals(d.idleRate,18));\n                aprChartData[0].data.push({ x, y });\n              });\n            }\n\n            this.functionsUtil.setCachedData(cachedDataKey,aprChartData);\n          }\n\n\n          // Add same value\n          if (aprChartData[0].data.length === 1){\n            const newPoint = Object.assign({},aprChartData[0].data[0]);\n            newPoint.x = this.functionsUtil.strToMoment(newPoint,\"YYYY/MM/DD HH:mm\").add(1,'hours').format(\"YYYY/MM/DD HH:mm\")\n            aprChartData[0].data.push(newPoint);\n          }\n\n          let aprChartWidth = 0;\n          let aprChartHeight = 0;\n\n          const resizeAprChart = () => {\n            const aprChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (aprChartRowElement){\n              const $aprChartRowElement = window.jQuery(aprChartRowElement);\n              aprChartWidth = $aprChartRowElement.innerWidth()-parseFloat($aprChartRowElement.css('padding-right'))-parseFloat($aprChartRowElement.css('padding-left'));\n              aprChartHeight = $aprChartRowElement.innerHeight();\n              if (aprChartWidth !== this.state.aprChartWidth || !this.state.aprChartHeight){\n                this.setStateSafe({\n                  aprChartWidth,\n                  aprChartHeight: this.state.aprChartHeight ? this.state.aprChartHeight : aprChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAprChart();\n          window.removeEventListener('resize', resizeAprChart.bind(this));\n          window.addEventListener('resize', resizeAprChart.bind(this));\n\n          // Set chart type\n          const aprChartType = Line;\n\n          const aprChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            axisLeft:null,\n            animate:false,\n            curve:'monotoneX',\n            axisBottom:null,\n            enableArea:true,\n            areaOpacity:0.1,\n            enableGridX:false,\n            enableGridY:false,\n            pointBorderWidth:2,\n            enableSlices:false,\n            isInteractive:false,\n            colors:d => d.color,\n            defs:[\n              linearGradientDef('gradientArea', [\n                  { offset: 0, color: '#faf047' },\n                  { offset: 50, color: '#e4b400' },\n              ])\n            ],\n            fill:[\n              { match: { id: this.props.token } , id: 'gradientArea' },\n            ],\n            margin: { top: 10, right: 0, bottom: 0, left: 0 }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                aprChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              aprChartType,\n              aprChartData,\n              aprChartProps,\n              aprChartWidth,\n              aprChartHeight\n            });\n          }\n          output = aprChartData;\n        break;\n        case 'performanceChart':\n          let firstTokenPrice = null;\n          let firstIdleBlock = null;\n          /*\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const performanceChartRowElement = document.getElementById(this.props.rowId) ? document.getElementById(this.props.rowId) : document.getElementById(this.props.parentId);\n          if (performanceChartRowElement){\n            performanceChartWidth = parseFloat(performanceChartRowElement.offsetWidth)>0 ? performanceChartRowElement.offsetWidth* (this.props.colProps ? this.props.colProps.width : 1) : 0;\n            performanceChartHeight = parseFloat(performanceChartRowElement.offsetHeight);\n          }\n          */\n\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const resizePerformanceChart = () => {\n            const PerformanceChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (PerformanceChartRowElement){\n              const $PerformanceChartRowElement = window.jQuery(PerformanceChartRowElement);\n              performanceChartWidth = $PerformanceChartRowElement.innerWidth()-parseFloat($PerformanceChartRowElement.css('padding-right'))-parseFloat($PerformanceChartRowElement.css('padding-left'));\n              performanceChartHeight = $PerformanceChartRowElement.innerHeight();\n              if (performanceChartWidth !== this.state.performanceChartWidth || !this.state.performanceChartHeight){\n                this.setStateSafe({\n                  performanceChartWidth,\n                  performanceChartHeight: this.state.performanceChartHeight ? this.state.performanceChartHeight : performanceChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizePerformanceChart();\n          window.removeEventListener('resize', resizePerformanceChart.bind(this));\n          window.addEventListener('resize', resizePerformanceChart.bind(this));\n\n          const apr_end_date = this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).subtract(1,'day').format('YYYY-MM-DD 23:59'),'YYYY-MM-DD HH:mm');\n          const apr_start_date = apr_end_date.clone().subtract(1,'week');\n\n          // Set start timestamp for v3 tokens\n          const apr_start_timestamp =  Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(apr_start_date._d.getTime()/1000));\n          // const apr_end_timestamp = parseInt(apr_end_date._d.getTime()/1000);\n\n          let apiResultsPerformanceChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,apr_start_timestamp,null,false,43200);\n\n          const idleTokenPerformance = apiResultsPerformanceChart.map((d,i) => {\n            let y = 0;\n            const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n            const tokenPrice = this.functionsUtil.fixTokenDecimals(d.idlePrice,this.props.tokenConfig.decimals);\n\n            if (!firstTokenPrice){\n              firstTokenPrice = tokenPrice;\n            } else {\n              y = parseFloat(tokenPrice.div(firstTokenPrice).minus(1).times(100));\n            }\n\n            if (firstIdleBlock === null){\n              firstIdleBlock = parseInt(d.blocknumber);\n            }\n\n            return { x, y };\n          });\n\n          const performanceChartData = [{\n            id:'Idle',\n            color: 'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'color','hsl']).join(',')+')',\n            data: idleTokenPerformance\n          }];\n\n          // Set chart type\n          const performanceChartType = Line;\n\n          const performanceChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            animate:false,\n            axisLeft:null,\n            axisBottom:null,\n            enableArea:true,\n            enableGridX:false,\n            enableGridY:false,\n            curve:'monotoneX',\n            enableSlices:false,\n            pointBorderWidth:1,\n            colors:d => d.color,\n            pointLabelYOffset:-12,\n            margin: { top: 0, right: 0, bottom: 0, left: 0 }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                performanceChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              performanceChartType,\n              performanceChartData,\n              performanceChartProps,\n              performanceChartWidth,\n              performanceChartHeight\n            });\n          }\n          output = performanceChartData;\n        break;\n        default:\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n    return output;\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n    let output = null;\n\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n      \n    const maxPrecision = fieldProps && fieldProps.maxPrecision ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const minPrecision = fieldProps && fieldProps.minPrecision ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    switch (fieldInfo.name){\n      case 'iconTooltip':\n        const icon1 = this.props.tokenConfig && this.props.tokenConfig.icon ? this.props.tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Tooltip\n            placement={'top'}\n            message={this.props.token}\n            {...fieldInfo.tooltipProps}\n          >\n            <Image src={icon1} {...fieldProps} />\n          </Tooltip>\n        );\n      break;\n      case 'icon':\n        const icon2 = this.props.tokenConfig && this.props.tokenConfig.icon ? this.props.tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Image src={icon2} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        output = (\n          <Text {...fieldProps}>{this.props.token}</Text>\n        );\n      break;\n      case 'tokenBalance':\n        output = this.state.tokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenBalance} />\n        ) : loader\n      break;\n      case 'fee':\n        output = this.state.fee ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.fee} />\n        ) : loader\n      break;\n      case 'tokenPrice':\n        output = this.state.tokenPrice ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenPrice} />\n        ) : loader\n      break;\n      case 'amountToMigrate':\n        output = this.state.amountToMigrate ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.amountToMigrate} />\n        ) : loader\n      break;\n      case 'idleTokenBalance':\n        output = this.state.idleTokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.idleTokenBalance} />\n        ) : loader\n      break;\n      case 'redeemableBalanceCounterCurve':\n        output = this.state.redeemableBalanceCurveStart && this.state.redeemableBalanceCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceCurveEnd)}\n            start={parseFloat(this.state.redeemableBalanceCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalanceCounter':\n        output = this.state.redeemableBalanceStart && this.state.redeemableBalanceEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceEnd)}\n            start={parseFloat(this.state.redeemableBalanceStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'feesCounter':\n        output = this.state.feesStart && this.state.feesEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.feesEnd)}\n            start={parseFloat(this.state.feesStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounterCurve':\n        output = this.state.earningsCurveStart && this.state.earningsCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsCurveEnd)}\n            start={parseFloat(this.state.earningsCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounter':\n        output = this.state.earningsStart && this.state.earningsEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsEnd)}\n            start={parseFloat(this.state.earningsStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalance':\n        output = this.state.redeemableBalance ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.redeemableBalance} />\n        ) : loader\n      break;\n      case 'govTokens':\n        output = this.state.govTokens ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n          >\n            {\n              Object.values(this.state.govTokens).map( (govTokenConfig,govTokenIndex) => (\n                <AssetField\n                  token={govTokenConfig.token}\n                  tokenConfig={govTokenConfig}\n                  key={`asset_${govTokenIndex}`}\n                  fieldInfo={{\n                    name:'iconTooltip',\n                    tooltipProps:{\n                      message:`${govTokenConfig.token}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govTokenConfig.token] ? `: ${this.state.getGovTokensDistributionSpeed[govTokenConfig.token].toFixed(decimals)}/${govTokenConfig.distributionFrequency} (for the whole pool)` : '')\n                    },\n                    props:{\n                      borderRadius:'50%',\n                      position:'relative',\n                      height:['1.1em','2em'],\n                      ml:govTokenIndex ? '-10px' : 0,\n                      zIndex:Object.values(this.state.govTokens).length-govTokenIndex,\n                      boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                    }\n                  }}\n                />\n              ))\n            }\n          </Flex>\n        ) : loader\n      break;\n      case 'amountLentCurve':\n        output = this.state.amountLentCurve ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLentCurve} />\n        ) : loader\n      break;\n      case 'amountLent':\n        output = this.state.amountLent ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLent} />\n        ) : loader\n      break;\n      case 'pool':\n        output = this.state.poolSize ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.poolSize} />\n        ) : loader\n      break;\n      case 'score':\n        // console.log('score',this.state.score);\n        output = this.state.score !== undefined && this.state.score !== null ? (\n          <SmartNumber {...fieldProps} decimals={1} number={this.state.score} />\n        ) : loader\n      break;\n      case 'earningsPerc':\n        output = this.state.earningsPerc ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsPercCurve':\n        output = this.state.earningsPercCurve ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercCurveDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsCurve':\n        output = this.state.earningsCurve ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earningsCurve}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'earnings':\n        output = this.state.earnings ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earnings}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'idleDistribution':\n        const governanceTokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n        const idleTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',governanceTokenName]);\n        output = this.state.idleDistribution ? (\n          <Text {...fieldProps}>+{this.state.idleDistribution.toFixed(decimals)} IDLE/{idleTokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'userDistributionSpeed':\n        output = this.state.userDistributionSpeed ? (\n          <Text {...fieldProps}>{this.state.userDistributionSpeed.toFixed(decimals)}/{this.props.tokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'distributionSpeed':\n        output = this.state.distributionSpeed ? (\n          <Text {...fieldProps}>{this.state.distributionSpeed.toFixed(decimals)}</Text>\n        ) : loader\n      break;\n      case 'apr':\n        output = this.state.tokenAPR ? (\n          <Text {...fieldProps}>{this.state.tokenAPR}{!isNaN(parseFloat(this.state.tokenAPR)) ? '%' : ''}</Text>\n        ) : loader\n      break;\n      case 'oldApy':\n        output = this.state.oldAPY !== undefined ? (\n          <Text {...fieldProps}>{this.state.oldAPY !== false ? this.state.oldAPY : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apyNoGov':\n        output = this.state.tokenAPYNoGov !== undefined ? (\n          <Text {...fieldProps}>{this.state.tokenAPYNoGov !== false ? this.state.tokenAPYNoGov : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveApy':\n        output = this.state.curveApy !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveApy !== false ? this.state.curveApy : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveAvgSlippage':\n        output = this.state.curveAvgSlippage !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveAvgSlippage !== false ? this.state.curveAvgSlippage : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apy':\n        output = this.state.tokenAPY !== undefined ? (\n          <Flex\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text {...fieldProps}>{this.state.tokenAPY !== false ? this.state.tokenAPY : '-' }<small>%</small></Text>\n            {\n              this.state.govTokensAprs && Object.keys(this.state.govTokensAprs).length>0 && \n                <AssetField\n                  fieldInfo={{\n                    name:'tooltip',\n                    props:{\n                      iconProps:{\n                        ml:1\n                      },\n                      placement:'top',\n                      message:Object.keys(this.state.govTokensAprs).map( govToken => {\n                        const distributionFrequency = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'distributionFrequency']);\n                        const tooltipMode = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'aprTooltipMode']);\n                        let value = this.state.govTokensAprs[govToken].toFixed(decimals);\n                        switch (tooltipMode){\n                          default:\n                          case 'apr':\n                            value += '%';\n                          break;\n                          case 'distribution':\n                            value = `${value}/${distributionFrequency}`;\n                          break;\n                        }\n                        return `${govToken}: ${value}`\n                      }).join('; ')\n                    }\n                  }}\n                />\n            }\n          </Flex>\n        ) : loader\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <Button {...fieldProps} onClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</Button>\n        );\n      break;\n      case 'performanceChart':\n        output = this.state.performanceChartData ? (\n          <GenericChart\n            {...this.state.performanceChartProps}\n            type={this.state.performanceChartType}\n            data={this.state.performanceChartData}\n            width={this.state.performanceChartWidth}\n            height={this.state.performanceChartHeight}\n          />\n        ) : loader\n      break;\n      case 'allocationChart':\n        output = this.state.allocationChartWidth && this.state.allocationChartHeight ? (\n          <AllocationChart\n            {...this.props}\n            loaderProps={{\n              size:'20px'\n            }}\n            loaderText={''}\n            selectedToken={this.props.token}\n            width={this.state.allocationChartWidth}\n            height={this.state.allocationChartHeight}\n            inline={typeof this.props.inline !== 'undefined' ? this.props.inline : true}\n            showLoader={typeof this.props.showLoader !== 'undefined' ? this.props.showLoader : false}\n          />\n        ) : loader\n      break;\n      case 'tooltip':\n        output = (\n          <Tooltip\n            {...fieldProps}\n          >\n            <Icon\n              ml={2}\n              name={\"Info\"}\n              size={'1em'}\n              color={'cellTitle'}\n              {...fieldProps.iconProps}\n            />\n          </Tooltip>\n        );\n      break;\n      case 'aprChart':\n        output = this.state.aprChartData ? (\n          <GenericChart\n            {...this.state.aprChartProps}\n            type={this.state.aprChartType}\n            data={this.state.aprChartData}\n            width={this.state.aprChartWidth}\n            height={this.state.aprChartHeight}\n          />\n        ) : loader\n      break;\n      default:\n        let formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>{formattedValue}</Text>\n        ) : loader\n      break;\n    }\n    return output;\n  }\n}\n\nexport default AssetField;\n","import React, { Component } from 'react';\nimport styles from './DashboardCard.module.scss';\nimport { Flex, Icon, Heading, Card, Tooltip } from \"rimble-ui\";\n\nclass DashboardCard extends Component {\n  render() {\n    const isDisabled = this.props.isDisabled;\n    const isActive = this.props.isActive && !isDisabled;\n    const isInteractive = this.props.isInteractive && !isDisabled;\n    const isVisible = typeof this.props.isVisible !== 'undefined' ? this.props.isVisible : true;\n    const isRainbow = typeof this.props.isRainbow !== 'undefined' ? this.props.isRainbow : false;\n\n    const cardProps = {\n      p:0,\n      boxShadow:1,\n      borderRadius:2,\n      position:'relative',\n      minHeight:'initial',\n      background:'cardBg'\n    };\n\n    // Replace props\n    if (this.props.cardProps && Object.keys(this.props.cardProps).length){\n      Object.keys(this.props.cardProps).forEach(p => {\n        cardProps[p] = this.props.cardProps[p];\n      });\n    }\n\n    const className = [\n      styles.defaultOpacity,\n      isActive ? styles.active : null,\n      !isVisible ? styles.hidden : null,\n      isRainbow ? styles.rainbow : null,\n      isDisabled ? styles.disabled : null,\n      isInteractive ? styles.interactive : null,\n    ];\n\n    if (this.props.className && styles[this.props.className]){\n      className.push(styles[this.props.className]);\n    }\n\n    return (\n      <Card\n        {...cardProps}\n        className={className}\n        onClick={this.props.handleClick}\n      >\n        {\n          this.props.title && this.props.title.length>0 &&\n            <Flex\n              mt={[3,4]}\n              ml={[3,4]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              {...this.props.titleParentProps}\n            >\n              <Heading.h4\n                fontWeight={4}\n                fontSize={[2,3]}\n                textAlign={'left'}\n                color={'dark-gray'}\n                lineHeight={'initial'}\n                {...this.props.titleProps}\n              >\n                {this.props.title}\n              </Heading.h4>\n              {\n                this.props.description && this.props.description.length>0 &&\n                  <Tooltip\n                    placement={'top'}\n                    message={this.props.description}\n                  >\n                    <Icon\n                      ml={2}\n                      name={\"Info\"}\n                      size={'1em'}\n                      color={'cellTitle'}\n                    />\n                  </Tooltip>\n              }\n            </Flex>\n        }\n        {this.props.children}\n      </Card>\n    );\n  }\n}\n\nexport default DashboardCard;","import theme from \"../theme\";\nimport Select from 'react-select';\nimport React, { Component } from 'react';\nimport { Flex, Text, Input } from \"rimble-ui\";\nimport styles from './GenericSelector.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass GenericSelector extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadComponents();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const optionsChanged = JSON.stringify(prevProps.options) !== JSON.stringify(this.props.options);\n    const defaultValueChanged = JSON.stringify(prevProps.defaultValue) !== JSON.stringify(this.props.defaultValue);\n    const componentsChanged = prevProps.CustomOptionValue !== this.props.CustomOptionValue || prevProps.CustomValueContainer !== this.props.CustomValueContainer;\n\n    if (optionsChanged || selectedTokenChanged || defaultValueChanged || componentsChanged){\n      this.loadComponents();\n    }\n  }\n\n  async loadComponents(){\n    \n    const ControlComponent = props => {\n      const cardProps = Object.assign(\n        props.innerProps,\n        {\n          p:2,\n          width:1,\n          style:{cursor:'pointer'}\n        },\n        (this.props.innerProps ? this.props.innerProps : {})\n      );\n\n      if (props.menuIsOpen){\n        cardProps.boxShadow = 4;\n      }\n      return (\n        <DashboardCard\n          isInteractive={true}\n          cardProps={cardProps}\n        >\n          <Flex\n            width={1}\n            flexDirection={'row'}\n          >\n            {props.children}\n          </Flex>\n        </DashboardCard>\n      );\n    };\n\n    const CustomIndicatorSeparator = props => null;\n\n    const CustomMenu = props => {\n      const cardProps = Object.assign(props.innerProps,{\n        mt:2,\n        zIndex:1,\n        boxShadow:null,\n        position:'absolute'\n      });\n      return (\n        <DashboardCard\n          cardProps={cardProps}\n        >\n          {props.children}\n        </DashboardCard>\n      );\n    }\n\n    const CustomValueContainer = this.props.CustomValueContainer ? this.props.CustomValueContainer : props => {\n      return (\n        <Flex\n          {...props.innerProps}\n        >\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text\n              fontWeight={3}\n            >\n              {props.selectProps.value.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomOptionValue = this.props.CustomOptionValue ? this.props.CustomOptionValue : (props) => {\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n        >\n          <Text>\n            {props.label}\n          </Text>\n        </Flex>\n      );\n    };\n\n    const CustomInputContainer = this.props.CustomInputContainer ? this.props.CustomInputContainer : (props) => {\n\n      if (!props.selectProps.isSearchable){\n        return null;\n      }\n\n      return (\n        <Input\n          {...props}\n          fontSize={theme.fontSizes[2]}\n          color={theme.colors.copyColor}\n          fontWeight={theme.fontWeights[3]}\n          fontFamily={theme.fonts.sansSerif}\n          className={[styles.searchInput,!props.selectProps.menuIsOpen ? styles.searchInputHidden : null]}\n        />\n      );\n    };\n\n    const CustomOption = (props) => {\n\n      const options = props.selectProps.options;\n      let selectedValue = props.selectProps && props.selectProps.value && props.selectProps.value.value;\n\n      // Check if the selectedValue is included in options\n      if (selectedValue && options.map( o => o.value ).indexOf(selectedValue) === -1 && this.props.defaultValue){\n        selectedValue = this.props.defaultValue.value;\n      }\n\n      // Don't show selected value\n      if (selectedValue && selectedValue === props.value){\n        return null;\n      }\n\n      return (\n        <Flex\n          px={3}\n          py={2}\n          width={1}\n          {...props.innerProps}\n          alignItems={'center'}\n          flexDirection={'row'}\n          style={{cursor:'pointer'}}\n          justifyContent={'flex-start'}\n          className={styles.genericSelector}\n          backgroundColor={ props.isFocused ? '#fbfbfb' : '#ffffff' }\n        >\n          <CustomOptionValue\n            {...props}\n          />\n        </Flex>\n      );\n    }\n\n    await this.setState({\n      CustomMenu,\n      CustomOption,\n      ControlComponent,\n      CustomValueContainer,\n      CustomInputContainer,\n      CustomIndicatorSeparator\n    });\n  }\n\n  render() {\n    const isSearchable = typeof this.props.isSearchable !== 'undefined' ? this.props.isSearchable : false;\n    return (\n      <Select\n        name={this.props.name}\n        isSearchable={isSearchable}\n        options={this.props.options}\n        defaultValue={this.props.defaultValue}\n        onChange={ v => this.props.onChange(v.value) }\n        components={{\n            Menu: this.state.CustomMenu,\n            Option: this.state.CustomOption,\n            Control: this.state.ControlComponent,\n            Input: this.state.CustomInputContainer,\n            SingleValue: this.state.CustomValueContainer,\n            IndicatorSeparator: this.state.CustomIndicatorSeparator\n        }}\n      />\n    );\n  }\n}\n\nexport default GenericSelector;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass AssetSelector extends Component {\n\n  state = {\n    options:null,\n    defaultValue:null,\n    CustomOptionValue:null,\n    CustomValueContainer:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadComponents(){\n    const options = Object.keys(this.props.availableTokens).map(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      return {\n        value:token,\n        label:token,\n        tokenConfig\n      };\n    });\n\n    const defaultValue = this.props.selectedToken ? options.find(v => (v.value.toUpperCase() === this.props.selectedToken.toUpperCase())) : null;\n\n    const CustomOptionValue = props => {\n      const token = props.value;\n      const tokenConfig = props.data.tokenConfig;\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n          {\n            this.state.props.showCustomField ? (\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:this.state.props.showCustomField,\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n            ) : this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : defaultValue;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const token = selectProps.value;\n      const tokenConfig = selectProps.tokenConfig;\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n\n          {\n            this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    this.setState({\n      options,\n      defaultValue,\n      CustomOptionValue,\n      CustomValueContainer\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadComponents();\n\n    this.setState({\n      props:this.props\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const availableTokensChanged = JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n    if (availableTokensChanged || selectedTokenChanged){\n      this.loadComponents();\n    }\n  }\n\n  render() {\n    if (!this.state.options || !this.state.defaultValue || !this.state.CustomOptionValue || !this.state.CustomValueContainer || !this.props.availableTokens || !Object.keys(this.props.availableTokens).length){\n      return null;\n    }\n\n    return (\n      <GenericSelector\n        name={'assets'}\n        options={this.state.options}\n        innerProps={this.props.innerProps}\n        isSearchable={this.props.isSearchable}\n        defaultValue={this.state.defaultValue}\n        selectedToken={this.props.selectedToken}\n        CustomOptionValue={this.state.CustomOptionValue}\n        CustomValueContainer={this.state.CustomValueContainer}\n        onChange={ this.props.onChange ? this.props.onChange : this.props.changeToken}\n      />\n    );\n  }\n}\n\nexport default AssetSelector;\n","import React, { Component } from 'react';\nimport { Flex, Box, Text, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\n\nclass TokenSwap extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async loadKyberWidget(){\n\n    if (!this.state.selectedFromToken || !this.state.selectedDestToken){\n      return false;\n    }\n\n    const provider = 'kyberSwap';\n    const providerInfo = this.functionsUtil.getGlobalConfig(['payments','providers',provider]);\n    if (providerInfo.enabled && providerInfo.remoteResources){\n\n      const globalConfigs = this.functionsUtil.getGlobalConfigs();\n      const remoteResources = providerInfo.remoteResources;\n\n      Object.keys(remoteResources).forEach((url,j) => {\n\n        const resourceType = url.split('.').pop().toLowerCase();\n\n        switch (resourceType){\n          case 'js':\n            const scriptID = `script_${provider}_${j}_${this.state.selectedFromToken}_${this.state.selectedDestToken}`;\n\n            if (!document.getElementById(scriptID)){\n              const script = document.createElement(\"script\");\n              const remoteResourceParams = remoteResources[url];\n              const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n              const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n              if (precall && typeof precall === 'function'){\n                const precallProps = {\n                  baseToken:this.state.selectedFromToken,\n                  selectedToken:this.state.selectedDestToken,\n                  buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n                };\n                precall(precallProps,globalConfigs,providerInfo);\n              }\n\n              if (callback && typeof callback === 'function'){\n                if (script.readyState) {  // only required for IE <9\n                  script.onreadystatechange = function() {\n                    if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                      script.onreadystatechange = null;\n                      callback();\n                    }\n                  };\n                } else {  //Others\n                  script.onload = callback;\n                }\n              }\n\n              script.id = scriptID;\n              script.className = `script_${provider}`;\n              script.src = url;\n              script.async = true;\n\n              if (remoteResourceParams && remoteResourceParams.parentElement){\n                remoteResourceParams.parentElement.appendChild(script)\n              } else {\n                document.head.appendChild(script);\n              }\n            }\n          break;\n          case 'css':\n            const stylesheetId = `stylesheet_${provider}_${j}`;\n\n            if (!document.getElementById(stylesheetId)){\n              const style = document.createElement(\"link\");\n\n              style.id = stylesheetId;\n              style.rel = 'stylesheet';\n              style.href = url;\n\n              document.head.appendChild(style);\n            }\n          break;\n          default:\n          break;\n        }\n      });\n    }\n\n    this.setState({\n      providerInfo\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const fromTokenChanged = prevState.selectedFromToken !== this.state.selectedFromToken;\n    const destTokenChanged = prevState.selectedDestToken !== this.state.selectedDestToken;\n    if ((fromTokenChanged ||  destTokenChanged) && this.state.selectedFromToken && this.state.selectedDestToken){\n      this.loadKyberWidget();\n    }\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n    const supportedTokens = this.functionsUtil.getGlobalConfig(['payments','providers','kyberSwap','supportedTokens']);\n\n    supportedTokens.forEach( token => {\n      if (token !== selectedFromToken){\n        if (!selectedDestToken){\n          selectedDestToken = token;\n        }\n        availableDestinationTokens[token] = {\n          token\n        };\n      }\n    });\n\n    const baseToken = this.functionsUtil.getGlobalConfig(['baseToken']);\n    if (baseToken !== selectedFromToken){\n      availableDestinationTokens[baseToken] = {\n        token:baseToken\n      };\n    }\n\n    this.setState({\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n    this.setState({\n      selectedDestToken\n    });\n  }\n\n  swap = () => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    const paymentProvider = this.state.providerInfo;\n    const initProps = {\n      baseToken:this.state.selectedFromToken,\n      selectedToken:this.state.selectedDestToken,\n      buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    };\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(initProps,globalConfigs) : null;\n\n    // Render the Payment Provider\n    if (typeof paymentProvider.render === 'function'){\n      paymentProvider.render(initParams,null,initProps);\n    }\n\n    // Send GA event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Tools',\n      eventAction: 'TokenSwap',\n      eventLabel: `${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to swap:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              showBalance={false}\n              isSearchable={true}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  showBalance={false}\n                  isSearchable={true}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          <Flex\n            mt={2}\n            width={1}\n            justifyContent={'center'}\n          >\n            <Button\n              my={2}\n              mx={[0, 2]}\n              size={'medium'}\n              borderRadius={4}\n              mainColor={'blue'}\n              onClick={ e => this.swap(e) }\n              disabled={ !this.state.selectedFromToken || !this.state.selectedDestToken }\n            >\n              SWAP TOKENS\n            </Button>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenSwap;\n","import React, { Component } from 'react';\nimport {\n  Flex, Box\n} from \"rimble-ui\";\nimport styles from './LoadingSpinner.module.scss';\n\nclass LoadingSpinner extends Component {\n  render() {\n    return (\n      <Flex\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        <Box className={[styles[\"loading-dots\"]]}>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n        </Box>\n      </Flex>\n    );\n  }\n}\n\nexport default LoadingSpinner;\n","import React, { Component } from 'react';\nimport {\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport LoadingSpinner from '../LoadingSpinner/LoadingSpinner.js';\n\nclass ButtonLoader extends Component {\n  render() {\n    return (\n       <Button\n        onClick={this.props.handleClick}\n         {...this.props.buttonProps}\n       >\n        <Flex flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n          <Flex width={1} display={ this.props.isLoading ? 'flex' : 'none' }>\n            <LoadingSpinner />\n          </Flex>\n          <Flex width={1} display={ this.props.isLoading ? 'none' : 'flex' }>\n            {this.props.buttonText}\n          </Flex>\n        </Flex>\n       </Button>\n    );\n  }\n}\n\nexport default ButtonLoader;\n","import React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ButtonLoader from '../ButtonLoader/ButtonLoader';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport { Flex, Box, Text, Input, Link, Progress } from \"rimble-ui\";\n\nclass NexusMutual extends Component {\n\n  state = {\n    step:1,\n    steps:{\n      1:'Get Quote',\n      2:'Enable NXS',\n      3:'Buy Cover'\n    },\n    loading:false,\n    amountValue:'',\n    periodValue:'',\n    quoteResponse:null,\n    selectedToken:'DAI'\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async changeSelectedToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  changeAmount = (e) => {\n    const amountValue = e.target.value.length && !isNaN(e.target.value) ? e.target.value : '';\n    this.setState({\n      amountValue\n    });\n  }\n\n  changePeriod = (e) => {\n\n    const periodValue = e.target.value.length && !isNaN(e.target.value) ? e.target.value : '';\n    this.setState({\n      periodValue\n    });\n  }\n\n  async getQuote() {\n\n    this.setState({\n      loading:true\n    });\n\n    let quoteResponse = await this.functionsUtil.makeRequest(`https://api.nexusmutual.io/getQuote/${this.state.amountValue}/${this.state.selectedToken}/${this.state.periodValue}/0x78751B12Da02728F467A44eAc40F5cbc16Bd7934/M1`);\n\n    const newState = {\n      loading:false\n    };\n\n    if (quoteResponse){\n      newState.quoteResponse = quoteResponse.data;\n    }\n\n    this.setState({\n      quoteResponse\n    });\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          mb={3}\n          width={[1,0.36]}\n          flexDirection={'column'}\n        >\n          <Flex\n            mb={1}\n            width={1}\n            flexDirection={'row'}\n            justifyContent={'space-between'}\n          >\n            {\n              Object.keys(this.state.steps).map( stepIndex => (\n                <Link\n                  style={{\n                    flexBasis:'0',\n                    flex:'1 1 0px',\n                    textDecoration:'none',\n                    cursor:this.state.step>=stepIndex ? 'pointer' : 'default'\n                  }}\n                  fontSize={2}\n                  textAlign={'center'}\n                  key={`step_${stepIndex}`}\n                  color={ this.state.step>=stepIndex ? 'blue' : 'cellText' }\n                  hoverColor={ this.state.step>=stepIndex ? 'blue' : 'cellText' }\n                  activeColor={ this.state.step>=stepIndex ? 'blue' : 'cellText' }\n                >\n                  {this.state.steps[stepIndex]}\n                </Link>\n              ) )\n            }\n          </Flex>\n          <Flex\n            width={1}\n            flexDirection={'column'}\n          >\n            <Progress\n              style={{\n                width:'100%',\n                height:'15px'\n              }}\n              value={(1/Object.keys(this.state.steps).length)*this.state.step}\n            />\n          </Flex>\n        </Flex>\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text\n              mb={1}>\n              Select asset:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              showBalance={false}\n              selectedToken={this.state.selectedToken}\n              onChange={this.changeSelectedToken.bind(this)}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              How much do you want to cover?\n            </Text>\n            <Input\n              min={0}\n              width={'100%'}\n              type={\"number\"}\n              required={true}\n              height={'3.4em'}\n              borderRadius={2}\n              fontWeight={500}\n              boxShadow={'none !important'}\n              value={this.state.amountValue}\n              onChange={this.changeAmount.bind(this)}\n              border={`1px solid ${this.props.theme.colors.divider}`}\n              placeholder={`Insert ${this.state.selectedToken.toUpperCase()} amount`}\n            />\n          </Box>\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              For how many days?\n            </Text>\n            <Input\n              min={0}\n              width={'100%'}\n              type={\"number\"}\n              required={true}\n              height={'3.4em'}\n              borderRadius={2}\n              fontWeight={500}\n              boxShadow={'none !important'}\n              value={this.state.periodValue}\n              placeholder={'Insert days of coverage'}\n              onChange={this.changePeriod.bind(this)}\n              border={`1px solid ${this.props.theme.colors.divider}`}\n            />\n          </Box>\n          <Flex\n            mt={2}\n            width={1}\n            justifyContent={'center'}\n          >\n            <ButtonLoader\n              buttonProps={{\n                my:2,\n                mx:[0, 2],\n                size:'medium',\n                borderRadius:4,\n                mainColor:'blue',\n                disabled:(!this.state.amountValue || !this.state.selectedToken || !this.state.periodValue)\n              }}\n              buttonText={'GET QUOTE'}\n              isLoading={this.state.loading}\n              handleClick={ e => this.getQuote(e) }\n            />\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default NexusMutual;","import { Heading } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass Title extends Component {\n  render() {\n    const props = {\n      fontWeight:4,\n      fontSize:[4,6],\n      color:'copyColor',\n      textAlign:'center',\n      lineHeight:'initial',\n    };\n\n    // Replace props\n    if (this.props && Object.keys(this.props).length){\n      Object.keys(this.props).forEach(p => {\n        props[p] = this.props[p];\n      });\n    }\n\n    const HeadingComponent = this.props.component ? this.props.component : Heading.h1;\n\n    return (\n      <HeadingComponent\n        {...props}\n      >\n        {this.props.children}\n      </HeadingComponent>\n    );\n  }\n}\n\nexport default Title;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TableRow extends Component {\n  render() {\n    const FieldComponent = this.props.fieldComponent;\n    const isInteractive = typeof this.props.handleClick === 'function';\n    return (\n      <DashboardCard\n        cardProps={{\n          mb:2,\n          width:1,\n          px:[2,4],\n          py:[2,'12px']\n        }}\n        id={this.props.cardId}\n        {...this.props.rowProps}\n        className={this.props.token}\n        isInteractive={isInteractive}\n        handleClick={ isInteractive ? e => this.props.handleClick(this.props) : null }\n      >\n        <Flex\n          flexDirection={'row'}\n          id={this.props.rowId}\n        >\n          {\n            this.props.cols.map((colInfo,colIndex) => {\n              if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile)){\n                return null;\n              }\n              return (\n                <Flex\n                  key={`col-${colIndex}`}\n                  {...colInfo.props}\n                >\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    {...colInfo.parentProps}\n                  >\n                    {\n                      colInfo.fields.map((fieldInfo,fieldIndex) => {\n                        if (fieldInfo.visible === false || (fieldInfo.mobile === false && this.props.isMobile)){\n                          return null;\n                        }\n                        return (\n                          <Flex\n                            height={'100%'}\n                            flexDirection={'column'}\n                            alignItems={'flex-start'}\n                            justifyContent={'center'}\n                            {...fieldInfo.parentProps}\n                            style={ fieldInfo.style ? fieldInfo.style : {\n                              overflow:'hidden'\n                            }}\n                            width={colInfo.fields.length>1 ? 'auto' : 1}\n                            id={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                            key={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                          >\n                            <FieldComponent\n                              {...this.props}\n                              fieldInfo={fieldInfo}\n                              colProps={colInfo.props}\n                              parentId={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                            />\n                          </Flex>\n                        );\n                      })\n                    }\n                  </Flex>\n                </Flex>\n              )\n            })\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default TableRow;\n","import React, { Component } from 'react';\nimport styles from './TableCellHeader.module.scss';\nimport { Flex, Heading, Icon, Link, Tooltip } from \"rimble-ui\";\n\nclass TableCellHeader extends Component {\n  render() {\n\n    const ColTitle = (props) => (\n      <Heading.h4\n        fontWeight={[3,4]}\n        color={'cellTitle'}\n        style={{\n          width:'100%',\n          whiteSpace:'nowrap'\n        }}\n        fontSize={['10px',3]}\n        lineHeight={'initial'}\n        {...props}\n      >\n        {props.children}\n      </Heading.h4>\n    );\n\n    return (\n      <Flex\n        width={this.props.width}\n      >\n        {\n          (this.props.desc && this.props.desc.length>1) ? (\n            <Flex\n              alignItems={'center'}\n            >\n              <ColTitle\n                {...this.props}\n              />\n              <Link\n                style={{\n                  cursor:'pointer'\n                }}\n                onClick={ e => this.props.openTooltipModal(this.props.title,this.props.desc) }\n              >\n                <Tooltip\n                  placement={'top'}\n                  message={'Click to read the description'}\n                >\n                  <Icon\n                    ml={1}\n                    name={\"Info\"}\n                    color={'cellTitle'}\n                    className={styles.tooltip}\n                    size={ this.props.isMobile ? '1em' : '1.2em'}\n                  />\n                </Tooltip>\n              </Link>\n            </Flex>\n          ) : (\n            <ColTitle\n              {...this.props}\n            />\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableCellHeader;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\n\nclass TableHeader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        px={[2,4]}\n        pb={[2,3]}\n        flexDirection={'row'}\n      >\n        {\n          this.props.cols.map((colInfo,colIndex) => {\n            // Skip non-mobile columns\n            if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile)){\n              return null;\n            }\n\n            return (colInfo.title && colInfo.title.length) ? (\n              <TableCellHeader\n                {...this.props}\n                {...colInfo.props}\n                desc={colInfo.desc}\n                title={colInfo.title}\n                key={`col-header-${colIndex}`}\n              >\n                {colInfo.title}\n              </TableCellHeader>\n            ) : (\n              <Flex key={`col-header-${colIndex}`} {...colInfo.props}></Flex>\n            )\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableHeader;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport AssetField from '../AssetField/AssetField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass AssetsList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    return (\n      <Flex id=\"assets-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"assets-list\" flexDirection={'column'}>\n          {\n            enabledTokens.map(token => {\n              const tokenConfig = this.props.availableTokens[token];\n              if (!tokenConfig){\n                return null;\n              }\n              return (\n                <TableRow\n                  token={token}\n                  {...this.props}\n                  key={`asset-${token}`}\n                  tokenConfig={tokenConfig}\n                  fieldComponent={AssetField}\n                  rowId={`asset-col-${token}`}\n                  cardId={`asset-card-${token}`}\n                />\n              );\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default AssetsList;\n","import theme from '../theme';\nimport { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport AssetField from '../AssetField/AssetField';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass PortfolioDonut extends Component {\n  state = {\n    chartData:null,\n    totalFunds:null,\n    parentWidth:null,\n    selectedToken:null,\n    selectedTokenConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentWillUnmount() {\n    \n  }\n\n  async componentDidMount(){\n    this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  async loadPortfolio() {\n\n    const portfolio = {};\n    let totalFunds = this.functionsUtil.BNify(0);\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.availableTokens),async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const idleTokenBalance = await this.functionsUtil.getTokenBalance(tokenConfig.idle.token,this.props.account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.functionsUtil.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = await this.functionsUtil.convertTokenBalance(idleTokenBalance.times(tokenPrice),token,tokenConfig,isRisk);\n\n        if (tokenBalance.gt(0)){\n          portfolio[token] = tokenBalance;\n\n          // Increment total balance\n          totalFunds = totalFunds.plus(tokenBalance);\n        }\n      }\n    });\n\n    // Add Gov Tokens\n    const govTokensUserBalances = await this.functionsUtil.getGovTokensUserBalances(this.props.account,this.props.availableTokens,'DAI',null,true);\n    if (govTokensUserBalances){\n      Object.keys(govTokensUserBalances).forEach( govToken => {\n        const govTokenBalance = this.functionsUtil.BNify(govTokensUserBalances[govToken]);\n        portfolio[govToken] = govTokenBalance;\n        totalFunds = totalFunds.plus(govTokenBalance);\n      });\n    }\n\n    const chartData = [];\n\n    Object.keys(portfolio).forEach(token => {\n      const tokenBalance = portfolio[token];\n      if (tokenBalance.gt(0)){\n        const tokenPercentage = tokenBalance.div(totalFunds).times(100);\n        let tokenColorHsl = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','hsl']);\n        tokenColorHsl = tokenColorHsl ? tokenColorHsl.join(',') : '0,0%,0%';\n        chartData.push({\n          id:token,\n          label:token.substr(0,1).toUpperCase()+token.substr(1),\n          value:Math.round(tokenPercentage),\n          color:'hsl('+tokenColorHsl+')'\n        });\n      }\n    });\n\n    this.setState({\n      portfolio,\n      chartData,\n      totalFunds\n    });\n  }\n\n  render() {\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth:0,\n      cornerRadius:0,\n      innerRadius:0.65,\n      motionDamping:15,\n      motionStiffness:90,\n      colors:d => d.color,\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => {\n        if (parseFloat(d.value)>=5){\n          return d.value+'%';\n        } else {\n          return null;\n        }\n      },\n      radialLabel: d => {\n        return null;//Object.keys(this.props.availableTokens).indexOf(d.label.toUpperCase());\n      },\n      theme:{\n        tooltip: {\n          container: {\n            display: 'none'\n          },\n        },\n        labels:{\n          text:{\n            fontSize:16,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsTextColor:'#333',\n      radialLabelsSkipAngle:10,\n      radialLabelsTextXOffset:0,\n      radialLabelsLinkOffset:-parseInt(this.state.parentWidth*0.2),\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      radialLabelsLinkColor:{ from: 'color' },\n      margin: this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 },\n      onMouseEnter:(data, e) => {\n        const selectedToken = data.id;\n        const selectedTokenConfig = selectedToken ? this.props.availableTokens[selectedToken] || this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken]) : null;\n        this.setState({\n          selectedToken,\n          selectedTokenConfig\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setState({\n          selectedToken:null,\n          selectedTokenConfig:null\n        });\n      },\n      legends:[\n        {\n          itemWidth: 60,\n          itemHeight: 18,\n          translateY: this.props.isMobile ? 25 : 50,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          itemTextColor: theme.colors.legend,\n          symbolShape: 'circle',\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        }\n      ]\n    };\n\n    const selectedToken = this.state.selectedToken !== null && this.state.portfolio[this.state.selectedToken] ? this.state.portfolio[this.state.selectedToken] : false;\n    const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'icon']);\n    const convertToken = this.state.selectedToken ? this.functionsUtil.getGlobalConfig(['stats','tokens',this.state.selectedToken,'conversionRateField']) : false;\n\n    return (\n      <Flex\n        width={1}\n      >\n        { \n          (this.state.totalFunds || selectedToken) && \n            <Flex\n              zIndex={0}\n              top={['32%','35%']}\n              left={['23%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              width={['55%','46%']}\n              position={'absolute'}\n              height={['40%','35%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedToken ? (\n                  <>\n                    <AssetField\n                      fieldInfo={{\n                        name:'icon',\n                        props:{\n                          mb:1,\n                          height:'2.2em'\n                        }\n                      }}\n                      token={this.state.selectedToken}\n                      tokenConfig={this.state.selectedTokenConfig}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      unit={ convertToken ? '$' : null}\n                      number={this.state.portfolio[this.state.selectedToken]}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedToken}\n                    </Text>\n                  </>\n                ) : (\n                  <>\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={strategyIcon}\n                    />\n                    <SmartNumber\n                      unit={'$'}\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      number={this.state.totalFunds}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          {...chartProps}\n          showLoader={true}\n          data={this.state.chartData}\n          parentId={this.props.parentId}\n          parentIdHeight={this.props.parentId}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default PortfolioDonut;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ChartCustomTooltip extends Component {\n\n  async componentWillMount(){\n\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    \n  }\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos && this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ChartCustomTooltip;\n","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass ChartCustomTooltipRow extends Component {\n\n  async componentWillMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps,prevState){\n\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default ChartCustomTooltipRow;\n","import theme from '../theme';\nimport { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquity extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    if (mobileChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const etherscanTxs = await this.functionsUtil.getEtherscanTxs(this.props.account,0,'latest',enabledTokens);\n\n    const chartData = [];\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n          \n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.functionsUtil.BNify(0);\n          }\n\n          const balance = amountLent;\n          const action = tx.action;\n          const timeStamp = parseInt(tx.timeStamp);\n          const tokenPrice = this.functionsUtil.BNify(tx.tokenPrice);\n          const idleTokens = this.functionsUtil.BNify(tx.idleTokens);\n\n          if (!tokenPrice.isNaN() && !tokenPrice.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              timeStamp,\n              tokenPrice,\n              idleTokens,\n              tokenAmount\n            });\n          }\n        });\n      }\n    });\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    const currTimestamp = parseInt(new Date().getTime()/1000)+86400;\n\n    const tokensData = {};\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      tokensData[token] = await this.functionsUtil.getTokenApiData(this.props.availableTokens[token].address,isRisk,firstTxTimestamp,null,false,3600);\n    });\n\n    // debugger;\n\n    const idleTokenBalance = {};\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds){\n\n      const foundBalances = {};\n      const tokensBalances = {};\n      timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach(token => {\n\n        let lastTokenData = null;\n        const lastTokenDataUnfiltered = Object.values(tokensData[token]).pop();\n        const filteredTokenData = tokensData[token].filter(tx => (tx.timestamp>=prevTimestamp && tx.timestamp<=timeStamp));\n        if (filteredTokenData && filteredTokenData.length){\n          lastTokenData = filteredTokenData.pop();\n        }\n\n        if (!idleTokenBalance[token]){\n          idleTokenBalance[token] = this.functionsUtil.BNify(0);\n        }\n\n        const tokenConfig = this.props.availableTokens[token];\n        const tokenDecimals = tokenConfig.decimals;\n        let filteredBalances = tokensBalance[token].filter(tx => (tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n        \n        if (!filteredBalances.length){\n          if (prevBalances && prevBalances[token]){\n            filteredBalances = prevBalances[token];\n            const lastFilteredTx = Object.assign([],filteredBalances).pop();\n            const currentBalance = parseFloat(lastFilteredTx.balance);\n\n            // Take idleToken price from API and calculate new balance\n            if (currentBalance>0 && timeStamp>firstTxTimestamp && lastTokenData){\n              const idleTokens = idleTokenBalance[token];\n              const idlePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.idlePrice,tokenDecimals);\n              let newBalance = idleTokens.times(idlePrice);\n\n              // Set new balance and tokenPrice\n              lastFilteredTx.balance = newBalance;\n              lastFilteredTx.tokenPrice = idlePrice;\n              filteredBalances = [lastFilteredTx];\n            }\n          } else {\n            filteredBalances = [{\n              balance:this.functionsUtil.BNify(0),\n              tokenPrice:this.functionsUtil.BNify(0)\n            }];\n          }\n        } else {\n          filteredBalances.forEach(tx => {\n            switch (tx.action){\n              case 'Deposit':\n              case 'Migrate':\n              case 'Receive':\n              case 'Swap':\n                idleTokenBalance[token] = idleTokenBalance[token].plus(tx.idleTokens);\n              break;\n              default:\n                idleTokenBalance[token] = idleTokenBalance[token].minus(tx.idleTokens);\n                if (idleTokenBalance[token].lt(0)){\n                  idleTokenBalance[token] = this.functionsUtil.BNify(0);\n                }\n              break;\n            }\n          });\n        }\n\n        const lastTx = Object.assign([],filteredBalances).pop();\n        // let lastTxBalance = this.functionsUtil.BNify(lastTx.balance);\n        let lastTxBalance = idleTokenBalance[token].times(lastTx.tokenPrice);\n\n        if (lastTxBalance.gt(0)){\n          // Convert token balance to USD\n          let tokenUsdConversionRate = null;\n          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n          if (!this.props.chartToken && conversionRateField){\n            const conversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null;\n            if (conversionRate){\n              tokenUsdConversionRate = this.functionsUtil.fixTokenDecimals(conversionRate,18);\n              if (tokenUsdConversionRate.gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n          }\n          \n          tokensBalances[token] = lastTxBalance;\n          aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n        }\n\n        foundBalances[token] = filteredBalances;\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || momentDate.isSameOrAfter(startDate)){\n        \n        if (momentDate.isAfter(new Date(),'day')){\n          momentDate = this.functionsUtil.strToMoment(new Date());\n        }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n\n        // console.log(formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken,'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        format: '%b %d',\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        legendPosition: 'middle',\n        tickValues:'every '+daysFrequency+' days'\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      areaOpacity:0.1,\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:theme.colors.legend,\n              fontFamily: theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: '#dbdbdb', strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            typeof point.data.balances === 'object' && Object.keys(point.data.balances).length &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquity;","import React from \"react\";\nimport { Text } from \"rimble-ui\";\n\nclass ShortHash extends React.Component {\n  shortenHash = hash => {\n    let shortHash = hash;\n    const txStart = shortHash.substr(0, 7);\n    const txEnd = shortHash.substr(shortHash.length - 4);\n    shortHash = txStart + \"...\" + txEnd;\n    return shortHash;\n  };\n  render() {\n    const shortHash = this.shortenHash(this.props.hash);\n\n    return <Text display={'inline'} {...this.props}>{shortHash}</Text>;\n  }\n}\n\nexport default ShortHash;\n","import theme from '../theme';\nimport React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Icon, Link, Image } from \"rimble-ui\";\nimport ShortHash from \"../utilities/components/ShortHash\";\n\nclass TransactionField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadField();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const hashChanged = prevProps.hash !== this.props.hash;\n    const accountChanged = prevProps.account !== this.props.account;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    if (fieldChanged || hashChanged || accountChanged){\n      this.loadField();\n    }\n  }\n\n  async loadField(){\n    const fieldInfo = this.props.fieldInfo;\n    if (this.props.hash && this.props.account){\n      switch (fieldInfo.name){\n        case 'icon':\n        break;\n        case 'hash':\n          \n        break;\n        case 'action':\n          \n        break;\n        case 'date':\n        break;\n        case 'status':\n        break;\n        case 'amount':\n        break;\n        case 'asset':\n        break;\n        default:\n        break;\n      }\n    }\n  }\n\n  render(){\n    let icon = null;\n    let color = null;\n    let output = null;\n    let bgColor = theme.colors.transactions.actionBg.default;\n    const fieldInfo = this.props.fieldInfo;\n    const transaction = this.props.transaction;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      style:{\n        maxWidth:'100%',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis'\n      },\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    switch (fieldInfo.name){\n      case 'icon':\n        if (transaction.action){\n          color = theme.colors.transactions.action[transaction.action.toLowerCase()] ? theme.colors.transactions.action[transaction.action.toLowerCase()] : color;\n          bgColor = theme.colors.transactions.actionBg[transaction.action.toLowerCase()] ? theme.colors.transactions.actionBg[transaction.action.toLowerCase()] : bgColor;\n        }\n        switch (transaction.action.toLowerCase()) {\n          case 'deposit':\n            icon = \"ArrowDownward\";\n          break;\n          case 'boost':\n            icon = \"TrendingUp\";\n          break;\n          case 'redeem':\n            icon = \"ArrowUpward\";\n          break;\n          case 'send':\n            icon = \"Send\";\n          break;\n          case 'receive':\n            icon = \"Redo\";\n          break;\n          case 'migrate':\n            // icon = \"Sync\";\n            icon = \"Repeat\";\n          break;\n          case 'swap':\n            icon = \"SwapHoriz\";\n          break;\n          case 'swapout':\n            icon = \"SwapHoriz\";\n          break;\n          case 'withdraw':\n            icon = \"ArrowUpward\";\n          break;\n          default:\n            icon = \"Refresh\";\n          break;\n        }\n        output = (\n          <Flex\n            p={'5px'}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            backgroundColor={bgColor}\n            justifyContent={'center'}\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={this.props.isMobile ? '1em' : '1.4em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'hash':\n        if (transaction.hash){\n          output = (\n            <Link\n              target={'_blank'}\n              rel={'nofollow noopener noreferrer'}\n              href={`https://etherscan.io/tx/${transaction.hash}`}\n            >\n              <ShortHash\n                fontSize={1}\n                color={'white'}\n                {...fieldProps}\n                hash={transaction.hash}\n              />\n            </Link>\n          );\n        }\n      break;\n      case 'action':\n        let action = transaction.action;\n        switch (transaction.action) {\n          case 'Swap':\n            action = \"Swap In\";\n          break;\n          case 'SwapOut':\n            action = \"Swap Out\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Text {...fieldProps}>{action.toUpperCase()}</Text>\n        );\n      break;\n      case 'date':\n        const formattedDate = transaction.momentDate.format('DD MMM, YYYY');\n        output = (\n          <Text {...fieldProps}>{formattedDate}</Text>\n        );\n      break;\n      case 'statusIcon':\n        color = theme.colors.transactions.status[transaction.status.toLowerCase()];\n        switch (transaction.status) {\n          case 'Completed':\n            icon = \"Done\";\n          break;\n          case 'Pending':\n            icon = \"Timelapse\";\n          break;\n          case 'Failed':\n            icon = \"ErrorOutline\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Flex\n            p={[0,'1px']}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            width={['24px','26px']}\n            height={['24px','26px']}\n            justifyContent={'center'}\n            border={ this.props.isMobile ? `1px solid ${color}` : `2px solid ${color}` }\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={ this.props.isMobile ? '1em' : '1.2em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'status':\n        output = (\n          <Text {...fieldProps}>{transaction.status}</Text>\n        );\n      break;\n      case 'amount':\n        output = (\n          <SmartNumber {...fieldProps} number={transaction.amount} />\n        );\n      break;\n      case 'tokenIcon':\n        output = (\n          <Image src={`images/tokens/${transaction.tokenSymbol.toUpperCase()}.svg`} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        output = (\n          <Text {...fieldProps}>{transaction.tokenSymbol}</Text>\n        );\n      break;\n      default:\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TransactionField;\n","import theme from '../theme';\nimport React, { Component } from 'react';\nimport styles from './TransactionListFilters.module.scss';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\nimport { Flex, Text, Icon, Radio, Button, Link } from \"rimble-ui\";\n\nclass TransactionListFilters extends Component {\n\n  state = {\n    maxWidth:0.4,\n    minWidth:0.18,\n    maxHeight:425,\n    isOpened:false,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null\n    }\n  }\n\n  setFilter = (filter,value) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:value\n      }\n    }));\n  }\n\n  applyFilters = (toggle=true) => {\n    if (typeof this.props.applyFilters === 'function'){\n      this.props.applyFilters(this.state.activeFilters);\n    }\n    if (toggle){\n      this.toggleOpened();\n    }\n  }\n\n  resetFilter = (filter) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:null\n      }\n    }),() => {\n      this.applyFilters(false);\n    });\n  }\n\n  resetFilters = (toggle=true) => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null\n      }\n    },() => {\n      if (typeof this.props.resetFilters === 'function'){\n        this.props.resetFilters();\n      }\n      if (toggle){\n        this.toggleOpened();\n      }\n    })\n  }\n\n  toggleOpened = () => {\n    this.setState((prevState) => ({\n      isOpened: !prevState.isOpened\n    }));\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={3}\n        top={0}\n        width={1}\n        zIndex={1}\n        flexDirection={'column'}\n        alignItems={'flex-start'}\n        justifyContent={'center'}\n        position={['relative','absolute']}\n      >\n        <DashboardCard\n          cardProps={{\n            py:2,\n            px:3,\n            width:[1, this.state.isOpened ? this.state.maxWidth : this.state.minWidth ],\n            style:{\n              transition:'width 0.3s ease-in-out'\n            }\n          }}\n          isInteractive={ !this.state.isOpened }\n          handleClick={ !this.state.isOpened ? this.toggleOpened : null }\n        >\n          <Flex\n            width={1}\n            style={{\n              cursor:'pointer'\n            }}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'space-between'}\n            onClick={ this.state.isOpened ? this.toggleOpened : null }\n          >\n            <Text\n              fontSize={2}\n              fontWeight={500}\n              color={'copyColor'}\n            >\n              Filters\n            </Text>\n            <Icon\n              color={'copyColor'}\n              size={ this.props.isMobile ? '1.3em' : '1.5em'}\n              name={ this.state.isOpened ? 'Close' : 'Tune' }\n            />\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n            style={{\n              overflow:'hidden',\n              transition:'max-height 0.3s ease-in-out',\n              maxHeight:this.state.isOpened ? this.state.maxHeight : 0\n            }}\n          >\n            <Flex\n              mt={2}\n              py={2}\n              width={1}\n              flexDirection={'row'}\n              borderTop={`1px solid ${theme.colors.divider}`}\n            >\n              {\n                Object.keys(this.props.filters).map((filterCategory) => {\n                  const filterValues = this.props.filters[filterCategory];\n                  return (\n                    <Flex\n                      flexDirection={'column'}\n                      key={`filter_${filterCategory}`}\n                      style={{\n                        flexBasis:'0',\n                        flex:'1 1 0px'\n                      }}\n                    >\n                      <TableCellHeader\n                        pb={2}\n                        fontWeight={3}\n                        fontSize={[0,2]}\n                        color={'cellText'}\n                      >\n                        {filterCategory.toUpperCase()}\n                      </TableCellHeader>\n                      {\n                        Object.keys(filterValues).map((filterValue) => {\n                          const filterLabel = filterValues[filterValue];\n                          const isChecked = this.state.activeFilters[filterCategory]===filterValue;\n                          return (\n                            <Radio\n                              my={2}\n                              fontSize={[0,2]}\n                              label={filterLabel}\n                              checked={isChecked}\n                              className={styles.radioBtn}\n                              key={`filter_${filterCategory}_${filterValue}`}\n                              onChange={ e => this.setFilter(filterCategory,filterValue) }\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                  );\n                })\n              }\n            </Flex>\n            <Flex\n              flexDirection={'row'}\n            >\n              <Button.Text\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.applyFilters}\n              >\n                Apply filters\n              </Button.Text>\n              <Button.Text\n                ml={3}\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.resetFilters}\n              >\n                Reset\n              </Button.Text>\n            </Flex>\n          </Flex>\n        </DashboardCard>\n        {\n          !this.state.isOpened && this.props.activeFilters && Object.values(this.props.activeFilters).filter( v => (v !== null) ).length>0 &&\n            <Flex\n              mt={3}\n              width={1}\n              flexDirection={['column','row']}\n              alignItems={['flex-start','flex-end']}\n              justifyContent={['flex-end','flex-start']}\n            >\n              {\n                Object.keys(this.props.activeFilters).map((filterName) => {\n                  const filterValue = this.props.activeFilters[filterName];\n                  if (filterValue !== null){\n                    const filterLabel = this.props.filters[filterName][filterValue];\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:[2,0],\n                          mr:[0,3],\n                          width:[1,this.state.minWidth]\n                        }}\n                        isInteractive={true}\n                        key={`filter_${filterName}`}\n                      >\n                        <Flex\n                          width={1}\n                          style={{\n                            cursor:'pointer'\n                          }}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                          onClick={e => this.resetFilter(filterName)}\n                        >\n                          <Text\n                            fontSize={2}\n                            fontWeight={500}\n                            color={'cellText'}\n                            style={{\n                              textTransform:'capitalize'\n                            }}\n                          >\n                            {filterLabel}\n                          </Text>\n                          <Icon\n                            name={'Close'}\n                            color={'cellText'}\n                            size={ this.props.isMobile ? '1.3em' : '1.5em'}\n                          />\n                        </Flex>\n                      </DashboardCard>\n                    );\n                  }\n                  return null;\n                })\n              }\n              <Link\n                mt={[2,0]}\n                fontSize={[3,2]}\n                fontWeight={[3]}\n                color={'dark-gray'}\n                hoverColor={'copyColor'}\n                textAlign={['center','left']}\n                onClick={ e => this.resetFilters(false) }\n              >\n                Clear all filters\n              </Link>\n            </Flex>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionListFilters;","import React, { Component } from 'react';\n// import style from './TransactionsList.module.scss';\nimport TableRow from '../TableRow/TableRow';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Heading, Text, Link, Icon } from \"rimble-ui\";\nimport TransactionField from '../TransactionField/TransactionField';\nimport TransactionListFilters from '../TransactionListFilters/TransactionListFilters';\n\nclass TransactionsList extends Component {\n\n  state = {\n    page:1,\n    prevTxs:{},\n    txsPerPage:5,\n    loading:false,\n    totalTxs:null,\n    totalPages:null,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null,\n    },\n    filters:{\n      actions:{\n        deposit:'Deposit',\n        redeem:'Redeem',\n        send:'Send',\n        receive:'Receive',\n        migrate:'Migrate',\n        swap:'Swap-In',\n        swapout:'Swap-Out',\n        withdraw:'Withdraw',\n        // curvein:'CurveIn',\n        // curveout:'CurveOut',\n        // curvezapin:'CurveZapIn',\n        // curvezapout:'CurveZapOut',\n      },\n      status:{\n        completed:'Completed',\n        pending:'Pending',\n        failed:'Failed'\n      },\n      assets:{}\n    },\n    renderedTxs:null,\n    processedTxs:null,\n    lastBlockNumber:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);this.processTxs(page);\n    this.setState({\n      page\n    });\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadTxs();\n  }\n\n  applyFilters = activeFilters => {\n    this.setState({\n      activeFilters\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  resetFilters = () => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null,\n      }\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const transactionsChanged = JSON.stringify(prevProps.transactions) !== JSON.stringify(this.props.transactions);\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n\n    if (tokenChanged || transactionsChanged){\n      this.setState({\n        page:1,\n        prevTxs:{}\n      },()=>{\n        this.loadTxs();\n      })\n      return false;\n    }\n    const pageChanged = prevState.page !== this.state.page;\n    if (pageChanged){\n      this.processTxs();\n    }\n  }\n\n  async loadTxs(count,endBlockNumber='latest'){\n    if (!this.props.account){\n      return false;\n    }\n\n    count = count ? count : 0;\n\n    this.setState({\n      loading:true\n    });\n\n    const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n    // Take last block number, is null take first block number\n    let prevTxs = {...this.state.prevTxs};\n    let lastBlockNumber = Math.max(firstBlockNumber,this.state.lastBlockNumber);\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const assets = {...this.state.filters.assets};\n\n    enabledTokens.forEach((token) => {\n      assets[token] = token;\n    });\n\n    let actions = {...this.state.filters.actions};\n    \n    const enabledActions = typeof this.props.enabledActions !== 'undefined' ? this.props.enabledActions : [];\n\n    if (enabledActions.length){\n      actions = {};\n      enabledActions.forEach( action => {\n        actions[action.toLowerCase()] = action;\n      });\n    }\n\n    const etherscanTxs = await this.functionsUtil.getEtherscanTxs(this.props.account,lastBlockNumber,'latest',enabledTokens);\n\n    // Merge new txs with previous ones\n    if (etherscanTxs && etherscanTxs.length){\n      etherscanTxs.forEach((tx) => {\n        if (tx.hashKey){\n          prevTxs[tx.hashKey] = tx;\n        } else {\n          prevTxs[`t${tx.timeStamp}`] = tx;\n        }\n      });\n    }\n\n    const lastTx = Object.values(prevTxs).pop();\n\n    // Update last block number\n    if (lastTx && lastTx.blockNumber && (!this.state.lastBlockNumber || lastTx.blockNumber>this.state.lastBlockNumber)){\n      lastBlockNumber = parseInt(lastTx.blockNumber)+1;\n    }\n\n    return this.setState( prevState => ({\n      prevTxs,\n      loading:false,\n      lastBlockNumber,\n      filters:{\n        ...prevState.filters,\n        assets,\n        actions\n      }\n    }), () => {\n      this.processTxs()\n    });\n  };\n\n  processTxs = (page=null) => {\n\n    page = page ? page : this.state.page;\n\n    const availableActions = Object.keys(this.state.filters.actions).map( action => (action.toLowerCase()) );\n\n    // Sort prevTxs by timeStamp\n    const txsIndexes = Object.values(this.state.prevTxs)\n                        .filter(tx => (!!parseFloat(tx.value))) // Filter txs with value\n                        .filter(tx => (\n                          (this.state.activeFilters.status === null || tx.status.toLowerCase() === this.state.activeFilters.status.toLowerCase()) && \n                          (this.state.activeFilters.assets === null || tx.token.toLowerCase() === this.state.activeFilters.assets.toLowerCase()) &&\n                          ( availableActions.includes(tx.action.toLowerCase()) && (this.state.activeFilters.actions === null || (tx.action.toLowerCase() === this.state.activeFilters.actions.toLowerCase()) ))\n                        )) // Filter by activeFilters\n                        .sort((a,b) => (a.timeStamp > b.timeStamp) ? -1 : 1 );\n\n    // Calculate max number of pages\n    const totalTxs = txsIndexes.length;\n    const totalPages = Math.ceil(totalTxs/this.state.txsPerPage);\n\n    const processedTxs = [];\n\n    // console.log(this.state.prevTxs,txsIndexes);\n\n    txsIndexes.forEach((tx, i) => {\n      const selectedToken = tx.token;\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const decimals = Math.min(tokenConfig.decimals,8);\n      \n      const date = new Date(tx.timeStamp*1000);\n      const action = tx.action ? tx.action : this.functionsUtil.getTxAction(tx,tokenConfig);\n\n      const parsedValue = parseFloat(tx.value);\n\n      const amount = parsedValue ? (this.props.isMobile ? parsedValue.toFixed(4) : parsedValue.toFixed(decimals)) : '-';\n      const momentDate = this.functionsUtil.strToMoment(date);\n\n      // Save new params\n      tx.status = tx.status ? tx.status : 'Completed';\n      tx.action = action;\n      tx.momentDate = momentDate;\n      tx.amount = amount;\n\n      if (i>=((page-1)*this.state.txsPerPage) && i<((page-1)*this.state.txsPerPage)+this.state.txsPerPage) {\n        processedTxs.push(tx);\n      }\n    });\n\n    // console.log('processedTxs',this.state.page,txsIndexes,processedTxs);\n\n    const loading = false;\n  \n    this.setState({\n      loading,\n      totalTxs,\n      totalPages,\n      processedTxs\n    });\n  }\n\n  render() {\n\n    const hasActiveFilters = Object.values(this.state.activeFilters).filter( v => (v !== null) ).length>0;\n\n    // console.log('processedTxs',this.state.processedTxs);\n    const processedTxs = this.state.processedTxs ? Object.values(this.state.processedTxs) : null;\n\n    return (\n      <Flex flexDirection={'column'} width={1} m={'0 auto'}>\n        {\n          this.state.loading ? (\n            <FlexLoader\n              flexProps={{\n                flexDirection:'row',\n                minHeight:this.props.height\n              }}\n              loaderProps={{\n                size:'30px'\n              }}\n              textProps={{\n                ml:2\n              }}\n              text={'Loading transactions...'}\n            />\n          ) : (\n            <Flex\n              width={1}\n              position={'relative'}\n              flexDirection={'column'}\n              id={'transactions-list-container'}\n              pt={[0, hasActiveFilters ? '116px' : 5]}\n            >\n              <TransactionListFilters\n                {...this.props}\n                filters={this.state.filters}\n                activeFilters={this.state.activeFilters}\n                resetFilters={this.resetFilters.bind(this)}\n                applyFilters={this.applyFilters.bind(this)}\n              />\n              {\n                processedTxs && processedTxs.length ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <TableHeader\n                      cols={this.props.cols}\n                      isMobile={this.props.isMobile}\n                    />\n                    <Flex\n                      id={'transactions-list'}\n                      flexDirection={'column'}\n                    >\n                      {\n                        processedTxs.map( (tx,index) => {\n                          const txHash = tx.hash;\n                          const txHashKey = tx.hashKey;\n                          const handleClick = (e) => {\n                            return (txHash ? window.open(`https://etherscan.io/tx/${txHash}`) : null);\n                          };\n\n                          return (\n                            <TableRow\n                              {...this.props}\n                              rowProps={{\n                                isInteractive:true\n                              }}\n                              hash={txHash}\n                              transaction={tx}\n                              key={`tx-${index}`}\n                              handleClick={handleClick}\n                              rowId={`tx-col-${txHashKey}`}\n                              cardId={`tx-card-${txHashKey}`}\n                              fieldComponent={TransactionField}\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                    <Flex\n                      height={'50px'}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'flex-end'}\n                      id={'transactions-list-pagination'}\n                    >\n                      <Flex mr={3}>\n                        <Link mr={1} onClick={ e => this.prevPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowLeft'}\n                            size={'2em'}\n                            color={ this.state.page>1 ? '#4f4f4f' : '#d8d8d8' }\n                          />\n                        </Link>\n                        <Link onClick={ e => this.nextPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowRight'}\n                            size={'2em'}\n                            color={ this.state.page<this.state.totalPages ? '#4f4f4f' : '#d8d8d8' }\n                          />\n                        </Link>\n                      </Flex>\n                      <Flex alignItems={'center'}>\n                        <Text \n                          fontSize={1}\n                          fontWeight={3}\n                          color={'cellText'}\n                        >\n                          Page {this.state.page} of {this.state.totalPages}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontWeight={2} fontSize={[2]} color={'dark-gray'}>\n                    There are no transactions\n                  </Heading.h3>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionsList;\n","import theme from '../theme';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Card, Flex, Image, Text } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass EarningsEstimation extends Component {\n  state = {\n    tokensEarnings:null,\n    estimationStepsPerc:null,\n    estimationStepsOptions:null,\n    estimationStepsDefaultOption:null,\n    estimationSteps:{\n      0:{\n        'Month':{\n          perc:1/12,\n          width:1/3\n        },\n        '2 months':{\n          perc:1/6,\n          width:1/3\n        },\n        '3 months':{\n          perc:1/4,\n          width:1/3,\n          optionName:'3M'\n        }\n      },\n      25:{\n        '3 months':{\n          perc:3/12,\n          width:3/12\n        },\n        '8 months':{\n          perc:8/12,\n          width:5/12\n        },\n        'Year':{\n          perc:1,\n          width:4/12,\n          optionName:'1Y'\n        }\n      },\n      90:{\n        'Year':{\n          perc:1,\n          width:1/3,\n        },\n        '2 Years':{\n          perc:2,\n          width:1/3,\n        },\n        '5 Years':{\n          perc:5,\n          width:3/5,\n          optionName:'5Y'\n        }\n      }\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  setEstimationStepsPerc(estimationStepsPerc){\n    this.setState({\n      estimationStepsPerc\n    });\n  }\n\n  async loadEarnings(){\n    let tokensEarnings = {};\n    let estimationStepsPerc = 0;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n    const amountLents = await this.functionsUtil.getAmountLent(this.props.enabledTokens,this.props.account);\n\n    const aggregatedEarnings = {\n      earnings:this.functionsUtil.BNify(0),\n      amountLent:this.functionsUtil.BNify(0),\n      earningsYear:this.functionsUtil.BNify(0),\n    };\n\n    await this.functionsUtil.asyncForEach(Object.keys(amountLents),async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n\n      const [amountLent,avgBuyPrice,idleTokenPrice] = await Promise.all([\n        this.functionsUtil.convertTokenBalance(amountLents[token],token,tokenConfig,isRisk),\n        this.functionsUtil.getAvgBuyPrice([token],this.props.account),\n        this.functionsUtil.getIdleTokenPrice(tokenConfig)\n      ]);\n\n      const earningsPerc = idleTokenPrice.div(avgBuyPrice[token]).minus(1);\n      const earnings = amountLent.times(earningsPerc);\n\n      let earningsYear = 0;\n      let tokenAPY = 0;\n      const tokenAprs = await this.functionsUtil.getTokenAprs(tokenConfig);\n      if (tokenAprs && tokenAprs.avgApr !== null){\n        tokenAPY = tokenAprs.avgApy;\n        earningsYear = amountLent.times(tokenAPY.div(100));\n      }\n\n      const earningsPercStep = Math.floor(earnings.div(earningsYear).times(100));\n      \n      const possibleSteps = Object.keys(this.state.estimationSteps).filter(perc => perc<earningsPercStep);\n      const maxPossibleStep = parseInt(possibleSteps.pop());\n      estimationStepsPerc = Math.max(estimationStepsPerc,maxPossibleStep);\n\n      // console.log(token,amountLent.toFixed(5),earnings.toFixed(5),earningsYear.toFixed(5),tokenConfig,tokenAprs,tokenAPR.toFixed(5),tokenAPY.toFixed(5),earningsPercStep,maxPossibleStep,estimationStepsPerc);\n\n      if (!this.functionsUtil.BNify(amountLent).isNaN() && !this.functionsUtil.BNify(idleTokenPrice).isNaN() && !this.functionsUtil.BNify(earnings).isNaN() && !this.functionsUtil.BNify(earningsYear).isNaN()){\n        tokensEarnings[token] = {\n          earnings,\n          amountLent,\n          earningsYear,\n          idleTokenPrice\n        };\n\n        // const earningsUSD = await this.functionsUtil.convertTokenBalance(earningsYearings,token,tokenConfig,isRisk);\n        // const amountLentUSD = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n        // const earningsYearUSD = await this.functionsUtil.convertTokenBalance(earningsYear,token,tokenConfig,isRisk);\n\n        aggregatedEarnings.earnings = aggregatedEarnings.earnings.plus(earnings);\n        aggregatedEarnings.amountLent = aggregatedEarnings.amountLent.plus(amountLent);\n        aggregatedEarnings.earningsYear = aggregatedEarnings.earningsYear.plus(earningsYear);\n      }\n    });\n\n    const orderedTokensEarnings = {};\n    Object.keys(amountLents).forEach( token => {\n      if (tokensEarnings[token]){\n        orderedTokensEarnings[token] = tokensEarnings[token];\n      }\n    });\n\n    tokensEarnings = orderedTokensEarnings;\n\n    // Add USD aggregated earnings\n    if (Object.keys(tokensEarnings).length>1){\n      tokensEarnings['USD'] = aggregatedEarnings;\n    }\n\n    let estimationStepsDefaultOption = null;\n    const estimationStepsOptions = Object.keys(this.state.estimationSteps).map( step => {\n      const estimationStep = Object.values(this.state.estimationSteps[step]).pop();\n      const label = estimationStep.optionName ? estimationStep.optionName : Object.keys(this.state.estimationSteps[step]).pop();\n      const value = parseInt(step);\n      const option = { value, label };\n\n      if (value === estimationStepsPerc){\n        estimationStepsDefaultOption = option;\n      }\n      return option;\n    });\n\n    // console.log(estimationStepsOptions,estimationStepsDefaultOption)\n\n    this.setState({\n      tokensEarnings,\n      estimationStepsPerc,\n      estimationStepsOptions,\n      estimationStepsDefaultOption,\n    });\n  }\n\n  render() {\n\n    if (!this.state.tokensEarnings){\n      return (\n        <FlexLoader\n          flexProps={{\n            flexDirection:'row',\n            minHeight:this.props.height\n          }}\n          loaderProps={{\n            size:'30px'\n          }}\n          textProps={{\n            ml:2\n          }}\n          text={'Loading estimations...'}\n        />\n      );\n    }\n\n    const estimationSteps = this.state.estimationSteps[this.state.estimationStepsPerc] ? this.state.estimationSteps[this.state.estimationStepsPerc] : this.state.estimationSteps[0];\n\n    return (\n      <Card\n        pr={0}\n        my={1}\n        width={1}\n        px={[3,4]}\n        py={[2,3]}\n        boxShadow={1}\n        borderRadius={2}\n      >\n        <Flex\n          mt={2}\n          mb={3}\n          zIndex={9999}\n          justifyContent={'flex-end'}\n        >\n          <Flex\n            zIndex={9999}\n            width={[1,0.2]}\n            flexDirection={'column'}\n          >\n            <GenericSelector\n              innerProps={{\n                p:0,\n                px:1\n              }}\n              name={'estimation-step'}\n              options={this.state.estimationStepsOptions}\n              onChange={ v => this.setEstimationStepsPerc(v) }\n              defaultValue={this.state.estimationStepsDefaultOption}\n            />\n          </Flex>\n        </Flex>\n        {\n          Object.keys(this.state.tokensEarnings).map((token,tokenIndex) => {\n            const tokenEarnings = this.state.tokensEarnings[token];\n            const estimationStepPerc = this.functionsUtil.BNify(Object.values(estimationSteps).pop().perc);\n            const finalEarnings = tokenEarnings.earningsYear.times(estimationStepPerc);\n            const cursorPerc = Math.min(1,parseFloat(tokenEarnings.earnings.div(finalEarnings)));\n            const tokenRGBColor = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','rgb']).join(',');\n            // console.log(tokenEarnings.earnings.toFixed(10),tokenEarnings.earningsYear.toFixed(10),finalEarnings.toFixed(10),cursorPerc.toFixed(10),estimationStepPerc.toFixed(10));\n            return (\n              <Flex\n                id={`asset-${token}`}\n                flexDirection={'row'}\n                key={`asset-${token}`}\n                borderTop={ token === 'USD' ? `1px solid ${theme.colors.divider}` : null }\n              >\n                <Flex\n                  width={[1,0.93]}\n                  position={'relative'}\n                >\n                  <Flex\n                    width={1}\n                    height={'100%'}\n                    position={'absolute'}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                    >\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      height={'100%'}\n                      flexDirection={'row'}\n                    >\n                      {\n                        Object.keys(estimationSteps).map((label,estimateIndex) => {\n                          const estimationStep = estimationSteps[label];\n                          const estimationStepEarnings = tokenEarnings.earningsYear.times(this.functionsUtil.BNify(estimationStep.perc));\n                          let estimationStepEarningsFormatted = this.functionsUtil.formatMoney(estimationStepEarnings,this.props.isMobile ? 2 : estimationStepEarnings.lt(1) ? 3 : 2);\n                          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n                          if (conversionRateField){\n                            estimationStepEarningsFormatted = '$ '+estimationStepEarningsFormatted;\n                          }\n                          return (\n                            <Flex\n                              pr={2}\n                              justifyContent={'flex-end'}\n                              width={estimationStep.width}\n                              pt={ token === 'USD' ? 2 : null }\n                              key={`asset-estimate-${token}-${estimateIndex}`}\n                              borderRight={`1px solid ${theme.colors.divider}`}\n                            >\n                              <Text\n                                fontWeight={[3,4]}\n                                fontSize={[0,'1.2em']}\n                                style={{\n                                  wordBreak:'break-all'\n                                }}\n                                color={tokenEarnings.earnings.gte(estimationStepEarnings) ? 'copyColor' : 'legend'}\n                              >\n                                {estimationStepEarningsFormatted}\n                              </Text>\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                  <Flex\n                    width={1}\n                    zIndex={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                    pt={ token === 'USD' ? '2.8em' : '2.2em' }\n                    pb={ tokenIndex<Object.keys(this.state.tokensEarnings).length-1 ? '1em' : 0 }\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                      justifyContent={['flex-start','flex-end']}\n                    >\n                      <Text\n                        pr={[0,2]}\n                        fontSize={[0,3]}\n                        fontWeight={[3,4]}\n                      >\n                        {token}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      flexDirection={'row'}\n                      height={['20px','35px']}\n                      alignItems={'flex-start'}\n                    >\n                      <Flex\n                        height={'100%'}\n                        width={cursorPerc}\n                        backgroundColor={'#ffffff'}\n                      >\n                        <Flex\n                          height={'100%'}\n                          width={'100%'}\n                          borderRadius={['0 20px 20px 0','0 35px 35px 0']}\n                          style={{background:`linear-gradient(90deg, rgba(${tokenRGBColor},0) 0%, rgba(${tokenRGBColor},0.1) 30%, rgba(${tokenRGBColor},1) 100%)`}}\n                        ></Flex>\n                      </Flex>\n                      <Flex\n                        pl={[2,3]}\n                        width={'auto'}\n                        height={'100%'}\n                        alignItems={'center'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Image src={`images/tokens/${token}.svg`} height={['1.4em','2.2em']} />\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                </Flex>\n                {\n                  !this.props.isMobile && \n                    <Flex width={0.07} alignItems={'flex-start'} justifyContent={'flex-end'}>\n                    </Flex>\n                }\n              </Flex>\n            )\n          })\n        }\n        <Flex\n          flexDirection={'row'}\n        >\n          <Flex\n            width={[1,0.93]}\n            position={'relative'}\n          >\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <Flex width={[0.15,0.1]}></Flex>\n              <Flex\n                width={[0.85,0.9]}\n                flexDirection={'row'}\n              >\n                {\n                  Object.keys(estimationSteps).map((estimationLabel,estimateIndex) => {\n                    const estimationStep = estimationSteps[estimationLabel];\n                    return (\n                      <Flex\n                        pt={2}\n                        pr={[1,2]}\n                        justifyContent={'flex-end'}\n                        width={estimationStep.width}\n                        key={`estimate-label-${estimateIndex}`}\n                        borderRight={`1px solid ${theme.colors.divider}`}\n                      >\n                        <Text\n                          fontWeight={3}\n                          fontSize={[0,2]}\n                          color={'legend'}\n                        >\n                          {estimationLabel}\n                        </Text>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </Flex>\n          {\n            !this.props.isMobile && \n              <Flex width={0.07} alignItems={'flex-start'} justifyContent={'center'}>\n                <Text fontWeight={4} fontSize={3}></Text>\n              </Flex>\n          }\n        </Flex>\n      </Card>\n    );\n  }\n}\n\nexport default EarningsEstimation;\n","import Title from '../Title/Title';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetsList from '../AssetsList/AssetsList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport PortfolioDonut from '../PortfolioDonut/PortfolioDonut';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport PortfolioEquity from '../PortfolioEquity/PortfolioEquity';\nimport { Flex, Box, Heading, Text, Tooltip, Icon } from \"rimble-ui\";\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport EarningsEstimation from '../EarningsEstimation/EarningsEstimation';\n\n// const env = process.env;\n\nclass StrategyPage extends Component {\n\n  state = {\n    tokensToMigrate:{},\n    aggregatedValues:[],\n    depositedTokens:null,\n    remainingTokens:null,\n    portfolioLoaded:false,\n    availableGovTokens:null,\n    portfolioEquityStartDate:null,\n    portfolioEquityQuickSelection:'week'\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    await this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setStateSafe({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  async loadPortfolio(){\n    // Load portfolio if account is set\n    if (this.props.account){\n\n      const newState = {};\n\n      // Get deposited tokens\n      const portfolio = await this.functionsUtil.getAccountPortfolio(this.props.availableTokens,this.props.account);\n\n      if (portfolio){\n        const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.functionsUtil.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n        newState.depositedTokens = depositedTokens;\n\n        const isRisk = this.props.selectedStrategy === 'risk';\n\n        let avgAPY = this.functionsUtil.BNify(0);\n        let avgScore = this.functionsUtil.BNify(0);\n        let totalEarnings = this.functionsUtil.BNify(0);\n        let totalAmountLent = this.functionsUtil.BNify(0);\n\n        await this.functionsUtil.asyncForEach(depositedTokens,async (token) => {\n          const tokenConfig = this.props.availableTokens[token];\n\n          const [tokenAprs,idleTokenPrice,tokenScore,avgBuyPrice,amountLent] = await Promise.all([\n            this.functionsUtil.getTokenAprs(tokenConfig),\n            this.functionsUtil.getIdleTokenPrice(tokenConfig),\n            this.functionsUtil.getTokenScore(tokenConfig,isRisk),\n            this.functionsUtil.getAvgBuyPrice([token],this.props.account),\n            this.functionsUtil.getAmountLent([token],this.props.account)\n          ]);\n\n          const amountLentToken = await this.functionsUtil.convertTokenBalance(amountLent[token],token,tokenConfig,isRisk);\n\n          const tokenAPY = this.functionsUtil.BNify(tokenAprs.avgApy);\n          const tokenWeight = portfolio.tokensBalance[token].tokenBalance.div(portfolio.totalBalance);\n          const tokenEarningsPerc = idleTokenPrice.div(avgBuyPrice[token]).minus(1);\n          const tokenEarnings = amountLentToken ? amountLentToken.times(tokenEarningsPerc) : 0;\n\n          // console.log(token,idleTokenPrice.toFixed(5),avgBuyPrice[token].toFixed(5),amountLentToken.toFixed(5),tokenEarningsPerc.toFixed(5),tokenEarnings.toFixed(5));\n\n          if (tokenEarnings){\n            totalEarnings = totalEarnings.plus(tokenEarnings);\n          }\n\n          if (tokenAPY){\n            avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n          }\n\n          if (tokenScore){\n            avgScore = avgScore.plus(tokenScore.times(tokenWeight));\n          }\n\n          if (amountLentToken){\n            totalAmountLent = totalAmountLent.plus(amountLentToken);\n          }\n        });\n\n        // Add gov tokens to earnings\n        const govTokensTotalBalance = await this.functionsUtil.getGovTokensUserTotalBalance(this.props.account,this.props.availableTokens,'DAI');\n        const govTokensUserBalance = await this.functionsUtil.getGovTokensUserBalances(this.props.account,this.props.availableTokens,null);\n        const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n          const balance = govTokensUserBalance[govToken];\n          if (balance.gt(0)){\n            return `+${balance.toFixed(2)} ${govToken}`;\n          } else {\n            return null;\n          }\n        }).filter(v => (v !== null)) : null;\n\n        const earningsStart = totalEarnings;\n        const earningsEnd = totalAmountLent.times(avgAPY.div(100));\n\n        newState.aggregatedValues = [\n          {\n            flexProps:{\n              pr:[0,2],\n              width:[1,1/3],\n            },\n            props:{\n              label:'',\n              title:'Avg APY',\n              value:avgAPY.toFixed(2)+'<small>%</small>',\n              description:this.functionsUtil.getGlobalConfig(['messages','apyLong'])\n            }\n          },\n          {\n            flexProps:{\n              px:[0,2],\n              width:[1,1/3],\n            },\n            props:{\n              title:'Total Earnings',\n              description:'Total earnings does not include accrued governance tokens: '+(govTokensTotalBalance && govTokensTotalBalance.gt(0) ? ` (${govTokensTotalBalanceTooltip.join(' / ')})` : ''),\n              children:(\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                  justifyContent={'center'}\n                >\n                  <CountUp\n                    delay={0}\n                    decimals={8}\n                    decimal={'.'}\n                    separator={''}\n                    useEasing={false}\n                    duration={31536000}\n                    end={parseFloat(earningsEnd)}\n                    start={parseFloat(earningsStart)}\n                    formattingFn={ n => '$ '+this.functionsUtil.abbreviateNumber(n,8,10,8) }\n                  >\n                    {({ countUpRef, start }) => (\n                      <span\n                        ref={countUpRef}\n                        style={{\n                          lineHeight:1,\n                          color:this.props.theme.colors.copyColor,\n                          fontFamily:this.props.theme.fonts.counter,\n                          fontWeight: this.props.isMobile ? 600 : 700,\n                          fontSize:this.props.isMobile ? '21px' : '1.7em',\n                        }}\n                      />\n                    )}\n                  </CountUp>\n                  {\n                    /*\n                    govTokensTotalBalance && govTokensTotalBalance.gt(0) &&\n                      <Text\n                        fontSize={1}\n                        fontWeight={2}\n                        color={'cellText'}\n                        textAlign={'center'}\n                      >\n                        {govTokensTotalBalanceTooltip.join(' / ')}\n                      </Text>\n                    */\n                  }\n                </Flex>\n              ),\n              label:'',\n            }\n          },\n          {\n            flexProps:{\n              pl:[0,2],\n              width:[1,1/3],\n            },\n            props:{\n              title:'Avg Risk Score',\n              value:avgScore.toFixed(1),\n              label:''\n            }\n          },\n        ];\n      }\n\n      // Get tokens to migrate\n      const tokensToMigrate = await this.functionsUtil.getTokensToMigrate(this.props.selectedStrategy);\n\n      newState.tokensToMigrate = tokensToMigrate;\n      newState.portfolioLoaded = true;\n\n      const remainingTokens = Object.keys(this.props.availableTokens).filter(token => (!newState.depositedTokens.includes(token) && !Object.keys(newState.tokensToMigrate).includes(token)) );\n      newState.remainingTokens = remainingTokens;\n\n      // Load and process Etherscan Txs\n      const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n      await this.functionsUtil.getEtherscanTxs(this.props.account,firstBlockNumber,'latest',Object.keys(this.props.availableTokens))\n\n      // Portfolio loaded\n      this.setStateSafe(newState);\n    // Show available assets for not logged users\n    } else {\n      this.setStateSafe({\n        tokensToMigrate:{},\n        depositedTokens:[],\n        portfolioLoaded:true,\n        remainingTokens:Object.keys(this.props.availableTokens),\n      });\n    }\n  }\n\n  render(){\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    const apyLong = this.functionsUtil.getGlobalConfig(['messages','apyLong']);\n    const riskScore = this.functionsUtil.getGlobalConfig(['messages','riskScore']);\n    const yieldFarming = this.functionsUtil.getGlobalConfig(['messages','yieldFarming']);\n\n    return (\n      <Box width={1}>\n        <Title mb={[3,4]}>{this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'title'])} strategy</Title>\n        {\n          !this.state.portfolioLoaded ? (\n            <FlexLoader\n              textProps={{\n                textSize:4,\n                fontWeight:2\n              }}\n              loaderProps={{\n                mb:3,\n                size:'40px'\n              }}\n              flexProps={{\n                minHeight:'50vh',\n                flexDirection:'column'\n              }}\n              text={'Loading portfolio...'}\n            />\n          ) : (\n            <>\n              {\n                this.state.depositedTokens.length>0 ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      {\n                        this.state.aggregatedValues.map((v,i) => (\n                          <Flex\n                            {...v.flexProps}\n                            flexDirection={'column'}\n                            key={`aggregatedValue_${i}`}\n                          >\n                            <DashboardCard\n                              cardProps={{\n                                py:[3,4],\n                                mb:[2,0]\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                {\n                                  v.props.children ? v.props.children : (\n                                    <Text\n                                      lineHeight={1}\n                                      fontWeight={[3,4]}\n                                      color={'copyColor'}\n                                      fontFamily={'counter'}\n                                      fontSize={[4,'1.7em']}\n                                      dangerouslySetInnerHTML={{ __html: v.props.value }}\n                                    >\n                                    </Text>\n                                  )\n                                }\n                                  <Flex\n                                    mt={2}\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    <Text\n                                      fontWeight={2}\n                                      fontSize={[1,2]}\n                                      color={'cellText'}\n                                    >\n                                      {v.props.title}\n                                    </Text>\n                                  {\n                                    v.props.description && (\n                                      <Tooltip\n                                        placement={'bottom'}\n                                        message={v.props.description}\n                                      >\n                                        <Icon\n                                          ml={2}\n                                          name={\"Info\"}\n                                          size={'1em'}\n                                          color={'cellTitle'}\n                                        />\n                                      </Tooltip>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            </DashboardCard>\n                          </Flex>\n                        ))\n                      }\n                    </Flex>\n                    <Flex\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.33]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <PortfolioDonut\n                            {...this.props}\n                            parentId={'portfolio-composition'}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.66]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquity\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mb={3}\n                    mx={'auto'}\n                    width={[1,0.8]}\n                    aligItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontWeight={2}\n                      fontSize={[1,2]}\n                      textAlign={'center'}\n                    >\n                      {\n                        this.props.isMobile ?\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descShort'])\n                        :\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descLong'])\n                      }\n                    </Text>\n                  </Flex>\n                )\n              }\n              <Flex\n                width={1}\n                id={'available-assets'}\n                flexDirection={'column'}\n                mb={!this.state.depositedTokens.length ? 4 : 0}\n              >\n                {\n                  (this.state.depositedTokens.length>0 || Object.keys(this.state.tokensToMigrate).length>0 || this.state.remainingTokens.length>0 ) &&\n                    <Title my={[3,4]}>Available assets</Title>\n                }\n                <Flex width={1} flexDirection={'column'}>\n                  {\n                    Object.keys(this.state.tokensToMigrate).length>0 &&\n                    <Flex\n                      width={1}\n                      mb={[3,4]}\n                      id={\"migrate-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Assets to migrate\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.tokensToMigrate)}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.15]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.12],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.29,0.15],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.21,0.12],\n                            },\n                            fields:[\n                              {\n                                name:'score'\n                              }\n                            ]\n                          },\n                          {\n                            title:'BALANCE',\n                            mobile:false,\n                            props:{\n                              width:[0.16,0.14],\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'amountToMigrate',\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.15],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens'\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.29 : 0 ,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: 'Migrate',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                  this.state.depositedTokens.length>0 &&\n                    <Flex\n                      mb={ this.state.remainingTokens.length>0 ? [3,4] : 0 }\n                      width={1}\n                      id={\"deposited-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Deposited assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.depositedTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            mobile:false,\n                            props:{\n                              width:[0.12,0.09],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.30,0.14],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.21,0.10],\n                            },\n                            parentProps:{\n                              alignItems:['center','flex-start'],\n                            },\n                            fields:[\n                              {\n                                name:'score',\n                              }\n                            ]\n                          },\n                          {\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.22,0.13],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'amountLent'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.11],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'EARNINGS',\n                            props:{\n                              width:[0.15,0.13],\n                              textAlign:'center'\n                            },\n                            parentProps:{\n                              alignItems:'center',\n                              flexDirection:'column',\n                            },\n                            fields:[\n                              {\n                                name:'earnings',\n                                props:{\n                                  decimals:3\n                                }\n                              },\n                              {\n                                name:'earningsPerc',\n                                showLoader:false,\n                                showDirection:false,\n                                props:{\n                                  fontSize:0,\n                                  decimals:3\n                                }\n                              }\n                            ]\n                          },\n                          /*\n                          {\n                            title:'EARNINGS %',\n                            props:{\n                              width:[0.27,0.14],\n                            },\n                            fields:[\n                              {\n                                name:'earningsPerc'\n                              }\n                            ]\n                          },\n                          */\n                          {\n                            title:'',\n                            mobile:false,\n                            props:{\n                              width:0.17,\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Manage',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'redeem',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                    this.state.remainingTokens.length>0 &&\n                    <Flex id=\"remaining-assets\" width={1} flexDirection={'column'}>\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Available assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.remainingTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.10],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.31,this.state.depositedTokens.length>0 ? 0.14 : 0.14],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.22,0.10],\n                            },\n                            fields:[\n                              {\n                                name:'score'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.11],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APR LAST WEEK',\n                            mobile:false,\n                            props:{\n                              width:0.25,\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'aprChart',\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.26 : 0 , 0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: (props) => {\n                                  return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'Migrate' : 'Deposit';\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                },\n                                funcProps:{\n                                  mainColor: (props) => {\n                                    return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'migrate' : 'deposit'\n                                  }\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                </Flex>\n              </Flex>\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id={\"yield-farming\"}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Yield Farming</Title>\n                    <AssetsList\n                      enabledTokens={Object.keys(govTokens)}\n                      cols={[\n                        {\n                          title:'TOKEN',\n                          props:{\n                            width:[0.3,0.15]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:2,\n                                height:['1.4em','2.3em']\n                              }\n                            },\n                            {\n                              name:'tokenName'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'BALANCE',\n                          props:{\n                            width:[0.33, 0.25],\n                          },\n                          fields:[\n                            {\n                              name:'tokenBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            }\n                          ]\n                        },\n                        {\n                          title:'REDEEMABLE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                          props:{\n                            width:[0.35,0.30],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'redeemableBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            },\n                          ]\n                        },\n                        {\n                          title:'DISTRIBUTION',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                          props:{\n                            width:[0.35,0.30],\n                          },\n                          fields:[\n                            {\n                              name:'userDistributionSpeed',\n                              props:{\n                                decimals:6\n                              }\n                            }\n                          ]\n                        },\n                        /*\n                        {\n                          mobile:false,\n                          title:'APR',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenApr']),\n                          props:{\n                            width:[0.2,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'apr',\n                            }\n                          ]\n                        },\n                        {\n                          title:'TOKEN PRICE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','tokenPrice']),\n                          mobile:false,\n                          props:{\n                            width: 0.17,\n                          },\n                          parentProps:{\n                            width:1,\n                            pr:[2,4]\n                          },\n                          fields:[\n                            {\n                              name:'tokenPrice',\n                              props:{\n                                unit:'$',\n                                unitPos:'left',\n                                unitProps:{\n                                  mr:1,\n                                  fontWeight:3,\n                                  fontSize:[0,2],\n                                  color:'cellText'\n                                }\n                              }\n                            }\n                          ]\n                        },\n                        */\n                      ]}\n                      {...this.props}\n                      availableTokens={govTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id=\"earnings-estimation\"\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Estimated earnings</Title>\n                    <EarningsEstimation\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.props.account && this.state.depositedTokens.length>0 && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={[]}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.15,0.24]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.15,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.32,0.23],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.22],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:0.19,\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.15,0.20],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','1.6em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default StrategyPage;","import React from \"react\";\nimport styles from './ModalCard.module.scss';\nimport { Box, Flex, Card, Button, Heading, Image } from \"rimble-ui\";\n\nconst ModalCard = ({children, closeFunc, ...props}) => (\n  <Card\n    p={0}\n    border={0}\n    mx={'auto'}\n    my={'auto'}\n    height={'auto'}\n    borderRadius={2}\n    overflow={'auto'}\n    width={ props.width ? props.width : 'auto' }\n    minWidth={ props.minWidth ? props.minWidth : 'auto' }\n    maxWidth={ props.maxWidth ? props.maxWidth : '960px'}\n  >\n    <Box\n      top={'0'}\n      zIndex={1}\n      right={'0'}\n      position={\"absolute\"}\n    >\n      <Button.Text\n        icononly\n        icon={\"Close\"}\n        size={'2.5em'}\n        onClick={closeFunc}\n        mainColor={ props.mainColor ? props.mainColor :  'copyColor' }\n      />\n    </Box>\n    <Flex\n      height={'100%'}\n      flex={'1 1 auto'}\n      flexDirection={'column'}\n      className={[ props.bgLayer ? styles.bg : null]}\n      style={{\n        overflow: 'auto',\n        background: props.background ? props.background : 'url(images/bg-bottom-right.png) no-repeat bottom right',\n        backgroundSize: !props.background ? '65%' : null\n      }}\n    >\n      {children}\n    </Flex>\n  </Card>\n);\n\nModalCard.Header = (props) => (\n  <Box\n    width={1}\n    mb={[2,3]}\n    pb={[2,2]}\n    pt={ props.pt ? props.pt : (props.icon ? 3 : [5,3]) }\n    borderBottom={ props.borderBottom ? props.borderBottom : '1px solid #eee' }\n  >\n    <Flex\n      px={[1,2]}\n      alignItems={'center'}\n      flexDirection={'column'}\n    >\n      { props.icon && <Image width={ props.iconHeight ? props.iconHeight : '50px' } src={props.icon} /> }\n      <Heading.h3\n        mb={0}\n        fontSize={[3,3]}\n        color={'copyColor'}\n        textAlign={'center'}\n        mt={props.icon ? 2 : 0}\n        fontFamily={'sansSerif'}\n        {...props.titleProps}\n      >\n        {props.title}\n      </Heading.h3>\n      {\n        props.subtitle &&\n        <Heading.h4\n          pt={[1,2]}\n          fontWeight={2}\n          fontSize={[2,2]}\n          lineHeight={1.5}\n          color={'dark-gray'}\n          textAlign={'center'}\n          {...props.subtitleProps}\n        >\n          {props.subtitle}\n        </Heading.h4>\n      }\n      {\n        props.subtitle2 &&\n        <Heading.h4 pt={0} fontSize={[2,2]} textAlign={'center'} fontWeight={2} lineHeight={1.5} color={'dark-gray'}>\n          {props.subtitle2}\n        </Heading.h4>\n      }\n    </Flex>\n  </Box>\n);\n\nModalCard.Body = ({children, ...props}) => (\n  <Box\n    width={1}\n    px={[3,5]}\n    {...props}\n  >\n    {children}\n  </Box>\n);\n/*\nModalCard.Body = ({children, ...props}) => (\n  <Flex flex={'1 1 auto'} style={{ overflow: 'auto' }} >\n    <Box width={1} px={[4,5]} py={[3,4]} m={'auto'}>\n      {children}\n    </Box>\n  </Flex>\n);\n*/\n\nModalCard.Footer = ({children, ...props}) => (\n  <Flex\n    flex={'1 0 auto'}\n    justifyContent={'center'}\n    borderTop={1}\n    borderColor={'light-gray'}\n    px={[0,3]}\n    py={3}\n  >\n    {children}\n  </Flex>\n);\n\n\nModalCard.BackButton = ({onClick, ...props}) => (\n  <Box\n    position={'absolute'}\n    top={'0'}\n    left={'0'}\n    m={3}\n    bg={'white'}\n  >\n    <Button.Outline\n      onClick={onClick}\n      icononly\n      icon={'ArrowBack'}\n      size={'2.5em'}\n    />\n  </Box>\n);\n\nexport default ModalCard;\n","import React, { Component } from \"react\";\nimport { Button, Image, Flex, Text, Icon, Box } from 'rimble-ui';\n\nclass ImageButton extends Component {\n\n  render() {\n\n    const isMobile = typeof this.props.isMobile !== 'undefined' ? this.props.isMobile : false;\n\n    const image = this.props.imageSrc ? (<Image width={'auto'} src={this.props.imageSrc} {...this.props.imageProps} />) : ( this.props.iconName ? (<Icon name={this.props.iconName} {...this.props.iconProps} />) : null );\n    const caption = (<Text textAlign={ isMobile ? 'left' : 'center'} fontSize={2} fontWeight={3} color={'dark-gray'}>{this.props.caption}</Text>);\n\n    return (\n        <Button\n          color={'white'}\n          borderRadius={3}\n          mainColor={'white'}\n          contrastColor={'white'}\n          px={ isMobile ? [3,4] : 4 }\n          py={ isMobile ? 0 : [3,4] }\n          my={ isMobile ? 2 : [2,2] }\n          mx={ isMobile ? 0 : [0,2] }\n          onClick={ this.props.handleClick }\n          height={ isMobile ? '58px' : ['150px','170px']}\n          width={ this.props.width ? this.props.width : (isMobile ? '100%' : ['150px','170px']) }\n          style={ this.props.buttonStyle ? this.props.buttonStyle : (isMobile ? {justifyContent:'flex-start'} : null) }\n          {...this.props.buttonProps}\n        >\n          <>\n            {\n              this.props.badge && (\n                <Box\n                  position={'absolute'}\n                  borderRadius={'16px'}\n                  backgroundColor={ this.props.badge.bgColor ? this.props.badge.bgColor : 'blue' }\n                  style={ isMobile ? {right:'-25px',top:'-17px'} : {right:'-25px',top:'-25px'} }\n                  px={['5px','7px']}\n                  py={['1px','3px']}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={'10px'}\n                    color={ this.props.badge.color ? this.props.badge.color : '#fff' }\n                  >\n                  {this.props.badge.text}\n                  </Text>\n                </Box>\n              )\n            }\n            <Flex flexDirection={ isMobile ? 'row' : 'column'} justifyContent={ isMobile ? 'flex-start' : 'center'} alignItems={'center'}>\n              <Flex width={ isMobile ? '45px' : 1 } mr={ isMobile ? 2 : 0 } justifyContent={ isMobile ? 'flex-start' : 'center' }>\n                { this.props.captionPos && this.props.captionPos === 'top' ? caption : image }\n              </Flex>\n              <Flex width={ isMobile ? 'auto' : 1 } flexDirection={'column'} justifyContent={ isMobile ? 'flex-start' : 'center' } >\n                { this.props.captionPos && this.props.captionPos === 'top' ? image : caption }\n                {\n                  this.props.subcaption && this.props.subcaption.split('\\n').map((v,i) => {\n                    // Smaller caption for second line\n                    if (i){\n                      v = (<small>{v}</small>);\n                    }\n                    return (\n                      <Text key={`subcaption_${i}`} lineHeight={'1.3'} textAlign={ isMobile ? 'left' : 'center'} color={'darkGray'} fontWeight={1} fontSize={1}>{v}</Text>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </>\n        </Button>\n    );\n  }\n}\nexport default ImageButton;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Box,\n  Button,\n  Flex,\n  Image\n} from \"rimble-ui\";\nimport Select from 'react-select';\nimport ModalCard from './ModalCard';\nimport ImageButton from '../../ImageButton/ImageButton';\nimport styles from './Header.module.scss';\nimport globalConfigs from '../../configs/globalConfigs';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass BuyModal extends React.Component {\n\n  state = {\n    selectedMethod:null,\n    availableMethods:[],\n    selectedCountry:null,\n    selectedProvider:null,\n    availableProviders:null,\n    selectedToken:this.props.buyToken,\n  }\n\n  async loadRemoteResources() {\n\n    if (!this.state.selectedToken){\n      return false;\n    }\n\n    // Load payments providers external remote resources\n    Object.keys(globalConfigs.payments.providers).forEach((provider,i) => {\n\n      const providerInfo = globalConfigs.payments.providers[provider];\n      if (providerInfo.enabled && providerInfo.remoteResources && (providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1)){\n        \n        const remoteResources = providerInfo.remoteResources;\n\n        Object.keys(remoteResources).forEach((url,j) => {\n\n          const resourceType = url.split('.').pop().toLowerCase();\n\n          switch (resourceType){\n            case 'js':\n              const scriptID = `script_${provider}_${j}_${this.state.selectedToken}`;\n\n              if (!document.getElementById(scriptID)){\n                const script = document.createElement(\"script\");\n                const remoteResourceParams = remoteResources[url];\n                const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n                const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n                if (precall && typeof precall === 'function'){\n                  precall(this.state,globalConfigs,providerInfo);\n                }\n\n                if (callback && typeof callback === 'function'){\n                  if (script.readyState) {  // only required for IE <9\n                    script.onreadystatechange = function() {\n                      if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                        script.onreadystatechange = null;\n                        callback();\n                      }\n                    };\n                  } else {  //Others\n                    script.onload = callback;\n                  }\n                }\n\n                script.id = scriptID;\n                script.className = `script_${provider}`;\n                script.src = url;\n                script.async = true;\n\n                if (remoteResourceParams && remoteResourceParams.parentElement){\n                  remoteResourceParams.parentElement.appendChild(script)\n                } else {\n                  document.head.appendChild(script);\n                }\n              }\n            break;\n            case 'css':\n              const stylesheetId = `stylesheet_${provider}_${j}`;\n\n              if (!document.getElementById(stylesheetId)){\n                const style = document.createElement(\"link\");\n\n                style.id = stylesheetId;\n                style.rel = 'stylesheet';\n                style.href = url;\n\n                document.head.appendChild(style);\n              }\n            break;\n            default:\n            break;\n          }\n        });\n      }\n    });\n  }\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadAvailableMethods(){\n    const availableMethods = {};\n    const availableMethodsKeys = this.props.availableMethods && this.props.availableMethods.length ? this.props.availableMethods : Object.keys(globalConfigs.payments.methods);\n\n    availableMethodsKeys.forEach(method => {\n      availableMethods[method] = globalConfigs.payments.methods[method];\n    });\n\n    this.setState({\n      availableMethods\n    });\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n\n    this.loadAvailableMethods();\n    this.loadRemoteResources();\n  }\n\n  async componentDidMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps) {\n\n    this.loadUtils();\n\n    if ( this.props.buyToken && prevProps.buyToken !== this.props.buyToken){\n      this.selectToken(null,this.props.buyToken);\n    }\n  }\n\n  renderPaymentMethod = async (e,provider,buyParams) => {\n\n    const onSuccess = async (tx) => {\n      // Toast message\n      window.toastProvider.addMessage(`Deposit completed`, {\n        secondaryMessage: `Your ${this.state.selectedToken} have been deposited`,\n        colorTheme: 'light',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"success\",\n      });\n\n      this.props.getAccountBalance();\n    };\n\n    const onClose = async (e) => {\n      return true;\n    }\n\n    const paymentProvider = globalConfigs.payments.providers[provider];\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(this.props,globalConfigs,buyParams,onSuccess,onClose) : null;\n\n    // Render the Payment Provider\n    switch (provider){\n      default:\n        if (typeof paymentProvider.render === 'function'){\n          const currentState = Object.assign({},this.state);\n          paymentProvider.render(initParams,null,currentState,globalConfigs);\n        }\n      break;\n    }\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_provider',\n        eventLabel: provider\n      });\n\n      this.closeModal(e);\n    } else {\n      this.closeModal(e);\n    }\n  }\n\n  goBack = (e) => {\n    e.preventDefault();\n\n    if (this.state.selectedProvider){\n      this.setState({\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedMethod){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedToken){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n        selectedToken:this.props.buyToken,\n      });\n    } else {\n      this.resetModal();\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      selectedMethod:null,\n      selectedCountry:null,\n      selectedProvider:null,\n      availableProviders:null,\n      selectedToken:this.props.buyToken\n    });\n\n    this.componentWillMount();\n  }\n\n  closeModal = (e) => {\n    this.resetModal();\n    if (!this.props.showInline && typeof this.props.closeModal === 'function'){\n      this.props.closeModal();\n    }\n  }\n\n  getProviderInfo = (provider) => {\n    if (!globalConfigs.payments.providers[provider]){\n      return false;\n    }\n    let providerInfo = globalConfigs.payments.providers[provider];\n    if (typeof providerInfo.getInfo === 'function'){\n      const newProviderInfo = providerInfo.getInfo(this.state);\n      if (newProviderInfo && Object.keys(newProviderInfo).length){\n        providerInfo = Object.assign(providerInfo,newProviderInfo);\n      }\n    }\n    return providerInfo;\n  }\n\n  getDefaultPaymentProvider = (selectedMethod) => {\n    const paymentMethod = this.state.availableMethods[selectedMethod];\n    if (paymentMethod.defaultProvider){\n      return paymentMethod.defaultProvider;\n    }\n    return null;\n  }\n\n  getAvailablePaymentProviders = (selectedMethod,selectedToken) => {\n    const availableProviders = [];\n\n    Object.keys(globalConfigs.payments.providers).map((provider,i) => {\n      const providerInfo = globalConfigs.payments.providers[provider];\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(selectedMethod) !== -1;\n      const providerSupportToken = selectedToken ? providerInfo.supportedTokens.indexOf(selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n      if (providerInfo.enabled && providerSupportMethod && providerSupportToken ){\n        availableProviders.push(provider);\n      }\n      return provider;\n    });\n\n    const defaultPaymentProvider = this.getDefaultPaymentProvider(selectedMethod);\n\n    if (defaultPaymentProvider && this.state.availableMethods[selectedMethod].showDefaultOnly && availableProviders.indexOf(defaultPaymentProvider) !== -1){\n      return [defaultPaymentProvider];\n    }\n\n    return availableProviders;\n  }\n\n  selectProvider = (e,selectedProvider) => {\n    if (e){\n      e.preventDefault();\n    }\n    \n    if (!selectedProvider || !globalConfigs.payments.providers[selectedProvider]){\n      return this.setState({\n        selectedProvider:null\n      });\n    }\n\n    const providerInfo = globalConfigs.payments.providers[selectedProvider];\n    if (providerInfo){\n\n      if (this.state.selectedToken){\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      const ethAvailable = providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1;\n      const tokenAvailable = providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1;\n\n      // Show tokens to buy if more are available or if the selected one is not\n      const availableTokens = [];\n      if ( (ethAvailable && tokenAvailable) || !tokenAvailable ){\n        if (ethAvailable){\n          availableTokens.push(globalConfigs.baseToken);\n        }\n        if (tokenAvailable){\n          availableTokens.push(this.props.selectedToken);\n        }\n      } else {\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      this.setState({\n        availableTokens,\n        selectedProvider\n      });\n    }\n  }\n\n  selectMethod = (e,selectedMethod) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    if (Object.keys(this.state.availableMethods).indexOf(selectedMethod) !== -1){\n      const availableProviders = this.getAvailablePaymentProviders(selectedMethod,this.state.selectedToken);\n\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_method',\n        eventLabel: selectedMethod\n      });\n\n      this.setState({\n        availableProviders,\n        selectedMethod\n      });\n    }\n  }\n\n  selectToken = (e,selectedToken) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Buy',\n      eventAction: 'select_token',\n      eventLabel: selectedToken\n    });\n\n    this.setState({ selectedToken }, async () => {\n      if (this.state.selectedProvider){\n        return this.renderPaymentMethod(e,this.state.selectedProvider,this.state);\n      } else {\n        this.loadRemoteResources();\n      }\n    });\n  }\n\n  handleCountryChange = selectedCountry => {\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled && selectedCountry){\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_country',\n        eventLabel: selectedCountry.value\n      });\n    }\n\n    this.setState({\n      selectedCountry\n    });\n  }\n\n  getAvailableCountries = () => {\n    const availableCountries = {};\n    this.state.availableProviders.forEach((provider,i) => {\n      const providerInfo = globalConfigs.payments.providers[provider];\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(this.state.selectedMethod) !== -1;\n      const providerSupportToken = this.state.selectedToken ? providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n\n      // Skip disabled provider, not supported selected method or not supported token\n      if (!providerInfo.enabled || !providerSupportMethod || !providerSupportToken ){\n        return;\n      }\n\n      // Get available providers and countries\n      providerInfo.supportedCountries.forEach((countryCode,j) => {\n        if (!availableCountries[countryCode]){\n          availableCountries[countryCode] = {\n            providers:[],\n            label:globalConfigs.countries[countryCode],\n            value:countryCode\n          };\n        }\n        availableCountries[countryCode].providers.push(provider);\n      });\n    });\n\n    return Object.values(availableCountries);\n  }\n\n  render() {\n\n    let title = null;\n    if (this.state.selectedToken === null){\n      title = 'BUY TOKEN';\n    } else {\n      title = 'BUY '+this.state.selectedToken;\n      if (this.state.selectedMethod !== null){\n        title += ' - '+this.state.availableMethods[this.state.selectedMethod].props.caption;\n      }\n    }\n\n    let availableTokens = this.props.availableTokens && Object.keys(this.props.availableTokens).length>0 ? [globalConfigs.baseToken,...Object.keys(this.props.availableTokens)] : [globalConfigs.baseToken];\n\n    // Show all tokens\n    if (this.props.showAllTokens){\n      availableTokens = [];\n      Object.keys(globalConfigs.payments.providers).forEach( provider => {\n        const providerInfo = globalConfigs.payments.providers[provider];\n        if (providerInfo.supportedTokens){\n          providerInfo.supportedTokens.forEach(token => {\n            if (!availableTokens.includes(token)){\n              availableTokens.push(token);\n            }\n          })\n        }\n      });\n    }\n\n    const InnerComponent = props => (\n      <Box minWidth={ this.props.showInline ? 'auto' : ['auto','35em'] }>\n      {\n        this.state.selectedToken === null ? (\n          <Box mb={2}>\n            <Text\n              mb={[2,3]}\n              fontWeight={2}\n              textAlign={'center'}\n              fontSize={[2, this.props.showInline ? 2 : 3]}\n            >\n              Which token do you want to buy?\n            </Text>\n            <Flex\n              mb={4}\n              style={{\n                flexWrap:'wrap'\n              }}\n              alignItems={'center'}\n              justifyContent={'center'}\n              flexDirection={['column','row']}\n            >\n            {\n              availableTokens.map((token,i) => {\n                return (\n                  <ImageButton\n                    caption={token}\n                    key={`token_${token}`}\n                    isMobile={this.props.isMobile}\n                    imageSrc={`images/tokens/${token}.svg`}\n                    handleClick={ e => { this.selectToken(e,token); } }\n                    imageProps={ this.props.isMobile ? {height:'42px'} : {p:[2,3],height:'80px'}}\n                    buttonProps={ !this.props.isMobile ? {\n                      style:{\n                        'flex':'0 0 170px'\n                      }\n                    } : null}\n                  />\n                );\n              })\n            }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === null ? (\n          <Box>\n            <Flex mb={3} flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n              {\n                !this.props.showInline &&\n                  <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n              }\n              <Text textAlign={'center'} fontWeight={500} fontSize={[2, this.props.showInline ? 2 : 3]} my={0}>\n                {\n                  this.props.showInline && this.props.buyToken ? `Ops... you don't have any ${this.props.buyToken} in your wallet, how do you prefer do buy some?` : `How do you prefer to buy ${this.state.selectedToken}?`\n                }\n              </Text>\n            </Flex>\n            <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n              {\n                Object.keys(this.state.availableMethods).map((method,i) => {\n                  const methodInfo = this.state.availableMethods[method];\n                  const availableProviders = this.getAvailablePaymentProviders(method,this.state.selectedToken);\n                  if (!availableProviders || !availableProviders.length){\n                    return false;\n                  }\n\n                  let imageProps = methodInfo.props && methodInfo.props.imageProps ? methodInfo.props.imageProps : {};\n                  const imagePropsExtended = this.props.isMobile ? {height:'42px'} : {height:'70px'};\n                  imageProps = Object.assign(imageProps,imagePropsExtended);\n\n                  return (\n                    <ImageButton isMobile={ this.props.isMobile } key={`method_${method}`} {...methodInfo.props} imageProps={ imageProps } handleClick={ e => this.selectMethod(e,method) } />\n                  );\n                })\n              }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === 'wallet' ? (\n              <Box mt={2} mb={3}>\n                <Text textAlign={'center'} fontWeight={3} fontSize={2} my={0}>\n                  <Box width={'100%'}>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableProviders.length > 0 ?\n                          (\n                            <Box>\n                              <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                                Choose your preferred payment provider:\n                              </Text>\n                              {\n                                this.state.availableProviders.map((provider,i) => {\n                                  const providerInfo = this.getProviderInfo(provider);\n                                  return (\n                                    <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => { this.renderPaymentMethod(e,provider,this.state); } } />\n                                  );\n                                })\n                              }\n                            </Box>\n                          )\n                        : (\n                          <Text textAlign={'center'} fontWeight={3} fontSize={2} my={2}>\n                            Sorry, there are no providers available for the selected method.\n                          </Text>\n                        )\n                      }\n                      </Flex>\n                    </Box>\n                </Text>\n              </Box>\n            ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              {\n                !this.state.selectedProvider &&\n                <Box\n                  mb={3}\n                  maxWidth={ this.props.showInline ? '35em' : 'initial' }\n                  width={ (this.props.showInline && !this.props.isMobile) ? 0.72 : 1 }\n                >\n                  {\n                    !this.props.showInline &&\n                      <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n                        <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n                      </Flex>\n                  }\n                  <Text textAlign={'center'} fontWeight={ this.props.showInline ? 2 : 3 } fontSize={2} mb={2}>\n                    Select your country:\n                  </Text>\n                  <Select\n                    maxWidth={ this.props.showInline && !this.props.isMobile ? '25em' : 'auto' }\n                    placeholder={'Select your country'}\n                    noOptionsMessage={ (inputValue) => 'For European countries select Europe' }\n                    value={this.state.selectedCountry}\n                    onChange={this.handleCountryChange}\n                    options={this.getAvailableCountries()}\n                  />\n                </Box>\n              }\n              <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'} minHeight={'200px'}>\n                {\n                  !this.state.selectedProvider ?\n                    this.state.selectedCountry !== null ? (\n                      <Box width={'100%'}>\n                        <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                          Choose your preferred payment provider:\n                        </Text>\n                        <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                        {\n                          this.state.selectedCountry.providers.length > 0 ?\n                            this.state.selectedCountry.providers.map((provider,i) => {\n                              const providerInfo = this.getProviderInfo(provider);\n                              return (\n                                <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => {this.selectProvider(e,provider) } } />\n                              );\n                            })\n                          : (\n                            <Text textAlign={'center'} fontWeight={3} fontSize={2} mb={2}>\n                              Sorry, there are no providers available for the selected method.\n                            </Text>\n                          )\n                        }\n                        </Flex>\n                      </Box>\n                    ) : (\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={2}>\n                        Select the country to load the payment providers.\n                      </Text>\n                    )\n                  : false && this.state.availableTokens && this.state.availableTokens.length > 0 && (\n                    <Box mb={2}>\n                      <Flex justifyContent={'center'} my={2}>\n                        <Image src={ globalConfigs.payments.providers[this.state.selectedProvider].imageSrc } height={'35px'} />\n                      </Flex>\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                        Choose which token do you want to buy:\n                      </Text>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableTokens.map((token,i) => {\n                          return (\n                            <ImageButton key={`token_${token}`} imageSrc={`images/tokens/${token}.svg`} caption={token} imageProps={{p:[2,3],height:'80px'}} handleClick={ e => { this.selectToken(e,token); } } />\n                          );\n                        })\n                      }\n                      </Flex>\n                    </Box>\n                  )\n                }\n              </Flex>\n            </Flex>\n          )\n      }\n        {\n          this.props.showInline && this.state.selectedToken !== null  && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n            <Flex\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Button\n                my={2}\n                mx={[0, 2]}\n                size={'medium'}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.goBack(e) }\n              >\n                GO BACK\n              </Button>\n            </Flex>\n          )\n        }\n      </Box>\n    );\n\n    if (this.props.showInline){\n      return (\n        <InnerComponent\n          {...this.props}\n        />\n      );\n    }\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          <ModalCard.Header title={title}>\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <InnerComponent/>\n          </ModalCard.Body>\n          <ModalCard.Footer>\n            <Flex px={[2,0]} flexDirection={['column', 'row']} width={1} justifyContent={'center'}>\n              <Button\n                borderRadius={4}\n                my={2}\n                mx={[0, 2]}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ e => this.closeModal(e) }\n              >\n              CLOSE\n              </Button>\n              {\n                this.state.selectedToken !== null && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n                  <Button\n                    className={styles.gradientButton}\n                    borderRadius={4}\n                    my={2}\n                    mx={[0, 2]}\n                    size={this.props.isMobile ? 'small' : 'medium'}\n                    onClick={ e => this.goBack(e) }\n                  >\n                    GO BACK\n                  </Button>\n                )\n              }\n            </Flex>\n          </ModalCard.Footer>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default BuyModal;","import { Button } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass RoundButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      width:1,\n      fontSize:3,\n      fontWeight:3,\n      height:'45px',\n      boxShadow:null,\n      borderRadius:4,\n      mainColor:'primary'\n    },this.props.buttonProps);\n\n    return (\n       <Button\n        {...buttonProps}\n        onClick={this.props.handleClick}\n       >\n        {this.props.children}\n       </Button>\n    );\n  }\n}\n\nexport default RoundButton;\n","import axios from 'axios';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Progress, Icon, Link } from 'rimble-ui'\n\nclass TxProgressBar extends Component {\n  state = {\n    error:null,\n    ended:false,\n    percentage:0,\n    processing:true,\n    txTimestamp:null,\n    initialized:false,\n    estimatedTime:null,\n    remainingTime:null\n  };\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n\n    this.componentUnmounted = true;\n\n    var id = window.setTimeout(function() {}, 0);\n\n    while (id--) {\n        window.clearTimeout(id); // will do nothing if no timeout with id is present\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps){\n    this.loadUtils();\n\n    if (!this.state.initialized && this.props.web3){\n      this.initProgressBar();\n    }\n  }\n\n  componentDidMount = async () => {\n    this.initProgressBar();\n  }\n\n  getTransaction = async () => {\n    const transaction = await (new Promise( async (resolve, reject) => {\n      this.functionsUtil.customLog('getTransaction',this.props.hash);\n      this.props.web3.eth.getTransaction(this.props.hash,(err,transaction) => {\n        resolve(transaction);\n      });\n    }));\n\n    const newState = {};\n    if (transaction){\n      newState.transaction = transaction;\n    } else {\n      newState.processing = false;\n      newState.error = 'Unable to find the transaction';\n    }\n\n    this.setState(newState);\n    return transaction;\n  }\n\n  /*\n  Taken from https://ethgasstation.info/calculatorTxV.php\n  */\n  _estimateWait (prediction, gasoffered) {\n    var minedProb;\n    var expectedWait;\n    var sum1, sum2;\n    var intercept = 4.2794;\n    var hpa = .0329;\n    var hgo = -3.2836;\n    var tx = -0.0004;\n    var intercept2 = 7.5375;\n    var hpa_coef = -0.0801;\n    var txatabove_coef= 0.0003;\n    var high_gas_coef = .3532;\n\n    if (gasoffered > 1000000) {    \n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + hgo  + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['hashpower_accepting'] * hpa_coef) + (prediction['tx_atabove'] * txatabove_coef) + high_gas_coef;\n    } else {\n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['tx_atabove'] * txatabove_coef) + (prediction['hashpower_accepting'] * hpa_coef);\n    }\n\n    var factor = Math.exp(- 1 * sum1);\n    const prob = 1 / (1 + factor);\n\n    if (prob > .95) {\n      minedProb = 'Very High';\n    } else if (prob > .9 && prob <= .95) {\n      minedProb = 'Medium'\n    } else {\n      minedProb = 'Low';\n    }\n\n    expectedWait = Math.exp(sum2);\n    if (expectedWait < 2) {\n      expectedWait = 2;\n    }\n\n    if (gasoffered > 2000000) {\n      expectedWait += 100;\n    }\n\n    return [expectedWait, prediction['hashpower_accepting'], prediction['tx_atabove'], minedProb];\n  }\n\n  getBlockTime = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/ethgasAPI.json');\n    if (pt){\n      const blockTime = pt.data;\n      this.setState({\n        blockTime\n      });\n      return blockTime;\n    }\n    return null;\n  }\n\n  getPredictionTable = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/predictTable.json');\n    if (pt){\n      const predictTable = pt.data;\n      this.setState({\n        predictTable\n      });\n      return predictTable;\n    }\n    return null;\n  }\n\n  getTxEstimatedTime = (gasPrice) => {\n    let prediction = null;\n    if (this.state.predictTable){\n      this.state.predictTable.forEach((p,i) => {\n        if (!prediction && parseFloat(p.gasprice)>=parseFloat(gasPrice)){\n          prediction = p;\n          return true;\n        }\n      });\n    }\n\n    if (this.state.blockTime && prediction){\n      const pdValues = this._estimateWait(prediction,this.state.transaction.gas);\n      const blocksWait = pdValues[0];\n      const blockInterval = this.state.blockTime.block_time;\n      let txMeanSecs = blocksWait * blockInterval;\n      txMeanSecs = parseInt(txMeanSecs.toFixed(0));\n      this.functionsUtil.customLog('getTxEstimatedTime',prediction,this.state.transaction.gas,pdValues,txMeanSecs);\n      return txMeanSecs; // Customized\n    }\n\n    return null;\n  }\n\n  calculateRemainingTime = async () => {\n    let remainingTime = 0;\n    let estimatedTime = 0;\n\n    if (!this.state.transaction || this.componentUnmounted){\n      return false;\n    }\n\n    if (!this.state.transaction.blockNumber){\n      const gasPrice = parseFloat(this.functionsUtil.BNify(this.state.transaction.gasPrice).div(1e9).toString());\n      remainingTime = this.getTxEstimatedTime(gasPrice);\n    }\n\n    estimatedTime = remainingTime ? remainingTime : 0;\n\n    if (this.state.txTimestamp){\n      const currTimestamp = new Date().getTime();\n      const secondsPassed = parseInt((currTimestamp-parseInt(this.state.txTimestamp))/1000);\n      \n      // Calculate new remaining time\n      remainingTime -= secondsPassed;\n      remainingTime = Math.max(remainingTime,0);\n\n      this.functionsUtil.customLog('Estimated time',estimatedTime,'secondsPassed',secondsPassed,'New remaining time',remainingTime);\n    }\n\n    const timePassed = estimatedTime-remainingTime;\n    const percentage = estimatedTime>0 ? parseFloat(timePassed/estimatedTime) : 1;\n\n    this.setState({\n      estimatedTime,\n      remainingTime,\n      percentage\n    });\n\n    setTimeout(()=>{this.updateProgressBar()},1000);\n  }\n\n  updateProgressBar = () => {\n\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    let remainingTime = this.state.remainingTime;\n    if (remainingTime){\n      remainingTime--;\n      if (!remainingTime){\n        this.setState({\n          percentage:1,\n          ended:true\n        });\n      } else {\n        const timePassed = this.state.estimatedTime-remainingTime;\n        const percentage = parseFloat(timePassed/this.state.estimatedTime);\n        this.setState({\n          percentage,\n          remainingTime\n        });\n        setTimeout(()=>{this.updateProgressBar()},1000);\n      }\n    } else {\n      this.setState({\n        percentage:1,\n        ended:true\n      });\n    }\n  }\n\n  getTxInfo = async () => {\n\n    // Get tx timestamp\n    const txProgressBarKey = `txProgressBarData`;\n    const txHash = this.props.hash.toLowerCase();\n\n    let txProgressBarData = null;\n    let txTimestamp = null;\n    let newState = {};\n\n    if (localStorage){\n      txProgressBarData = localStorage.getItem(txProgressBarKey);\n      if (txProgressBarData){\n        txProgressBarData = JSON.parse(txProgressBarData);\n      }\n    }\n\n    if (!txProgressBarData || !txProgressBarData[txHash]){\n      txTimestamp = new Date().getTime();\n\n      const [predictTable,blockTime] = await Promise.all([\n        this.getPredictionTable(),\n        this.getBlockTime()\n      ]);\n\n      txProgressBarData = {};\n      txProgressBarData[txHash] = {\n        txTimestamp,\n        blockTime,\n        predictTable\n      };\n\n      // Save progress bar status in localStorage\n      this.functionsUtil.setLocalStorage(txProgressBarKey,JSON.stringify(txProgressBarData));\n\n      newState = txProgressBarData[txHash];\n\n      if (!predictTable || !blockTime){\n        newState.error = 'Processing transaction';\n      }\n    }\n\n    this.setState(newState);\n  }\n\n  initProgressBar = async () => {\n\n    if (!this.props.hash || !this.props.web3){\n      return false;\n    }\n\n    const newState = {\n      initialized:true\n    };\n    this.setState(newState);\n\n    const transaction = await this.getTransaction();\n\n    if (transaction){\n      await this.getTxInfo();\n      try{\n        this.calculateRemainingTime();\n      } catch (err) {\n        newState.error = 'Processing transaction';\n\n        // const errStringified = JSON.stringify(err);\n      }\n\n      this.setState(newState);\n    }\n  }\n\n  renderRemainingTime(){\n    // More than 60 seconds\n    if (this.state.remainingTime>60){\n      const minutes = Math.floor(this.state.remainingTime/60);\n      const seconds = this.state.remainingTime-(minutes*60);\n      return ('0'+minutes).substr(-2)+':'+('0'+seconds).substr(-2)+' min';\n    } else {\n      return this.state.remainingTime+'s';\n    }\n  }\n\n  render() {\n    return (\n      <Flex flexDirection={'column'} alignItems={'center'}>\n        {\n          this.state.remainingTime !== null ? (\n            this.state.ended ? (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px'\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={this.props.endMessage ? this.props.endMessage : 'Finalizing transaction...'}\n              />\n            ) : (\n              <Flex\n                mb={2}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Text mb={2} color={ this.props.textColor ? this.props.textColor : 'copyColor'}>{ this.props.waitText ? this.props.waitText : 'Remaining time:' } <Text.span color={ this.props.textColor ? this.props.textColor : 'copyColor'} fontWeight={3}>{ this.renderRemainingTime() }</Text.span></Text>\n                <Progress value={ this.state.percentage } />\n              </Flex>\n            )\n          ) : (\n            this.state.error !== null && !this.state.processing ? (\n              <Flex\n                alignItems={'center'}\n                flexDirection={'column'}\n              >\n                <Icon\n                  size={'2em'}\n                  name={'Warning'}\n                  color={'cellText'}\n                />\n                <Text\n                  mt={0}\n                  fontSize={2}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  {this.state.error}\n                </Text>\n              </Flex>\n            ) : (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px'\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={ this.state.error ? this.state.error : (this.props.hash ? (this.props.loadingMessage ? this.props.loadingMessage : 'Calculating estimated time...') : (this.props.sendingMessage ? this.props.sendingMessage : 'Sending transaction...') ) }\n              />\n            )\n          )\n        }\n        {\n          this.props.hash ? (\n            <Link\n              mt={0}\n              target={'_blank'}\n              hoverColor={'dark-gray'}\n              rel={\"nofollow noopener noreferrer\"}\n              href={`https://etherscan.io/tx/${this.props.hash}`}\n              color={this.props.textColor ? this.props.textColor : 'cellText'}\n            >\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <Text\n                  fontSize={0}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  View in Etherscan\n                </Text>\n                <Icon\n                  ml={1}\n                  size={'0.75em'}\n                  name={'OpenInNew'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                />\n              </Flex>\n            </Link>\n          ) : typeof this.props.cancelTransaction === 'function' ? (\n              <Link\n                mt={0}\n                href={`javascript:void(0)`}\n                onClick={ e => this.props.cancelTransaction() }\n                color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                hoverColor={this.props.cancelTextHoverColor ? this.props.cancelTextHoverColor : 'dark-gray'}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'center'}\n                >\n                  <Text\n                    fontSize={0}\n                    textAlign={'center'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  >\n                    Cancel transaction\n                  </Text>\n                  <Icon\n                    ml={1}\n                    size={'0.85em'}\n                    name={'Cancel'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  />\n                </Flex>\n              </Link>\n          ) : null\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TxProgressBar;","import { Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass FastBalanceSelector extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n\n    let cardProps = {\n      p:2,\n      width:0.23,\n      onMouseDown:this.props.onMouseDown\n    };\n\n    let textProps = {\n      fontSize:2,\n      fontWeight:3,\n      textAlign:'center',\n      color:this.props.isActive ? 'copyColor' : 'legend'\n    }\n\n    cardProps = this.functionsUtil.replaceArrayProps(cardProps,this.props.cardProps);\n    textProps = this.functionsUtil.replaceArrayProps(textProps,this.props.textProps);\n\n    return (\n      <DashboardCard\n        isInteractive={true}\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n      >\n        <Text \n          {...textProps}\n        >\n          {this.props.percentage}%\n        </Text>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default FastBalanceSelector;","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\nimport { Box, Flex, Text, Icon, Checkbox, Input, Link, Image } from \"rimble-ui\";\n\nclass Migrate extends Component {\n\n  state = {\n    loading:true,\n    action:'migrate',\n    processing:{\n      approve:{\n        txHash:null,\n        loading:false\n      },\n      migrate:{\n        txHash:null,\n        loading:false\n      },\n      redeem:{\n        txHash:null,\n        loading:false\n      }\n    },\n    inputValue:{},\n    oldTokenName:null,\n    oldIdleTokens:null,\n    skipMigration:false,\n    buttonDisabled:false,\n    migrationEnabled:null,\n    fastBalanceSelector:{},\n    oldContractBalance:null,\n    biconomyLimitReached:false,\n    metaTransactionsEnabled:true,\n    oldContractTokenDecimals:null,\n    migrationContractApproved:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  toggleSkipMigration = (skipMigration) => {\n    this.setState({\n      skipMigration\n    });\n\n    if (typeof this.props.toggleSkipMigration === 'function'){\n      this.props.toggleSkipMigration(skipMigration);\n    }\n  }\n\n  changeInputValue = (e) => {\n    if (!this.state.action){\n      return false;\n    }\n    const amount = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n    this.checkButtonDisabled(amount);\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: null\n      },\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!this.state.action){\n      return false;\n    }\n    if (!amount){\n      amount = this.state.inputValue[this.state.action];\n    }\n    let buttonDisabled = true;\n    if (amount){\n      buttonDisabled = amount.lte(0);\n      switch (this.state.action){\n        case 'redeem':\n          buttonDisabled = buttonDisabled || amount.gt(this.state.oldIdleTokens);\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  setInputValue = () => {\n    if (!this.state.action || this.state.fastBalanceSelector[this.state.action] === null){\n      return false;\n    }\n\n    let amount = null;\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n\n    switch(this.state.action){\n      case 'redeem':\n        amount = this.state.oldIdleTokens ? this.functionsUtil.BNify(this.state.oldIdleTokens).times(selectedPercentage) : null;\n      break;\n      default:\n      break;\n    }\n\n    this.checkButtonDisabled(amount);\n\n    this.setState((prevState) => ({\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  setFastBalanceSelector = (percentage) => {\n    if (!this.state.action){\n      return false;\n    }\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: percentage\n      }\n    }));\n  }\n\n  executeAction = async () => {\n\n    const inputValue = this.state.inputValue[this.state.action];\n\n    if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)){\n      return false;\n    }\n\n    const loading = true;\n\n    switch (this.state.action){\n      case 'redeem':\n\n        if (!this.props.tokenConfig.migration || !this.props.tokenConfig.migration.oldContract){\n          return false;\n        }\n\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n\n        const idleTokenToRedeem = this.functionsUtil.normalizeTokenAmount(inputValue,18);\n\n        // Get amounts for best allocations\n        const _skipRebalance = true;\n        let paramsForRedeem = null;\n\n        /*\n        if (this.props.account){\n          const callParams = { from: this.props.account, gas: this.props.web3.utils.toBN(5000000) };\n          paramsForRedeem = await this.functionsUtil.genericContractCall(oldContractName,'getParamsForRedeemIdleToken',[idleTokenToRedeem, _skipRebalance],callParams);\n        }\n        */\n\n        const _clientProtocolAmountsRedeem = paramsForRedeem && paramsForRedeem.length ? paramsForRedeem[1] : [];\n        const gasLimitRedeem = _clientProtocolAmountsRedeem.length && _clientProtocolAmountsRedeem.indexOf('0') === -1 ? this.functionsUtil.BNify(1500000) : this.functionsUtil.BNify(1000000);\n\n        const callbackRedeem = (tx,error) => {\n          const txSucceeded = tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: `Redeem_old`,\n            eventAction: this.props.selectedToken,\n            eventLabel: tx.status,\n            eventValue: parseInt(inputValue)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (txSucceeded){\n            this.setState((prevState) => ({\n              inputValue:{\n                ...prevState.inputValue,\n                [this.state.action]: this.functionsUtil.BNify(0)\n              }\n            }));\n          }\n        };\n\n        const callbackReceiptRedeem = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                ...prevState.processing[this.state.action],\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.props.contractMethodSendWrapper(oldContractName, 'redeemIdleToken', [\n          idleTokenToRedeem, _skipRebalance, _clientProtocolAmountsRedeem\n        ], null, callbackRedeem, callbackReceiptRedeem, gasLimitRedeem);\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        [this.state.action]:{\n          ...prevState.processing[this.state.action],\n          loading\n        }\n      }\n    }));\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n    this.checkMigration();\n  }\n\n  componentDidMount(){\n    \n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const biconomyChanged = prevProps.biconomy !== this.props.biconomy;\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken || (!prevProps.tokenConfig && this.props.tokenConfig);\n\n    if (tokenChanged || accountChanged || biconomyChanged){\n      this.checkMigration();\n    }\n\n    const actionChanged = this.state.action !== prevState.action;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector[this.state.action] !== prevState.fastBalanceSelector[this.state.action];\n    if (actionChanged || fastBalanceSelectorChanged){\n      this.setInputValue();\n    }\n  }\n\n  toggleMetaTransactionsEnabled = (metaTransactionsEnabled) => {\n    this.setState({\n      metaTransactionsEnabled\n    });\n  }\n\n  checkMigrationContractApproved = async () => {\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.migrationContract){\n      const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n      const migrationContractName = migrationContractInfo.name;\n      const migrationContract = this.functionsUtil.getContractByName(migrationContractName);\n      if (migrationContract){\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n        const tokenApproved = await this.functionsUtil.checkTokenApproved(oldContractName,migrationContractInfo.address,this.props.account);\n        return tokenApproved;\n      }\n    }\n    return false;\n  }\n\n  checkMigration = async () => {\n\n    if (!this.props.tokenConfig || !this.props.account){\n      return false;\n    }\n\n    // console.log('checkMigration',this.props.selectedToken,this.props.tokenConfig,this.props.account);\n\n    let loading = true;\n    this.setState({\n      loading,\n      processing:{\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n\n    let migrationEnabled = false;\n    let oldTokenName = 'idleTokens';\n    let oldIdleTokensConverted = null;\n    let oldContractTokenDecimals = null;\n    let migrationContractApproved = false;\n    let oldTokenPrice = this.functionsUtil.BNify(0);\n    let oldIdleTokens = this.functionsUtil.BNify(0);\n    let oldContractBalance = this.functionsUtil.BNify(0);\n    const getTokenPrice = this.props.getTokenPrice !== undefined ? this.props.getTokenPrice : true;\n\n    // Check migration contract enabled and balance\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.enabled){\n      const oldContractInfo = this.props.tokenConfig.migration.oldContract;\n      const oldContractABI = oldContractInfo.abi;\n      const oldContractName = oldContractInfo.name;\n      let oldContract = this.functionsUtil.getContractByName(oldContractName);\n\n      // Initialize contract\n      if (!oldContract && oldContractABI){\n        oldContract = await this.props.initContract(oldContractName,oldContractInfo.address,oldContractABI);\n      }\n\n      let migrationContract = this.functionsUtil.getContractByName(this.props.tokenConfig.migration.migrationContract.name);\n\n      if (!migrationContract && this.props.tokenConfig.migration.migrationContract.abi){\n        migrationContract = await this.props.initContract(this.props.tokenConfig.migration.migrationContract.name,this.props.tokenConfig.migration.migrationContract.address,this.props.tokenConfig.migration.migrationContract.abi);\n      }\n\n      if (oldContract && migrationContract){\n\n        oldTokenName = this.props.tokenConfig.migration.oldContract.token;\n\n        [\n          oldContractTokenDecimals,\n          migrationContractApproved,\n          oldContractBalance,\n          oldTokenPrice,\n        ] = await Promise.all([\n          // Get old contract token decimals\n          this.functionsUtil.getTokenDecimals(oldContractName),\n          // Check migration contract approval\n          this.checkMigrationContractApproved(),\n          // Check old contractBalance\n          this.functionsUtil.getContractBalance(oldContractName,this.props.account),\n          // Get token price\n          (getTokenPrice ? this.functionsUtil.genericContractCall(oldContractName,'tokenPrice') : null)\n        ]);\n\n        // console.log('Migration',oldContractName,migrationContractApproved,this.props.selectedToken,oldContractBalance ? oldContractBalance.toString() : null,oldTokenPrice ? oldTokenPrice.toString() : null);\n\n        if (oldContractBalance){\n          // Convert old idleTokens\n          oldIdleTokens = this.functionsUtil.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          if (oldTokenPrice){\n            oldTokenPrice = this.functionsUtil.fixTokenDecimals(oldTokenPrice,this.props.tokenConfig.decimals);\n            oldIdleTokensConverted = this.functionsUtil.BNify(oldIdleTokens).times(this.functionsUtil.BNify(oldTokenPrice));\n          }\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.functionsUtil.BNify(oldContractBalance).gt(0);\n        }\n      }\n    }\n    \n    loading = false;\n\n    const newState = {\n      loading,\n      oldTokenName,\n      oldIdleTokens,\n      migrationEnabled,\n      oldContractBalance,\n      oldIdleTokensConverted,\n      oldContractTokenDecimals,\n      migrationContractApproved\n    };\n\n    if (this.props.biconomy){\n      const biconomyLimits = await this.functionsUtil.checkBiconomyLimits(this.props.account);\n      if (biconomyLimits && !biconomyLimits.allowed){\n        newState.biconomyLimitReached = true;\n      }\n    }\n\n    // Set migration contract balance\n    return this.setState(newState);\n  }\n\n  disapproveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n      this.disableERC20(null,this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address);\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n  }\n\n  approveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      if (!migrationContractApproved){\n\n        const callbackApprove = (tx,error) => {\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: 'approve',\n            eventLabel: tx ? tx.status : null\n          };\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // console.log('callbackApprove',tx,error);\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            migrationContractApproved: txSucceeded, // True\n            processing: {\n              ...prevState.processing,\n              approve:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n            this.props.callbackApprove(tx);\n          }\n\n          this.checkMigration();\n        };\n\n        const callbackReceiptApprove = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              approve:{\n                ...prevState.processing.approve,\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.functionsUtil.enableERC20(this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address,callbackApprove,callbackReceiptApprove);\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            approve:{\n              txHash:null,\n              loading:true\n            }\n          },\n          migrationContractApproved:false\n        }));\n      } else {\n        this.setState({\n          migrationContractApproved:true\n        });\n      }\n    }\n  }\n\n  migrate = async (e,migrationMethod,params) => {\n    e.preventDefault();\n\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      // const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      // if (!migrationContractApproved){\n      //   return this.approveMigration();\n      // } else {\n        const callbackMigrate = (tx,error) => {\n\n          if (!error && tx && tx.status === 'error'){\n            error = {\n              message:'Unknown error'\n            };\n          } else if (!tx && error){\n            tx = {\n              status:'error'\n            };\n          }\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: migrationMethod,\n            eventLabel: tx ? tx.status : null,\n            eventValue: parseInt(oldIdleTokens)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          // console.log('callbackMigrate',tx,tx.status,txSucceeded,error,this.props.migrationCallback);\n\n          if (txSucceeded){\n            // Toast message\n            window.toastProvider.addMessage(`Migration completed`, {\n              secondaryMessage: `Your funds has been migrated`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"success\",\n            });\n\n            if (this.props.migrationCallback && typeof this.props.migrationCallback === 'function'){\n              this.props.migrationCallback();\n            }\n\n          } else { // Show migration error toast only for real error\n            window.toastProvider.addMessage(`Migration error`, {\n              secondaryMessage: `The migration has failed, try again...`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n            });\n\n            // Check migration if failed\n            this.checkMigration();\n          }\n\n          this.setState((prevState) => ({\n            migrationEnabled:txSucceeded ? false : true,\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n        }\n\n        const callbackReceiptMigrate = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                ...prevState.processing.migrate,\n                txHash\n              }\n            }\n          }));\n        };\n\n        const useMetaTx = this.props.biconomy && this.state.metaTransactionsEnabled && !this.state.biconomyLimitReached;\n\n        // Call migration contract function to migrate funds\n        const oldIdleTokens = this.state.oldIdleTokens;\n        const toMigrate = this.functionsUtil.integerValue(this.state.oldContractBalance);\n        // const toMigrate =  this.functionsUtil.normalizeTokenAmount('1',this.state.oldContractTokenDecimals).toString(); // TEST AMOUNT\n\n        let _skipRebalance = typeof this.props.tokenConfig.skipMintForDeposit !== 'undefined' ? this.props.tokenConfig.skipMintForDeposit : this.functionsUtil.getGlobalConfig(['contract','methods','migrate','skipRebalance']);\n\n        // Mint if someone mint over X amount\n        let minAmountForRebalance = null;\n        \n        if (_skipRebalance){\n\n          // Check if the amount is over a certain amount to rebalance the pool\n          if (useMetaTx){\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalanceMetaTx']);\n          } else {\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalance']);\n          }\n\n          if (minAmountForRebalance){\n            const amountToDeposit = await this.functionsUtil.convertTokenBalance(oldIdleTokens,this.props.selectedToken,this.props.tokenConfig,false);\n            if (amountToDeposit.gte(this.functionsUtil.BNify(minAmountForRebalance))){\n              _skipRebalance = false;\n            }\n          }\n        }\n\n        let migrationParams = this.props.migrationParams ? this.props.migrationParams : [toMigrate,this.props.tokenConfig.migration.oldContract.address,this.props.tokenConfig.idle.address,this.props.tokenConfig.address,_skipRebalance];\n\n        if (typeof migrationParams === 'function'){\n          migrationParams = migrationParams(toMigrate);\n        }\n\n        // console.log('Migration params',oldIdleTokens,minAmountForRebalance,migrationContractInfo.name, migrationMethod, migrationParams);\n\n        // Check if Biconomy is enabled\n        if (useMetaTx){\n          const functionSignature = migrationContract.methods[migrationMethod](...migrationParams).encodeABI();\n          this.functionsUtil.sendBiconomyTxWithPersonalSign(migrationContractInfo.name, functionSignature, callbackMigrate, callbackReceiptMigrate);\n          // this.functionsUtil.sendBiconomyTx(migrationContractInfo.name, migrationContractInfo.address, functionSignature, callbackMigrate, callbackReceiptMigrate);\n        } else {\n          // Send migration tx\n          this.functionsUtil.contractMethodSendWrapper(migrationContractInfo.name, migrationMethod, migrationParams, callbackMigrate, callbackReceiptMigrate);\n        }\n\n        // debugger;\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            migrate:{\n              txHash:null,\n              loading:true\n            }\n          }\n        }));\n      // }\n    }\n\n    return false;\n  }\n\n  render() {\n\n    if (!this.props.tokenConfig || !this.props.selectedToken){\n      return null;\n    }\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationEnabled = batchMigrationInfo.enabled && typeof batchMigrationInfo.props.availableTokens[this.props.tokenConfig.idle.token] !== 'undefined';\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    const SkipMigrationComponent = (props) => (\n      <DashboardCard\n        cardProps={{\n          pt:2,\n          pb:3,\n          px:2,\n          mb:2,\n          display:'flex',\n          alignItems:'center',\n          flexDirection:'column',\n          justifyContent:'center',\n          mt:this.state.skipMigration ? 3 : 2,\n        }}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={'FastForward'}\n          />\n        </Flex>\n        <Checkbox\n          required={false}\n          checked={this.state.skipMigration}\n          label={`Skip migration and deposit in Idle v4`}\n          onChange={ e => this.toggleSkipMigration(e.target.checked) }\n        />\n      </DashboardCard>\n    );\n\n    const biconomyEnabled = this.functionsUtil.getGlobalConfig(['network','providers','biconomy','enabled']) && !this.state.biconomyLimitReached;\n\n    return (\n      this.state.loading && this.props.account ? (\n        <DashboardCard\n          cardProps={{\n            p:3,\n            mt:3,\n            minHeight:'195px',\n            style:{\n              display:'flex',\n              alignItems:'center',\n              justifyContent:'center'\n            }\n          }}\n        >\n          <FlexLoader\n            flexProps={{\n              flexDirection:'row'\n            }}\n            loaderProps={{\n              size:'30px'\n            }}\n            textProps={{\n              ml:2\n            }}\n            text={'Checking migration...'}\n          />\n        </DashboardCard>\n      ) : (\n        (this.state.migrationEnabled && !this.state.skipMigration) ? (\n          <Box width={1}>\n            {\n              !this.props.isMigrationTool &&\n              <Flex\n                mt={3}\n                flexDirection={'column'}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  >\n                    <Icon\n                      size={'2.3em'}\n                      color={'cellText'}\n                      name={ this.props.isMigrationTool ? 'SwapHoriz' : 'Warning' }\n                    />\n                    <Text\n                      mt={1}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      { this.props.migrateTextBefore !== null ? this.props.migrateTextBefore : null }\n                      { this.props.migrateTextBefore !== null &&\n                        <br />\n                      }\n                      You { !this.props.isMigrationTool ? 'still' : '' } have <strong>{this.state.oldIdleTokens.toFixed(4)} {this.state.oldTokenName} {this.state.oldIdleTokensConverted ? `(${this.state.oldIdleTokensConverted.toFixed(4)} ${this.props.selectedToken})` : ''}</strong> to migrate.<br />\n                      { this.props.migrateText !== null ? this.props.migrateText : 'Please use the section below to migrate or redeem your old tokens.' }\n                    </Text>\n                  </Flex>\n                </DashboardCard>\n              </Flex>\n            }\n            {\n              (this.props.showActions === undefined || this.props.showActions) && \n                <Flex\n                  mt={2}\n                  flexDirection={'column'}\n                >\n                  {\n                    !this.props.isMigrationTool && \n                      <SkipMigrationComponent />\n                  }\n                  <Text mb={2}>\n                    Choose the action:\n                  </Text>\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('migrate');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'migrate' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'migrate'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Migrate\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('redeem');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'redeem' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'redeem'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Redeem\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n            }\n            {\n              this.state.action === 'migrate' ? (\n                <Flex\n                  mt={3}\n                  flexDirection={'column'}\n                >\n                  {\n                    (batchMigrationEnabled && batchMigrationDepositEnabled && !this.props.isMigrationTool) &&\n                      <Flex\n                        mb={3}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <Link\n                          textAlign={'center'}\n                          hoverColor={'primary'}\n                          href={`/#/dashboard/tools/${batchMigrationInfo.route}/${this.props.tokenConfig.idle.token}`}\n                        >\n                          Gas fees too high? Save gas with our Batch Migrator!\n                        </Link>\n                        <Icon\n                          ml={1}\n                          size={'1em'}\n                          color={'primary'}\n                          name={'LocalGasStation'}\n                        />\n                      </Flex>\n                  }\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                    }}\n                  >\n                    {\n                      this.state.migrationContractApproved ? (\n                        this.state.processing.migrate.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar\n                              web3={this.props.web3}\n                              hash={this.state.processing.migrate.txHash}\n                              endMessage={`Finalizing migration request...`}\n                              cancelTransaction={this.cancelTransaction.bind(this)}\n                              waitText={ this.props.waitText ? this.props.waitText : 'Migration estimated in'}\n                              sendingMessage={ this.props.biconomy && this.state.metaTransactionsEnabled ? 'Sending meta-transaction...' : 'Sending transaction...' }\n                            />\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            {\n                              this.props.migrationImage ? (\n                                <Image\n                                  {...this.props.migrationImage}\n                                />\n                              ) : (\n                                <Icon\n                                  size={'2.3em'}\n                                  color={'cellText'}\n                                  name={ this.props.migrationIcon ? this.props.migrationIcon : (this.props.isMigrationTool ? 'SwapHoriz' : 'Repeat') }\n                                />\n                              )\n                            }\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                this.props.migrationText ? (\n                                  <Text.span\n                                    migrationTextProps={this.props.migrationTextProps}\n                                    dangerouslySetInnerHTML={{\n                                      __html:this.props.migrationText\n                                    }}\n                                  >\n                                  </Text.span>\n                                ) : (\n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    You are one step away from the migration of your { this.props.isMigrationTool ? this.state.oldIdleTokens.toFixed(4) : 'old' } {this.state.oldTokenName}{ this.props.isMigrationTool ? ` into the Idle ${this.props.tokenConfig.token} ${this.props.selectedStrategy} strategy` : '' }!\n                                  </Text.span>\n                                )\n                              }\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                            {\n                              biconomyEnabled && \n                                <Flex\n                                  py={3}\n                                  px={2}\n                                  mt={2}\n                                  width={1}\n                                  borderRadius={2}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                  backgroundColor={'dashboardBg'}\n                                  border={`1px solid ${this.props.theme.colors.boxBorder}`}\n                                >\n                                  <Text\n                                    mt={1}\n                                    fontSize={1}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    {\n                                      this.props.biconomy ?\n                                        `Meta-Transactions allow you to migrate without spending a dime! But, if you are stuck, please disable it and try again.`\n                                      :\n                                        'Your wallet does not support Meta-transactions, you are still able to migrate with a normal transaction.'\n                                    }\n                                  </Text>\n                                  {\n                                  this.props.biconomy &&\n                                    <Checkbox\n                                      mt={2}\n                                      required={false}\n                                      label={\"Migrate with Meta-Transaction\"}\n                                      checked={this.state.metaTransactionsEnabled}\n                                      onChange={ e => this.toggleMetaTransactionsEnabled(e.target.checked) }\n                                    />\n                                  }\n                                </Flex>\n                            }\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      mt:3,\n                                      width:[1,0.5],\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                            </Flex>\n                          </Flex>\n                        )\n                      ) : (\n                        this.state.processing.approve.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar\n                              web3={this.props.web3}\n                              waitText={`Approve estimated in`}\n                              hash={this.state.processing.approve.txHash}\n                              endMessage={`Finalizing approve request...`}\n                              cancelTransaction={this.cancelTransaction.bind(this)}\n                            />\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'LockOpen'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                this.props.approveText ? this.props.approveText : (\n                                  <>To migrate your { !this.props.isMigrationTool ? 'old' : '' } {this.state.oldTokenName} you need to approve our Smart-Contract first.</>\n                                )\n                              }\n                            </Text>\n                            <RoundButton\n                              buttonProps={{\n                                mt:3,\n                                width:[1,1/2]\n                              }}\n                              handleClick={this.approveMigration.bind(this)}\n                            >\n                              Approve\n                            </RoundButton>\n                          </Flex>\n                        )\n                      )\n                    }\n                  </DashboardCard>\n                </Flex>\n              ) : (\n                !this.state.processing[this.state.action].loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <Input\n                      min={0}\n                      type={\"number\"}\n                      required={true}\n                      height={'3.4em'}\n                      borderRadius={2}\n                      fontWeight={500}\n                      boxShadow={'none !important'}\n                      onChange={this.changeInputValue.bind(this)}\n                      border={`1px solid ${this.props.theme.colors.divider}`}\n                      placeholder={`Insert ${this.state.oldTokenName} amount`}\n                      value={this.state.inputValue[this.state.action] !== null ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toString() : ''}\n                    />\n                    <Flex\n                      mt={3}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'space-between'}\n                    >\n                      <FastBalanceSelector\n                        percentage={25}\n                        onMouseDown={()=>this.setFastBalanceSelector(25)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(25)}\n                      />\n                      <FastBalanceSelector\n                        percentage={50}\n                        onMouseDown={()=>this.setFastBalanceSelector(50)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(50)}\n                      />\n                      <FastBalanceSelector\n                        percentage={75}\n                        onMouseDown={()=>this.setFastBalanceSelector(75)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(75)}\n                      />\n                      <FastBalanceSelector\n                        percentage={100}\n                        onMouseDown={()=>this.setFastBalanceSelector(100)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(100)}\n                      />\n                    </Flex>\n                    <Flex\n                      mt={3}\n                      justifyContent={'center'}\n                    >\n                      <RoundButton\n                        buttonProps={{\n                          width:[1,1/2],\n                          disabled:this.state.buttonDisabled,\n                          style:{\n                            textTransform:'capitalize'\n                          }\n                        }}\n                        handleClick={this.state.buttonDisabled ? null : this.executeAction.bind(this) }\n                      >\n                        {this.state.action}\n                      </RoundButton>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mt={4}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      web3={this.props.web3}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      hash={this.state.processing[this.state.action].txHash}\n                      endMessage={`Finalizing ${this.state.action} request...`}\n                      waitText={`${this.functionsUtil.capitalize(this.state.action)} estimated in`}\n                    />\n                  </Flex>\n                )\n              )\n            }\n          </Box>\n        ) : (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'column'}\n            justifyContent={'center'}\n          >\n            {\n              (!this.props.isMigrationTool && this.state.migrationEnabled) && \n                <SkipMigrationComponent />\n            }\n            {\n              this.props.children ? this.props.children : null\n            }\n          </Flex>\n        )\n      )\n    )\n  }\n}\n\nexport default Migrate;","import Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TokenMigration extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    migrationSucceeded:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    if (selectedFromToken && selectedFromToken !== this.props.urlParams.param2){\n      this.changeFromToken(selectedFromToken);\n    }\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n  }\n\n  changeFromToken = (selectedToken) => {\n    const convertTool = this.functionsUtil.getGlobalConfig(['tools','tokenMigration']);\n    this.props.goToSection(`tools/${convertTool.route}/${selectedToken}`);\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    const tokenInfo = this.props.toolProps.availableTokens[selectedFromToken];\n\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n\n    const availableStrategies = typeof this.props.toolProps.availableStrategies !== 'undefined' ? this.props.toolProps.availableStrategies : Object.keys(this.props.availableStrategies);\n\n    availableStrategies.forEach( strategy => {\n      const strategyAvailableTokens =  this.props.availableStrategies[strategy];\n      const baseTokenConfig = strategyAvailableTokens[tokenInfo.baseToken];\n      if (!baseTokenConfig){\n        return false;\n      }\n\n      // Remove icon\n      delete baseTokenConfig.icon;\n\n      if (!selectedDestToken){\n        selectedDestToken = baseTokenConfig.idle.token;\n      }\n      baseTokenConfig.strategy = strategy;\n      baseTokenConfig.baseToken = tokenInfo.baseToken;\n      availableDestinationTokens[baseTokenConfig.idle.token] = baseTokenConfig;\n    });\n\n    this.setState({\n      tokenConfig:null,\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n\n    const destTokenConfig = this.state.availableDestinationTokens[selectedDestToken];\n    const tokenInfo = this.props.toolProps.availableTokens[this.state.selectedFromToken];\n\n    const tokenConfig = {\n      token:destTokenConfig.baseToken,\n      address:destTokenConfig.address,\n      decimals:destTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = destTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:tokenInfo.abi,\n      name:tokenInfo.token,\n      token:tokenInfo.token,\n      address:tokenInfo.address\n    };\n    \n    const migrationContract = this.props.toolProps.migrationContract;\n\n    // Add migration function\n    if (tokenInfo.migrateFunction){\n      migrationContract.functions[0].name = tokenInfo.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(destTokenConfig.strategy,tokenInfo.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedDestToken\n    });\n  }\n\n  migrationCallback = () => {\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={true}\n              onChange={this.changeFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-dest'}\n                  showBalance={false}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          {\n            this.state.selectedFromToken && this.state.selectedDestToken ? (\n              <Migrate\n                {...this.props}\n                showActions={false}\n                getTokenPrice={false}\n                isMigrationTool={true}\n                tokenConfig={this.state.tokenConfig}\n                migrationCallback={this.migrationCallback}\n                selectedToken={this.state.selectedFromToken}\n                selectedStrategy={this.props.selectedStrategy}\n              >\n                {\n                  !this.props.account ? (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'Input'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={2}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Please connect with your wallet interact with Idle.\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.props.connectAndValidateAccount}\n                        >\n                          Connect\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.migrationSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              Your {this.state.selectedFromToken} have been successfully migrated!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedFromToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Migrate>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenMigration;\n","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Box, Text, Icon, Link } from \"rimble-ui\";\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\n\nclass BatchMigration extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    hasDeposited:false,\n    selectedToken:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async checkBatchs(){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.selectedTokenConfig.name,this.state.selectedTokenConfig.address,this.state.selectedTokenConfig.abi)\n    ]);\n\n    const [currBatchIndex,migrationContractApproved] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.selectedTokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    const newState = {};\n    const batchDeposits = {};\n    const batchTotals = {};\n    let batchCompleted = false;\n\n    if (currBatchIndex !== null){\n      for (let batchIndex = 0; batchIndex <= currBatchIndex ; batchIndex++){\n        let [batchTotal,batchDeposit] = await Promise.all([\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n        if (batchTotal && batchTotal !== null){\n          batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.selectedTokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.selectedTokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n\n            batchDeposits[batchIndex] = batchDeposit;\n            // Check claimable\n            if (batchIndex < currBatchIndex){\n              batchCompleted = true;\n            }\n          }\n        }\n      }\n\n      newState.batchDeposits = batchDeposits;\n    }\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    newState.claimSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.batchCompleted = batchCompleted;\n    newState.hasDeposited = hasDeposited;\n    newState.canDeposit = !hasDeposited && batchMigrationDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    newState.action = hasDeposited ? 'redeem' : 'deposit';\n    newState.migrationContractApproved = migrationContractApproved;\n\n    this.setState(newState);\n  }\n\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      this.checkBatchs();\n    }\n  }\n\n  selectFromToken = async (selectedToken) => {\n\n    const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const strategyAvailableTokens =  this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.baseToken];\n\n    const tokenConfig = {\n      token:selectedTokenConfig.baseToken,\n      address:selectedTokenConfig.address,\n      decimals:selectedTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:selectedTokenConfig.abi,\n      name:selectedTokenConfig.name,\n      token:selectedTokenConfig.token,\n      address:selectedTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    });\n  }\n\n  claim = async () => {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: `BatchMigration`,\n        eventAction: 'Claim',\n        eventLabel: this.props.selectedToken,\n        eventValue: parseInt(claimableValue)\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  migrationCallback = () => {\n    this.checkBatchs();\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedToken){\n      return null;\n    }\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={false}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            (this.state.canDeposit || this.state.canClaim) && \n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  px:4,\n                  mt:3,\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                > \n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.migrationContractApproved ? 'CheckBox' : 'LooksOne'}\n                      color={ this.state.migrationContractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Approve the batch migration contract\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.hasDeposited ? 'CheckBox' : 'LooksTwo'}\n                      color={ this.state.hasDeposited ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Deposit your {this.state.selectedTokenConfig.token}\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                      color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Wait for the batch to be migrated\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                      color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Claim your {this.state.selectedToken}V4\n                    </Text>\n                  </Flex>\n                </Flex>\n              </DashboardCard>\n          }\n          {\n            this.state.selectedToken ? (\n              <Box width={1}>\n                {\n                  this.state.migrationContractApproved && (this.state.canDeposit || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    batchMigrationDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        showActions={false}\n                        migrationParams={[]}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        callbackApprove={this.checkBatchs.bind(this)}\n                        selectedStrategy={this.props.selectedStrategy}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedTokenConfig.token} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        {\n                          !this.props.account ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3\n                              }}\n                            >\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  size={'2.3em'}\n                                  name={'Input'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Please connect with your wallet interact with Idle.\n                                </Text>\n                                <RoundButton\n                                  buttonProps={{\n                                    mt:2,\n                                    width:[1,1/2]\n                                  }}\n                                  handleClick={this.props.connectAndValidateAccount}\n                                >\n                                  Connect\n                                </RoundButton>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                my:3\n                              }}\n                            >\n                              {\n                                batchId ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      color={'cellText'}\n                                      name={'HourglassEmpty'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      {\n                                        this.state.batchCompleted ? (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >The batch has been migrated, click on the \"Claim\" button to withdraw your tokens.</Text.span>\n                                        ) : (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >\n                                            You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your tokens.\n                                            {\n                                              typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                              <Text.span\n                                                color={'cellText'}\n                                              >\n                                                <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                              </Text.span>\n                                            }\n                                          </Text.span>\n                                        )\n                                      }\n                                    </Text>\n                                  </Flex>\n                                ) : this.state.migrationSucceeded ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'DoneAll'}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You have successfully deposited your {this.state.selectedTokenConfig.token} into the batch!\n                                    </Text>\n                                  </Flex>\n                                ) : (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'MoneyOff'}\n                                      color={'cellText'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You don't have any {this.state.selectedTokenConfig.token} in your wallet.\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                            </DashboardCard>\n                          )\n                        }\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch migration is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar web3={this.props.web3} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.selectedToken} V4!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The batch has been migrated!<br />You can now claim your {this.state.tokenConfig.idle.token} V4.\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:3,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your V4 tokens.\n                                {\n                                  typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                  </Text.span>\n                                }\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Box>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchMigration;","import IDLE from '../contracts/IDLE.json';\nimport COMP from '../abis/compound/COMP.json';\nimport TokenSwap from '../TokenSwap/TokenSwap';\nimport yDAIv3 from '../abis/iearn/yDAIv3.json';\nimport yUSDCv3 from '../abis/iearn/yUSDCv3.json';\nimport yUSDTv3 from '../abis/iearn/yUSDTv3.json';\nimport ySUSDv3 from '../abis/iearn/ySUSDv3.json';\nimport yTUSDv3 from '../abis/iearn/yTUSDv3.json';\nimport Timelock from '../contracts/Timelock.json';\nimport CurveZap from '../abis/curve/CurveZap.json';\nimport CurveSwap from '../abis/curve/CurveSwap.json';\nimport CurvePool from '../abis/curve/CurvePool.json';\nimport NexusMutual from '../NexusMutual/NexusMutual';\nimport { Web3Versions } from '@terminal-packages/sdk';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport PriceOracle from '../contracts/PriceOracle.json';\nimport IdleTokenV2 from '../contracts/IdleTokenV2.json';\nimport StrategyPage from '../StrategyPage/StrategyPage';\nimport BuyModal from '../utilities/components/BuyModal';\nimport IdleTokenV3 from '../contracts/IdleTokenV3.json';\nimport EarlyRewards from '../contracts/EarlyRewards.json';\nimport CurveDeposit from '../abis/curve/CurveDeposit.json';\nimport VesterFactory from '../contracts/VesterFactory.json';\nimport GovernorAlpha from '../contracts/GovernorAlpha.json';\nimport EcosystemFund from '../contracts/EcosystemFund.json';\nimport Comptroller from '../abis/compound/Comptroller.json';\nimport IdleController from '../contracts/IdleController.json';\nimport TokenMigration from '../TokenMigration/TokenMigration';\nimport BatchMigration from '../BatchMigration/BatchMigration';\n// import GovernorAlphaComp from '../contracts/GovernorAlpha.json';\nimport { RampInstantSDK } from '@ramp-network/ramp-instant-sdk';\nimport IdleProxyMinter from '../contracts/IdleProxyMinter.json';\nimport IdleRebalancerV3 from '../contracts/IdleRebalancerV3.json';\nimport IdleBatchConverter from '../contracts/IdleBatchConverter.json';\nimport UniswapV2Router02 from '../abis/uniswap/UniswapV2Router02.json';\nimport IdleConverterPersonalSignV4 from '../contracts/IdleConverterPersonalSignV4.json';\n\nconst env = process.env;\n\nconst globalConfigs = {\n  appName: 'Idle',\n  version: 'v5.3',\n  baseURL: 'https://idle.finance',\n  baseToken: 'ETH',\n  countries:{\n    'USA':'United States of America',\n    'GBR':'United Kingdom',\n    'AUS':'Australia',\n    'BRA':'Brazil',\n    'CHN':'China',\n    'CAN':'Canada',\n    'EUR':'Europe',\n    'HKG':'Hong Kong',\n    'IND':'India',\n    'MEX':'Mexico',\n    'RUS':'Russia',\n    'ZAF':'South Africa',\n    'KOR':'South Korea'\n  },\n  logs:{ // Enable logs levels\n    errorsEnabled:false,\n    messagesEnabled:false,\n  },\n  connectors:{ // Connectors props\n    metamask:{\n      enabled:true,\n      subcaption:'Browser extension'\n    },\n    opera:{\n      enabled:true,\n      subcaption:'Opera injected wallet'\n    },\n    dapper:{\n      enabled:true,\n      icon:'dapper.png',\n      subcaption:'Browser extension',\n    },\n    coinbase:{\n      enabled:true,\n      icon:'coinbase.png',\n      subcaption:'Connect with Coinbase wallet'\n    },\n    trustwallet:{\n      enabled:true,\n      subcaption:'Connect with Trust Wallet'\n    },\n    walletconnect:{\n      enabled:true,\n      iconModal:'walletconnect.png',\n      subcaption:'Connect with QR code'\n    },\n    walletlink:{\n      enabled:true,\n      icon:'coinbase.png',\n      name:'Coinbase Wallet',\n      subcaption:'Connect with QR code'\n    },\n    fortmatic:{\n      enabled:true,\n      subcaption:'Login with phone-number'\n    },\n    portis:{\n      enabled:true,\n      subcaption:'Login with e-mail'\n    },\n    authereum:{\n      enabled:true,\n      subcaption:'Cross-device wallet'\n    },\n    torus:{\n      enabled:true,\n      icon:'torus.png',\n      subcaption:'One-Click login for Web 3.0'\n    },\n    trezor:{\n      enabled:true,\n      subcaption:'Hardware wallet'\n    },\n    ledger:{\n      enabled:true,\n      subcaption:'Hardware wallet'\n    }\n  },\n  newsletterSubscription:{\n    endpoint:'https://dev.lapisgroup.it/idle/newsletter.php'\n  },\n  messages:{\n    scoreShort:'Protocol Risk Score',\n    apyShort:'Annual Percentage Yield',\n    tokenPrice:'The token price is calculated using Uniswap spot prices.',\n    cheapRedeem:'Amount of unlent funds available for low gas fees redeem',\n    curveBonusSlippage:'Slippage or bonus depending on if the coin is low or high in the Curve Pool',\n    distributionSpeed:'The distribution indicates the amount of tokens distributed for the entire pool.',\n    directMint:'Pay an additional gas fee to rebalance the pool and help all users gain an additional APR',\n    performanceFee:'This fee is charged on positive returns generated by Idle including accrued gov tokens except IDLE',\n    govTokenApr:'Governance Token APR is calculated using the spot price from Uniswap and the current distribution speed for the specific pool.',\n    userDistributionSpeed:'The distribution indicates the amount of tokens distributed for your account based on your current pool share.',\n    govTokenRedeemableBalance:'The redeemable balance is re-calculated on every interaction with the smart-contract so, the shown balance may be lower than the real one.',\n    apyLong:'APY is based on (I) the current yield advertised by the underlying protocol, (II) the current distribution rate of governance tokens provided by underlying lending protocols (III) the current estimated price of governance tokens from Uniswap spot prices. (IV) IDLE token distribution is referred to the entire pool.',\n    yieldFarming:'Strategies in Idle now will be able to support and distribute a vast range of yield opportunities across multiple protocols. Users will be able to receive their equivalent share of governance token that the protocol is receiving while allocating liquidity to yield farming opportunities. <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://idlefinance.medium.com/idle-yield-farming-upgrade-18e4bc483c8f\">Read more here</a>.',\n    riskScore:`It's a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.<br /><br />The model outputs a 0-10 score, where <strong>0 is the most risky and 10 is the most safe.</strong> Visit <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://defiscore.io/overview\">https://defiscore.io/overview</a> for further information.`,\n    curveInstructions:`<strong>Depositing into the pool:</strong><br />By depositing your funds into the Curve Pool you may incur in slippage or bonus depending on if the coin is low or high in the pool.<br /><br /><strong>Withdrawing share from the pool:</strong><br />When you redeem your tokens previously deposited in the Curve Pool you get back an uneven amounts of tokens, that can give slippage or bonus depending on if the coin is low or high in the pool.`\n  },\n  analytics:{\n    google:{\n      events:{\n        enabled:true, // Enable Google Analytics events\n        addPostfixForTestnet:true, // Append testnet to eventCategory\n        debugEnabled:false // Enable sending for test environments\n      }\n    }\n  },\n  modals:{ // Enable modals\n    first_deposit_referral:false, // Referral share modal\n    first_deposit_share:true, // First deposit share modal\n    migrate:{\n      enabled:true\n    },\n    welcome:{ // Welcome modal\n      enabled:true,\n      frequency:604800 // One week\n    }\n  },\n  dashboard:{\n    baseRoute:'/dashboard',\n  },\n  governance:{\n    test:false,\n    enabled:true,\n    startBlock:11333729,\n    baseRoute:'/governance',\n    props:{\n      tokenName:'IDLE',\n      availableContracts:{\n        IDLE,\n        PriceOracle,\n        GovernorAlpha,\n        EcosystemFund,\n        IdleController\n      }\n    },\n    contracts:{\n      delegates:'IDLE',\n      governance:'GovernorAlpha',\n    }\n  },\n  curve:{\n    enabled:false,\n    params:{\n      n_coins:4,\n      label:'Curve',\n      route:'/dashboard/curve',\n      image:'images/protocols/curve.svg',\n      imageInactive:'images/protocols/curve-off.svg',\n    },\n    rates:{\n      path:['apy','day','y'],\n      endpoint:'https://www.curve.fi/raw-stats/apys.json'\n    },\n    poolContract:{\n      decimals:18,\n      abi:CurvePool,\n      name:'YDAI+YUSDC+YUSDT+YTUSD',\n      token:'YDAI+YUSDC+YUSDT+YTUSD',\n      address:'0xdf5e0e81dff6faf3a7e52ba697820c5e32d806a8'\n    },\n    depositContract:{\n      abi:CurveDeposit,\n      name:'idleCurveDeposit',\n      address:'0xbbc81d23ea2c3ec7e56d39296f0cbb648873a5d3'\n    },\n    zapContract:{\n      abi:CurveZap,\n      name:'idleCurveZap',\n      address:'0x456974df1042ba7a46fd49512a8778ac3b840a21'\n    },\n    migrationContract:{\n      abi:CurveSwap,\n      name:'idleCurveSwap',\n      address:'0x45F783CCE6B7FF23B2ab2D70e416cdb7D6055f51',\n      functions:[\n        {\n          label:'Deposit',\n          name:'add_liquidity'\n        },\n      ]\n    },\n    availableTokens:{\n      idleDAIYield:{\n        decimals:18,\n        enabled:true,\n        baseToken:'DAI',\n        token:'idleDAIYield',\n        address:'0x16de59092dae5ccf4a1e6439d611fd0653f0bd01',\n        migrationParams:{\n          n_coins:4,\n          coinIndex:0\n        },\n      },\n      idleUSDCYield:{\n        decimals:6,\n        enabled:true,\n        baseToken:'USDC',\n        token:'idleUSDCYield',\n        address:'0xd6ad7a6750a7593e092a9b218d66c0a814a3436e',\n        migrationParams:{\n          n_coins:4,\n          coinIndex:1\n        },\n      },\n      idleUSDTYield:{\n        decimals:6,\n        enabled:true,\n        baseToken:'USDT',\n        token:'idleUSDTYield',\n        address:'0x83f798e925bcd4017eb265844fddabb448f1707d',\n        migrationParams:{\n          n_coins:4,\n          coinIndex:2\n        },\n      },\n      idleTUSDYield:{\n        decimals:18,\n        enabled:true,\n        baseToken:'TUSD',\n        token:'idleTUSDYield',\n        address:'0x73a052500105205d34daf004eab301916da8190f',\n        migrationParams:{\n          n_coins:4,\n          coinIndex:3\n        },\n      },\n    }\n  },\n  govTokens:{\n    IDLE:{\n      abi:IDLE,\n      decimals:18,\n      token:'IDLE',\n      enabled:true,\n      showAUM:false, // Include IDLE balance in AUM\n      showAPR:false, // Include IDLE Apr\n      protocol:'idle',\n      showPrice:false, // Show price in Yield Farming section\n      showBalance:false, // Include IDLE balance in earnings\n      aprTooltipMode:false,\n      distributionFrequency:'day', // Multiply distribution per block\n      color:'hsl(162, 100%, 41%)',\n      icon:'images/tokens/IDLE.png',\n      address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e' // MAIN\n      // address:'0xAB6Bdb5CCF38ECDa7A92d04E86f7c53Eb72833dF', // KOVAN\n    },\n    COMP:{\n      abi:COMP,\n      decimals:18,\n      token:'COMP',\n      enabled:true,\n      showAUM:true, // Include IDLE balance in AUM\n      showAPR:true, // Include COMP Apr\n      showPrice:true,\n      showBalance:true, // Include COMP balance in earnings\n      protocol:'compound',\n      aprTooltipMode:false,\n      distributionFrequency:'day',\n      color:'hsl(162, 100%, 41%)',\n      address:'0xc00e94cb662c3520282e6f5717214004a7f26888', // MAIN\n      // address:'0x61460874a7196d6a22d1ee4922473664b3e95270' // KOVAN\n    }\n  },\n  contracts:{\n    PriceOracle:{\n      abi:PriceOracle,\n      address:'0x972A64d108e250dF98dbeac8170678501f5EF181' // MAIN\n      // address:'0xCab5760688db837Bb453FE1DFBC5eDeE6fa8F0FF' // KOVAN\n    },\n    Timelock:{\n      abi:Timelock,\n      address:'0xD6dABBc2b275114a2366555d6C481EF08FDC2556' // MAIN\n      // address:'0xfD88D7E737a06Aa9c62B950C1cB5eE63DA379AFd' // KOVAN\n    },\n    EcosystemFund:{\n      abi:EcosystemFund,\n      address:'0xb0aA1f98523Ec15932dd5fAAC5d86e57115571C7' // MAIN\n      // address:'0x125d3D6A8e546BD13802c309429CBB4db5737d57' // KOVAN\n    },\n    VesterFactory:{\n      abi:VesterFactory,\n      address:'0xbF875f2C6e4Cc1688dfe4ECf79583193B6089972' // MAIN\n      // address:'0x9b52f91578c8AfA8e2DF07d4D7726bB6b73Ec1FE' // KOVAN\n    },\n    IdleController:{\n      abi:IdleController,\n      address:'0x275DA8e61ea8E02d51EDd8d0DC5c0E62b4CDB0BE' // MAIN\n      // address:'0x8Ad5F0644b17208c81bA5BDBe689c9bcc7143d87' // KOVAN\n    },\n    EarlyRewards:{\n        abi:EarlyRewards,\n        address:'0xa1F71ED24ABA6c8Da8ca8C046bBc9804625d88Fc' // MAIN\n        // address:'0x07A94A60B54c6b2Da19e23D6E9123180Bf92ED40' // KOVAN\n    },\n    GovernorAlpha:{\n      abi:GovernorAlpha,\n      address:'0x2256b25CFC8E35c3135664FD03E77595042fe31B' // MAIN\n      // address:'0x782cB1dbd0bD4df95c2497819be3984EeA5c2c25' // KOVAN\n    },\n    /*\n    GovernanceCompound:{\n      abi:GovernorAlphaComp,\n      address:'0xc0da01a04c3f3e0be433606045bb7017a7323e38'\n    },\n    */\n    Comptroller:{\n      abi:Comptroller,\n      address:'0x3d9819210a31b4961b30ef54be2aed79b9c9cd3b', // Main\n      // address:'0x5eae89dc1c671724a672ff0630122ee834098657' // Kovan\n    },\n    UniswapRouter:{\n      abi:UniswapV2Router02,\n      address:'0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\n    },\n  },\n  tokens:{\n    DAI:{\n      zeroExInstant:{\n        orderSource: 'https://api.0x.org/sra/',\n        assetData:'0xf47261b00000000000000000000000006b175474e89094c44da98b954eedeac495271d0f',\n        affiliateInfo: {\n            feeRecipient: '0x4215606a720477178AdFCd5A59775C63138711e8',\n            feePercentage: 0.0025\n        },\n      },\n    },\n    USDC:{\n      zeroExInstant:{\n        orderSource: 'https://api.0x.org/sra/',\n        assetData:'0xf47261b0000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        affiliateInfo: {\n            feeRecipient: '0x4215606a720477178AdFCd5A59775C63138711e8',\n            feePercentage: 0.0025\n        },\n      },\n    },\n  },\n  strategies:{\n    best:{\n      token:'DAI',\n      color:'#f32121',\n      comingSoon:false,\n      addGovTokens:true,\n      titlePostfix:null,\n      title:'Best-Yield',\n      iconName:'Whatshot',\n      govTokensEnabled:true,\n      component: StrategyPage,\n      chartColor:'hsl(40,95%,59%)',\n      icon:'images/strategies/best-on.svg',\n      iconInactive:'images/strategies/best-off.svg',\n      desc:'Maximize your returns across DeFi protocols',\n      descLong:'The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.',\n      descShort:'The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.'\n    },\n    risk:{\n      token:'DAI',\n      color:'#2196F3',\n      comingSoon:false,\n      titlePostfix:null,\n      addGovTokens:true,\n      iconName:'Security',\n      title:'Risk-Adjusted',\n      govTokensEnabled:true,\n      component: StrategyPage,\n      chartColor:'hsl(211,67%,47%)',\n      icon:'images/strategies/risk-on.svg',\n      iconInactive:'images/strategies/risk-off.svg',\n      desc:'Optimize your risk exposure across DeFi protocols',\n      descLong:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.',\n      descShort:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.'\n    },\n    new:{\n      token:'DAI',\n      color:'#2196F3',\n      comingSoon:true,\n      addGovTokens:true,\n      iconName:'Adjust',\n      title:'Coming Soon',\n      chartColor:'hsl(211,67%,47%)',\n      icon:'images/strategies/solr-on.svg',\n      desc:'More strategies are coming soon!',\n      iconInactive:'images/strategies/solr-off.svg',\n      descLong:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.',\n      descShort:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.'\n    }\n  },\n  stats:{\n    enabled:true, // Enable endpoint\n    rates:{\n      TTL:300, // 5 minutes\n      endpoint:'https://api.idle.finance/rates/'\n    },\n    scores:{\n      TTL:300, // 5 minutes\n      endpoint:'https://api.idle.finance/scores/'\n    },\n    versions:{\n      /*\n      v2:{\n        label:'Idle V2',\n        startTimestamp:null,\n        additionalProtocols:[],\n        endTimestamp:1589752999,\n        enabledStrategies:['best'],\n        showPerformanceTooltip:false,\n        enabledTokens:['DAI','USDC'],\n      },\n      */\n      v3:{\n        label:'Idle V3',\n        additionalProtocols:[],\n        endTimestamp:1597237542,\n        startTimestamp:1589801874,\n        showPerformanceTooltip:false,\n        strategiesParams:{\n          risk:{\n            endTimestamp:1597233922,\n          }\n        },\n        enabledStrategies:['best','risk'],\n        enabledTokens:['DAI','USDC','USDT','TUSD','SUSD','WBTC'],\n      },\n      v4:{\n        label:'Idle V4',\n        endTimestamp:null,\n        startTimestamp:1597442400, // 1598220000\n        enabledStrategies:['best','risk'],\n        showPerformanceTooltip:true,\n        strategiesParams:{\n          risk:{\n            startTimestamp:1599183170,\n          }\n        },\n        enabledTokens:['DAI','USDC','USDT','TUSD','SUSD','WBTC'],\n        additionalProtocols:[\n          {\n            decimals:16,\n            protocol:'compound',\n            name:'compoundWithCOMP',\n          }\n        ]\n      }\n    },\n    tokens:{\n      DAI:{\n        decimals:18,\n        enabled:true,\n        color:{\n          rgb:[250,184,51],\n          hex:'#F7B24A',\n          hsl:['40', '95%', '59%']\n        },\n        chart:{\n          labelTextColorModifiers:['darker', 2]\n        },\n        startTimestamp:'2020-02-11',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      USD:{\n        enabled:true,\n        color:{\n          hex:'#85bb65',\n          rgb:[133, 187, 101],\n          hsl:['98', '39%', '56%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 2]\n        },\n        address:null,\n        startTimestamp:'2020-02-04',\n      },\n      USDC:{\n        decimals:6,\n        enabled:true,\n        color:{\n          hex:'#2875C8',\n          rgb:[40,117,200],\n          hsl:['211', '67%', '47%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 2]\n        },\n        startTimestamp:'2020-02-04',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      USDT:{\n        decimals:6,\n        enabled:true,\n        color:{\n          hex:'#22a079',\n          rgb:[34, 160, 121],\n          hsl:['161', '65%', '38%']\n        },\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        startTimestamp:'2020-02-04',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      TUSD:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#002868',\n          rgb:[0, 40, 104],\n          hsl:['217', '100%', '20%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 5]\n        },\n        startTimestamp:'2020-06-22',\n        address:'0x0000000000085d4780b73119b644ae5ecd22b376',\n      },\n      SUSD:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#1e1a31',\n          rgb:[30, 26, 49],\n          hsl:['250', '31%', '15%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 5]\n        },\n        startTimestamp:'2020-06-22',\n        address:'0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n      },\n      WBTC:{\n        decimals:8,\n        enabled:true,\n        color:{\n          hex:'#eb9444',\n          rgb:[235, 148, 68],\n          hsl:['29', '81%', '59%']\n        },\n        startTimestamp:'2020-06-15',\n        conversionRateField:'wbtcDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4],\n        },\n        address:'0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      COMP:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#00d395',\n          rgb:[0, 211, 149],\n          hsl:['162', '100%', '41%']\n        },\n        startTimestamp:'2020-06-15',\n        conversionRateField:'compDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0xc00e94cb662c3520282e6f5717214004a7f26888',\n      },\n      IDLE:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#0d55bb',\n          rgb:[13, 85, 187],\n          hsl:['215', '87%', '39%']\n        },\n        startTimestamp:'2020-11-10',\n        icon:'images/tokens/IDLE.png',\n        conversionRateField:'idleDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0xc00e94cb662c3520282e6f5717214004a7f26888',\n      },\n      'YDAI+YUSDC+YUSDT+YTUSD':{\n        decimals:18,\n        enabled:false,\n        name:'Curve.fi',\n        color:{\n          hex:'#ff0000',\n          rgb:[255, 0, 0],\n          hsl:['0', '100%', '50%']\n        },\n        startTimestamp:'2020-06-15',\n      },\n    },\n    protocols:{\n      compound:{\n        legend:true,\n        label:'Compound',\n        color:{\n          rgb:[0, 209, 146],\n          hsl:['162', '100%', '41%']\n        }\n      },\n      compoundWithCOMP:{\n        rateField:['rate','compoundAdditionalAPR'],\n        label:'Compound + COMP',\n        color:{\n          rgb:[0, 153, 107],\n          hsl:['162', '100%', '30%']\n        }\n      },\n      fulcrum:{\n        legend:false,\n        label:'Fulcrum',\n        color:{\n          rgb:[2, 138, 192],\n          hsl:['197', '98%', '38%']\n        }\n      },\n      dsr:{\n        label:'DSR',\n        icon:'CHAI.png',\n        color:{\n          rgb:[222, 52, 67],\n          hsl:['355', '72%', '54%']\n        }\n      },\n      dydx:{\n        label:'DyDx',\n        legend:true,\n        color:{\n          rgb:[87, 87, 90],\n          hsl:['240', '2%', '35%']\n        }\n      },\n      iearn:{\n        label:'Yearn'\n      },\n      aave:{\n        label:'Aave',\n        legend:true,\n        color:{\n          rgb:[230, 131, 206],\n          hsl:['315', '66%', '71%']\n        },\n        data:{\n          '0xfc1e690f61efd961294b3e1ce3313fbd8aa4f85d':{},\n          '0x9ba00d6856a4edf4665bca2c2309936572473b7e':{\"9598633\":\"1000000\",\"9598646\":\"1000001\",\"9598684\":\"1000002\",\"9598823\":\"1000003\",\"9598869\":\"1000004\",\"9598915\":\"1000005\",\"9599092\":\"1000008\",\"9599138\":\"1000009\",\"9599263\":\"1000011\",\"9599267\":\"1000011\",\"9599295\":\"1000012\",\"9599299\":\"1000012\",\"9599307\":\"1000012\",\"9599315\":\"1000012\",\"9599579\":\"1000017\",\"9599866\":\"1000022\",\"9600156\":\"1000026\",\"9600433\":\"1000031\",\"9600704\":\"1000036\",\"9600982\":\"1000042\",\"9601051\":\"1000044\",\"9601073\":\"1000045\",\"9601077\":\"1000045\",\"9601345\":\"1000053\",\"9601619\":\"1000058\",\"9601891\":\"1000063\",\"9602144\":\"1000068\",\"9602429\":\"1000073\",\"9602724\":\"1000078\",\"9602993\":\"1000083\",\"9603272\":\"1000088\",\"9603536\":\"1000093\",\"9603826\":\"1000098\",\"9603840\":\"1000098\",\"9604038\":\"1000102\",\"9604182\":\"1000104\",\"9604457\":\"1000109\",\"9604701\":\"1000114\",\"9604979\":\"1000119\",\"9605247\":\"1000124\",\"9605505\":\"1000129\",\"9605793\":\"1000134\",\"9606073\":\"1000139\",\"9606368\":\"1000144\",\"9606639\":\"1000149\",\"9606896\":\"1000153\",\"9607147\":\"1000158\",\"9607406\":\"1000163\",\"9607722\":\"1000168\",\"9608130\":\"1000175\",\"9608395\":\"1000180\",\"9608656\":\"1000185\",\"9608959\":\"1000190\",\"9609544\":\"1000260\",\"9609811\":\"1000293\",\"9610073\":\"1000314\",\"9610341\":\"1000331\",\"9610601\":\"1000332\",\"9610871\":\"1000333\",\"9611120\":\"1000335\",\"9611386\":\"1000336\",\"9611665\":\"1000337\",\"9611949\":\"1000339\",\"9612210\":\"1000340\",\"9612487\":\"1000341\",\"9612758\":\"1000343\",\"9613012\":\"1000344\",\"9613276\":\"1000346\",\"9613542\":\"1000347\",\"9613824\":\"1000349\",\"9614069\":\"1000351\",\"9614327\":\"1000353\",\"9614596\":\"1000355\",\"9614864\":\"1000356\",\"9615111\":\"1000358\",\"9615394\":\"1000360\",\"9615679\":\"1000361\",\"9615958\":\"1000363\",\"9616245\":\"1000365\",\"9616531\":\"1000367\",\"9616803\":\"1000369\",\"9617053\":\"1000371\",\"9617326\":\"1000373\"}\n        }\n      },\n      curve:{\n        label:'',\n        color:{\n          rgb:[0, 55, 255],\n          hsl:['227', '100%', '50%']\n        }\n      },\n      idle:{\n        label:'Idle',\n        color:{\n          rgb:[0, 55, 255],\n          hsl:['227', '100%', '50%']\n        }\n      }\n    }\n  },\n  contract:{\n    methods:{\n      redeem:{\n        skipRebalance:true,\n        metaTransactionsEnabled:false\n      },\n      deposit:{\n        skipMint:true,\n        minAmountForMint:5000,\n        skipMintCheckboxEnabled:true,\n        metaTransactionsEnabled:false,\n        proxyContract:{\n          enabled:false,\n          abi:IdleProxyMinter,\n          name:'IdleProxyMinter',\n          function:'mintIdleTokensProxy',\n          address:'0x7C4414aA6B0c6CB1Bc7e5BFb7433138426AC637a',\n        }\n      },\n      migrate:{\n        skipRebalance:true,\n        minAmountForRebalance:10000,\n        minAmountForRebalanceMetaTx:10000\n      },\n      redeemGovTokens:{\n        enabled:true\n      },\n      rebalance:{\n        enabled:true,\n        abi:IdleRebalancerV3\n      }\n    }\n  },\n  network:{ // Network configurations\n    availableNetworks:{\n      1:'Mainnet',\n      3:'Ropsten',\n      4:'Rinkeby',\n      42:'Kovan'\n    },\n    isForked:false, // If TRUE the tx confirmation callback is fired on the receipt\n    requiredNetwork:1, // { 1: Mainnet, 3: Ropsten, 42: Kovan }\n    blocksPerYear:2371428,\n    firstBlockNumber:8119247,\n    requiredConfirmations: 1,\n    accountBalanceMinimum: 0, // in ETH for gas fees\n    providers:{\n      infura:{\n        1: 'https://mainnet.infura.io/v3/',\n        42: 'https://kovan.infura.io/v3/'\n      },\n      etherscan:{\n        enabled:true, // False for empty txs list (try new wallet)\n        endpoints:{\n          1: 'https://api.etherscan.io/api',\n          42: 'https://api-kovan.etherscan.io/api'\n        }\n      },\n      biconomy:{\n        enabled:false,\n        enableLogin:false,\n        supportedNetworks:[1,42],\n        disabledWallets:['authereum'],\n        endpoints:{\n          limits:'https://api.biconomy.io/api/v1/dapp/checkLimits'\n        },\n        params:{\n          debug: false,\n          apiKey: env.REACT_APP_BICONOMY_KEY,\n          dappId: env.REACT_APP_BICONOMY_APPID,\n          apiId: '36572ec9-ae5c-4c4a-9530-f3ae7c7ac829'\n        }\n      },\n      terminal:{\n        enabled:false,\n        supportedNetworks:[1,42],\n        params:{\n          apiKey: env.REACT_APP_TERMINAL_KEY,\n          projectId: env.REACT_APP_TERMINAL_PROJECT_ID,\n          source: null,\n          web3Version: Web3Versions.one\n        }\n      },\n      simpleID:{\n        enabled:false,\n        supportedNetworks:[1],\n        getNetwork:(networkId,availableNetworks) => {\n          let networkName = null;\n          switch (networkId){\n            case 1:\n              networkName = 'mainnet';\n            break;\n            default:\n              networkName = availableNetworks[networkId] ? availableNetworks[networkId].toLowerCase() : 'mainnet';\n            break;\n          }\n          return networkName;\n        },\n        params:{\n          appOrigin: window.location.origin,\n          appName: \"Idle\",\n          appId: \"eb4d1754-a76e-4c58-8422-54b5ca2395e7\",\n          renderNotifications: false,\n          network: 'mainnet'\n        }\n      }\n    }\n  },\n  tools:{\n    batchMigration:{\n      enabled:true,\n      claimEnabled:true,\n      depositEnabled:false,\n      icon:'FileDownload',\n      route:'batch-migration',\n      label:'Batch Migration',\n      subComponent:BatchMigration,\n      desc:'Deposit your Idle Tokens V3 into a batch and wait until it is converted to the Idle Token V4.',\n      props:{\n        availableTokens:{\n          idleDAIYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'DAI',\n            name:'idleDAIYieldV3',\n            token:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterDAI',\n              address:'0xe0BfD08dA4DAf8f8BA11d1c3802009E75f963497',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDC',\n            name:'idleUSDCYieldV3',\n            token:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDC',\n              address:'0x86c8b56d124c2a8e7ea8a9e6a7f8ed99dde5cca8',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDTYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDT',\n            name:'idleUSDTYieldV3',\n            token:'idleUSDTYieldV3',\n            address:'0x63D27B3DA94A9E871222CB0A32232674B02D2f2D',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDT',\n              address:'0xee5c50c7c49dec47dde2f9b0233b9e14a8f00cf2',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleSUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'SUSD',\n            name:'idleSUSDYieldV3',\n            token:'idleSUSDYieldV3',\n            address:'0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterSUSD',\n              address:'0xE2eE519399a49f1A2004a25DA61e82867A69b9b1',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleTUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'TUSD',\n            name:'idleTUSDYieldV3',\n            token:'idleTUSDYieldV3',\n            address:'0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterTUSD',\n              address:'0x174a273f0ea28e55b6dd13259aa43d262b863a86',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleWBTCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'WBTC',\n            name:'idleWBTCYieldV3',\n            token:'idleWBTCYieldV3',\n            address:'0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterWBTC',\n              address:'0xbfDC7d97559173B52EF2A2f1bC9BeCf97B0D401D',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleDAISafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'DAI',\n            name:'idleDAISafeV3',\n            token:'idleDAISafeV3',\n            address:'0x1846bdfDB6A0f5c473dEc610144513bd071999fB',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterDAISafe',\n              address:'0x08db226d63cE724A6091Ba82D28dFc76ceCa23d8',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDCSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDC',\n            name:'idleUSDCSafeV3',\n            token:'idleUSDCSafeV3',\n            address:'0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDCSafe',\n              address:'0xA6C89A31D59f9C68D9Cba28d690C5E52058fb472',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDTSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDT',\n            name:'idleUSDTSafeV3',\n            token:'idleUSDTSafeV3',\n            address:'0x42740698959761baf1b06baa51efbd88cb1d862b',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDTSafe',\n              address:'0xd47B96Fb33b79a4Dd81a2bfa676eBB669166f619',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          }\n        }\n      }\n    },\n    tokenMigration:{\n      enabled:true,\n      icon:'SwapHoriz',\n      route:'convert',\n      label:'Token Migration',\n      desc:'Easily convert your Compound, Fulcrum, Aave and iEarn tokens into Idle',\n      subComponent:TokenMigration,\n      props:{\n        migrationContract:{\n          name:'IdleConverterV4',\n          abi:IdleConverterPersonalSignV4,\n          address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n          oldAddresses:[],\n          functions:[\n            {\n              label:'Migrate',\n              name:'migrateFromToIdle'\n            },\n          ]\n        },\n        availableStrategies:['best','risk'],\n        availableTokens:{\n          idleDAIv2:{\n            decimals:18,\n            enabled:true,\n            protocol:'idle',\n            baseToken:'DAI',\n            abi:IdleTokenV2,\n            token:'idleDAIOld',\n            icon:'images/tokens/idleDAI.svg',\n            migrateFunction:'migrateFromToIdle',\n            address:'0x10eC0D497824e342bCB0EDcE00959142aAa766dD',\n          },\n          cDAI:{\n            decimals:8,\n            enabled:true,\n            token:\"cDAI\",\n            baseToken:'DAI',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643\",\n          },\n          iDAI:{\n            decimals:18,\n            enabled:false,\n            token:\"iDAI\",\n            baseToken:'DAI',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0x493c57c4763932315a328269e1adad09653b9081\",\n          },\n          aDAI:{\n            decimals:18,\n            enabled:true,\n            token:\"aDAI\",\n            protocol:\"aave\",\n            baseToken:'DAI',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d\",\n          },\n          yDAIv3:{\n            decimals:18,\n            enabled:true,\n            token:\"yDAIv3\",\n            abi:yDAIv3.abi,\n            baseToken:'DAI',\n            protocol:\"iearn\",\n            icon:'images/tokens/yDAI.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xC2cB1040220768554cf699b0d863A3cd4324ce32\",\n          },\n          yDAIv2:{\n            decimals:18,\n            enabled:true,\n            token:\"yDAIv2\",\n            baseToken:'DAI',\n            abi:yDAIv3.abi,\n            protocol:\"iearn\",\n            icon:'images/tokens/yDAI.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x16de59092dAE5CcF4A1E6439D611fd0653f0Bd01\",\n          },\n          idleUSDCv2:{\n            decimals:18,\n            enabled:true,\n            protocol:'idle',\n            abi:IdleTokenV2,\n            baseToken:'USDC',\n            token:'idleUSDCOld',\n            icon:'images/tokens/idleUSDC.svg',\n            migrateFunction:'migrateFromToIdle',\n            address:'0xeB66ACc3d011056B00ea521F8203580C2E5d3991',\n          },\n          cUSDC:{\n            decimals:8,\n            enabled:true,\n            token:\"cUSDC\",\n            baseToken:'USDC',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0x39aa39c021dfbae8fac545936693ac917d5e7563\",\n          },\n          iUSDC:{\n            decimals:6,\n            enabled:false,\n            token:\"iUSDC\",\n            baseToken:'USDC',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0xf013406a0b1d544238083df0b93ad0d2cbe0f65f\",\n          },\n          aUSDC:{\n            decimals:6,\n            enabled:true,\n            token:\"aUSDC\",\n            protocol:\"aave\",\n            baseToken:'USDC',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x9bA00D6856a4eDF4665BcA2C2309936572473B7E\",\n          },\n          yUSDCv3:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDCv3\",\n            protocol:\"iearn\",\n            abi:yUSDCv3.abi,\n            baseToken:'USDC',\n            icon:'images/tokens/yUSDC.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x26EA744E5B887E5205727f55dFBE8685e3b21951\",\n          },\n          yUSDCv2:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDCv2\",\n            protocol:\"iearn\",\n            abi:yUSDCv3.abi,\n            baseToken:'USDC',\n            icon:'images/tokens/yUSDC.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xd6aD7a6750A7593E092a9B218d66C0A814a3436e\",\n          },\n          cUSDT:{\n            decimals:8,\n            enabled:true,\n            token:\"cUSDT\",\n            baseToken:'USDT',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9\",\n          },\n          iUSDT:{\n            decimals:6,\n            enabled:false,\n            token:\"iUSDT\",\n            baseToken:'USDT',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0x8326645f3aa6de6420102fdb7da9e3a91855045b\",\n          },\n          aUSDT:{\n            decimals:6,\n            enabled:true,\n            token:\"aUSDT\",\n            protocol:\"aave\",\n            baseToken:'USDT',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x71fc860F7D3A592A4a98740e39dB31d25db65ae8\",\n          },\n          yUSDTv3:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDTv3\",\n            abi:yUSDTv3.abi,\n            protocol:\"iearn\",\n            baseToken:'USDT',\n            icon:'images/tokens/yUSDT.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xE6354ed5bC4b393a5Aad09f21c46E101e692d447\",\n          },\n          yUSDTv2:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDTv2\",\n            abi:yUSDTv3.abi,\n            protocol:\"iearn\",\n            baseToken:'USDT',\n            icon:'images/tokens/yUSDT.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x83f798e925BcD4017Eb265844FDDAbb448f1707D\",\n          },\n          idleSUSDv2:{\n            decimals:18,\n            enabled:true,\n            abi:IdleTokenV2,\n            protocol:'idle',\n            baseToken:'SUSD',\n            token:'idleSUSDYieldOld',\n            availableStrategies:['best'],\n            migrateFunction:'migrateFromToIdle',\n            icon:'images/tokens/idleSUSDYield.svg',\n            address:'0xb39ca0261a1b2986a6a9Fe38d344B56374963dE5',\n          },\n          aSUSD:{\n            decimals:6,\n            enabled:true,\n            token:\"aSUSD\",\n            protocol:\"aave\",\n            baseToken:'SUSD',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x625aE63000f46200499120B906716420bd059240\",\n          },\n          ySUSDv3:{\n            decimals:18,\n            enabled:true,\n            token:\"ySUSDv3\",\n            abi:ySUSDv3,\n            baseToken:'SUSD',\n            protocol:\"iearn\",\n            availableStrategies:['best'],\n            icon:'images/tokens/ySUSDv3.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xf61718057901f84c4eec4339ef8f0d86d2b45600\",\n          },\n          idleTUSDv2:{\n            decimals:18,\n            enabled:true,\n            abi:IdleTokenV2,\n            protocol:'idle',\n            baseToken:'TUSD',\n            token:'idleTUSDYieldOld',\n            availableStrategies:['best'],\n            migrateFunction:'migrateFromToIdle',\n            icon:'images/tokens/idleTUSDYield.svg',\n            address:'0x7DB7A4a50b26602E56536189Aa94678C80F8E5b6',\n          },\n          aTUSD:{\n            decimals:6,\n            enabled:true,\n            token:\"aTUSD\",\n            protocol:\"aave\",\n            baseToken:'TUSD',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x4DA9b813057D04BAef4e5800E36083717b4a0341\",\n          },\n          yTUSDv3:{\n            decimals:18,\n            enabled:true,\n            abi:yTUSDv3,\n            token:\"yTUSDv3\",\n            baseToken:'TUSD',\n            protocol:\"iearn\",\n            icon:'images/tokens/yTUSDv3.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x73a052500105205d34daf004eab301916da8190f\",\n          },\n          cWBTC:{\n            decimals:8,\n            enabled:true,\n            token:\"cWBTC\",\n            baseToken:'WBTC',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0xc11b1268c1a384e55c48c2391d8d480264a3a7f4\",\n          },\n          iWBTC:{\n            decimals:8,\n            enabled:false,\n            token:\"iWBTC\",\n            baseToken:'WBTC',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0xba9262578efef8b3aff7f60cd629d6cc8859c8b5\",\n          },\n          aWBTC:{\n            decimals:8,\n            enabled:true,\n            token:\"aWBTC\",\n            protocol:\"aave\",\n            baseToken:'WBTC',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0xfc4b8ed459e00e5400be803a9bb3954234fd50e3\",\n          },\n        }\n      }\n    },\n    addFunds:{\n      enabled:true,\n      icon:'AddCircleOutline',\n      route:'add-funds',\n      label:'Add Funds',\n      desc:'Buy tokens with Bank account or Credit card',\n      subComponent:BuyModal,\n      directProps:{\n        showInline:true,\n        showAllTokens:true\n      }\n    },\n    insurance:{\n      enabled:false,\n      icon:'Security',\n      route:'nexus-mutual',\n      label:'Nexus Mutual',\n      desc:'Buy tokens with Bank account or Credit card',\n      subComponent:NexusMutual,\n      props:{\n        availableTokens:{\n          \"ETH\":{\"token\":\"ETH\"},\n          \"DAI\":{\"token\":\"DAI\"},\n        }\n      },\n      directProps:{\n        ens:'idlefinancev3.nexusmutual.eth',\n        address:'0x78751B12Da02728F467A44eAc40F5cbc16Bd7934'\n      }\n    },\n    tokenSwap:{\n      enabled:true,\n      icon:'Sync',\n      route:'token-swap',\n      label:'Token Swap',\n      desc:'Easily swap your tokens with Kyber Widget',\n      subComponent:TokenSwap,\n      props:{\n        availableTokens:{\n          \"ETH\":{\"token\":\"ETH\"},\n          \"DAI\":{\"token\":\"DAI\"},\n          \"SUSD\":{\"token\":\"SUSD\"},\n          \"TUSD\":{\"token\":\"TUSD\"},\n          \"USDC\":{\"token\":\"USDC\"},\n          \"USDS\":{\"token\":\"USDS\"},\n          \"USDT\":{\"token\":\"USDT\"},\n          \"WBTC\":{\"token\":\"WBTC\"},\n          \"WETH\":{\"token\":\"WETH\"},\n          \"BUSD\":{\"token\":\"BUSD\"},\n          \"EURS\":{\"token\":\"EURS\"},\n          \"2KEY\":{\"token\":\"2KEY\"},\n          \"ABT\":{\"token\":\"ABT\"},\n          \"ABYSS\":{\"token\":\"ABYSS\"},\n          \"AMPL\":{\"token\":\"AMPL\"},\n          \"ANT\":{\"token\":\"ANT\"},\n          \"BAM\":{\"token\":\"BAM\"},\n          \"BAND\":{\"token\":\"BAND\"},\n          \"BAT\":{\"token\":\"BAT\"},\n          \"BLZ\":{\"token\":\"BLZ\"},\n          \"BNT\":{\"token\":\"BNT\"},\n          \"BQX\":{\"token\":\"BQX\"},\n          \"BTU\":{\"token\":\"BTU\"},\n          \"CDT\":{\"token\":\"CDT\"},\n          \"CVC\":{\"token\":\"CVC\"},\n          \"DAT\":{\"token\":\"DAT\"},\n          \"DGX\":{\"token\":\"DGX\"},\n          \"EKG\":{\"token\":\"EKG\"},\n          \"ELF\":{\"token\":\"ELF\"},\n          \"ENJ\":{\"token\":\"ENJ\"},\n          \"EQUAD\":{\"token\":\"EQUAD\"},\n          \"FXC\":{\"token\":\"FXC\"},\n          \"GDC\":{\"token\":\"GDC\"},\n          \"GEN\":{\"token\":\"GEN\"},\n          \"GHT\":{\"token\":\"GHT\"},\n          \"GNO\":{\"token\":\"GNO\"},\n          \"IOST\":{\"token\":\"IOST\"},\n          \"KEY\":{\"token\":\"KEY\"},\n          \"KNC\":{\"token\":\"KNC\"},\n          \"LEND\":{\"token\":\"LEND\"},\n          \"LINK\":{\"token\":\"LINK\"},\n          \"LOOM\":{\"token\":\"LOOM\"},\n          \"LRC\":{\"token\":\"LRC\"},\n          \"MANA\":{\"token\":\"MANA\"},\n          \"MCO\":{\"token\":\"MCO\"},\n          \"MET\":{\"token\":\"MET\"},\n          \"MFG\":{\"token\":\"MFG\"},\n          \"MKR\":{\"token\":\"MKR\"},\n          \"MLN\":{\"token\":\"MLN\"},\n          \"MTL\":{\"token\":\"MTL\"},\n          \"MYB\":{\"token\":\"MYB\"},\n          \"NEXXO\":{\"token\":\"NEXXO\"},\n          \"NPXS\":{\"token\":\"NPXS\"},\n          \"OGN\":{\"token\":\"OGN\"},\n          \"OMG\":{\"token\":\"OMG\"},\n          \"OST\":{\"token\":\"OST\"},\n          \"PAX\":{\"token\":\"PAX\"},\n          \"PBTC\":{\"token\":\"PBTC\"},\n          \"PLR\":{\"token\":\"PLR\"},\n          \"PNK\":{\"token\":\"PNK\"},\n          \"POLY\":{\"token\":\"POLY\"},\n          \"POWR\":{\"token\":\"POWR\"},\n          \"PT\":{\"token\":\"PT\"},\n          \"QKC\":{\"token\":\"QKC\"},\n          \"QNT\":{\"token\":\"QNT\"},\n          \"RAE\":{\"token\":\"RAE\"},\n          \"REN\":{\"token\":\"REN\"},\n          \"REP\":{\"token\":\"REP\"},\n          \"REQ\":{\"token\":\"REQ\"},\n          \"RLC\":{\"token\":\"RLC\"},\n          \"RSR\":{\"token\":\"RSR\"},\n          \"RSV\":{\"token\":\"RSV\"},\n          \"SAN\":{\"token\":\"SAN\"},\n          \"SNT\":{\"token\":\"SNT\"},\n          \"SNX\":{\"token\":\"SNX\"},\n          \"SPIKE\":{\"token\":\"SPIKE\"},\n          \"SPN\":{\"token\":\"SPN\"},\n          \"TKN\":{\"token\":\"TKN\"},\n          \"TKX\":{\"token\":\"TKX\"},\n          \"TRYB\":{\"token\":\"TRYB\"},\n          \"UBT\":{\"token\":\"UBT\"},\n          \"UPP\":{\"token\":\"UPP\"},\n          \"ZRX\":{\"token\":\"ZRX\"}\n        }\n      },\n      directProps:{\n      }\n    }\n  },\n  payments: { // Payment methods & providers\n    methods:{\n      bank:{\n        defaultProvider:null,\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/bank.png',\n          caption:'Bank Account'\n        }\n      },\n      card:{\n        defaultProvider:null,\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/debit-card.png',\n          caption:'Credit Card'\n        }\n      },\n      wallet:{\n        defaultProvider:'zeroExInstant',\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/ethereum-wallet.svg',\n          caption:'Ethereum Wallet',\n          imageProps:{\n            padding:['0','5px']\n          }\n        }\n      },\n    },\n    providers: {\n      wyre: {\n        enabled: true,\n        imageSrc: 'images/payments/wyre.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0.75% fee ~',\n        supportedMethods:['card'],\n        supportedCountries:['USA','GBR','AUS','BRA','CHN','MEX','EUR'],\n        supportedTokens:['USDC','DAI','ETH'],\n        remoteResources:{},\n        env:'prod',\n        envParams:{\n          test:{\n            accountId:'AC_Q2Y4AARC3TP'\n          },\n          prod:{\n            accountId:'AC_PQQBX33XVEQ'\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod){\n            switch (props.selectedMethod){\n              case 'bank':\n                info.subcaption = `~ 0.75% fee ~\\nKYC REQUIRED`;\n              break;\n              case 'card':\n                info.subcaption = `~ 3.2% fee ~\\n$250.00/day`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.wyre.env;\n          const envParams = globalConfigs.payments.providers.wyre.envParams[env];\n          const referrerAccountId = envParams.accountId;\n          const url = 'https://pay.sendwyre.com/purchase';\n\n          const params = {\n            dest: `ethereum:${props.account}`,\n            destCurrency: buyParams.selectedToken ? buyParams.selectedToken : ( props.tokenConfig.wyre && props.tokenConfig.wyre.destCurrency ? props.tokenConfig.wyre.destCurrency : props.selectedToken ),\n            referrerAccountId,\n            redirectUrl:globalConfigs.baseURL\n            // failureRedirectUrl:globalConfigs.baseURL\n          };\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          const wyreWidget = document.getElementById('wyre-widget');\n          if (!wyreWidget){\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"wyre-widget\" class=\"wyre-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"wyre-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                <a class=\"wyre-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('wyre-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                <div id=\"wyre-widget-container\" style=\"position:relative;z-index:2;width:400px;height:650px\">\n                  <iframe\n                    style=\"position:relative;z-index:2;\"\n                    frameborder=\"0\"\n                    height=\"100%\"\n                    src=\"${initParams}\"\n                    width=\"100%\"\n                  >\n                    <p>Your browser does not support iframes.</p>\n                  </iframe>\n                  <div id=\"wyre-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                    <div style=\"display:flex;flex-direction:row;align-items:center\">\n                      <img src=\"${globalConfigs.payments.providers.wyre.imageSrc}\" style=\"height:50px;\" />\n                      <h3 style=\"font-weight:600;font-style:italic;color:#000;padding-left:10px\">is loading...</h3>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add wyre Widget style (mobile)\n            if (!document.getElementById('wyreWidget_style')){\n              const wyreStyle = document.createElement('style');\n              wyreStyle.id = 'wyreWidget_style';\n              wyreStyle.innerHTML = `\n              @media (max-width: 40em){\n                #wyre-widget {\n                  align-items: flex-start !important;\n                }\n                #wyre-widget-overlay{\n                  background:#fff !important;\n                }\n                #wyre-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(wyreStyle);\n            }\n          }\n        },\n      },\n      ramp: {\n        enabled:true,\n        imageSrc: 'images/payments/ramp.png',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption:`~ 2.5% fee ~\\nEUR / GBP`,\n        supportedMethods:['bank'],\n        badge: {\n          text:'NO ID REQUIRED',\n          color:'#fff',\n          bgColor:'#0cade4'\n        },\n        supportedCountries:['GBR','EUR'],\n        supportedTokens:['ETH','DAI','USDC'],\n        getInitParams: (props,globalConfigs,buyParams) => {\n        \treturn {\n\t          hostAppName: 'Idle',\n            userAddress: props.account,\n            hostApiKey: env.REACT_APP_RAMP_KEY,\n            variant: props.isMobile ? 'mobile' : 'desktop',\n            hostLogoUrl: `${globalConfigs.baseURL}/images/idle-round.png`,\n            swapAsset: buyParams.selectedToken ? buyParams.selectedToken : ( props.tokenConfig.ramp && props.tokenConfig.ramp.swapAsset ? props.tokenConfig.ramp.swapAsset : props.selectedToken )\n        \t};\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          new RampInstantSDK(initParams)\n            .on('*', async (event) => {\n              const functionsUtil = new FunctionsUtil(props);\n              let tokenDecimals = null;\n              let tokenAmount = null;\n\n              switch (event.type){\n                case 'PURCHASE_SUCCESSFUL':\n                  // Update balance\n                  props.getAccountBalance();\n\n                  tokenDecimals = await props.getTokenDecimals();\n\n                  tokenAmount = event.payload.purchase.tokenAmount;\n                  tokenAmount = functionsUtil.BNify(tokenAmount.toString()).div(functionsUtil.BNify(Math.pow(10,parseInt(tokenDecimals)).toString())).toString();\n\n                  // Toast message\n                  window.toastProvider.addMessage(`Payment completed`, {\n                    secondaryMessage: `${tokenAmount} ${props.selectedToken} are now in your wallet`,\n                    colorTheme: 'light',\n                    actionHref: \"\",\n                    actionText: \"\",\n                    variant: \"success\",\n                  });\n\n                break;\n                default:\n                break;\n              }\n            })\n            .show();\n        }\n      },\n      transak: {\n        enabled:true,\n        imageSrc: 'images/payments/transak.png',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption:`~ 1.5% fee ~\\nALL CURRENCIES`,\n        supportedMethods:['bank','card'],\n        supportedCountries:['USA','GBR','AUS','BRA','CHN','MEX','EUR','IND'],\n        supportedTokens:['ETH','DAI','USDC','USDT','TUSD','SUSD','WBTC'],\n        remoteResources:{'https://global.transak.com/v1/widget.js':{}},\n        env:'prod',\n        badge:{\n          text:'INSTANT',\n          bgColor:'#0069ee'\n        },\n        envParams:{\n          test:{\n            apiKey:env.REACT_APP_TRANSAK_KEY_TEST,\n            url:'https://global.transak.com'\n          },\n          prod:{\n            apiKey:env.REACT_APP_TRANSAK_KEY_PROD,\n            url:'https://global.transak.com'\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n\n          const selectedMethod = props.selectedMethod && props.selectedMethod;\n          let fee = selectedMethod === 'bank' ? '1.5%' : '4.5%';\n\n          if (props.selectedCountry && props.selectedCountry.value){\n            switch (props.selectedCountry.value.toUpperCase()){\n              case 'GBR':\n                info.badge = {\n                  text:'INSTANT',\n                  bgColor:'#0069ee'\n                };\n                info.subcaption = `~ ${fee} fee ~\\nGBP ONLY`;\n              break;\n              case 'IND':\n                fee = '1.0%';\n                info.badge = {\n                  text:'INSTANT',\n                  bgColor:'#0069ee'\n                };\n                info.subcaption = `~ ${fee} fee ~\\nINR ONLY`;\n              break;\n              case 'EUR':\n                if (selectedMethod === 'bank'){\n                  info.badge = {\n                    text:'SEPA',\n                    color:'#f7cb05 ',\n                    bgColor:'#10288a'\n                  };\n                } else {\n                  info.badge = {\n                    text:'INSTANT',\n                    bgColor:'#0069ee'\n                  };\n                }\n                info.subcaption = `~ ${fee} fee ~\\nEUR ONLY`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.transak.env;\n          const envParams = globalConfigs.payments.providers.transak.envParams[env];\n\n          let fiatCurrency = null;\n\n          if (buyParams.selectedCountry && buyParams.selectedCountry.value){\n            switch (buyParams.selectedCountry.value.toUpperCase()){\n              case 'IND':\n                fiatCurrency = 'INR';\n              break;\n              case 'GBR':\n                fiatCurrency = 'GBP';\n              break;\n              case 'EUR':\n                fiatCurrency = 'EUR';\n              break;\n              case 'USA':\n                fiatCurrency = 'USD';\n              break;\n              default:\n                fiatCurrency = 'GBP';\n              break;\n            }\n          }\n\n          let cryptoCurrencyCode = buyParams.selectedToken ? buyParams.selectedToken.toLowerCase() : ( props.tokenConfig.transak && props.tokenConfig.transak.currencyCode ? props.tokenConfig.transak.currencyCode : props.selectedToken);\n          cryptoCurrencyCode = cryptoCurrencyCode.toUpperCase();\n\n          const apiKey = envParams.apiKey;\n          const walletAddress = props.account;\n          const partnerCustomerId = props.account;\n          const disableWalletAddressForm = false;\n\n          return {\n            apiKey,\n            cryptoCurrencyCode,\n            walletAddress,\n            fiatCurrency,\n            partnerCustomerId,\n            disableWalletAddressForm,\n            width:'100%',\n            height:'100%'\n            // email,\n          };\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          if (window.transakGlobal){\n\n            const transakWidget = document.getElementById('transak-widget');\n            if (!transakWidget){\n              const iframeBox = document.createElement(\"div\");\n              iframeBox.innerHTML = `\n                <div id=\"transak-widget\" class=\"transak-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                  <div id=\"transak-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\" onclick=\"document.getElementById('transak-widget').remove();\"></div>\n                  <a class=\"transak-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('transak-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                  <div class=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\">\n                    <div id=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\"></div>\n                    <div id=\"transak-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:center\">\n                        <img src=\"${globalConfigs.payments.providers.transak.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"font-weight:600;font-style:italic;color:#0040ca\">is loading...</h3>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              `;\n              document.body.appendChild(iframeBox);\n\n              // Add transak Widget style (mobile)\n              if (!document.getElementById('transakWidget_style')){\n                const transakStyle = document.createElement('style');\n                transakStyle.id = 'transakWidget_style';\n                transakStyle.innerHTML = `\n                @media (max-width: 40em){\n                  #transak-widget {\n                    align-items: flex-start !important;\n                  }\n                  #transak-widget-overlay{\n                    background:#fff !important;\n                  }\n                  #transak-widget-container{\n                    width:100vw;\n                    min-height: calc( 100vh - 60px ) !important;\n                  }\n                }`;\n                document.body.appendChild(transakStyle);\n              }\n            }\n\n            window.transakGlobal.render(initParams, 'transak-widget-container');\n          }\n        }\n      },\n      moonpay: {\n        enabled:true,\n        imageSrc: 'images/payments/moonpay.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 4.5% fee ~',\n        supportedMethods:['card','bank'],\n        supportedCountries:['GBR','EUR','AUS','BRA','CHN','MEX','CAN','HKG','RUS','ZAF','KOR'],\n        supportedTokens:['USDC','DAI','ETH'],\n        env:'prod',\n        envParams:{\n          test:{\n            url:'https://buy-staging.moonpay.io',\n            apiKey:env.REACT_APP_MOONPAY_KEY_TEST\n          },\n          prod:{\n            url:'https://buy.moonpay.io',\n            apiKey:env.REACT_APP_MOONPAY_KEY_PROD\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod){\n            switch (props.selectedMethod){\n              case 'bank':\n                if (props.selectedCountry && props.selectedCountry.value){\n                  switch (props.selectedCountry.value.toUpperCase()){\n                    case 'EUR':\n                      info.badge = {\n                        text:'SEPA',\n                        color:'#f7cb05 ',\n                        bgColor:'#10288a'\n                      }\n                      info.subcaption = `~ 1.5% fee ~\\nEUR ONLY`;\n                    break;\n                    case 'GBR':\n                      info.badge = {\n                        text:'GBP',\n                      }\n                      info.subcaption = `~ 1.5% fee ~\\nGBP ONLY`;\n                    break;\n                    default:\n                      info.badge = null;\n                      info.subcaption = `~ 1.5% fee ~\\nEUR/GBP ONLY`;\n                    break;\n                  }\n                }\n              break;\n              case 'card':\n                info.badge = null;\n                info.subcaption = `~ 5% fee ~`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.moonpay.env;\n          const envParams = globalConfigs.payments.providers.moonpay.envParams[env];\n          const apiKey = envParams.apiKey;\n          const params = {\n            apiKey,\n            currencyCode: buyParams.selectedToken ? buyParams.selectedToken.toLowerCase() : ( props.tokenConfig.moonpay && props.tokenConfig.moonpay.currencyCode ? props.tokenConfig.moonpay.currencyCode : props.selectedToken.toLowerCase()),\n            walletAddress:props.account,\n            baseCurrencyCode:'USD',\n            showWalletAddressForm: true\n          };\n\n          const methods = {\n            'bank':{\n              'GBR':'gbp_bank_transfer',\n              'EUR':'sepa_bank_transfer'\n            },\n            'card':'credit_debit_card'\n          };\n\n          const selectedCountry = buyParams.selectedCountry && buyParams.selectedCountry.value ? buyParams.selectedCountry.value.toUpperCase() : null;\n\n          // Set payment method\n          if (buyParams.selectedMethod){\n            switch (buyParams.selectedMethod){\n              case 'bank':\n                params.enabledPaymentMethods = methods[buyParams.selectedMethod]['EUR'];\n                switch (selectedCountry){\n                  case 'GBR':\n                  case 'EUR':\n                    params.enabledPaymentMethods = methods[buyParams.selectedMethod][selectedCountry];\n                  break;\n                  default:\n                    params.enabledPaymentMethods = Object.values(methods[buyParams.selectedMethod]).join(',');\n                  break;\n                }\n              break;\n              case 'card':\n              default:\n                params.enabledPaymentMethods = methods[buyParams.selectedMethod];\n              break;\n            }\n          }\n\n          // Set baseCurrencyCode\n          switch (selectedCountry){\n            case 'GBR':\n              params.baseCurrencyCode = 'GBP';\n            break;\n            case 'EUR':\n              params.baseCurrencyCode = 'EUR';\n            break;\n            default:\n              params.baseCurrencyCode = 'USD';\n            break;\n          }\n\n          let url = envParams.url;\n\n          // Safari Fix\n          var isSafari = navigator.userAgent.indexOf(\"Safari\") > -1;\n          if (isSafari) {\n            if (!document.cookie.match(/^(.*;)?\\s*moonpay-fixed\\s*=\\s*[^;]+(.*)?$/)) {\n              document.cookie = \"moonpay-fixed=fixed; expires=Tue, 19 Jan 2038 03:14:07 UTC; path=/\";\n              url += \"/safari_fix\";\n            }\n          }\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          const moonpayWidget = document.getElementById('moonpay-widget');\n          if (!moonpayWidget){\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"moonpay-widget\" class=\"moonpay-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"moonpay-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                  <div id=\"moonpay-widget-container\" style=\"position:relative;z-index:2;width:500px;height:490px\">\n                    <iframe\n                      style=\"position:relative;z-index:2;\"\n                      frameborder=\"0\"\n                      height=\"100%\"\n                      src=\"${initParams}\"\n                      width=\"100%\"\n                    >\n                      <p>Your browser does not support iframes.</p>\n                    </iframe>\n                    <div id=\"moonpay-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:end\">\n                        <img src=\"${globalConfigs.payments.providers.moonpay.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"padding-left:5px;font-weight:600;font-style:italic;\">is loading...</h3>\n                      </div>\n                    </div>\n                    <div id=\"moonpay-widget-footer\" style=\"position:relative;display:flex;justify-content:center;align-items:center;padding:8px 16px;width:100%;background:#fff;top:-20px;z-index:3\">\n                      <button style=\"background:#000;color:#fff;text-align:center;border-radius:5px;width:100%;height:51px;line-height:51px;font-weight:500;border:0;cursor:pointer\" onclick=\"document.getElementById('moonpay-widget').remove();\">Close</button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add Moonpay Widget style (mobile)\n            if (!document.getElementById('moonpayWidget_style')){\n              const moonpayStyle = document.createElement('style');\n              moonpayStyle.id = 'moonpayWidget_style';\n              moonpayStyle.innerHTML = `\n              @media (max-width: 40em){\n                #moonpay-widget {\n                  align-items: flex-start !important;\n                }\n                #moonpay-widget-overlay{\n                  background:#fff !important;\n                }\n                #moonpay-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(moonpayStyle);\n            }\n          }\n        }\n      },\n      zeroExInstant: {\n        enabled: true,\n        imageSrc: 'images/payments/zeroexinstant.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0.25% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        remoteResources:{'https://instant.0x.org/v3/instant.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onSuccess,onClose) => {\n\n          const tokenParams = globalConfigs.tokens[buyParams.selectedToken];\n          const connectorName = window.RimbleWeb3_context ? window.RimbleWeb3_context.connectorName : null;\n\n          if (!tokenParams.zeroExInstant){\n            return null;\n          }\n\n          return {\n            networkId: globalConfigs.network.requiredNetwork,\n            chainId: globalConfigs.network.requiredNetwork,\n            provider: connectorName && connectorName!=='Injected' && window.RimbleWeb3_context.connector[connectorName.toLowerCase()] ? window.RimbleWeb3_context.connector[window.RimbleWeb3_context.connectorName.toLowerCase()].provider : window.ethereum,\n            orderSource: tokenParams.zeroExInstant.orderSource,\n            affiliateInfo: tokenParams.zeroExInstant.affiliateInfo,\n            defaultSelectedAssetData: tokenParams.zeroExInstant.assetData,\n            availableAssetDatas: [tokenParams.zeroExInstant.assetData],\n            shouldDisableAnalyticsTracking: true,\n            onSuccess: onSuccess ? onSuccess : () => {},\n            onClose: onClose ? onClose : () => {}\n          };\n        },\n        render: (initParams,amount) => {\n          if (window.zeroExInstant && initParams){\n            if (amount){\n              initParams.defaultAssetBuyAmount = parseFloat(amount);\n            }\n            window.zeroExInstant.render(initParams, 'body');\n          }\n        }\n      },\n      kyberSwap: {\n        enabled: true,\n        imageSrc: 'images/payments/kyber.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Swap with',\n        captionPos: 'top',\n        subcaption: '~ 0.25% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI','USDT','TUSD','SUSD','WBTC'],\n        web3Subscription:{ // Data for web3 subscription\n          enabled: true,\n          contractAddress: '0x818e6fecd516ecc3849daf6845e3ec868087b755',\n          decodeLogsData: [\n            {\n              \"internalType\": \"address\",\n              \"name\": \"_startAddress\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"address\",\n              \"name\": \"_tokenAddress\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"_startAmount\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"_tokenAmount\",\n              \"type\": \"uint256\"\n            },\n          ],\n        },\n        remoteResources:{\n          'https://widget.kyber.network/v0.7.5/widget.css':{},\n          'https://widget.kyber.network/v0.7.5/widget.js':{\n            parentElement:document.body,\n            precall: (props,globalConfigs,providerInfo) => {\n\n              // Remove previous elements\n              const buttons = document.querySelectorAll('.kyber-widget-button');\n              for (let i=0;i<buttons.length;i++){\n                buttons[i].remove();\n              }\n\n              // const kyberWidgetScript = document.getElementById('kyber-widget-script');\n              // if (kyberWidgetScript){\n              //   kyberWidgetScript.remove();\n              // }\n\n              const scripts = document.querySelectorAll('.script_kyberSwap');\n              for (let i=0;i<scripts.length;i++){\n                scripts[i].remove();\n              }\n\n              const buttonId = props.buttonId ? props.buttonId : `kyber-swapper-${props.selectedToken}`;\n              if (!document.getElementById(buttonId)){\n                const a = document.createElement('a');\n                a.id = buttonId;\n                a.href = providerInfo.getInitParams(props,globalConfigs);\n                a.target = '_blank';\n                a.rel = 'nofollow noopener noreferrer';\n                a.className = 'kyber-widget-button theme-ocean theme-supported';\n                a.title = 'Swap with Kyber';\n                a.style = 'display:none;';\n                document.body.appendChild(a);\n              }\n            }\n          }\n        },\n        getInitParams: (props,globalConfigs,buyParams=null) => {\n          const baseToken = props.baseToken ? props.baseToken : 'ETH';\n          const params = {\n            lang:'en',\n            type:'swap',\n            mode:'iframe',\n            theme:'theme-ocean',\n            paramForwarding:true,\n            // callback:globalConfigs.baseURL,\n            pinnedTokens:`${baseToken}_${props.selectedToken}`,\n            title:`Swap ${baseToken} for ${props.selectedToken}`,\n            defaultPair:`${baseToken}_${props.selectedToken}`,\n            commissionId:'0x4215606a720477178AdFCd5A59775C63138711e8',\n            network: globalConfigs.network.requiredNetwork === 1 ? 'mainnet' : 'test',\n          };\n\n          const url  = 'https://widget.kyber.network/v0.7.5/';\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props) => {\n          const buttonId = props.buttonId ? props.buttonId :`kyber-swapper-${props.selectedToken}`;\n          const a = document.getElementById(buttonId);\n          if (a){\n            a.click();\n\n            // Observe for pending transaction\n            /*\n            if (window.MutationObserver){\n              setTimeout(() => {\n\n                const observer = new window.MutationObserver(function(mutations) {\n                  mutations.forEach((m,i) => {\n                    if (m.addedNodes.length && m.target.className === 'kyber_widget-broadcast'){\n                      \n                      // Show persistent toast message\n                      window.showToastMessage({\n                        variant:'processing',\n                        message:'Pending deposit',\n                        secondaryMessage:'kyberSwap is processing your request'\n                      });\n\n                      observer.disconnect();\n                    } else if (m.target.id === 'kyber-widget' && m.removedNodes.length && m.removedNodes[0].firstChild.className.includes('kyber_widget-widget-container')) {\n                      observer.disconnect();\n                    }\n                  });\n                });\n                const target = document.querySelector('#kyber-widget');\n                observer.observe(target, { childList: true, subtree: true });\n              },1000);\n            }\n            */\n          }\n        }\n      },\n      airSwap: {\n        enabled: false,\n        imageSrc: 'images/payments/airswap.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        env:'production',\n        remoteResources:{'https://cdn.airswap.io/airswap-instant-widget.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onComplete,onClose) => {\n          return {\n            env: 'production',\n            mode: 'buy',\n            token: props.tokenConfig.address,\n            baseToken: 'ETH',\n            onComplete: onComplete ? onComplete : () => {},\n            onClose: onClose ? onClose : () => {}\n          };\n        },\n        render: (initParams,amount,props) => {\n          if (window.AirSwapInstant){\n            if (amount){\n              initParams.amount = amount.toString();\n            }\n            window.AirSwapInstant.render(initParams,'body');\n          }\n        }\n      },\n      totle: {\n        enabled: false,\n        imageSrc: 'images/payments/totle.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        env:'production',\n        remoteResources:{'https://widget.totle.com/latest/dist.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onComplete,onClose) => {\n          return {\n            sourceAssetAddress: null,\n            sourceAmountDecimal: null,\n            destinationAssetAddress: null,\n            destinationAmountDecimal: null,\n            apiKey: null,\n            partnerContractAddress: null,\n          };\n        },\n        render: (initParams,amount,props) => {\n          if (window.TotleWidget){\n            const nodeId = 'totle-widget';\n            if (!document.getElementById(nodeId)){\n              const totleWidgetContainer = document.createElement(\"div\");\n              totleWidgetContainer.id = nodeId;\n              document.body.appendChild(totleWidgetContainer);\n            }\n\n            window.TotleWidget.default.run(initParams,document.getElementById(nodeId));\n          }\n        }\n      }\n    }\n  }\n};\n\nexport default globalConfigs;","import React from \"react\";\nimport axios from 'axios';\nimport moment from 'moment';\nimport { Text } from \"rimble-ui\";\nimport BigNumber from 'bignumber.js';\nimport IdleGovToken from './IdleGovToken';\nimport { toBuffer } from \"ethereumjs-util\";\nimport globalConfigs from '../configs/globalConfigs';\n\nconst ethereumjsABI = require('ethereumjs-abi');\nconst env = process.env;\n\nclass FunctionsUtil {\n\n  // Attributes\n  props = {};\n  idleGovToken = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n  }\n  trimEth = eth => {\n    return this.BNify(eth).toFixed(6);\n  }\n  toBN = n => new this.props.web3.utils.BN(n)\n  toEth = wei => {\n    if (!this.props.web3){\n      return null;\n    }\n    return this.props.web3.utils.fromWei(\n      (wei || 0).toString(),\n      \"ether\"\n    );\n  }\n  toWei = eth => {\n    if (!this.props.web3){\n      return null;\n    }\n    return this.props.web3.utils.toWei(\n      (eth || 0).toString(),\n      \"ether\"\n    );\n  }\n  BNify_obj = s => new BigNumber(s)\n  BNify = s => new BigNumber( typeof s === 'object' ? s : String(s) )\n  customLog = (...props) => { if (globalConfigs.logs.messagesEnabled) this.customLog(moment().format('HH:mm:ss'),...props); }\n  customLogError = (...props) => { if (globalConfigs.logs.errorsEnabled) console.error(moment().format('HH:mm:ss'),...props); }\n  getContractByName = (contractName) => {\n    const contract = this.props.contracts.find(c => c.name === contractName);\n    if (!contract) {\n      return false;\n    }\n    return contract.contract;\n  }\n  normalizeSimpleIDNotification = (n) => {\n    return n.replace(/<\\/p><p>/g,\"\\n\")\n            .replace(/<p>/g,\"\")\n            .replace(/<br>/g,\"\")\n            .replace(/&nbsp;/g,\" \")\n            .replace(/<\\/p>/g,\"\");\n  }\n  capitalize = (str) => {\n    return str.substr(0,1).toUpperCase()+str.substr(1);\n  }\n  strToMoment = (date,format=null) => {\n    return moment(date,format);\n  }\n  replaceArrayProps = (arr1,arr2) => {\n    if (arr2 && Object.keys(arr2).length){\n      Object.keys(arr2).forEach(p => {\n        arr1[p] = arr2[p];\n      });\n    }\n\n    return arr1;\n  }\n  stripHtml = (html) => {\n     var tmp = document.createElement(\"DIV\");\n     tmp.innerHTML = html;\n     return tmp.textContent || tmp.innerText || \"\";\n  }\n  // VanillaJS function for smooth scroll\n  scrollTo = (to, duration) => {\n    const start = window.scrollY;\n    const change = to - start;\n    const increment = 20;\n    let currentTime = 0;\n\n    Math.easeInOutQuad = function (t, b, c, d) {\n      t /= d/2;\n      if (t < 1) return c/2*t*t + b;\n      t--;\n      return -c/2 * (t*(t-2) - 1) + b;\n    };\n\n    const animateScroll = () => {\n        currentTime += increment;\n        var val = Math.easeInOutQuad(currentTime, start, change, duration);\n        window.scrollTo(0,val);\n        if(currentTime < duration) {\n          window.setTimeout(animateScroll, increment);\n        }\n    };\n\n    animateScroll();\n  }\n  getTxAction = (tx,tokenConfig) => {\n\n    const idleTokenAddress = tokenConfig.idle.address;\n    const depositProxyContractInfo = this.getGlobalConfig(['contract','methods','deposit','proxyContract']);\n    const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n    const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n    const batchMigration = this.getGlobalConfig(['tools','batchMigration','props','availableTokens',tokenConfig.idle.token]);\n    const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n    const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();    \n    const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).indexOf(tx.from.toLowerCase()) !== -1 ) && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase());\n    const isSendTransferTx = !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isReceiveTransferTx = !isMigrationTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isDepositTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && (tx.to.toLowerCase() === idleTokenAddress.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase()));\n    const isRedeemTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && tx.to.toLowerCase() === this.props.account.toLowerCase();\n    const isSwapTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && !isDepositTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n\n    let action = null;\n\n    if (isDepositTx){\n      action = 'Deposit';\n    } else if (isRedeemTx){\n      action = 'Redeem';\n    } else if (isMigrationTx){\n      action = 'Migrate';\n    } else if (isSendTransferTx){\n      action = 'Send';\n    } else if (isReceiveTransferTx){\n      action = 'Receive';\n    } else if (isSwapTx){\n      action = 'Swap';\n    } else if (isSwapTx){\n      action = 'SwapOut';\n    }\n\n    return action;\n  }\n  getAccountPortfolio = async (availableTokens=null,account=null) => {\n    const portfolio = {\n      tokensBalance:{},\n      totalBalance:this.BNify(0)\n    };\n\n    availableTokens = availableTokens ? availableTokens : this.props.availableTokens;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTokens){\n      return portfolio;\n    }\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const idleTokenBalance = await this.getTokenBalance(tokenConfig.idle.token,account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = idleTokenBalance.times(tokenPrice);\n\n        if (!tokenPrice.isNaN() && !tokenBalance.isNaN()){\n          portfolio.tokensBalance[token] = {\n            tokenPrice,\n            tokenBalance,\n            idleTokenBalance\n          };\n\n          // Increment total balance\n          portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalance);\n        }\n      }\n    });\n\n    const orderedTokensBalance = {};\n    Object.keys(availableTokens).forEach( token => {\n      if (portfolio.tokensBalance[token]){\n        orderedTokensBalance[token] = portfolio.tokensBalance[token];\n      }\n    });\n\n    portfolio.tokensBalance = orderedTokensBalance;\n\n    return portfolio;\n  }\n  getCurveAvgSlippage = async (enabledTokens=[],account=null,fixDecimals=true) => {\n    account = account ? account : this.props.account;\n\n    if (!account){\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    let processedTxs = {};\n    const processedHashes = {};\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    if (curveTxs && curveTxs.length){\n\n      curveTxs.forEach((tx,index) => {\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice){\n          return false;\n        }\n\n        const tokenAmount = this.BNify(tx.tokenAmount);\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        switch (tx.action){\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn'){\n              if (index>0 && curveTokensBalance.gt(0)){\n                return;\n              }\n            }\n\n            if (!processedTxs[tx.hash]){\n              processedTxs[tx.hash] = {\n                price:null,\n                received:null,\n                slippage:null,\n                deposited:this.BNify(0),\n              };\n            }\n\n            processedTxs[tx.hash].deposited = processedTxs[tx.hash].deposited.plus(tokenAmount);\n            if (processedTxs[tx.hash].received === null){\n              processedTxs[tx.hash].price = curveTokenPrice;\n              processedTxs[tx.hash].received = curveTokens.times(curveTokenPrice);\n            }\n\n            // this.customLog('getCurveAvgSlippage',tx.action,tx.hash,tx.blockNumber,curveTokens.toFixed(6),curveTokenPrice.toFixed(6),processedTxs[tx.hash].deposited.toFixed(6),processedTxs[tx.hash].received.toFixed(6));\n          break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n          break;\n          default:\n          break;\n        }\n\n        // Update curveTokens balance\n        if (!processedHashes[tx.hash]){\n          curveTokensBalance = curveTokensBalance.plus(curveTokens);\n          if (curveTokensBalance.lte(0)){\n            curveTokensBalance = this.BNify(0);\n\n            // Reset processed transactions\n            // processedTxs = {};\n          }\n          processedHashes[tx.hash] = true;\n        }\n      });\n    }\n\n    // this.customLog('processedTxs',processedTxs);\n\n    let avgSlippage = this.BNify(0);\n    let totalDeposited = this.BNify(0);\n    Object.values(processedTxs).forEach( tx => {\n      const slippage = tx.received.div(tx.deposited).minus(1);\n      avgSlippage = avgSlippage.plus(slippage.times(tx.deposited));\n      totalDeposited = totalDeposited.plus(tx.deposited);\n    });\n\n    avgSlippage = avgSlippage.div(totalDeposited).times(-1);\n\n    // debugger;\n    // this.customLog('avgSlippage',avgSlippage.toString());\n\n    return avgSlippage;\n  }\n  getCurveAvgBuyPrice = async (enabledTokens=[],account=null) => {\n    account = account ? account : this.props.account;\n\n    if (!account){\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const processedTxs = {};\n    let avgBuyPrice = this.BNify(0);\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    // this.customLog('curveTxs',curveTxs);\n\n    if (curveTxs && curveTxs.length){\n\n      curveTxs.forEach((tx,index) => {\n\n        if (!processedTxs[tx.hash]){\n          processedTxs[tx.hash] = [];\n        }\n\n        if (processedTxs[tx.hash].includes(tx.action)){\n          return;\n        }\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice){\n          return false;\n        }\n\n        const prevAvgBuyPrice = avgBuyPrice;\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        // Deposited\n        switch (tx.action){\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn'){\n              if (index>0 && curveTokensBalance.gt(0)){\n                return;\n              }\n            }\n            avgBuyPrice = curveTokens.times(curveTokenPrice).plus(prevAvgBuyPrice.times(curveTokensBalance)).div(curveTokensBalance.plus(curveTokens));\n          break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n          // case 'CurveTransferOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n          break;\n          default:\n          break;\n        }\n        \n        // Update curveTokens balance\n        curveTokensBalance = curveTokensBalance.plus(curveTokens);\n        if (curveTokensBalance.lte(0)){\n          avgBuyPrice = this.BNify(0);\n          curveTokensBalance = this.BNify(0);\n        }\n\n        processedTxs[tx.hash].push(tx.action);\n\n        // this.customLog('getCurveAvgBuyPrice',tx.action,tx.hash,tx.blockNumber,curveTokens.toString(),curveTokenPrice.toString(),curveTokensBalance.toString(),avgBuyPrice.toString());\n      });\n    }\n\n    // this.customLog('avgCurveBuyPrice',avgBuyPrice.toString());\n\n    return avgBuyPrice;\n  }\n  getAvgBuyPrice = async (enabledTokens=[],account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const output = {};\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens);\n\n    enabledTokens.forEach( selectedToken => {\n\n      output[selectedToken] = [];\n      let avgBuyPrice = this.BNify(0);\n\n      let idleTokensBalance= this.BNify(0);\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.idleTokens || !tx.tokenPrice){\n            return false;\n          }\n\n          const prevAvgBuyPrice = avgBuyPrice;\n          let idleTokens = this.BNify(tx.idleTokens);\n          const tokenPrice = this.BNify(tx.tokenPrice);\n\n          // Deposited\n          switch (tx.action){\n            case 'Deposit':\n            case 'Receive':\n            case 'Swap':\n            case 'Migrate':\n              avgBuyPrice = idleTokens.times(tokenPrice).plus(prevAvgBuyPrice.times(idleTokensBalance)).div(idleTokensBalance.plus(idleTokens));\n            break;\n            case 'Withdraw':\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n              idleTokens = idleTokens.times(this.BNify(-1));\n            break;\n            default:\n            break;\n          }\n\n          // Update idleTokens balance\n          idleTokensBalance = idleTokensBalance.plus(idleTokens);\n          if (idleTokensBalance.lte(0)){\n            avgBuyPrice = this.BNify(0);\n            idleTokensBalance = this.BNify(0);\n          }\n\n        });\n      }\n\n      // Add token Data\n      output[selectedToken] = avgBuyPrice;\n    });\n\n    return output;\n  }\n  getDepositTimestamp = async (enabledTokens=[],account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens);\n\n    const deposits = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      let depositTimestamp = null;\n      deposits[selectedToken] = depositTimestamp;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount){\n            return false;\n          }\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n              amountLent = amountLent.plus(tx.tokenAmount);\n              if (!depositTimestamp){\n                depositTimestamp = tx.timeStamp;\n              }\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.BNify(0);\n            depositTimestamp = null;\n          }\n        });\n      }\n\n      // Add token Data\n      deposits[selectedToken] = depositTimestamp;\n    });\n\n    return deposits;\n  }\n  getAmountDeposited = async (tokenConfig,account) => {\n    let [tokenBalance,userAvgPrice] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token,account),\n      this.genericContractCall(tokenConfig.idle.token, 'userAvgPrices', [account])\n    ]);\n\n    if (tokenBalance && userAvgPrice){\n      userAvgPrice = this.fixTokenDecimals(userAvgPrice,tokenConfig.decimals);\n      const amountDeposited = tokenBalance.times(userAvgPrice);\n      return amountDeposited;\n    }\n\n    return null;\n  }\n  getAmountLent = async (enabledTokens=[],account) => {\n\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens);\n\n    const amountLents = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      amountLents[selectedToken] = amountLent;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount){\n            return false;\n          }\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n              amountLent = amountLent.plus(tx.tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.BNify(0);\n          }\n        });\n      }\n\n      // Add token Data\n      amountLents[selectedToken] = amountLent;\n    });\n\n    return amountLents;\n  }\n  getEtherscanBaseTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[]) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length){\n      return [];\n    }\n\n    account = account.toLowerCase();\n\n    const selectedStrategy = this.props.selectedStrategy;\n\n    // Check if firstBlockNumber is less that firstIdleBlockNumber\n    const firstIdleBlockNumber = this.getGlobalConfig(['network','firstBlockNumber']);\n    firstBlockNumber = Math.max(firstIdleBlockNumber,firstBlockNumber);\n\n    const requiredNetwork = globalConfigs.network.requiredNetwork;\n    const etherscanInfo = globalConfigs.network.providers.etherscan;\n\n    let results = [];\n    let etherscanBaseTxs = null;\n    let etherscanBaseEndpoint = null;\n\n    // Check if etherscan is enabled for the required network\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]){\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n\n      // Get base endpoint cached transactions\n      etherscanBaseEndpoint = `${etherscanApiUrl}?strategy=${selectedStrategy}&apikey=${env.REACT_APP_ETHERSCAN_KEY}&module=account&action=tokentx&address=${account}&startblock=${firstIdleBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n      etherscanBaseTxs = this.getCachedRequest(etherscanBaseEndpoint);\n\n      // Check if the latest blockNumber is actually the latest one\n      if (etherscanBaseTxs && etherscanBaseTxs.data.result && Object.values(etherscanBaseTxs.data.result).length){\n\n        const lastCachedTx = Object.values(etherscanBaseTxs.data.result).pop();\n        const lastCachedBlockNumber = lastCachedTx && lastCachedTx.blockNumber ? parseInt(lastCachedTx.blockNumber)+1 : firstBlockNumber;\n\n        const etherscanEndpointLastBlock = `${etherscanApiUrl}?strategy=${selectedStrategy}&apikey=${env.REACT_APP_ETHERSCAN_KEY}&module=account&action=tokentx&address=${account}&startblock=${lastCachedBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n        let latestTxs = await this.makeCachedRequest(etherscanEndpointLastBlock,15);\n\n        if (latestTxs && latestTxs.data.result && latestTxs.data.result.length){\n          \n          latestTxs = await this.filterEtherscanTxs(latestTxs.data.result,enabledTokens,true,false);\n\n          if (latestTxs && Object.values(latestTxs).length){\n\n            const latestBlockNumbers = Object.values(latestTxs).map( lastTx => (parseInt(lastTx.blockNumber)) );\n            const lastRealBlockNumber = Math.max(...latestBlockNumbers);\n\n            // If real tx blockNumber differs from last blockNumber\n            if (lastRealBlockNumber>=lastCachedBlockNumber){\n              // Merge latest Txs with etherscanBaseTxs\n              Object.values(latestTxs).forEach((tx) => {\n                const txFound = Object.keys(etherscanBaseTxs.data.result).includes(tx.hash.toLowerCase());\n                if (!txFound){\n                  etherscanBaseTxs.data.result[tx.hash.toLowerCase()] = tx;\n                }\n              });\n\n              // Save etherscan txs\n              this.saveEtherscanTxs(etherscanBaseEndpoint,etherscanBaseTxs.data.result);\n            }\n          }\n        }\n      } else {\n        etherscanBaseTxs = null;\n      }\n\n      let txs = etherscanBaseTxs;\n\n      if (!txs){\n        // Make request\n        txs = await this.makeRequest(etherscanBaseEndpoint);\n      }\n\n      if (txs && txs.data && txs.data.result){\n        results = txs.data.result;\n      } else {\n        return [];\n      }\n    }\n\n    return {\n      results,\n      etherscanBaseTxs,\n      etherscanBaseEndpoint\n    };\n  }\n  getCurveTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[]) => {\n    const results = await this.getEtherscanTxs(account,firstBlockNumber,endBlockNumber,enabledTokens);\n    // results = results ? Object.values(results) : [];\n    return this.filterCurveTxs(results,enabledTokens);\n  }\n  saveEtherscanTxs = (endpoint,txs) => {\n    const txsToStore = {};\n    Object.keys(txs).forEach(txHash => {\n      const tx = txs[txHash];\n      if (tx.blockNumber && (!tx.status || tx.status.toLowerCase() !== 'pending')){\n        txsToStore[txHash] = tx;\n      }\n    });\n\n    // Save new cached data\n    const cachedRequest = {\n      data:{\n        result:txsToStore\n      }\n    };\n    this.saveCachedRequest(endpoint,false,cachedRequest);\n  }\n  getEtherscanTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[]) => {\n    const {\n      results,\n      etherscanBaseTxs,\n      etherscanBaseEndpoint\n    } = await this.getEtherscanBaseTxs(account,firstBlockNumber,endBlockNumber,enabledTokens);\n\n    // Initialize prevTxs\n    let etherscanTxs = {};\n    if (etherscanBaseTxs){\n      // Filter txs for token\n      etherscanTxs = await this.processStoredTxs(results,enabledTokens);\n    } else {\n      const allAvailableTokens = Object.keys(this.props.availableTokens);\n      // Save base endpoint with all available tokens\n      etherscanTxs = await this.filterEtherscanTxs(results,allAvailableTokens);\n\n      // Store filtered txs\n      if (etherscanTxs && Object.keys(etherscanTxs).length){\n        this.saveEtherscanTxs(etherscanBaseEndpoint,etherscanTxs);\n      }\n    }\n\n    return Object\n            .values(etherscanTxs)\n            .filter(tx => (tx.token && enabledTokens.includes(tx.token.toUpperCase())))\n            .sort((a,b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n  }\n  filterCurveTxs = async (results,enabledTokens=[]) => {\n\n    if (!results || !results.length || typeof results.forEach !== 'function'){\n      return [];\n    }\n\n    const availableTokens = this.props.availableTokens ? this.props.availableTokens : this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const curveTxs = results.filter( tx => (enabledTokens.includes(tx.token) && ['CurveIn','CurveOut','CurveZapIn','CurveZapOut','CurveTransferIn','CurveTransferOut','CurveDepositIn','CurveDepositOut'].includes(tx.action)) );\n\n    if (curveTxs.length){\n      curveTxs.sort((a,b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n    }\n\n    return curveTxs;\n  }\n  filterEtherscanTxs = async (results,enabledTokens=[],processTxs=true,processStoredTxs=true) => {\n    if (!results || !results.length || typeof results.forEach !== 'function'){\n      return [];\n    }\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let etherscanTxs = {};\n    let curveTransfersTxs = [];\n    let curveTransfersTxsToDelete = [];\n\n    // const idleTokensAddresses = Object.values(this.props.availableTokens).map( tokenConfig => (tokenConfig.idle.address) );\n    const curveZapContract = this.getGlobalConfig(['curve','zapContract']);\n    const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    // this.customLog('filterEtherscanTxs',enabledTokens,results);\n\n    enabledTokens.forEach(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      const depositProxyContractInfo = this.getGlobalConfig(['contract','methods','deposit','proxyContract']);\n      const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n      const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n      const tokenMigrationToolParams = this.getGlobalConfig(['tools','tokenMigration','props','migrationContract']);\n\n      const batchMigration = this.getGlobalConfig(['tools','batchMigration','props','availableTokens',tokenConfig.idle.token]);\n      const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n      const curveEnabled = this.getGlobalConfig(['curve','enabled']);\n      const curveTokenConfig = this.getGlobalConfig(['curve','availableTokens',tokenConfig.idle.token]);\n\n      results.forEach( tx => {\n        let tokenDecimals = tokenConfig.decimals;\n        const idleToken = tokenConfig.idle.token;\n        const internalTxs = results.filter(r => r.hash === tx.hash);\n        const isRightToken = internalTxs.length>1 && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase()).length>0;\n        const isSendTransferTx = internalTxs.length === 1 && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isReceiveTransferTx = internalTxs.length === 1 && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isDepositInternalTx = isRightToken && internalTxs.find( iTx => iTx.from.toLowerCase() === this.props.account.toLowerCase() && (iTx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && iTx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length>0 )) );\n        const isRedeemInternalTx = isRightToken && internalTxs.find( iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && iTx.to.toLowerCase() === this.props.account.toLowerCase() );\n\n        const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase()) ) && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase());\n        const isConversionTx = tokenMigrationToolParams && (tx.from.toLowerCase() === tokenMigrationToolParams.address.toLowerCase() || tokenMigrationToolParams.oldAddresses.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase())) && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isDepositTx = isRightToken && !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && (tx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length>0 ));\n        const isRedeemTx = isRightToken && !isMigrationTx && !isDepositInternalTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && tx.to.toLowerCase() === this.props.account.toLowerCase();\n        const isWithdrawTx = internalTxs.length>1 && internalTxs.filter(iTx => tokenConfig.protocols.map(p => p.address.toLowerCase()).includes(iTx.contractAddress.toLowerCase()) ).length>0 && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        const isSwapOutTx = !isSendTransferTx && !isWithdrawTx && !isRedeemInternalTx && !etherscanTxs[tx.hash] && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isSwapTx = !isReceiveTransferTx && !isConversionTx && !isDepositInternalTx && !etherscanTxs[tx.hash] && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // const curveDepositTx = internalTxs.find( iTx => (iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && iTx.from.toLowerCase() === this.props.account.toLowerCase()) );\n        const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n        // Check Curve\n        const curveTx = internalTxs.find( tx => (tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && (tx.to.toLowerCase() === this.props.account.toLowerCase() || tx.from.toLowerCase() === this.props.account.toLowerCase()) ) );\n        const isCurveTx = curveEnabled && curveTx !== undefined;\n\n        const isCurveDepositTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === curveSwapContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveRedeemTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveSwapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveDepositIn = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveDepositOut = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveZapIn = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveZapOut = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveTransferOut = curveEnabled && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapOut && !isCurveRedeemTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.from.toLowerCase() === this.props.account.toLowerCase();\n        const isCurveTransferIn = curveEnabled && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapIn && !isCurveDepositTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        // if (tx.hash.toLowerCase() === '0x2aa8f408dd1d4653ef3c5c38a4c9241e615d94b7208bbbe1d2e19b3053fae8de'.toLowerCase()){\n        //   debugger;\n        // }\n\n        if (isSendTransferTx || isReceiveTransferTx || isMigrationTx || isDepositTx || isRedeemTx || isSwapTx || isSwapOutTx || isWithdrawTx || isConversionTx || isCurveDepositTx || isCurveRedeemTx || isCurveZapIn || isCurveZapOut || isCurveTransferOut || isCurveTransferIn || isCurveDepositIn || isCurveDepositOut){\n\n          let action = null;\n          let hashKey = tx.hash;\n\n          if (isDepositTx){\n            action = 'Deposit';\n          } else if (isRedeemTx){\n            action = 'Redeem';\n          } else if (isMigrationTx || isConversionTx){\n            action = 'Migrate';\n          } else if (isSendTransferTx){\n            action = 'Send';\n          } else if (isReceiveTransferTx){\n            action = 'Receive';\n          } else if (isSwapTx){\n            action = 'Swap';\n          } else if (isSwapOutTx){\n            action = 'SwapOut';\n          } else if (isWithdrawTx){\n            action = 'Withdraw';\n          } else if (isCurveDepositTx){\n            action = 'CurveIn';\n          } else if (isCurveRedeemTx){\n            action = 'CurveOut';\n          } else if (isCurveZapIn){\n            action = 'CurveZapIn';\n          } else if (isCurveZapOut){\n            action = 'CurveZapOut';\n          } else if (isCurveDepositIn){\n            action = 'CurveDepositIn';\n          } else if (isCurveDepositOut){\n            action = 'CurveDepositOut';\n          } else if (isCurveTransferIn){\n            action = 'CurveTransferIn';\n          } else if (isCurveTransferOut){\n            action = 'CurveTransferOut';\n          }\n\n          let curveTokens = null;\n          if (isCurveTx){\n            hashKey += '_'+tx.tokenSymbol;\n            curveTokens = this.fixTokenDecimals(curveTx.value,curvePoolContract.decimals);\n\n            // Add action for curve tokens transfers\n            if ((isCurveTransferIn || isCurveTransferOut)){\n              hashKey+='_'+action;\n            }\n          }\n\n          // this.customLog('SAVE!',action);\n\n          if (tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()){\n            tokenDecimals = 18;\n          } else if (isCurveTx){\n            tokenDecimals = parseInt(tx.tokenDecimal);\n          }\n\n          // Sum the value if already processed\n          if (etherscanTxs[hashKey]){\n            // Prevent second internal tx to sum SwapOut original value\n            switch (etherscanTxs[hashKey].action){\n              case 'SwapOut':\n                if (etherscanTxs[hashKey].action !== action && isRedeemTx){\n                  etherscanTxs[hashKey].tokenValue = this.fixTokenDecimals(tx.value,tokenDecimals);\n                }\n              break;\n              default:\n                if (!curveTx){\n                  const newValue = etherscanTxs[hashKey].value.plus(this.fixTokenDecimals(tx.value,tokenDecimals));\n                  etherscanTxs[hashKey].value = newValue;\n                }\n              break;\n            }\n          } else {\n            // Insert tx in curve transfers buffer\n            if (isCurveTransferIn || isCurveTransferOut){\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n                curveTokens = this.fixTokenDecimals(tx.value,curvePoolContract.decimals);\n                curveTransfersTxs.push({...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value,tokenDecimals)});\n              }\n            } else {\n              etherscanTxs[hashKey] = ({...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value,tokenDecimals)});\n\n              // Delete curveTransfers\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n                curveTransfersTxsToDelete.push(tx.hash.toLowerCase());\n              }\n\n              // Take right tokenSymbol\n              switch (action){\n                case 'Withdraw':\n                  const iTxs = internalTxs.filter(iTx => (iTx !== tx));\n                  if (iTxs.length>0){\n                    const iTx = iTxs[0];\n                    etherscanTxs[hashKey].withdrawnValue = this.fixTokenDecimals(iTx.value,iTx.tokenDecimal);\n                    etherscanTxs[hashKey].tokenSymbol = iTx.tokenSymbol;\n                  }\n                break;\n                default:\n                break;\n              }\n            }   \n          }\n        }\n      });\n    });\n    \n    curveTransfersTxs.forEach( tx => {\n      if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n        etherscanTxs[tx.hashKey] = tx;\n      }\n    });\n  \n    if (processTxs){\n      etherscanTxs = await this.processEtherscanTransactions(etherscanTxs,enabledTokens,processStoredTxs);\n    }\n\n    return etherscanTxs;\n  }\n  addStoredTransaction = (txKey,transaction) => {\n\n    const account = this.props && this.props.account ? this.props.account : null;\n    const selectedToken = this.props && this.props.selectedToken ? this.props.selectedToken : null;\n\n    if (!account || !selectedToken || !this.props.availableTokens || !this.props.availableTokens[selectedToken]){\n      return false;\n    }\n\n    const tokenConfig = this.props.availableTokens[selectedToken];\n    const tokenKey = tokenConfig.idle.token;\n\n    let storedTxs = this.getStoredTransactions();\n    if (!storedTxs[account]){\n      storedTxs[account] = {};\n    }\n\n    if (!storedTxs[account][tokenKey]){\n      storedTxs[account][tokenKey] = {};\n    }\n\n    storedTxs[account][tokenKey][txKey] = transaction;\n    this.updateStoredTransactions(storedTxs);\n  }\n  updateStoredTransactions = transactions => {\n    this.setLocalStorage('transactions',JSON.stringify(transactions));\n  }\n  /*\n  Merge storedTxs with this.props.transactions\n  */\n  getStoredTransactions = (account=null,tokenKey=null,selectedToken=null) => {\n    const storedTxs = this.getStoredItem('transactions',true,{});\n    const transactions = this.props.transactions ? { ...this.props.transactions } : {};\n    let output = storedTxs;\n\n    if (account){\n      if (storedTxs[account]){\n        output = storedTxs[account];\n        if (tokenKey){\n          output = output[tokenKey] ? output[tokenKey] : {};\n\n          if (selectedToken){\n            Object.keys(transactions).forEach(txKey => {\n              const tx = transactions[txKey];\n              if (!output[txKey] && tx.token && tx.token.toUpperCase() === selectedToken.toUpperCase()){\n                output[txKey] = transactions[txKey];\n              }\n            });\n          }\n        }\n      } else {\n        output = {};\n      }\n    }\n\n    return output;\n  }\n  processEtherscanTransactions = async (etherscanTxs,enabledTokens=[],processStoredTxs=true) => {\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let txReceipts = {};\n    let storedTxs = this.getStoredTransactions();\n\n    // Init storedTxs for pair account-token if empty\n    if (typeof storedTxs[this.props.account] !== 'object'){\n      storedTxs[this.props.account] = {};\n    }\n\n    // Take base tokens addresses and configs\n    const baseTokensConfigs = {};\n    const baseTokensAddresses = [];\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n    Object.keys(curveAvailableTokens).forEach( token => {\n      const curveTokenConfig = curveAvailableTokens[token];\n      const baseTokenConfig = this.getGlobalConfig(['stats','tokens',curveTokenConfig.baseToken]);\n      const baseTokenAddress = baseTokenConfig.address.toLowerCase();\n      baseTokensConfigs[baseTokenAddress] = baseTokenConfig;\n      baseTokensConfigs[baseTokenAddress].token = curveTokenConfig.baseToken;\n      baseTokensAddresses.push(baseTokenAddress);\n    });\n\n    const curveZapContract = this.getGlobalConfig(['curve','zapContract']);\n    // const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    // const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    // const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    await this.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n      const idleToken = tokenConfig.idle.token;\n\n      // Init storedTxs for pair account-token if empty\n      if (typeof storedTxs[this.props.account][tokenKey] !== 'object'){\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      const minedTxs = {...storedTxs[this.props.account][tokenKey]};\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        await this.asyncForEach(filteredTxs,async (tx,index) => {\n          const txKey = `tx${tx.timeStamp}000`;\n          const storedTx = storedTxs[this.props.account][tokenKey][txKey] ? storedTxs[this.props.account][tokenKey][txKey] : tx;\n\n          let tokenPrice = null;\n          \n          if (storedTx.tokenPrice && !this.BNify(storedTx.tokenPrice).isNaN()){\n            tokenPrice = this.BNify(storedTx.tokenPrice);\n          } else {\n            tokenPrice = await this.getIdleTokenPrice(tokenConfig,tx.blockNumber,tx.timeStamp);\n            storedTx.tokenPrice = tokenPrice;\n          }\n\n          let idleTokens = this.BNify(tx.value);\n          let tokensTransfered = tokenPrice.times(idleTokens);\n\n          // Add transactionHash to storedTx\n          if (!storedTx.transactionHash){\n            storedTx.transactionHash = tx.hash;\n          }\n\n          // Deposited\n          switch (tx.action){\n            case 'Send':\n            case 'Receive':\n            case 'Swap':\n            case 'SwapOut':\n            case 'Migrate':\n              if (!storedTx.tokenAmount){\n                storedTx.idleTokens = idleTokens;\n                storedTx.value = tokensTransfered;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.tokenSymbol = selectedToken;\n              }\n            break;\n            case 'Deposit':\n            case 'Redeem':\n              if (!storedTx.tokenAmount){\n                storedTx.value = idleTokens;\n                storedTx.tokenAmount = idleTokens;\n                storedTx.idleTokens = idleTokens.div(tokenPrice);\n              }\n            break;\n            case 'Withdraw':\n              if (!storedTx.tokenAmount){\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.value = storedTx.withdrawnValue;\n              }\n            break;\n            case 'CurveIn':\n            case 'CurveOut':\n              if (!storedTx.tokenAmount){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n            break;\n            case 'CurveTransferIn':\n            case 'CurveTransferOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n                storedTx.tokenAmount = this.BNify(storedTx.curveTokens).times(storedTx.curveTokenPrice);\n              }\n\n              storedTx.idleTokens = this.BNify(0);\n            break;\n            case 'CurveZapIn':\n            case 'CurveZapOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              if (!storedTx.tokenAmount){\n\n                storedTx.tokenAmount = this.BNify(0);\n                storedTx.idleTokens = this.BNify(0);\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise( async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n                    if (err){\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt){\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]){\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter( log => (baseTokensAddresses.includes(log.address.toLowerCase()) && log.topics[log.topics.length-1].toLowerCase() === `0x00000000000000000000000${curveZapContract.address.replace('x','').toLowerCase()}` ) );\n\n                  this.customLog('filteredLogs',filteredLogs);\n\n                  if (filteredLogs && filteredLogs.length){\n                    filteredLogs.forEach( log => {\n                      let tokenAmount = parseInt(log.data,16);\n                      const baseTokensConfig = baseTokensConfigs[log.address.toLowerCase()];\n                      const tokenDecimals = baseTokensConfig.decimals;\n                      tokenAmount = this.fixTokenDecimals(tokenAmount,tokenDecimals);\n                      storedTx.tokenAmount = storedTx.tokenAmount.plus(tokenAmount);\n                      this.customLog('Add tokenAmount ('+tx.hash+')',baseTokensConfig.token,tokenAmount.toFixed(5),storedTx.tokenAmount.toFixed(5));\n                    });\n                  }\n                }\n              }\n            break;\n            case 'CurveDepositIn':\n            case 'CurveDepositOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              storedTx.tokenAmount = this.BNify(storedTx.value);\n\n              if (!storedTx.idleTokens){\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise( async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n                    if (err){\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt){\n                  const curveTokenConfig = this.getGlobalConfig(['curve','availableTokens',idleToken]);\n                  const idleTokenDecimals = curveTokenConfig && curveTokenConfig.decimals ? curveTokenConfig.decimals : 18;\n                  const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]){\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter( log => (log.address.toLowerCase()===idleTokenAddress ) );\n                  if (filteredLogs && filteredLogs.length){\n                    idleTokens = parseInt(filteredLogs[0].data,16);\n                    idleTokens = this.fixTokenDecimals(idleTokens,idleTokenDecimals);\n                    storedTx.idleTokens = idleTokens;\n                  }\n                }\n              }\n            break;\n            default:\n            break;\n          }\n            \n          // Save token for future filtering\n          storedTx.token = selectedToken;\n\n          // Save processed tx\n          etherscanTxs[tx.hashKey] = storedTx;\n\n          // Store processed Tx\n          storedTxs[this.props.account][tokenKey][txKey] = storedTx;\n\n          // Remove from minted Txs\n          delete minedTxs[txKey];\n        });\n      }\n\n      // Process Stored txs\n      if (processStoredTxs){\n        etherscanTxs = await this.processStoredTxs(etherscanTxs,[selectedToken],this.props.transactions);\n      }\n    });\n\n    // Update Stored txs\n    if (storedTxs){\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  processStoredTxs = async (etherscanTxs,enabledTokens=[],txsToProcess=null) => {\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let storedTxs = this.getStoredItem('transactions',true,{})\n\n    // Init storedTxs\n    if (!storedTxs[this.props.account]){\n      storedTxs[this.props.account] = {};\n    }\n\n    etherscanTxs = Object.assign({},etherscanTxs);\n\n    // this.customLog('Processing stored txs',enabledTokens);\n\n    await this.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n\n      // Init storedTxs\n      if (!storedTxs[this.props.account][tokenKey]){\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      txsToProcess = txsToProcess && Object.values(txsToProcess).length ? txsToProcess : this.getStoredTransactions(this.props.account,tokenKey,selectedToken);\n      \n      // this.customLog('txsToProcess',selectedToken,txsToProcess);\n\n      // if (!Object.values(txsToProcess).length && selectedToken==='DAI' && Object.values(this.props.transactions).length>0){\n      //   debugger;\n      // }\n\n      // Debug transactions\n      /*\n      txsToProcess['xxxxx'] = {\n        status:'success',\n        created:new Date().getTime(),\n        method:'executeMetaTransaction',\n        token:selectedToken.toUpperCase(),\n        transactionHash:'0x000000000000000000000000000'\n      };\n      */\n\n      await this.asyncForEach(Object.keys(txsToProcess),async (txKey,i) => {\n        const tx = txsToProcess[txKey];\n\n        // Skip wrong token\n        if (!tx || !tx.token || tx.token.toUpperCase() !== selectedToken.toUpperCase()){\n          return false;\n        }\n\n        const isStoredTx = storedTxs && storedTxs[this.props.account] && storedTxs[this.props.account][tokenKey] && storedTxs[this.props.account][tokenKey][txKey];\n\n        const allowedMethods = {\n          mintIdleToken:'Deposit',\n          redeemIdleToken:'Redeem',\n          migrateFromToIdle:'Migrate',\n          mintIdleTokensProxy:'Deposit',\n          migrateFromAaveToIdle:'Migrate',\n          migrateFromIearnToIdle:'Migrate',\n          executeMetaTransaction:'Migrate',\n          migrateFromFulcrumToIdle:'Migrate',\n          migrateFromCompoundToIdle:'Migrate',\n        };\n        const pendingStatus = ['pending','started'];\n        const txSucceeded = tx.status === 'success';\n        const txPending = pendingStatus.includes(tx.status);\n        const isMetaTx = tx.method === 'executeMetaTransaction';\n        const txHash = tx.transactionHash ? tx.transactionHash : null;\n        const methodIsAllowed = Object.keys(allowedMethods).includes(tx.method);\n\n        // Skip transaction if already present in etherscanTxs with same status\n        if (txHash && etherscanTxs[txHash] && etherscanTxs[txHash].tokenPrice){\n          return false;\n        }\n\n        if (txPending && txHash && !etherscanTxs[txHash] && methodIsAllowed && tx.params.length){\n          // this.customLog('processStoredTxs',tx.method,tx.status,tx.params);\n          const isMigrationTx = allowedMethods[tx.method] === 'Migrate';\n          const decimals = isMigrationTx ? 18 : tokenConfig.decimals;\n          etherscanTxs[`t${tx.created}`] = {\n            status:'Pending',\n            token:selectedToken,\n            action:allowedMethods[tx.method],\n            timeStamp:parseInt(tx.created/1000),\n            hash:txHash ? tx.transactionHash : null,\n            tokenSymbol:isMigrationTx ? tokenConfig.idle.token : selectedToken,\n            value: tx.value ? tx.value : this.fixTokenDecimals(tx.params[0],decimals).toString()\n          };\n\n          return false;\n        }\n\n        // Skip invalid txs\n        if (!txSucceeded || !txHash || !methodIsAllowed){\n          return false;\n        }\n\n        let realTx = tx.realTx ? tx.realTx : null;\n\n        if (!realTx){\n          // this.customLog('loadTxs - getTransaction',tx.transactionHash);\n          realTx = await (new Promise( async (resolve, reject) => {\n            this.props.web3.eth.getTransaction(tx.transactionHash,(err,txReceipt)=>{\n              if (err){\n                reject(err);\n              }\n              resolve(txReceipt);\n            });\n          }));\n        }\n\n        // this.customLog('realTx (localStorage)',realTx);\n\n        // Skip txs from other wallets if not meta-txs\n        if (!realTx || (!isMetaTx && realTx.from.toLowerCase() !== this.props.account.toLowerCase())){\n          return false;\n        }\n\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig,realTx.blockNumber,realTx.timeStamp);\n\n        realTx.status = 'Completed';\n        realTx.action = allowedMethods[tx.method];\n        realTx.contractAddress = tokenConfig.address;\n        realTx.timeStamp = parseInt(tx.created/1000);\n\n        let txValue = null;\n        switch (tx.method){\n          case 'mintIdleToken':\n          case 'mintIdleTokensProxy':\n            if (!tx.params){\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (realTx.to.toLowerCase() !== tokenConfig.idle.address.toLowerCase()){\n              // Remove wrong contract tx\n              if (isStoredTx){\n                delete storedTxs[this.props.account][tokenKey][txKey];\n              }\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - wrong contract');\n              return false;\n            }\n\n            txValue = tx.params ? this.fixTokenDecimals(tx.params[0],tokenConfig.decimals).toString() : 0;\n            if (!txValue){\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - value is zero ('+txValue+')');\n              return false;\n            }\n\n            realTx.value = txValue;\n            realTx.tokenAmount = txValue;\n          break;\n          case 'redeemIdleToken':\n            if (!tx.params){\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (!realTx.tokenPrice){\n              const redeemedValueFixed = this.fixTokenDecimals(tx.params[0],18).times(tokenPrice);\n              realTx.tokenPrice = tokenPrice;\n              realTx.value = redeemedValueFixed;\n              realTx.tokenAmount = redeemedValueFixed;\n            }\n          break;\n          case 'executeMetaTransaction':\n            let executeMetaTransactionReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!executeMetaTransactionReceipt){\n              executeMetaTransactionReceipt = await (new Promise( async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash,(err,tx)=>{\n                  if (err){\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!executeMetaTransactionReceipt){\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt){\n              tx.txReceipt = executeMetaTransactionReceipt;\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            let action = null;\n            let executeMetaTransactionContractAddr = null;\n            let executeMetaTransactionInternalTransfers = [];\n            const IdleProxyMinterInfo = this.getGlobalConfig(['contract','deposit','proxyContract']);\n\n            // Handle migration tx\n            if (tokenConfig.migration && tokenConfig.migration.oldContract){\n              if (executeMetaTransactionReceipt.logs){\n                executeMetaTransactionContractAddr = tokenConfig.migration.oldContract.address.replace('x','').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n              } else if (executeMetaTransactionReceipt.events){\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length){\n                action = 'Migrate';\n              }\n            }\n\n            // Handle deposit tx\n            if (!executeMetaTransactionInternalTransfers.length){\n              if (executeMetaTransactionReceipt.logs){\n                executeMetaTransactionContractAddr = tokenConfig.idle.address.replace('x','').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n\n                // Handle deposit made with proxy contract\n                if (!executeMetaTransactionInternalTransfers.length && IdleProxyMinterInfo){\n                  executeMetaTransactionContractAddr = IdleProxyMinterInfo.address.replace('x','').toLowerCase();\n                  executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n                }\n              } else if (executeMetaTransactionReceipt.events){\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length){\n                action = 'Deposit';\n              }\n            }\n\n            if (!executeMetaTransactionInternalTransfers.length){\n              return false;\n            }\n\n            const internalTransfer = executeMetaTransactionInternalTransfers[0];\n\n            const metaTxValue = internalTransfer.data ? parseInt(internalTransfer.data,16) : (internalTransfer.raw && internalTransfer.raw.data) ? parseInt(internalTransfer.raw.data,16) : null;\n\n            if (!metaTxValue){\n              return false;\n            }\n\n            const metaTxValueFixed = this.fixTokenDecimals(metaTxValue,tokenConfig.decimals);\n            realTx.action = action;\n            realTx.value = metaTxValueFixed;\n            realTx.tokenAmount = metaTxValueFixed;\n            // this.customLog(metaTxValueFixed.toString());\n          break;\n          case 'migrateFromCompoundToIdle':\n          case 'migrateFromFulcrumToIdle':\n          case 'migrateFromAaveToIdle':\n          case 'migrateFromIearnToIdle':\n          case 'migrateFromToIdle':\n            if (!tokenConfig.migration || !tokenConfig.migration.oldContract){\n              return false;\n            }\n\n            let migrationTxReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!migrationTxReceipt){\n              migrationTxReceipt = await (new Promise( async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash,(err,tx)=>{\n                  if (err){\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!migrationTxReceipt){\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt){\n              tx.txReceipt = migrationTxReceipt;\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            const migrationContractAddr = tokenConfig.migration.migrationContract.address.toLowerCase().replace('x','');\n            const contractAddress = tokenConfig.idle.address.toLowerCase().replace('x','');\n            const migrationTxInternalTransfers = migrationTxReceipt.logs.filter((tx) => { return tx.topics.length>=3 && tx.topics[tx.topics.length-2].toLowerCase() === `0x00000000000000000000000${migrationContractAddr}` && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${contractAddress}`; });\n\n            if (!migrationTxInternalTransfers.length){\n              return false;\n            }\n\n            const migrationInternalTransfer = migrationTxInternalTransfers.pop();\n\n            const decodedLogs = this.props.web3.eth.abi.decodeLog([\n              {\n                internalType: \"uint256\",\n                name: \"_token\",\n                type: \"uint256\"\n              },\n            ],migrationInternalTransfer.data,migrationInternalTransfer.topics);\n\n            if (!decodedLogs || !decodedLogs._token){\n              return false;\n            }\n\n            const migrationValue = decodedLogs._token;\n            const migrationValueFixed = this.fixTokenDecimals(migrationValue,tokenConfig.decimals);\n            realTx.value = migrationValueFixed.toString();\n          break;\n          default:\n          break;\n        }\n\n        realTx.tokenPrice = tokenPrice;\n        realTx.token = selectedToken;\n        realTx.tokenSymbol = selectedToken;\n        realTx.idleTokens = tokenPrice.times(this.BNify(realTx.value));\n\n        // Save processed tx\n        etherscanTxs[txHash] = realTx;\n        // etherscanTxs.push(realTx);\n\n        // Store processed Tx\n        if (!tx.realTx){\n          tx.realTx = realTx;\n          storedTxs[this.props.account][tokenKey][txKey] = tx;\n        }\n      });\n    });\n\n    // Update Stored Txs\n    if (storedTxs){\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  saveCachedRequest = (endpoint,alias=false,data) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    const timestamp = parseInt(new Date().getTime()/1000);\n    cachedRequests[key] = {\n      data,\n      timestamp\n    };\n    return this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n  }\n  getCachedRequest = (endpoint,alias=false) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key]){\n      return cachedRequests[key].data;\n    }\n    return null;\n  }\n  makeRequest = async(endpoint,error_callback=false,config=null) => {\n    const data = await axios\n                  .get(endpoint,config)\n                  .catch(err => {\n                    if (typeof error_callback === 'function'){\n                      error_callback(err);\n                    }\n                  });\n    return data;\n  }\n  makeCachedRequest = async (endpoint,TTL=0,return_data=false,alias=false) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(new Date().getTime()/1000);\n    \n    // Check if already exists\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key] && cachedRequests[key].timestamp && timestamp-cachedRequests[key].timestamp<TTL){\n      return (cachedRequests[key].data && return_data ? cachedRequests[key].data.data : cachedRequests[key].data);\n    }\n\n    const data = await this.makeRequest(endpoint);\n\n    cachedRequests[key] = {\n      data,\n      timestamp\n    };\n    this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n    return (data && return_data ? data.data : data);\n  }\n  getTransactionError = error => {\n    let output = 'error';\n    if (parseInt(error.code)){\n      const errorCode = parseInt(error.code);\n      switch (errorCode){\n        case 4001:\n          output = 'denied';\n        break;\n        default:\n          output = `error_${errorCode}`;\n        break;\n      }\n    } else if (error.message){\n      output = error.message.split(\"\\n\")[0]; // Take just the first line of the error\n    }\n\n    return output;\n  }\n  getGlobalConfigs = () => {\n    return globalConfigs;\n  }\n  getArrayPath = (path,array) => {\n    if (path.length>0){\n      const prop = path.shift();\n      if (!path.length){\n        return array[prop] ? array[prop] : null;\n      } else if (array[prop]) {\n        return this.getArrayPath(path,array[prop]);\n      }\n    }\n    return null;\n  }\n  getGlobalConfig = (path,configs=false) => {\n    configs = configs ? configs : globalConfigs;\n    if (path.length>0){\n      const prop = path.shift();\n      if (!path.length){\n        return configs[prop] ? configs[prop] : null;\n      } else if (configs[prop]) {\n        return this.getGlobalConfig(path,configs[prop]);\n      }\n    }\n    return null;\n  }\n  checkUrlOrigin = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n  }\n  sendGoogleAnalyticsEvent = async (eventData,callback=null) => {\n\n    const googleEventsInfo = globalConfigs.analytics.google.events;\n    const debugEnabled = googleEventsInfo.debugEnabled;\n    const originOk = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n\n    if (googleEventsInfo.enabled && window.ga && ( debugEnabled || originOk)){\n\n      // Check if testnet postfix required\n      if (googleEventsInfo.addPostfixForTestnet){\n        // Postfix network name if not mainnet\n        if (globalConfigs.network.requiredNetwork !== 1){\n          const currentNetwork = globalConfigs.network.availableNetworks[globalConfigs.network.requiredNetwork];\n          eventData.eventCategory += `_${currentNetwork}`;\n        // Postfix test for debug\n        } else if (debugEnabled && !originOk) {\n          eventData.eventCategory += '_test';\n        }\n      }\n\n      await (new Promise( async (resolve, reject) => {\n        eventData.hitCallback = () => {\n          resolve(true);\n        };\n        eventData.hitCallbackFail = () => {\n          reject();\n        };\n\n        window.ga('send', 'event', eventData);\n      }));\n\n      if (typeof callback === 'function'){\n        callback();\n      }\n    }\n\n    if (typeof callback === 'function'){\n      callback();\n    }\n\n    return false;\n  }\n  createContract = async (name, address, abi) => {\n    try {\n      const contract = new this.props.web3.eth.Contract(abi, address);\n      return {name, contract};\n    } catch (error) {\n      this.customLogError(\"Could not create contract.\",name,address,error);\n    }\n    return null;\n  }\n  getWalletProvider = () => {\n    return this.getStoredItem('walletProvider',false,null);\n  }\n  simpleIDPassUserInfo = (userInfo,simpleID) => {\n    if (!userInfo.address && this.props.account){\n      userInfo.address = this.props.account;\n    }\n    if (!userInfo.provider){\n      userInfo.provider = this.getWalletProvider();\n    }\n    if (typeof userInfo.email !== 'undefined' && !userInfo.email){\n      delete userInfo.email;\n    }\n    if (!userInfo.address){\n      return false;\n    }\n    simpleID = simpleID ? simpleID : (this.props.simpleID ? this.props.simpleID : (typeof this.props.initSimpleID === 'function' ? this.props.initSimpleID() : null));\n    if (simpleID){\n      return simpleID.passUserInfo(userInfo);\n    }\n    return false;\n  }\n  getEtherscanTransactionUrl = (tx_address) => {\n    return tx_address ? 'https://etherscan.io/tx/'+tx_address : null;\n  }\n  getEtherscanAddressUrl = (address) => {\n    return address ? 'https://etherscan.io/address/'+address : null;\n  }\n  formatMoney = (amount, decimalCount = 2, decimal = \".\", thousands = \",\") => {\n    try {\n      decimalCount = Math.abs(decimalCount);\n      decimalCount = isNaN(decimalCount) ? 2 : decimalCount;\n\n      const negativeSign = amount < 0 ? \"-\" : \"\";\n\n      let i = parseInt(amount = Math.abs(Number(amount) || 0).toFixed(decimalCount)).toString();\n      let j = (i.length > 3) ? i.length % 3 : 0;\n\n      return negativeSign + (j ? i.substr(0, j) + thousands : '') + i.substr(j).replace(/(\\d{3})(?=\\d)/g, \"$1\" + thousands) + (decimalCount ? decimal + Math.abs(amount - i).toFixed(decimalCount).slice(2) : \"\");\n    } catch (e) {\n      return null;\n    }\n  }\n  getTokenApiData = async (address,isRisk=null,startTimestamp=null,endTimestamp=null,forceStartTimestamp=false,frequency=null,order=null,limit=null) => {\n    if (globalConfigs.network.requiredNetwork!==1 || !globalConfigs.stats.enabled){\n      return [];\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenApiData_${address}_${isRisk}_${frequency}_${order}_${limit}`;\n    let cachedData = this.getCachedData(cachedDataKey);\n\n    if (cachedData){\n      // Check for fittable start and end time\n      const filteredCachedData = cachedData.filter( c => ( (c.startTimestamp===null || (startTimestamp && c.startTimestamp<=startTimestamp)) && (c.endTimestamp===null || (endTimestamp && c.endTimestamp>=endTimestamp)) ) )\n\n      if (filteredCachedData && filteredCachedData.length>0){\n        const filteredData = filteredCachedData.pop().data;\n        if (filteredData){\n          return filteredData.filter( d => ((!startTimestamp || d.timestamp>=startTimestamp) && (!endTimestamp || d.timestamp<=endTimestamp)) );\n        }\n        return null;\n      }\n    // Initialize cachedData\n    } else {\n      cachedData = [];\n    }\n\n    const apiInfo = globalConfigs.stats.rates;\n    let endpoint = `${apiInfo.endpoint}${address}`;\n\n    if (startTimestamp || endTimestamp || isRisk !== null || frequency !== null){\n      const params = [];\n\n      if (startTimestamp && parseInt(startTimestamp)){\n        if (forceStartTimestamp){\n          params.push(`start=${startTimestamp}`);\n        } else {\n          const start = startTimestamp-(60*60*24*2); // Minus 1 day for Volume graph\n          params.push(`start=${start}`);\n        }\n      }\n\n      if (endTimestamp && parseInt(endTimestamp)){\n        params.push(`end=${endTimestamp}`);\n      }\n\n      if (isRisk !== null){\n        params.push(`isRisk=${isRisk}`);\n      }\n\n      if (frequency !== null && parseInt(frequency)){\n        params.push(`frequency=${frequency}`);\n      }\n\n      if (order !== null){\n        params.push(`order=${order}`);\n      }\n\n      if (limit !== null && parseInt(limit)){\n        params.push(`limit=${limit}`);\n      }\n\n      if (params.length){\n        endpoint += '?'+params.join('&');\n      }\n    }\n\n    let output = await this.makeRequest(endpoint);\n    if (!output){\n      return [];\n    }\n\n    let data = output.data;\n    if (isRisk !== null){\n      data = data.filter( d => ( d.isRisk === isRisk ) );\n    }\n\n    cachedData.push({\n      data,\n      isRisk,\n      endTimestamp,\n      startTimestamp,\n    });\n\n    this.setCachedData(cachedDataKey,cachedData);\n\n    return data;\n  }\n  getTokenDecimals = async (contractName) => {\n    contractName = contractName ? contractName : this.props.selectedToken;\n    return await this.genericContractCall(contractName,'decimals');\n  }\n  getAvgApr = (aprs,allocations,totalAllocation) => {\n    if (aprs && allocations && totalAllocation){\n      let avgApr = Object.keys(aprs).reduce((aprWeighted,protocolAddr) => {\n        const allocation = this.BNify(allocations[protocolAddr]);\n        const apr = this.BNify(aprs[protocolAddr]);\n        return this.BNify(aprWeighted).plus(allocation.times(apr));\n      },0);\n\n      if (avgApr){\n        return this.BNify(avgApr).div(totalAllocation);\n      }\n    }\n    return null;\n  }\n  getFrequencySeconds = (frequency,quantity=1) => {\n    const frequency_seconds = {\n      hour:3600,\n      day:86400,\n      week:604800\n    };\n    return frequency_seconds[frequency]*quantity;\n  }\n  getProtocolInfoByAddress = (addr) => {\n    return this.props.tokenConfig.protocols.find(c => c.address.toLowerCase() === addr.toLowerCase());\n  }\n  integerValue = value => {\n    return this.BNify(value).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  normalizeTokenDecimals = tokenDecimals => {\n    return this.BNify(`1e${tokenDecimals}`);\n  }\n  normalizeTokenAmount = (tokenBalance,tokenDecimals,round=true) => {\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    return this.BNify(tokenBalance).times(normalizedTokenDecimals).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  fixTokenDecimals = (tokenBalance,tokenDecimals,exchangeRate) => {\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    let balance = this.BNify(tokenBalance).div(normalizedTokenDecimals);\n    if (exchangeRate && !exchangeRate.isNaN()){\n      balance = balance.times(exchangeRate);\n    }\n    return balance;\n  }\n  checkContractPaused = async (contractName=null) => {\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const contractPaused = await this.genericContractCall(contractName, 'paused', [], {}).catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n    // this.customLog('checkContractPaused',this.props.tokenConfig.idle.token,contractPaused);\n    return contractPaused;\n  }\n  getStoredItem = (key,parse_json=true,return_default=null) => {\n    let output = return_default;\n    if (window.localStorage){\n      const item = localStorage.getItem(key);\n      if (item){\n        output = item;\n        if (parse_json){\n          output = JSON.parse(item);\n        }\n      }\n    }\n    if (!output){\n      return return_default;\n    }\n    return output;\n  }\n  clearStoredData = (excludeKeys=[]) => {\n    if (window.localStorage){\n\n      if (!excludeKeys || !excludeKeys.length){\n        return window.localStorage.clear();\n      }\n\n      const storedKeysToRemove = [];\n      for (let i=0;i<window.localStorage.length;i++){\n        const storedKey = window.localStorage.key(i);\n        if (!excludeKeys.includes(storedKey)){\n          storedKeysToRemove.push(storedKey);\n        }\n      }\n      storedKeysToRemove.forEach((storedKey) => {\n        this.removeStoredItem(storedKey)\n      });\n    }\n  }\n  removeStoredItem = (key) => {\n    if (window.localStorage){\n      window.localStorage.removeItem(key);\n      return true;\n    }\n    return false;\n  }\n  setLocalStorage = (key,value,stringify=false) => {\n    if (window.localStorage){\n      try {\n        value = stringify ? JSON.stringify(value) : value;\n        window.localStorage.setItem(key,value);\n        return true;\n      } catch (error) {\n        // this.customLog('setLocalStorage',error);\n        window.localStorage.removeItem(key);\n      }\n    }\n    return false;\n  }\n  checkRebalance = async (tokenConfig) => {\n\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n\n    if (!globalConfigs.contract.methods.rebalance.enabled || !tokenConfig){\n      return false;\n    }\n\n    const rebalancer = await this.genericContractCall(tokenConfig.idle.token, 'rebalancer');\n\n    if (!rebalancer){\n      return false;\n    }\n\n    const idleRebalancerInstance = await this.createContract('idleRebalancerInstance',rebalancer,globalConfigs.contract.methods.rebalance.abi);\n\n\n    if (!idleRebalancerInstance || !idleRebalancerInstance.contract){\n      return false;\n    }\n\n    // Take next protocols allocations\n    const allocationsPromises = [];\n    const availableTokensPromises = [];\n\n    for (let protocolIndex=0;protocolIndex<tokenConfig.protocols.length;protocolIndex++){\n      const allocationPromise = new Promise( async (resolve, reject) => {\n        try{\n          const allocation = await idleRebalancerInstance.contract.methods.lastAmounts(protocolIndex).call();\n          resolve({\n            allocation,\n            protocolIndex\n          });\n        } catch (error){\n          resolve(null);\n        }\n      });\n      allocationsPromises.push(allocationPromise);\n\n      const availableTokenPromise = new Promise( async (resolve, reject) => {\n        try {\n          const protocolAddr = await this.genericContractCall(tokenConfig.idle.token, 'allAvailableTokens', [protocolIndex]);\n          resolve({\n            protocolAddr,\n            protocolIndex\n          });\n        } catch (error){\n          resolve(null);\n        }\n      });\n      availableTokensPromises.push(availableTokenPromise);\n    }\n\n    let nextAllocations = null;\n    let allAvailableTokens = null;\n\n    try{\n      nextAllocations = await Promise.all(allocationsPromises);\n      allAvailableTokens = await Promise.all(availableTokensPromises);\n    } catch (error){\n      \n    }\n\n    nextAllocations = nextAllocations && nextAllocations.length ? nextAllocations.filter(v => (v !== null)) : null;\n    allAvailableTokens = allAvailableTokens && allAvailableTokens.length ? allAvailableTokens.filter(v => (v !== null)) : null;\n\n    if ((!allAvailableTokens || !allAvailableTokens.length) || (!nextAllocations || !nextAllocations.length)){\n      return false;\n    }\n\n    // Merge nextAllocations and allAvailableTokens\n    let newTotalAllocation = this.BNify(0);\n    const newProtocolsAllocations = allAvailableTokens.reduce((accumulator,availableTokenInfo) => {\n      if (availableTokenInfo.protocolAddr){\n        const nextAllocation = nextAllocations.find(v => { return v.protocolIndex === availableTokenInfo.protocolIndex; });\n        if (nextAllocation){\n          const allocation = this.BNify(nextAllocation.allocation);\n          accumulator[availableTokenInfo.protocolAddr.toLowerCase()] = allocation;\n          newTotalAllocation = newTotalAllocation.plus(allocation);\n        }\n      }\n      return accumulator;\n    },{});\n\n    // Check if newAllocations differs from currentAllocations\n    let shouldRebalance = false;\n\n    const tokenAllocation = await this.getTokenAllocation(tokenConfig);\n    const protocolsAllocationsPerc = tokenAllocation ? tokenAllocation.protocolsAllocationsPerc : null;\n\n    if (typeof protocolsAllocationsPerc === 'object'){\n      Object.keys(protocolsAllocationsPerc).forEach((protocolAddr) => {\n\n        // Get current protocol allocation percentage\n        const protocolAllocation = protocolsAllocationsPerc[protocolAddr];\n        const protocolAllocationPerc = parseFloat(protocolAllocation).toFixed(3);\n        \n        // Calculate new protocol allocation percentage\n        const newProtocolAllocation = newProtocolsAllocations[protocolAddr.toLowerCase()] ? newProtocolsAllocations[protocolAddr.toLowerCase()] : this.BNify(0);\n        const newProtocolAllocationPerc = newProtocolAllocation ? parseFloat(newProtocolAllocation.div(newTotalAllocation)).toFixed(3) : this.BNify(0);\n\n        // this.customLog(protocolAddr,protocolAllocation.toString(),newProtocolAllocation.toString(),newTotalAllocation.toString(),protocolAllocationPerc,newProtocolAllocationPerc);\n\n        if (protocolAllocationPerc !== newProtocolAllocationPerc){\n          shouldRebalance = true;\n        }\n      });\n    }\n\n    return shouldRebalance;\n  }\n  checkMigration = async (tokenConfig,account) => {\n\n    if (!tokenConfig || !account){\n      return false;\n    }\n\n    let migrationEnabled = false;\n    let oldContractBalance = null;\n    let oldContractTokenDecimals = null;\n    // let migrationContractApproved = false;\n    let oldContractBalanceFormatted = null;\n\n    // Check migration contract enabled and balance\n    if (tokenConfig.migration && tokenConfig.migration.enabled){\n      const oldContractName = tokenConfig.migration.oldContract.name;\n      const oldContract = this.getContractByName(oldContractName);\n      const migrationContract = this.getContractByName(tokenConfig.migration.migrationContract.name);\n\n      // this.customLog(oldContractName,tokenConfig.migration.migrationContract.name);\n\n      if (oldContract && migrationContract){\n        // Get old contract token decimals\n        oldContractTokenDecimals = await this.getTokenDecimals(oldContractName);\n\n        // this.customLog('Migration - token decimals',oldContractTokenDecimals ? oldContractTokenDecimals.toString() : null);\n\n        // Check migration contract approval\n        // migrationContractApproved = await this.checkMigrationContractApproved();\n\n        // this.customLog('Migration - approved',migrationContractApproved ? migrationContractApproved.toString() : null);\n\n        // Check old contractBalance\n        oldContractBalance = await this.getContractBalance(oldContractName,account);\n\n        if (oldContractBalance){\n          oldContractBalanceFormatted = this.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.BNify(oldContractBalance).gt(0);\n        }\n\n        // this.customLog('Migration - oldContractBalance',oldContractName,account,oldContractBalance,oldContractBalanceFormatted);\n      }\n    }\n\n    // Set migration contract balance\n    return {\n      migrationEnabled,\n      oldContractBalance,\n      oldContractTokenDecimals,\n      oldContractBalanceFormatted,\n    };\n  }\n\n  executeMetaTransaction = async (contract, userAddress, signedParameters, callback, callback_receipt) => {\n    try {\n\n      // const gasLimit = await contract.methods\n      //   .executeMetaTransaction(userAddress, ...signedParameters)\n      //   .estimateGas({ from: userAddress });\n\n      // this.customLog(gasLimit);\n\n      const gasPrice = await this.props.web3.eth.getGasPrice();\n\n      const tx = contract.methods\n        .executeMetaTransaction(userAddress, ...signedParameters)\n        .send({\n          from: userAddress,\n          gasPrice\n          // gasLimit\n        });\n\n      tx.on(\"transactionHash\", function(hash) {\n        this.customLog(`Transaction sent by relayer with hash ${hash}`);\n        callback_receipt()\n      }).once(\"confirmation\", function(confirmationNumber, receipt) {\n        this.customLog(\"Transaction confirmed on chain\",receipt);\n        callback_receipt(receipt);\n      });\n    } catch (error) {\n      this.customLog(error);\n      callback(null,error);\n    }\n  }\n\n  getSignatureParameters_v4 = signature => {\n    if (!this.props.web3.utils.isHexStrict(signature)) {\n      throw new Error(\n        'Given value \"'.concat(signature, '\" is not a valid hex string.')\n      );\n    }\n    var r = signature.slice(0, 66);\n    var s = \"0x\".concat(signature.slice(66, 130));\n    var v = \"0x\".concat(signature.slice(130, 132));\n    v = this.props.web3.utils.hexToNumber(v);\n    if (![27, 28].includes(v)) v += 27;\n    return {\n      r: r,\n      s: s,\n      v: v\n    };\n  };\n\n  constructMetaTransactionMessage = (nonce, chainId, functionSignature, contractAddress) => {\n    return ethereumjsABI.soliditySHA3(\n      [\"uint256\",\"address\",\"uint256\",\"bytes\"],\n      [nonce, contractAddress, chainId, toBuffer(functionSignature)]\n    );\n  }\n\n  checkBiconomyLimits = async (userAddress) => {\n    const biconomyInfo = this.getGlobalConfig(['network','providers','biconomy']);\n    const res = await this.makeRequest(`${biconomyInfo.endpoints.limits}?userAddress=${userAddress}&apiId=${biconomyInfo.params.apiId}`,null,{\n      headers:{\n        'x-api-key':biconomyInfo.params.apiKey\n      }\n    });\n\n    if (res && res.data){\n      return res.data;\n    }\n\n    return null;\n  }\n\n  sendBiconomyTxWithPersonalSign = async (contractName,functionSignature,callback,callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    try{\n\n      const userAddress = this.props.account;\n      const nonce = await contract.methods.getNonce(userAddress).call();\n      const chainId = this.getGlobalConfig(['network','requiredNetwork']);\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      // this.customLog('executeMetaTransaction', [userAddress, functionSignature, messageToSign, `${messageToSign.length}`, r, s, v]);\n\n      this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      console.error(error);\n      callback(null,error);\n      return false;\n    }\n  }\n\n  sendBiconomyTx = async (contractName,contractAddress,functionSignature,callback,callback_receipt) => {\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const MetaTransaction = [\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"from\", type: \"address\" },\n      { name: \"functionSignature\", type: \"bytes\" }\n    ];\n\n    const chainId = await this.props.web3.eth.getChainId();\n\n    const domainData = {\n      chainId,\n      version: '1',\n      name: contractName,\n      verifyingContract: contractAddress\n    };\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false\n    }\n\n    let userAddress = this.props.account;\n    let nonce = await contract.methods.getNonce(userAddress).call();\n    let message = {};\n    message.nonce = nonce;\n    message.from = userAddress;\n    message.functionSignature = functionSignature;\n\n    const dataToSign = JSON.stringify({\n      types: {\n        EIP712Domain,\n        MetaTransaction\n      },\n      domain: domainData,\n      primaryType: \"MetaTransaction\",\n      message\n    });\n\n    // this.customLog('dataToSign',dataToSign);\n\n    this.props.web3.currentProvider.send(\n      {\n        jsonrpc: \"2.0\",\n        id: 999999999999,\n        from: userAddress,\n        method: \"eth_signTypedData_v4\",\n        params: [userAddress, dataToSign]\n      },\n      (error, response) => {\n        if (error || (response && response.error)) {\n          return callback(null,error);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          const { r, s, v } = signedParameters;\n            \n          this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n        }\n      }\n    );\n  }\n\n  checkTokenApproved = async (contractName,contractAddr,walletAddr) => {\n    const value = this.props.web3.utils.toWei('0','ether');\n    const allowance = await this.getAllowance(contractName,contractAddr,walletAddr);\n    return allowance && this.BNify(allowance).gt(this.BNify(value.toString()));\n  }\n  getAllowance = async (contractName,contractAddr,walletAddr) => {\n    if (!contractName || !contractAddr || !walletAddr){\n      return false;\n    }\n    this.customLog('getAllowance',contractName,contractAddr,walletAddr);\n    return await this.genericContractCall(\n      contractName, 'allowance', [walletAddr, contractAddr]\n    );\n  }\n  contractMethodSendWrapper = (contractName,methodName,params,callback,callback_receipt,txData) => {\n    this.props.contractMethodSendWrapper(contractName, methodName, params, null, (tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    }, null, txData);\n  }\n  enableERC20 = (contractName,address,callback,callback_receipt) => {\n    // const contract = this.getContractByName(contractName);\n    // this.customLog('enableERC20',contractName,contract,address);\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('-1') // max uint solidity\n    ],null,(tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    });\n  }\n  loadAssetField = async (field,token,tokenConfig,account,addGovTokens=true,addCurveApy=false) => {\n\n    let output = null;\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    // Remove gov tokens for risk adjusted strategy\n    const strategyInfo = this.getGlobalConfig(['strategies',this.props.selectedStrategy]);\n    if (addGovTokens && strategyInfo && typeof strategyInfo.addGovTokens !== 'undefined'){\n      addGovTokens = strategyInfo.addGovTokens;\n    }\n\n    // Take available tokens for gov tokens fields\n    let govTokenAvailableTokens = null;\n    if (this.props.selectedStrategy && this.props.selectedToken){\n      const newTokenConfig = this.props.availableStrategies[this.props.selectedStrategy][this.props.selectedToken];\n      if (newTokenConfig){\n        govTokenAvailableTokens = {};\n        govTokenAvailableTokens[newTokenConfig.token] = newTokenConfig;\n      }\n    } else if (!Object.keys(govTokens).includes(token)){\n      govTokenAvailableTokens = {};\n      govTokenAvailableTokens[token] = tokenConfig;\n    }\n\n    switch (field){\n      case 'amountLentCurve':\n        const [\n          curveAvgSlippage,\n          curveAvgBuyPrice,\n          curveTokenBalance,\n        ] = await Promise.all([\n          this.getCurveAvgSlippage(),\n          this.getCurveAvgBuyPrice([],account),\n          this.getCurveTokenBalance(account,true),\n        ]);\n\n        if (curveAvgBuyPrice && curveTokenBalance){\n          output = this.BNify(curveTokenBalance).times(curveAvgBuyPrice);\n          if (curveAvgSlippage){\n            output = output.minus(output.times(curveAvgSlippage));\n          }\n          // this.customLog('amountLentCurve',curveTokenBalance.toFixed(6),curveAvgBuyPrice.toFixed(6),curveAvgSlippage.toString(),output.toFixed(6));\n        }\n      break;\n      case 'earningsPercCurve':\n        let [amountLentCurve1,redeemableBalanceCurve] = await Promise.all([\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account)\n        ]);\n\n        if (amountLentCurve1 && redeemableBalanceCurve && amountLentCurve1.gt(0) && redeemableBalanceCurve.gt(0)){\n          output = redeemableBalanceCurve.div(amountLentCurve1).minus(1).times(100);\n          // this.customLog('earningsPercCurve',redeemableBalanceCurve.toFixed(6),amountLentCurve1.toFixed(6),output.toFixed(6));\n        }\n      break;\n      case 'curveApy':\n        output = await this.getCurveAPY();\n      break;\n      case 'curveAvgSlippage':\n        output = await this.getCurveAvgSlippage();\n      break;\n      case 'redeemableBalanceCurve':\n        output = await this.getCurveRedeemableIdleTokens(account);\n        // this.customLog('earningsPercCurve',output.toFixed(6));\n      break;\n      case 'redeemableBalanceCounterCurve':\n        let [\n          curveApy,\n          amountLentCurve,\n          redeemableBalanceCurveStart\n        ] = await Promise.all([\n          this.loadAssetField('curveApy',token,tokenConfig,account),\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account),\n        ]);\n\n        let redeemableBalanceCurveEnd = null;\n\n        if (redeemableBalanceCurveStart && curveApy && amountLentCurve){\n          const earningPerYear = amountLentCurve.times(curveApy.div(100));\n          redeemableBalanceCurveEnd = redeemableBalanceCurveStart.plus(earningPerYear);\n          // this.customLog('redeemableBalanceCounterCurve',amountLentCurve.toFixed(6),redeemableBalanceCurveStart.toFixed(6),redeemableBalanceCurveEnd.toFixed(6));\n        }\n\n        output = {\n          redeemableBalanceCurveEnd,\n          redeemableBalanceCurveStart\n        };\n      break;\n      case 'earningsPerc':\n        let [amountLent1,redeemableBalance1] = await Promise.all([\n          this.loadAssetField('amountLent',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account)\n        ]);\n\n        if (amountLent1 && redeemableBalance1 && amountLent1.gt(0)){\n          output = redeemableBalance1.div(amountLent1).minus(1).times(100);\n        }\n      break;\n      case 'daysFirstDeposit':\n        const depositTimestamp = await this.loadAssetField('depositTimestamp',token,tokenConfig,account);\n        if (depositTimestamp){\n          const currTimestamp = parseInt(new Date().getTime()/1000);\n          output = (currTimestamp-depositTimestamp)/86400;\n        }\n      break;\n      case 'pool':\n        if (Object.keys(govTokens).includes(token)){\n          output = await this.getGovTokenPool(token, govTokenAvailableTokens);\n        } else {\n          output = await this.getTokenPool(tokenConfig,addGovTokens);\n        }\n      break;\n      case 'userDistributionSpeed':\n        switch (token){\n          case 'COMP':\n            output = await this.getCompUserDistribution(account,govTokenAvailableTokens);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getUserDistribution(account,govTokenAvailableTokens);\n          break;\n          default:\n          break;\n        }\n        if (output && !this.BNify(output).isNaN()){\n          output = this.BNify(output).div(1e18);\n          if (output){\n            output = this.fixDistributionSpeed(output,tokenConfig.distributionFrequency);\n          }\n        }\n      break;\n      case 'idleDistribution':\n        const idleGovToken = this.getIdleGovToken();\n        const tokenName = this.getGlobalConfig(['governance','props','tokenName']);\n        const govTokenConfig = this.getGlobalConfig(['govTokens',tokenName]);\n        output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n\n        if (output){\n\n          output = this.fixTokenDecimals(output,govTokenConfig.decimals);\n\n          const blocksPerYear = this.BNify(this.getGlobalConfig(['network','blocksPerYear']));\n          switch (govTokenConfig.distributionFrequency){\n            case 'day':\n              const blocksPerDay = blocksPerYear.div(365.242199);\n              output = output.times(blocksPerDay);\n            break;\n            case 'week':\n              const blocksPerWeek = blocksPerYear.div(52.1429);\n              output = output.times(blocksPerWeek);\n            break;\n            case 'month':\n              const blocksPerMonth = blocksPerYear.div(12);\n              output = output.times(blocksPerMonth);\n            break;\n            case 'year':\n              output = output.times(blocksPerYear);\n            break;\n            default:\n            break;\n          }\n        }\n      break;\n      case 'distributionSpeed':\n        const selectedTokenConfig = govTokenAvailableTokens[this.props.selectedToken];\n        switch (token){\n          case 'COMP':\n            output = await this.getCompDistribution(selectedTokenConfig);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getSpeed(selectedTokenConfig.idle.address);\n          break;\n          default:\n          break;\n        }\n        if (output && !this.BNify(output).isNaN()){\n          output = this.BNify(output).div(1e18);\n        }\n      break;\n      case 'apr':\n        switch (token){\n          case 'COMP':\n            output = await this.getCompAvgApr(govTokenAvailableTokens);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getAvgApr(govTokenAvailableTokens);\n          break;\n          default:\n            const tokenAprs = await this.getTokenAprs(tokenConfig,false,addGovTokens);\n            if (tokenAprs && tokenAprs.avgApr !== null){\n              output = tokenAprs.avgApr;\n            }\n          break;\n        }\n      break;\n      case 'apy':\n        const tokenApys = await this.getTokenAprs(tokenConfig,false,addGovTokens);\n\n        // this.customLog('apr',token,tokenApys.avgApr ? tokenApys.avgApr.toString() : null,tokenApys.avgApy ? tokenApys.avgApy.toString() : null);\n\n        if (tokenApys && tokenApys.avgApy !== null){\n          output = tokenApys.avgApy;\n\n          if (addCurveApy){\n            const curveAPY = await this.getCurveAPY();\n            if (curveAPY){\n              output = output.plus(curveAPY);\n            }\n          }\n        }\n      break;\n      case 'avgAPY':\n        const [daysFirstDeposit,earningsPerc] = await Promise.all([\n          this.loadAssetField('daysFirstDeposit',token,tokenConfig,account),\n          this.loadAssetField('earningsPerc',token,tokenConfig,account), // Take earnings perc instead of earnings\n        ]);\n\n        if (daysFirstDeposit && earningsPerc){\n          output = earningsPerc.times(365).div(daysFirstDeposit);\n        }\n      break;\n      case 'depositTimestamp':\n        const depositTimestamps = account ? await this.getDepositTimestamp([token],account) : false;\n        if (depositTimestamps && depositTimestamps[token]){\n          output = depositTimestamps[token];\n        }\n      break;\n      case 'amountLent':\n        // output = account ? await this.getAmountDeposited(tokenConfig,account) : false;\n        const amountLents = account ? await this.getAmountLent([token],account) : false;\n        if (amountLents && amountLents[token]){\n          output = amountLents[token];\n        }\n      break;\n      case 'tokenPrice':\n        if (Object.keys(govTokens).includes(token)){\n          const govTokenConfig = govTokens[token];\n          const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n          try {\n            output = await this.getUniswapConversionRate(DAITokenConfig,govTokenConfig);\n          } catch (error) {\n\n          }\n          if (!output || this.BNify(output).isNaN()){\n            output = '-';\n          }\n        } else {\n          output = await this.genericContractCall(tokenConfig.idle.token, 'tokenPrice');\n        }\n      break;\n      case 'fee':\n        output = await this.getUserTokenFees(tokenConfig,account);\n      break;\n      case 'tokenBalance':\n        if (Object.keys(govTokens).includes(token)){\n          output = await this.getTokenBalance(token,account);\n          if (!output || output.isNaN()){\n            output = '-';\n          }\n        } else {\n          let tokenBalance = account ? await this.getTokenBalance(tokenConfig.token,account) : false;\n          if (!tokenBalance || tokenBalance.isNaN()){\n            tokenBalance = '-';\n          }\n          output = tokenBalance;\n        }\n      break;\n      case 'idleTokenBalance':\n        const idleTokenBalance = account ? await this.getTokenBalance(tokenConfig.idle.token,account) : false;\n        if (idleTokenBalance){\n          output = idleTokenBalance;\n        }\n      break;\n      case 'redeemableBalanceCounter':\n        let [tokenAPY1,amountLent2,redeemableBalanceStart] = await Promise.all([\n          this.loadAssetField('apy',token,tokenConfig,account),\n          this.loadAssetField('amountLent',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account),\n        ]);\n\n        let redeemableBalanceEnd = null;\n\n        if (redeemableBalanceStart && tokenAPY1 && amountLent2){\n          const earningPerYear = amountLent2.times(tokenAPY1.div(100));\n          redeemableBalanceEnd = redeemableBalanceStart.plus(earningPerYear);\n        }\n\n        // this.customLog('redeemableBalanceCounter',token,parseFloat(redeemableBalanceStart),parseFloat(redeemableBalanceEnd));\n\n        output = {\n          redeemableBalanceEnd,\n          redeemableBalanceStart\n        };\n      break;\n      case 'redeemableBalance':\n        if (Object.keys(govTokens).includes(token)){\n          const govTokenConfig = govTokens[token];\n          output = await this.getGovTokenUserBalance(govTokenConfig,account,govTokenAvailableTokens);\n        } else {\n          let [idleTokenPrice1,idleTokenBalance2,govTokensBalance] = await Promise.all([\n            this.getIdleTokenPrice(tokenConfig),\n            this.loadAssetField('idleTokenBalance',token,tokenConfig,account),\n            this.getGovTokensUserTotalBalance(account,govTokenAvailableTokens,token),\n          ]);\n\n          if (idleTokenBalance2 && idleTokenPrice1){\n            const tokenBalance = idleTokenBalance2.times(idleTokenPrice1);\n\n            let redeemableBalance = tokenBalance;\n\n            if (govTokensBalance && !this.BNify(govTokensBalance).isNaN()){\n              redeemableBalance = redeemableBalance.plus(this.BNify(govTokensBalance));\n            }\n\n            output = redeemableBalance;\n\n            // this.customLog('redeemableBalance',token,idleTokenBalance2.toFixed(4),idleTokenPrice1.toFixed(4),tokenBalance.toFixed(4),govTokensBalance.toFixed(4),output.toFixed(4));\n          }\n        }\n      break;\n      case 'earningsCurve':\n        let [amountLentCurve2,redeemableBalanceCurve1] = await Promise.all([\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account)\n        ]);\n\n        if (!amountLentCurve2){\n          amountLentCurve2 = this.BNify(0);\n        }\n\n        if (!redeemableBalanceCurve1){\n          redeemableBalanceCurve1 = this.BNify(0);\n        }\n\n        output = redeemableBalanceCurve1.minus(amountLentCurve2);\n      break;\n      case 'earnings':\n        let [amountLent,redeemableBalance2] = await Promise.all([\n          this.loadAssetField('amountLent',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account)\n        ]);\n\n        if (!amountLent){\n          amountLent = this.BNify(0);\n        }\n        if (!redeemableBalance2){\n          redeemableBalance2 = this.BNify(0);\n        }\n\n        output = redeemableBalance2.minus(amountLent);\n\n        if (output.lt(this.BNify(0))){\n          output = this.BNify(0);\n        }\n      break;\n      default:\n      break;\n    }\n\n    return output;\n  }\n  getIdleTokenPrice = async (tokenConfig,blockNumber='latest',timestamp=false) => {\n\n    const cachedDataKey = `idleTokenPrice_${tokenConfig.idle.token}_${blockNumber}`;\n    // if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()){\n        return this.BNify(cachedData);\n      }\n    // }\n\n    let decimals = tokenConfig.decimals;\n\n    let tokenPrice = await this.genericContractCall(tokenConfig.idle.token,'tokenPrice',[],{},blockNumber);\n\n    // If price is NaN try to take it from APIs\n    if (!tokenPrice && timestamp){\n      const isRisk = this.props.selectedStrategy === 'risk';\n      const startTimestamp = parseInt(timestamp)-(60*60);\n      const endTimestamp = parseInt(timestamp)+(60*60);\n      const tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,startTimestamp,endTimestamp,true);\n\n      let beforePrice = {\n        data:null,\n        timeDiff:null\n      };\n\n      let afterPrice = {\n        data:null,\n        timeDiff:null\n      };\n\n      tokenData.forEach( d => {\n        const timeDiff = Math.abs(parseInt(d.timestamp)-parseInt(timestamp));\n        if (parseInt(d.timestamp)<parseInt(timestamp) && (!beforePrice.timeDiff || timeDiff<beforePrice.timeDiff)){\n          beforePrice.timeDiff = timeDiff;\n          beforePrice.data = d;\n        }\n\n        if (parseInt(d.timestamp)>parseInt(timestamp) && !afterPrice.timeDiff){\n          afterPrice.timeDiff = timeDiff;\n          afterPrice.data = d;\n        }\n      });\n\n      // Take before and after and calculate correct tokenPrice based from price acceleration\n      if (beforePrice.data && afterPrice.data){\n        const tokenPriceBefore = this.BNify(beforePrice.data.idlePrice);\n        const tokenPriceAfter = this.BNify(afterPrice.data.idlePrice);\n        const timeBefore = this.BNify(beforePrice.data.timestamp);\n        const timeAfter = this.BNify(afterPrice.data.timestamp);\n        const timeDiff = timeAfter.minus(timeBefore);\n        const priceDiff = tokenPriceAfter.minus(tokenPriceBefore);\n        const priceAcceleration = priceDiff.div(timeDiff);\n        const timeDiffFromBeforePrice = this.BNify(timestamp).minus(timeBefore);\n        tokenPrice = tokenPriceBefore.plus(priceAcceleration.times(timeDiffFromBeforePrice));\n      }\n    }\n\n    // Fix token price decimals\n    if (tokenPrice && !this.BNify(tokenPrice).isNaN()){\n      tokenPrice = this.fixTokenDecimals(tokenPrice,decimals);\n    }\n\n    // If price is NaN then return 1\n    if (!tokenPrice || this.BNify(tokenPrice).isNaN() || this.BNify(tokenPrice).lt(1)){\n      tokenPrice = this.BNify(1);\n    }\n\n    // if (blockNumber !== 'latest'){\n      this.setCachedDataWithLocalStorage(cachedDataKey,tokenPrice);\n    // }\n\n    // this.customLog('getIdleTokenPrice',tokenPrice.toString());\n\n    return tokenPrice;\n  }\n  clearCachedData = () => {\n    if (this.props.clearCachedData && typeof this.props.clearCachedData === 'function'){\n      // this.customLog('clearCachedData',this.props.clearCachedData,typeof this.props.clearCachedData === 'function');\n      this.props.clearCachedData();\n    } else {\n      // this.customLog('clearCachedData - Function not found!');\n    }\n    return false;\n  }\n  /*\n  Cache data locally for 5 minutes\n  */\n  setCachedData = (key,data,TTL=180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function'){\n      // this.customLog('setCachedData',key);\n      this.props.setCachedData(key,data,TTL);\n    }\n    return data;\n  }\n  setCachedDataWithLocalStorage = (key,data,TTL=180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function'){\n      this.props.setCachedData(key,data,TTL,true);\n    }\n    return data;\n  }\n  getCachedDataWithLocalStorage = (key,defaultValue=null) => {\n    return this.getCachedData(key,defaultValue,true);\n  }\n  getCachedData = (key,defaultValue=null,useLocalStorage=false) => {\n    let cachedData = null;\n    // Get cache from current session\n    if (this.props.cachedData && this.props.cachedData[key.toLowerCase()]){\n      cachedData = this.props.cachedData[key.toLowerCase()];\n    // Get cache from local storage\n    } else if (useLocalStorage) {\n      cachedData = this.getStoredItem('cachedData');\n      if (cachedData && cachedData[key.toLowerCase()]){\n        cachedData = cachedData[key.toLowerCase()];\n      } else {\n        cachedData = null;\n      }\n    }\n\n    if (cachedData && cachedData.data && (!cachedData.expirationDate || cachedData.expirationDate>=parseInt(new Date().getTime()/1000))){\n      return cachedData.data;\n    }\n    return defaultValue;\n  }\n  getUserPoolShare = async (walletAddr,tokenConfig) => {\n    const [\n      idleTokensBalance,\n      idleTokensTotalSupply\n    ] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token,walletAddr,false),\n      this.genericContractCall(tokenConfig.idle.token,'totalSupply')\n    ]);\n\n    let userShare = this.BNify(0);\n    if (idleTokensBalance && idleTokensTotalSupply){\n      userShare = this.BNify(idleTokensBalance).div(this.BNify(idleTokensTotalSupply));\n    }\n\n    return userShare;\n  }\n  getTokenBalance = async (contractName,walletAddr,fixDecimals=true) => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenBalance_${contractName}_${walletAddr}_${fixDecimals}`;\n    /*\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n    */\n\n    let [\n      tokenDecimals,\n      tokenBalance\n    ] = await Promise.all([\n      this.getTokenDecimals(contractName),\n      this.getContractBalance(contractName,walletAddr)\n    ]);\n\n    if (tokenBalance){\n      if (fixDecimals){\n        tokenBalance = this.fixTokenDecimals(tokenBalance,tokenDecimals);\n      }\n\n      // Set cached data\n      if (!this.BNify(tokenBalance).isNaN()){\n        return this.setCachedDataWithLocalStorage(cachedDataKey,tokenBalance);\n      }\n    } else {\n      this.customLogError('Error on getting balance for ',contractName);\n    }\n    return null;\n  }\n  copyToClipboard = (copyText) => {\n    if (typeof copyText.select === 'function'){\n      copyText.select();\n      copyText.setSelectionRange(0, 99999); // Select\n      const res = document.execCommand(\"copy\");\n      copyText.setSelectionRange(0, 0); // Deselect\n      return res;\n    }\n    return false;\n  }\n  loadScript = (url,props,callback) => {\n    const script = document.createElement(\"script\");\n    script.src = url;\n\n    // Append props\n    if (props){\n      Object.keys(props).forEach((attr,i) => {\n        script[attr] = props[attr];\n      });\n    }\n\n    if (typeof callback === 'function'){\n      if (script.readyState) {  // only required for IE <9\n        script.onreadystatechange = function() {\n          if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n            script.onreadystatechange = null;\n            callback();\n          }\n        };\n      } else {  //Others\n        script.onload = callback;\n      }\n    }\n\n    if (!script.id || !document.getElementById(script.id)){\n      document.body.appendChild(script);\n    }\n  }\n  isValidJSON = str => {\n    try {\n      JSON.parse(str);\n    } catch (e) {\n      return false;\n    }\n    return true;\n  }\n  checkAddress = (address) => {\n    return address !== null ? address.match(/^0x[a-fA-F0-9]{40}$/) !== null : false;\n  }\n  getContractBalance = async (contractName,address) => {\n    return await this.getProtocolBalance(contractName,address);\n  }\n  getProtocolBalance = async (contractName,address) => {\n    address = address ? address : this.props.tokenConfig.idle.address;\n    return await this.genericContractCall(contractName, 'balanceOf', [address]);\n  }\n  getAprs = async (contractName) => {\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    return await this.genericContractCall(contractName, 'getAPRs');\n  }\n  genericIdleCall = async (methodName, params = [], callParams = {}) => {\n    return await this.genericContractCall(this.props.tokenConfig.idle.token, methodName, params, callParams).catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n  }\n  estimateGas = async (contractName, methodName, params = [], callParams = {}) => {\n    let contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.methods[methodName](...params).estimateGas(callParams);\n  }\n  getTxDecodedLogs = async (tx,logAddr,decodeLogs,storedTx) => {\n\n    let txReceipt = storedTx && storedTx.txReceipt ? storedTx.txReceipt : null;\n\n    if (!txReceipt){\n      txReceipt = await (new Promise( async (resolve, reject) => {\n        this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n          if (err){\n            reject(err);\n          }\n          resolve(tx);\n        });\n      }));\n\n    }\n\n    if (!txReceipt){\n      return null;\n    }\n\n    const internalTransfers = txReceipt.logs.filter((tx) => { return tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${logAddr}`; });\n\n    if (!internalTransfers.length){\n      return null;\n    }\n\n    try {\n      return [\n        txReceipt,\n        this.props.web3.eth.abi.decodeLog(decodeLogs,internalTransfers[0].data,internalTransfers[0].topics)\n      ];\n    } catch (error) {\n      return null;\n    }\n  }\n  getBlockNumber = async () => {\n    return await this.props.web3.eth.getBlockNumber();\n  }\n  getContractPastEvents = async (contractName,methodName,params = {}) => {\n    if (!contractName){\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.getPastEvents(methodName, params);\n  }\n  genericContractCall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest') => {\n\n    if (!contractName){\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLog('Wrong contract name', contractName);\n      return null;\n    }\n\n    if (!contract.methods[methodName]) {\n      this.customLog('Wrong method name', methodName);\n      return null;\n    }\n\n    blockNumber = blockNumber !== 'latest' && blockNumber && !isNaN(blockNumber) ? parseInt(blockNumber) : blockNumber;\n\n    try{\n      this.customLog(`genericContractCall - ${contractName} - ${methodName}`);\n      const value = await contract.methods[methodName](...params).call(callParams,blockNumber).catch(error => {\n        this.customLog(`${contractName} contract method ${methodName} error: `, error);\n      });\n      this.customLog(`genericContractCall - ${contractName} - ${methodName} : ${value}`);\n      return value;\n    } catch (error) {\n      this.customLog(\"genericContractCall error\", error);\n    }\n  }\n  asyncForEach = async (array, callback, async=true) => {\n    if (async){\n      await Promise.all(array.map( (c,index) => {\n        return callback(c, index, array);\n      }));\n    } else {\n      for (let index = 0; index < array.length; index++) {\n        await callback(array[index], index, array);\n      }\n    }\n  }\n  apr2apy = (apr) => {\n    return (this.BNify(1).plus(this.BNify(apr).div(12))).pow(12).minus(1);\n  }\n  getUnlentBalance = async (tokenConfig) => {\n    let unlentBalance = await this.getProtocolBalance(tokenConfig.token,tokenConfig.idle.address);\n    if (unlentBalance){\n      unlentBalance = this.fixTokenDecimals(unlentBalance,tokenConfig.decimals);\n    }\n    return unlentBalance;\n  }\n  getTokenPool = async (tokenConfig,addGovTokens=true) => {\n    // Check for cached data\n    const cachedDataKey = `tokenPool_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN() ) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,addGovTokens);\n    if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent){\n      const tokenPool = tokenAllocation.totalAllocationWithUnlent;\n      if (!this.BNify(tokenPool).isNaN()){\n        return this.setCachedDataWithLocalStorage(cachedDataKey,tokenPool);\n      }\n    }\n\n    return null;\n  }\n  /*\n  Get idleToken allocation between protocols\n  */\n  getTokenAllocation = async (tokenConfig,protocolsAprs=false,addGovTokens=true) => {\n\n    if (!tokenConfig.idle){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAllocation_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    let totalAllocation = this.BNify(0);\n\n    const tokenAllocation = {\n      avgApr: null,\n      unlentBalance:null,\n      totalAllocation:null,\n      protocolsBalances:{},\n      protocolsAllocations:null,\n      protocolsAllocationsPerc:null,\n      totalAllocationConverted:null,\n      totalAllocationWithUnlent:null,\n      totalAllocationWithUnlentConverted:null,\n    };\n\n    const exchangeRates = {};\n    const protocolsBalances = {};\n    const protocolsAllocations = {};\n    const protocolsAllocationsPerc = {};\n\n    await this.asyncForEach(tokenConfig.protocols,async (protocolInfo,i) => {\n      const contractName = protocolInfo.token;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n\n      let [\n        tokenDecimals,\n        protocolBalance,\n        exchangeRate\n      ] = await Promise.all([\n        this.getTokenDecimals(contractName),\n        this.getProtocolBalance(contractName,tokenConfig.idle.address),\n        ( protocolInfo.functions.exchangeRate ? this.genericContractCall(contractName,protocolInfo.functions.exchangeRate.name,protocolInfo.functions.exchangeRate.params) : null )\n      ]);\n\n      if (!protocolBalance){\n        return;\n      }\n\n      if (exchangeRate && protocolInfo.decimals){\n        exchangeRates[protocolAddr] = exchangeRate;\n        exchangeRate = this.fixTokenDecimals(exchangeRate,protocolInfo.decimals);\n      }\n\n      let protocolAllocation = this.fixTokenDecimals(protocolBalance,tokenDecimals,exchangeRate);\n\n      if (protocolAllocation.lt(this.BNify(0.00000001))){\n        protocolBalance = this.BNify(0);\n        protocolAllocation = this.BNify(0);\n      }\n\n      protocolsBalances[protocolAddr] = protocolBalance;\n      protocolsAllocations[protocolAddr] = protocolAllocation;\n      totalAllocation = totalAllocation.plus(protocolAllocation);\n\n      // console.log('getTokenAllocation',contractName,protocolAddr,protocolAllocation.toFixed(5),exchangeRate ? exchangeRate.toFixed(5) : null,totalAllocation.toFixed(5));\n    });\n\n    tokenAllocation.unlentBalance = this.BNify(0);\n    tokenAllocation.totalAllocationWithUnlent = this.BNify(totalAllocation);\n\n    // Add unlent balance to the pool\n    let unlentBalance = await this.getUnlentBalance(tokenConfig);\n    if (unlentBalance){\n      tokenAllocation.unlentBalance = unlentBalance;\n      tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(unlentBalance);\n    }\n\n    // console.log('totalAllocationWithUnlent 1',addGovTokens,tokenAllocation.totalAllocationWithUnlent.toFixed(5));\n\n    Object.keys(protocolsAllocations).forEach((protocolAddr,i) => {\n      const protocolAllocation = protocolsAllocations[protocolAddr];\n      const protocolAllocationPerc = protocolAllocation.div(totalAllocation);\n      protocolsAllocationsPerc[protocolAddr] = protocolAllocationPerc;\n    });\n\n    tokenAllocation.totalAllocation = totalAllocation;\n    tokenAllocation.protocolsAllocations = protocolsAllocations;\n    tokenAllocation.protocolsAllocationsPerc = protocolsAllocationsPerc;\n\n    if (addGovTokens){\n      const govTokensBalances = await this.getGovTokensBalances(tokenConfig.idle.address);\n\n      // Sum gov tokens balances\n      if (govTokensBalances.total){\n        const tokenUsdConversionRate = await this.getTokenConversionRate(tokenConfig,false);\n        if (tokenUsdConversionRate){\n          govTokensBalances.total = govTokensBalances.total.div(tokenUsdConversionRate);\n        }\n\n        tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(govTokensBalances.total);\n\n        // console.log('totalAllocationWithUnlent 2',govTokensBalances.total.toFixed(5),tokenAllocation.totalAllocationWithUnlent.toFixed(5));\n      }\n    }\n\n    tokenAllocation.totalAllocationConverted = await this.convertTokenBalance(tokenAllocation.totalAllocation,tokenConfig.token,tokenConfig);\n    tokenAllocation.totalAllocationWithUnlentConverted = await this.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,tokenConfig.token,tokenConfig);\n\n    if (protocolsAprs){\n      tokenAllocation.avgApr = this.getAvgApr(protocolsAprs,protocolsAllocations,totalAllocation);\n    }\n\n    return this.setCachedData(cachedDataKey,tokenAllocation);\n  }\n  getUniswapConversionRate_path = async (path) => {\n    const one = this.normalizeTokenDecimals(18);\n    const unires = await this.genericContractCall('UniswapRouter','getAmountsIn',[one.toFixed(),path]);\n    return unires;\n  }\n  getUniswapConversionRate = async (tokenConfigFrom,tokenConfigDest) => {\n\n    // Check for cached data\n    const cachedDataKey = `uniswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2';\n      const one = this.normalizeTokenDecimals(18);\n      const unires = await this.genericContractCall('UniswapRouter','getAmountsIn',[one.toFixed(),[tokenConfigFrom.address, WETHAddr, tokenConfigDest.address]]);\n      if (unires){\n        const price = this.BNify(unires[0]).div(one);\n        return this.setCachedDataWithLocalStorage(cachedDataKey,price);\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  /*\n  getUniswapConversionRate_old = async (tokenConfigFrom,tokenConfigDest) => {\n    const cachedDataKey = `compUniswapConverstionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    const tokenFrom = new Token(ChainId.MAINNET, tokenConfigFrom.address, tokenConfigFrom.decimals);\n    const tokenTo = new Token(ChainId.MAINNET, tokenConfigDest.address, tokenConfigDest.decimals);\n\n    const pair = await Fetcher.fetchPairData(tokenFrom, tokenTo);\n    const route = new Route([pair], tokenTo);\n\n    let output = null;\n    if (route && route.midPrice){\n      output = this.BNify(route.midPrice.toSignificant(tokenConfigDest.decimals));\n      this.setCachedData(cachedDataKey,output);\n    }\n    return output;\n  }\n  */\n  getCurveDepositedTokens = async (account,enabledTokens=[]) => {\n    account = account ? account : this.props.account;\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    if (!account || !enabledTokens || !enabledTokens.length){\n      return [];\n    }\n\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    const idleTokensBalances = {};\n    let remainingCurveTokens = this.BNify(0);\n\n    // this.customLog('getCurveDepositedTokens',curveTxs);\n\n    curveTxs.forEach( tx => {\n\n      const idleToken = tx.idleToken;\n      const idleTokens = this.BNify(tx.idleTokens);\n\n      if (!idleTokensBalances[idleToken]){\n        idleTokensBalances[idleToken] = this.BNify(0);\n      }\n\n      switch (tx.action){\n        case 'CurveIn':\n        case 'CurveZapIn':\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].plus(idleTokens);\n        break;\n        case 'CurveOut':\n        case 'CurveZapOut':\n          if (idleTokens.gt(idleTokensBalances[idleToken])){\n            remainingCurveTokens = remainingCurveTokens.plus(idleTokens.minus(idleTokensBalances[idleToken]));\n          }\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].minus(idleTokens);\n          if (idleTokensBalances[idleToken].lt(0)){\n            idleTokensBalances[idleToken] = this.BNify(0);\n          }\n        break;\n        default:\n        break;\n      }\n\n      // this.customLog(this.strToMoment(tx.timeStamp*1000).format('DD-MM-YYYY HH:mm:ss'),tx.blockNumber,idleToken,tx.action,idleTokens.toFixed(6),idleTokensBalances[idleToken].toFixed(6),remainingCurveTokens.toFixed(6));\n\n      // Scalo il remaining tokens\n      if (remainingCurveTokens.gt(0)){\n        Object.keys(idleTokensBalances).forEach( token => {\n          const tokenBalance = idleTokensBalances[token];\n          if (tokenBalance && tokenBalance.gt(0)){\n            if (tokenBalance.gt(remainingCurveTokens)){\n              idleTokensBalances[token] = idleTokensBalances[token].minus(remainingCurveTokens);\n            } else {\n              remainingCurveTokens = remainingCurveTokens.minus(idleTokensBalances[token]);\n              idleTokensBalances[token] = 0;\n            }\n          }\n        });\n      }\n    });\n\n    // this.customLog('idleTokensBalances',idleTokensBalances);\n  }\n  getCurveUnevenTokenAmounts = async (amounts,max_burn_amount) => {\n    const curveSwapContract = await this.getCurveSwapContract();\n    if (curveSwapContract){\n      const unevenAmounts = await this.genericContractCall(curveSwapContract.name, 'remove_liquidity_imbalance', [amounts, max_burn_amount]);\n      // this.customLog('getCurveUnevenTokenAmounts',amounts,max_burn_amount,unevenAmounts);\n      return unevenAmounts;\n    }\n    return null;\n  }\n  getCurveAPY = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getCurveAPY`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const curveRatesInfo = this.getGlobalConfig(['curve','rates']);\n    if (curveRatesInfo){\n      const results = await this.makeRequest(curveRatesInfo.endpoint);\n      if (results && results.data){\n        const path = Object.values(curveRatesInfo.path);\n        let curveApy = this.getArrayPath(path,results.data);\n        if (curveApy){\n          curveApy = this.BNify(curveApy).times(100);\n          if (!this.BNify(curveApy).isNaN()){\n            return this.setCachedDataWithLocalStorage(cachedDataKey,curveApy);\n          }\n        }\n      }\n    }\n    return null;\n  }\n  getCurveAvailableTokens = () => {\n    if (!this.props.availableStrategies){\n      return false;\n    }\n    const curveTokens = this.getGlobalConfig(['curve','availableTokens']);\n    const strategyTokens = this.props.availableStrategies['best'];\n    const availableTokens = Object.keys(strategyTokens).reduce( (availableTokens,token) => {\n      const tokenConfig = strategyTokens[token];\n      if (Object.keys(curveTokens).includes(tokenConfig.idle.token) && curveTokens[tokenConfig.idle.token].enabled){\n        availableTokens[token] = tokenConfig;\n      }\n      return availableTokens;\n    },{});\n\n    return availableTokens;\n  }\n  getCurveAPYContract = async () => {\n    const curveSwapContract = await this.getCurveSwapContract();\n    if (curveSwapContract){\n      const blockNumber = await this.getBlockNumber();\n      if (blockNumber){\n        const blocksForPrevTokenPrice = 10;\n        let [tokenPrice,prevTokenPrice] = await Promise.all([\n          this.genericContractCall(curveSwapContract.name,'get_virtual_price'),\n          this.genericContractCall(curveSwapContract.name,'get_virtual_price',[],{},blockNumber-blocksForPrevTokenPrice)\n        ]);\n\n        if (tokenPrice && prevTokenPrice){\n\n          const blocksMultiplier = this.BNify(this.getGlobalConfig(['network','blocksPerYear'])).div(blocksForPrevTokenPrice);\n          const curveAPR = this.BNify(tokenPrice).div(prevTokenPrice).minus(1).times(blocksMultiplier);\n          return this.apr2apy(curveAPR).times(100);\n        }\n      }\n    }\n    return null;\n  }\n  getCurveTokenSupply = async () => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract){\n      return await this.genericContractCall(curvePoolContract.name,'totalSupply');\n    }\n    return null;\n  }\n  getCurveTokenBalance = async (account=null,fixDecimals=true) => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract){\n      account = account ? account : this.props.account;\n      return await this.getTokenBalance(curvePoolContract.name,account,fixDecimals);\n    }\n    return null;\n  }\n  getCurveTokenPrice = async (blockNumber='latest',fixDecimals=true) => {\n    const migrationContract = await this.getCurveSwapContract();\n    let curveTokenPrice = await this.genericContractCall(migrationContract.name,'get_virtual_price',[],{},blockNumber);\n    if (curveTokenPrice){\n      curveTokenPrice = this.BNify(curveTokenPrice);\n      if (fixDecimals){\n        const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n        curveTokenPrice = this.fixTokenDecimals(curveTokenPrice,curvePoolContract.decimals);\n      }\n      return curveTokenPrice;\n    }\n    return null;\n  }\n  getCurveRedeemableIdleTokens = async (account) => {\n    let [curveTokenPrice,curveTokenBalance] = await Promise.all([\n      this.getCurveTokenPrice('latest'),\n      this.getCurveTokenBalance(account),\n    ]);\n    if (curveTokenBalance && curveTokenPrice){\n      return this.BNify(curveTokenBalance).times(curveTokenPrice);\n    }\n    return null;\n  }\n  getCurveDepositContract = async () => {\n    const depositContractInfo = this.getGlobalConfig(['curve','depositContract']);\n    if (depositContractInfo){\n      let curveDepositContract = this.getContractByName(depositContractInfo.name);\n      if (!curveDepositContract && depositContractInfo.abi){\n        curveDepositContract = await this.props.initContract(depositContractInfo.name,depositContractInfo.address,depositContractInfo.abi);\n      }\n    }\n    return depositContractInfo;\n  }\n  getCurveZapContract = async () => {\n    const zapContractInfo = this.getGlobalConfig(['curve','zapContract']);\n    if (zapContractInfo){\n      let curveZapContract = this.getContractByName(zapContractInfo.name);\n      if (!curveZapContract && zapContractInfo.abi){\n        curveZapContract = await this.props.initContract(zapContractInfo.name,zapContractInfo.address,zapContractInfo.abi);\n      }\n    }\n    return zapContractInfo;\n  }\n  getCurvePoolContract = async () => {\n    const poolContractInfo = this.getGlobalConfig(['curve','poolContract']);\n    if (poolContractInfo){\n      let curvePoolContract = this.getContractByName(poolContractInfo.name);\n      if (!curvePoolContract && poolContractInfo.abi){\n        curvePoolContract = await this.props.initContract(poolContractInfo.name,poolContractInfo.address,poolContractInfo.abi);\n      }\n    }\n    return poolContractInfo;\n  }\n  getCurveSwapContract = async () => {\n    const migrationContractInfo = this.getGlobalConfig(['curve','migrationContract']);\n    if (migrationContractInfo){\n      let migrationContract = this.getContractByName(migrationContractInfo.name);\n      if (!migrationContract && migrationContractInfo.abi){\n        migrationContract = await this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi);\n      }\n    }\n    return migrationContractInfo;\n  }\n\n  getCurveIdleTokensAmounts = async (account=null,curveTokenBalance=null,max_slippage=null) => {\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account){\n      return null;\n    }\n\n    const tokensBalances = {};\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance){\n      curveTokenBalance = await this.getCurveTokenBalance(account,false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply){\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n      const n_coins = Object.keys(curveAvailableTokens).length;\n\n      if (max_slippage){\n        max_slippage = this.BNify(max_slippage).div(n_coins);\n      }\n\n      // this.customLog('curveTokenShare',this.BNify(curveTokenBalance).toString(),this.BNify(curveTokenSupply).toString(),curveTokenShare.toString());\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const curveIdleTokens = await this.genericContractCall(curveSwapContract.name,'balances',[coinIndex]);\n        if (curveIdleTokens){\n          let idleTokenBalance = this.BNify(curveIdleTokens).times(curveTokenShare);\n          if (max_slippage){\n            // this.customLog('getCurveIdleTokensAmounts',idleTokenBalance.toFixed());\n            idleTokenBalance = idleTokenBalance.minus(idleTokenBalance.times(max_slippage));\n          }\n          tokensBalances[coinIndex] = this.integerValue(idleTokenBalance);\n        }\n      });\n    }\n\n    return Object.values(tokensBalances);\n  }\n\n  // Get amounts of underlying tokens in the curve pool\n  getCurveTokensAmounts = async (account=null,curveTokenBalance=null,fixDecimals=false) => {\n\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account){\n      return null;\n    }\n\n    const tokensBalances = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance){\n      curveTokenBalance = await this.getCurveTokenBalance(account,false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply){\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        const [\n          idleTokenPrice,\n          idleTokenBalance\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.genericContractCall(curveSwapContract.name,'balances',[coinIndex]),\n        ]);\n\n        const totalTokenSupply = this.BNify(idleTokenBalance).times(this.BNify(idleTokenPrice));\n        let tokenBalance = totalTokenSupply.times(curveTokenShare);\n        if (fixDecimals){\n          tokenBalance = this.fixTokenDecimals(tokenBalance,tokenConfig.decimals);\n        }\n\n        tokensBalances[curveTokenConfig.baseToken] = tokenBalance;\n      });\n    }\n\n    return tokensBalances;\n  }\n\n  // Compile amounts array for Curve\n  getCurveAmounts = async (token,amount,deposit=false) => {\n    const amounts = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    await this.asyncForEach(Object.keys(curveAvailableTokens), async (idleToken) => {\n      const curveTokenConfig = curveAvailableTokens[idleToken];\n      const migrationParams = curveTokenConfig.migrationParams;\n      const coinIndex = migrationParams.coinIndex;\n      if (idleToken === token && parseFloat(amount)>0){\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        amount = this.fixTokenDecimals(amount,18)\n        if (!deposit){\n          const idleTokenPrice = await this.getIdleTokenPrice(tokenConfig);\n          amount = amount.div(idleTokenPrice);\n        }\n        amount = this.normalizeTokenAmount(amount,curveTokenConfig.decimals);\n        amounts[coinIndex] = amount;\n      } else {\n        amounts[coinIndex] = 0;\n      }\n    });\n\n    return Object.values(amounts);\n  }\n  getCurveTokenAmount = async (amounts,deposit=true) => {\n    const migrationContract = await this.getCurveSwapContract();\n    if (migrationContract){\n      return await this.genericContractCall(migrationContract.name,'calc_token_amount',[amounts,deposit]);\n    }\n    return null;\n  }\n  getCurveSlippage = async (token,amount,deposit=true,uneven_amounts=null) => {\n    let slippage = null;\n    const migrationContract = await this.getCurveSwapContract();\n    if (migrationContract){\n\n      const n_coins = this.getGlobalConfig(['curve','params','n_coins']);\n\n      amount = this.BNify(amount)\n      if (!amount || amount.isNaN() || amount.lte(0)){\n        return null;\n      }\n\n      let amounts = uneven_amounts;\n      if (!amounts || amounts.length !== n_coins){\n        amounts = await this.getCurveAmounts(token,amount);\n      }\n\n      let [virtualPrice,tokenAmount] = await Promise.all([\n        this.genericContractCall(migrationContract.name,'get_virtual_price'),\n        this.genericContractCall(migrationContract.name,'calc_token_amount',[amounts,deposit]),\n      ]);\n\n      if (virtualPrice && tokenAmount){\n        amount = this.fixTokenDecimals(amount,18);\n        virtualPrice = this.fixTokenDecimals(virtualPrice,18);\n        tokenAmount = this.fixTokenDecimals(tokenAmount,18);\n        const Sv = tokenAmount.times(virtualPrice);\n\n        // Handle redeem in uneven amounts (Slippage 0%)\n        if (uneven_amounts && !deposit){\n          amount = amount.times(virtualPrice);\n        }\n\n        if (deposit){\n          slippage = Sv.div(amount).minus(1).times(-1);\n        } else {\n          slippage = amount.div(Sv).minus(1).times(-1);\n        }\n\n        // this.customLog('getCurveSlippage',token,deposit,amounts,tokenAmount.toFixed(6),virtualPrice.toFixed(6),Sv.toFixed(6),amount.toFixed(6),slippage.toFixed(6));\n\n        return slippage;\n      }\n    }\n    return null;\n  }\n  getCompAPR = async (token,tokenConfig,cTokenIdleSupply=null,compConversionRate=null) => {\n    const COMPTokenConfig = this.getGlobalConfig(['govTokens','COMP']);\n    if (!COMPTokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getCompAPR_${tokenConfig.idle.token}_${cTokenIdleSupply}_${compConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let compAPR = this.BNify(0);\n    const compDistribution = await this.getCompDistribution(tokenConfig,cTokenIdleSupply);\n\n    if (compDistribution){\n\n      const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get COMP conversion rate\n      if (!compConversionRate){\n        try {\n          compConversionRate = await this.getUniswapConversionRate(DAITokenConfig,COMPTokenConfig);\n        } catch (error) {\n\n        }\n        if (!compConversionRate || compConversionRate.isNaN()){\n          compConversionRate = this.BNify(1);\n        }\n      }\n\n      const compValue = this.BNify(compConversionRate).times(compDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n\n      if (tokenAllocation){\n        compAPR = compValue.div(tokenAllocation.totalAllocationConverted).times(100);\n        if (!this.BNify(compAPR).isNaN()){\n          this.setCachedDataWithLocalStorage(cachedDataKey,compAPR);\n        }\n      }\n    }\n\n    return compAPR;\n  }\n  getCompSpeed = async (cTokenAddress) => {\n    let compSpeed = await this.genericContractCall('Comptroller','compSpeeds',[cTokenAddress]);\n    if (compSpeed){\n      return this.BNify(compSpeed);\n    }\n    return null;\n  }\n  getCompDistribution = async (tokenConfig,cTokenIdleSupply=null,annualize=true) => {\n\n    const cachedDataKey = `getCompDistribution_${tokenConfig.idle.token}_${cTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n    if (cTokenInfo){\n\n      // Get IdleToken allocation in compound\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n      const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenInfo.address.toLowerCase()];\n\n      // Calculate distribution if compound allocation >= 0.1%\n      if (compoundAllocationPerc && compoundAllocationPerc.gte(0.001)){\n\n        // Get COMP distribution speed and Total Supply\n        const [\n          compSpeed,\n          cTokenTotalSupply\n        ] = await Promise.all([\n          this.getCompSpeed(cTokenInfo.address),\n          this.genericContractCall(cTokenInfo.token,'totalSupply'),\n        ]);\n\n        if (compSpeed && cTokenTotalSupply){\n\n          // Get Idle liquidity supply\n          if (!cTokenIdleSupply){\n            cTokenIdleSupply = await this.genericContractCall(cTokenInfo.token,'balanceOf',[tokenConfig.idle.address]);\n          }\n\n          if (cTokenIdleSupply){\n\n            // Get COMP distribution for Idle in a Year\n            const blocksPerYear = this.getGlobalConfig(['network','blocksPerYear']);\n\n            // Take 50% of distrubution for lenders side\n            const compoundPoolShare = this.BNify(cTokenIdleSupply).div(this.BNify(cTokenTotalSupply));\n            let compDistribution = this.BNify(compSpeed).times(compoundPoolShare);\n\n            if (annualize){\n              compDistribution = compDistribution.div(1e18).times(this.BNify(blocksPerYear));\n            }\n\n            if (!this.BNify(compDistribution).isNaN()){\n              return this.setCachedDataWithLocalStorage(cachedDataKey,compDistribution);\n            }\n          }\n        }\n      }\n    }\n\n    return null;\n  }\n  getCompUserDistribution = async (account=null,availableTokens=null) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n      if (cTokenInfo){\n        const [\n          userPoolShare,\n          compDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account,tokenConfig,false),\n          this.getCompDistribution(tokenConfig,null,false),\n        ]);\n\n        if (compDistribution && userPoolShare){\n          output = output.plus(compDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getCompAvgApr = async (availableTokens=null) => {\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.BNify(0);\n    let totalAllocation = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [compApr,tokenAllocation] = await Promise.all([\n        this.getCompAPR(token,tokenConfig),\n        this.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (compApr && tokenAllocation){\n        output = output.plus(compApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n        // this.customLog(token,compApr.toString(),tokenAllocation.totalAllocation.toString(),output.toString(),totalAllocation.toString());\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n  getTokensCsv = async () => {\n\n    // eslint-disable-next-line\n    Array.prototype.sum = function() {\n      return this.reduce(function(pv, cv) { return pv + cv; }, 0);\n    };\n    // eslint-disable-next-line\n    Array.prototype.max = function() {\n      return Math.max.apply(null, this);\n    };\n    // eslint-disable-next-line\n    Array.prototype.avg = function() {\n      return this.sum()/this.length;\n    };\n\n    const csv = [];\n    const availableStrategies = this.props.availableStrategies;\n    await this.asyncForEach(Object.keys(availableStrategies), async (strategy) => {\n      const availableTokens = availableStrategies[strategy];\n      const isRisk = strategy === 'risk';\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n        const tokenConfig = availableTokens[token];\n        const rates = await this.getTokenApiData(tokenConfig.address,isRisk,null,null,false,7200,'ASC');\n        const header = [];\n        let protocols = null;\n        const rows = [];\n        const aprAvg = {};\n        const scoreAvg = {};\n\n        const lastRow = rates[rates.length-1];\n\n        rates.forEach( r => {\n          if (!protocols){\n            header.push('Token');\n            header.push('Date');\n\n            // Get protocols\n            protocols = [];\n            lastRow.protocolsData.forEach( p1 => {\n              const foundProtocol = tokenConfig.protocols.find( p2 => ( p2.address.toLowerCase() === p1.protocolAddr.toLowerCase() ) );\n              if (foundProtocol){\n                protocols.push(foundProtocol);\n              }\n            });\n\n            // Add APR columns\n            header.push('APR Idle');\n            header.push('SCORE Idle');\n\n            aprAvg['idle'] = [];\n            scoreAvg['idle'] = [];\n\n            protocols.forEach( p => {\n              header.push('APR '+p.name);\n              header.push('SCORE '+p.name);\n\n              aprAvg[p.name] = [];\n              scoreAvg[p.name] = [];\n            });\n\n            rows.push(header.join(','));\n          }\n\n          const date = moment(r.timestamp*1000).format('YYYY-MM-DD');\n          const rate = this.BNify(r.idleRate).div(1e18).toFixed(5);\n          const score = parseFloat(r.idleScore);\n\n          const row = [];\n          row.push(`${token}-${strategy}`);\n          row.push(date);\n          row.push(rate);\n          row.push(score);\n\n          if (date>='2020-09-15'/* && date<='2020-11-09'*/){\n            aprAvg['idle'].push(parseFloat(rate));\n            scoreAvg['idle'].push(parseFloat(score));\n          }\n\n          protocols.forEach( pInfo => {\n            const pData = r.protocolsData.find( p => (p.protocolAddr.toLowerCase() === pInfo.address.toLowerCase()) );\n            let pRate = '';\n            let pScore = '';\n            if (pData){\n              pScore = !this.BNify(pData.defiScore).isNaN() ? parseFloat(pData.defiScore) : '0.00000';\n              pRate = !this.BNify(pData.rate).isNaN() ? this.BNify(pData.rate).div(1e18) : '0.00000';\n              if (typeof pData[`${pInfo.name}AdditionalAPR`] !== 'undefined'){\n                const additionalRate = this.BNify(pData[`${pInfo.name}AdditionalAPR`]).div(1e18);\n                if (!additionalRate.isNaN()){\n                  pRate = pRate.plus(additionalRate);\n                }\n              }\n\n              if (date>='2020-09-15'/* && date<='2020-11-09'*/){\n                if (!isNaN(parseFloat(pRate))){\n                  aprAvg[pInfo.name].push(parseFloat(pRate));\n                }\n                if (!isNaN(parseFloat(pScore))){\n                  scoreAvg[pInfo.name].push(parseFloat(pScore));\n                }\n              }\n            }\n\n            row.push(pRate);\n            row.push(pScore);\n          });\n\n          rows.push(row.join(','));\n        });\n\n        Object.keys(aprAvg).forEach( p => {\n          const avgRate = aprAvg[p].sum()/aprAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Rate: ${avgRate}`);\n        });\n\n        Object.keys(scoreAvg).forEach( p => {\n          const avgScore = scoreAvg[p].sum()/scoreAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Score: ${avgScore}`);\n        });\n\n        // if (token==='DAI' && isRisk){\n        //   debugger;\n        // }\n\n        csv.push(rows.join('\\n'));\n      });\n    });\n\n    this.customLog(csv.join('\\n'));\n  }\n  getGovTokenPool = async (govToken=null,availableTokens=null,convertToken=null) => {\n    let output = this.BNify(0);\n\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const enabledTokens = govToken ? [govToken] : null;\n      const compTokenBalance = await this.getGovTokensBalances(tokenConfig.idle.address,convertToken,enabledTokens);\n      if (compTokenBalance && compTokenBalance.total){\n        output = output.plus(compTokenBalance.total);\n      }\n    });\n    return output;\n  }\n  getIdleGovToken = () => {\n    if (!this.idleGovToken){\n      this.idleGovToken = new IdleGovToken(this.props);\n    }\n    return this.idleGovToken;\n  }\n  getTokenGovTokens = (tokenConfig) => {\n    const output = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    Object.keys(govTokens).forEach( govToken => {\n      const govTokenConfig = govTokens[govToken];\n      if (!govTokenConfig.enabled){\n        return;\n      }\n      if (govTokenConfig.protocol === 'idle'){\n        output[govToken] = govTokenConfig;\n      } else {\n        const foundProtocol = tokenConfig.protocols.find( p => (p.enabled && p.name.toLowerCase() === govTokenConfig.protocol.toLowerCase()) )\n        if (foundProtocol){\n          output[govToken] = govTokenConfig;\n        }\n      }\n    });\n    return output;\n  }\n  fixDistributionSpeed = (speed,frequency) => {\n    const blocksPerYear = this.BNify(this.getGlobalConfig(['network','blocksPerYear']));\n    speed = this.BNify(speed);\n    if (speed && !speed.isNaN()){\n      switch (frequency){\n        case 'day':\n          const blocksPerDay = blocksPerYear.div(365.242199);\n          speed = speed.times(blocksPerDay);\n        break;\n        case 'week':\n          const blocksPerWeek = blocksPerYear.div(52.1429);\n          speed = speed.times(blocksPerWeek);\n        break;\n        case 'month':\n          const blocksPerMonth = blocksPerYear.div(12);\n          speed = speed.times(blocksPerMonth);\n        break;\n        case 'year':\n          speed = speed.times(blocksPerYear);\n        break;\n        default:\n        break;\n      }\n      return speed;\n    }\n    return null;\n  }\n  getGovTokensUserDistributionSpeed = async (account,tokenConfig=null,enabledTokens=null) => {\n    const govTokensUserDistribution = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      const availableTokens = {};\n      availableTokens[tokenConfig.token] = tokenConfig;\n\n      let output = null;\n      switch (govToken){\n        case 'COMP':\n          output = await this.getCompUserDistribution(account,availableTokens);\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          output = await idleGovToken.getUserDistribution(account,availableTokens);\n        break;\n        default:\n        break;\n      }\n\n      if (output){\n        output = output.div(1e18);\n        if (govTokenConfig.distributionFrequency){\n          output = this.fixDistributionSpeed(output,govTokenConfig.distributionFrequency);\n        }\n        govTokensUserDistribution[govToken] = output;\n      }\n    });\n\n    return govTokensUserDistribution;\n  }\n  getGovTokensDistributionSpeed = async (tokenConfig,enabledTokens=null) => {\n    const govTokensDistribution = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      let govSpeed = null;\n      switch (govToken){\n        case 'COMP':\n          const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n          if (cTokenInfo){\n            govSpeed = await this.getCompDistribution(tokenConfig,null,false);\n          }\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          govSpeed = await idleGovToken.getSpeed(tokenConfig.idle.address);\n        break;\n        default:\n        break;\n      }\n\n      if (govSpeed){\n        govSpeed = govSpeed.div(1e18);\n        if (govTokenConfig.distributionFrequency){\n          govSpeed = this.fixDistributionSpeed(govSpeed,govTokenConfig.distributionFrequency);\n        }\n        govTokensDistribution[govToken] = govSpeed;\n      }\n    });\n\n    return govTokensDistribution;\n  }\n  getGovTokensAprs = async (token,tokenConfig,enabledTokens=null) => {\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensAprs = {}\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled || govTokenConfig.aprTooltipMode === false){\n        return;\n      }\n\n      let output = null;\n      let tokenAllocation = null;\n\n      switch (govToken){\n        case 'COMP':\n          switch (govTokenConfig.aprTooltipMode){\n            default:\n            case 'apr':\n              [output,tokenAllocation] = await Promise.all([\n                this.getCompAPR(token,tokenConfig),\n                this.getTokenAllocation(tokenConfig,false,false)\n              ]);\n\n              // Cut the COMP token proportionally on Idle funds allocation in compound\n              if (tokenAllocation){\n                const compoundInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n                if (compoundInfo){\n                  if (tokenAllocation.protocolsAllocationsPerc[compoundInfo.address.toLowerCase()]){\n                    const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[compoundInfo.address.toLowerCase()];\n                    output = output.times(compoundAllocationPerc);\n                  }\n                }\n              }\n            break;\n          }\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          switch (govTokenConfig.aprTooltipMode){\n            case 'apr':\n              output = await idleGovToken.getAPR(token,tokenConfig);\n            break;\n            case 'distribution':\n              output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n              if (output){\n                output = this.fixTokenDecimals(output,18);\n                output = this.fixDistributionSpeed(output,govTokenConfig.distributionFrequency);\n              }\n            break;\n            case 'userDistribution':\n              output = await idleGovToken.getUserDistribution(tokenConfig);\n            break;\n            default:\n            break;\n          }\n        break;\n        default:\n        break;\n      }\n\n      if (output !== null && this.BNify(output).gt(0)){\n        govTokensAprs[govToken] = output;\n      }\n    });\n\n    return govTokensAprs;\n  }\n  getGovTokensBalances = async (address=null,convertToken='DAI',enabledTokens=null) => {\n    if (!address){\n      address = this.props.tokenConfig.idle.address;\n    }\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensBalances = {}\n\n    await this.asyncForEach(Object.keys(govTokens),async (token) => {\n\n      if (enabledTokens && !enabledTokens.includes(token)){\n        return;\n      }\n      \n      const govTokenConfig = govTokens[token];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      // Get gov token balance\n      let govTokenBalance = await this.getProtocolBalance(token,address);\n\n      if (govTokenBalance){\n        // Get gov token conversion rate\n        let tokenConversionRate = null;\n        if (convertToken){\n          const fromTokenConfig = this.getGlobalConfig(['stats','tokens',convertToken]);\n          try {\n            tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig,govTokenConfig);\n          } catch (error) {\n            \n          }\n        }\n\n        // Fix token decimals and convert\n        govTokensBalances[token] = this.fixTokenDecimals(govTokenBalance,govTokens[token].decimals,tokenConversionRate);\n\n        // Initialize Total gov Tokens\n        if (!govTokensBalances.total){\n          govTokensBalances.total = this.BNify(0);\n        }\n\n        // Sum Total gov Tokens\n        govTokensBalances.total = govTokensBalances.total.plus(govTokensBalances[token]);\n      }\n    });\n\n    return govTokensBalances;\n  }\n  getGovTokenConfigByAddress = (address) => {\n    if (!address){\n      return false;\n    }\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    return Object.values(govTokens).find( tokenConfig => (tokenConfig.enabled && tokenConfig.address.toLowerCase() === address.toLowerCase()) );\n  }\n  getGovTokensUserTotalBalance = async (account=null,availableTokens=null,convertToken=null,checkShowBalance=true) => {\n\n    // Check for cached data\n    const cachedDataKey = `govTokensUserTotalBalance_${account}_${JSON.stringify(availableTokens)}_${convertToken}_${checkShowBalance}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account,availableTokens,convertToken,null,checkShowBalance);\n    if (govTokensUserBalances){\n      const govTokensEarnings = Object.values(govTokensUserBalances).reduce( (acc, govTokenAmount) => {\n        acc = acc.plus(this.BNify(govTokenAmount));\n        return acc;\n      }, this.BNify(0));\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey,govTokensEarnings);\n    }\n    return this.BNify(0);\n  }\n  getGovTokensUserBalances = async (account=null,availableTokens=null,convertToken=null,govTokenConfigForced=null,checkShowBalance=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.availableStrategies && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    const output = {};\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const idleTokenConfig = availableTokens[token].idle;\n\n      // Get govTokens amounts\n      const govTokensAmounts = await this.genericContractCall(idleTokenConfig.token,'getGovTokensAmounts',[account]);\n\n      if (govTokensAmounts){\n        await this.asyncForEach(govTokensAmounts, async (govTokenAmount,govTokenIndex) => {\n          govTokenAmount = this.BNify(govTokenAmount);\n          // Get gov Token config by index\n          const govTokenAddress = await this.genericContractCall(idleTokenConfig.token,'govTokens',[govTokenIndex]);\n\n          if (govTokenAddress){\n            const govTokenConfig = govTokenConfigForced ? govTokenConfigForced : this.getGovTokenConfigByAddress(govTokenAddress);\n\n            if (govTokenConfig && (!checkShowBalance || govTokenConfig.showBalance) && govTokenConfig.address && govTokenConfig.address.toLowerCase() === govTokenAddress.toLowerCase()){\n\n              // Get gov token conversion rate\n              let tokenConversionRate = null;\n              if (convertToken){\n                const fromTokenConfig = this.getGlobalConfig(['stats','tokens',convertToken]);\n                if (fromTokenConfig){\n                  try {\n                    tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig,govTokenConfig);\n                  } catch (error) {\n                    \n                  }\n                }\n              }\n\n              govTokenAmount = this.fixTokenDecimals(govTokenAmount,govTokenConfig.decimals,tokenConversionRate);\n\n              // Initialize govToken balance\n              if (!output[govTokenConfig.token]){\n                output[govTokenConfig.token] = this.BNify(0); // this.BNify(1) for testing\n              }\n\n              // Add govTokens balance\n              output[govTokenConfig.token] = output[govTokenConfig.token].plus(govTokenAmount);\n            }\n          }\n        });\n      }\n    });\n\n    return output;\n  }\n  getTokenFees = async (tokenConfig=null) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    const fee = await this.genericContractCall(tokenConfig.idle.token, 'fee');\n    if (fee){\n      return this.BNify(fee).div(this.BNify(100000));\n    }\n    return null;\n  }\n  getUserTokenFees = async (tokenConfig=null,account=null) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account || !tokenConfig){\n      return null;\n    }\n\n    let [\n      feePercentage,\n      amountLent,\n      redeemableBalance\n    ] = await Promise.all([\n      this.getTokenFees(tokenConfig),\n      this.loadAssetField('amountLent',tokenConfig.token,tokenConfig,account),\n      this.loadAssetField('redeemableBalance',tokenConfig.token,tokenConfig,account)\n    ]);\n\n    if (feePercentage && amountLent && redeemableBalance){\n      const gain = redeemableBalance.minus(amountLent);\n      const fees = gain.times(feePercentage);\n\n      // this.customLog('fees',tokenConfig.token,amountLent.toString(),redeemableBalance.toString(),gain.toString(),fees.toString());\n\n      return fees;\n    }\n\n    return null;\n  }\n  getGovTokenUserBalance = async (govTokenConfig,account=null,availableTokens=null,convertToken=null) => {\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account,availableTokens,convertToken,govTokenConfig);\n    return govTokensUserBalances && govTokensUserBalances[govTokenConfig.token] ? govTokensUserBalances[govTokenConfig.token] : this.BNify(0);\n  }\n  getAggregatedStats = async (addGovTokens=true) => {\n\n    // Check for cached data\n    const cachedDataKey = `getAggregatedStats_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && (cachedData.avgAPR && !this.BNify(cachedData.avgAPR).isNaN()) && (cachedData.avgAPY && !this.BNify(cachedData.avgAPY).isNaN()) && (cachedData.totalAUM && !this.BNify(cachedData.totalAUM).isNaN())){\n      return {\n        avgAPR:this.BNify(cachedData.avgAPR),\n        avgAPY:this.BNify(cachedData.avgAPY),\n        totalAUM:this.BNify(cachedData.totalAUM)\n      };\n    }\n\n    let avgAPR = this.BNify(0);\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n    const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,addGovTokens);\n        const tokenAprs = await this.getTokenAprs(tokenConfig,tokenAllocation,addGovTokens);\n        if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent && !tokenAllocation.totalAllocationWithUnlent.isNaN()){\n          const totalAllocation = await this.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig,isRisk);\n          totalAUM = totalAUM.plus(totalAllocation);\n          // console.log(tokenConfig.idle.token+'V4',totalAllocation.toFixed(5));\n          if (tokenAprs && tokenAprs.avgApr && !tokenAprs.avgApr.isNaN()){\n            avgAPR = avgAPR.plus(totalAllocation.times(tokenAprs.avgApr));\n            avgAPY = avgAPY.plus(totalAllocation.times(tokenAprs.avgApy));\n          }\n        }\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens){\n          await this.asyncForEach(Object.keys(govTokens).filter( govToken => (govTokens[govToken].showAUM) ), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              tokenBalance,\n              tokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken,tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig,govTokenConfig)\n            ]);\n            \n            if (tokenBalance && tokenConversionRate){\n              const tokenBalanceConverted = this.fixTokenDecimals(tokenBalance,govTokenConfig.decimals).times(this.BNify(tokenConversionRate));\n              if (tokenBalanceConverted && !tokenBalanceConverted.isNaN()){\n                // console.log(tokenConfig.idle.token+'V4',govToken,tokenBalanceConverted.toFixed(5));\n                totalAUM = totalAUM.plus(tokenBalanceConverted);\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract){\n          const oldTokenConfig = Object.assign({},tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({},tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols){\n            oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n              if (foundProtocol){\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const oldTokenAllocation = await this.getTokenAllocation(oldTokenConfig,false,false);\n          if (oldTokenAllocation && oldTokenAllocation.totalAllocation && !oldTokenAllocation.totalAllocation.isNaN()){\n            const oldTokenTotalAllocation = await this.convertTokenBalance(oldTokenAllocation.totalAllocation,token,oldTokenConfig,isRisk);\n            totalAUM = totalAUM.plus(oldTokenTotalAllocation);\n            // console.log(oldTokenConfig.idle.name,oldTokenTotalAllocation.toFixed(5));\n          }\n        }\n      });\n    });\n\n    avgAPR = avgAPR.div(totalAUM);\n    avgAPY = avgAPY.div(totalAUM);\n\n    const output = {\n      avgAPR,\n      avgAPY,\n      totalAUM\n    };\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,output);\n  }\n  getTokenApy = async (tokenConfig) => {\n    const tokenAprs = await this.getTokenAprs(tokenConfig);\n    if (tokenAprs && tokenAprs.avgApy !== null){\n      return tokenAprs.avgApy;\n    }\n    return null;\n  }\n  getTokensToMigrate = async (selectedStrategy=null) => {\n\n    if (!this.props.availableStrategies || !this.props.account){\n      return false;\n    }\n\n    const tokensToMigrate = {};\n\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      if (selectedStrategy && selectedStrategy !== strategy){\n        return;\n      }\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const {\n          migrationEnabled,\n          oldContractBalanceFormatted\n        } = await this.checkMigration(tokenConfig,this.props.account);\n        \n        if (migrationEnabled){\n          const tokenKey = selectedStrategy ? token : tokenConfig.idle.token;\n          tokensToMigrate[tokenKey] = {\n            token,\n            strategy,\n            tokenConfig,\n            oldContractBalanceFormatted\n          }\n        }\n      });\n    });\n\n    return tokensToMigrate;\n  }\n  /*\n  Get protocols tokens balances\n  */\n  getProtocolsTokensBalances = async (protocol=null) => {\n    if (!this.props.account){\n      return false;\n    }\n    const tokenBalances = {};\n    const minTokenBalance = this.BNify(1).div(1e4);\n    const protocolsTokens = this.getGlobalConfig(['tools','tokenMigration','props','availableTokens']);\n    if (protocolsTokens){\n      await this.asyncForEach(Object.keys(protocolsTokens),async (token) => {\n        const tokenConfig = protocolsTokens[token];\n        if (protocol !== null && tokenConfig.protocol.toLowerCase() !== protocol.toLowerCase() ){\n          return;\n        }\n        let tokenContract = this.getContractByName(tokenConfig.token);\n        if (!tokenContract && tokenConfig.abi){\n          tokenContract = await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n        }\n        if (tokenContract){\n          const tokenBalance = await this.getTokenBalance(tokenConfig.token,this.props.account);\n          if (tokenBalance && tokenBalance.gte(minTokenBalance)){\n            tokenBalances[token] = {\n              tokenConfig,\n              balance:tokenBalance,\n            };\n          }\n        }\n      });\n    }\n\n    return tokenBalances;\n  }\n  /*\n  Convert token Balance\n  */\n  convertTokenBalance = async (tokenBalance,token,tokenConfig,isRisk=false) => {\n    // Check for USD conversion rate\n    tokenBalance = this.BNify(tokenBalance);\n    if (tokenBalance.gt(0)){\n      const tokenUsdConversionRate = await this.getTokenConversionRate(tokenConfig,isRisk);\n      if (tokenUsdConversionRate){\n        tokenBalance = tokenBalance.times(tokenUsdConversionRate);\n      }\n    }\n    return tokenBalance;\n  }\n  /*\n  Get idleToken conversion rate\n  */\n  getTokenConversionRate = async (tokenConfig,isRisk,conversionRateField=null) => {\n\n    if (!conversionRateField){\n      conversionRateField = this.getGlobalConfig(['stats','tokens',tokenConfig.token,'conversionRateField']);\n      if (!conversionRateField){\n        return null;\n      }\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenConversionRate_${tokenConfig.address}_${isRisk}_${conversionRateField}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,null,null,false,null,'desc',1);\n\n    if (tokenData && tokenData.length){\n      tokenData = tokenData.pop();\n      if (tokenData && tokenData[conversionRateField]){\n        const conversionRate = this.fixTokenDecimals(tokenData[conversionRateField],18);\n        if (!this.BNify(conversionRate).isNaN()){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,conversionRate);\n        }\n      }\n    }\n\n    return null;\n  }\n\n  getTokenScore = async (tokenConfig,isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScore_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const apiInfo = globalConfigs.stats.rates;\n    const endpoint = `${apiInfo.endpoint}${tokenConfig.address}?isRisk=${isRisk}&limit=1&order=DESC`;\n    const [\n      tokenData,\n      tokenAllocation\n    ] = await Promise.all([\n      this.makeCachedRequest(endpoint,apiInfo.TTL,true),\n      this.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    let tokenScore = this.BNify(0);\n\n    if (tokenData && tokenAllocation){\n      Object.keys(tokenAllocation.protocolsAllocationsPerc).forEach( protocolAddr => {\n        const protocolAllocationPerc = this.BNify(tokenAllocation.protocolsAllocationsPerc[protocolAddr]);\n        if (protocolAllocationPerc.gt(0.001) && tokenData.length>0){\n          const protocolInfo = tokenData[0].protocolsData.find( p => (p.protocolAddr.toLowerCase() === protocolAddr.toLowerCase()) );\n          if (protocolInfo){\n            const protocolScore = this.BNify(protocolInfo.defiScore);\n            if (!protocolScore.isNaN()){\n              tokenScore = tokenScore.plus(protocolScore.times(protocolAllocationPerc));\n              // this.customLog(protocolAddr,tokenAllocation.protocolsAllocationsPerc[protocolAddr].toFixed(6),protocolScore.toFixed(6),tokenScore.toFixed(6));\n            }\n          }\n        }\n      });\n    }\n\n    // Fallback\n    if (!tokenScore || tokenScore.isNaN() || tokenScore.lte(0)){\n      tokenScore = this.getTokenScoreApi(tokenConfig,isRisk);\n    }\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,tokenScore);\n  }\n\n  /*\n  Get idleToken score\n  */\n  getTokenScoreApi = async (tokenConfig,isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScoreApi_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const apiInfo = globalConfigs.stats.scores;\n    const endpoint = `${apiInfo.endpoint}${tokenConfig.address}?isRisk=${isRisk}`;\n    let tokenData = await this.makeCachedRequest(endpoint,apiInfo.TTL,true);\n\n    if (tokenData){\n      let tokenScore = this.BNify(tokenData[0].idleScore);\n      if (tokenScore && tokenScore.gt(0)){\n        // Set cached data\n        return this.setCachedData(cachedDataKey,tokenScore);\n      // Take latest historical valid score\n      } else {\n        const timestamp = parseInt(new Date().getTime()/1000);\n        const startTimestamp = parseInt(timestamp)-(60*60*24);\n        tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,startTimestamp,null,true,null,'DESC');\n\n        const filteredTokenData = tokenData.filter( d => (this.BNify(d.idleScore).gt(0)) );\n        if (filteredTokenData.length){\n          tokenScore = this.BNify(filteredTokenData[0].idleScore);\n          if (!this.BNify(tokenScore).isNaN()){\n            return this.setCachedDataWithLocalStorage(cachedDataKey,tokenScore);\n          }\n        }\n      }\n    }\n\n    return null;\n  }\n  /*\n  Get idleTokens aggregated APR\n  */\n  getTokenAprs = async (tokenConfig,tokenAllocation=false,addGovTokens=true) => {\n\n    if (!tokenConfig.idle){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAprs_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && (cachedData.avgApr && !this.BNify(cachedData.avgApr).isNaN()) && (cachedData.avgApy && !this.BNify(cachedData.avgApy).isNaN()) ){\n      return {\n        avgApr:this.BNify(cachedData.avgApr),\n        avgApy:this.BNify(cachedData.avgApy)\n      };\n    }\n\n    const Aprs = await this.getAprs(tokenConfig.idle.token);\n\n    if (!Aprs){\n      return false;\n    }\n\n    if (!tokenAllocation){\n      tokenAllocation = await this.getTokenAllocation(tokenConfig);\n    }\n\n    if (!tokenAllocation){\n      return false;\n    }\n\n    const addresses = Aprs.addresses.map((addr,i) => { return addr.toString().toLowerCase() });\n    const aprs = Aprs.aprs;\n\n    const protocolsAprs = {};\n    const protocolsApys = {};\n    let compAPR = null;\n\n    await this.asyncForEach(tokenConfig.protocols,async (protocolInfo,i) => {\n      const protocolAddr = protocolInfo.address.toString().toLowerCase();\n      const addrIndex = addresses.indexOf(protocolAddr);\n      if ( addrIndex !== -1 ) {\n        let protocolApr = this.BNify(+this.toEth(aprs[addrIndex]));\n        let protocolApy = this.apr2apy(protocolApr.div(100)).times(100);\n\n        if (addGovTokens && protocolInfo.name === 'compound'){\n          compAPR = await this.getCompAPR(tokenConfig.token,tokenConfig);\n        }\n\n        protocolsApys[protocolAddr] = protocolApy;\n        protocolsAprs[protocolAddr] = protocolApr;\n      }\n    });\n\n    const tokenAprs = {\n      avgApr: null,\n      avgApy: null\n    };\n\n    if (tokenAllocation){\n      tokenAprs.avgApr = this.getAvgApr(protocolsAprs,tokenAllocation.protocolsAllocations,tokenAllocation.totalAllocation);\n      tokenAprs.avgApy = this.getAvgApr(protocolsApys,tokenAllocation.protocolsAllocations,tokenAllocation.totalAllocation);\n\n      if (compAPR){\n        tokenAprs.avgApr = tokenAprs.avgApr.plus(compAPR);\n        tokenAprs.avgApy = tokenAprs.avgApy.plus(compAPR);\n      }\n\n      // Add $IDLE token APR\n      const idleGovTokenShowAPR = this.getGlobalConfig(['govTokens','IDLE','showAPR']);\n      const idleGovTokenEnabled = this.getGlobalConfig(['govTokens','IDLE','enabled']);\n      if (idleGovTokenEnabled && idleGovTokenShowAPR){\n        const idleGovToken = this.getIdleGovToken();\n        const idleAPR = await idleGovToken.getAPR(tokenConfig.token,tokenConfig);\n        if (idleAPR){\n          tokenAprs.avgApr = tokenAprs.avgApr.plus(idleAPR);\n          tokenAprs.avgApy = tokenAprs.avgApy.plus(idleAPR);\n        }\n      }\n      return this.setCachedDataWithLocalStorage(cachedDataKey,tokenAprs);\n    }\n\n    return null;\n  }\n  abbreviateNumber(value,decimals=3,maxPrecision=5,minPrecision=0){\n\n    const isNegative = parseFloat(value)<0;\n    let newValue = this.BNify(value).abs();\n    const suffixes = [\"\", \"K\", \"M\", \"B\",\"T\"];\n    let suffixNum = 0;\n    while (newValue.gte(1000)) {\n      newValue = newValue.div(1000);\n      suffixNum++;\n    }\n\n    maxPrecision = Math.max(1,maxPrecision);\n\n    // Prevent decimals on integer number\n    if (value>=1000){\n      const decimalPart = decimals ? newValue.mod(1).toFixed(maxPrecision).substr(2,decimals) : null;\n      newValue = parseInt(newValue).toString()+( decimalPart ? '.'+decimalPart : '' );\n    } else {\n      newValue = newValue.toFixed(decimals);\n    }\n\n    // Adjust number precision\n    if (newValue>=1 && (newValue.length-1)>maxPrecision){\n      newValue = parseFloat(newValue).toPrecision(maxPrecision);\n    } else if ((newValue.length-1)<minPrecision) {\n      const difference = minPrecision-(newValue.length-1);\n      const append = this.BNify(value).abs().toString().replace('.','').substr((newValue.length-1),difference);\n      newValue += append;\n    }\n\n    // Add minus if number is negative\n    if (isNegative){\n      newValue = '-'+newValue;\n    }\n\n    newValue += suffixes[suffixNum];\n\n    return newValue;\n  }\n  getFormattedBalance(balance,label,decimals,maxLen,highlightedDecimals){\n    const defaultValue = '-';\n    decimals = !isNaN(decimals) ? decimals : 6;\n    maxLen = !isNaN(maxLen) ? maxLen : 10;\n    highlightedDecimals = !isNaN(highlightedDecimals) ? highlightedDecimals : 0;\n    balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n\n    const numLen = balance.toString().replace('.','').length;\n    if (numLen>maxLen){\n      decimals = Math.max(0,decimals-(numLen-maxLen));\n      balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n    }\n\n    const intPart = Math.floor(balance);\n    let decPart = (balance%1).toPrecision(decimals).substr(2,decimals);;\n    decPart = (decPart+(\"0\".repeat(decimals))).substr(0,decimals);\n\n    if (highlightedDecimals){\n      const highlightedDec = decPart.substr(0,highlightedDecimals);\n      decPart = decPart.substr(highlightedDecimals);\n      const highlightedIntPart = (<Text.span fontSize={'100%'} color={'blue'} fontWeight={'inerith'}>{intPart}.{highlightedDec}</Text.span>);\n      return !isNaN(this.trimEth(balance)) ? ( <>{highlightedIntPart}<small style={{fontSize:'70%'}}>{decPart}</small> <Text.span fontSize={[1,2]}>{label}</Text.span></> ) : defaultValue;\n    } else {\n      return !isNaN(this.trimEth(balance)) ? ( <>{intPart}<small>.{decPart}</small>{ label !== '%' ? ' ' : null }{ label ? <Text.span fontSize={[1,2]}>{label}</Text.span> : null }</> ) : defaultValue;\n    }\n  }\n};\n\nexport default FunctionsUtil;","import {\n  Link as RouterLink,\n} from \"react-router-dom\";\nimport ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport styles from './Footer.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Heading, Image, Link } from 'rimble-ui';\n\nclass Footer extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  render() {\n    const currYear = new Date().getFullYear();\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n    const columnWidth = governanceEnabled ? 1/4 : 1/3;\n    return (\n      <Flex\n        pl={0}\n        id={\"footer\"}\n        alignItems={'center'}\n        flexDirection={'column'}\n        className={styles.footer}\n        backgroundColor={'white'}\n        justifyContent={'flex-start'}\n      >\n        <Flex\n          width={1}\n          px={[3,6]}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            height={['auto','100%']}\n            alignItems={'flex-start'}\n            maxWidth={['35em','70em']}\n            justifyContent={'flex-start'}\n            flexDirection={['column','row']}\n          >\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Resources\n              </Heading.h3>\n              <Flex width={1} flexDirection={'column'}>\n                <ExtLink pb={[3,2]} href={'https://developers.idle.finance'} textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>Developers</ExtLink>\n                <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                  <RouterLink\n                    color={'blue'}\n                    to=\"/terms-of-service\"\n                    className={styles.link}\n                  >\n                    <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>Terms of Service</Text>\n                  </RouterLink>\n                </Flex>\n                <ExtLink pb={[3,2]} href={'https://www.iubenda.com/privacy-policy/61211749'} textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>Privacy Policy</ExtLink>\n                <ExtLink pb={[3,2]} href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'} textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>Cookie Policy</ExtLink>\n                <ExtLink pb={[3,2]} href={'https://www.notion.so/idlelabs/Idle-Finance-Brand-Assets-fd63e4161cb64c999531646c7549bc4b'} textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>Brand Assets</ExtLink>\n              </Flex>\n            </Flex>\n            {\n              governanceEnabled && \n                <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n                  <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                    Governance\n                  </Heading.h3>\n                  <Flex width={1} flexDirection={'column'}>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        to={\"/governance\"}\n                        className={styles.link}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>Overview</Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/proposals\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>Proposals</Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/leaderboard\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>Leaderboard</Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://gov.idle.finance/\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>Forum</Text>\n                      </ExtLink>\n                    </Flex>\n                  </Flex>\n                </Flex>\n            }\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Start a Conversation\n              </Heading.h3>\n              <Link textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>info@idle.finance</Link>\n            </Flex>\n            <Flex width={[1,columnWidth]} flexDirection={'column'}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Explore\n              </Heading.h3>\n              <Flex flexDirection={'row'} justifyContent={['space-evenly','flex-start']}>\n                <ExtLink href=\"https://twitter.com/idlefinance\">\n                  <Image src=\"images/social/twitter.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://t.me/idlefinance\">\n                  <Image src=\"images/social/telegram.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://discord.gg/mpySAJp\">\n                  <Image src=\"images/social/discord.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://medium.com/@idlefinance\">\n                  <Image src=\"images/social/medium.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://github.com/Idle-Labs/\">\n                  <Image src=\"images/social/github.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://www.linkedin.com/company/idlefinance\">\n                  <Image src=\"images/social/linkedin.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://defipulse.com/defi-list\">\n                  <Image src=\"images/social/defi-pulse.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n              </Flex>\n            </Flex>\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n          height={['auto','100%']}\n          flexDirection={'column'}\n          alignItems={['center','flex-end']}\n          justifyContent={['center','flex-end']}\n        >\n          <Flex\n            p={2}\n            width={1}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={'dark-blue'}\n            flexDirection={['column','row']}\n          >\n            <Text\n              color={'white'}\n              textAlign={['center','flex-end']}\n            >\n              &copy; {currYear} - Idle Labs Inc.\n            </Text>\n            <RouterLink\n              color={'blue'}\n              to={'/terms-of-service'}\n              style={{textDecoration:'none'}}\n            >\n              <Text\n                pl={2}\n                color={'#0df'}\n                textAlign={['center','flex-end']}\n              >\n                Terms of Service\n              </Text>\n            </RouterLink>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Footer;\n","import Footer from '../Footer/Footer';\nimport styles from './Tos.module.scss';\nimport React, { Component } from 'react';\nimport { Box, Flex, Text, Heading } from 'rimble-ui'\n\nclass Tos extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} pb={[3,5]} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} pb={3} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.2em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                Terms of Service\n              </Heading.h1>\n              <Heading.h2 fontWeight={'400'} lineHeight={['1.4em', '2em']} fontSize={[2,3]} textAlign={'center'} color={'white'}>\n                Updated: November 28, 2019\n              </Heading.h2>\n            </Flex>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"70em\"]} mx={'auto'} textAlign={'center'}>\n              <Box className={styles.textContainer} alignItems={'center'} width={'100%'} minHeight={['auto','20em']} backgroundColor={'white'} color={'dark-gray'} p={[3,4]} boxShadow={'0 0 25px 5px rgba(102, 139, 255, 0.7)'} borderRadius={'15px'} style={{position:'relative'}}>\n                <Box id={'first-paragraph'} pb={3}>\n                  <Text pb={3}>\n                    These terms of service, together with any documents and additional terms they expressly incorporate by reference (collectively, these “Terms”), are entered into between Idle Labs Inc. (“Idle,” “we,” “us” and “our”) and you or the company or other legal entity you represent (“you” or “your”), and constitute a binding legal agreement.\n                  </Text>\n                  <Text pb={3}>\n                    Please read these Terms carefully, as these Terms govern your use of our Portal and our Services, and expressly cover your rights and obligations, and our disclaimers and limitations of legal liability, relating to such use. By accessing or using the Interface, you signify that you have read, understand, and agree to be bound by and to comply with these Terms, including the mandatory arbitration provision in Section 12. If you do not agree to these Terms, you must not access or use our Portal or the Services.\n                  </Text>\n                  <Text pb={3}>\n                    You must be able to form a legally binding contract online either on behalf of a company or as an individual. Accordingly, you represent that: (a) if you are agreeing to these Terms on behalf of a company or other legal entity, you have the legal authority to bind the company or other legal entity to these Terms; and (b) you are at least 18 years old (or the age of majority where you reside, whichever is older), can form a legally binding contract online, and have the full, right, power and authority to enter into and to comply with the obligations under these Terms.\n                  </Text>\n                  <Text pb={3}>\n                    In addition to the foregoing, you also represent and warrant that you are not a citizen or resident of a state, country, territory or other jurisdiction that is embargoed by the United States or where your use of the Portal or the Services would be illegal or otherwise violate any applicable law.  Specifically, you represent that you are not located in, organized in, or a resident of New York, Cuba, Iran, Syria, North Korea, the Crimea region, Venezuela, or any other jurisdiction where Applicable law prohibits you from accessing or using the Services; and you represent that you are not be named on the Office of Foreign Asset Control of the U.S. Department of the Treasury’s Specially Designated and Blocked Persons List.\n                   </Text>\n                  <Text>\n                    Please carefully review the disclosures and disclaimers set forth in Section 9 in their entirety before using any software developed by Idle. The information in Section 9 provides important details about the legal obligations associated with your use of the Idle open-source software. By accessing or using our Portal or our Services, you agree that Idle is a provider of open-source software that optimizes the allocation of your digital assets to third-party decentralized web protocols.  Idle is not affiliated with and has no control over these third-party protocols and is not responsible for any losses that occur as a result of interconnection with these third-party protocols. The Protocol is open-source software deployed on the Ethereum Blockchain.  While Idle developed and deployed the Protocol, the software operates in an autonomous fashion on a decentralized network and, as a result, Idle has no control over user transactions. You accordingly acknowledge that you use the Services at your own risk and agree that Idle will not be responsible for any losses that occur as a result of your use of the Services.\n                  </Text>\n                </Box>\n\n                <Box id={'key-definitions'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    1. KEY DEFINITIONS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    For the purpose of these Terms, the following capitalized terms shall have the following meanings:\n                  </Text>\n\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>1.1. “Affiliate”</strong> means, with respect to a party to these Terms, any legal entity that, directly or indirectly controls, is controlled by, or is under common control with such party.\n                    </li>\n                    <li>\n                      <strong>1.2. “Applicable Law”</strong> means any domestic or foreign law, rule, statute, regulation, by-law, order, protocol, code, decree, or other directive, requirement or guideline, published or in force which applies to or is otherwise intended to govern or regulate any person, property, transaction, activity, event or other matter, including any rule, order, judgment, directive or other requirement or guideline issued by any Governmental Authority having jurisdiction over Idle, you, the Portal or the Services, or as otherwise duly enacted, enforceable by law, the common law or equity.\n                    </li>\n                    <li>\n                      <strong>1.3. “Ether”</strong> means the Ethereum Blockchain utility token that may be used to purchase computational resources to run decentralized applications or perform actions on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.4. “Ethereum Address”</strong> means the unique public key digital asset identifier that points to an Ethereum-compatible wallet to which Ether may be sent or stored.\n                    </li>\n                    <li>\n                      <strong>1.5. “Ethereum Blockchain”</strong> means the underlying blockchain infrastructure which the Portal leverages to perform portions of the Services.\n                    </li>\n                    <li>\n                      <strong>1.6. “Governmental Authority”</strong> includes any domestic or foreign federal, provincial or state, municipal, local or other governmental, regulatory, judicial or administrative authority.\n                    </li>\n                    <li>\n                      <strong>1.7. “Portal”</strong> means the Idle site located at https://idle.finance and all associated sites linked thereto by Idle and its Affiliates, which includes, for certainty, Idle’s decentralized application layer on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.8. “Protocol”</strong> means the Idle decentralized web protocol, which optimizes the allocation of users’ digital assets to third-party decentralized web protocols.\n                    </li>\n                    <li>\n                      <strong>1.9. “Token”</strong> means an “ERC-20” digital asset issued on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.10. “Services”</strong> has the meaning set out in Section 3.1.\n                    </li>\n                    <li>\n                      <strong>1.11. “Third-Parties Services”</strong> means other services (such as fiat-to-token gateway, or token-to-token swap) provided by third parties services running on Ethereum Blockchain.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'modifications-terms'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    2. MODIFICATIONS TO THESE TERMS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    We reserve the right, in our sole discretion, to modify these Terms from time to time. If we make changes, we will provide you with notice of such changes, such as by sending an email, providing a notice through our Services or updating the date at the top of these Terms. Unless we say otherwise in our notice, any and all such modifications are effective immediately, and your continued use of our Services after we provide such notice will confirm your acceptance of the changes. If you do not agree to the amended Terms, you must stop using our Services.\n                  </Text>\n                </Box>\n\n                <Box id={'services'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    3. SERVICES\n                  </Heading.h3>\n                </Box>\n\n                <ul className={styles.list}>\n                  <li>\n                    <strong>3.1. Services</strong><br />\n                    The primary purpose of the Portal and Protocol is to enable users to interact with smart contracts that allocate their digital assets to third-party decentralized web protocols and enable users to receive an optimized allocation of digital assets from these protocols in return (the “Services”).\n                  </li>\n                  <li>\n                    <strong>3.2. Fees</strong><br />\n                    Use of the Services is provided to you at no charge. Fees are charged on-top of Third-Parties.\n                  </li>\n                  <li>\n                    <strong>3.3. Ethereum Gas Charges</strong><br />\n                    Some Services involve the use of the Ethereum Blockchain, which may require that you pay a fee, commonly known as “Ethereum Gas Charges,” for the computational resources required to perform a transaction on the Ethereum Blockchain. You acknowledge and agree that Idle has no control over: (a) any Ethereum Blockchain transactions; (b) the method of payment of any Ethereum Gas Charges; or (c) any actual payments of Ethereum Gas Charges. Accordingly, you must ensure that you have a sufficient balance of Ether stored at your Ethereum Address to complete any transaction on the Ethereum Blockchain before initiating such Ethereum Blockchain transaction. We will make reasonable efforts to notify you of any Ethereum Gas Charges before initiating any Services that require the use of the Ethereum Blockchain.\n                  </li>\n                  <li>\n                    <strong>3.4. Conditions and Restrictions</strong><br />\n                    We may, at any time and in our sole discretion, restrict your access to, or otherwise impose conditions or restrictions upon your use of, the Services or the Portal, with or without prior notice.\n                  </li>\n                  <li>\n                    <strong>3.5. No Broker, Legal or Fiduciary Relationship</strong><br />\n                    Idle is not your broker, lawyer, intermediary, agent, or advisor and has no fiduciary relationship or obligation to you regarding any other decisions or activities that you effect when using the Portal or the Services. Neither our communications nor any information that we provide to you is intended as, or shall be considered or construed as, advice.\n                  </li>\n                  <li>\n                    <strong>3.6. Your Responsibilities</strong><br />\n                    As a condition to accessing or using the Services or the Portal, you shall:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>only use the Services and the Portal for lawful purposes and in accordance with these Terms;</li>\n                      <li>ensure that, at all times, all information that you provide on the Portal is current, complete and accurate; and maintain the security and confidentiality of your Ethereum Address.</li>\n                      <li>shall be responsible for payment of all applicable taxes, if any, to which the Services might be subject and any and all other taxes which may apply to you.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.7. Unacceptable Use or Conduct</strong><br />\n                    As a condition to accessing or using the Portal or the Services, you will not:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>violate any Applicable Law, including, without limitation, any relevant and applicable anti-money laundering and anti-terrorist financing laws, such as the Bank Secrecy Act, each as may be amended;</li>\n                      <li>infringe on or misappropriate any contract, intellectual property or other third-party right, or commit a tort while using the Portal or the Services;</li>\n                      <li>use the Services in any manner that could interfere with, disrupt, negatively affect, or inhibit other users from fully enjoying the Services, or that could damage, disable, overburden, or impair the functioning of the Services in any manner;</li>\n                      <li>attempt to circumvent any content filtering techniques or security measures that Idle employs on the Portal, or attempt to access any service or area of the Portal or the Services that you are not authorized to access;</li>\n                      <li>use the Services to pay for, support, or otherwise engage in any illegal gambling activities, fraud, money-laundering, or terrorist activities, or other illegal activities;</li>\n                      <li>use any robot, spider, crawler, scraper, or other automated means or interface not provided by us, to access the Services or to extract data;</li>\n                      <li>introduce any malware, virus, Trojan horse, worm, logic bomb, drop-dead device, backdoor, shutdown mechanism or other harmful material into the Portal or the Services;</li>\n                      <li>provide false, inaccurate, or misleading information;</li>\n                      <li>post content or communications on the Portal that are, in our sole discretion, libelous, defamatory, profane, obscene, pornographic, sexually explicit, indecent, lewd, vulgar, suggestive, harassing, hateful, threatening, offensive, discriminatory, bigoted, abusive, inflammatory, fraudulent, deceptive or otherwise objectionable;</li>\n                      <li>post content on the Portal containing unsolicited promotions, political campaigning, or commercial messages or any chain messages or user content designed to deceive or trick the user of the Service;</li>\n                      <li>use the Portal or the Services from a jurisdiction that we have, in our sole discretion, or a relevant Governmental Authority has determined is a jurisdiction where the use of the Portal or the Services is prohibited; or</li>\n                      <li>encourage or induce any third party to engage in any of the activities prohibited under this Section 3.7.</li>\n                    </ul>\n                  </li>\n\n                  <li>\n                    <strong>3.8. Your Assumption of Risks</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>have the necessary technical expertise and ability to review and evaluate the security, integrity and operation of any transactions that you engage in through the Protocol;</li>\n                      <li>have the knowledge, experience, understanding, professional advice and information to make your own evaluation of the merits, risks and applicable compliance requirements under Applicable Law of engaging in transactions through the Protocol;</li>\n                      <li>acknowledge and understand that the Protocol allocates your digital assets to third-party decentralized web protocols to facilitate your lending and borrowing through these third-party protocols and that Idle is not responsible or liable for these transactions or the operation of these third-party protocols;</li>\n                      <li>know, understand and accept the risks associated with your Ethereum Address, the Ethereum Blockchain, Ether and Tokens; and</li>\n                      <li>accept the risks associated with lending, borrowing and trading Ether and Tokens, and are responsible for conducting your own independent analysis of the risks specific to any Ether and Tokens lent, borrowed or traded by you and your use of the Services.</li>\n                    </ul>\n                    You hereby assume, and agree that Idle will have no responsibility or liability for, such risks. You hereby irrevocably waive, release and discharge all claims, whether known or unknown to you, against Idle, its affiliates and their respective shareholders, members, directors, officers, employees, agents and representatives related to any of the risks set forth herein.\n                  </li>\n                  <li>\n                    <strong>3.9. Additional Representations</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>are not using the Protocol to engage in the leveraged, margined, or financed purchase of digital assets; and</li>\n                      <li>are using the Protocol for the purpose of accessing third-party decentralized web protocols.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.10. Your Content</strong><br />\n                    You hereby grant to us a royalty-free, fully paid-up, sublicensable, transferable, perpetual, irrevocable, non-exclusive, worldwide license to use, copy, modify, create derivative works of, display, perform, publish and distribute, in any form, medium or manner, any content that is available to other users via the Idle Platform as a result of your use of the Portal (collectively, “Your Content”) through your use of the Services or the Portal, including, without limitation, for promoting Idle (or its Affiliates), the Services or the Portal. You represent and warrant that: (a) you own Your Content or have the right to grant the rights and licenses in these Terms; and (b) Your Content and our use of Your Content, as licensed herein, does not and will not violate, misappropriate or infringe on any third party’s rights.\n                  </li>\n                </ul>\n\n                <Box id={'privacy-policy'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    4. PRIVACY POLICY\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please refer to our privacy policy available at https://idle.finance/privacy-policy for information about how we collect, use, share and otherwise process information about you.\n                  </Text>\n                </Box>\n\n                <Box id={'proprietary-rights'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    5. PROPRIETARY RIGHTS\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>5.1. Ownership of Services; License to Services</strong><br />\n                      Excluding any open source software (as further described in Section 5.2) or third-party software that the Portal or the Services incorporates, as between you and Idle, Idle owns the Portal and the Services, including all technology, content and other materials used, displayed or provided on the Portal or in connection with the Services (including all intellectual property rights subsisting therein), and hereby grants you a limited, revocable, transferable, license to access and use those portions of the Portal and the Services that are proprietary to Idle.\n                    </li>\n                    <li>\n                      <strong>5.2. Idle License; Open Source Software License; Limitations</strong><br />\n                      The Portal and the Services are governed by the most recent version of the open source license commonly known as the Apache 2.0 a copy of which (as it applies to the Portal and the Services) can be found at:  https://apache.org/licenses/LICENSE-2.0 (as of the date these Terms were last updated) and any other applicable licensing terms for the Portal and the Services in these Terms (collectively, the “Idle License”). You acknowledge that the Portal or the Services may use, incorporate or link to certain open-source components and that your use of the Portal or Services is subject to, and you will comply with any, applicable open-source licenses that govern any such open-source components (collectively, “Open-Source Licenses”). Without limiting the generality of the foregoing, you may not: (a) resell, lease, lend, share, distribute or otherwise permit any third party to use the Portal or the Services; (b) use the Portal or the Services for time-sharing or service bureau purposes; or (c) otherwise use the Portal or the Services in a manner that violates the Idle License or any other Open-Source Licenses.\n                    </li>\n                    <li>\n                      <strong>5.3. Trademarks</strong><br />\n                      Any of Idle’s product or service names, logos, and other marks used in the Portal or as a part of the Services, including Idle's name and logo are trademarks owned by Idle, its Affiliates or its applicable licensors. You may not copy, imitate or use them without Idle’s (or the applicable licensor’s) prior written consent.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'changes-suspension-termination'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    6. CHANGES; SUSPENSION; TERMINATION\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>6.1. Changes to Services</strong><br />\n                      We may, at our sole discretion, from time to time and with or without prior notice to you, modify, suspend or disable, temporarily or permanently, the Services, in whole or in part, for any reason whatsoever, including, but not limited to, as a result of a security incident.\n                    </li>\n                    <li>\n                      <strong>6.2. No Liability</strong><br />\n                      We will not be liable for any losses suffered by you resulting from any modification to any Services or from any suspension or termination, for any reason, of your access to all or any portion of the Portal or the Services.\n                    </li>\n                    <li>\n                      <strong>6.3. Survival</strong><br />\n                      The following sections will survive any termination of your access to the Portal or the Services, regardless of the reasons for its expiration or termination, in addition to any other provision which by law or by its nature should survive: Sections 1, 4, 5, 6.3, and 7-14.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'electronic-notices'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    7. ELECTRONIC NOTICES\n                  </Heading.h3>\n                  <Text py={2}>\n                    You consent to receive all communications, agreements, documents, receipts, notices, and disclosures electronically (collectively, our “Communications”) that we provide in connection with these Terms or any Services. You agree that we may provide our Communications to you by posting them on the Portal or by emailing them to you at the email address you provide in connection with using the Services, if any. You should maintain copies of our Communications by printing a paper copy or saving an electronic copy. You may also contact our support team to request additional electronic copies of our Communications by filing a support request at info@idle.finance.\n                  </Text>\n                </Box>\n\n                <Box id={'indemnification'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    8. INDEMNIFICATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    You will defend, indemnify, and hold harmless us, our Affiliates, and our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers and contractors (collectively, “Indemnified Parties”) from any claim, demand, lawsuit, action, proceeding, investigation, liability, damage, loss, cost or expense, including without limitation reasonable attorneys’ fees, arising out of or relating to (a) your use of, or conduct in connection with, the Portal, Services or Margin Tokens; (b) Ethereum Blockchain assets associated with your Ethereum Address; (c) any feedback or user content you provide to the Portal, if any; (d) your violation of these Terms; or (e) your infringement or misappropriation of the rights of any other person or entity. If you are obligated to indemnify any Indemnified Party, Idle (or, at its discretion, the applicable Indemnified Party) will have the right, in its sole discretion, to control any action or proceeding and to determine whether Idle wishes to settle, and if so, on what terms.\n                  </Text>\n                </Box>\n\n                <Box id={'disclosures-disclaimers'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    9. Disclosures; DISCLAIMERS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Idle is a developer of open-source software. Idle does not operate a digital asset exchange platform or execute peer-to-peer transactions through its Protocol and therefore has no oversight, involvement, or control with respect to your transactions, which are executed through third-party protocols and the Ethereum Blockchain.  The Protocol is an autonomous decentralized web protocol deployed to the Ethereum Blockchain that operates in a disintermediated fashion, and, as such, Idle does not participate in any of these transactions.  In each instance, when you interact with the Protocol, you are interacting with a smart contract that transfers your digital assets to a third-party protocol.\n                  </Text>\n                  <Text py={2}>\n                    [Under U.S. federal law, unless you are an “eligible contract participant” as defined in 7 U.S.C. § 1a(18), your transaction must settle within 28 days. Individuals who do not have more than $10 million invested on a discretionary basis (or $5 million if the transaction is for the purpose of managing risk associated with an asset owned or liability incurred, or reasonably likely to be owned or incurred) are not eligible contract participants and may not enter into transactions using the Idle open-source software that do not result in actual delivery of digital assets within 28 days.]\n                  </Text>\n                  <Text py={2}>\n                    You are responsible for complying with all laws and regulations applicable to your transactions, including, but not limited to, the Commodity Exchange Act and the regulations promulgated thereunder by the U.S. Commodity Futures Trading Commission (“CFTC”), and the federal securities laws and the regulations promulgated thereunder by the U.S. Securities and Exchange Commission (“SEC”).\n                  </Text>\n                  <Text py={2}>\n                    You understand that Idle is not registered or licensed by the CFTC, SEC, the Financial Crimes Enforcement Network or any financial regulatory authority. No financial regulatory authority has reviewed or approved the use of the Idle open-source software. This website and the Idle open-source software do not constitute advice or a recommendation concerning any commodity, security or other asset. Idle is not acting as an investment adviser or commodity trading adviser to any person.\n                  </Text>\n                  <Text py={2}>\n                    Idle does not own or control the underlying software protocols that enable the Protocol to function. In general, the underlying protocols are open-source and anyone can use, copy, modify, and distribute them. Idle is not responsible for operation of the underlying protocols, and Idle makes no guarantee of their functionality, security, or availability.\n                  </Text>\n                  <Text py={2}>\n                    To the maximum extent permitted under Applicable Law, the Portal and the Services (and any of their content or functionality) provided by or on behalf of us are provided on an “AS IS” and “AS AVAILABLE” basis, and we expressly disclaim, and you hereby waive, any representations, conditions or warranties of any kind, whether express or implied, legal, statutory or otherwise, or arising from statute, otherwise in law, course of dealing, or usage of trade, including, without limitation, the implied or legal warranties and conditions of merchantability, merchantable quality, quality or fitness for a particular purpose, title, security, availability, reliability, accuracy, quiet enjoyment and non-infringement of third party rights. Without limiting the foregoing, we do not represent or warrant that the Portal or the Services (including any data relating thereto) will be uninterrupted, available at any particular time or error-free. Further, we do not warrant that errors in the Portal or the Service are correctable or will be correctable.\n                  </Text>\n                  <Text py={2}>\n                    You acknowledge that your data on the Portal may become irretrievably lost or corrupted or temporarily unavailable due to a variety of causes, and agree that, to the maximum extent permitted under Applicable Law, we will not be liable for any loss or damage caused by denial-of-service attacks, software failures, viruses or other technologically harmful materials (including those which may infect your computer equipment), protocol changes by third party providers, Internet outages, force majeure events or other disasters, scheduled or unscheduled maintenance, or other causes either within or outside our control.\n                  </Text>\n                  <Text py={2}>\n                    The disclaimer of implied warranties contained herein may not apply if and to the extent such warranties cannot be excluded or limited under the Applicable Law of the jurisdiction in which you reside.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    10. EXCLUSION OF CONSEQUENTIAL AND RELATED DAMAGES\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall we (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) be liable for any incidental, indirect, special, punitive, consequential or similar damages or liabilities whatsoever (including, without limitation, damages for loss of data, information, revenue, goodwill, profits or other business or financial benefit) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any execution or settlement of a transaction, any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability, breach of warranties, or under any other theory of liability, and whether or not we have been advised of, knew of or should have known of the possibility of such damages and notwithstanding any failure of the essential purpose of these Terms or any limited remedy hereunder nor is Idle in any way responsible for the execution or settlement of transactions between users of Idle open-source software.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    11. LIMITATION OF LIABILITY\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall our aggregate liability (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability or other theory of liability exceed the amount of fees paid by you to us under these Terms, if any, in the twelve (12) month period immediately preceding the event giving rise to the claim for liability.\n                  </Text>\n                </Box>\n\n                <Box id={'dispute-resolution-arbitration'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    12. DISPUTE RESOLUTION AND ARBITRATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please read the following section carefully because it requires you to arbitrate certain disputes and claims with Idle and limits the manner in which you can seek relief from us, unless you opt out of arbitration by following the instructions set forth below. In addition, arbitration precludes you from suing in court or having a jury trial.\n                    You and Idle agree that any dispute arising out of or related to these Terms or our Services is personal to you and Idle and that any dispute will be resolved solely through individual action, and will not be brought as a class arbitration, class action or any other type of representative proceeding.\n                  </Text>\n                  <Text py={2}>\n                    Except for small claims disputes in which you or Idle seeks to bring an individual action in small claims court located in the county of your billing address or disputes in which you or Idle seeks injunctive or other equitable relief for the alleged unlawful use of intellectual property, you and Idle waive your rights to a jury trial and to have any dispute arising out of or related to these Terms or our Services resolved in court. Instead, for any dispute or claim that you have against Idle or relating in any way to the Services, you agree to first contact Idle and attempt to resolve the claim informally by sending a written notice of your claim (“Notice”) to Idle by email at info@idle.finance or by certified mail addressed to info@idle.finance. The Notice must (a) include your name, residence address, email address, and telephone number; (b) describe the nature and basis of the claim; (c) set forth the specific relief sought. Our notice to you will be similar in form to that described above. If you and Idle cannot reach an agreement to resolve the claim within thirty (30) days after such Notice is received, then either party may submit the dispute to binding arbitration administered by JAMS or, under the limited circumstances set forth above, in court. All disputes submitted to JAMS will be resolved through confidential, binding arbitration before one arbitrator. Arbitration proceedings will be held in New York City, New York, in accordance with the JAMS Streamlined Arbitration Rules and Procedures (“JAMS Rules”). The most recent version of the JAMS Rules are available on the JAMS website and are hereby incorporated by reference. You either acknowledge and agree that you have read and understand the JAMS Rules or waive your opportunity to read the JAMS Rules and waive any claim that the JAMS Rules are unfair or should not apply for any reason.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that these Terms affect interstate commerce and that the enforceability of this Section 12 will be substantively and procedurally governed by the Federal Arbitration Act, 9 U.S.C. § 1, et seq. (the “FAA”), to the maximum extent permitted by applicable law. As limited by the FAA, these Terms and the JAMS Rules, the arbitrator will have exclusive authority to make all procedural and substantive decisions regarding any dispute and to grant any remedy that would otherwise be available in court, including the power to determine the question of arbitrability. The arbitrator may conduct only an individual arbitration and may not consolidate more than one individual’s claims, preside over any type of class or representative proceeding or preside over any proceeding involving more than one individual.\n                  </Text>\n                  <Text py={2}>\n                    The arbitrator, Idle, and you will maintain the confidentiality of any arbitration proceedings, judgments and awards, including, but not limited to, all information gathered, prepared and presented for purposes of the arbitration or related to the dispute(s) therein. The arbitrator will have the authority to make appropriate rulings to safeguard confidentiality, unless the law provides to the contrary. The duty of confidentiality does not apply to the extent that disclosure is necessary to prepare for or conduct the arbitration hearing on the merits, in connection with a court application for a preliminary remedy or in connection with a judicial challenge to an arbitration award or its enforcement, or to the extent that disclosure is otherwise required by law or judicial decision.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that for any arbitration you initiate, you will pay the filing fee and Idle will pay the remaining JAMS fees and costs. For any arbitration initiated by Idle, Idle will pay all JAMS fees and costs. You and Idle agree that the state or federal courts of the State of New York and the United States sitting in New York City, New York have exclusive jurisdiction over any appeals and the enforcement of an arbitration award.\n                  </Text>\n                  <Text py={2}>\n                    Any claim arising out of or related to these Terms or our Services must be filed within one year after such claim arose; otherwise, the claim is permanently barred, which means that you and Idle will not have the right to assert the claim.\n                  </Text>\n                  <Text py={2}>\n                    You have the right to opt out of binding arbitration within 30 days of the date you first accepted the terms of this Section 12 by emailing us at info@idle.finance. In order to be effective, the opt-out notice must include your full name and address and clearly indicate your intent to opt out of binding arbitration. By opting out of binding arbitration, you are agreeing to resolve disputes in accordance with Section 13.\n                  </Text>\n                  <Text py={2}>\n                    If any portion of this Section 12 is found to be unenforceable or unlawful for any reason, (a) the unenforceable or unlawful provision shall be severed from these Terms; (b) severance of the unenforceable or unlawful provision shall have no impact whatsoever on the remainder of this Section 12 or the parties’ ability to compel arbitration of any remaining claims on an individual basis pursuant to this Section 12; and (c) to the extent that any claims must therefore proceed on a class, collective, consolidated, or representative basis, such claims must be litigated in a civil court of competent jurisdiction and not in arbitration, and the parties agree that litigation of those claims shall be stayed pending the outcome of any individual claims in arbitration. Further, if any part of this Section 12 is found to prohibit an individual claim seeking public injunctive relief, that provision will have no effect to the extent such relief is allowed to be sought out of arbitration, and the remainder of this Section 12 will be enforceable.\n                  </Text>\n                </Box>\n\n                <Box id={'governing-law'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    13. GOVERNING LAW\n                  </Heading.h3>\n                  <Text py={2}>\n                    The interpretation and enforcement of these Terms, and any dispute related to these Terms, the Portal or the Services, will be governed by and construed and enforced in accordance with the laws of the State of Delaware, as applicable, without regard to conflict of law rules or principles (whether of the State of Delaware or any other jurisdiction) that would cause the application of the laws of any other jurisdiction. You agree that we may initiate a proceeding related to the enforcement or validity of our intellectual property rights in any court having jurisdiction. With respect to any other proceeding that is not subject to arbitration under these Terms, the state and federal courts located in Wilmington, Delaware, will have exclusive jurisdiction. You waive any objection to venue in any such courts.\n                  </Text>\n                </Box>\n\n                <Box id={'miscellaneous'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    14. MISCELLANEOUS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Any right or remedy of Idle set forth in these Terms is in addition to, and not in lieu of, any other right or remedy whether described in these Terms, under Applicable Law, at law or in equity. Our failure or delay in exercising any right, power, or privilege under these Terms shall not operate as a waiver thereof. The invalidity or unenforceability of any of these Terms shall not affect the validity or enforceability of any other of these Terms, all of which shall remain in full force and effect. We will have no responsibility or liability for any failure or delay in performance of the Portal or any of the Services, or any loss or damage that you may incur, due to any circumstance or event beyond our control, including without limitation any flood, extraordinary weather conditions, earthquake, or other act of God, fire, war, insurrection, riot, labor dispute, accident, action of government, communications, power failure, or equipment or software malfunction. You may not assign or transfer any right to use the Portal or the Services, or any of your rights or obligations under these Terms, without our express prior written consent, including by operation of law or in connection with any change of control. We may assign or transfer any or all of our rights or obligations under these Terms, in whole or in part, without notice or obtaining your consent or approval. Headings of sections are for convenience only and shall not be used to limit or construe such sections. These Terms contain the entire agreement and supersede all prior and contemporaneous understandings between the parties regarding the Portal and the Services. In the event of any conflict between these Terms and any other agreement you may have with us, these Terms will control unless the other agreement specifically identifies these Terms and declares that the other agreement supersedes these Terms.\n                  </Text>\n                </Box>\n\n              </Box>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default Tos;\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class TorusConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Torus, initParams, ...rest } = kwargs;\n    super(rest);\n\n    this.torus = null;\n    this.Torus = Torus;\n    this.initParams = initParams;\n  }\n\n  async onActivation() {\n    if (!this.torus) {\n      this.torus = new this.Torus({\n        buttonPosition: \"bottom-right\" // default: bottom-left\n      });\n    }\n    await this.torus.init();\n    await this.torus.login();\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.torus.provider);\n    });\n  }\n\n  async getAccount(provider) {\n    const userInfo = await this.torus.getUserInfo();\n    if (userInfo){\n      return await this.torus.getPublicAddress({\n        verifier:userInfo.verifier,\n        verifierId:userInfo.verifierId\n      });\n    }\n    return null;\n  }\n\n  async onDeactivation() {\n    await this.torus.logout();\n  }\n\n  changeNetwork(network) {\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class AuthereumConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Authereum, network, ...rest } = kwargs;\n    super(rest);\n\n    this.authereum = null;\n    this.Authereum = Authereum;\n    this.network = network;\n  }\n\n  async onActivation() {\n    if (!this.authereum) {\n      this.authereum = new this.Authereum(this.network);\n    }\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.authereum.getProvider());\n    });\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      const accounts = await provider.getAccounts();\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.disable();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      api: this.Authereum,\n      network\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletLinkConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletLink, appName, infuraUrl, chainId, appLogoUrl, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.walletLink = null;\n    this.appName = appName;\n    this.chainId = chainId;\n    this.infuraUrl = infuraUrl;\n    this.appLogoUrl = appLogoUrl;\n    this.WalletLink = WalletLink;\n  }\n\n  async onActivation() {\n    if (!this.walletLink){\n      this.walletLink = new this.WalletLink({\n        darkMode: false,\n        appName: this.appName,\n        infuraUrl: this.infuraUrl,\n        appLogoUrl: this.appLogoUrl,\n      });\n    }\n\n    const provider = this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  getProvider(){\n    if (!this.provider){\n      this.provider = this.walletLink.makeWeb3Provider(this.infuraUrl, this.chainId);\n    }\n    return this.provider;\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      // Use eth_RequestAccounts\n      const accounts = await provider.send('eth_requestAccounts');\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = this.getProvider();\n    if (provider){\n      await provider.close();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      network,\n      api: this.WalletLink,\n      appName: this.appName,\n      chainId: this.chainId,\n      infuraUrl: this.infuraUrl,\n      appLogoUrl: this.appLogoUrl,\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletConnectConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletConnectProvider, defaultNetwork, infuraId, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.WalletConnectProvider = WalletConnectProvider;\n    this.infuraId = infuraId;\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.WalletConnectProvider({\n        infuraId:this.infuraId\n      });\n    }\n\n    // console.log('onActivation',this.provider);\n\n    if (this.provider){\n\n      await this.provider.enable();\n\n      /*\n      // Subscribe to accounts change\n      this.provider.on(\"accountsChanged\", (accounts) => {\n        console.log('accountsChanged',accounts);\n      });\n\n      // Subscribe to chainId change\n      this.provider.on(\"chainChanged\", (chainId) => {\n        console.log('chainChanged',chainId);\n      });\n\n      // Subscribe to networkId change\n      this.provider.on(\"networkChanged\", (networkId) => {\n        console.log('networkChanged',networkId);\n      });\n\n      // Subscribe to session connection/open\n      this.provider.on(\"open\", () => {\n        console.log('open');\n      });\n\n      // Subscribe to session disconnection/close\n      this.provider.on(\"close\", (code, reason) => {\n        console.log('close',code, reason);\n      });\n      */\n\n      return this.provider;\n    }\n  }\n\n  async getProvider(){\n    return this.provider;\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.close();\n      return this.provider;\n    }\n  }\n}\n","import WalletLink from 'walletlink';\nimport AuthereumApi from 'authereum';\nimport PortisApi from \"@portis/web3\";\nimport FortmaticApi from \"fortmatic\";\nimport TrezorApi from \"trezor-connect\";\nimport { Connectors } from \"web3-react\";\nimport TorusApi from '@toruslabs/torus-embed';\nimport globalConfigs from '../configs/globalConfigs';\nimport TorusConnector from './connectors/TorusConnector';\nimport AuthereumConnector from './connectors/AuthereumConnector';\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport WalletLinkConnector from './connectors/WalletLinkConnector';\nimport WalletConnectConnector from './connectors/WalletConnectConnector';\n\nconst {\n  InjectedConnector,\n  NetworkOnlyConnector,\n  TrezorConnector,\n  LedgerConnector,\n  FortmaticConnector,\n  PortisConnector\n} = Connectors;\n\nconst env = process.env;\n\nconst manifestEmail = env.REACT_APP_TREZOR_MANIFEST_EMAIL; // trezor\nconst manifestAppUrl = env.REACT_APP_TREZOR_MANIFEST_URL; // trezor\nconst defaultNetwork = globalConfigs.network.requiredNetwork;\nconst fortmaticApiKey = env.REACT_APP_FORTMATIC_KEY_MAINNET;\nconst portisDAppId = env.REACT_APP_PORTIS_DAPP_ID;\nconst portisNetwork = env.REACT_APP_PORTIS_NETWORK;\n\nconst supportedNetworkURLs = {};\n  \nObject.keys(globalConfigs.network.providers.infura).forEach((networkId,index) => {\n  supportedNetworkURLs[networkId] = globalConfigs.network.providers.infura[networkId]+env.REACT_APP_INFURA_KEY;\n});\n\nconst Injected = new InjectedConnector({\n  supportedNetworks: [defaultNetwork]\n});\n\nconst Infura = new NetworkOnlyConnector({\n  providerURL: globalConfigs.network.providers.infura[defaultNetwork]+env.REACT_APP_INFURA_KEY\n});\n\n\nconst Trezor = new TrezorConnector({\n  api: TrezorApi,\n  supportedNetworkURLs,\n  defaultNetwork,\n  manifestEmail,\n  manifestAppUrl\n});\n\nconst Ledger = new LedgerConnector({\n  supportedNetworkURLs,\n  defaultNetwork\n});\n\nconst WalletConnect = new WalletConnectConnector({\n  defaultNetwork,\n  supportedNetworkURLs,\n  api: WalletConnectProvider,\n  infuraId:env.REACT_APP_INFURA_KEY,\n  bridge: \"https://bridge.walletconnect.org\",\n});\n\nconst Fortmatic = new FortmaticConnector({\n  api: FortmaticApi,\n  apiKey: fortmaticApiKey,\n  logoutOnDeactivation: false\n});\n\nconst Portis = new PortisConnector({\n  api: PortisApi,\n  dAppId: portisDAppId,\n  network: portisNetwork\n});\n\nconst Authereum = new AuthereumConnector({\n  api: AuthereumApi,\n  network: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase()\n});\n\nconst walletLink = new WalletLinkConnector({\n  api: WalletLink,\n  darkMode: false,\n  chainId: defaultNetwork,\n  appName: globalConfigs.appName,\n  infuraUrl: supportedNetworkURLs[defaultNetwork],\n  appLogoUrl: 'https://idle.finance/images/idle-mark.png',\n});\n\nconst Torus = new TorusConnector({\n  api: TorusApi,\n  initParams:{\n    buildEnv: 'production', // default: production\n    enableLogging: false, // default: false\n    network: {\n      host: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase(), // default: mainnet\n      chainId: defaultNetwork, // default: 1\n      networkName: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase() // default: Main Ethereum Network\n    },\n    showTorusButton: false // default: true\n  }\n});\n\nexport default {\n  Injected,\n  Infura,\n  WalletConnect,\n  walletLink,\n  Fortmatic,\n  Portis,\n  Authereum,\n  Torus,\n  Trezor,\n  Ledger,\n};","import React, { Component } from 'react';\nimport { Box, Flex, Icon, Text, Heading } from 'rimble-ui'\n// import styles from './Faquestion.module.scss';\n\nclass Faquestion extends Component {\n  state = {\n    isShowingAnswer: false\n  };\n  toggleAnswer(e) {\n    e.preventDefault();\n    this.setState(state => ({...state, isShowingAnswer: !state.isShowingAnswer}));\n  };\n  render() {\n    return (\n      <Flex\n        my={[3,3]}\n        py={[3,3]}\n        px={[4,4]}\n        flexDirection={'column'}\n        alignItems={'baseline'}\n        justifyContent={'center'}\n        backgroundColor={'white'}\n        borderRadius={ this.props.isOpened ? '30px' : '50px' }\n        boxShadow={1}\n      >\n        <Flex flexDirection={'row'} alignItems={'center'} width={1} onClick={this.props.handleClick} style={{cursor: 'pointer'}}>\n          <Box width={4/5}>\n            <Heading.h4\n              fontSize={[1,2]}\n              fontFamily={'sansSerif'}\n              fontWeight={3}\n              color={this.props.isOpened ? 'blue' : 'dark-gray'}\n              my={0}>\n                {this.props.question}\n              </Heading.h4>\n          </Box>\n          <Flex width={1/5} justifyContent={'flex-end'}>\n            <Icon\n              name={this.props.isOpened ? 'KeyboardArrowUp' : 'KeyboardArrowDown'}\n              color={this.props.isOpened ? 'blue' : 'copyColor'}\n              size={\"1.5em\"}\n            />\n          </Flex>\n        </Flex>\n        <Flex width={1}>\n          {this.props.isOpened &&\n            <Text.p textAlign={'justify'} fontSize={[1,2]} dangerouslySetInnerHTML={{ __html: this.props.answer }}></Text.p>\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Faquestion;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport Faquestion from '../Faquestion/Faquestion';\nimport { Box, Flex, Text, Heading } from 'rimble-ui'\n\nclass Faq extends Component {\n  state = {\n    openedAnswer:null,\n    selectedSection: 'general',\n    generalQuestions: [\n      {\n        q: 'What is Idle?',\n        a: `Idle is a decentralized rebalancing protocol that allows users to automatically and algorithmically manage their digital asset allocation among different third-party DeFi protocols. You can choose to maximize your interest rate returns through our MaxYield strategy or minimize your risk exposure through our RiskAdjusted allocation strategy.`\n      },\n      {\n        q: 'What third-party protocols and assets does Idle support?',\n        a: `Idle connects with Compound, Aave, dYdX, Fulcrum, and DSR, and supports DAI, USDC and USDT.  Security is fundamental at Idle, meaning that our products will only connect to protocols that are audited by a top security firm and battle-tested in terms of time in market and digital assets locked. To add more security, we passed through multiple audit reviews and we use <a href=\"https://defiscore.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">DeFiScore</a> risk assessment to evaluate the risk across DeFi protocols.`\n      },\n      {\n        q: 'Can you walk me through an example?',\n        a: `When utilizing the Idle protocol, a user supplies capital for lending as a part of Idle’s non-custodial smart contract pools; the protocol will automatically rebalance the pool’s current allocation to achieve optimized interest rates, based on the strategy.`\n      }\n    ],\n    guidelinesQuestions: [\n      {\n        q: 'How do I manage my assets?',\n        a: `You can access Idle’s user dashboard where you can deposit funds, monitor performances and see insights, rebalance funds, convert from FIAT to crypto, and redeem back your assets.`\n      },\n      {\n        q: 'How does the rebalancing process work?',\n        a: `A rebalance calculation involves assessing the total assets within a pool, incorporating underlying protocol rate functions and levels of supply and demand, and finally determining an allocation that achieves the optimal interest rate possible after the rebalance takes place, based on the strategy.`\n      },\n      {\n        q: 'What are IdleTokens?',\n        a: `IdleTokens represent your balance in the protocol, and accrue interest over time. As a specific Idle’s pool earns interest, its idleToken becomes convertible into an increasing quantity of the underlying asset. IdleTokens conform to the ERC-20 standard.`\n      }\n    ],\n    ratesQuestions: [\n      {\n        q: 'Has Idle had a security audit?',\n        a: `Idle completed multiple and incremental security audits with Quantstamp in December 2019 and April/May 2020 (<a href=\"https://certificate.quantstamp.com/full/idle-finance\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">view the report</a>). Any issues affecting the performance of the protocol or security of funds have been resolved. Users should review our Terms of Service before using the protocol.`\n      },\n      {\n        q: 'How are digital assets custodied?',\n        a: `Idle does not custody digital assets. When you interact with the Idle protocol, your digital assets will be sent to a smart contract that Idle does not control. The smart contract has the concept of “accounts,” to which only you have access. These accounts have balances for each asset, which then are lent out to underlying protocols. When you want to withdraw, the smart contract interacts with the underlying platforms to withdraw digital assets and route them to your wallet.`\n      },\n      {\n        q: 'Who is the administrator of the Idle smart contract?',\n        a: `We have few administrative privileges (eg pause deposits in case of emergency), but we cannot, in any case, withdraw or move user funds directly. You can read more about here <a href=\"https://developers.idle.finance/advanced/admin-powers\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://developers.idle.finance/advanced/admin-powers</a>`\n      }\n    ]\n  };\n  setSection(section) {\n    this.setState(state => ({...state, selectedSection: section, openedAnswer: null}));\n  }\n\n  toggleAnswer(e,i) {\n    e.preventDefault();\n    this.setState(state => ({...state, openedAnswer: state.openedAnswer===i ? null : i }));\n  };\n\n  render() {\n    const {generalQuestions, selectedSection, guidelinesQuestions, ratesQuestions} = this.state;\n    const generalDivs = generalQuestions.map((question, i) => (\n      <Faquestion handleClick={ e => this.toggleAnswer(e,i) } isOpened={this.state.openedAnswer === i} key={`general-${i}`} question={question.q} answer={question.a} pt={i === 0 ? 0 : ''} />\n    ));\n    const guidelinesDivs = guidelinesQuestions.map((question, i) => (\n      <Faquestion handleClick={ e => this.toggleAnswer(e,i) } isOpened={this.state.openedAnswer === i} key={`guidelines-${i}`} question={question.q} answer={question.a} pt={i === 0 ? 0 : ''} />\n    ));\n    const ratesDivs = ratesQuestions.map((question, i) => (\n      <Faquestion handleClick={ e => this.toggleAnswer(e,i) } isOpened={this.state.openedAnswer === i} key={`rates-${i}`} question={question.q} answer={question.a} pt={i === 0 ? 0 : ''} />\n    ));\n    const isGeneralSelected = selectedSection === 'general';\n    const isGuidelinesSelected = selectedSection === 'guidelines';\n    const isRatesSelected = selectedSection === 'rates';\n    return (\n      <Flex\n        flexDirection={'column'}\n      >\n        <Title\n          mb={3}\n          mt={[3,4]}\n          fontWeight={5}\n          fontSize={[5,6]}\n          component={Heading.h4}\n        >\n          Frequently asked questions\n        </Title>\n\n        <Flex\n          flexDirection={'column'}\n          justifyContent={\"center\"}\n          alignItems={'center'}\n        >\n          <Flex width={[1,3/5]} px={[2,0]} flexDirection={'row'} justifyContent={'space-between'}>\n            <Flex width={1/3} textAlign={'center'} justifyContent={'center'} borderBottom={ isGeneralSelected ? '3px solid #0036ff' : 'none'}>\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[2, 3]}\n                textAlign={'center'}\n                onClick={() => this.setSection('general')}\n                color={isGeneralSelected ? 'blue' : 'copyColor'}\n                className={['pointer', isGeneralSelected ? 'selected' : '']}\n              >\n                General\n              </Text>\n            </Flex>\n            <Flex width={1/3} textAlign={'center'} justifyContent={'center'} borderBottom={ isGuidelinesSelected ? '3px solid #0036ff' : 'none'}>\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[2, 3]}\n                textAlign={'center'}\n                onClick={() => this.setSection('guidelines')}\n                color={isGuidelinesSelected ? 'blue' : 'copyColor'}\n                className={['pointer', isGuidelinesSelected ? 'selected' : '']}\n              >\n                Liquidity Providers\n              </Text>\n            </Flex>\n            <Flex width={1/3} textAlign={'center'} justifyContent={'center'} borderBottom={ isRatesSelected ? '3px solid #0036ff' : 'none'}>\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[2, 3]}\n                textAlign={'center'}\n                onClick={() => this.setSection('rates')}\n                color={isRatesSelected ? 'blue' : 'copyColor'}\n                className={['pointer', isRatesSelected ? 'selected' : '']}\n              >\n                Security\n              </Text>\n            </Flex>\n          </Flex>\n          <Box width={1} mt={[3, 4]} mb={[4, 0]}>\n            {isGeneralSelected && generalDivs}\n            {isGuidelinesSelected && guidelinesDivs}\n            {isRatesSelected && ratesDivs}\n          </Box>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Faq;\n","import React, { Component } from 'react';\nimport { Flex, Link, Image } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass FlexCards extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n\n    const itemPerc = this.props.itemsPerRow ? Math.floor(100/this.props.itemsPerRow)-2 : Math.floor(100/this.props.cards.length)-1;\n    const justifyContent = this.props.justifyContent ? this.props.justifyContent : 'space-between';\n\n    return (\n      <Flex\n        width={1}\n        px={[3,0]}\n        style={{\n          flexWrap:'wrap'\n        }}\n        alignItems={'flex-start'}\n        justifyContent={justifyContent}\n        flexDirection={['column','row']}\n      >\n        {\n          this.props.cards.map( (p,index) => (\n            <DashboardCard\n              isInteractive={true}\n              key={`card_${index}`}\n              cardProps={{\n                p:2,\n                mb:[2,3],\n                display:'flex',\n                alignItems:'center',\n                height:['65px','80px'],\n                justifyContent:'center',\n                mx: justifyContent !== 'space-between' ? [0,2] : 0,\n                style:{\n                  textAlign:'center',\n                  flex:this.props.isMobile ? null : `0 ${itemPerc}%`,\n                }\n              }}\n            >\n              {\n                p.link ? (\n                  <Link\n                    px={[5,4]}\n                    style={{\n                      width:'100%',\n                      height:'100%',\n                      display:'flex',\n                      alignItems:'center',\n                      justifyContent:'center',\n                    }}\n                    href={p.link}\n                    target={'_blank'}\n                    textAlign={'center'}\n                    rel={'nofollow noopener noreferrer'}\n                  >\n                    <Image\n                      src={p.image}\n                      width={'auto'}\n                      height={'auto'}\n                      maxHeight={'50px'}\n                    />\n                  </Link>\n                ) : (\n                  <Image\n                    src={p.image}\n                    width={'auto'}\n                    height={'auto'}\n                    maxHeight={['35px','50px']}\n                  />\n                )\n              }\n            </DashboardCard>\n            \n          ) )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default FlexCards;","import React, { Component } from 'react';\nimport { Flex, Text, Link, Icon } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass AuditCard extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          p:3,\n          my:[2,0],\n          mx:[0,3],\n          width:[1,'auto']\n        }}\n        isInteractive={this.props.link ? true : false}\n        handleClick={this.props.link ? e => window.open(this.props.link) : null}\n      >\n        <Flex\n          flexDirection={'column'}\n        >\n          <Text\n            mb={2}\n            color={'blue'}\n            fontSize={[1,3]}\n          >\n            {this.props.date}\n          </Text>\n          <Text\n            mb={2}\n            fontSize={4}\n            fontWeight={500}\n          >\n            {this.props.title}\n          </Text>\n          <Link\n            hoverColor={'blue'}\n            style={{\n              display:'flex',\n              borderRadius:'8px',\n              flexDirection:'row',\n              alignItems:'center'\n            }}\n          >\n            VIEW REPORT\n            <Icon\n              ml={1}\n              size={'1.3em'}\n              color={'blue'}\n              style={{\n                transform:'rotate(180deg)'\n              }}\n              name={'KeyboardBackspace'}\n            />\n          </Link>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default AuditCard;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport styles from './HowItWorks.module.scss';\nimport { Box, Flex, Heading, Image } from \"rimble-ui\";\n\nclass HowItWorks extends Component {\n\n  async componentWillMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps,prevState){\n\n  }\n\n  render() {\n    return (\n      <Box\n        p={[3,4]}\n        id={'how-it-works'}\n      >\n        <Flex flexDirection={['column','column']} alignItems={'center'} justifyContent={'center'}>\n          <Title\n            mt={[3,4]}\n            mb={[3,4]}\n            fontWeight={5}\n            fontSize={[5,6]}\n            component={Heading.h4}\n          >\n            How it works\n          </Title>\n          <Flex\n            width={1}\n            alignItems={'center'}\n            maxWidth={['24em','90em']}\n            flexDirection={['column','row']}\n          >\n            <Flex\n              p={[3,3]}\n              mx={[0,2]}\n              my={[2,0]}\n              width={[1,1/4]}\n              position={'relative'}\n              flexDirection={'column'}\n              className={styles.bulletCard}\n            >\n              <Flex\n                mb={2}\n                width={1}\n                alignItems={'center'}\n                justifyContent={'center'}\n              >\n                <Image width={['2.5em','3.3em']} src={'images/how-it-works/choose-strategy.svg'} />\n              </Flex>\n              <Box width={1}>\n                <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontSize={[3,3]} mb={[1,2]} color={'blue'}>\n                  Choose your strategy\n                </Heading.h3>\n                <Heading.h4 fontSize={1} px={[1,0]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                  Build your portfolio with different allocation strategies that aim to maximize your returns and keeping you in your risk comfort zone\n                </Heading.h4>\n              </Box>\n            </Flex>\n\n            <Flex\n              p={[3,3]}\n              mx={[0,2]}\n              my={[2,0]}\n              width={[1,1/4]}\n              position={'relative'}\n              flexDirection={'column'}\n              className={styles.bulletCard}\n            >\n              <Flex\n                mb={2}\n                width={1}\n                alignItems={'center'}\n                justifyContent={'center'}\n              >\n                <Image width={['2.5em','3.3em']} src={'images/how-it-works/deposit-stablecoins.svg'} />\n              </Flex>\n              <Box width={1}>\n                <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontSize={[3,3]} mb={[1,2]} color={'blue'}>\n                  Deposit your crypto-assets\n                </Heading.h3>\n                <Heading.h4 fontSize={1} px={[1,0]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                  Just deposit and relax. Your funds will be automatically allocated among DeFi protocols and you will immediately start earning interest.\n                </Heading.h4>\n              </Box>\n            </Flex>\n\n            <Flex\n              p={[3,3]}\n              mx={[0,2]}\n              my={[2,0]}\n              width={[1,1/4]}\n              position={'relative'}\n              flexDirection={'column'}\n              className={styles.bulletCard}\n            >\n              <Flex\n                mb={2}\n                width={1}\n                alignItems={'center'}\n                justifyContent={'center'}\n              >\n                <Image width={['2.5em','3.3em']} src={'images/how-it-works/rebalance.svg'} />\n              </Flex>\n              <Box width={1}>\n                <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontSize={[3,3]} mb={[1,2]} color={'blue'}>\n                  Automated Rebalancing\n                </Heading.h3>\n                <Heading.h4 fontSize={1} px={[1,0]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                  Idle automatically keeps the appropriate allocation mix, depending on the strategy. Idle consistently checks for better opportunities.\n                </Heading.h4>\n              </Box>\n            </Flex>\n            <Flex\n              p={[3,3]}\n              mx={[0,2]}\n              my={[2,0]}\n              width={[1,1/4]}\n              position={'relative'}\n              flexDirection={'column'}\n              className={styles.bulletCard}\n            >\n              <Flex\n                mb={2}\n                width={1}\n                alignItems={'center'}\n                justifyContent={'center'}\n              >\n                <Image width={['2.5em','3.3em']} src={'images/how-it-works/insights-redeem.svg'} />\n              </Flex>\n              <Box width={1}>\n                <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontSize={[3,3]} mb={[1,2]} color={'blue'}>\n                  Easy insights and redeem\n                </Heading.h3>\n                <Heading.h4 fontSize={1} px={[1,0]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                  Monitor your funds’ performance and rebalance events, see your estimated earnings and easlily redeem back your funds + interest.\n                </Heading.h4>\n              </Box>\n            </Flex>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default HowItWorks;","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Link, Icon, Tooltip, Image } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass StrategyBox extends Component {\n\n  state = {\n    selectedToken:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentDidMount(){\n    this.getHighestAprToken();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized && this.props.contractsInitialized;\n    if (contractsInitialized){\n      this.getHighestAprToken();\n    }\n  }\n\n  getHighestAprToken = async () => {\n\n    const strategyInfo = this.functionsUtil.getGlobalConfig(['strategies',this.props.strategy]);\n\n    if (!this.props.contractsInitialized || strategyInfo.comingSoon){\n      return false;\n    }\n\n    let selectedToken = null;\n    let highestValue = null;\n    const tokensAprs = {};\n    const availableTokens = this.props.availableStrategies[this.props.strategy];\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      switch (this.props.strategy){\n        case 'best':\n        default:\n          const tokenAPR = await this.functionsUtil.getTokenAprs(tokenConfig);\n          if (tokenAPR && tokenAPR.avgApr !== null){\n            tokensAprs[token] = tokenAPR.avgApr;\n            if (!highestValue || highestValue.lt(tokenAPR.avgApr)){\n              highestValue = tokenAPR.avgApr;\n              selectedToken = token;\n            }\n          }\n        break;\n        case 'risk':\n        const tokenScore = await this.functionsUtil.getTokenScore(tokenConfig,true);\n          if (!highestValue || highestValue.lt(tokenScore)){\n            highestValue = tokenScore;\n            selectedToken = token;\n          }\n        break;\n      }\n    });\n\n    this.setState({\n      selectedToken\n    });\n  }\n\n  render() {\n    const strategyInfo = this.functionsUtil.getGlobalConfig(['strategies',this.props.strategy]);\n    const strategyUrl = '/#'+this.functionsUtil.getGlobalConfig(['dashboard','baseRoute'])+'/'+this.props.strategy;\n    // const chartColor = strategyInfo.chartColor ? strategyInfo.chartColor : null;\n    const tokenConfig = this.state.selectedToken ? this.props.availableStrategies[this.props.strategy][this.state.selectedToken] : null;\n\n    return (\n      <DashboardCard\n        cardProps={{\n          pt:[3,3],\n          mt:[3,0],\n          ml:['0.35em',0],\n          width:[1,'21em'],\n          mr:['0.35em','2em'],\n          alignItems:'center',\n          flexDirection:'column',\n          justifyContent:'flex-start',\n          height:['fit-content','400px']\n        }}\n        isVisible={ typeof this.props.isVisible !== 'undefined' ? this.props.isVisible : true }\n      >\n        <Flex\n          mb={2}\n          justifyContent={'center'}\n        >\n          <Image\n            src={strategyInfo.icon}\n            height={['2.2em','2.8em']}\n          />\n        </Flex>\n        <Flex\n          my={2}\n          alignItems={'center'}\n          justifyContent={'center'}\n        >\n          <Title\n            fontWeight={5}\n            fontSize={[4,'1.7em']}\n          >\n            {strategyInfo.title}\n          </Title>\n        </Flex>\n        <Flex\n          mt={2}\n          mb={[2,3]}\n          minHeight={'50px'}\n          alignItems={'flex-start'}\n          justifyContent={'center'}\n        >\n          <Text\n            px={[3,4]}\n            fontWeight={500}\n            textAlign={'center'}\n          >\n            {strategyInfo.desc}\n          </Text>\n        </Flex>\n        {\n          strategyInfo.comingSoon ? (\n            <Flex\n              mt={3}\n              mb={[0,3]}\n              height={'126px'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n              alignItems={['flex-end','end']}\n            >\n              <Image\n                width={1}\n                src={'/images/strategy-placeholder.jpg'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              mt={[0,3]}\n              flexDirection={'row'}\n              alignItems={'flex-start'}\n              justifyContent={'center'}\n              minHeight={['69px','88px']}\n            >\n              <Flex\n                width={0.5}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n                borderRight={`1px solid ${this.props.theme.colors.divider}`}\n              >\n                <Flex\n                  width={1}\n                  alignItems={'center'}\n                  justifyContent={'center'}\n                >\n                  <Text\n                    fontSize={2}\n                    fontWeight={4}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    APY\n                  </Text>\n                  <Tooltip\n                    placement={'bottom'}\n                    message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                  >\n                    <Icon\n                      ml={1}\n                      name={\"Info\"}\n                      size={'1em'}\n                      color={'cellTitle'}\n                    />\n                  </Tooltip>\n                </Flex>\n                <AssetField\n                  fieldInfo={{\n                    name:'apy',\n                    showTooltip:false,\n                    props:{\n                      decimals:2,\n                      fontWeight:4,\n                      color:'copyColor',\n                      textAlign:'center',\n                      fontSize:[3,'1.8em'],\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    },\n                  }}\n                  {...this.props}\n                  tokenConfig={ tokenConfig }\n                  token={this.state.selectedToken}\n                  selectedStrategy={this.props.strategy}\n                />\n                <AssetField\n                  fieldInfo={{\n                    showLoader:false,\n                    name:'idleDistribution',\n                    props:{\n                      decimals:2,\n                      fontWeight:2,\n                      fontSize:[0,1],\n                      color:'cellText',\n                      textAlign:'center',\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    },\n                  }}\n                  {...this.props}\n                  tokenConfig={ tokenConfig }\n                  token={this.state.selectedToken}\n                  selectedStrategy={this.props.strategy}\n                />\n              </Flex>\n              <Flex\n                width={0.5}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Flex\n                  width={1}\n                  alignItems={'center'}\n                  justifyContent={'center'}\n                >\n                  <Text\n                    fontSize={2}\n                    fontWeight={4}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    SCORE\n                  </Text>\n                  <Tooltip\n                    placement={'bottom'}\n                    message={this.functionsUtil.getGlobalConfig(['messages','scoreShort'])}\n                  >\n                    <Icon\n                      ml={1}\n                      name={\"Info\"}\n                      size={'1em'}\n                      color={'cellTitle'}\n                    />\n                  </Tooltip>\n                </Flex>\n                <AssetField\n                  fieldInfo={{\n                    name:'score',\n                    props:{\n                      fontWeight:4,\n                      color:'copyColor',\n                      textAlign:'center',\n                      fontSize:[3,'1.8em'],\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    },\n                  }}\n                  {...this.props}\n                  tokenConfig={ tokenConfig }\n                  token={this.state.selectedToken}\n                  selectedStrategy={this.props.strategy}\n                />\n              </Flex>\n            </Flex>\n          )\n        }\n        {\n          !strategyInfo.comingSoon && \n            <Flex\n              mt={2}\n              width={1}\n              height={'60px'}\n              flexDirection={'row'}\n              alignItems={'center'}\n              justifyContent={'center'}\n              id={`${this.props.strategy}_performance_chart`}\n            >\n              <Image\n                width={1}\n                height={'60px'}\n                src={`/images/strategies/${this.props.strategy}-chart.png`} />\n              {\n                /*\n                <AssetField\n                  fieldInfo={{\n                    name:'aprChart'\n                  }}\n                  chartProps={{\n                    lineWidth:2\n                  }}\n                  {...this.props}\n                  color={chartColor}\n                  tokenConfig={tokenConfig}\n                  token={this.state.selectedToken}\n                  rowId={`${this.props.strategy}_performance_chart`}\n                />\n                */\n              }\n            </Flex>\n        }\n        <Flex\n          width={1}\n          height={'64px'}\n          position={'relative'}\n          boxShadow={'0px -6px 6px -4px rgba(0,0,0,0.1)'}\n        >\n          {\n            strategyInfo.comingSoon ? (\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <Text\n                  mr={2}\n                  fontSize={3}\n                  fontWeight={550}\n                  color={'copyColor'}\n                  style={{\n                    fontStyle:'italic'\n                  }}\n                  hoverColor={'copyColor'}\n                >\n                  Coming Soon\n                </Text>\n              </Flex>\n            ) : (\n              <Link\n                href={strategyUrl}\n                style={{display:'flex',width:'100%'}}\n                >\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      mr={2}\n                      fontSize={3}\n                      fontWeight={4}\n                      color={'copyColor'}\n                      hoverColor={'copyColor'}\n                    >\n                      Start with {strategyInfo.title}\n                    </Text>\n                    <Icon\n                      size={'1.2em'}\n                      color={'copyColor'}\n                      name={'ArrowForward'}\n                    />\n                  </Flex>\n              </Link>\n            )\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default StrategyBox;\n","import React, { Component } from \"react\";\nimport { Flex, Box, Button, Form, Text, Checkbox, Link } from 'rimble-ui';\nimport axios from 'axios';\nimport styles from './NewsletterForm.module.scss';\nimport globalConfigs from '../configs/globalConfigs';\n\nclass NewsletterForm extends Component {\n  state = {\n    validated: false,\n    privacy: false,\n    email: null,\n    message: ''\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = { validated: false };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleValidation = this.handleValidation.bind(this);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    if (!this.state.privacy){\n      this.setState({message:'Please check the privacy policy box to proceed.', messageColor:'red' });\n      return false;\n    }\n\n    this.setState({validated:true });\n\n    axios.post(globalConfigs.newsletterSubscription.endpoint, {\n      'email': this.state.email\n    }).then(r => {\n      if (r.data.status === 'success'){\n        this.setState({message:'Thanks! Check your e-mail and confirm your subscription', messageColor:'green' });\n      } else {\n        this.setState({message:'Error while sending your subscription... Please try again', messageColor:'red' });\n      }\n    })\n    .catch(err => {\n      this.setState({message:'Error while sending your subscription... Please try again', messageColor:'red' });\n    });\n  }\n\n  toggleCheckbox(e) {\n    this.setState({ privacy: e.target.checked });\n  }\n\n  handleValidation(e) {\n    if (e && e.target) {\n      this.setState({ email: e.target.value });\n      e.target.parentNode.classList.add(\"was-validated\");\n    }\n  }\n\n  render() {\n\n    return (\n        <Box mt={[2,3]} maxWidth={'45em'} width={1}>\n          <Form onSubmit={this.handleSubmit}>\n            <Flex flexDirection={['column','row']} alignItems={['center','flex-start']} justifyContent={'center'}>\n              <Box width={[1,7/10]}>\n                <Form.Field width={1} label={''}>\n                  <Form.Input\n                    type=\"email\"\n                    name=\"EMAIL\"\n                    required\n                    width={1}\n                    outline={'none'}\n                    border={0}\n                    fontSize={[2,5]}\n                    borderRadius={0}\n                    pl={0}\n                    pb={3}\n                    textAlign={['center','left']}\n                    placeholder={'Enter your e-mail'}\n                    boxShadow={'none !important'}\n                    borderBottom={'1px solid #a6a6a6'}\n                    onChange={this.handleValidation}\n                  />\n                </Form.Field>\n                <Flex mb={[3,0]} flexDirection={'row'} alignItems={'center'}>\n                  <Checkbox onClick={ e => this.toggleCheckbox(e) } label={'I\\'ve read and accepted the'} required />\n                  <Link color={'blue'} hoverColor={'blue'} target={'_blank'} rel=\"nofollow noopener noreferrer\" href={\"https://www.iubenda.com/privacy-policy/61211749\"}>Privacy Policy</Link>\n                </Flex>\n                {this.state.message && this.state.message.length &&\n                  <Text.p py={0} mt={[2,3]} mb={3} textAlign={['center','left']} color={this.state.messageColor}>{this.state.message}</Text.p>\n                }\n              </Box>\n              <Box width={[1,3/10]} my={[0,'26px']}>\n                <Button className={styles.gradientButton} type=\"submit\" width={1}>\n                  GET UPDATES\n                </Button>\n              </Box>\n            </Flex>\n          </Form>\n        </Box>\n    );\n  }\n}\nexport default NewsletterForm;\n","import { Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\n\nclass RoundIconButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      p:0,\n      boxShadow:1,\n      width:'40px',\n      height:'40px',\n      mainColor:'white',\n      borderRadius:'50%',\n      disabled:this.props.disabled\n    },this.props.buttonProps);\n\n    buttonProps.minWidth = buttonProps.width;\n\n    return (\n       <RoundButton\n         buttonProps={buttonProps}\n         handleClick={this.props.handleClick}\n       >\n         <Icon\n           color={'copyColor'}\n           name={this.props.iconName}\n           size={ this.props.iconSize ? this.props.iconSize : '1.3em'}\n         />\n       </RoundButton>\n    );\n  }\n}\n\nexport default RoundIconButton;","import React, { Component } from 'react';\nimport { Flex, ToastMessage, Link, Icon } from \"rimble-ui\";\n\nclass FloatingToastMessage extends Component {\n  state = {}\n\n  render() {\n    let ToastComponent = null;\n\n    switch (this.props.variant){\n      case 'success':\n        ToastComponent = ToastMessage.Success;\n      break;\n      case 'processing':\n        ToastComponent = ToastMessage.Processing;\n      break;\n      case 'failure':\n        ToastComponent = ToastMessage.Failure;\n      break;\n      default:\n      break;\n    }\n\n    if (ToastComponent){\n      return (\n        <Flex width={ !this.props.isMobile ? '420px': '100vw' } position={'fixed'} zIndex={'9999'} p={ !this.props.isMobile ? '1em' : 0 } right={'0'} bottom={'0'}>\n          <ToastComponent\n            style={{width:'100%'}}\n            message={this.props.message}\n            secondaryMessage={this.props.secondaryMessage}\n            closeElem={false}\n          />\n          <Link onClick={this.props.handleClose} style={ this.props.isMobile ? {position:'absolute',top:'10px',right:'10px',width:'20px',height:'20px'} : {position:'absolute',top:'22px',right:'22px',width:'16px',height:'16px'}}>\n            <Icon\n              name={'Close'}\n              color={'dark-gray'}\n              size={ this.props.isMobile ? '20' : '16' }\n            />\n          </Link>\n        </Flex>\n      );\n    }\n\n    return null;\n  }\n}\n\nexport default FloatingToastMessage;","import Title from '../Title/Title';\nimport CountUp from 'react-countup';\nimport { Box, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass AssetsUnderManagement extends Component {\n\n  state = {\n    totalAUM:null,\n    totalAUMEndOfYear:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalAUM();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalAUM();\n    }\n  }\n\n  async loadTotalAUM(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const {\n      avgAPY,\n      totalAUM\n    } = await this.functionsUtil.getAggregatedStats();\n\n    const totalAUMEndOfYear = totalAUM.plus(totalAUM.times(avgAPY.div(100)));\n\n    this.setState({\n      totalAUM,\n      totalAUMEndOfYear\n    });\n  }\n\n  render() {\n    return this.state.totalAUM ? (\n      <Box\n        width={1}\n      >\n        <CountUp\n          delay={0}\n          decimals={4}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          duration={31536000}\n          start={parseFloat(this.state.totalAUM)}\n          end={parseFloat(this.state.totalAUMEndOfYear)}\n          formattingFn={ n => '$ '+this.functionsUtil.formatMoney(n,4) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              style={ this.props.counterStyle ? this.props.counterStyle : {\n                display:'block',\n                color:'dark-gray',\n                whiteSpace:'nowrap',\n                fontFamily:this.props.theme.fonts.counter,\n                fontWeight:this.props.theme.fontWeights[5],\n                textAlign: this.props.isMobile ? 'center' : 'right',\n                fontSize: this.props.isMobile ? '1.6em' : this.props.theme.fontSizes[6]\n              }}\n              ref={countUpRef}\n            />\n          )}\n        </CountUp>\n        {\n          (typeof this.props.subtitle === 'undefined' || this.props.subtitle) && (\n            <Title\n              fontWeight={3}\n              fontSize={[2,2]}\n              color={'cellTitle'}\n              textAlign={['center','right']}\n              {...this.props.subtitleProps}\n            >\n              {\n                this.props.subtitle ? this.props.subtitle : (\n                  <Text.span fontWeight={'inherit'} color={'inherit'} fontSize={'inherit'}>Assets Under Management <Text.span color={'cellTitle'} fontWeight={3} fontSize={'70%'}>(V3 + V4)</Text.span></Text.span>\n                )\n              }\n            </Title>\n          )\n        }\n      </Box>\n    ) : null;\n  }\n}\n\nexport default AssetsUnderManagement;\n","import Faq from '../Faq/Faq';\nimport Title from '../Title/Title';\nimport Footer from '../Footer/Footer';\nimport React, { Component } from 'react';\nimport ExtLink from '../ExtLink/ExtLink';\nimport styles from './Landing.module.scss';\nimport FlexCards from '../FlexCards/FlexCards';\nimport AuditCard from '../AuditCard/AuditCard';\nimport HowItWorks from '../HowItWorks/HowItWorks';\nimport AssetField from '../AssetField/AssetField';\nimport RoundButton from '../RoundButton/RoundButton';\nimport StrategyBox from '../StrategyBox/StrategyBox';\nimport globalConfigs from '../configs/globalConfigs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport NewsletterForm from '../NewsletterForm/NewsletterForm';\nimport RoundIconButton from '../RoundIconButton/RoundIconButton';\nimport { Image, Flex, Box, Heading, Link, Text, Icon } from 'rimble-ui';\nimport FloatingToastMessage from '../FloatingToastMessage/FloatingToastMessage';\nimport AssetsUnderManagement from '../AssetsUnderManagement/AssetsUnderManagement';\n\nlet scrolling = false;\n\nclass Landing extends Component {\n  state = {\n    avgApr:null,\n    carouselMax:2,\n    carouselIndex:0,\n    activeCarousel:1,\n    runConfetti:false,\n    activeBullet:null,\n    protocolsAprs:null,\n    testPerformed:false,\n    totalAllocation:null,\n    carouselOffsetLeft:0,\n    setActiveCarousel:null,\n    carouselIntervalID:null,\n    protocolsAllocations:null,\n    randomAllocationEnabled:false,\n  };\n\n  // Clear all the timeouts\n  async componentWillUnmount(){\n\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  setActiveCarousel = (activeCarousel) => {\n    activeCarousel = activeCarousel<=3 ? activeCarousel : 1;\n    this.setState({activeCarousel});\n  }\n\n  async componentDidMount(){\n    this.props.processCustomParam(this.props);\n\n    if (this.props.contractsInitialized){\n      // await Promise.all([\n      //   this.getAprs(),\n      //   this.getAllocations()\n      // ]);\n    }\n  }\n\n  handleCarousel = action => {\n    let carouselIndex = this.state.carouselIndex;\n    if (action==='next' && carouselIndex<this.state.carouselMax){\n      carouselIndex++;\n    } else if (action==='back' && carouselIndex>0){\n      carouselIndex--;\n    }\n\n    const multiplier = this.props.isMobile ? 1 : 0.75;\n    const $element = window.jQuery(`#carousel-cursor > div:eq(${carouselIndex})`);\n    const carouselOffsetLeft = -parseFloat($element.position().left*multiplier)+'px';\n\n    this.setState({\n      carouselIndex,\n      carouselOffsetLeft\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n\n    this.loadUtils();\n    this.props.processCustomParam(this.props,prevProps);\n\n    const contractsInitialized = this.props.contractsInitialized && prevProps.contractsInitialized !== this.props.contractsInitialized;\n\n    if (contractsInitialized) {\n      // await Promise.all([\n      //   this.getAprs(),\n      //   this.getAllocations()\n      // ]);\n    }\n  }\n\n  processScrolling = () => {\n    if (scrolling){\n\n      const bulletCards = document.getElementsByClassName('bulletCard');\n      let activeBullet = 0;\n\n      for (let i=0;i<bulletCards.length;i++){\n        const bulletCard = bulletCards[i];\n        if (bulletCard && bulletCard.offsetParent){\n          const offsetY = bulletCard.offsetTop ? bulletCard.offsetTop : bulletCard.offsetParent.offsetTop;\n          if (window.scrollY >= offsetY-200){\n            activeBullet = i+2;\n          }\n        }\n      }\n      scrolling = false;\n\n      if (parseInt(activeBullet) !== parseInt(this.state.activeBullet)){\n        this.setState({activeBullet});\n      }\n    }\n  };\n\n  getAllocations = async () => {\n\n    let totalAllocation = this.functionsUtil.BNify(0);\n\n    const newState = {\n      avgApr: null,\n      totalAllocation:null,\n      protocolsAllocations:null,\n      protocolsAllocationsPerc:null\n    };\n\n    const exchangeRates = {};\n    const protocolsBalances = {};\n    const protocolsAllocations = {};\n    const protocolsAllocationsPerc = {};\n\n    await this.functionsUtil.asyncForEach(this.props.tokenConfig.protocols,async (protocolInfo,i) => {\n      const contractName = protocolInfo.token;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n\n      let [protocolBalance, tokenDecimals, exchangeRate] = await Promise.all([\n        this.functionsUtil.getProtocolBalance(contractName),\n        this.functionsUtil.getTokenDecimals(contractName),\n        ( protocolInfo.functions.exchangeRate ? this.functionsUtil.genericContractCall(contractName,protocolInfo.functions.exchangeRate.name,protocolInfo.functions.exchangeRate.params) : null )\n      ]);\n\n      if (!protocolBalance){\n        return;\n      }\n\n\n      if (exchangeRate && protocolInfo.decimals){\n        exchangeRates[protocolAddr] = exchangeRate;\n        exchangeRate = this.functionsUtil.fixTokenDecimals(exchangeRate,protocolInfo.decimals);\n      }\n\n      const protocolAllocation = this.functionsUtil.fixTokenDecimals(protocolBalance,tokenDecimals,exchangeRate);\n\n      totalAllocation = totalAllocation.plus(protocolAllocation);\n\n      protocolsBalances[protocolAddr] = protocolBalance;\n      protocolsAllocations[protocolAddr] = protocolAllocation;\n    });\n\n    if (this.state.randomAllocationEnabled){\n      let remainingAllocation = parseFloat(totalAllocation.toString());\n      const totProtocols = Object.keys(protocolsAllocations).length;\n      Object.keys(protocolsAllocations).forEach((protocolAddr,i) => {\n        let alloc = parseFloat(protocolsAllocations[protocolAddr].toString());\n        if (i === totProtocols-1){\n          alloc = remainingAllocation;\n        } else {\n          alloc = parseFloat(Math.random()*(remainingAllocation-(remainingAllocation/3))+(remainingAllocation/3));\n          remainingAllocation -= alloc;\n        }\n        protocolsAllocations[protocolAddr] = this.functionsUtil.BNify(alloc);\n      });\n    }\n\n    Object.keys(protocolsAllocations).forEach((protocolAddr,i) => {\n      const protocolAllocation = protocolsAllocations[protocolAddr];\n      const protocolAllocationPerc = protocolAllocation.div(totalAllocation);\n      protocolsAllocationsPerc[protocolAddr] = protocolAllocationPerc;\n    });\n\n    newState.totalAllocation = totalAllocation;\n    newState.protocolsAllocations = protocolsAllocations;\n    newState.protocolsAllocationsPerc = protocolsAllocationsPerc;\n\n    if (this.state.protocolsAprs){\n      newState.avgApr = this.functionsUtil.getAvgApr(this.state.protocolsAprs,protocolsAllocations,totalAllocation);\n    }\n\n    this.setState(newState);\n\n    return newState;\n  }\n\n  getAprs = async () => {\n    const Aprs = await this.functionsUtil.genericIdleCall('getAPRs');\n\n    if (!Aprs){\n      return false;\n    }\n\n    const addresses = Aprs.addresses.map((addr,i) => { return addr.toString().toLowerCase() });\n    const aprs = Aprs.aprs;\n    const protocolsAprs = {};\n\n    this.props.tokenConfig.protocols.forEach((info,i) => {\n      // const protocolName = info.name;\n      const protocolAddr = info.address.toString().toLowerCase();\n      const addrIndex = addresses.indexOf(protocolAddr);\n      if ( addrIndex !== -1 ) {\n        const protocolApr = aprs[addrIndex];\n        protocolsAprs[protocolAddr] = this.functionsUtil.BNify(+this.functionsUtil.toEth(protocolApr));\n      }\n    });\n\n    const newState = {\n      avgApr: null,\n      protocolsAprs\n    };\n\n    if (this.state.protocolsAllocations && this.state.totalAllocation){\n      newState.avgApr = this.functionsUtil.getAvgApr(protocolsAprs,this.state.protocolsAllocations,this.state.totalAllocation);\n    }\n\n    this.setState(newState);\n    return newState;\n  };\n\n  startLending = async e => {\n    this.props.updateSelectedTab(e, '1');\n    window.location.href = '#invest';\n  }\n\n  setConfetti = (runConfetti) => {\n    this.setState({\n      runConfetti\n    })\n  }\n\n  connectAndGoToRoute = (route) => {\n\n    const goToLocation = () => {\n      window.location = \"/#\"+route;\n    }\n\n    if (this.props.account){\n      goToLocation();\n    } else {\n      this.props.connectAndValidateAccount(goToLocation);\n    }\n  }\n\n  render() {\n    const { network } = this.props;\n    const availableTokens = [];\n    Object.values(this.props.availableStrategies).forEach( tokens => {\n      Object.keys(tokens).forEach( token => {\n        if (availableTokens.indexOf(token) === -1){\n          availableTokens.push(token);\n        }\n      });\n    });\n    return (\n      <Box\n        height={'100vh'}\n        className={styles.mainViewport}\n        style={{\n          paddingBottom: !network.isCorrectNetwork ? \"8em\" : \"0\"\n        }}\n      >\n        <Box\n          pl={[3,5]}\n          pr={[3,0]}\n          pt={['2.5em', '3em']}\n          className={styles.headerContainer}\n          minHeight={ Math.max((this.props.innerHeight+this.props.innerHeight*0.025),768) }\n        >\n          <Box position={'relative'} zIndex={10}>\n            <Flex\n              overflow={'hidden'}\n              alignItems={'flex-start'}\n              flexDirection={['column','row']}\n              mt={['7em',Math.max(window.innerHeight*0.225,145)+'px']}\n            >\n              <Flex\n                width={[1,1/3]}\n                justifyContent={['center','flex-end']}\n              >\n                <Flex\n                  pb={3}\n                  width={1}\n                  textAlign={'center'}\n                  flexDirection={'column'}\n                  maxWidth={['50em', '24em']}\n                  alignItems={['center','flex-start']}\n                >\n                  <Heading.h1\n                    fontWeight={5}\n                    color={'white'}\n                    fontFamily={'sansSerif'}\n                    fontSize={['2.2em','3.2rem']}\n                    textAlign={['center','left']}\n                    lineHeight={['initial','2.5rem']}\n                    style={{\n                      width:'100%',\n                      textAlignLast: this.props.isMobile ? 'center' : 'justify'\n                    }}\n                  >\n                    The best place\n                  </Heading.h1>\n                  <Heading.h1\n                    mb={[2,3]}\n                    color={'white'}\n                    fontWeight={300}\n                    lineHeight={'initial'}\n                    fontFamily={'sansSerif'}\n                    fontSize={['2.2em','3.2rem']}\n                    textAlign={['center','left']}\n                    style={{\n                      width:'100%',\n                      textAlignLast: this.props.isMobile ? 'center' : 'justify'\n                    }}\n                  >\n                    for your money\n                  </Heading.h1>\n                  <Heading.h2\n                    style={{\n                      width:'100%',\n                    }}\n                    color={'white'}\n                    fontWeight={400}\n                    fontSize={[2,'1.2em']}\n                    textAlign={['center','justify']}\n                  >\n                    Choose your strategy and earn the yield you deserve without worry about finding the best option, either if you want to optimize returns or risks.\n                  </Heading.h2>\n                  {\n                    !this.props.isMobile && \n                      <Flex\n                        mt={4}\n                      >\n                        <RoundButton\n                          handleClick={ (e) => {\n                            window.location.hash = this.functionsUtil.getGlobalConfig(['dashboard','baseRoute'])+'/'+Object.keys(this.functionsUtil.getGlobalConfig(['strategies']))[0];\n                          }}\n                        >\n                          Go to Dashboard\n                        </RoundButton>\n                      </Flex>\n                  }\n                </Flex>\n              </Flex>\n              <Flex\n                mr={['auto',0]}\n                width={[1,2/3]}\n                ml={[0,'100px']}\n                textAlign={'center'}\n                position={'relative'}\n                flexDirection={'column'}\n                height={['415px','460px']}\n                justifyContent={['flex-start','flex-end']}\n              >\n                <Flex\n                  left={0}\n                  right={0}\n                  width={'100%'}\n                  height={'400px'}\n                  top={['initial','0']}\n                  position={'absolute'}\n                  bottom={['0','initial']}\n                  overflow={this.state.carouselIndex === 0 ? 'visible' : 'hidden'}\n                >\n                  <Flex\n                    top={['initial',0]}\n                    flexDirection={'row'}\n                    position={'absolute'}\n                    id={'carousel-cursor'}\n                    width={[Object.keys(globalConfigs.strategies).length*100+'%','140%']}\n                    height={['auto','400px']}\n                    bottom={['5px','initial']}\n                    justifyContent={'flex-start'}\n                    left={this.state.carouselOffsetLeft}\n                    style={{\n                      overflowY:'visible',\n                      transition:'left 0.3s ease-in-out'\n                    }}\n                  >\n                    {\n                      Object.keys(globalConfigs.strategies).map((strategy,strategyIndex) => (\n                        <StrategyBox\n                          {...this.props}\n                          strategy={strategy}\n                          key={`strategy_${strategy}`}\n                        />\n                      ))\n                    }\n                  </Flex>\n                </Flex>\n                <Flex\n                  width={1}\n                  mt={[0,'20px']}\n                  id={'carousel-container'}\n                  justifyContent={['center','flex-start']}\n                >\n                  <RoundIconButton\n                    buttonProps={{\n                      mr:[4,3]\n                    }}\n                    iconName={'ArrowBack'}\n                    disabled={this.state.carouselIndex === 0}\n                    handleClick={ e => this.handleCarousel('back') }\n                  />\n                  <RoundIconButton\n                    iconName={'ArrowForward'}\n                    handleClick={ e => this.handleCarousel('next') }\n                    disabled={this.state.carouselIndex === this.state.carouselMax}\n                  />\n                </Flex>\n              </Flex>\n            </Flex>\n          </Box>\n        </Box>\n\n        <HowItWorks />\n\n        <Box\n          mb={[3,4]}\n          pt={[4,5]}\n          pb={[4,4]}\n          id={'partners'}\n        >\n          <Box\n            mx={'auto'}\n            maxWidth={['50em','70em']}\n          >\n            <Title\n              mb={3}\n              mt={[3,4]}\n              fontWeight={5}\n              fontSize={[5,6]}\n              component={Heading.h4}\n            >\n              Audited and Battle-tested\n            </Title>\n            <Text\n              fontSize={[2,3]}\n              fontWeight={500}\n              color={'cellTitle'}\n              textAlign={'center'}\n            >\n              We take security very seriously, that's why our Smart-Contracts are fully Audited and battle-tested.\n            </Text>\n            <Flex\n              width={1}\n              px={[3,4]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <AssetsUnderManagement\n                {...this.props}\n                counterStyle={{\n                  display:'block',\n                  color:'dark-gray',\n                  overflow: 'hidden',\n                  textAlign: 'center',\n                  whiteSpace: 'nowrap',\n                  textOverflow: 'ellipsis',\n                  fontFamily:this.props.theme.fonts.counter,\n                  fontWeight:this.props.theme.fontWeights[5],\n                  fontSize: this.props.isMobile ? this.props.theme.fontSizes[5] : this.props.theme.fontSizes[8],\n                }}\n                subtitle={null}\n                subtitleProps={{\n                  textAlign:'center'\n                }}\n              />\n              <Link\n                mb={3}\n                target={'_blank'}\n                textAlign={'center'}\n                rel={'nofollow noopener noreferrer'}\n                href={'https://certificate.quantstamp.com/view/idle-finance'}\n              >\n                <Image\n                  width={'15em'}\n                  src={'images/quantstamp-badge.svg'}\n                />\n              </Link>\n              <Title\n                my={[2,3]}\n                mt={[3,4]}\n                fontWeight={3}\n                fontSize={[3,4]}\n                color={'dark-gray'}\n                component={Heading.h4}\n              >\n                Full Audit Report:\n              </Title>\n              <Flex\n                alignItems={'center'}\n                justifyContent={'center'}\n                flexDirection={['column','row']}\n              >\n                <AuditCard\n                  title={'Idle Finance'}\n                  date={'August 12th 2020 — Quantstamp Verified'}\n                  link={'https://certificate.quantstamp.com/full/idle-finance'}\n                />\n                <AuditCard\n                  title={'Idle Goverance'}\n                  date={'November 17th 2020 — Quantstamp Verified'}\n                  link={'https://certificate.quantstamp.com/full/idle-goverance'}\n                />\n              </Flex>\n            </Flex>\n          </Box>\n        </Box>\n        <Box\n          mt={[4,5]}\n          px={[3,4]}\n          py={[4,5]}\n          id={'integrators'}\n          className={styles.gradientBackground}\n        >\n          <Box\n            mx={'auto'}\n            maxWidth={['50em','75em']}\n          >\n            <Title\n              mb={3}\n              fontWeight={5}\n              fontSize={[5,6]}\n              component={Heading.h4}\n            >\n              Build with Idle\n            </Title>\n            <Text\n              mb={3}\n              fontSize={[2,3]}\n              fontWeight={500}\n              color={'cellTitle'}\n              textAlign={'center'}\n            >\n              Just few lines of code to integrate the power of Idle into your dApp\n            </Text>\n            <Flex\n              mt={2}\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={['center','space-between']}\n            >\n              {\n                /*\n                <Flex\n                  mb={3}\n                  width={1}\n                  flexDirection={'column'}\n                  justifyContent={'center'}\n                  alignItems={['center','flex-start']}\n                >\n                  <FlexCards\n                    itemsPerRow={4}\n                    cards={[\n                      {\n                        link:'https://zerion.io',\n                        image:'images/integrators/zerion.svg'\n                      },\n                      {\n                        link:'https://gnosis.io',\n                        image:'images/integrators/gnosis.png'\n                      },\n                      {\n                        link:'https://cryptolocally.com',\n                        image:'images/integrators/cryptolocally.png'\n                      },\n                      {\n                        link:'https://www.peepsdemocracy.com',\n                        image:'images/integrators/peeps.png'\n                      }\n                    ]}\n                    {...this.props}\n                  />\n                </Flex>\n                */\n              }\n              <Flex\n                mt={2}\n                width={1}\n                flexDirection={['column','row']}\n                alignItems={['center','flex-start']}\n                justifyContent={['center','flex-start']}\n              >\n                <Flex\n                  mb={[3,0]}\n                  width={[1,0.5]}\n                  flexDirection={'column'}\n                  alignItems={['center','flex-start']}\n                  justifyContent={['center','flex-start']}\n                >\n                  <Title\n                    mb={3}\n                    fontWeight={5}\n                    component={Heading.h5}\n                    fontSize={[4,'1.75em']}\n                  >\n                    Designed for Developers\n                  </Title>\n\n                  <Text\n                    mb={3}\n                    pr={[0,5]}\n                    textAlign={['center','justify']}\n                  >\n                    A fully integrated suite of DeFi yield products easy to integrate into your dApp so your teams don't need to stitch together disparate protocols or spend months integrating and updating yield functionality.<br />One integration to rule them all.\n                  </Text>\n                  <Text\n                    mb={2}\n                    fontWeight={500}\n                  >\n                    Supported Assets:\n                  </Text>\n                  <Flex\n                    mb={3}\n                    flexDirection={'row'}\n                  >\n                    {\n                      availableTokens.map( token => (\n                        <AssetField\n                          token={token}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:2,\n                              width:'2.2em',\n                              height:'2.2em'\n                            }\n                          }}\n                          key={`asset_${token}`}\n                        />\n                      ))\n                    }\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={['column','row']}\n                    justifyContent={['center','flex-start']}\n                  >\n                    <RoundButton\n                      buttonProps={{\n                        width:[1,'auto']\n                      }}\n                      handleClick={ (e) => {\n                        window.open('https://developers.idle.finance')\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'flex-end'}\n                        justifyContent={'center'}\n                      >\n                        <Text\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'white'}\n                        >\n                          Read the docs\n                        </Text>\n                        <Icon\n                          ml={2}\n                          size={'1.2em'}\n                          color={'white'}\n                          name={'KeyboardArrowRight'}\n                        />\n                      </Flex>\n                    </RoundButton>\n                    <Text\n                      mt={[2,0]}\n                      ml={[0,2]}\n                    >\n                      or\n                    </Text>\n                    <ExtLink\n                      mt={[2,0]}\n                      ml={[0,2]}\n                      fontSize={2}\n                      hoverColor={'primary'}\n                      href={'https://idlefinance.typeform.com/to/PUC7nO'}\n                    >\n                      Contact Us\n                    </ExtLink>\n                    {\n                      /*\n                      <RoundButton\n                        buttonProps={{\n                          ml:2,\n                          mainColor:'red',\n                          width:[1,'auto']\n                        }}\n                        handleClick={ (e) => {\n                          window.open('https://idlefinance.typeform.com/to/PUC7nO')\n                        }}\n                      >\n                        <Flex\n                          width={1}\n                          alignItems={'flex-end'}\n                          justifyContent={'center'}\n                        >\n                          <Text\n                            fontWeight={3}\n                            color={'white'}\n                            fontSize={[1,2]}\n                          >\n                            Contact us\n                          </Text>\n                          <Icon\n                            ml={2}\n                            name={'Send'}\n                            size={'1.2em'}\n                            color={'white'}\n                          />\n                        </Flex>\n                      </RoundButton>\n                      */\n                    }\n                  </Flex>\n                </Flex>\n                <Flex\n                  width={[1,0.5]}\n                >\n                  <iframe\n                    height={\"350\"}\n                    title={'integrate'}\n                    style={{\n                      border:'0',\n                      width: '100%',\n                      height: '350px',\n                      overflow:'hidden',\n                      transform: 'scale(1)',\n                    }}\n                    sandbox={\"allow-scripts allow-same-origin\"}\n                    src={\"https://carbon.now.sh/embed?bg=rgba%28255%2C255%2C255%2C0%29&t=cobalt&wt=none&l=auto&ds=false&dsyoff=20px&dsblur=68px&wc=true&wa=true&pv=0px&ph=0px&ln=false&fl=1&fm=Fira+Code&fs=13.5px&lh=143%25&si=false&es=2x&wm=false&code=const%2520idleTokenAbi%2520%253D%2520require%28%27idleToken.json%27%29%253B%2520%252F%252F%2520Include%2520idleToken%2520ABI%250Aconst%2520user%2520%253D%2520%270x...%27%253B%2520%252F%252F%2520set%2520user%2520address%2520%250Aconst%2520idleDAI%2520%253D%2520%270x3fE7940616e5Bc47b0775a0dccf6237893353bB4%27%253B%2520%252F%252F%2520idleDAIYield%2520address%250A%250A%252F%252F%2520Initialize%2520web3%2520contract%250Aconst%2520idleToken%2520%253D%2520new%2520web3.eth.Contract%28idleTokenAbi%252C%2520idleDAI%29%253B%250A%250A%252F%252F%2520Approve%2520contract%250Aconst%2520_amount%2520%253D%2520%271000000000000000000%27%253B%2520%252F%252F%25201%2520DAI%250Aawait%2520idleToken.approve%28idleTokenAddress%252C%2520_amount%252C%2520%257B%2520from%253A%2520user%2520%257D%29%253B%250A%250A%252F%252F%2520Deposit%2520tokens%250Aawait%2520idleToken.mintIdleToken%28_amount%252C%2520true%252C%2520user%252C%2520%257B%2520from%253A%2520user%2520%257D%29%253B\"}\n                  >\n                  </iframe>\n                </Flex>\n              </Flex>\n            </Flex>\n          </Box>\n        </Box>\n\n        <Box\n          pt={[4,5]}\n          pb={[4,4]}\n          id={'investors'}\n        >\n          <Box\n            mx={'auto'}\n            maxWidth={['50em','70em']}\n          >\n            <Title\n              mb={3}\n              mt={[3,4]}\n              fontWeight={5}\n              fontSize={[5,6]}\n              component={Heading.h4}\n            >\n              Backed By\n            </Title>\n            <Text\n              mb={3}\n              fontSize={[2,3]}\n              fontWeight={500}\n              color={'cellTitle'}\n              textAlign={'center'}\n            >\n              Idle has been funded by industry leaders\n            </Text>\n            <FlexCards\n              justifyContent={'center'}\n              itemsPerRow={4}\n              cards={[\n                {\n                  link:'https://consensys.net',\n                  image:'images/investors/consensys.png'\n                },\n                {\n                  link:'https://www.gumi-cryptos.com',\n                  image:'images/investors/gumi.png'\n                },\n                {\n                  link:'https://www.greenfield.one',\n                  image:'images/investors/greenfield.png'\n                },\n                /*\n                {\n                  link:'https://quantstamp.com',\n                  image:'images/investors/quantstamp.png'\n                },\n                */\n                {\n                  link:'https://dialectic.ch',\n                  image:'images/investors/dialectic.png'\n                },\n                {\n                  link:'https://www.thelao.io',\n                  image:'images/investors/the-lao.png'\n                },\n                {\n                  link:'https://br.capital',\n                  image:'images/investors/br-capital.png'\n                },\n                {\n                  link:'https://www.longhashventures.com',\n                  image:'images/investors/lh-ventures.png'\n                },\n              ]}\n              {...this.props}\n            />\n          </Box>\n        </Box>\n\n        <Box\n          pt={[4,5]}\n          pb={[4,4]}\n          id={'protocols'}\n        >\n          <Box\n            mx={'auto'}\n            maxWidth={['50em','70em']}\n          >\n            <Title\n              mb={3}\n              mt={[3,4]}\n              fontWeight={5}\n              fontSize={[5,6]}\n              component={Heading.h4}\n            >\n              Built with the best\n            </Title>\n            <Text\n              mb={3}\n              fontSize={[2,3]}\n              fontWeight={500}\n              color={'cellTitle'}\n              textAlign={'center'}\n            >\n              Idle infrastructure rely on the most powerful DeFi protocols\n            </Text>\n            <FlexCards\n              cards={[\n                {\n                  link:'https://app.compound.finance',\n                  image:'images/partners/compound.svg'\n                },\n                /*\n                {\n                  link:'https://fulcrum.trade',\n                  image:'images/partners/fulcrum.svg'\n                },\n                */\n                {\n                  link:'https://aave.com',\n                  image:'images/partners/aave.svg'\n                },\n                {\n                  link:'https://dydx.exchange',\n                  image:'images/partners/dydx.svg'\n                },\n                {\n                  link:'https://oasis.app/',\n                  image:'images/partners/oasis.png'\n                },\n              ]}\n              {...this.props}\n            />\n          </Box>\n        </Box>\n\n        <Box id=\"faq\" pt={[4,5]} pb={[4,6]}>\n          <Box maxWidth={['50em','60em']} mx={'auto'} px={[3,5]}>\n            <Faq selectedToken={this.props.selectedToken} tokenConfig={this.props.tokenConfig} />\n          </Box>\n        </Box>\n\n        <Flex id=\"contacts\" flexDirection={'column'} position={'relative'} justifyContent={'center'} alignItems={'center'} pb={[3,6]} px={[3,6]}>\n          <Flex flexDirection={'column'} justifyContent={['center','flex-start']} alignItems={['center','flex-start']} width={1} maxWidth={['35em','70em']}>\n            <Heading.h3 color={'blue'} textAlign={['center','left']} fontWeight={4} lineHeight={'initial'} fontSize={[4,5]}>\n              Don't be shy, let's talk.\n            </Heading.h3>\n            <Heading.h3 color={'dark-gray'} textAlign={['center','left']} fontWeight={4} lineHeight={'initial'} fontSize={[4,5]}>\n              Let's build something great together.\n            </Heading.h3>\n            <NewsletterForm />\n          </Flex>\n        </Flex>\n\n        <Footer tokenConfig={this.props.tokenConfig} />\n\n        {\n          this.props.toastMessageProps &&\n            <FloatingToastMessage isMobile={this.props.isMobile} {...this.props.toastMessageProps} handleClose={this.props.closeToastMessage} />\n        }\n      </Box>\n    );\n  }\n}\n\nexport default Landing;\n","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport { Link as RouterLink } from \"react-router-dom\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Box, Icon, Text, Image } from 'rimble-ui';\n\nclass DashboardMenu extends Component {\n  state = {\n    buyModalOpened:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setBuyModalOpened(buyModalOpened){\n    this.setState({\n      buyModalOpened\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    if (!this.props.menu.length){\n      return null;\n    }\n\n    const visibleLinks = this.props.menu.filter(menuLink => {\n      const showMobile = menuLink.mobile === undefined || menuLink.mobile;\n      return !this.props.isMobile || showMobile;\n    });\n\n    if (!visibleLinks.length){\n      return null;\n    }\n\n    return (\n      <Flex\n        p={0}\n        flexDirection={['row','column']}\n      >\n        {\n          !this.props.isMobile &&\n            <Flex\n              p={3}\n              mb={3}\n              flexDirection={'row'}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <RouterLink to=\"/\">\n                <Image\n                  position={'relative'}\n                  height={['35px','38px']}\n                  src=\"images/logo-gradient.svg\"\n                />\n              </RouterLink>\n            </Flex>\n        }\n        {\n          visibleLinks.map((menuLink,menuIndex) => {\n            const isExternalLink = menuLink.isExternalLink;\n            const LinkComponent = isExternalLink ? ExtLink : RouterLink;\n            return (\n              <Box\n                my={[0,3]}\n                key={`menu-${menuIndex}`}\n                width={[1/visibleLinks.length,'auto']}\n              >\n                <LinkComponent\n                  to={menuLink.route}\n                  href={menuLink.route}\n                  style={{textDecoration:'none'}}\n                >\n                  <Flex\n                    p={[2,3]}\n                    borderRadius={[0,2]}\n                    flexDirection={'row'}\n                    alignItems={'center'}\n                    backgroundColor={ menuLink.selected ? '#f3f6ff' : 'transparent' }\n                    boxShadow={menuLink.selected ? '0px 0px 0px 1px rgba(0,54,255,0.3)' : null}\n                  >\n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={['column','row']}\n                      justifyContent={['center','flex-start']}\n                    >\n                      {menuLink.image &&\n                        <Image\n                          mr={[0,3]}\n                          ml={[0,2]}\n                          mb={[1,0]}\n                          align={'center'}\n                          src={ menuLink.selected ? menuLink.image : (menuLink.imageInactive ? menuLink.imageInactive : menuLink.image)}\n                          height={['1.2em','1.6em']}\n                        />\n                      }\n                      {menuLink.icon &&\n                        <Icon\n                          mr={[0,3]}\n                          ml={[0,2]}\n                          mb={[1,0]}\n                          align={'center'}\n                          name={menuLink.icon}\n                          size={ this.props.isMobile ? '1.4em' : '1.6em' }\n                          color={ menuLink.selected ? menuLink.bgColor : 'copyColor' }\n                        />\n                      }\n                      <Text\n                        fontWeight={3}\n                        color={'copyColor'}\n                        textAlign={'center'}\n                        fontSize={['11px',2]}\n                        style={{\n                          whiteSpace:'nowrap'\n                        }}\n                      >\n                        {menuLink.label}\n                      </Text>\n                    </Flex>\n                  </Flex>\n                </LinkComponent>\n                {\n                  /*\n                  menuLink.submenu.length>0 && (\n                    <Flex className={[styles.submenu]} style={{maxHeight:menuLink.selected ? menuLink.submenu.length*36+'px' : '0' }} flexDirection={'column'} borderLeft={ menuLink.selected ? '2px solid rgba(0,0,0,0.3)' : null }>\n                      {\n                        menuLink.submenu.map((submenuLink,submenuIndex) => {\n                          return (\n                            <RouterLink key={`submenu-${menuIndex}-${submenuIndex}`} to={`${menuLink.route}/${submenuLink.route}`} style={{textDecoration:'none'}}>\n                              <Flex py={2} pl={'40px'} flexDirection={'row'} alignItems={'center'}>\n                                <Text fontSize={'0.85rem'}>{submenuLink.label}</Text>\n                              </Flex>\n                            </RouterLink>\n                          )\n                        })\n                      }\n                    </Flex>\n                  )\n                  */\n                }\n              </Box>\n            );\n          })\n        }\n        {\n        /*\n        !this.props.isMobile  &&\n          <Box\n            width={'auto'}\n            borderTop={`1px solid ${theme.colors.divider}`}\n          >\n            <Flex\n              p={[2,3]}\n              style={{\n                cursor:'pointer'\n              }}\n              borderRadius={[0,2]}\n              flexDirection={'row'}\n              alignItems={'center'}\n              onClick={ e => this.setBuyModalOpened(true) }\n            >\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={['column','row']}\n                justifyContent={['center','flex-start']}\n              >\n                <Icon\n                  mr={[0,3]}\n                  ml={[0,2]}\n                  mb={[1,0]}\n                  size={'1.6em'}\n                  align={'center'}\n                  color={'copyColor'}\n                  name={'AddCircleOutline'}\n                />\n                <Text\n                  fontWeight={3}\n                  fontSize={[0,2]}\n                  color={'copyColor'}\n                  textAlign={'center'}\n                  style={{\n                    whiteSpace:'nowrap'\n                  }}\n                >\n                  Add Funds\n                </Text>\n              </Flex>\n            </Flex>\n          </Box>\n        <BuyModal\n          {...this.props}\n          isOpen={this.state.buyModalOpened}\n          closeModal={ e => this.setBuyModalOpened(false) }\n        />\n        */\n        }\n      </Flex>\n    )\n  }\n}\n\nexport default DashboardMenu;","import moment from 'moment';\nimport theme from '../theme';\nimport { Bar } from '@nivo/bar';\nimport { Line } from '@nivo/line';\nimport React, { Component } from 'react';\nimport { Flex, Text, Box } from 'rimble-ui';\nimport globalConfigs from '../configs/globalConfigs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass StatsChart extends Component {\n  state = {\n    chartProps:{},\n    chartType:null,\n    chartData:null,\n    chartWidth:null\n  };\n\n  async componentDidMount() {\n    this.setState({\n      chartData:null,\n      chartType:null,\n      chartProps:null,\n    });\n    this.loadUtils();\n    this.loadApiData();\n  }\n\n  async componentDidUpdate(prevProps) {\n    const showAdvancedChanged = prevProps.showAdvanced !== this.props.showAdvanced;\n    const apiResultsChanged = prevProps.apiResults !== this.props.apiResults;\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken || JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    if (apiResultsChanged || showAdvancedChanged || tokenChanged){\n      this.componentDidMount();\n    }\n  }\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  parseAum = value => {\n    return (parseInt(value)>=1000 ? parseFloat(value/1000).toFixed(1)+'K' : parseFloat(value) )+' '+this.props.selectedToken\n  }\n\n  loadApiData = async () => {\n\n    if (!this.props.tokenConfig || !this.props.selectedToken || !this.props.chartMode || !this.props.apiResults){\n      return false;\n    }\n\n    const CustomTooltipRow = props => (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              textTransform:'capitalize'\n            }}\n          >\n            {props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n\n    const CustomTooltip = props => {\n      return (\n        <DashboardCard\n          key={props.point.id}\n          cardProps={{\n            py:2,\n            px:3,\n            width:1,\n            left: props.point.data.itemPos>50 ? '-110%' : '0'\n          }}\n        >\n          <Flex\n            width={1}\n            flexDirection={'column'}\n          >\n            {\n              props.point.data.xFormatted && \n                <Text\n                  mb={2}\n                  fontSize={1}\n                  fontWeight={3}\n                  color={'cellText'}\n                  textAlign={'left'}\n                >\n                  {props.point.data.xFormatted}\n                </Text>\n            }\n            {props.children}\n          </Flex>\n        </DashboardCard>\n      );\n    };\n\n    const maxGridLines = 4;\n    const apiResults = this.props.apiResults;\n    const apiResults_unfiltered = this.props.apiResults_unfiltered;\n    const totalItems = apiResults.length;\n    const protocols = Object.assign([],this.props.tokenConfig.protocols);\n    // const compoundProtocol = this.props.tokenConfig.protocols.find( p => (p.name === 'compound'));\n\n    const versionInfo = globalConfigs.stats.versions[this.props.idleVersion];\n\n    let keys = {};\n    let tempData = {};\n    let gridYStep = 0;\n    let itemIndex = 0;\n    let chartData = [];\n    let chartProps = {};\n    let chartType = Line;\n    let gridYValues = [];\n    let maxChartValue = 0;\n    let axisBottomIndex = 0;\n    let idleChartData = null;\n    let firstIdleBlock = null;\n\n    switch (this.props.chartMode){\n      case 'VOL':\n        let divergingData = {};\n\n        const startTimestamp = parseInt(apiResults_unfiltered[0].timestamp);\n        const endTimestamp = parseInt(moment()._d.getTime()/1000);\n\n        for (let timestamp=startTimestamp;timestamp<=endTimestamp;timestamp+=86400){\n          const date = moment(timestamp*1000).format(\"YYYY/MM/DD\");\n          if (!divergingData[date]){\n            divergingData[date] = {\n              date,\n              timestamp,\n              deposits: 0,\n              redeems: 0\n            };\n          }\n        }\n\n        let lastRow = null;\n        apiResults_unfiltered.forEach(row => {\n          const date = moment(row.timestamp*1000).format(\"YYYY/MM/DD\");\n          const idleTokens = this.functionsUtil.fixTokenDecimals(row.idleSupply,18);\n\n          if (!divergingData[date]){\n            divergingData[date] = {\n              date,\n              timestamp:row.timestamp,\n              deposits: 0,\n              redeems: 0\n            };\n          }\n\n          if (lastRow){\n            const idleTokensPrev = this.functionsUtil.fixTokenDecimals(lastRow.idleSupply,18);\n            const idleTokensDiff = !idleTokens.eq(idleTokensPrev);\n            if (idleTokensDiff){\n              const diff = idleTokens.minus(idleTokensPrev);\n              // Deposits\n              if (diff.gte(0)){\n                divergingData[date].deposits+=parseFloat(diff);\n                maxChartValue = Math.max(maxChartValue,divergingData[date].deposits);\n              } else {\n                divergingData[date].redeems+=parseFloat(diff);\n                maxChartValue = Math.max(maxChartValue,Math.abs(divergingData[date].deposits));\n              }\n            }\n\n          } else {\n            divergingData[date].deposits+=parseFloat(idleTokens);\n          }\n\n          lastRow = row;\n        });\n\n        chartData = Object.values(divergingData).filter(v => {\n          return (!this.props.startTimestamp || v.timestamp>=this.props.startTimestamp) && (!this.props.endTimestamp || v.timestamp<=this.props.endTimestamp);\n        });\n\n        let maxRange = 0;\n        chartData.forEach(v => {\n          maxRange = Math.max(maxRange,Math.abs(v.deposits),Math.abs(v.redeems));\n        })\n\n        chartType = Bar;\n\n        axisBottomIndex = 0;\n\n        gridYStep = parseFloat(maxChartValue/maxGridLines);\n        gridYValues = [0];\n        for (let i=1;i<=5;i++){\n          gridYValues.push(i*gridYStep);\n        }\n\n        chartProps = {\n          indexBy: 'date',\n          enableLabel: false,\n          minValue:-maxRange,\n          maxValue:maxRange,\n          label: d => {\n            return Math.abs(d.value);\n          },\n          axisBottom: this.props.isMobile ? null : {\n            tickSize: 0,\n            legend: '',\n            format: (value) => {\n              if (axisBottomIndex++ % 3 === 0){\n                return moment(value,'YYYY/MM/DD HH:mm').format('MMM DD')\n              }\n            },\n            tickPadding: 15,\n            orient: 'bottom',\n            legendOffset: 0,\n            legendPosition: 'middle',\n            tickValues: 'every 3 days',\n          },\n          axisLeft: null,\n          axisRight: {\n            legend: '',\n            tickSize: 0,\n            orient: 'left',\n            tickPadding: 10,\n            tickRotation: 0,\n            legendOffset: -70,\n            tickValues:8,\n            legendPosition: 'middle',\n            format: v => this.functionsUtil.abbreviateNumber(Math.abs(v),0)\n          },\n          markers: [\n            {\n              axis: 'y',\n              value: 0,\n              lineStyle: { strokeOpacity: 0 },\n              textStyle: { fill: theme.colors.transactions.action.deposit },\n              legend: 'deposits',\n              legendPosition: 'top-left',\n              legendOrientation: 'vertical',\n              // legendOffsetY: 120,\n              legendOffsetX: -20\n            },\n            {\n              axis: 'y',\n              value: 0,\n              lineStyle: { stroke: theme.colors['dark-gray'], strokeDasharray: '5 3' },\n              textStyle: { fill: theme.colors.transactions.action.redeem },\n              legend: 'redeems',\n              legendPosition: 'bottom-left',\n              legendOrientation: 'vertical',\n              // legendOffsetY: 120,\n              legendOffsetX: -20\n            },\n          ],\n          keys:['deposits','redeems'],\n          padding:0.4,\n          colors:[theme.colors.transactions.action.deposit, theme.colors.transactions.action.redeem],\n          labelTextColor: 'inherit:darker(1.4)',\n          labelSkipWidth: 16,\n          labelSkipHeight: 16,\n          pointSize:0,\n          useMesh:true,\n          animate:false,\n          pointLabel:\"y\",\n          curve:'linear',\n          enableArea:false,\n          enableSlices:'x',\n          enableGridX:false,\n          enableGridY:true,\n          pointBorderWidth:1,\n          pointLabelYOffset:-12,\n          legends:[\n            {\n              dataFrom:'keys',\n              itemWidth: this.props.isMobile ? 80 : 100,\n              itemHeight: 18,\n              translateX: 0,\n              translateY: this.props.isMobile ? 40 : 65,\n              symbolSize: 10,\n              itemsSpacing: 0,\n              direction: 'row',\n              anchor: 'bottom-left',\n              symbolShape: 'circle',\n              itemTextColor: theme.colors.legend,\n              effects: [\n                {\n                  on: 'hover',\n                  style: {\n                    itemTextColor: '#000'\n                  }\n                }\n              ]\n            }\n          ],\n          theme:{\n            axis: {\n              ticks: {\n                text: {\n                  fontSize: this.props.isMobile ? 12: 14,\n                  fontWeight:600,\n                  fill:theme.colors.legend,\n                  fontFamily: theme.fonts.sansSerif\n                }\n              }\n            },\n            grid: {\n              line: {\n                stroke: theme.colors.lineChartStroke, strokeDasharray: '10 6'\n              }\n            },\n            legends:{\n              text:{\n                fontSize: this.props.isMobile ? 12: 14,\n                fontWeight:500,\n                fontFamily: theme.fonts.sansSerif\n              }\n            },\n            tooltip:{\n              container:{\n                boxShadow:null,\n                background:null\n              }\n            }\n          },\n          pointColor:{ from: 'color', modifiers: []},\n          margin: this.props.isMobile ? { top: 20, right: 50, bottom: 45, left: 50 } : { top: 20, right: 70, bottom: 70, left: 50 },\n          tooltip:(data) => {\n            const xFormatted = this.functionsUtil.strToMoment(data.indexValue).format('MMM DD');\n            const point = {\n              id:data.id,\n              data:{\n                xFormatted\n              }\n            };\n            const depositFormatted = this.functionsUtil.abbreviateNumber(data.data.deposits,2)+' '+this.props.selectedToken;\n            const redeemFormatted = this.functionsUtil.abbreviateNumber(data.data.redeems,2)+' '+this.props.selectedToken;\n            return (\n              <CustomTooltip\n                point={point}\n              >\n                <CustomTooltipRow\n                  label={'Deposits'}\n                  color={theme.colors.deposit}\n                  value={depositFormatted}\n                />\n                <CustomTooltipRow\n                  label={'Redeem'}\n                  color={theme.colors.redeem}\n                  value={redeemFormatted}\n                />\n              </CustomTooltip>\n            );\n          }\n        };\n      break;\n      /*\n      case 'AUM_ALL':\n        await this.functionsUtil.asyncForEach(Object.keys(availableTokens[globalConfigs.network.requiredNetwork]),async (tokenName,i) => {\n          const tokenConfig = availableTokens[globalConfigs.network.requiredNetwork][tokenName];\n          const tokenDataApi = await this.props.getTokenData(tokenConfig.address);\n          chartData.push({\n            id:tokenName,\n            color: tokenConfig.color,\n            data: tokenDataApi.map((d,i) => {\n              const idleTokens = this.functionsUtil.fixTokenDecimals(d.idleSupply,18);\n              const idlePrice = this.functionsUtil.fixTokenDecimals(d.idlePrice,tokenConfig.decimals);\n              const aum = idleTokens.times(idlePrice);\n              return {\n                x: moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\"),\n                y: parseInt(aum.toString())\n              };\n            })\n          });\n        });\n\n        // Set chart type\n        chartType = Line;\n\n        chartProps = {\n          xScale:{\n            type: 'time',\n            format: '%Y/%m/%d %H:%M',\n            // precision: 'hour',\n          },\n          xFormat:'time:%b %d %H:%M',\n          yFormat:value => (parseInt(value)>=1000 ? parseFloat(value/1000).toFixed(1)+'K' : parseFloat(value) )+' '+this.props.selectedToken,\n          yScale:{\n            type: 'linear',\n            stacked: false\n          },\n          axisLeft:{\n            format: v => this.functionsUtil.abbreviateNumber(v),\n            orient: 'left',\n            tickSize: 5,\n            tickPadding: 5,\n            tickRotation: 0,\n            legend: '',\n            legendOffset: -65,\n            legendPosition: 'middle'\n          },\n          axisBottom: this.props.isMobile ? null : {\n            format: '%b %d',\n            tickValues: this.props.isMobile ? 'every 4 days' : 'every 3 days',\n            orient: 'bottom',\n            legend: '',\n            legendOffset: 36,\n            legendPosition: 'middle'\n          },\n          enableArea:false,\n          curve:\"linear\",\n          enableSlices:'x',\n          enableGridX:true,\n          enableGridY:false,\n          colors:d => d.color,\n          pointSize:0,\n          pointColor:{ from: 'color', modifiers: []},\n          pointBorderWidth:1,\n          pointLabel:\"y\",\n          pointLabelYOffset:-12,\n          useMesh:true,\n          animate:false,\n          margin: this.props.isMobile ? { top: 20, right: 20, bottom: 40, left: 50 } : { top: 20, right: 60, bottom: 40, left: 60 },\n        };\n      break;\n      */\n      case 'AUM':\n\n        maxChartValue = 0;\n\n        chartData.push({\n          id:'AUM',\n          color: 'hsl('+globalConfigs.stats.tokens[this.props.selectedToken].color.hsl.join(',')+')',\n          data: apiResults.map((d,i) => {\n            const idleTokens = this.functionsUtil.fixTokenDecimals(d.idleSupply,18);\n            const idlePrice = this.functionsUtil.fixTokenDecimals(d.idlePrice,this.props.tokenConfig.decimals);\n            const aum = idleTokens.times(idlePrice);\n            const x = moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n            const y = parseFloat(aum.toString());\n\n            maxChartValue = Math.max(maxChartValue,y);\n\n            return { x,y };\n          })\n        });\n\n        // Add allocation\n        this.props.tokenConfig.protocols.forEach((p,j) => {\n          apiResults.map((d,i) => {\n            return d.protocolsData.filter((protocolAllocation,x) => {\n                return protocolAllocation.protocolAddr.toLowerCase() === p.address.toLowerCase()\n            })\n            .map((protocolAllocation,z) => {\n              const protocolPaused = this.functionsUtil.BNify(protocolAllocation.rate).eq(0);\n              if (!protocolPaused){\n                const x = moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                let y = parseFloat(this.functionsUtil.fixTokenDecimals(protocolAllocation.allocation,this.props.tokenConfig.decimals));\n\n                maxChartValue = Math.max(maxChartValue,y);\n\n                let foundItem = chartData[0].data.filter(item => { return item.x === x });\n                if (foundItem){\n                  foundItem = foundItem[0];\n                  const pos = chartData[0].data.indexOf(foundItem);\n                  if (!foundItem.allocations){\n                    foundItem.allocations = {};\n                  }\n                  foundItem.allocations[p.name] = y;\n                  chartData[0].data[pos] = foundItem;\n                }\n              }\n              return undefined;\n            })[0]\n          }).filter((v) => { return v !== undefined; } )\n        });\n\n        // Set chart type\n        chartType = Line;\n\n        gridYStep = parseFloat(maxChartValue/maxGridLines);\n        gridYValues = [0];\n        for (let i=1;i<=5;i++){\n          gridYValues.push(i*gridYStep);\n        }\n\n        chartProps = {\n          xScale:{\n            type: 'time',\n            format: '%Y/%m/%d %H:%M',\n            // precision: 'hour',\n          },\n          xFormat:'time:%b %d %H:%M',\n          yFormat:v => this.functionsUtil.formatMoney(v,v<1 ? 3 :0),\n          yScale:{\n            type: 'linear',\n            stacked: false\n          },\n          axisLeft:{\n            legend: '',\n            tickSize: 0,\n            orient: 'left',\n            tickPadding: 10,\n            tickRotation: 0,\n            legendOffset: -70,\n            tickValues:gridYValues,\n            legendPosition: 'middle',\n            format: v => this.functionsUtil.abbreviateNumber(v,v<1 ? 3 :0),\n          },\n          axisBottom: this.props.isMobile ? null : {\n            tickSize: 0,\n            format: '%b %d',\n            tickPadding: 15,\n            tickValues: this.props.isMobile ? 'every 4 days' : ( this.props.showAdvanced ? 'every 3 days' : 'every 2 days'),\n            orient: 'bottom',\n            legend: '',\n            legendOffset: 0,\n            legendPosition: 'middle'\n          },\n          gridYValues,\n          pointSize:0,\n          useMesh:true,\n          animate:false,\n          pointLabel:\"y\",\n          curve:'linear',\n          enableArea:true,\n          enableSlices:'x',\n          enableGridX:false,\n          enableGridY:true,\n          pointBorderWidth:1,\n          colors:d => d.color,\n          pointLabelYOffset:-12,\n          legends:[\n            {\n              itemWidth: this.props.isMobile ? 70 : 80,\n              itemHeight: 18,\n              translateX: this.props.isMobile ? -35 : 0,\n              translateY: this.props.isMobile ? 40 : 65,\n              symbolSize: 10,\n              itemsSpacing: 5,\n              direction: 'row',\n              anchor: 'bottom-left',\n              symbolShape: 'circle',\n              itemTextColor: theme.colors.legend,\n              effects: [\n                {\n                  on: 'hover',\n                  style: {\n                    itemTextColor: '#000'\n                  }\n                }\n              ]\n            }\n          ],\n          theme:{\n            axis: {\n              ticks: {\n                text: {\n                  fontSize: this.props.isMobile ? 12: 14,\n                  fontWeight:600,\n                  fill:theme.colors.legend,\n                  fontFamily: theme.fonts.sansSerif\n                }\n              }\n            },\n            grid: {\n              line: {\n                stroke: theme.colors.lineChartStroke, strokeDasharray: '10 6'\n              }\n            },\n            legends:{\n              text:{\n                fontSize: this.props.isMobile ? 12: 14,\n                fontWeight:500,\n                fontFamily: theme.fonts.sansSerif\n              }\n            }\n          },\n          pointColor:{ from: 'color', modifiers: []},\n          margin: this.props.isMobile ? { top: 20, right: 20, bottom: 40, left: 65 } : { top: 20, right: 40, bottom: 70, left: 70 },\n          sliceTooltip:(slideData) => {\n            const { slice } = slideData;\n            const point = slice.points[0];\n            if (typeof point === 'object' && typeof point.data === 'object'){\n              return (\n                <CustomTooltip\n                  point={point}\n                >\n                  <CustomTooltipRow\n                    label={point.serieId}\n                    color={point.serieColor}\n                    value={point.data.yFormatted}\n                  />\n                  {\n                    point.data.allocations && typeof point.data.allocations === 'object' &&\n                      Object.keys(point.data.allocations).map(protocolName => {\n                        const protocolColor = 'hsl('+globalConfigs.stats.protocols[protocolName].color.hsl.join(',')+')';\n                        const protocolAllocation = point.data.allocations[protocolName];\n                        const protocolAllocationFormatted = this.functionsUtil.formatMoney(protocolAllocation,protocolAllocation<1 ? 3 : 0);\n                        const protocolAllocationPerc = this.functionsUtil.BNify(point.data.allocations[protocolName]).div(this.functionsUtil.BNify(point.data.y)).times(100).toFixed(0)+'%';\n                        return (\n                          <CustomTooltipRow\n                            label={protocolName}\n                            color={protocolColor}\n                            key={`${point.id}_${protocolName}`}\n                            value={`${protocolAllocationFormatted} (${protocolAllocationPerc})`}\n                          />\n                        );\n                      })\n                  }\n                </CustomTooltip>\n              );\n              /*\n              return (\n                <div\n                    key={point.id}\n                    style={{\n                      background: 'white',\n                      color: 'inherit',\n                      fontSize: 'inherit',\n                      borderRadius: '2px',\n                      boxShadow: 'rgba(0, 0, 0, 0.25) 0px 1px 2px',\n                      padding: '5px 9px'\n                    }}\n                >\n                  <div>\n                    <table style={{width:'100%',borderCollapse:'collapse'}}>\n                      <tbody>\n                        <tr>\n                          <td style={{padding:'3px 5px'}}>\n                            <span style={{display:'block', width: '12px', height: '12px', background: point.serieColor}}></span>\n                          </td>\n                          <td style={{padding:'3px 5px'}}>{point.serieId}</td>\n                          <td style={{padding:'3px 5px'}}><strong>{point.data.yFormatted}</strong></td>\n                        </tr>\n                        {\n                          point.data.allocations && typeof point.data.allocations === 'object' &&\n                            Object.keys(point.data.allocations).map(protocolName => {\n                              const protocolColor = 'hsl('+globalConfigs.stats.protocols[protocolName].color.hsl.join(',')+')';\n                              const protocolAllocation = this.functionsUtil.formatMoney(point.data.allocations[protocolName],0);\n                              const protocolAllocationPerc = this.functionsUtil.BNify(point.data.allocations[protocolName]).div(this.functionsUtil.BNify(point.data.y)).times(100).toFixed(0)+'%';\n                              return (\n                                <tr key={`${point.id}_${protocolName}`}>\n                                  <td style={{padding:'3px 5px'}}>\n                                    <span style={{display:'block', width: '12px', height: '12px', background: protocolColor}}></span>\n                                  </td>\n                                  <td style={{padding:'3px 5px',textTransform:'capitalize'}}>{protocolName}</td>\n                                  <td style={{padding:'3px 5px'}}><strong>{protocolAllocation}</strong> ({protocolAllocationPerc})</td>\n                                </tr>\n                              );\n                            })\n                        }\n                      </tbody>\n                    </table>\n                  </div>\n                </div>\n              );\n              */\n            }\n\n            return null;\n          }\n        };\n      break;\n      case 'ALL':\n        keys = {};\n        tempData = {};\n\n        apiResults.forEach((d,i) => {\n          const date = moment(d.timestamp*1000).format(\"YYYY/MM/DD\");\n\n          let row = {\n            date\n          };\n\n          d.protocolsData.forEach((protocolData) => {\n            const protocolPaused = this.functionsUtil.BNify(protocolData.rate).eq(0);\n            const foundProtocol = this.props.tokenConfig.protocols.find((p) => { return p.address.toLowerCase() === protocolData.protocolAddr.toLowerCase() });\n            if (foundProtocol){\n              const protocolName = this.functionsUtil.capitalize(foundProtocol.name);\n              if (!protocolPaused){\n                let allocation = parseFloat(this.functionsUtil.fixTokenDecimals(protocolData.allocation,this.props.tokenConfig.decimals));\n                keys[protocolName] = 1;\n                row[protocolName] = allocation;\n                row[`${protocolName}Color`] = 'hsl('+globalConfigs.stats.protocols[protocolName.toLowerCase()].color.hsl.join(',')+')';\n                // console.log(protocolName,this.functionsUtil.BNify(protocolData.allocation).toString(),this.props.tokenConfig.decimals,allocation);\n                maxChartValue = Math.max(maxChartValue,allocation);\n              } else {\n                row[protocolName] = 0;\n              }\n            }\n          });\n\n\n          tempData[date] = row;\n        });\n\n        chartData = Object.values(tempData);\n\n        // Set chart type\n        chartType = Bar;\n\n        axisBottomIndex = 0;\n\n        gridYStep = parseFloat(maxChartValue/maxGridLines);\n        gridYValues = [0];\n        for (let i=1;i<=5;i++){\n          gridYValues.push(i*gridYStep);\n        }\n\n        chartProps = {\n          padding: 0.2,\n          animate: false,\n          indexBy: 'date',\n          enableLabel: false,\n          labelSkipWidth: 16,\n          labelSkipHeight: 16,\n          keys: Object.keys(keys),\n          labelTextColor: 'inherit:darker(1.4)',\n          colors: ({ id, data }) => data[`${id}Color`],\n          axisLeft:{\n            format: v => this.functionsUtil.abbreviateNumber(v,v<1 ? 3 :0),\n            orient: 'left',\n            tickSize: 0,\n            tickPadding: 10,\n            tickRotation: 0,\n            legend: '',\n            legendOffset: -65,\n            tickValues:gridYValues,\n            legendPosition: 'middle'\n          },\n          gridYValues,\n          axisBottom: this.props.isMobile ? null : {\n            legend: '',\n            format: (value) => {\n              if (axisBottomIndex++ % 3 === 0){\n                return moment(value,'YYYY/MM/DD HH:mm').format('MMM DD')\n              }\n            },\n            tickSize: 0,\n            tickPadding: 10,\n            orient: 'bottom-left',\n            legendOffset: 36,\n            legendPosition: 'middle',\n            tickValues: 'every 3 days'\n          },\n          legends:[\n            {\n              dataFrom:'keys',\n              itemWidth: this.props.isMobile ? 70 : 80,\n              itemHeight: 18,\n              translateX: this.props.isMobile ? -35 : 0,\n              translateY: this.props.isMobile ? 40 : 65,\n              symbolSize: 10,\n              itemsSpacing: 5,\n              direction: 'row',\n              anchor: 'bottom-left',\n              symbolShape: 'circle',\n              itemTextColor: theme.colors.legend,\n              effects: [\n                {\n                  on: 'hover',\n                  style: {\n                    itemTextColor: '#000'\n                  }\n                }\n              ]\n            }\n          ],\n          theme:{\n            axis: {\n              ticks: {\n                text: {\n                  fontSize:this.props.isMobile ? 12 : 14,\n                  fontWeight:600,\n                  fill:theme.colors.legend,\n                  fontFamily: theme.fonts.sansSerif\n                }\n              }\n            },\n            grid: {\n              line: {\n                stroke: theme.colors.lineChartStroke, strokeDasharray: '10 6'\n              }\n            },\n            legends:{\n              text:{\n                fontSize:this.props.isMobile ? 12 : 14,\n                fontWeight:500,\n                fontFamily: theme.fonts.sansSerif\n              }\n            }\n          },\n          pointColor:{ from: 'color', modifiers: []},\n          margin: this.props.isMobile ? { top: 20, right: 20, bottom: 40, left: 65 } : { top: 20, right: 40, bottom: 70, left: 60 },\n          tooltip:({ id, value, color }) => {\n            const allocation = this.functionsUtil.formatMoney(value,0);\n            return (\n              <table style={{width:'100%',borderCollapse:'collapse'}}>\n                <tbody>\n                  <tr>\n                    <td style={{padding:'3px 5px'}}>\n                      <span style={{display:'block', width: '12px', height: '12px', background: color}}></span>\n                    </td>\n                    <td style={{padding:'3px 5px',textTransform:'capitalize'}}>{id}</td>\n                    <td style={{padding:'3px 5px'}}><strong>{allocation} {this.props.selectedToken}</strong></td>\n                  </tr>\n                </tbody>\n              </table>\n            )\n          }\n        }\n      break;\n      case 'ALL_PERC':\n        keys = {};\n        tempData = {};\n\n        apiResults.forEach((d,i) => {\n          const date = moment(d.timestamp*1000).format(\"YYYY/MM/DD\")\n          let row = {\n            date:moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\")\n          };\n          if (tempData[date]){\n            row = tempData[date];\n          }\n\n          const totalAllocation = d.protocolsData.reduce((accumulator,protocolAllocation) => {\n            const allocation = this.functionsUtil.fixTokenDecimals(protocolAllocation.allocation,this.props.tokenConfig.decimals);\n            return this.functionsUtil.BNify(accumulator).plus(allocation);\n          },0);\n\n          d.protocolsData.forEach((protocolData) => {\n            const protocolPaused = this.functionsUtil.BNify(protocolData.rate).eq(0);\n            const protocolName = this.props.tokenConfig.protocols.filter((p) => { return p.address.toLowerCase() === protocolData.protocolAddr.toLowerCase() })[0].name;\n            if (!protocolPaused){\n              const allocation = this.functionsUtil.fixTokenDecimals(protocolData.allocation,this.props.tokenConfig.decimals);\n              const allocationPerc = parseFloat(allocation.div(totalAllocation).times(100));\n              keys[protocolName] = 1;\n              row[protocolName] = allocationPerc;\n              row[`${protocolName}Color`] = 'hsl('+globalConfigs.stats.protocols[protocolName].color.hsl.join(',')+')';\n            } else if (typeof row[protocolName] !== undefined) {\n              row[protocolName] = 0;\n            } \n          });\n          \n          tempData[date] = row;\n        });\n\n        chartData = Object.values(tempData);\n\n        // Set chart type\n        chartType = Bar;\n\n        axisBottomIndex = 0;\n\n        chartProps = {\n          padding: 0.2,\n          animate: false,\n          indexBy: 'date',\n          data: chartData,\n          enableLabel: false,\n          labelSkipWidth: 16,\n          labelSkipHeight: 16,\n          keys: Object.keys(keys),\n          labelTextColor: 'inherit:darker(1.4)',\n          margin: this.props.isMobile ? { top: 20, right: 20, bottom: 40, left: 50 } : { top: 20, right: 40, bottom: 40, left: 60 },\n          colors: ({ id, data }) => data[`${id}Color`],\n          axisLeft:{\n            format: v => parseInt(v)+'%'\n          },\n          axisBottom: this.props.isMobile ? null : {\n            legend: '',\n            format: (value) => {\n              if (axisBottomIndex++ % 3 === 0){\n                return moment(value,'YYYY/MM/DD HH:mm').format('MMM DD')\n              }\n            },\n            orient: 'bottom',\n            legendOffset: 36,\n            legendPosition: 'middle',\n            tickValues: 'every 3 days'\n          },\n          tooltip:({ id, value, color }) => {\n            const allocation = parseInt(value)===100 ? this.functionsUtil.formatMoney(value,0) : this.functionsUtil.formatMoney(value,2);\n            return (\n              <table style={{width:'100%',borderCollapse:'collapse'}}>\n                <tbody>\n                  <tr>\n                    <td style={{padding:'3px 5px'}}>\n                      <span style={{display:'block', width: '12px', height: '12px', background: color}}></span>\n                    </td>\n                    <td style={{padding:'3px 5px',textTransform:'capitalize'}}>{id}</td>\n                    <td style={{padding:'3px 5px'}}><strong>{allocation}%</strong></td>\n                  </tr>\n                </tbody>\n              </table>\n            )\n          }\n        }\n      break;\n      case 'APR':\n\n        maxChartValue = 0;\n\n        this.props.tokenConfig.protocols.forEach((p,j) => {\n          if (chartData.filter(d => { return d.name === p.name; }).length){\n            return;\n          }\n          chartData.push({\n            id:p.name,\n            color:'hsl('+globalConfigs.stats.protocols[p.name].color.hsl.join(',')+')',\n            data:apiResults.map((d,i) => {\n              return d.protocolsData.filter((protocolAllocation,x) => {\n                  return protocolAllocation.protocolAddr.toLowerCase() === p.address.toLowerCase()\n              })\n              .map((protocolAllocation,z) => {\n                const protocolPaused = this.functionsUtil.BNify(protocolAllocation.rate).eq(0);\n                if (!protocolPaused){\n                  const x = moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                  const y = parseFloat(this.functionsUtil.fixTokenDecimals(protocolAllocation.rate,18));\n\n                  maxChartValue = Math.max(maxChartValue,y);\n\n                  return { x, y };\n                }\n                return undefined;\n              })[0]\n            }).filter((v) => { return v !== undefined; } )\n          })\n        });\n\n        chartData.push({\n          id:'Idle',\n          color: 'hsl('+globalConfigs.stats.protocols.idle.color.hsl.join(',')+')',\n          data: apiResults.map((d,i) => {\n            const x = moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n            const y = parseFloat(this.functionsUtil.fixTokenDecimals(d.idleRate,18));\n\n            maxChartValue = Math.max(maxChartValue,y);\n\n            return { x, y };\n          })\n        });\n\n        // Set chart type\n        chartType = Line;\n\n        gridYStep = parseFloat(maxChartValue/maxGridLines);\n        gridYValues = [0];\n        for (let i=1;i<=5;i++){\n          gridYValues.push(i*gridYStep);\n        }\n\n        chartProps = {\n          xScale:{\n            type: 'time',\n            format: '%Y/%m/%d %H:%M',\n            // precision: 'hour',\n          },\n          xFormat:'time:%b %d %H:%M',\n          yFormat:value => parseFloat(value).toFixed(2)+'%',\n          yScale:{\n            type: 'linear',\n            stacked: false\n          },\n          axisLeft:{\n            legend: '',\n            tickSize: 0,\n            orient: 'left',\n            tickPadding: 10,\n            tickRotation: 0,\n            legendOffset: -70,\n            tickValues:gridYValues,\n            legendPosition: 'middle',\n            format:value => parseFloat(value).toFixed(1)+'%',\n          },\n          axisBottom: this.props.isMobile ? null : {\n            tickSize: 0,\n            format: '%b %d',\n            tickPadding: 15,\n            tickValues: this.props.isMobile ? 'every 4 days' : ( this.props.showAdvanced ? 'every 3 days' : 'every 2 days'),\n            orient: 'bottom',\n            legend: '',\n            legendOffset: 0,\n            legendPosition: 'middle'\n          },\n          gridYValues,\n          pointSize:0,\n          useMesh:true,\n          animate:false,\n          pointLabel:\"y\",\n          curve:'linear',\n          enableArea:false,\n          enableSlices:'x',\n          enableGridX:false,\n          enableGridY:true,\n          pointBorderWidth:1,\n          colors:d => d.color,\n          pointLabelYOffset:-12,\n          legends:[\n            {\n              itemWidth: this.props.isMobile ? 70 : 80,\n              itemHeight: 18,\n              translateX: this.props.isMobile ? -35 : 0,\n              translateY: this.props.isMobile ? 40 : 65,\n              symbolSize: 10,\n              itemsSpacing: 0,\n              direction: 'row',\n              anchor: 'bottom-left',\n              symbolShape: 'circle',\n              itemTextColor: theme.colors.legend,\n              effects: [\n                {\n                  on: 'hover',\n                  style: {\n                    itemTextColor: '#000'\n                  }\n                }\n              ]\n            }\n          ],\n          theme:{\n            axis: {\n              ticks: {\n                text: {\n                  fontSize: this.props.isMobile ? 12: 14,\n                  fontWeight:600,\n                  fill:theme.colors.legend,\n                  fontFamily: theme.fonts.sansSerif\n                }\n              }\n            },\n            grid: {\n              line: {\n                stroke: theme.colors.lineChartStroke, strokeDasharray: '10 6'\n              }\n            },\n            legends:{\n              text:{\n                fontSize: this.props.isMobile ? 12: 14,\n                fontWeight:500,\n                fontFamily: theme.fonts.sansSerif\n              }\n            }\n          },\n          pointColor:{ from: 'color', modifiers: []},\n          margin: this.props.isMobile ? { top: 20, right: 20, bottom: 40, left: 65 } : { top: 20, right: 40, bottom: 70, left: 70 },\n          sliceTooltip:(slideData) => {\n            const { slice } = slideData;\n            const point = slice.points[0];\n            return (\n              <CustomTooltip\n                point={point}\n              >\n                {\n                typeof slice.points === 'object' && slice.points.length &&\n                  slice.points.map(point => {\n                    const protocolName = point.serieId;\n                    const protocolEarning = point.data.yFormatted;\n                    // const protocolApy = point.data.apy;\n                    return (\n                      <CustomTooltipRow\n                        key={point.id}\n                        color={point.color}\n                        label={protocolName}\n                        value={protocolEarning}\n                      />\n                    );\n                  })\n                }\n              </CustomTooltip>\n            );\n          }\n        };\n      break;\n      case 'SCORE':\n\n        let prevValue = 0;\n        maxChartValue = 0;\n\n        this.props.tokenConfig.protocols.forEach((p,j) => {\n          if (chartData.filter(d => { return d.name === p.name; }).length){\n            return;\n          }\n\n          chartData.push({\n            id:p.name,\n            color:'hsl('+globalConfigs.stats.protocols[p.name].color.hsl.join(',')+')',\n            data:apiResults.map((d,i) => {\n              return d.protocolsData.filter((protocolAllocation,x) => {\n                  return protocolAllocation.protocolAddr.toLowerCase() === p.address.toLowerCase()\n              })\n              .map((protocolAllocation,z) => {\n                const x = moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                let y = parseFloat(protocolAllocation.defiScore);\n\n                y = isNaN(y) || !y ? prevValue : y;\n                prevValue = y;\n                maxChartValue = Math.max(maxChartValue,y);\n\n                return { x, y };\n              })[0]\n            }).filter((v) => { return v !== undefined; } )\n          })\n        });\n\n        chartData.push({\n          id:'Idle',\n          color: 'hsl('+globalConfigs.stats.protocols.idle.color.hsl.join(',')+')',\n          data: apiResults.map((d,i) => {\n            const x = moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n            let y = parseFloat(d.idleScore);\n            y = isNaN(y) || !y ? prevValue : y;\n            prevValue = y;\n            maxChartValue = Math.max(maxChartValue,y);\n\n            return { x, y };\n          })\n        });\n\n        // debugger;\n\n        // Set chart type\n        chartType = Line;\n\n        gridYStep = parseFloat(maxChartValue/maxGridLines);\n        gridYValues = [0];\n        for (let i=1;i<=5;i++){\n          gridYValues.push(i*gridYStep);\n        }\n\n        chartProps = {\n          xScale:{\n            type: 'time',\n            format: '%Y/%m/%d %H:%M',\n            // precision: 'hour',\n          },\n          xFormat:'time:%b %d %H:%M',\n          yFormat:value => parseFloat(value).toFixed(1),\n          yScale:{\n            type: 'linear',\n            stacked: false\n          },\n          axisLeft:{\n            legend: '',\n            tickSize: 0,\n            orient: 'left',\n            tickPadding: 10,\n            tickRotation: 0,\n            legendOffset: -70,\n            tickValues:gridYValues,\n            legendPosition: 'middle',\n            format:value => parseFloat(value).toFixed(1),\n          },\n          axisBottom: this.props.isMobile ? null : {\n            tickSize: 0,\n            format: '%b %d',\n            tickPadding: 15,\n            tickValues: this.props.isMobile ? 'every 4 days' : ( this.props.showAdvanced ? 'every 3 days' : 'every 2 days'),\n            orient: 'bottom',\n            legend: '',\n            legendOffset: 0,\n            legendPosition: 'middle'\n          },\n          gridYValues,\n          pointSize:0,\n          useMesh:true,\n          animate:false,\n          pointLabel:\"y\",\n          curve:'linear',\n          enableArea:false,\n          enableSlices:'x',\n          enableGridX:false,\n          enableGridY:true,\n          pointBorderWidth:1,\n          colors:d => d.color,\n          pointLabelYOffset:-12,\n          legends:[\n            {\n              itemWidth: this.props.isMobile ? 70 : 80,\n              itemHeight: 18,\n              translateX: this.props.isMobile ? -35 : 0,\n              translateY: this.props.isMobile ? 40 : 65,\n              symbolSize: 10,\n              itemsSpacing: 0,\n              direction: 'row',\n              anchor: 'bottom-left',\n              symbolShape: 'circle',\n              itemTextColor: theme.colors.legend,\n              effects: [\n                {\n                  on: 'hover',\n                  style: {\n                    itemTextColor: '#000'\n                  }\n                }\n              ]\n            }\n          ],\n          theme:{\n            axis: {\n              ticks: {\n                text: {\n                  fontSize: this.props.isMobile ? 12: 14,\n                  fontWeight:600,\n                  fill:theme.colors.legend,\n                  fontFamily: theme.fonts.sansSerif\n                }\n              }\n            },\n            grid: {\n              line: {\n                stroke: theme.colors.lineChartStroke, strokeDasharray: '10 6'\n              }\n            },\n            legends:{\n              text:{\n                fontSize: this.props.isMobile ? 12: 14,\n                fontWeight:500,\n                fontFamily: theme.fonts.sansSerif\n              }\n            }\n          },\n          pointColor:{ from: 'color', modifiers: []},\n          margin: this.props.isMobile ? { top: 20, right: 20, bottom: 40, left: 65 } : { top: 20, right: 40, bottom: 70, left: 70 },\n          sliceTooltip:(slideData) => {\n            const { slice } = slideData;\n            const point = slice.points[0];\n            return (\n              <CustomTooltip\n                point={point}\n              >\n                {\n                typeof slice.points === 'object' && slice.points.length &&\n                  slice.points.map(point => {\n                    const protocolName = point.serieId;\n                    const protocolEarning = point.data.yFormatted;\n                    return (\n                      <CustomTooltipRow\n                        key={point.id}\n                        color={point.color}\n                        label={protocolName}\n                        value={protocolEarning}\n                      />\n                    );\n                  })\n                }\n              </CustomTooltip>\n            );\n          }\n        };\n      break;\n      case 'PRICE_V4':\n\n        itemIndex = 0;\n        maxChartValue = 0;\n        // let prevApy = null;\n        let prevApr = null;\n        let prevData = null;\n        let startBalance = this.functionsUtil.BNify(1);\n        let currentBalance = this.functionsUtil.BNify(1);\n        let avgApy = this.functionsUtil.BNify(0);\n\n        // console.log('PRICE_V4',apiResults);\n\n        idleChartData = apiResults.map((d,i) => {\n\n          let y = 0;\n          let apy = 0;\n          const x = moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n          const apr = this.functionsUtil.fixTokenDecimals(d.idleRate,18).div(100);\n          // const apy = this.functionsUtil.apr2apy(apr);\n          \n          avgApy = avgApy.plus(apr.times(100));\n\n          if (prevApr){\n            const days = (d.timestamp-prevData.timestamp)/86400;\n            // const totDays = (d.timestamp-apiResults[0].timestamp)/86400;\n\n            const earnings = currentBalance.times(prevApr.times(days).div(365));\n            currentBalance = currentBalance.plus(earnings);\n\n            const earning = currentBalance.div(startBalance).minus(1).times(100);\n            y = parseFloat(earning);\n\n            // apy = earning.times(365).div(totDays).toFixed(2);\n            apy = avgApy.div(i+1).toFixed(2);\n          }\n\n          prevData = d;\n          // prevApy = apy;\n          prevApr = apr;\n\n          if (firstIdleBlock === null){\n            firstIdleBlock = parseInt(d.blocknumber);\n          }\n\n          maxChartValue = Math.max(maxChartValue,y);\n\n          const itemPos = Math.floor(itemIndex/totalItems*100);\n          const blocknumber = d.blocknumber;\n\n          itemIndex++;\n\n          return { x, y, apy, blocknumber, itemPos };\n        });\n\n        // Add Additional protocols\n        if (versionInfo.additionalProtocols && versionInfo.additionalProtocols.length>0){\n          versionInfo.additionalProtocols.forEach( additionalProtocol => {\n            const protocolInfo = this.props.tokenConfig.protocols.find( p => (p.name === additionalProtocol.protocol));\n            if (protocolInfo){\n              additionalProtocol.enabled = true;\n              additionalProtocol.address = protocolInfo.address;\n              protocols.unshift(additionalProtocol);\n            }\n          });\n        }\n\n        protocols.forEach( p => {\n\n          const protocolInfo = globalConfigs.stats.protocols[p.name];\n          const rateField = protocolInfo.rateField ? protocolInfo.rateField : 'rate';\n\n          const chartRow = {\n            id:protocolInfo.label,\n            color: 'hsl('+protocolInfo.color.hsl.join(',')+')',\n            data: []\n          };\n\n          itemIndex = 0;\n          // prevApy = null;\n          prevApr = null;\n          prevData = null;\n          let baseProfit = 0;\n          let firstProtocolData = null;\n          let firstProtocolBlock = null;\n          avgApy = this.functionsUtil.BNify(0);\n          startBalance = this.functionsUtil.BNify(1);\n          currentBalance = this.functionsUtil.BNify(1);\n\n          apiResults.forEach( (d,i) => {\n\n            const protocolData = d.protocolsData.find((pData,x) => {\n              return pData.protocolAddr.toLowerCase() === p.address.toLowerCase()\n            });\n\n            if (protocolData){\n\n              if (!firstProtocolData){\n                firstProtocolData = protocolData;\n              }\n\n              const protocolRate = typeof rateField === 'object' && rateField.length ? rateField.reduce((acc,field) => {\n                if (protocolData[field]){\n                  return this.functionsUtil.BNify(acc).plus(this.functionsUtil.BNify(protocolData[field]));\n                }\n                return this.functionsUtil.BNify(acc);\n              },0) : this.functionsUtil.BNify(protocolData[rateField]);\n\n              const protocolPaused = protocolRate.eq(0);\n              if (!protocolPaused){\n\n                // Start new protocols from Idle performances\n                if (firstProtocolBlock === null){\n                  firstProtocolBlock = parseInt(d.blocknumber);\n                  if (firstProtocolBlock>firstIdleBlock){\n                    const idlePerformance = idleChartData.find(d1 => (d1.blocknumber>=firstProtocolBlock) );\n                    if (idlePerformance){\n                      baseProfit = idlePerformance.y;\n                    }\n                  }\n                }\n\n                let rowData = {};\n\n                let y = 0;\n                let apy = 0;\n                const x = moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const apr = this.functionsUtil.fixTokenDecimals(protocolRate,18).div(100);\n\n                avgApy = avgApy.plus(apr.times(100));\n                // const apy = this.functionsUtil.apr2apy(apr);\n\n                if (prevData){\n                  const days = (d.timestamp-prevData.timestamp)/86400;\n                  // const totDays = (d.timestamp-apiResults[0].timestamp)/86400;\n\n                  const earnings = currentBalance.times(prevApr.times(days).div(365));\n                  currentBalance = currentBalance.plus(earnings);\n\n                  const earning = currentBalance.div(startBalance).minus(1).times(100);\n                  y = parseFloat(earning)+baseProfit;\n\n                  apy = avgApy.div(i+1).toFixed(2);\n                }\n\n                prevData = d;\n                prevApr = apr;\n\n                if (firstIdleBlock === null){\n                  firstIdleBlock = parseInt(d.blocknumber);\n                }\n\n                maxChartValue = Math.max(maxChartValue,y);\n\n                const itemPos = Math.floor(itemIndex/totalItems*100);\n                // const blocknumber = d.blocknumber;\n\n                itemIndex++;\n\n                rowData = {\n                  x,\n                  y,\n                  apy,\n                  itemPos\n                };\n\n                itemIndex++;\n                chartRow.data.push(rowData);\n              }\n            }\n          });\n\n          chartData.push(chartRow);\n        });\n\n        gridYStep = parseFloat(maxChartValue/maxGridLines);\n        gridYValues = [0];\n        for (let i=1;i<=5;i++){\n          gridYValues.push(i*gridYStep);\n        }\n\n        chartData.push({\n          id:'Idle',\n          color: 'hsl('+globalConfigs.stats.protocols.idle.color.hsl.join(',')+')',\n          data: idleChartData\n        });\n\n        // Set chart type\n        chartType = Line;\n\n        chartProps = {\n          xScale:{\n            type: 'time',\n            format: '%Y/%m/%d %H:%M',\n            // precision: 'day',\n          },\n          xFormat:'time:%b %d %H:%M',\n          yFormat:value => parseFloat(value).toFixed(3)+'%',\n          yScale:{\n            type: 'linear',\n            stacked: false,\n            // min: 1\n          },\n          axisLeft:{\n            legend: '',\n            tickSize: 0,\n            orient: 'left',\n            tickPadding: 10,\n            tickRotation: 0,\n            legendOffset: -70,\n            tickValues:gridYValues,\n            legendPosition: 'middle',\n            format: value => parseFloat(value).toFixed(2)+'%',\n          },\n          axisBottom: this.props.isMobile ? null : {\n            legend: '',\n            tickSize: 0,\n            format: '%b %d',\n            tickPadding: 10,\n            legendOffset: 0,\n            orient: 'bottom',\n            legendPosition: 'middle',\n            tickValues: this.props.isMobile ? 'every 4 days' : ( this.props.showAdvanced ? 'every 3 days' : 'every 2 days'),\n          },\n          gridYValues,\n          pointSize:0,\n          useMesh:true,\n          animate:false,\n          pointLabel:\"y\",\n          curve:'monotoneX',\n          enableArea:false,\n          enableSlices:'x',\n          enableGridX:false,\n          enableGridY:true,\n          pointBorderWidth:1,\n          colors:d => d.color,\n          pointLabelYOffset:-12,\n          legends:[\n            {\n              itemHeight: 18,\n              itemWidth: this.props.isMobile ? 70 : 100,\n              translateX: this.props.isMobile ? -35 : 0,\n              translateY: this.props.isMobile ? 40 : 65,\n              symbolSize: 10,\n              itemsSpacing: 5,\n              direction: 'row',\n              anchor: 'bottom-left',\n              symbolShape: 'circle',\n              itemTextColor: theme.colors.legend,\n              effects: [\n                {\n                  on: 'hover',\n                  style: {\n                    itemTextColor: '#000'\n                  }\n                }\n              ]\n            }\n          ],\n          theme:{\n            axis: {\n              ticks: {\n                text: {\n                  fontSize: this.props.isMobile ? 12: 14,\n                  fontWeight:600,\n                  fill:theme.colors.legend,\n                  fontFamily: theme.fonts.sansSerif\n                }\n              }\n            },\n            grid: {\n              line: {\n                stroke: theme.colors.lineChartStroke, strokeDasharray: '10 6'\n              }\n            },\n            legends:{\n              text:{\n                fontSize: this.props.isMobile ? 12: 14,\n                fontWeight:500,\n                fontFamily: theme.fonts.sansSerif\n              }\n            }\n          },\n          pointColor:{ from: 'color', modifiers: []},\n          margin: this.props.isMobile ? { top: 20, right: 20, bottom: 40, left: 65 } : { top: 20, right: 40, bottom: 80, left: 80 },\n          sliceTooltip:(slideData) => {\n            const { slice } = slideData;\n            const point = slice.points[0];\n            return (\n              <CustomTooltip\n                point={point}\n              >\n                {\n                typeof slice.points === 'object' && slice.points.length &&\n                  slice.points.map(point => {\n                    const protocolName = point.serieId;\n                    const protocolEarning = point.data.yFormatted;\n                    const protocolApy = point.data.apy;\n                    return (\n                      <CustomTooltipRow\n                        key={point.id}\n                        label={protocolName}\n                        color={point.color}\n                        value={`${protocolEarning} <small>(${protocolApy}% APY)</small>`}\n                      />\n                    );\n                  })\n                }\n              </CustomTooltip>\n            );\n          }\n        };\n      break;\n      case 'PRICE':\n        // let prevTokenPrice = null;\n        maxChartValue = 0;\n        let firstTokenPrice = null;\n\n        idleChartData = apiResults.map((d,i) => {\n\n          let y = 0;\n          let apy = 0;\n          let days = 0;\n          const x = moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n          const tokenPrice = this.functionsUtil.fixTokenDecimals(d.idlePrice,this.props.tokenConfig.decimals);\n\n          if (!firstTokenPrice){\n            firstTokenPrice = tokenPrice;\n          } else {\n            y = parseFloat(tokenPrice.div(firstTokenPrice).minus(1).times(100));\n\n            days = (d.timestamp-apiResults[0].timestamp)/86400;\n            const earning = tokenPrice.div(firstTokenPrice).minus(1).times(100);\n            apy = earning.times(365).div(days).toFixed(2);\n\n            // console.log(firstTokenPrice.toString(),tokenPrice.toString(),earning.toString(),days,y,apy);\n          }\n\n          if (firstIdleBlock === null){\n            firstIdleBlock = parseInt(d.blocknumber);\n          }\n\n          maxChartValue = Math.max(maxChartValue,y);\n\n          const itemPos = Math.floor(itemIndex/totalItems*100);\n          const blocknumber = d.blocknumber;\n\n          itemIndex++;\n\n          return { x, y, apy, blocknumber, itemPos };\n        });\n\n        // Add Additional protocols\n        if (versionInfo.additionalProtocols && versionInfo.additionalProtocols.length>0){\n          versionInfo.additionalProtocols.forEach( additionalProtocol => {\n            const protocolInfo = this.props.tokenConfig.protocols.find( p => (p.name === additionalProtocol.protocol));\n            if (protocolInfo){\n              additionalProtocol.enabled = true;\n              additionalProtocol.address = protocolInfo.address;\n              protocols.unshift(additionalProtocol);\n            }\n          });\n        }\n\n        await this.functionsUtil.asyncForEach(protocols,async (p) => {\n\n          const protocolInfo = globalConfigs.stats.protocols[p.name];\n          const rateField = protocolInfo.rateField ? protocolInfo.rateField : 'rate';\n\n          const chartRow = {\n            id:protocolInfo.label,\n            color: 'hsl('+protocolInfo.color.hsl.join(',')+')',\n            data: []\n          };\n\n          itemIndex = 0;\n          let baseProfit = 0;\n          firstTokenPrice = null;\n          let lastRowData = null;\n          let lastTokenPrice = null;\n          let firstProtocolData = null;\n          let firstProtocolBlock = null;\n\n          await this.functionsUtil.asyncForEach(apiResults,async (d) => {\n\n            const protocolData = d.protocolsData.find((pData,x) => {\n              return pData.protocolAddr.toLowerCase() === p.address.toLowerCase()\n            });\n\n            if (protocolData && protocolData[rateField]){\n\n              if (!firstProtocolData){\n                firstProtocolData = protocolData;\n              }\n\n              const protocolPaused = this.functionsUtil.BNify(protocolData[rateField]).eq(0);\n              if (!protocolPaused){\n\n                // Start new protocols from Idle performances\n                if (firstProtocolBlock === null){\n                  firstProtocolBlock = parseInt(d.blocknumber);\n                  if (firstProtocolBlock>firstIdleBlock){\n                    const idlePerformance = idleChartData.find(d1 => {\n                      return d1.blocknumber>=firstProtocolBlock;\n                    });\n                    if (idlePerformance){\n                      baseProfit = idlePerformance.y;\n                    }\n                  }\n                }\n\n                let rowData = {};\n                let tokenExchangeRate = protocolData.price;\n                let tokenPriceFixed = this.functionsUtil.fixTokenDecimals(tokenExchangeRate,p.decimals);\n                const x = moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n\n                // Take data from\n                if (protocolInfo && protocolInfo.data && protocolInfo.data[p.address.toLowerCase()] && protocolInfo.data[p.address.toLowerCase()][d.blocknumber]){\n                  tokenExchangeRate = this.functionsUtil.BNify(globalConfigs.stats.protocols[p.name].data[p.address.toLowerCase()][d.blocknumber]);\n                  tokenPriceFixed = this.functionsUtil.fixTokenDecimals(tokenExchangeRate,p.decimals);\n                }/* else if (p.name === 'aave'){\n                  // Token holders (aDAI = 0xc025c03e10f656d3ee76685d53d236824d8ef3da , aUSDC = 0xd2c734fbd8f5d1c809185e014016dd4097e94711)\n                  let aaveTokenBalance = await this.functionsUtil.genericContractCall(p.token,'balanceOf',['0xd2c734fbd8f5d1c809185e014016dd4097e94711'],{},d.blocknumber);\n                  if (aaveTokenBalance){\n                    if (!Object.values(aave_data).length){\n                      tokenExchangeRate = this.functionsUtil.normalizeTokenAmount(1,p.decimals);\n                      aave_data[d.blocknumber] = aaveTokenBalance.toString();\n                    } else {\n                      const firstBalance = Object.values(aave_data)[0];\n                      tokenExchangeRate = this.functionsUtil.normalizeTokenAmount(this.functionsUtil.BNify(aaveTokenBalance).div(this.functionsUtil.BNify(firstBalance)).toFixed(p.decimals),p.decimals);\n                      aave_data[d.blocknumber] = tokenExchangeRate.toString();\n                    }\n                  }\n                }\n                */\n\n                let y = baseProfit;\n                let apy = 0;\n\n                if (!firstTokenPrice){\n                  firstTokenPrice = tokenPriceFixed;\n                } else {\n                  if (tokenPriceFixed.lt(lastTokenPrice)){\n                    firstTokenPrice = tokenPriceFixed;\n                    const lastYDiff = chartRow.data[chartRow.data.length-1].y-chartRow.data[chartRow.data.length-2].y;\n                    y = lastRowData.y+lastYDiff;\n                    baseProfit = y;\n                  } else {\n                    y += parseFloat(tokenPriceFixed.div(firstTokenPrice).minus(1).times(100));\n                  }\n\n                  const days = (d.timestamp-apiResults[0].timestamp)/86400;\n                  const earning = tokenPriceFixed.div(firstTokenPrice).minus(1).times(100);\n                  apy = earning.times(365).div(days).toFixed(2);\n                }\n\n                y = Math.max(0,y);\n                maxChartValue = Math.max(maxChartValue,y);\n\n                const itemPos = Math.floor(itemIndex/totalItems*100);\n\n                rowData = {\n                  x,\n                  y,\n                  apy,\n                  itemPos\n                };\n\n                itemIndex++;\n                lastRowData = rowData;\n                chartRow.data.push(rowData);\n                lastTokenPrice = tokenPriceFixed;\n              }\n            }\n          });\n\n          chartData.push(chartRow);\n        });\n\n        gridYStep = parseFloat(maxChartValue/maxGridLines);\n        gridYValues = [0];\n        for (let i=1;i<=5;i++){\n          gridYValues.push(i*gridYStep);\n        }\n\n        chartData.push({\n          id:'Idle',\n          color: 'hsl('+globalConfigs.stats.protocols.idle.color.hsl.join(',')+')',\n          data: idleChartData\n        });\n\n        // Set chart type\n        chartType = Line;\n\n        chartProps = {\n          xScale:{\n            type: 'time',\n            format: '%Y/%m/%d %H:%M',\n            // precision: 'day',\n          },\n          xFormat:'time:%b %d %H:%M',\n          yFormat:value => parseFloat(value).toFixed(3)+'%',\n          yScale:{\n            type: 'linear',\n            stacked: false,\n            // min: 1\n          },\n          axisLeft:{\n            legend: '',\n            tickSize: 0,\n            orient: 'left',\n            tickPadding: 10,\n            tickRotation: 0,\n            legendOffset: -70,\n            tickValues:gridYValues,\n            legendPosition: 'middle',\n            format: value => parseFloat(value).toFixed(2)+'%',\n          },\n          axisBottom: this.props.isMobile ? null : {\n            legend: '',\n            tickSize: 0,\n            format: '%b %d',\n            tickPadding: 10,\n            legendOffset: 0,\n            orient: 'bottom',\n            legendPosition: 'middle',\n            tickValues: this.props.isMobile ? 'every 4 days' : ( this.props.showAdvanced ? 'every 3 days' : 'every 2 days'),\n          },\n          gridYValues,\n          pointSize:0,\n          useMesh:true,\n          animate:false,\n          pointLabel:\"y\",\n          curve:'monotoneX',\n          enableArea:false,\n          enableSlices:'x',\n          enableGridX:false,\n          enableGridY:true,\n          pointBorderWidth:1,\n          colors:d => d.color,\n          pointLabelYOffset:-12,\n          legends:[\n            {\n              itemHeight: 18,\n              itemWidth: this.props.isMobile ? 70 : 100,\n              translateX: this.props.isMobile ? -35 : 0,\n              translateY: this.props.isMobile ? 40 : 65,\n              symbolSize: 10,\n              itemsSpacing: 5,\n              direction: 'row',\n              anchor: 'bottom-left',\n              symbolShape: 'circle',\n              itemTextColor: theme.colors.legend,\n              effects: [\n                {\n                  on: 'hover',\n                  style: {\n                    itemTextColor: '#000'\n                  }\n                }\n              ]\n            }\n          ],\n          theme:{\n            axis: {\n              ticks: {\n                text: {\n                  fontSize: this.props.isMobile ? 12: 14,\n                  fontWeight:600,\n                  fill:theme.colors.legend,\n                  fontFamily: theme.fonts.sansSerif\n                }\n              }\n            },\n            grid: {\n              line: {\n                stroke: theme.colors.lineChartStroke, strokeDasharray: '10 6'\n              }\n            },\n            legends:{\n              text:{\n                fontSize: this.props.isMobile ? 12: 14,\n                fontWeight:500,\n                fontFamily: theme.fonts.sansSerif\n              }\n            }\n          },\n          pointColor:{ from: 'color', modifiers: []},\n          margin: this.props.isMobile ? { top: 20, right: 20, bottom: 40, left: 65 } : { top: 20, right: 40, bottom: 80, left: 80 },\n          sliceTooltip:(slideData) => {\n            const { slice } = slideData;\n            const point = slice.points[0];\n            return (\n              <CustomTooltip\n                point={point}\n              >\n                {\n                typeof slice.points === 'object' && slice.points.length &&\n                  slice.points.map(point => {\n                    const protocolName = point.serieId;\n                    const protocolEarning = point.data.yFormatted;\n                    const protocolApy = point.data.apy;\n                    return (\n                      <CustomTooltipRow\n                        key={point.id}\n                        label={protocolName}\n                        color={point.color}\n                        value={`${protocolEarning} <small>(${protocolApy}% APY)</small>`}\n                      />\n                    );\n                  })\n                }\n              </CustomTooltip>\n            );\n          }\n        };\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      chartType,\n      chartProps,\n      chartData\n    });\n  }\n\n  render() {\n    return(\n      <GenericChart\n        showLoader={true}\n        {...this.state.chartProps}\n        height={this.props.height}\n        type={this.state.chartType}\n        data={this.state.chartData}\n        width={this.state.chartWidth}\n        isMobile={this.props.isMobile}\n        parentId={this.props.parentId}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default StatsChart;","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\n\nclass Rebalance extends Component {\n\n  state = {\n    loading:true,\n    processing:{\n      rebalance:{\n        txHash:null,\n        loading:false\n      },\n    },\n    shouldRebalance:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.checkRebalance();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged || accountChanged){\n      this.checkRebalance();\n    }\n  }\n\n  checkRebalance = async () => {\n    this.setState({\n      loading:true,\n    });\n\n    const shouldRebalance = await this.functionsUtil.checkRebalance(this.props.tokenConfig);\n\n    this.setState({\n      loading:false,\n      shouldRebalance\n    });\n  }\n\n  rebalance = async (e) => {\n    e.preventDefault();\n\n    const callback = (tx,error) => {\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Rebalance',\n        eventAction: this.props.selectedToken,\n        eventLabel: tx.status,\n      };\n\n      let txDenied = false;\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      if (tx.status === 'success'){\n        // Toast message\n        window.toastProvider.addMessage(`Rebalance completed`, {\n          secondaryMessage: `Now the pool is balanced!`,\n          colorTheme: 'light',\n          actionHref: \"\",\n          actionText: \"\",\n          variant: \"success\",\n        });\n\n      } else if (!txDenied){\n        window.toastProvider.addMessage(`Rebalance error`, {\n          secondaryMessage: `The rebalance has failed, try again...`,\n          colorTheme: 'light',\n          actionHref: \"\",\n          actionText: \"\",\n          variant: \"failure\",\n        });\n      }\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          rebalance:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n\n      this.checkRebalance();\n    }\n\n    const callback_receipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            rebalance:{\n              ...prevState.processing.rebalance,\n              txHash\n            }\n          }\n        })\n      );\n    };\n\n    this.props.contractMethodSendWrapper(this.props.tokenConfig.idle.token, 'rebalance', [], null , callback, callback_receipt);\n\n    this.setState({\n      processing:{\n        rebalance:{\n          txHash:null,\n          loading:true\n        }\n      }\n    });\n  }\n\n  render() {\n    return (\n      <Flex\n        px={3}\n        width={1}\n        minHeight={'100px'}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n      {\n        this.state.loading ? (\n          <FlexLoader\n            flexProps={{\n              flexDirection:'row'\n            }}\n            loaderProps={{\n              size:'30px'\n            }}\n            textProps={{\n              ml:2\n            }}\n            text={'Checking rebalance...'}\n          />\n        ) : (\n          this.state.processing.rebalance.loading ? (\n            <TxProgressBar web3={this.props.web3} waitText={`Rebalance estimated in`} endMessage={`Finalizing rebalance request...`} hash={this.state.processing.rebalance.txHash} />\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                mt={0}\n                mb={3}\n                textAlign={'center'}\n              >\n                {this.state.shouldRebalance ? 'Rebalance the entire pool. All users will bless you.' : 'The pool is already balanced.'}\n              </Text>\n              <RoundButton\n                buttonProps={{\n                  width:'auto',\n                  disabled:!this.state.shouldRebalance\n                }}\n                handleClick={e => this.rebalance(e)}\n              >\n                Rebalance\n              </RoundButton>\n            </Flex>\n          )\n        )\n      }\n      </Flex>\n    )\n  }\n}\n\nexport default Rebalance;","import React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Heading, Text, Tooltip, Icon } from \"rimble-ui\";\n\nclass StatsCard extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          p:3,\n          minHeight:this.props.minHeight ? this.props.minHeight : ['130px','153px']\n        }}\n      >\n        <Flex\n          width={1}\n          alignItems={'flex-start'}\n          flexDirection={'column'}\n          justifyContent={'flex-start'}\n        >\n          <Flex\n            alignItems={'flex-start'}\n            minHeight={ this.props.titleMinHeight ? this.props.titleMinHeight : ['auto','60px'] }\n          >\n            <Heading.h4\n              mb={[3,0]}\n              fontWeight={4}\n              fontSize={[2,3]}\n              textAlign={'left'}\n              color={'dark-gray'}\n              lineHeight={'initial'}\n            >\n              {this.props.title}\n            </Heading.h4>\n          </Flex>\n          {\n            (typeof this.props.value !== 'undefined' && this.props.value !== null && this.props.value.toString().length>0) &&\n              <Text\n                lineHeight={1}\n                fontSize={[4,5]}\n                fontWeight={[3,4]}\n                color={'statValue'}\n                {...this.props.valueProps}\n              >\n                {this.props.value}\n              </Text>\n          }\n          {\n            this.props.children ?\n              this.props.children\n            : null\n          }\n          {\n            (typeof this.props.label !== 'undefined' && this.props.label !== null && this.props.label.toString().length>0) && (\n              <Flex\n                mt={[3,2]}\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <Text\n                  fontSize={1}\n                  fontWeight={3}\n                  color={'legend'}\n                >\n                  {this.props.label}\n                </Text>\n                {\n                  (this.props.labelTooltip && this.props.labelTooltip.length>0) && (\n                    <Tooltip\n                      placement={'top'}\n                      message={this.props.labelTooltip}\n                    >\n                      <Icon\n                        ml={2}\n                        name={\"Info\"}\n                        size={'1em'}\n                        color={'cellTitle'}\n                      />\n                    </Tooltip>\n                  )\n                }\n              </Flex>\n            )\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default StatsCard;","import theme from '../theme';\nimport React, { Component } from 'react';\nimport { Flex, Link, Text } from \"rimble-ui\";\nimport RoundIconButton from '../RoundIconButton/RoundIconButton';\n\nclass Breadcrumb extends Component {\n  render() {\n\n    const showPathMobile = !!this.props.showPathMobile;\n\n    return (\n      <Flex\n        width={1}\n        id={'breadcrumb'}\n        alignItems={'center'}\n      >\n        {\n          this.props.handleClick && \n           <RoundIconButton\n             buttonProps={{\n               width:'35px',\n               height:'35px'\n             }}\n             iconSize={'1.2em'}\n             iconName={'ArrowBack'}\n             handleClick={this.props.handleClick}\n           />\n        }\n        {\n          this.props.text && this.props.text.length>0 &&\n           <Link\n             ml={[2,3]}\n             fontSize={[1,2]}\n             fontWeight={3}\n             color={'cellText'}\n             hoverColor={'copyColor'}\n             onClick={this.props.handleClick}\n           >\n            {this.props.text}\n           </Link>\n        }\n        {\n          (!this.props.isMobile || showPathMobile) && this.props.path && this.props.path.length>0 &&\n            this.props.path.map((path,index) => {\n              const link = this.props.pathLink ? (this.props.pathLink[index] || null) : null;\n              const Component = link ? Link : Text;\n              return (\n                <Component\n                  pl={[1,3]}\n                  ml={[1,3]}\n                  fontWeight={3}\n                  fontSize={[1,2]}\n                  hoverColor={'copyColor'}\n                  style={ !this.props.isMobile ? {\n                    maxWidth:'30%',\n                    overflow: 'hidden',\n                    whiteSpace: 'nowrap',\n                    textOverflow: 'ellipsis',\n                    borderLeft: `1px solid ${theme.colors.divider}`\n                  } : null }\n                  key={`breadcrumb_path_${index}`}\n                  color={link ? 'cellText' : 'statValue'}\n                  onClick={link ? e => this.props.goToSection(link) : null}\n                >\n                  {path}\n                </Component>\n              );\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Breadcrumb;","import React from \"react\";\nimport {\n  Modal,\n  Button,\n  Flex,\n  Field,\n  Select\n} from \"rimble-ui\";\nimport moment from 'moment';\nimport ModalCard from './ModalCard';\nimport 'react-date-range/dist/styles.css';\nimport { DateRange } from 'react-date-range';\nimport 'react-date-range/dist/theme/default.css';\n\nclass DateRangeModal extends React.Component {\n\n  state = {\n    quickSelection:'',\n    ranges:{\n      startDate: this.props.startDate ? this.props.startDate : new Date(),\n      endDate: this.props.endDate ? this.props.endDate : new Date(),\n      key: 'selection'\n    }\n  }\n\n  handleSelect(ranges){\n    this.setState({\n      quickSelection:'',\n      ranges:ranges.selection\n    });\n  }\n\n  handleQuickSelect(e){\n    let startDate = null;\n    let endDate = moment(new Date());\n    const quickSelection = e.target.value;\n\n    switch (quickSelection){\n      case 'day':\n        startDate = endDate.clone().subtract(1,'day');\n      break;\n      case 'week':\n        startDate = endDate.clone().subtract(1,'week');\n      break;\n      case 'weeks':\n        startDate = endDate.clone().subtract(2,'week');\n      break;\n      case 'month':\n        startDate = endDate.clone().subtract(1,'month');\n      break;\n      default:\n        startDate = null;\n        endDate = null;\n      break;\n    }\n\n    if (startDate && endDate){\n      startDate = startDate._d;\n      endDate = endDate._d;\n\n      const ranges = {\n        startDate,\n        endDate,\n        key:'selection'\n      };\n\n      this.setState({\n        ranges,\n        quickSelection\n      }, () => {\n        this.closeModal();\n      });\n    }\n  }\n\n  componentDidUpdate = (prevProps) => {\n    if (prevProps.startDate !== this.props.startDate || prevProps.endDate !== this.props.endDate){\n      this.setState({\n        ranges:{\n          startDate: this.props.startDate ? this.props.startDate : new Date(),\n          endDate: this.props.endDate ? this.props.endDate : new Date(),\n          key: 'selection'\n        }\n      });\n    }\n  }\n\n  closeModal(){\n    const newState = this.props.handleSelect(this.state.ranges,this.state.quickSelection);\n    const ranges = {\n      startDate:newState.startTimestampObj ? newState.startTimestampObj._d : new Date(),\n      endDate:newState.endTimestampObj ? newState.endTimestampObj._d : new Date(),\n      key: 'selection'\n    };\n    this.setState({\n      ranges\n    });\n    this.props.closeModal();\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Header title={'Select Date Range'}>\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex width={1} flexDirection={'column'} alignItems={'center'}>\n              <Field label=\"Quick Date Selection\" style={{display:'flex',width:'100%',alignItems:'stretch',justifyContent:'center'}}>\n                <Select\n                  style={{\n                    color:'#7d888d',\n                    fontSize:'14px',\n                    height:'2.5em',\n                    boxShadow:'none'\n                  }}\n                  width={'100%'}\n                  required={true}\n                  onChange={this.handleQuickSelect.bind(this)}\n                  value={this.state.quickSelection}\n                  options={[\n                    { value: '', label: \"Select an option\" },\n                    { value: \"day\", label: \"Last day\" },\n                    { value: \"week\", label: \"Last week\" },\n                    { value: \"weeks\", label: \"Last 2 weeks\" },\n                    { value: \"month\", label: \"Last month\" }\n                  ]}\n                />\n              </Field>\n              <DateRange\n                ranges={[this.state.ranges]}\n                minDate={this.props.minDate}\n                maxDate={this.props.maxDate}\n                onChange={this.handleSelect.bind(this)}\n              />\n            </Flex>\n          </ModalCard.Body>\n          <ModalCard.Footer>\n            <Flex px={[2,0]} flexDirection={['column', 'row']} width={1} justifyContent={'center'}>\n              <Button\n                borderRadius={4}\n                my={2}\n                mx={[0, 2]}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ e => this.closeModal(e) }\n              >\n              APPLY\n              </Button>\n            </Flex>\n          </ModalCard.Footer>\n        </ModalCard>\n      </Modal>\n    );\n  }\n\n}\n\nexport default DateRangeModal;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\n\nclass ExecuteTransaction extends Component {\n\n  state = {\n    txStatus:null,\n    processing:{\n      txHash:null,\n      loading:false\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  execute(){\n\n    const callback = (tx,error) => {\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Transaction',\n        eventLabel: this.props.methodName,\n        eventAction: this.props.contractName\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      const txSucceeded = tx.status === 'success';\n      if (txSucceeded){\n        if (typeof this.props.callback === 'function'){\n          this.props.callback();\n        }\n      }\n\n      this.setState({\n        txStatus:tx.status,\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      });\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        txStatus:'processing',\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,this.props.params,callback,callbackReceipt);\n\n    this.setState((prevState) => ({\n      txStatus:'loading',\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n  }\n\n  render() {\n    const ExecuteComponent = this.props.Component;\n    return (\n      <Flex\n        {...this.props.parentProps}\n      >\n        {\n          this.state.txStatus === 'success' && this.props.children ?\n            this.props.children\n          : this.state.processing && this.state.processing.loading ? (\n            <TxProgressBar\n              web3={this.props.web3}\n              hash={this.state.processing.txHash}\n              waitText={`${this.props.action} estimated in`}\n              cancelTransaction={this.cancelTransaction.bind(this)}\n              endMessage={`Finalizing ${this.props.action} request...`}\n            />\n          ) : (\n            <ExecuteComponent\n              onClick={this.execute.bind(this)}\n              {...this.props.componentProps}\n            >\n              {this.props.componentProps.value}\n            </ExecuteComponent>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default ExecuteTransaction;\n","import moment from 'moment';\nimport Title from '../Title/Title';\nimport StatsChart from './StatsChart';\nimport React, { Component } from 'react';\nimport Rebalance from '../Rebalance/Rebalance';\nimport StatsCard from '../StatsCard/StatsCard';\nimport AssetsList from '../AssetsList/AssetsList';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport globalConfigs from '../configs/globalConfigs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport RoundIconButton from '../RoundIconButton/RoundIconButton';\nimport VariationNumber from '../VariationNumber/VariationNumber';\nimport AllocationChart from '../AllocationChart/AllocationChart';\nimport DateRangeModal from '../utilities/components/DateRangeModal';\nimport { Flex, Text, Heading, Box, Icon, Button, Link } from 'rimble-ui';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport AssetsUnderManagement from '../AssetsUnderManagement/AssetsUnderManagement';\n\nclass Stats extends Component {\n  state = {\n    aum:null,\n    apr:null,\n    days:'-',\n    delta:null,\n    earning:null,\n    minDate:null,\n    maxDate:null,\n    carouselMax:1,\n    rebalances:'-',\n    buttonGroups:[],\n    apiResults:null,\n    carouselIndex:0,\n    idleVersion:null,\n    statsVersions:{},\n    minStartTime:null,\n    endTimestamp:null,\n    showAdvanced:true,\n    govTokensPool:null,\n    unlentBalance:null,\n    quickSelection:null,\n    startTimestamp:null,\n    endTimestampObj:null,\n    shouldRebalance:null,\n    carouselOffsetLeft:0,\n    startTimestampObj:null,\n    showRefreshIdleSpeed:false,\n    apiResults_unfiltered:null,\n    dateRangeModalOpened:false\n  };\n\n  quickSelections = {\n    day:'Last day',\n    week:'Last week',\n    weeks:'Last 2 weeks',\n    month:'Last month'\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n    await this.loadParams();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  showRefreshIdleSpeed(){\n    this.setState({\n      showRefreshIdleSpeed:true\n    });\n  }\n\n  getLatestAvailableVersion(){\n    const statsVersions = globalConfigs.stats.versions;\n    let latestVersion = null;\n    Object.keys(statsVersions).forEach( version => {\n      const versionInfo = statsVersions[version];\n      if (versionInfo.enabledStrategies.includes(this.props.selectedStrategy)){\n        latestVersion = version;\n      }\n    });\n\n    return latestVersion;\n  }\n\n  getVersionInfo(version){\n    if (!version){\n      version = this.state.idleVersion;\n    }\n\n    if (!globalConfigs.stats.versions[version]){\n      return null;\n    }\n\n    const versionInfo = Object.assign({},globalConfigs.stats.versions[version]);\n\n    if (versionInfo.strategiesParams && versionInfo.strategiesParams[this.props.selectedStrategy]){\n      const versionInfoExtra = versionInfo.strategiesParams[this.props.selectedStrategy];\n      Object.keys(versionInfoExtra).forEach( param => {\n        versionInfo[param] = versionInfoExtra[param];\n      });\n    }\n\n    return versionInfo;\n  }\n\n  async loadParams() {\n\n    if (!this.props.selectedToken || !this.props.tokenConfig){\n      return false;\n    }\n\n    const newState = {};\n    const { match: { params } } = this.props;\n\n    const currentNetworkAvailableTokens = Object.keys(this.props.availableTokens);\n\n    if (!!params.customToken && currentNetworkAvailableTokens.indexOf(params.customToken.toUpperCase()) !== -1 ){\n      newState.selectedToken = params.customToken.toUpperCase();\n    } else {\n      newState.selectedToken = this.props.selectedToken.toUpperCase();\n    }\n\n    newState.tokenConfig = this.props.availableTokens[newState.selectedToken];\n    newState.minStartTime = moment(globalConfigs.stats.tokens[this.props.selectedToken].startTimestamp,'YYYY-MM-DD');\n    newState.maxEndDate = moment();\n\n    newState.endTimestampObj = moment(moment().format('YYYY-MM-DD 23:59'),'YYYY-MM-DD HH:mm');\n\n    newState.latestVersion = this.getLatestAvailableVersion();\n    newState.idleVersion = this.state.idleVersion === null ? newState.latestVersion : this.state.idleVersion;\n\n    const versionInfo = this.getVersionInfo(newState.idleVersion);\n\n    // console.log('loadParams',newState.latestVersion,newState.idleVersion,versionInfo);\n\n    if (newState.idleVersion && versionInfo.endTimestamp){\n      const newEndTimestampObj = moment(moment(versionInfo.endTimestamp*1000).format('YYYY-MM-DD HH:mm'),'YYYY-MM-DD HH:mm');\n      if (newState.endTimestampObj.isAfter(newEndTimestampObj)){\n        newState.endTimestampObj = newEndTimestampObj;\n        newState.endTimestamp = parseInt(newState.endTimestampObj._d.getTime()/1000);\n      }\n\n      if (!newState.maxEndDate || newState.maxEndDate.isAfter(newEndTimestampObj)){\n        newState.maxEndDate = newEndTimestampObj;\n      }\n    }\n\n    newState.endTimestamp = parseInt(newState.endTimestampObj._d.getTime()/1000);\n\n    // Set start date\n    newState.startTimestampObj = newState.endTimestampObj.clone().subtract(1,'month');\n    newState.startTimestamp = parseInt(newState.startTimestampObj._d.getTime()/1000);\n\n    if (newState.idleVersion && versionInfo.startTimestamp){\n      const newStartTimestampObj = moment(moment(versionInfo.startTimestamp*1000).format('YYYY-MM-DD HH:mm'),'YYYY-MM-DD HH:mm');\n      if (newState.startTimestampObj.isBefore(newStartTimestampObj)){\n        newState.startTimestampObj = newStartTimestampObj;\n        newState.startTimestamp = parseInt(newState.startTimestampObj._d.getTime()/1000);\n      }\n\n      if (newState.minStartTime.isBefore(newStartTimestampObj)){\n        newState.minStartTime = newStartTimestampObj;\n      }\n    }\n\n    newState.minDate = newState.minStartTime._d;\n    newState.maxDate = newState.maxEndDate._d;\n\n    if (newState !== this.state){\n      await this.setStateSafe(newState);\n    }\n  }\n\n  setDateRange = (ranges,quickSelection=null) => {\n\n    const minStartTime = moment(globalConfigs.stats.tokens[this.props.selectedToken].startTimestamp);\n\n    let startTimestampObj = moment(ranges.startDate).isSameOrAfter(minStartTime) ? moment(ranges.startDate) : minStartTime;\n    let endTimestampObj = moment(ranges.endDate);\n\n    if (startTimestampObj.isSame(endTimestampObj)){\n      endTimestampObj.add(1,'day');\n    }\n\n    endTimestampObj = moment(endTimestampObj.format('YYYY-MM-DD 23:59'),'YYYY-MM-DD HH:mm');\n\n    if (startTimestampObj.isBefore(this.state.minStartTime)){\n      startTimestampObj = this.state.minStartTime;\n    }\n\n    if (endTimestampObj.isAfter(this.state.maxEndDate)){\n      endTimestampObj = this.state.maxEndDate;\n    }\n\n    const startTimestamp = parseInt(startTimestampObj._d.getTime()/1000);\n    const endTimestamp = parseInt(endTimestampObj._d.getTime()/1000);\n\n    const newState = {\n      minStartTime,\n      endTimestamp,\n      quickSelection,\n      startTimestamp,\n      endTimestampObj,\n      startTimestampObj\n    };\n\n    this.setStateSafe(newState);\n\n    return newState;\n  }\n\n  toggleAdvancedCharts = (e) => {\n    e.preventDefault();\n    this.setStateSafe({\n      showAdvanced:!this.state.showAdvanced\n    });\n  }\n\n  setDateRangeModal = (dateRangeModalOpened) => {\n    if (dateRangeModalOpened !== this.state.dateRangeModalOpened){\n      this.setStateSafe({\n        dateRangeModalOpened\n      });\n    }\n  }\n\n  async componentDidMount() {\n\n    if (!this.props.web3){\n      this.props.initWeb3();\n      return false;\n    }\n\n    const style = document.createElement('style');\n    style.id = 'crisp-custom-style';\n    style.type = 'text/css';\n    style.innerHTML = `\n    .crisp-client{\n      display:none !important;\n    }`;\n    document.body.appendChild(style);\n\n    this.loadUtils();\n    await this.loadParams();\n    this.loadApiData();\n    this.loadCarousel();\n  }\n\n  loadCarousel(){\n    const carouselMax = this.props.isMobile ? 3 : 2;\n    this.setStateSafe({\n      carouselMax\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState) {\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const strategyChanged = prevProps.selectedStrategy !== this.props.selectedStrategy;\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken || JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const dateChanged = prevState.startTimestamp !== this.state.startTimestamp || prevState.endTimestamp !== this.state.endTimestamp;\n    const versionChanged = prevState.idleVersion !== this.state.idleVersion;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n\n    if (mobileChanged){\n      this.loadCarousel();\n    }\n\n    if (contractsInitialized || tokenChanged || strategyChanged || versionChanged){\n      // console.log('componentDidUpdate',this.props.selectedStrategy,this.props.selectedToken);\n      await this.componentDidMount();\n    } else if (dateChanged){\n      this.loadApiData();\n    }\n  }\n\n  filterTokenData = (apiResults) => {\n    return apiResults.filter((r,i) => {\n      return (!this.state.startTimestamp || r.timestamp >= this.state.startTimestamp) && (!this.state.endTimestamp || r.timestamp <= this.state.endTimestamp);\n    });\n  }\n\n  setIdleVersion = idleVersion => {\n    this.setStateSafe({\n      idleVersion\n    });\n  }\n\n  loadApiData = async () => {\n\n    if (!this.props.selectedToken || !this.props.tokenConfig){\n      return false;\n    }\n\n    // Get COMP APR\n    // const compAPR = await this.functionsUtil.getCompAPR(this.props.tokenConfig);\n    // console.log('compAPR',compAPR.toString());\n\n    const startTimestamp = this.state.minDate ? parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(this.state.minDate).format('DD/MM/YYYY 00:00:00'),'DD/MM/YYYY HH:mm:ss')._d.getTime()/1000) : null;\n    const endTimestamp = this.state.maxDate ? parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(this.state.maxDate).format('DD/MM/YYYY 23:59:59'),'DD/MM/YYYY HH:mm:ss')._d.getTime()/1000) : null;\n\n    const isRisk = ['v3','v4'].includes(this.state.idleVersion) && this.props.selectedStrategy === 'risk';\n    let apiResults_unfiltered = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,startTimestamp,endTimestamp,true,7200);\n\n    const apiResults = this.filterTokenData(apiResults_unfiltered);\n\n    // console.log('loadApiData',startTimestamp,endTimestamp,new Date(startTimestamp*1000),new Date(endTimestamp*1000),apiResults,apiResults_unfiltered);\n\n    if (!apiResults || !apiResults_unfiltered || !apiResults.length || !apiResults_unfiltered.length){\n      return false;\n    }\n\n    const firstResult = apiResults[0];\n    const lastResult = Object.values(apiResults).pop();\n\n    window.moment = moment;\n\n    let days = (lastResult.timestamp-firstResult.timestamp)/86400;\n    if (days === 0){\n      days = 1;\n    }\n\n    let apr = null;\n    let delta = 'N/A';\n\n    const idleTokens = this.functionsUtil.fixTokenDecimals(lastResult.idleSupply,18);\n    const firstIdlePrice = this.functionsUtil.fixTokenDecimals(firstResult.idlePrice,this.props.tokenConfig.decimals);\n    const lastIdlePrice = this.functionsUtil.fixTokenDecimals(lastResult.idlePrice,this.props.tokenConfig.decimals);\n\n    // Calculate AUM\n    let aum = idleTokens.times(lastIdlePrice);\n    // Convert Token balance\n    aum = await this.functionsUtil.convertTokenBalance(aum,this.props.selectedToken,this.props.tokenConfig,isRisk);\n\n    const compoundInfo = this.props.tokenConfig.protocols.filter((p) => { return p.name === 'compound' })[0];\n    const firstCompoundData = compoundInfo ? firstResult.protocolsData.filter((p) => { return p.protocolAddr.toLowerCase() === compoundInfo.address.toLowerCase() })[0] : null;\n    const lastCompoundData = compoundInfo ? lastResult.protocolsData.filter((p) => { return p.protocolAddr.toLowerCase() === compoundInfo.address.toLowerCase() })[0] : null;\n\n    if (this.state.idleVersion === 'v4') {\n\n      apr = apiResults.reduce( (sum,r) => {\n        const idleRate = this.functionsUtil.fixTokenDecimals(r.idleRate,18);\n        return this.functionsUtil.BNify(sum).plus(idleRate);\n      },0);\n\n      // Calculate average\n      apr = apr.div(apiResults.length);\n\n      if (compoundInfo){\n        const compoundWithCOMPInfo = globalConfigs.stats.protocols.compoundWithCOMP;\n        const rateField = compoundWithCOMPInfo.rateField ? compoundWithCOMPInfo.rateField : 'rate';\n\n        let compoundAvgApr = apiResults.reduce( (sum,r) => {\n\n          const compoundData = r.protocolsData.find((pData,x) => {\n            return pData.protocolAddr.toLowerCase() === compoundInfo.address.toLowerCase()\n          });\n\n          let compoundRate = typeof rateField === 'object' && rateField.length ? rateField.reduce((acc,field) => {\n            if (compoundData[field]){\n              return this.functionsUtil.BNify(acc).plus(this.functionsUtil.BNify(compoundData[field]));\n            }\n            return this.functionsUtil.BNify(acc);\n          },0) : this.functionsUtil.BNify(compoundData[rateField]);\n\n          compoundRate = this.functionsUtil.fixTokenDecimals(compoundRate,18);\n\n          return this.functionsUtil.BNify(sum).plus(compoundRate);\n        },0);\n\n        // Calculate average\n        compoundAvgApr = compoundAvgApr.div(apiResults.length);\n\n        // compoundAvgApr = this.functionsUtil.apr2apy(compoundAvgApr.div(100)).times(100);\n        // apr = this.functionsUtil.apr2apy(apr.div(100)).times(100);\n\n        delta = apr.minus(compoundAvgApr);\n        if (parseFloat(delta)<0){\n          delta = 0\n        }\n        delta = delta.toFixed(2);\n      }\n\n      apr = apr.toFixed(2);\n\n    } else {\n      const earning = lastIdlePrice.div(firstIdlePrice).minus(1).times(100);\n      apr = earning.times(365).div(days).toFixed(2);\n      if (firstCompoundData && lastCompoundData){\n        const firstCompoundPrice = this.functionsUtil.fixTokenDecimals(firstCompoundData.price,this.props.tokenConfig.decimals);\n        const lastCompoundPrice = this.functionsUtil.fixTokenDecimals(lastCompoundData.price,this.props.tokenConfig.decimals);\n        const compoundApr = lastCompoundPrice.div(firstCompoundPrice).minus(1).times(100);\n        delta = earning.minus(compoundApr).times(365).div(days);\n        if (parseFloat(delta)<0){\n          delta = 0\n        }\n        delta = delta.toFixed(2);\n      }\n    }\n\n    // Count rebalances\n    let rebalances = 0;\n    apiResults.forEach((row,index) => {\n      if (index){\n        const prevRow = apiResults[index-1];\n\n        const totalAllocation = row.protocolsData.reduce((accumulator,protocolAllocation) => {\n          const allocation = this.functionsUtil.fixTokenDecimals(protocolAllocation.allocation,this.props.tokenConfig.decimals);\n          return this.functionsUtil.BNify(accumulator).plus(allocation);\n        },0);\n\n        const prevTotalAllocation = prevRow.protocolsData.reduce((accumulator,protocolAllocation) => {\n          const allocation = this.functionsUtil.fixTokenDecimals(protocolAllocation.allocation,this.props.tokenConfig.decimals);\n          return this.functionsUtil.BNify(accumulator).plus(allocation);\n        },0);\n\n        let hasRebalanced = false;\n        row.protocolsData.forEach( p => {\n          if (hasRebalanced){\n            return;\n          }\n          const prevP = prevRow.protocolsData.find( prevP => (prevP.protocolAddr.toLowerCase() === p.protocolAddr.toLowerCase()) );\n          const allocation = this.functionsUtil.fixTokenDecimals(p.allocation,this.props.tokenConfig.decimals);\n          const prevAllocation = this.functionsUtil.fixTokenDecimals(prevP.allocation,this.props.tokenConfig.decimals);\n          const allocationPerc = parseInt(parseFloat(allocation.div(totalAllocation).times(100)));\n          const prevAllocationPerc = parseInt(parseFloat(prevAllocation.div(prevTotalAllocation).times(100)));\n          if (allocationPerc!==prevAllocationPerc){\n            rebalances++;\n            hasRebalanced = true;\n          }\n        });\n      }\n    });\n\n    // Add gov tokens balance to AUM\n    const govTokensPool = await this.functionsUtil.getGovTokenPool(null,null,'DAI');\n    if (govTokensPool){\n      aum = aum.plus(govTokensPool);\n    }\n\n    // Format AUM\n    aum = this.functionsUtil.formatMoney(parseFloat(aum));\n\n    let unlentBalance = await this.functionsUtil.getUnlentBalance(this.props.tokenConfig);\n    if (unlentBalance){\n      unlentBalance = this.functionsUtil.formatMoney(parseFloat(unlentBalance));\n    }\n\n    this.setStateSafe({\n      aum,\n      apr,\n      days,\n      delta,\n      apiResults,\n      rebalances,\n      govTokensPool,\n      unlentBalance,\n      apiResults_unfiltered\n    });\n  }\n\n  selectToken = async (strategy,token) => {\n    await this.props.setStrategyToken(strategy,token);\n    this.props.changeToken(token);\n  }\n\n  handleCarousel = action => {\n    let carouselIndex = this.state.carouselIndex;\n    if (action==='next' && carouselIndex<this.state.carouselMax){\n      carouselIndex++;\n    } else if (action==='back' && carouselIndex>0){\n      carouselIndex--;\n    }\n\n    const $element = window.jQuery(`#carousel-cursor > div:eq(${carouselIndex})`);\n    const carouselOffsetLeft = -parseFloat($element.position().left)+'px';\n\n    this.setStateSafe({\n      carouselIndex,\n      carouselOffsetLeft\n    });\n  }\n\n  render() {\n\n    const idleTokenEnabled = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','enabled']);\n    const apyLong = this.functionsUtil.getGlobalConfig(['messages','apyLong']);\n\n    if (!this.props.availableStrategies){\n      return (\n        <FlexLoader\n          textProps={{\n            textSize:4,\n            fontWeight:2\n          }}\n          loaderProps={{\n            mb:3,\n            size:'40px'\n          }}\n          flexProps={{\n            minHeight:'50vh',\n            flexDirection:'column'\n          }}\n          text={'Loading assets...'}\n        />\n      );\n    }\n\n    if (!this.props.selectedToken){\n      const strategies = this.functionsUtil.getGlobalConfig(['strategies']);\n      const enabledTokens = [];\n      const statsTokens = this.functionsUtil.getGlobalConfig(['stats','tokens']);\n      const statsProtocols = this.functionsUtil.getGlobalConfig(['stats','protocols']);\n      Object.keys(statsTokens).forEach(token => {\n        const tokenInfo = statsTokens[token];\n        if (tokenInfo.enabled){\n          enabledTokens.push(token);\n        }\n      });\n      return (\n        <Flex\n          mb={3}\n          width={1}\n          flexDirection={'column'}\n        >\n          <AssetsUnderManagement\n            {...this.props}\n          />\n          {\n            Object.keys(strategies).map(strategy => {\n              const strategyInfo = strategies[strategy];\n              const availableTokens = this.props.availableStrategies[strategy];\n              if (!availableTokens){\n                return false;\n              }\n              return (\n                <Box\n                  mb={2}\n                  width={1}\n                  flexDirection={'column'}\n                  justifyContent={'center'}\n                  key={`strategy-container-${strategy}`}\n                >\n                  <Title\n                    mt={3}\n                    mb={[3,4]}\n                  >\n                    <Flex\n                      flexDirection={'row'}\n                      alignItems={'baseline'}\n                      justifyContent={'center'}\n                    >\n                      {strategyInfo.title}\n                      {\n                        strategyInfo.titlePostfix &&\n                          <Text\n                            ml={2}\n                            fontWeight={3}\n                            fontSize={[2,4]}\n                            color={'dark-gray'}\n                          >\n                            {strategyInfo.titlePostfix}\n                          </Text>\n                      }\n                    </Flex>\n                  </Title>\n                  <AssetsList\n                    enabledTokens={enabledTokens}\n                    handleClick={(props) => this.selectToken(strategy,props.token)}\n                    cols={[\n                      {\n                        title:'CURRENCY',\n                        props:{\n                          width:[0.26,0.15]\n                        },\n                        fields:[\n                          {\n                            name:'icon',\n                            props:{\n                              mr:2,\n                              height:['1.4em','2.3em']\n                            }\n                          },\n                          {\n                            name:'tokenName'\n                          }\n                        ]\n                      },\n                      {\n                        title:'POOL',\n                        props:{\n                          width:[0.22,0.14],\n                        },\n                        fields:[\n                          {\n                            name:'allocationChart',\n                            mobile:false,\n                            parentProps:{\n                              width:0.3\n                            },\n                            style:{\n                              overflow:'visible'\n                            },\n                            showLoader:false,\n                          },\n                          {\n                            name:'pool',\n                            props:{\n                              ml:1\n                            },\n                            parentProps:{\n                              width:[1,0.7]\n                            }\n                          }\n                        ]\n                      },\n                      {\n                        title:'APY',\n                        desc:apyLong,\n                        props:{\n                          width: [0.29,0.14],\n                        },\n                        parentProps:{\n                          flexDirection:'column',\n                          alignItems:'flex-start',\n                        },\n                        fields:[\n                          {\n                            name:'apy',\n                            showTooltip:true\n                          },\n                          {\n                            name:'idleDistribution',\n                            showLoader:false,\n                            props:{\n                              decimals:this.props.isMobile ? 1 : 2,\n                              fontSize:this.props.isMobile ? '9px' : 0\n                            }\n                          },\n                        ]\n                      },\n                      {\n                        title:'RISK SCORE',\n                        desc:this.functionsUtil.getGlobalConfig(['messages','riskScore']),\n                        mobile:false,\n                        props:{\n                          width:[0.27,0.16],\n                        },\n                        fields:[\n                          {\n                            name:'score'\n                          }\n                        ]\n                      },\n                      {\n                        title:'APR LAST WEEK',\n                        mobile:false,\n                        props:{\n                          width: 0.25,\n                        },\n                        parentProps:{\n                          width:1,\n                          pr:[2,4]\n                        },\n                        fields:[\n                          {\n                            name:'aprChart',\n                          }\n                        ]\n                      },\n                      {\n                        title:'',\n                        props:{\n                          width:[0.23,0.16],\n                        },\n                        parentProps:{\n                          width:1\n                        },\n                        fields:[\n                          {\n                            name:'button',\n                            label:this.props.isMobile ? 'View' : 'View stats',\n                            props:{\n                              width:1,\n                              fontSize:3,\n                              fontWeight:3,\n                              height:'45px',\n                              borderRadius:4,\n                              boxShadow:null,\n                              mainColor:'redeem',\n                              size: this.props.isMobile ? 'small' : 'medium',\n                              handleClick:(props) => this.selectToken(strategy,props.token)\n                            }\n                          }\n                        ]\n                      }\n                    ]}\n                    {...this.props}\n                    selectedStrategy={strategy}\n                    availableTokens={availableTokens}\n                  />\n                  {\n                    !this.props.isMobile &&\n                      <Flex\n                        mt={2}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'flex-end'}\n                      >\n                        {\n                          Object.values(statsProtocols).filter( p => (p.legend) ).map( (p,index) => (\n                            <Flex\n                              mr={3}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              key={`legend_${index}`}\n                            >\n                              <Box\n                                mr={1}\n                                width={'10px'}\n                                height={'10px'}\n                                borderRadius={'50%'}\n                                backgroundColor={`rgb(${p.color.rgb.join(',')})`}\n                              >\n                              </Box>\n                              <Text.span\n                                fontSize={1}\n                                color={'cellText'}\n                              >\n                                {p.label}\n                              </Text.span>\n                            </Flex>\n                          ))\n                        }\n                      </Flex>\n                  }\n                </Box>\n              );\n            })\n          }\n          {\n            idleTokenEnabled && !this.state.showRefreshIdleSpeed ? (\n              <Flex\n                width={1}\n                my={[2,3]}\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <Link\n                  hoverColor={'primary'}\n                  onClick={this.showRefreshIdleSpeed.bind(this)}\n                >\n                  Refresh Idle Speed\n                </Link>\n              </Flex>\n            ) : idleTokenEnabled && this.state.showRefreshIdleSpeed &&\n              <Flex\n                p={2}\n                width={1}\n                my={[2,3]}\n                borderRadius={1}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n                backgroundColor={'#f3f6ff'}\n                boxShadow={'0px 0px 0px 1px rgba(0,54,255,0.3)'}\n              >\n                <Text\n                  fontWeight={500}\n                  color={'#3f4e9a'}\n                  textAlign={'center'}\n                  fontSize={[1,'15px']}\n                >\n                  By executing this transaction you can adjust the IDLE distribution speed among the pools.\n                </Text>\n                <ExecuteTransaction\n                  action={'Refresh'}\n                  Component={Button}\n                  parentProps={{\n                    mt:1\n                  }}\n                  componentProps={{\n                    size:'small',\n                    value:'REFRESH IDLE SPEED'\n                  }}\n                  params={[]}\n                  contractName={'IdleController'}\n                  methodName={'refreshIdleSpeeds'}\n                  {...this.props}\n                >\n                  <Flex\n                    flexDirection={'row'}\n                    alignItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Icon\n                      mr={1}\n                      name={'Done'}\n                      size={'1.4em'}\n                      color={this.props.theme.colors.transactions.status.completed}\n                    />\n                    <Text\n                      fontWeight={500}\n                      fontSize={'15px'}\n                      color={'copyColor'}\n                      textAlign={'center'}\n                    >\n                      Idle Speed Refreshed\n                    </Text>\n                  </Flex>\n                </ExecuteTransaction>\n              </Flex>\n          }\n        </Flex>\n      );\n    } else {\n      const versionsOptions = Object.keys(globalConfigs.stats.versions).filter( version => {\n        const versionInfo = this.getVersionInfo(version);\n        return versionInfo.enabledTokens.includes(this.props.selectedToken) && versionInfo.enabledStrategies.includes(this.props.selectedStrategy);\n      }).map( version => {\n        const versionInfo = this.getVersionInfo(version);\n        return {\n          value:version,\n          label:versionInfo.label\n        }\n      });\n\n      const versionInfo = this.getVersionInfo(this.state.idleVersion);\n\n      let performanceTooltip = null;\n      if (this.state.idleVersion && versionInfo){\n        const showPerformanceTooltip = this.functionsUtil.getGlobalConfig(['stats','versions',this.state.idleVersion,'showPerformanceTooltip']);\n        performanceTooltip = showPerformanceTooltip ? this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.selectedToken,'performanceTooltip']) : null;\n      }\n\n      const versionDefaultValue = versionsOptions.find( v => (v.value === this.state.idleVersion) );\n\n      return (\n        <Flex\n          p={0}\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n          /*\n          }\n          <Flex position={['absolute','relative']} left={0} px={[3,0]} zIndex={10} width={1} flexDirection={'row'} mb={[0,3]}>\n            <Flex alignItems={'center'} width={[2/3,1/2]}>\n              <RouterLink to=\"/\">\n                <Image src=\"images/logo-gradient.svg\"\n                  height={['35px','48px']}\n                  position={'relative'} />\n              </RouterLink>\n              <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={3} lineHeight={'initial'} fontSize={[4,5]} ml={[1,2]}>\n                <Text.span fontSize={'80%'}>|</Text.span> Stats\n              </Heading.h3>\n            </Flex>\n            <Flex flexDirection={'row'} width={[1/3,1/2]} justifyContent={'flex-end'} alignItems={'center'}>\n              {\n                this.state.buttonGroups && \n                  this.props.isMobile ? (\n                    <ButtonGroup\n                      isMobile={this.props.isMobile}\n                      components={ this.state.buttonGroups.reduce((components,array) => components.concat(array),[]) }\n                      theme={'light'}\n                    />\n                  ) :\n                  this.state.buttonGroups.map((buttonGroup,i) => (\n                    <ButtonGroup\n                      key={`buttonGroup_${i}`}\n                      isMobile={this.props.isMobile}\n                      components={buttonGroup}\n                      theme={'light'}\n                    />\n                  ))\n              }\n            </Flex>\n          </Flex>\n          */\n          }\n          <Box\n            mb={[3,4]}\n          >\n            <Flex\n              flexDirection={['column','row']}\n            >\n              <Flex\n                width={[1,0.4]}\n              >\n                <Breadcrumb\n                  showPathMobile={true}\n                  text={'ASSETS OVERVIEW'}\n                  isMobile={this.props.isMobile}\n                  handleClick={ e => this.props.goToSection('stats') }\n                  path={[this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'title'])]}\n                />\n              </Flex>\n              <Flex\n                mt={[3,0]}\n                width={[1,0.6]}\n                flexDirection={['column','row']}\n                justifyContent={['center','space-between']}\n              >\n                <Flex\n                  width={[1,0.26]}\n                  flexDirection={'column'}\n                >\n                  <GenericSelector\n                    innerProps={{\n                      p:1,\n                      height:['100%','46px'],\n                    }}\n                    name={'idle-version'}\n                    options={versionsOptions}\n                    defaultValue={versionDefaultValue}\n                    onChange={ v => this.setIdleVersion(v) }\n                  />\n                </Flex>\n                <Flex\n                  mt={[3,0]}\n                  width={[1,0.3]}\n                  flexDirection={'column'}\n                >\n                  <AssetSelector\n                    innerProps={{\n                      p:1\n                    }}\n                    {...this.props}\n                  />\n                </Flex>\n                <Flex\n                  mt={[3,0]}\n                  width={[1,0.39]}\n                  flexDirection={'column'}\n                >\n                  <DashboardCard\n                    cardProps={{\n                      p:1,\n                      display:'flex',\n                      alignItems:'center',\n                      height:['46px','100%'],\n                      justifyContent:'center'\n                    }}\n                    isInteractive={true}\n                    handleClick={ e => this.setDateRangeModal(true) }\n                  >\n                    <Text\n                      fontWeight={3}\n                      color={'copyColor'}\n                    >\n                    {\n                      this.state.quickSelection\n                      ?\n                        this.quickSelections[this.state.quickSelection]\n                      : this.state.startTimestampObj && this.state.endTimestampObj &&\n                        `${this.state.startTimestampObj.format('DD/MM/YY')} - ${this.state.endTimestampObj.format('DD/MM/YY')}`\n                    }\n                    </Text>\n                  </DashboardCard>\n                </Flex>\n              </Flex>\n            </Flex>\n          </Box>\n\n          {\n            this.state.idleVersion && (versionInfo.startTimestamp>parseInt(new Date().getTime()/1000)) ? (\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                    width:[1,0.5],\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  >\n                    <Icon\n                      size={'2.3em'}\n                      color={'cellText'}\n                      name={'AccessTime'}\n                    />\n                    <Text\n                      mt={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      Idle Stats {this.state.idleVersion} will be available shortly!\n                    </Text>\n                  </Flex>\n                </DashboardCard>\n              </Flex>\n            ) : (\n              <Box\n                width={1}\n              >\n                <Box\n                  mt={[3,0]}\n                  mb={[3,4]}\n                >\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    justifyContent={'center'}\n                    flexDirection={['column','row']}\n                  >\n                    <Flex\n                      mb={[2,0]}\n                      pr={[0,2]}\n                      width={[1,1/4]}\n                      flexDirection={'column'}\n                    >\n                      <StatsCard\n                        value={this.state.aum}\n                        title={'Asset Under Management'}\n                        label={ this.state.unlentBalance ? `Unlent funds: ${this.state.unlentBalance} ${this.props.selectedToken}` : this.props.selectedToken }\n                        labelTooltip={ this.state.unlentBalance ? this.functionsUtil.getGlobalConfig(['messages','cheapRedeem']) : null}\n                      />\n                    </Flex>\n                    <Flex\n                      mb={[2,0]}\n                      pr={[0,2]}\n                      width={[1,1/4]}\n                      flexDirection={'column'}\n                    >\n                      <StatsCard\n                        title={'Avg APY'}\n                        label={'Annualized'}\n                      >\n                        <Flex\n                          width={1}\n                          alignItems={'center'}\n                          flexDirection={['column','row']}\n                        >\n                          <VariationNumber\n                            direction={'up'}\n                            iconPos={'right'}\n                            iconSize={'1.8em'}\n                            justifyContent={'flex-start'}\n                            width={1}\n                            >\n                            <Text\n                              lineHeight={1}\n                              fontWeight={[3,4]}\n                              color={'statValue'}\n                              fontSize={[4,5]}\n                            >\n                              {this.state.apr}\n                              <Text.span color={'statValue'} fontWeight={3} fontSize={['90%','70%']}>%</Text.span>\n                            </Text>\n                          </VariationNumber>\n                        </Flex>\n                      </StatsCard>\n                    </Flex>\n                    <Flex\n                      mb={[2,0]}\n                      pr={[0,2]}\n                      width={[1,1/4]}\n                      flexDirection={'column'}\n                    >\n                      <StatsCard\n                        title={'Overperformance on Compound'}\n                        label={'Annualized'}\n                      >\n                        {\n                          this.state.delta && !isNaN(this.state.delta) ? (\n                            <VariationNumber\n                              direction={'up'}\n                              iconPos={'right'}\n                              iconSize={'1.8em'}\n                              justifyContent={'flex-start'}\n                              >\n                              <Text\n                                lineHeight={1}\n                                fontSize={[4,5]}\n                                fontWeight={[3,4]}\n                                color={'statValue'}\n                              >\n                                {this.state.delta}\n                                <Text.span color={'statValue'} fontWeight={3} fontSize={['90%','70%']}>%</Text.span>\n                              </Text>\n                            </VariationNumber>\n                          ) : (\n                            <Text\n                              lineHeight={1}\n                              fontSize={[4,5]}\n                              fontWeight={[3,4]}\n                              color={'statValue'}\n                            >\n                              {this.state.delta}\n                            </Text>\n                          )\n                        }\n                      </StatsCard>\n                    </Flex>\n                    <Flex\n                      mb={[2,0]}\n                      pr={[0,2]}\n                      width={[1,1/4]}\n                      flexDirection={'column'}\n                    >\n                      <StatsCard\n                        label={' '}\n                        title={'Rebalances'}\n                        value={this.state.rebalances.toString()}\n                      />\n                    </Flex>\n                    {\n                    /*\n                    <Flex width={[1,1/4]} flexDirection={'column'} px={[0,2]}>\n                      <Card my={[2,2]} py={3} pl={0} pr={'10px'} borderRadius={'10px'} boxShadow={0}>\n                        <Flex alignItems={'center'} justifyContent={'center'} flexDirection={'column'} width={1}>\n                          <Text.span color={'copyColor'} fontWeight={2} fontSize={'90%'}>Current APR</Text.span>\n                          <Text lineHeight={1} mt={1} color={'copyColor'} fontSize={[4,'26px']} fontWeight={3} textAlign={'center'}>\n                            {this.state.currApr}\n                            <Text.span color={'copyColor'} fontWeight={3} fontSize={['90%','70%']}>%</Text.span>\n                          </Text>\n                        </Flex>\n                      </Card>\n                    </Flex>\n                    <Flex width={[1,1/4]} flexDirection={'column'} px={[0,2]}>\n                      <Card my={[2,2]} py={3} pl={0} pr={'10px'} borderRadius={'10px'} boxShadow={0}>\n                        <Flex alignItems={'center'} justifyContent={'center'} flexDirection={'column'} width={1}>\n                          <Text.span color={'copyColor'} fontWeight={2} fontSize={'90%'}>Days Live</Text.span>\n                          <Text lineHeight={1} mt={1} color={'copyColor'} fontSize={[4,'26px']} fontWeight={3} textAlign={'center'}>\n                            {this.state.days}\n                          </Text>\n                        </Flex>\n                      </Card>\n                    </Flex>\n                    */\n                    }\n                  </Flex>\n                </Box>\n\n                <DashboardCard\n                  title={'Historical Performance'}\n                  description={performanceTooltip}\n                  cardProps={{\n                    mb:[3,4]\n                  }}\n                >\n                  <Flex id='chart-PRICE' width={1} mb={3}>\n                    <StatsChart\n                      height={ 350 }\n                      {...this.state}\n                      parentId={'chart-PRICE'}\n                      isMobile={this.props.isMobile}\n                      contracts={this.props.contracts}\n                      apiResults={this.state.apiResults}\n                      idleVersion={this.state.idleVersion}\n                      apiResults_unfiltered={this.state.apiResults_unfiltered}\n                      chartMode={this.state.idleVersion === this.state.latestVersion ? 'PRICE_V4' : 'PRICE'}\n                    />\n                  </Flex>\n                </DashboardCard>\n\n                <DashboardCard\n                  cardProps={{\n                    pb:3,\n                    mb:[3,4]\n                  }}\n                >\n                  <Flex\n                    flexDirection={['column','row']}\n                    justifyContent={'space-between'}\n                  >\n                    {\n                      this.state.idleVersion === this.state.latestVersion && \n                      <Flex\n                        pt={2}\n                        width={[1,1/3]}\n                        id={'allocation-chart'}\n                        flexDirection={'column'}\n                        alignItems={'flex-start'}\n                        justifyContent={'flex-start'}\n                      >\n                        <AllocationChart\n                          height={310}\n                          {...this.props}\n                          parentId={'allocation-chart'}\n                        />\n                        <Rebalance\n                          {...this.props}\n                        />\n                      </Flex>\n                    }\n                    <Flex\n                      mb={[0,3]}\n                      id={'chart-ALL'}\n                      pl={[0,this.state.idleVersion === this.state.latestVersion ? 0 : 3]}\n                      width={[1, this.state.idleVersion === this.state.latestVersion ? 2/3 : 1]}\n                    >\n                      <Flex alignItems={'flex-start'} justifyContent={'flex-start'} flexDirection={'column'} width={1}>\n                        <Heading.h4\n                          mb={2}\n                          ml={3}\n                          mt={[3,4]}\n                          fontWeight={4}\n                          fontSize={[2,3]}\n                          textAlign={'left'}\n                          color={'dark-gray'}\n                          lineHeight={'initial'}\n                        >\n                          Allocations over time\n                        </Heading.h4>\n                        <StatsChart\n                          height={350}\n                          {...this.state}\n                          chartMode={'ALL'}\n                          parentId={'chart-ALL'}\n                          isMobile={this.props.isMobile}\n                          contracts={this.props.contracts}\n                          apiResults={this.state.apiResults}\n                          idleVersion={this.state.idleVersion}\n                          apiResults_unfiltered={this.state.apiResults_unfiltered}\n                        />\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                </DashboardCard>\n\n                <Flex\n                  position={'relative'}\n                >\n                  <Flex\n                    width={1}\n                    id={'carousel-container'}\n                    justifyContent={'flex-end'}\n                  >\n                    <RoundIconButton\n                      buttonProps={{\n                        mr:3\n                      }}\n                      iconName={'ArrowBack'}\n                      disabled={this.state.carouselIndex === 0}\n                      handleClick={ e => this.handleCarousel('back') }\n                    />\n                    <RoundIconButton\n                      iconName={'ArrowForward'}\n                      handleClick={ e => this.handleCarousel('next') }\n                      disabled={this.state.carouselIndex === this.state.carouselMax}\n                    />\n                  </Flex>\n                  <Flex\n                    mt={5}\n                    height={'400px'}\n                    position={'absolute'}\n                    id={'carousel-cursor'}\n                    width={['444%','200%']}\n                    justifyContent={'flex-start'}\n                    left={this.state.carouselOffsetLeft}\n                    style={{\n                      transition:'left 0.3s ease-in-out'\n                    }}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        mr:4,\n                        height:'fit-content',\n                        style:this.props.isMobile ? {width:'100%'} : {width:'32vw'}\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        id='chart-AUM'\n                      >\n                        <Flex\n                          mb={3}\n                          width={1}\n                          flexDirection={'column'}\n                          alignItems={'flex-start'}\n                          justifyContent={'center'}\n                        >\n                          <Heading.h4\n                            ml={3}\n                            mt={3}\n                            mb={2}\n                            fontWeight={4}\n                            fontSize={[2,3]}\n                            textAlign={'left'}\n                            color={'dark-gray'}\n                            lineHeight={'initial'}\n                          >\n                            Asset Under Management\n                          </Heading.h4>\n                          <StatsChart\n                            height={300}\n                            {...this.state}\n                            chartMode={'AUM'}\n                            parentId={'chart-AUM'}\n                            isMobile={this.props.isMobile}\n                            contracts={this.props.contracts}\n                            apiResults={this.state.apiResults}\n                            idleVersion={this.state.idleVersion}\n                            apiResults_unfiltered={this.state.apiResults_unfiltered}\n                          />\n                        </Flex>\n                      </Flex>\n                    </DashboardCard>\n                    <DashboardCard\n                      cardProps={{\n                        mr:4,\n                        height:'fit-content',\n                        style:this.props.isMobile ? {width:'100%'} : {width:'32vw'}\n                      }}\n                    >\n                      <Flex id='chart-APR' width={1}>\n                        <Flex\n                          mb={3}\n                          width={1}\n                          flexDirection={'column'}\n                          alignItems={'flex-start'}\n                          justifyContent={'center'}\n                        >\n                          <Heading.h4\n                            mb={2}\n                            ml={3}\n                            mt={3}\n                            fontWeight={4}\n                            fontSize={[2,3]}\n                            textAlign={'left'}\n                            color={'dark-gray'}\n                            lineHeight={'initial'}\n                          >\n                            APRs\n                          </Heading.h4>\n                          <StatsChart\n                            height={300}\n                            {...this.state}\n                            chartMode={'APR'}\n                            parentId={'chart-APR'}\n                            isMobile={this.props.isMobile}\n                            contracts={this.props.contracts}\n                            apiResults={this.state.apiResults}\n                            idleVersion={this.state.idleVersion}\n                            apiResults_unfiltered={this.state.apiResults_unfiltered}\n                          />\n                        </Flex>\n                      </Flex>\n                    </DashboardCard>\n                    <DashboardCard\n                      cardProps={{\n                        mr:4,\n                        height:'fit-content',\n                        style:this.props.isMobile ? {width:'100%'} : {width:'32vw'}\n                      }}\n                      title={'Risk Score'}\n                      description={'Idle Risk Score is a weighted average of the underlying protocols risks assessed by DeFi Score'}\n                      titleParentProps={{\n                        ml:16,\n                        mt:16\n                      }}\n                    >\n                      <Flex id='chart-SCORE' width={1}>\n                        <Flex\n                          mb={3}\n                          width={1}\n                          flexDirection={'column'}\n                          alignItems={'flex-start'}\n                          justifyContent={'center'}\n                        >\n                          <StatsChart\n                            height={300}\n                            {...this.state}\n                            chartMode={'SCORE'}\n                            parentId={'chart-SCORE'}\n                            isMobile={this.props.isMobile}\n                            contracts={this.props.contracts}\n                            apiResults={this.state.apiResults}\n                            idleVersion={this.state.idleVersion}\n                            apiResults_unfiltered={this.state.apiResults_unfiltered}\n                          />\n                        </Flex>\n                      </Flex>\n                    </DashboardCard>\n                    <DashboardCard\n                      cardProps={{\n                        mr:4,\n                        height:'fit-content',\n                        style:this.props.isMobile ? {width:'100%'} : {width:'32vw'}\n                      }}\n                    >\n                      <Flex id='chart-VOL' width={1}>\n                        <Flex\n                          mb={3}\n                          width={1}\n                          flexDirection={'column'}\n                          alignItems={'flex-start'}\n                          justifyContent={'center'}\n                        >\n                          <Heading.h4\n                            mb={2}\n                            ml={3}\n                            mt={3}\n                            fontWeight={4}\n                            fontSize={[2,3]}\n                            textAlign={'left'}\n                            color={'dark-gray'}\n                            lineHeight={'initial'}\n                          >\n                            Volume\n                          </Heading.h4>\n                          <StatsChart\n                            height={300}\n                            {...this.state}\n                            chartMode={'VOL'}\n                            parentId={'chart-VOL'}\n                            isMobile={this.props.isMobile}\n                            contracts={this.props.contracts}\n                            apiResults={this.state.apiResults}\n                            idleVersion={this.state.idleVersion}\n                            apiResults_unfiltered={this.state.apiResults_unfiltered}\n                          />\n                        </Flex>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n              </Box>\n            )\n          }\n\n          <DateRangeModal\n            minDate={this.state.minDate}\n            maxDate={this.state.maxDate}\n            handleSelect={this.setDateRange}\n            isOpen={this.state.dateRangeModalOpened}\n            closeModal={e => this.setDateRangeModal(false)}\n            startDate={this.state.startTimestampObj ? this.state.startTimestampObj._d : null}\n            endDate={this.state.endTimestampObj ? this.state.endTimestampObj._d : null}\n          />\n        </Flex>\n      );\n    }\n  }\n}\n\nexport default Stats;","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport { Flex, Icon, Text, Box } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass Utils extends Component {\n\n  state = {\n\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    const SubComponent = this.props.selectedSubsection && this.props.selectedSubsection.subComponent ? this.props.selectedSubsection.subComponent : null;\n    return (\n      <Flex\n        width={1}\n        flexDirection={'column'}\n      >\n        {\n          this.props.selectedSubsection ? (\n            <Box\n              width={1}\n            >\n              <Flex\n                width={1}\n              >\n                <Breadcrumb\n                  showPathMobile={true}\n                  isMobile={this.props.isMobile}\n                  path={[this.props.selectedSubsection.label]}\n                  text={this.props.selectedSection.label.toUpperCase()}\n                  handleClick={ e => this.props.goToSection(this.props.selectedSection.route) }\n                />\n              </Flex>\n              <Flex\n                my={[2,3]}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Title\n                  mb={2}\n                >\n                  {this.props.selectedSubsection.label}\n                </Title>\n                <Text\n                  textAlign={'center'}\n                >\n                  {this.props.selectedSubsection.desc}\n                </Text>\n              </Flex>\n              <SubComponent\n                {...this.props}\n                {...this.props.selectedSubsection.directProps}\n                toolProps={this.props.selectedSubsection.props}\n              />\n            </Box>\n          ) : (\n            <Flex\n              my={[2,3]}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Title\n                mb={3}\n              >\n                Tools\n              </Title>\n              <Flex\n                width={1}\n                style={{\n                  flexWrap:'wrap'\n                }}\n              >\n              {\n                this.props.selectedSection.submenu.map( (tool,toolIndex) => (\n                  <DashboardCard\n                    isInteractive={true}\n                    key={`tool_${toolIndex}`}\n                    cardProps={{\n                      p:[3,4],\n                      mb:[3,3],\n                      mr:[0,'2%'],\n                      style:{\n                        flex: this.props.isMobile ? '1 1 100%' : '0 0 31%'\n                      },\n                      alignItems:'center',\n                      flexDirection:'column',\n                      justifyContent:'center'\n                    }}\n                    handleClick={ e => this.props.goToSection(this.props.selectedSection.route+'/'+tool.route) }\n                  >\n                    <Text\n                      fontSize={[3,4]}\n                      textAlign={'center'}\n                    >\n                      {tool.label}\n                    </Text>\n                    <Flex\n                      justifyContent={'center'}\n                    >\n                      <Icon\n                        my={[0,2]}\n                        size={'3em'}\n                        name={tool.icon}\n                      />\n                    </Flex>\n                    <Text\n                      fontSize={[2,2]}\n                      textAlign={'center'}\n                    >\n                      {tool.desc}\n                    </Text>\n                  </DashboardCard>\n                ) )\n              }\n              </Flex>\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Utils;\n","import theme from '../theme';\nimport Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport { Flex, Heading, Text } from \"rimble-ui\";\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport PortfolioEquity from '../PortfolioEquity/PortfolioEquity';\n\nclass FundsOverview extends Component {\n\n  state = {\n    govTokensAprs:null,\n    aggregatedValues:[],\n    govTokensTotalApr:null,\n    govTokensUserBalance:null,\n    govTokensDistribution:null,\n    govTokensTotalBalance:null,\n    govTokensTotalAprTooltip:null,\n    idleTokenUserDistribution:null,\n    govTokensDistributionTooltip:null,\n    govTokensTotalBalanceTooltip:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  idleGovToken = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.idleGovToken = this.functionsUtil.getIdleGovToken();\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n\n    const govTokenAvailableTokens = {};\n    govTokenAvailableTokens[this.props.selectedToken] = this.props.tokenConfig;\n\n    const [\n      govTokensAprs,\n      idleTokenUserDistribution,\n      govTokensUserBalance,\n      avgAPY,\n      days\n    ] = await Promise.all([\n      this.functionsUtil.getGovTokensAprs(this.props.selectedToken,this.props.tokenConfig),\n      this.idleGovToken.getUserDistribution(this.props.account,govTokenAvailableTokens,true),\n      this.functionsUtil.getGovTokensUserBalances(this.props.account,govTokenAvailableTokens,null),\n      this.functionsUtil.loadAssetField('avgAPY',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n      this.functionsUtil.loadAssetField('daysFirstDeposit',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n    ]);\n\n    const govTokensTotalBalance = govTokensUserBalance ? Object.values(govTokensUserBalance).reduce( (totBalance,govTokenBalance) => {\n      return totBalance.plus(this.functionsUtil.BNify(govTokenBalance));\n    },this.functionsUtil.BNify(0)) : null;\n\n    const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n      const balance = govTokensUserBalance[govToken];\n      if (balance.gt(0)){\n        return `+${balance.toFixed(2)} ${govToken}`;\n      } else {\n        return null;\n      }\n    }).filter(v => (v !== null)) : null;\n\n    // console.log(govTokensTotalBalance,govTokensUserBalance,govTokensTotalBalanceTooltip);\n\n    const govTokensTotalApr = govTokensAprs ? Object.values(govTokensAprs).reduce( (totApr,govTokenApr) => {\n      return totApr.plus(this.functionsUtil.BNify(govTokenApr));\n    },this.functionsUtil.BNify(0)) : null;\n\n    const govTokensTotalAprTooltip = govTokensAprs ? Object.keys(govTokensAprs).map( govToken => {\n      const apr = govTokensAprs[govToken];\n      if (apr.gt(0)){\n        return `${govToken}: ${apr.toFixed(2)}%`;\n      }\n      return null;\n    }).filter(v => (v !== null)) : null;\n\n    /*\n    const govTokensDistributionTooltip = govTokensUserDistribution ? Object.keys(govTokensUserDistribution).map( govToken => {\n      const speed = govTokensUserDistribution[govToken];\n      if (speed.gt(0)){\n        const distributionFrequency = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'distributionFrequency']);\n        return `+${speed.toFixed(4)} ${govToken}/${distributionFrequency}`;\n      }\n      return null;\n    }).filter(v => (v !== null)) : null;\n    */\n\n    const aggregatedValues = [\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Avg APY',\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (avgAPY ? avgAPY.toFixed(2)+'%' : '-') }}\n              />\n            </Flex>\n          )\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Current Allocation',\n          children:(\n            <Flex\n              width={1}\n              id={'allocationChart'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n            >\n              <AssetField\n                {...this.props}\n                showLoader={true}\n                fieldInfo={{\n                  name:'allocationChart'\n                }}\n                parentId={'allocationChart'}\n                token={this.props.selectedToken}\n                tokenConfig={this.props.tokenConfig}\n              />\n            </Flex>\n          ),\n          label:'',\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Days since first deposit',\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (days ? parseInt(days) : '-') }}\n              />\n            </Flex>\n          )\n        }\n      }\n    ];\n\n    this.setState({\n      govTokensAprs,\n      aggregatedValues,\n      govTokensTotalApr,\n      govTokensUserBalance,\n      govTokensTotalBalance,\n      govTokensTotalAprTooltip,\n      idleTokenUserDistribution,\n      govTokensTotalBalanceTooltip\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        flexDirection={'column'}\n      >\n        {\n          this.state.aggregatedValues.length>0 && \n            <Flex\n              width={1}\n              mb={[0,3]}\n              mt={[2,0]}\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.aggregatedValues.map((v,i) => (\n                  <Flex\n                    {...v.flexProps}\n                    flexDirection={'column'}\n                    key={`aggregatedValue_${i}`}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        py:[2,3],\n                        mb:[3,0]\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        {\n                          v.props.children ? v.props.children : (\n                            <Text\n                              lineHeight={1}\n                              fontWeight={[3,4]}\n                              color={'copyColor'}\n                              fontFamily={'counter'}\n                              fontSize={[4,'1.7em']}\n                              dangerouslySetInnerHTML={{ __html: v.props.value }}\n                            >\n                            </Text>\n                          )\n                        }\n                        <Text\n                          mt={2}\n                          fontWeight={2}\n                          fontSize={[1,2]}\n                          color={'cellText'}\n                        >\n                          {v.props.title}\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                ))\n              }\n            </Flex>\n        }\n        <DashboardCard\n          cardProps={{\n            px:2,\n            py:3\n          }}\n        >\n          <Flex\n            width={1}\n            ml={[0,3]}\n            id={\"funds-overview\"}\n          >\n            <PortfolioEquity\n              {...this.props}\n              chartHeight={350}\n              parentId={'funds-overview'}\n              chartToken={this.props.selectedToken}\n              enabledTokens={[this.props.selectedToken]}\n              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n            />\n          </Flex>\n          <Flex\n            width={1}\n            flexDirection={['column','row']}\n          >\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Deposited\n              </Title>\n              <AssetField\n                {...this.props}\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'amountLent',\n                  props:{\n                    decimals:4,\n                    maxPrecision:8,\n                    fontWeight:300,\n                    fontSize:['1.8em','1.9em'],\n                    color:theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Redeemable\n              </Title>\n              <AssetField\n                {...this.props}\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'redeemableBalanceCounter',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      color:theme.colors.counter,\n                      fontSize: this.props.isMobile ? '1.8em' : '1.9em',\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              <Flex\n                width={1}\n                mt={'-9px'}\n              >\n                <AssetField\n                  {...this.props}\n                  token={this.props.selectedToken}\n                  fieldInfo={{\n                    name:'earningsPerc',\n                    props:{\n                      fontSize:1,\n                      fontWeight:2,\n                      color:'cellText',\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    }\n                  }}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Earnings\n              </Title>\n              <AssetField\n                {...this.props}\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'earningsCounter',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                      color:theme.colors.counter\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              {\n                this.state.govTokensTotalBalanceTooltip && this.state.govTokensTotalBalanceTooltip.length>0 && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      this.state.govTokensTotalBalanceTooltip.map((govTokenBalance,govTokenIndex) => (\n                        <Text\n                          fontSize={1}\n                          lineHeight={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                          mt={govTokenIndex ? 1 : 0}\n                          key={`govToken_${govTokenIndex}`}\n                        >\n                          {govTokenBalance}\n                        </Text>\n                      ))\n                    }\n                  </Flex>\n                )/* : this.state.govTokensUserBalance && Object.keys(this.state.govTokensUserBalance).length>1 ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontSize={1}\n                      lineHeight={1}\n                      fontWeight={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      + ${this.state.govTokensTotalBalance.toFixed(4)}\n                    </Text>\n                    <Tooltip\n                      placement={'top'}\n                      message={this.state.govTokensTotalBalanceTooltip.join(' / ')}\n                    >\n                      <Icon\n                        ml={1}\n                        size={'1em'}\n                        color={'cellTitle'}\n                        name={\"InfoOutline\"}\n                      />\n                    </Tooltip>\n                  </Flex>\n                ) : null\n                */\n              }\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Fees\n              </Title>\n              <AssetField\n                {...this.props}\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'feesCounter',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                      color:theme.colors.counter\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Current APY\n              </Title>\n              <AssetField\n                {...this.props}\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'apy',\n                  props:{\n                    decimals:2,\n                    fontWeight:300,\n                    fontSize:['1.8em','1.9em'],\n                    color:theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              {\n                this.state.idleTokenUserDistribution && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      mt={1}\n                      fontSize={1}\n                      lineHeight={1}\n                      fontWeight={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      {this.state.idleTokenUserDistribution.toFixed(4)} {this.idleGovToken.tokenName}/{this.idleGovToken.tokenConfig.distributionFrequency}\n                    </Text>\n                  </Flex>\n                )\n                /*\n                this.state.govTokensAprs && Object.keys(this.state.govTokensAprs).length===1 ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      Object.keys(this.state.govTokensAprs).map((govToken,govTokenIndex) => (\n                        <Text\n                          fontSize={1}\n                          lineHeight={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                          ml={govTokenIndex ? 2 : 0}\n                          key={`govToken_${govToken}`}\n                        >\n                          {this.state.govTokensAprs[govToken].toFixed(2)}% {govToken}\n                        </Text>\n                      ))\n                    }\n                  </Flex>\n                ) : this.state.govTokensAprs && Object.keys(this.state.govTokensAprs).length>1 ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontSize={1}\n                      lineHeight={1}\n                      fontWeight={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      + {this.state.govTokensTotalApr.toFixed(2)}%\n                    </Text>\n                    <Tooltip\n                      placement={'top'}\n                      message={this.state.govTokensTotalAprTooltip.join('; ')}\n                    >\n                      <Icon\n                        ml={1}\n                        size={'1em'}\n                        color={'cellTitle'}\n                        name={\"InfoOutline\"}\n                      />\n                    </Tooltip>\n                  </Flex>\n                ) : null\n                */\n              }\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Risk Score\n              </Title>\n              <AssetField\n                {...this.props}\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'score',\n                  props:{\n                    decimals:1,\n                    fontWeight:300,\n                    fontSize:['1.8em','1.9em'],\n                    color:theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n          </Flex>\n        </DashboardCard>\n      </Flex>\n    );\n  }\n}\n\nexport default FundsOverview;","import React, { Component } from 'react';\nimport { Flex, Icon, Text } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ConnectBox extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          p:3,\n          mt:3\n        }}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            name={'Input'}\n            color={'cellText'}\n          />\n          <Text\n            mt={2}\n            fontSize={2}\n            color={'cellText'}\n            textAlign={'center'}\n          >\n            Please connect with your wallet interact with Idle.\n          </Text>\n          <RoundButton\n            buttonProps={{\n              mt:2,\n              width:[1,1/2]\n            }}\n            handleClick={this.props.connectAndValidateAccount}\n          >\n            Connect\n          </RoundButton>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ConnectBox;\n","import React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\nimport { Flex, Text, Icon, Checkbox, Box, Link, Input, Tooltip } from \"rimble-ui\";\n\nclass CurveRedeem extends Component {\n\n  state = {\n    processing:{\n      txHash:null,\n      loading:false\n    },\n    inputValue:null,\n    maxSlippage:0.2,\n    tokenConfig:null,\n    unevenAmounts:null,\n    selectedToken:null,\n    availableTokens:null,\n    buttonDisabled:false,\n    showMaxSlippage:false,\n    curveTokenConfig:null,\n    curvePoolContract:null,\n    curveSwapContract:null,\n    curveTokenBalance:null,\n    curveTokensAmounts:null,\n    fastBalanceSelector:null,\n    redeemUnevenAmounts:false,\n    curveRedeemableIdleTokens:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.initToken();\n  }\n\n  showMaxSlippage = () => {\n    this.setState({\n      showMaxSlippage:true\n    });\n  }\n\n  toggleUnevenAmounts = (redeemUnevenAmounts) => {\n    this.setState({\n      redeemUnevenAmounts\n    });\n  }\n\n  async calculateSlippage(max_slippage=null){\n    const inputValue = this.state.inputValue ? this.functionsUtil.BNify(this.state.inputValue) : null;\n\n    if (!inputValue || inputValue.lte(0)){\n      return false;\n    }\n\n    const normalizedAmount = this.functionsUtil.normalizeTokenAmount(inputValue,this.state.curvePoolContract.decimals);\n    const [curveTokensAmounts,curveIdleTokensAmounts] = await Promise.all([\n      this.functionsUtil.getCurveTokensAmounts(this.props.account,normalizedAmount,true),\n      this.functionsUtil.getCurveIdleTokensAmounts(this.props.account,normalizedAmount)\n    ])\n\n    const amounts = this.state.redeemUnevenAmounts ? curveIdleTokensAmounts : null;\n\n    let withdrawSlippage = await this.functionsUtil.getCurveSlippage(this.state.tokenConfig.idle.token,normalizedAmount,false,amounts);\n    if (withdrawSlippage){\n      withdrawSlippage = withdrawSlippage.times(100);\n    }\n\n    this.setState({\n      withdrawSlippage,\n      curveTokensAmounts,\n      curveIdleTokensAmounts\n    });\n\n    // Add max slippage but don't save in state\n    if (withdrawSlippage && max_slippage){\n      withdrawSlippage = withdrawSlippage.plus(max_slippage);\n    }\n\n    return withdrawSlippage;\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenChanged = prevProps.tokenConfig.idle.token !== this.props.tokenConfig.idle.token;\n    if (tokenChanged){\n      await this.initToken();\n    }\n\n    const redeemUnevenAmountsChanged = prevState.redeemUnevenAmounts !== this.state.redeemUnevenAmounts;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector !== prevState.fastBalanceSelector;\n    if (fastBalanceSelectorChanged || redeemUnevenAmountsChanged){\n      this.setInputValue();\n    }\n\n    const inputChanged = prevState.inputValue !== this.state.inputValue;\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const maxSlippageChanged = parseFloat(prevState.maxSlippage) !== parseFloat(this.state.maxSlippage);\n    if (inputChanged || selectedTokenChanged || maxSlippageChanged){\n      this.calculateSlippage();\n    }\n  }\n\n  checkButtonDisabled = (amount=null) => {\n\n    if (!amount){\n      amount = this.state.inputValue;\n    }\n\n    let buttonDisabled = false;\n\n    if (this.state.redeemUnevenAmounts){\n      buttonDisabled = !amount || amount.gt(this.state.curveTokenBalance);\n    } else {\n      buttonDisabled = !amount || amount.gt(this.state.redeemableBalance);\n    }\n\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  setInputValue = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n    let inputValue = null;\n\n    if (this.state.redeemUnevenAmounts){\n      inputValue = this.state.curveTokenBalance ? this.functionsUtil.BNify(this.state.curveTokenBalance).times(selectedPercentage) : null;\n    } else {\n      inputValue = this.state.redeemableBalance ? this.functionsUtil.BNify(this.state.redeemableBalance).times(selectedPercentage) : null;\n    }\n\n    this.checkButtonDisabled(inputValue);\n\n    this.setState({\n      inputValue\n    });\n  }\n\n  changeToken = selectedToken => {\n    const tokenConfig = this.state.availableTokens[selectedToken];\n    this.setState({\n      tokenConfig,\n      selectedToken\n    });\n  }\n\n  initToken = async () => {\n    const curveConfig = this.functionsUtil.getGlobalConfig(['curve']);\n    const curveTokenConfig = curveConfig.availableTokens[this.props.tokenConfig.idle.token];\n\n    const [curvePoolContract,curveSwapContract] = await Promise.all([\n      this.functionsUtil.getCurvePoolContract(),\n      this.functionsUtil.getCurveSwapContract()\n    ]);\n\n    const [\n      curveTokenPrice,\n      curveTokenBalance,\n      curveRedeemableIdleTokens,\n    ] = await Promise.all([\n      this.functionsUtil.getCurveTokenPrice(),\n      this.functionsUtil.getCurveTokenBalance(this.props.account),\n      this.functionsUtil.getCurveRedeemableIdleTokens(this.props.account)\n    ]);\n\n    const redeemableBalance = curveTokenBalance ? curveTokenBalance.times(curveTokenPrice) : this.functionsUtil.BNify(0);\n\n    // const max_burn_amount = this.functionsUtil.normalizeTokenAmount(curveTokenBalance,curvePoolContract.decimals).toString();\n    // const amounts = this.functionsUtil.getCurveAmounts(this.props.tokenConfig.idle.token,0);\n    // let redeemUnevenAmounts = await this.functionsUtil.getCurveUnevenTokenAmounts(amounts,max_burn_amount);\n\n    const unevenAmounts = [];\n\n    let tokenConfig = this.props.tokenConfig ? this.props.tokenConfig : this.state.tokenConfig;\n    let selectedToken = this.props.selectedToken ? this.props.selectedToken : this.state.selectedToken;\n    let availableTokens = this.state.availableTokens;\n\n    if (!availableTokens){\n      availableTokens = this.functionsUtil.getCurveAvailableTokens();\n      if (!selectedToken){\n        selectedToken = Object.keys(availableTokens)[0];\n        tokenConfig = availableTokens[selectedToken];\n      }\n    }\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      unevenAmounts,\n      curveTokenPrice,\n      availableTokens,\n      curveTokenConfig,\n      curvePoolContract,\n      curveSwapContract,\n      curveTokenBalance,\n      redeemableBalance,\n      curveRedeemableIdleTokens\n    });\n  }\n\n  redeem = async () => {\n\n    if (!this.state.curveTokenBalance){\n      return false;\n    }\n\n    const callbackRedeem = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventLabel: tx.status,\n        eventCategory: `CurveRedeem`,\n        eventAction: this.props.selectedToken,\n        eventValue: this.state.curveTokenBalance.toFixed()\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      }));\n\n      if (typeof this.props.callbackRedeem === 'function' && txSucceeded){\n        this.props.callbackRedeem(tx);\n      }\n    };\n\n    const callbackReceiptRedeem = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    const contractName = this.state.curveSwapContract.name;\n    const withdrawSlippage = await this.calculateSlippage(this.state.maxSlippage);\n    const max_slippage = this.functionsUtil.BNify(this.state.maxSlippage).div(100);\n    const inputValue = this.state.inputValue ? this.functionsUtil.BNify(this.state.inputValue) : null;\n    const _amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.state.curvePoolContract.decimals);\n    const curveTokenBalance = this.functionsUtil.normalizeTokenAmount(this.state.curveTokenBalance,this.state.curvePoolContract.decimals);\n\n    if (this.state.redeemUnevenAmounts){\n      const min_amounts = await this.functionsUtil.getCurveIdleTokensAmounts(this.props.account,_amount,max_slippage);\n      console.log('remove_liquidity',_amount.toString(),min_amounts);\n      this.props.contractMethodSendWrapper(contractName, 'remove_liquidity', [_amount, min_amounts], null, callbackRedeem, callbackReceiptRedeem);\n    } else {\n      const coin_index = this.state.curveTokenConfig.migrationParams.coinIndex;\n      const amounts = await this.functionsUtil.getCurveAmounts(this.props.tokenConfig.idle.token,_amount,false);\n      const min_amount = this.functionsUtil.normalizeTokenAmount(inputValue.minus(inputValue.times(withdrawSlippage.div(100))),this.state.curveTokenConfig.decimals);\n      let _token_amount = await this.functionsUtil.getCurveTokenAmount(amounts,false);\n      _token_amount = this.functionsUtil.BNify(_token_amount).isGreaterThan(curveTokenBalance) ? curveTokenBalance : this.functionsUtil.BNify(_token_amount);\n\n      console.log('remove_liquidity_one_coin',_amount,amounts,coin_index,_token_amount.toFixed(),min_amount);\n\n      // debugger;\n      this.props.contractMethodSendWrapper(contractName, 'remove_liquidity_one_coin', [_token_amount, coin_index, min_amount], null, callbackRedeem, callbackReceiptRedeem);\n    }\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  changeInputValue = (e) => {\n    const inputValue = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n    this.checkButtonDisabled(inputValue);\n\n    const fastBalanceSelector = null;\n\n    this.setState((prevState) => ({\n      inputValue,\n      fastBalanceSelector,\n    }));\n  }\n\n  getFastBalanceSelector = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    return this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n  }\n\n  setMaxSlippage = (maxSlippage) => {\n    this.setState({\n      maxSlippage\n    });\n  }\n\n  setFastBalanceSelector = (fastBalanceSelector) => {\n    this.setState({\n      fastBalanceSelector\n    });\n  }\n\n  render() {\n\n    const showSlippage = !this.state.buttonDisabled && this.state.withdrawSlippage;\n    const curveTokenName = this.functionsUtil.getGlobalConfig(['curve','poolContract','token']);\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          {\n            !this.state.curveTokenBalance ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3,\n                  minHeight:'195px',\n                  style:{\n                    display:'flex',\n                    alignItems:'center',\n                    justifyContent:'center'\n                  }\n                }}\n              >\n                <FlexLoader\n                  flexProps={{\n                    flexDirection:'row'\n                  }}\n                  loaderProps={{\n                    size:'30px'\n                  }}\n                  textProps={{\n                    ml:2\n                  }}\n                  text={'Checking Curve Pool...'}\n                />\n              </DashboardCard>\n            ) : this.state.processing.loading ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  flexDirection={'column'}\n                >\n                  <TxProgressBar\n                    web3={this.props.web3}\n                    hash={this.state.processing.txHash}\n                    endMessage={`Finalizing redeem request...`}\n                    cancelTransaction={this.cancelTransaction.bind(this)}\n                    waitText={ this.props.waitText ? this.props.waitText : 'Redeem estimated in'}\n                  />\n                </Flex>\n              </DashboardCard>\n            ) : (\n              <Flex\n                width={1}\n                flexDirection={'column'}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                    mb:2\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  >\n                    <Icon\n                      size={'1.8em'}\n                      color={'cellText'}\n                      name={'FileUpload'}\n                    />\n                    <Text\n                      mt={1}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      Withdraw from the Curve Pool in a specific token or in uneven amounts of tokens (with no slippage).\n                    </Text>\n                    <Flex\n                      mt={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Checkbox\n                        required={false}\n                        label={`Redeem with no slippage`}\n                        checked={this.state.redeemUnevenAmounts}\n                        onChange={ e => this.toggleUnevenAmounts(e.target.checked) }\n                      />\n                      <Tooltip\n                        placement={'top'}\n                        message={`You will receive an uneven amounts of ${Object.keys(this.state.availableTokens).join(', ')} proportional to the token availailability in the Curve pool.`}\n                      >\n                        <Icon\n                          size={'1em'}\n                          color={'cellTitle'}\n                          name={\"InfoOutline\"}\n                        />\n                      </Tooltip>\n                    </Flex>\n                  </Flex>\n                </DashboardCard>\n                {\n                  !this.state.redeemUnevenAmounts && (!this.props.selectedToken || (this.state.showMaxSlippage && showSlippage)) ? (\n                    <Box\n                      mb={3}\n                      width={1}\n                    >\n                      {\n                        !this.props.selectedToken && \n                          <Box\n                            width={1}\n                          >\n                            <Text\n                              mb={1}\n                            >\n                              Select destination token:\n                            </Text>\n                            <AssetSelector\n                              {...this.props}\n                              id={'token-from'}\n                              showBalance={false}\n                              onChange={this.changeToken}\n                              tokenConfig={this.state.tokenConfig}\n                              selectedToken={this.state.selectedToken}\n                              availableTokens={this.state.availableTokens}\n                            />\n                          </Box>\n                      }\n                      {\n                        this.state.showMaxSlippage && showSlippage && (\n                          <Box\n                            width={1}\n                            mt={ !this.props.selectedToken ? 2 : 0 }\n                          >\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                            >\n                              <Text>\n                                Choose max slippage:\n                              </Text>\n                              <Tooltip\n                                placement={'top'}\n                                message={`Max additional slippage on top of the one shown below`}\n                              >\n                                <Icon\n                                  ml={1}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                  name={\"InfoOutline\"}\n                                />\n                              </Tooltip>\n                            </Flex>\n                            <Flex\n                              mt={2}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              {\n                                [0.2,0.5,1,5].map( slippage => (\n                                  <FastBalanceSelector\n                                    cardProps={{\n                                      p:1\n                                    }}\n                                    textProps={{\n                                      fontSize:1\n                                    }}\n                                    percentage={slippage}\n                                    key={`selector_${slippage}`}\n                                    onMouseDown={()=>this.setMaxSlippage(slippage)}\n                                    isActive={this.state.maxSlippage === parseFloat(slippage)}\n                                  />\n                                ))\n                              }\n                            </Flex>\n                          </Box>\n                        )\n                      }\n                    </Box>\n                  ) : this.state.redeemUnevenAmounts && this.state.curveTokensAmounts && !this.state.buttonDisabled && (\n                    <DashboardCard\n                      cardProps={{\n                        mt:1,\n                        mb:2,\n                        py:2,\n                        px:1\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Text\n                          mt={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          You will receive:\n                        </Text>\n                        <Flex\n                          mt={2}\n                          width={1}\n                          boxShadow={0}\n                          style={{\n                            flexWrap:'wrap'\n                          }}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                          >\n                            {\n                              Object.keys(this.state.curveTokensAmounts).map( token => {\n                                const balance = this.state.curveTokensAmounts[token];\n                                return (\n                                  <Flex\n                                    mb={1}\n                                    mx={1}\n                                    minWidth={'21%'}\n                                    flexDirection={'row'}\n                                    key={`tokenBalance_${token}`}\n                                    justifyContent={'flex-start'}\n                                  >\n                                    <AssetField\n                                      token={token}\n                                      tokenConfig={{\n                                        token:token\n                                      }}\n                                      fieldInfo={{\n                                        name:'icon',\n                                        props:{\n                                          mr:1,\n                                          width:['1.4em','1.6em'],\n                                          height:['1.4em','1.6em']\n                                        }\n                                      }}\n                                    />\n                                    <SmartNumber\n                                      fontSize={[0,1]}\n                                      fontWeight={500}\n                                      maxPrecision={4}\n                                      color={'cellText'}\n                                      number={balance.toString()}\n                                    />\n                                  </Flex>\n                                );\n                            })\n                          }\n                        </Flex>\n                      </Flex>\n                    </DashboardCard>\n                  )\n                }\n                <Flex\n                  mb={3}\n                  width={1}\n                  flexDirection={'column'}\n                >\n                  <Flex\n                    mb={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'flex-end'}\n                  >\n                    {\n                      showSlippage && (\n                        <Flex\n                          width={1}\n                          maxWidth={'50%'}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                        >\n                          <Text\n                            fontSize={1}\n                            fontWeight={3}\n                            textAlign={'right'}\n                            style={{\n                              whiteSpace:'nowrap'\n                            }}\n                            color={ this.state.withdrawSlippage.gt(0) ? this.props.theme.colors.transactions.status.failed : this.props.theme.colors.transactions.status.completed }\n                          >\n                            {\n                              parseFloat(this.state.withdrawSlippage.toFixed(2)) === 0 ?\n                                'No Slippage'\n                              : `${ this.state.withdrawSlippage.gt(0) ? 'Slippage: ' : 'Bonus: ' } ${this.state.withdrawSlippage.abs().toFixed(2)}%`\n                            }\n                          </Text>\n                          <Tooltip\n                            placement={'top'}\n                            message={ this.state.redeemUnevenAmounts ? `You will receive an uneven amounts of ${Object.keys(this.state.availableTokens).join(', ')} proportional to the token availailability in the Curve pool.` : this.state.withdrawSlippage.gt(0) ? 'Slippage comes from depositing too many coins not in balance, and current coin prices are additionally accounted for' : 'Bonus comes as an advantage from current coin prices which usually appears for coins which are high in balance'}\n                          >\n                            <Icon\n                              ml={1}\n                              size={'1em'}\n                              color={'cellTitle'}\n                              name={\"InfoOutline\"}\n                            />\n                          </Tooltip>\n                          {\n                            !this.state.redeemUnevenAmounts &&\n                              <Link\n                                ml={1}\n                                color={'copyColor'}\n                                hoverColor={'primary'}\n                                onClick={this.showMaxSlippage}\n                              >\n                                change\n                              </Link>\n                          }\n                        </Flex>\n                      )\n                    }\n                    <Flex\n                      width={1}\n                      maxWidth={'50%'}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'flex-end'}\n                    >\n                      <Link\n                        fontSize={1}\n                        fontWeight={3}\n                        color={'dark-gray'}\n                        textAlign={'right'}\n                        hoverColor={'copyColor'}\n                        onClick={ (e) => this.setFastBalanceSelector(100) }\n                        style={{\n                          maxWidth:'100%',\n                          overflow:'hidden',\n                          whiteSpace:'nowrap',\n                          textOverflow:'ellipsis'\n                        }}\n                      >\n                        {\n                          this.state.redeemUnevenAmounts ? `${this.state.curveTokenBalance.toFixed(this.props.isMobile ? 2 : 4)} ${curveTokenName}` : `${this.state.redeemableBalance.toFixed(this.props.isMobile ? 2 : 4)} ${this.state.selectedToken}`\n                        }\n                      </Link>\n                    </Flex>\n                  </Flex>\n                  <Input\n                    min={0}\n                    type={\"number\"}\n                    required={true}\n                    height={'3.4em'}\n                    borderRadius={2}\n                    fontWeight={500}\n                    boxShadow={'none !important'}\n                    placeholder={`Insert amount`}\n                    onChange={this.changeInputValue.bind(this)}\n                    border={`1px solid ${this.props.theme.colors.divider}`}\n                    value={this.state.inputValue !== null ? this.functionsUtil.BNify(this.state.inputValue).toFixed() : ''}\n                  />\n                  <Flex\n                    mt={2}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    {\n                      [25,50,75,100].map( percentage => (\n                        <FastBalanceSelector\n                          percentage={percentage}\n                          key={`selector_${percentage}`}\n                          onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                          isActive={this.state.fastBalanceSelector === parseInt(percentage)}\n                        />\n                      ))\n                    }\n                  </Flex>\n                </Flex>\n                <Flex\n                  justifyContent={'center'}\n                >\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2],\n                      disabled:this.state.buttonDisabled\n                    }}\n                    handleClick={this.redeem}\n                  >\n                    Redeem\n                  </RoundButton>\n                </Flex>\n              </Flex>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CurveRedeem;","import React, { Component } from 'react';\nimport {\n  Button,\n  Flex,\n  Box,\n  Text\n} from \"rimble-ui\";\nimport styles from './TwitterShareButton.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TwitterShareButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  share = () => {\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Share',\n      eventAction: 'twitter',\n      eventLabel: this.props.parent\n    });\n\n    const w = Math.min(window.innerWidth,600);\n    const h = 350;\n    const x = (window.innerWidth-w)/2;\n    const y = 150;\n    window.open(`https://twitter.com/intent/tweet?text=${this.props.tweet}`,\"_blank\",`toolbar=yes,scrollbars=no,resizable=no,top=${y},left=${x},width=${w},height=${h}`);\n  }\n\n  render() {\n    return (\n        <Button\n          borderRadius={1}\n          mainColor={'#2aa6f2'}\n          contrastColor={'white'}\n          onClick={ e => { this.share() } }\n        >\n          <Flex flexDirection={'row'} alignItems={'center'} justifyContent={'center'}>\n            <Box className={styles.twitterIcon} />\n            <Text color={'white'} fontWeight={3} ml={2}>{ this.props.text ? this.props.text : 'Tweet' }</Text>\n          </Flex>\n        </Button>\n    );\n  }\n}\n\nexport default TwitterShareButton;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Link,\n  Flex\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport TwitterShareButton from '../../TwitterShareButton/TwitterShareButton.js';\nimport Confetti from 'react-confetti/dist/react-confetti';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass ShareModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  closeModal = async (action) => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Share',\n        eventAction: action,\n        eventLabel: 'ShareModal'\n      });\n      this.props.closeModal();\n    } else {\n      this.props.closeModal();\n    }\n  }\n\n  render() {\n    const tweet = window.escape(this.props.tweet);\n    const customText = {__html: this.props.text};\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          {\n            this.props.confettiEnabled &&\n            <Confetti\n              style={{ position: 'fixed','zIndex':9999 }}\n              run={true}\n              recycle={true}\n              width={window.innerWidth}\n              height={window.innerHeight}\n            />\n          }\n          <ModalCard.Header title={this.props.title} icon={this.props.icon}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={3} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text color={'dark-gray'} textAlign={'center'} fontSize={3} mb={2} dangerouslySetInnerHTML={customText}></Text>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <TwitterShareButton tweet={tweet} text={'Share now'} parent={'ShareModal'} />\n              <Link mt={2} onClick={ e => this.closeModal('continue_without_sharing') } hoverColor={'blue'}>continue without sharing</Link>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ShareModal;","import theme from '../theme';\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport CurveRedeem from '../CurveRedeem/CurveRedeem';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport ShareModal from '../utilities/components/ShareModal';\nimport TransactionField from '../TransactionField/TransactionField';\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\nimport { Flex, Text, Input, Box, Icon, Link, Checkbox, Tooltip, Image } from \"rimble-ui\";\n\nclass DepositRedeem extends Component {\n\n  state = {\n    txError:{},\n    tokenAPY:'-',\n    inputValue:{},\n    processing:{},\n    curveAPY:null,\n    canRedeem:false,\n    maxSlippage:0.2,\n    canDeposit:false,\n    action:'deposit',\n    directMint:false,\n    activeModal:null,\n    showBuyFlow:false,\n    unlentBalance:null,\n    tokenApproved:false,\n    skipMigration:false,\n    showRedeemFlow:false,\n    contractPaused:false,\n    buttonDisabled:false,\n    canRedeemCurve:false,\n    showMaxSlippage:false,\n    redeemGovTokens:false,\n    canDepositCurve:false,\n    fastBalanceSelector:{},\n    actionProxyContract:{},\n    migrationEnabled:false,\n    componentMounted:false,\n    curveTokenBalance:null,\n    redeemCurveEnabled:false,\n    depositCurveBalance:null,\n    depositCurveEnabled:true,\n    showAdvancedOptions:false,\n    depositCurveSlippage:null,\n    metaTransactionsEnabled:true\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadProxyContracts();\n  }\n\n  async componentDidMount(){\n\n  }\n\n  setShowRedeemFlow = (showRedeemFlow) => {\n    this.setState({\n      showRedeemFlow\n    });\n  }\n\n  setShowBuyFlow = (showBuyFlow) => {\n    this.setState({\n      showBuyFlow\n    });\n  }\n\n  toggleShowAdvancedOptions = showAdvancedOptions => {\n    this.setState((prevState) => ({\n      showAdvancedOptions:!prevState.showAdvancedOptions\n    }));\n  }\n\n  toggleSkipMigration = skipMigration => {\n    this.setState({\n      skipMigration\n    });\n  }\n\n  toggleRedeemCurve = redeemCurveEnabled => {\n    this.setState({\n      redeemCurveEnabled\n    });\n  }\n\n  toggleDepositCurve = depositCurveEnabled => {\n    this.setState({\n      depositCurveEnabled\n    });\n  }\n\n  toggleSkipMint = (directMint) => {\n    this.setState({\n      directMint\n    });\n  }\n\n  toggleRedeemGovTokens = (redeemGovTokens) => {\n    this.setState({\n      redeemGovTokens\n    });\n  }\n\n  toggleMetaTransactionsEnabled = (metaTransactionsEnabled) => {\n    this.setState({\n      metaTransactionsEnabled\n    });\n  }\n\n  async loadProxyContracts(){\n    const actions = ['deposit','redeem'];\n    const newState = {\n      actionProxyContract:{}\n    };\n\n    await this.functionsUtil.asyncForEach(actions,async (action) => {\n      const mintProxyContractInfo = this.functionsUtil.getGlobalConfig(['contract','methods',action,'proxyContract']);\n      const hasProxyContract = mintProxyContractInfo && mintProxyContractInfo.enabled;\n      newState.actionProxyContract[action] = hasProxyContract ? mintProxyContractInfo : null;\n      if (hasProxyContract){\n        const proxyContract = await this.props.initContract(mintProxyContractInfo.name,mintProxyContractInfo.address,mintProxyContractInfo.abi);\n        newState.actionProxyContract[action].contract = proxyContract.contract;\n        newState.actionProxyContract[action].approved = await this.functionsUtil.checkTokenApproved(this.props.selectedToken,mintProxyContractInfo.address,this.props.account);\n      }\n    });\n\n    this.setState(newState);\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  setActiveModal = activeModal => {\n    this.setState({\n      activeModal\n    });\n  }\n\n  async loadAPY(){\n    const tokenAprs = await this.functionsUtil.getTokenAprs(this.props.tokenConfig);\n    if (tokenAprs && tokenAprs.avgApy !== null){\n      const tokenAPY = this.functionsUtil.BNify(tokenAprs.avgApy).toFixed(2);\n\n      let curveAPY = null;\n      if (this.state.canDepositCurve){\n        curveAPY = await this.functionsUtil.getCurveAPY();\n        // console.log('curveAPY',curveAPY);\n        if (curveAPY){\n          curveAPY = curveAPY.plus(tokenAPY);\n        }\n      }\n      this.setState({\n        tokenAPY,\n        curveAPY\n      });\n    }\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    if (this.props.tokenBalance === null){\n      return false;\n    }\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const tokenBalanceChanged = prevProps.tokenBalance !== this.props.tokenBalance && this.props.tokenBalance !== null;\n\n    if (tokenChanged || tokenBalanceChanged){\n      await this.loadProxyContracts();\n      this.loadTokenInfo();\n      return false;\n    }\n\n    const actionChanged = this.state.action !== prevState.action;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector[this.state.action] !== prevState.fastBalanceSelector[this.state.action];\n\n    if (actionChanged || fastBalanceSelectorChanged){\n      this.setInputValue();\n    }\n\n    const redeemGovTokensChanged = prevState.redeemGovTokens !== this.state.redeemGovTokens;\n    if (redeemGovTokensChanged || actionChanged){\n      this.checkButtonDisabled();\n    }\n\n    const depositCurveChanged = prevState.depositCurveEnabled !== this.state.depositCurveEnabled;\n    const metaTransactionsChanged = prevState.metaTransactionsEnabled !== this.state.metaTransactionsEnabled;\n    if (metaTransactionsChanged || depositCurveChanged){\n      const tokenApproved = await this.checkTokenApproved();\n      this.setState({\n        tokenApproved\n      });\n    }\n\n    const inputChanged = prevState.inputValue[this.state.action] !== this.state.inputValue[this.state.action];\n    if (inputChanged){\n      this.calculateCurveSlippage();\n    }\n  }\n\n  async calculateCurveSlippage(){\n    const amount = this.state.inputValue[this.state.action] ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]) : null;\n\n    if (!amount || amount.lte(0)){\n      return false;\n    }\n\n    const curvePoolContractInfo = this.functionsUtil.getGlobalConfig(['curve','poolContract']);\n\n    const normalizedAmount = this.functionsUtil.normalizeTokenAmount(amount,curvePoolContractInfo.decimals);\n    const newState = {};\n\n    switch (this.state.action){\n      case 'deposit':\n        newState.depositCurveBalance = amount;\n        newState.depositCurveSlippage = await this.functionsUtil.getCurveSlippage(this.props.tokenConfig.idle.token,normalizedAmount,true);\n      break;\n      case 'redeem':\n        // newState.redeemBalance = amount;\n        // newState.withdrawSlippage = await this.functionsUtil.getCurveSlippage(this.props.tokenConfig.idle.token,normalizedAmount,true);\n      break;\n      default:\n      break;\n    }\n    // console.log('calculateCurveSlippage',newState);\n\n    this.setState(newState);\n  }\n\n  approveContract = async (callbackApprove,callbackReceiptApprove) => {\n    if (this.state.depositCurveEnabled){\n      const curveDepositContract = this.functionsUtil.getGlobalConfig(['curve','depositContract']);\n      this.functionsUtil.enableERC20(this.props.selectedToken,curveDepositContract.address,callbackApprove,callbackReceiptApprove);\n    } else {\n      const proxyContract = this.state.actionProxyContract[this.state.action];\n      if (proxyContract && this.state.metaTransactionsEnabled && this.props.biconomy){\n        this.functionsUtil.enableERC20(this.props.selectedToken,proxyContract.address,callbackApprove,callbackReceiptApprove);\n      } else {\n        this.functionsUtil.enableERC20(this.props.selectedToken,this.props.tokenConfig.idle.address,callbackApprove,callbackReceiptApprove);\n      }\n    }\n  }\n\n  checkTokenApproved = async () => {\n\n    let tokenApproved = false;\n\n    if (this.state.depositCurveEnabled){\n      const curveDepositContract = this.functionsUtil.getGlobalConfig(['curve','depositContract']);\n      tokenApproved = await this.functionsUtil.checkTokenApproved(this.props.selectedToken,curveDepositContract.address,this.props.account);\n    } else {\n      const proxyContract = this.state.actionProxyContract[this.state.action];\n      if (proxyContract && this.state.metaTransactionsEnabled && this.props.biconomy){\n        tokenApproved = await this.functionsUtil.checkTokenApproved(this.props.selectedToken,proxyContract.address,this.props.account);\n      } else {\n        tokenApproved = await this.functionsUtil.checkTokenApproved(this.props.selectedToken,this.props.tokenConfig.idle.address,this.props.account);\n      }\n    }\n    return tokenApproved;\n  }\n\n  approveToken = async () => {\n\n    // Check if the token is already approved\n    const tokenApproved = await this.checkTokenApproved();\n\n    if (tokenApproved){\n      return this.setState((prevState) => ({\n        tokenApproved,\n        processing: {\n          ...prevState.processing,\n          approve:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    }\n\n    const callbackApprove = (tx,error)=>{\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Approve',\n        eventAction: this.props.selectedToken,\n        eventLabel: tx.status,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        tokenApproved: (tx.status === 'success'), // True\n        processing: {\n          ...prevState.processing,\n          approve:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptApprove = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          approve:{\n            ...prevState.processing['approve'],\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.approveContract(callbackApprove,callbackReceiptApprove);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        approve:{\n          txHash:null,\n          loading:true\n        }\n      }\n    }));\n  }\n\n  loadTokenInfo = async () => {\n\n    if (this.state.componentMounted){\n      this.setState({\n        componentMounted:false\n      });\n    }\n\n    const curveConfig = this.functionsUtil.getGlobalConfig(['curve']);\n    const curveTokenConfig = this.functionsUtil.getGlobalConfig(['curve','availableTokens',this.props.tokenConfig.idle.token]);\n    const curveTokenEnabled = curveConfig.enabled && curveTokenConfig && curveTokenConfig.enabled;\n\n    const [\n      tokenApproved,\n      contractPaused,\n      curveSwapContract,\n      curveDepositContract,\n      unlentBalance,\n      {migrationEnabled},\n      curveTokenBalance,\n    ] = await Promise.all([\n      this.checkTokenApproved(),\n      this.functionsUtil.checkContractPaused(),\n      this.functionsUtil.getCurveSwapContract(),\n      this.functionsUtil.getCurveDepositContract(),\n      this.functionsUtil.getUnlentBalance(this.props.tokenConfig),\n      this.functionsUtil.checkMigration(this.props.tokenConfig,this.props.account),\n      curveTokenEnabled ? this.functionsUtil.getCurveTokenBalance(this.props.account) : null\n    ]);\n\n    const canDeposit = this.props.tokenBalance && this.functionsUtil.BNify(this.props.tokenBalance).gt(0);\n    const canRedeem = this.props.idleTokenBalance && this.functionsUtil.BNify(this.props.idleTokenBalance).gt(0);\n\n    const canDepositCurve = curveTokenEnabled && canDeposit;\n    const depositCurveEnabled = canDepositCurve;\n\n    const canRedeemCurve = curveTokenEnabled && curveTokenBalance && curveTokenBalance.gt(0);\n    const redeemCurveEnabled = canRedeemCurve;\n\n    const newState = {...this.state};\n\n    // Check curve deposit enabled\n    if (newState.depositCurveEnabled && !curveTokenEnabled){\n      newState.depositCurveEnabled = false;\n    }\n    \n    newState.canRedeem = canRedeem;\n    newState.canDeposit = canDeposit;\n    newState.unlentBalance = unlentBalance;\n    newState.tokenApproved = tokenApproved;\n    newState.contractPaused = contractPaused;\n    newState.canRedeemCurve = canRedeemCurve;\n    newState.canDepositCurve = canDepositCurve;\n    newState.migrationEnabled = migrationEnabled;\n    newState.curveTokenBalance = curveTokenBalance;\n    newState.curveSwapContract = curveSwapContract;\n    newState.redeemCurveEnabled = redeemCurveEnabled;\n    newState.depositCurveEnabled = depositCurveEnabled;\n    newState.curveDepositContract = curveDepositContract;\n\n    newState.txError = {\n      redeem:false,\n      deposit:false\n    };\n    newState.processing = {\n      redeem:{\n        txHash:null,\n        loading:false\n      },\n      deposit:{\n        txHash:null,\n        loading:false\n      },\n      approve:{\n        txHash:null,\n        loading:false\n      },\n      boost:{\n        txHash:null,\n        loading:false\n      }\n    };\n    newState.inputValue = {\n      boost:null,\n      redeem:null,\n      deposit:null\n    };\n    newState.fastBalanceSelector = {\n      boost:null,\n      redeem:null,\n      deposit:null\n    };\n\n    newState.componentMounted = true;\n\n    this.setState(newState,() => {\n      this.checkAction();\n      this.loadAPY();\n    });\n  }\n\n  cancelTransaction = async () => {\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        [this.state.action]:{\n          txHash:null,\n          loading:false\n        }\n      }\n    }));\n  }\n\n  executeAction = async () => {\n\n    let contractSendResult = null;\n    const redeemGovTokens = this.state.redeemGovTokens;\n    const inputValue = this.state.inputValue[this.state.action];\n    const selectedPercentage = this.getFastBalanceSelector();\n\n    let loading = true;\n\n    switch (this.state.action){\n      case 'deposit':\n\n        if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)){\n          return false;\n        }\n\n        if (!this.state.tokenApproved){\n          return this.approveToken();\n        }\n\n        if (localStorage){\n          this.functionsUtil.setLocalStorage('redirectToFundsAfterLogged',0);\n        }\n\n        this.setState({\n          lendingProcessing: this.props.account,\n          lendAmount: '',\n          genericError: '',\n        });\n\n        const callbackDeposit = (tx,error) => {\n\n          if (!tx && error){\n            tx = {\n              status:'error'\n            };\n          }\n\n          const txError = tx.status === 'error';\n          const txSucceeded = tx.status === 'success';\n\n          const eventData = {\n            eventCategory: 'Deposit',\n            eventAction: this.props.selectedToken,\n            eventLabel: tx.status,\n            eventValue: parseInt(inputValue)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (txSucceeded){\n            this.setState((prevState) => ({\n              activeModal:'share',\n              inputValue:{\n                ...prevState.inputValue,\n                [this.state.action]: this.functionsUtil.BNify(0)\n              }\n            }));\n          } else if (this.state.metaTransactionsEnabled && txError){\n            this.setState({\n              txError:{\n                [this.state.action]: true\n              }\n            });\n          }\n        };\n\n        const callbackReceiptDeposit = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                ...prevState.processing[this.state.action],\n                txHash\n              }\n            }\n          }));\n        };\n\n        const curveConfig = this.functionsUtil.getGlobalConfig(['curve']);\n        const curveTokenEnabled = curveConfig.enabled && this.functionsUtil.getGlobalConfig(['curve','availableTokens',this.props.tokenConfig.idle.token,'enabled']);\n\n        // Handle Curve Deposit\n        if (curveTokenEnabled && this.state.depositCurveEnabled){\n\n          const curvePoolContractInfo = this.functionsUtil.getGlobalConfig(['curve','poolContract']);\n          const tokensToDeposit = this.functionsUtil.normalizeTokenAmount(inputValue,curvePoolContractInfo.decimals);\n\n          const amounts = await this.functionsUtil.getCurveAmounts(this.props.tokenConfig.idle.token,tokensToDeposit);\n          let minMintAmount = await this.functionsUtil.getCurveTokenAmount(amounts);\n          if (this.state.maxSlippage){\n            minMintAmount = this.functionsUtil.BNify(minMintAmount);\n            minMintAmount = minMintAmount.minus(minMintAmount.times(this.functionsUtil.BNify(this.state.maxSlippage).div(100)));\n            minMintAmount = this.functionsUtil.integerValue(minMintAmount);\n          }\n          \n          const depositParams = [amounts,minMintAmount];\n\n          contractSendResult = await this.functionsUtil.contractMethodSendWrapper(this.state.curveDepositContract.name, 'add_liquidity', depositParams, callbackDeposit, callbackReceiptDeposit);\n        } else {\n          const tokensToDeposit = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n\n          const depositMetaTransactionsEnabled = this.functionsUtil.getGlobalConfig(['contract','methods','deposit','metaTransactionsEnabled']);\n          // const gasLimitDeposit = this.functionsUtil.BNify(1000000);\n          let depositParams = [];\n\n          // Use Proxy Contract if enabled\n          const mintProxyContractInfo = this.state.actionProxyContract[this.state.action];\n          if (depositMetaTransactionsEnabled && mintProxyContractInfo && this.props.biconomy && this.state.metaTransactionsEnabled){\n            const mintProxyContract = this.state.actionProxyContract[this.state.action].contract;\n            depositParams = [tokensToDeposit, this.props.tokenConfig.idle.address];\n            // console.log('mintProxyContract',mintProxyContractInfo.function,depositParams);\n            if (this.state.metaTransactionsEnabled){\n              const functionSignature = mintProxyContract.methods[mintProxyContractInfo.function](...depositParams).encodeABI();\n              contractSendResult = await this.functionsUtil.sendBiconomyTxWithPersonalSign(mintProxyContractInfo.name, functionSignature, callbackDeposit, callbackReceiptDeposit);\n            } else {\n              contractSendResult = await this.functionsUtil.contractMethodSendWrapper(mintProxyContractInfo.name, mintProxyContractInfo.function, depositParams, callbackDeposit, callbackReceiptDeposit);\n            }\n          // Use main contract if no proxy contract exists\n          } else {\n            let _skipMint = !this.state.directMint && this.functionsUtil.getGlobalConfig(['contract','methods','deposit','skipMint']);\n            _skipMint = typeof this.props.tokenConfig.skipMintForDeposit !== 'undefined' ? this.props.tokenConfig.skipMintForDeposit : _skipMint;\n\n            // Mint if someone mint over X amount\n            if (_skipMint){\n              let [\n                maxUnlentPerc,\n                totalAUM\n              ] = await Promise.all([\n                this.functionsUtil.genericContractCall('idleDAIYield', 'maxUnlentPerc'),\n                this.functionsUtil.loadAssetField('pool',this.props.selectedToken,this.props.tokenConfig,this.props.account)\n              ]);\n\n              if (maxUnlentPerc && totalAUM){\n                const depositPerc = inputValue.div(totalAUM).times(100);\n                maxUnlentPerc = this.functionsUtil.BNify(maxUnlentPerc).div(1e3);\n                if (depositPerc.gte(maxUnlentPerc.times(2))){\n                  _skipMint = false;\n                }\n                // console.log(maxUnlentPerc.toFixed(5),inputValue.toFixed(5),totalAUM.toFixed(5),depositPerc.toFixed(5),depositPerc.gte(maxUnlentPerc.times(2)),_skipMint);\n              }\n            }\n\n            depositParams = [tokensToDeposit, _skipMint, '0x0000000000000000000000000000000000000000'];\n            contractSendResult = await this.functionsUtil.contractMethodSendWrapper(this.props.tokenConfig.idle.token, 'mintIdleToken', depositParams, callbackDeposit, callbackReceiptDeposit);\n          }\n        }\n      break;\n      case 'redeem':\n\n        if (redeemGovTokens){\n          const callbackRedeem = (tx,error) => {\n            const txSucceeded = tx.status === 'success';\n\n            // Send Google Analytics event\n            const eventData = {\n              eventCategory: `Redeem_gov`,\n              eventAction: this.props.selectedToken,\n              eventLabel: tx.status,\n              eventValue: 0\n            };\n\n            if (error){\n              eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n            }\n\n            // Send Google Analytics event\n            if (error || eventData.status !== 'error'){\n              this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n            }\n\n            this.setState((prevState) => ({\n              processing: {\n                ...prevState.processing,\n                [this.state.action]:{\n                  txHash:null,\n                  loading:false\n                }\n              }\n            }));\n\n            if (txSucceeded){\n              this.setState((prevState) => ({\n                inputValue:{\n                  ...prevState.inputValue,\n                  [this.state.action]: this.functionsUtil.BNify(0)\n                }\n              }));\n            }\n          };\n\n          const callbackReceiptRedeem = (tx) => {\n            const txHash = tx.transactionHash;\n            this.setState((prevState) => ({\n              processing: {\n                ...prevState.processing,\n                [this.state.action]:{\n                  ...prevState.processing[this.state.action],\n                  txHash\n                }\n              }\n            }));\n          };\n\n          contractSendResult = await this.functionsUtil.contractMethodSendWrapper(this.props.tokenConfig.idle.token, 'redeemIdleToken', [0], callbackRedeem, callbackReceiptRedeem);\n          \n        } else {\n\n          if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)){\n            return false;\n          }\n\n          const txData = {\n            value:this.functionsUtil.BNify(inputValue)\n          };\n\n          let idleTokenToRedeem = null;\n          if (selectedPercentage){\n            idleTokenToRedeem = this.functionsUtil.BNify(this.props.idleTokenBalance).times(selectedPercentage);\n          } else {\n            const idleTokenPrice = await this.functionsUtil.genericContractCall(this.props.tokenConfig.idle.token, 'tokenPrice');\n            idleTokenToRedeem = this.functionsUtil.BNify(this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals)).div(idleTokenPrice);\n          }\n\n          // Normalize number\n          idleTokenToRedeem = this.functionsUtil.normalizeTokenAmount(idleTokenToRedeem,18);\n\n          if (!idleTokenToRedeem){\n            return false;\n          }\n\n          const callbackRedeem = (tx,error) => {\n            const txSucceeded = tx.status === 'success';\n\n            // Send Google Analytics event\n            const eventData = {\n              eventCategory: `Redeem_partial`,\n              eventAction: this.props.selectedToken,\n              eventLabel: tx.status,\n              eventValue: parseInt(inputValue)\n            };\n\n            if (error){\n              eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n            }\n\n            // Send Google Analytics event\n            if (error || eventData.status !== 'error'){\n              this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n            }\n\n            this.setState((prevState) => ({\n              processing: {\n                ...prevState.processing,\n                [this.state.action]:{\n                  txHash:null,\n                  loading:false\n                }\n              }\n            }));\n\n            if (txSucceeded){\n              this.setState((prevState) => ({\n                inputValue:{\n                  ...prevState.inputValue,\n                  [this.state.action]: this.functionsUtil.BNify(0)\n                }\n              }));\n            }\n          };\n\n          const callbackReceiptRedeem = (tx) => {\n            const txHash = tx.transactionHash;\n            this.setState((prevState) => ({\n              processing: {\n                ...prevState.processing,\n                [this.state.action]:{\n                  ...prevState.processing[this.state.action],\n                  txHash\n                }\n              }\n            }));\n          };\n\n          let redeemParams = [idleTokenToRedeem];\n          // console.log(redeemParams,idleTokenToRedeem);\n\n          contractSendResult = await this.functionsUtil.contractMethodSendWrapper(this.props.tokenConfig.idle.token, 'redeemIdleToken', redeemParams, callbackRedeem, callbackReceiptRedeem, txData);\n        }\n      break;\n      default: // Reset loading if not handled action\n        loading = false;\n      break;\n    }\n\n    if (contractSendResult !== false){\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          [this.state.action]:{\n            ...prevState.processing[this.state.action],\n            loading\n          }\n        }\n      }));\n    }\n  }\n\n  setMaxSlippage = (maxSlippage) => {\n    this.setState({\n      maxSlippage\n    });\n  }\n\n  showMaxSlippage = () => {\n    this.setState({\n      showMaxSlippage:true\n    });\n  }\n\n  checkAction = () => {\n    let action = this.state.action;\n\n    switch(action){\n      case 'redeem':\n        if (!this.state.canRedeem){\n          action = 'deposit';\n        }\n      break;\n      default:\n      break;\n    }\n\n    if (action !== this.state.action){\n      this.setState({\n        action\n      },() => {\n        this.checkButtonDisabled();\n      });\n    } else {\n      this.checkButtonDisabled();\n    }\n  }\n\n  checkButtonDisabled = (amount=null) => {\n\n    if (!this.state.action){\n      return false;\n    }\n\n    if (!amount){\n      amount = this.state.inputValue[this.state.action];\n    }\n\n    let buttonDisabled = false;\n\n    switch (this.state.action){\n      case 'deposit':\n        buttonDisabled = buttonDisabled || (amount && amount.gt(this.props.tokenBalance));\n      break;\n      case 'redeem':\n        buttonDisabled = !this.state.canRedeemCurve && !this.state.redeemGovTokens && ( buttonDisabled || (amount && amount.gt(this.props.redeemableBalance)) );\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  setInputValue = () => {\n    if (!this.state.action || this.state.fastBalanceSelector[this.state.action] === null){\n      return false;\n    }\n\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n    let amount = null;\n\n    switch(this.state.action){\n      case 'deposit':\n        amount = this.props.tokenBalance ? this.functionsUtil.BNify(this.props.tokenBalance).times(selectedPercentage) : null;\n      break;\n      case 'redeem':\n        amount = this.props.redeemableBalance ? this.functionsUtil.BNify(this.props.redeemableBalance).times(selectedPercentage) : null;\n      break;\n      default:\n      break;\n    }\n\n    this.checkButtonDisabled(amount);\n\n    this.setState((prevState) => ({\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  getFastBalanceSelector = () => {\n    if (this.state.fastBalanceSelector[this.state.action] === null){\n      return false;\n    }\n\n    return this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n  }\n\n  setFastBalanceSelector = (percentage) => {\n    if (!this.state.action){\n      return false;\n    }\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: percentage\n      }\n    }));\n  }\n\n  changeInputValue = (e) => {\n    if (!this.state.action){\n      return false;\n    }\n    const amount = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n    this.checkButtonDisabled(amount);\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: null\n      },\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  setAction = (action) => {\n    switch (action.toLowerCase()){\n      case 'deposit':\n        \n      break;\n      case 'redeem':\n        if (!this.state.canRedeem && !this.state.canRedeemCurve){\n          action = null;\n        }\n      break;\n      default:\n        action = null;\n      break;\n    }\n\n    if (action !== null){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  render(){\n\n    if (!this.props.selectedToken || !this.props.tokenConfig){\n      return null;\n    }\n\n    const govTokensDisabled = this.props.tokenConfig.govTokensDisabled;\n    const govTokensEnabled = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'govTokensEnabled']);\n    const skipMintForDepositEnabled = typeof this.props.tokenConfig.skipMintForDeposit !== 'undefined' ? this.props.tokenConfig.skipMintForDeposit : true;\n    const skipMintCheckboxEnabled = this.functionsUtil.getGlobalConfig(['contract','methods','deposit','skipMintCheckboxEnabled']) && skipMintForDepositEnabled;\n\n    const redeemGovTokenEnabled = this.functionsUtil.getGlobalConfig(['contract','methods','redeemGovTokens','enabled']) && !govTokensDisabled && govTokensEnabled;\n    const redeemGovTokens = redeemGovTokenEnabled && this.state.redeemGovTokens && this.state.action === 'redeem';\n\n    const metaTransactionsAvailable = this.props.biconomy && this.state.actionProxyContract[this.state.action];\n    const useMetaTx = metaTransactionsAvailable && this.state.metaTransactionsEnabled;\n    const totalBalance = this.state.action === 'deposit' ? this.props.tokenBalance : this.props.redeemableBalance;\n    const migrateText = this.state.migrationEnabled && this.props.tokenConfig.migration.message !== undefined ? this.props.tokenConfig.migration.message : null;\n\n    const curveConfig = this.functionsUtil.getGlobalConfig(['curve']);\n    const curveTokenEnabled = curveConfig.enabled && this.functionsUtil.getGlobalConfig(['curve','availableTokens',this.props.tokenConfig.idle.token,'enabled']);\n\n    const depositCurve = curveTokenEnabled && this.state.depositCurveEnabled && this.state.action === 'deposit';\n\n    const showDepositOptions = this.state.action === 'deposit' && !this.state.contractPaused && (curveTokenEnabled || this.state.tokenApproved);\n\n    const canPerformAction = /*!depositCurve && !this.state.redeemCurveEnabled && */((this.state.action === 'deposit' && this.state.canDeposit) || (this.state.action === 'redeem' && this.state.canRedeem) || redeemGovTokens);\n    const showDepositCurve = showDepositOptions && curveTokenEnabled && this.state.componentMounted && (!this.state.migrationEnabled || this.state.skipMigration) && this.state.canDepositCurve && this.state.action === 'deposit';\n    const showRedeemCurve = curveTokenEnabled && this.state.componentMounted && (!this.state.migrationEnabled || this.state.skipMigration) && this.state.canRedeemCurve && this.state.action === 'redeem';\n\n    const showActionFlow = !redeemGovTokens && canPerformAction;\n    const showBuyFlow = this.state.componentMounted && (!showDepositCurve || this.state.showBuyFlow) && !this.state.depositCurveEnabled && this.state.tokenApproved && !this.state.contractPaused && (!this.state.migrationEnabled || this.state.skipMigration) && this.state.action === 'deposit' && !this.state.canDeposit;\n    const showRedeemFlow = this.state.canRedeem && (!this.state.redeemCurveEnabled || this.state.showRedeemFlow);\n\n    const showCurveSlippage = depositCurve && this.state.depositCurveSlippage && this.state.depositCurveBalance && !this.state.buttonDisabled;\n\n    const showRebalanceOption = showDepositOptions && this.state.canDeposit && skipMintCheckboxEnabled && this.state.action === 'deposit';\n    const showAdvancedDepositOptions = showDepositCurve || showRebalanceOption;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select your asset:\n            </Text>\n            <AssetSelector\n              {...this.props}\n            />\n          </Box>\n          <Migrate\n            {...this.props}\n            migrateTextBefore={migrateText}\n            migrateText={migrateText !== null ? '' : null}\n            toggleSkipMigration={this.toggleSkipMigration.bind(this)}\n          >\n            {\n              !this.props.account ? (\n                <ConnectBox\n                  {...this.props}\n                />\n              ) :\n              this.state.componentMounted ? (\n                this.state.action ? (\n                  <Box width={1}>\n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              this.setAction('deposit');\n                            }\n                          }}\n                          isInteractive={true}\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              this.setAction('redeem');\n                            }\n                          }}\n                          isInteractive={true}\n                          isActive={ this.state.action === 'redeem' }\n                          isDisabled={ !this.state.canRedeem && !this.state.canRedeemCurve }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Redeem\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    {\n                      showAdvancedDepositOptions ? (\n                        <DashboardCard\n                          cardProps={{\n                            pt:2,\n                            px:2,\n                            mt:3,\n                            display:'flex',\n                            alignItems:'center',\n                            flexDirection:'column',\n                            justifyContent:'center',\n                            pb:this.state.showAdvancedOptions ? 3 : 2,\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <Link\n                              ml={1}\n                              mainColor={'primary'}\n                              hoverColor={'primary'}\n                              onClick={this.toggleShowAdvancedOptions}\n                            >\n                              { this.state.showAdvancedOptions ? 'Hide' : 'Show' } advanced options\n                            </Link>\n                            <Icon\n                              size={'1.8em'}\n                              color={'cellText'}\n                              name={this.state.showAdvancedOptions ? 'ArrowDropUp' : 'ArrowDropDown'}\n                            />\n                          </Flex>\n                          {\n                            this.state.showAdvancedOptions &&\n                              <Flex\n                                mt={1}\n                                flexDirection={'column'}\n                              >\n                                {\n                                  showDepositCurve && \n                                    <Flex\n                                      alignItems={'center'}\n                                      justifyContent={'row'}\n                                    >\n                                      <Checkbox\n                                        required={false}\n                                        disabled={this.state.directMint}\n                                        label={`Deposit in the Curve Pool`}\n                                        checked={this.state.depositCurveEnabled}\n                                        onChange={ e => this.toggleDepositCurve(e.target.checked) }\n                                      />\n                                      <Link\n                                        mainColor={'primary'}\n                                        hoverColor={'primary'}\n                                        onClick={ e => this.props.openTooltipModal('How Curve works',this.functionsUtil.getGlobalConfig(['messages','curveInstructions'])) }\n                                      >\n                                        (read more)\n                                      </Link>\n                                    </Flex>\n                                }\n                                {\n                                  showRebalanceOption && \n                                    <Flex\n                                      alignItems={'center'}\n                                      justifyContent={'row'}\n                                    >\n                                      <Checkbox\n                                        required={false}\n                                        label={`Rebalance the pool`}\n                                        checked={this.state.directMint}\n                                        disabled={this.state.depositCurveEnabled}\n                                        onChange={ e => this.toggleSkipMint(e.target.checked) }\n                                      />\n                                      <Tooltip\n                                        placement={'bottom'}\n                                        message={this.functionsUtil.getGlobalConfig(['messages','directMint'])}\n                                      >\n                                        <Icon\n                                          size={'1em'}\n                                          color={'cellTitle'}\n                                          name={\"InfoOutline\"}\n                                        />\n                                      </Tooltip>\n                                    </Flex>\n                                }\n                              </Flex>\n                          }\n                        </DashboardCard>\n                      ) : (\n                        <Flex\n                          width={1}\n                          flexDirection={'column'}\n                        >\n                          {\n                            showDepositCurve && (\n                              <Flex\n                                width={1}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <DashboardCard\n                                  isRainbow={true}\n                                  cardProps={{\n                                    py:3,\n                                    px:2,\n                                    mt:3,\n                                    display:'flex',\n                                    alignItems:'center',\n                                    flexDirection:'column',\n                                    justifyContent:'center',\n                                  }}\n                                >\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                    justifyContent={'center'}\n                                  >\n                                    <Image\n                                      height={'1.8em'}\n                                      src={curveConfig.params.image}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      px={2}\n                                      fontSize={1}\n                                      color={'dark-gray'}\n                                      textAlign={'center'}\n                                    >\n                                      Deposit your tokens in the Curve Pool and boost your APY up to {this.state.curveAPY ? this.state.curveAPY.toFixed(2) : '-'}%.\n                                      <Link\n                                        ml={1}\n                                        mainColor={'primary'}\n                                        hoverColor={'primary'}\n                                        onClick={ e => this.props.openTooltipModal('How Curve works',this.functionsUtil.getGlobalConfig(['messages','curveInstructions'])) }\n                                      >\n                                        Read More\n                                      </Link>\n                                    </Text>\n                                    <Checkbox\n                                      mt={2}\n                                      required={false}\n                                      label={`Deposit in Curve`}\n                                      checked={this.state.depositCurveEnabled}\n                                      onChange={ e => this.toggleDepositCurve(e.target.checked) }\n                                    />\n                                  </Flex>\n                                </DashboardCard>\n                                {\n                                  (!this.state.showBuyFlow && !this.state.depositCurveEnabled && !this.state.canDeposit) &&\n                                    <Link\n                                      textAlign={'center'}\n                                      hoverColor={'primary'}\n                                      onClick={ e => this.setShowBuyFlow(true) }\n                                    >\n                                      I just want to deposit more {this.props.selectedToken}\n                                    </Link>\n                                }\n                              </Flex>\n                            )\n                          }\n                          {\n                            showRebalanceOption && (\n                              <DashboardCard\n                                cardProps={{\n                                  py:3,\n                                  px:2,\n                                  mt:3,\n                                  display:'flex',\n                                  alignItems:'center',\n                                  flexDirection:'column',\n                                  justifyContent:'center',\n                                }}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <Icon\n                                    size={'1.8em'}\n                                    color={'cellText'}\n                                    name={'InfoOutline'}\n                                  />\n                                  <Text\n                                    mt={1}\n                                    px={2}\n                                    fontSize={1}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    By checking this flag you can rebalance the pool and help all users gain an additional APR\n                                  </Text>\n                                </Flex>\n                                <Checkbox\n                                  mt={2}\n                                  required={false}\n                                  label={`Rebalance the pool`}\n                                  checked={this.state.directMint}\n                                  onChange={ e => this.toggleSkipMint(e.target.checked) }\n                                />\n                              </DashboardCard>\n                            )\n                          }\n                        </Flex>\n                      )\n                    }\n                    {\n                      (metaTransactionsAvailable && !showBuyFlow && !this.state.contractPaused) && \n                      <DashboardCard\n                        cardProps={{\n                          py:3,\n                          px:2,\n                          my:3,\n                          display:'flex',\n                          alignItems:'center',\n                          flexDirection:'column',\n                          justifyContent:'center',\n                        }}\n                      >\n                        {\n                          this.state.metaTransactionsEnabled && this.state.txError[this.state.action] && this.state.actionProxyContract[this.state.action].approved ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Icon\n                                size={'1.8em'}\n                                name={'Warning'}\n                                color={'cellText'}\n                              />\n                              <Text\n                                mt={1}\n                                fontSize={1}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                Seems like you are having some trouble with Meta-Transactions... Disable them by unchecking the box below and try again!\n                              </Text>\n                            </Flex>\n                          ) : this.functionsUtil.getWalletProvider() === 'WalletConnect' && this.state.metaTransactionsEnabled ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Icon\n                                size={'1.8em'}\n                                name={'Warning'}\n                                color={'cellText'}\n                              />\n                              <Text\n                                mt={1}\n                                fontSize={1}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                Please disable Meta-Transactions if you are using Argent Wallet to avoid failed transactions!\n                              </Text>\n                            </Flex>\n                          ) : (\n                            <Text\n                              mt={1}\n                              fontSize={1}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              Meta-Transactions are {this.state.metaTransactionsEnabled ? 'available' : 'disabled'} for {this.state.action}s!<br />\n                              {\n                                this.state.metaTransactionsEnabled && !this.state.actionProxyContract[this.state.action].approved && `Please either enable the Smart-Contract to enjoy gas-less ${this.state.action} or just disable meta-tx.`\n                              }\n                            </Text>\n                          )\n                        }\n                        <Checkbox\n                          mt={2}\n                          required={false}\n                          checked={this.state.metaTransactionsEnabled}\n                          onChange={ e => this.toggleMetaTransactionsEnabled(e.target.checked) }\n                          label={`${this.functionsUtil.capitalize(this.state.action)} with Meta-Transaction`}\n                        />\n                      </DashboardCard>\n                    }\n                    {\n                      showRedeemCurve && this.state.canRedeem && (\n                        <Flex\n                          width={1}\n                          flexDirection={'column'}\n                          justifyContent={'center'}\n                        >\n                          <DashboardCard\n                            isRainbow={true}\n                            cardProps={{\n                              py:3,\n                              px:2,\n                              mt:3,\n                              display:'flex',\n                              alignItems:'center',\n                              flexDirection:'column',\n                              justifyContent:'center',\n                            }}\n                          >\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Image\n                                height={'1.8em'}\n                                src={curveConfig.params.image}\n                              />\n                              <Text\n                                mt={2}\n                                px={2}\n                                fontSize={1}\n                                color={'dark-gray'}\n                                textAlign={'center'}\n                              >\n                                Redeem your tokens from the Curve Pool.\n                                <Link\n                                  ml={1}\n                                  mainColor={'primary'}\n                                  hoverColor={'primary'}\n                                  onClick={ e => this.props.openTooltipModal('How Curve works',this.functionsUtil.getGlobalConfig(['messages','curveInstructions'])) }\n                                >\n                                  Read More\n                                </Link>\n                              </Text>\n                              {\n                                this.state.canRedeem &&\n                                  <Checkbox\n                                    mt={2}\n                                    required={false}\n                                    label={`Redeem from Curve`}\n                                    checked={this.state.redeemCurveEnabled}\n                                    onChange={ e => this.toggleRedeemCurve(e.target.checked) }\n                                  />\n                              }\n                            </Flex>\n                          </DashboardCard>\n                          {\n                            this.canRedeem &&\n                              <Link\n                                textAlign={'center'}\n                                hoverColor={'primary'}\n                                onClick={ e => this.setShowRedeemFlow(true) }\n                              >\n                                I just want to redeem my {this.props.selectedToken}\n                              </Link>\n                          }\n                        </Flex>\n                      )\n                    }\n                    {\n                      (this.state.action === 'redeem' && this.state.unlentBalance && showRedeemFlow) &&\n                        <DashboardCard\n                          cardProps={{\n                            py:2,\n                            px:2,\n                            mt:3,\n                            display:'flex',\n                            alignItems:'center',\n                            flexDirection:'column',\n                            justifyContent:'center',\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              size={'1.8em'}\n                              color={'cellText'}\n                              name={'LocalGasStation'}\n                            />\n                            <Text\n                              px={2}\n                              fontSize={1}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              Available balance for Cheap Redeem\n                            </Text>\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                color={'dark-gray'}\n                                textAlign={'center'}\n                                hoverColor={'copyColor'}\n                              >\n                                {this.state.unlentBalance.toFixed(4)} {this.props.selectedToken}\n                              </Text>\n                              <Tooltip\n                                placement={'top'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','cheapRedeem'])}\n                              >\n                                <Icon\n                                  ml={1}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                  name={\"InfoOutline\"}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                    }\n                    {\n                      (this.state.action === 'redeem' && redeemGovTokenEnabled && showRedeemFlow) && (\n                        <DashboardCard\n                          cardProps={{\n                            py:3,\n                            px:2,\n                            mt:3,\n                            display:'flex',\n                            alignItems:'center',\n                            flexDirection:'column',\n                            justifyContent:'center',\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              size={'1.8em'}\n                              color={'cellText'}\n                              name={'InfoOutline'}\n                            />\n                            <Text\n                              mt={1}\n                              px={2}\n                              fontSize={1}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              By redeeming your {this.props.selectedToken} you will automatically get also the proportional amount of governance tokens accrued{ this.props.govTokensBalance && this.props.govTokensBalance.gt(0) ? ` (~ $${this.props.govTokensBalance.toFixed(2)})` : null }.\n                            </Text>\n                          </Flex>\n                          <Checkbox\n                            mt={2}\n                            required={false}\n                            checked={this.state.redeemGovTokens}\n                            label={`Redeem governance tokens only`}\n                            onChange={ e => this.toggleRedeemGovTokens(e.target.checked) }\n                          />\n                        </DashboardCard>\n                      )\n                    }\n                    {\n                      (this.state.contractPaused && this.state.action === 'deposit') ? (\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'1.8em'}\n                              name={'Warning'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              Deposits for {this.props.selectedToken} are temporarily unavailable due to Smart-Contract maintenance. Redeems are always available.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      ) : (!this.state.tokenApproved && this.state.action === 'deposit') ? (\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:3\n                          }}\n                        >\n                          {\n                            this.state.processing['approve'] && this.state.processing['approve'].loading ? (\n                              <Flex\n                                flexDirection={'column'}\n                              >\n                                <TxProgressBar\n                                  web3={this.props.web3}\n                                  waitText={`Approve estimated in`}\n                                  endMessage={`Finalizing approve request...`}\n                                  hash={this.state.processing['approve'].txHash}\n                                  cancelTransaction={this.cancelTransaction.bind(this)}\n                                />\n                              </Flex>\n                            ) : (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  size={'1.8em'}\n                                  name={'LockOpen'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={3}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  {\n                                    this.state.depositCurveEnabled ? \n                                      `To ${this.functionsUtil.capitalize(this.state.action)} your ${this.props.selectedToken} in the Curve Pool you need to approve the Smart-Contract first.`\n                                    : useMetaTx ?\n                                      `To ${this.functionsUtil.capitalize(this.state.action)} your ${this.props.selectedToken} into Idle using Meta-Transaction you need to approve our Smart-Contract first.`\n                                    :\n                                      `To ${this.functionsUtil.capitalize(this.state.action)} your ${this.props.selectedToken} into Idle you need to approve our Smart-Contract first.`\n                                  }\n                                </Text>\n                                <RoundButton\n                                  buttonProps={{\n                                    mt:3,\n                                    width:[1,1/2]\n                                  }}\n                                  handleClick={this.approveToken.bind(this)}\n                                >\n                                  Approve\n                                </RoundButton>\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                      ) : (!showBuyFlow && canPerformAction) && (\n                        !this.state.processing[this.state.action].loading ? (\n                          <Flex\n                            mt={2}\n                            flexDirection={'column'}\n                          >\n                            {\n                              showActionFlow && (\n                                <Flex\n                                  mb={3}\n                                  width={1}\n                                  flexDirection={'column'}\n                                >\n                                  {\n                                    /*\n                                    showCurveSlippage &&\n                                      <DashboardCard\n                                        cardProps={{\n                                          p:3,\n                                          mb:2\n                                        }}\n                                      >\n                                        <Flex\n                                          alignItems={'center'}\n                                          flexDirection={'column'}\n                                        >\n                                          <Icon\n                                            size={'1.8em'}\n                                            color={'cellText'}\n                                            name={'FileUpload'}\n                                          />\n                                          <Text\n                                            mt={2}\n                                            fontSize={2}\n                                            color={'cellText'}\n                                            textAlign={'center'}\n                                          >\n                                            You can deposit {this.state.depositCurveBalance.toFixed(4)} {this.props.selectedToken} in the Curve Pool{ this.state.depositCurveSlippage ? (this.state.depositCurveSlippage.gt(0) ? ` with ${this.state.depositCurveSlippage.times(100).toFixed(2)}% of slippage` : ` with ${Math.abs(parseFloat(this.state.depositCurveSlippage.times(100).toFixed(2)))}% of bonus`) : '' }.\n                                          </Text>\n                                        </Flex>\n                                      </DashboardCard>\n                                    */\n                                  }\n                                  {\n                                    (totalBalance || this.props.tokenFeesPercentage) && (\n                                      <Box\n                                        mb={1}\n                                        width={1}\n                                      >\n                                        {\n                                          this.state.showMaxSlippage && showCurveSlippage && (\n                                            <Box\n                                              mb={2}\n                                              width={1}\n                                            >\n                                              <Flex\n                                                alignItems={'center'}\n                                                flexDirection={'row'}\n                                              >\n                                                <Text>\n                                                  Choose max slippage:\n                                                </Text>\n                                                <Tooltip\n                                                  placement={'top'}\n                                                  message={`Max additional slippage on top of the one shown below`}\n                                                >\n                                                  <Icon\n                                                    ml={1}\n                                                    size={'1em'}\n                                                    color={'cellTitle'}\n                                                    name={\"InfoOutline\"}\n                                                  />\n                                                </Tooltip>\n                                              </Flex>\n                                              <Flex\n                                                mt={2}\n                                                alignItems={'center'}\n                                                flexDirection={'row'}\n                                                justifyContent={'space-between'}\n                                              >\n                                                {\n                                                  [0.2,0.5,1,5].map( slippage => (\n                                                    <FastBalanceSelector\n                                                      cardProps={{\n                                                        p:1\n                                                      }}\n                                                      textProps={{\n                                                        fontSize:1\n                                                      }}\n                                                      percentage={slippage}\n                                                      key={`selector_${slippage}`}\n                                                      onMouseDown={()=>this.setMaxSlippage(slippage)}\n                                                      isActive={this.state.maxSlippage === parseFloat(slippage)}\n                                                    />\n                                                  ))\n                                                }\n                                              </Flex>\n                                            </Box>\n                                          )\n                                        }\n                                        <Flex\n                                          width={1}\n                                          alignItems={'center'}\n                                          flexDirection={'row'}\n                                          justifyContent={'space-between'}\n                                        >\n                                        {\n                                          showCurveSlippage ? (\n                                            <Flex\n                                              width={1}\n                                              maxWidth={'50%'}\n                                              alignItems={'center'}\n                                              flexDirection={'row'}\n                                            >\n                                              <Text\n                                                fontSize={1}\n                                                fontWeight={3}\n                                                textAlign={'right'}\n                                                style={{\n                                                  whiteSpace:'nowrap'\n                                                }}\n                                                color={ this.state.depositCurveSlippage.gt(0) ? this.props.theme.colors.transactions.status.failed : this.props.theme.colors.transactions.status.completed }\n                                              >\n                                                {\n                                                  parseFloat(this.state.depositCurveSlippage.times(100).toFixed(2)) === 0 ?\n                                                    'No Slippage'\n                                                  : `${ this.state.depositCurveSlippage.gt(0) ? 'Slippage: ' : 'Bonus: ' } ${this.state.depositCurveSlippage.times(100).abs().toFixed(2)}%`\n                                                }\n                                              </Text>\n                                              <Tooltip\n                                                placement={'top'}\n                                                message={this.functionsUtil.getGlobalConfig(['messages','curveBonusSlippage'])}\n                                              >\n                                                <Icon\n                                                  ml={1}\n                                                  size={'1em'}\n                                                  color={'cellTitle'}\n                                                  name={\"InfoOutline\"}\n                                                />\n                                              </Tooltip>\n                                              <Link\n                                                ml={1}\n                                                color={'copyColor'}\n                                                hoverColor={'primary'}\n                                                onClick={this.showMaxSlippage}\n                                              >\n                                                change\n                                              </Link>\n                                            </Flex>\n                                          ) : this.props.tokenFeesPercentage && (\n                                            <Flex\n                                              alignItems={'center'}\n                                              flexDirection={'row'}\n                                            >\n                                              <Text\n                                                fontSize={1}\n                                                fontWeight={3}\n                                                color={'dark-gray'}\n                                                textAlign={'right'}\n                                                hoverColor={'copyColor'}\n                                              >\n                                                Performance fee: {this.props.tokenFeesPercentage.times(100).toFixed(2)}%\n                                              </Text>\n                                              <Tooltip\n                                                placement={'top'}\n                                                message={this.functionsUtil.getGlobalConfig(['messages','performanceFee'])}\n                                              >\n                                                <Icon\n                                                  ml={1}\n                                                  size={'1em'}\n                                                  color={'cellTitle'}\n                                                  name={\"InfoOutline\"}\n                                                />\n                                              </Tooltip>\n                                            </Flex>\n                                          )\n                                        }\n                                        {\n                                          totalBalance && (\n                                            <Link\n                                              fontSize={1}\n                                              fontWeight={3}\n                                              color={'dark-gray'}\n                                              textAlign={'right'}\n                                              hoverColor={'copyColor'}\n                                              onClick={ (e) => this.setFastBalanceSelector(100) }\n                                            >\n                                              {totalBalance.toFixed(6)} {this.props.selectedToken}\n                                            </Link>\n                                          )\n                                        }\n                                        </Flex>\n                                      </Box>\n                                    )\n                                  }\n                                  <Input\n                                    min={0}\n                                    type={\"number\"}\n                                    required={true}\n                                    height={'3.4em'}\n                                    borderRadius={2}\n                                    fontWeight={500}\n                                    boxShadow={'none !important'}\n                                    placeholder={`Insert amount`}\n                                    onChange={this.changeInputValue.bind(this)}\n                                    border={`1px solid ${theme.colors.divider}`}\n                                    value={this.state.inputValue[this.state.action] !== null ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toFixed() : ''}\n                                  />\n                                  <Flex\n                                    mt={2}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'space-between'}\n                                  >\n                                    {\n                                      [25,50,75,100].map( percentage => (\n                                        <FastBalanceSelector\n                                          percentage={percentage}\n                                          key={`selector_${percentage}`}\n                                          onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                                          isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(percentage)}\n                                        />\n                                      ))\n                                    }\n                                  </Flex>\n                                </Flex>\n                              )\n                            }\n                            {\n                              canPerformAction && \n                                <Flex\n                                  justifyContent={'center'}\n                                  mt={ redeemGovTokens ? 2 : 0 }\n                                >\n                                  <RoundButton\n                                    buttonProps={{\n                                      width:'auto',\n                                      minWidth:[1,1/2],\n                                      style:{\n                                        textTransform:'capitalize'\n                                      },\n                                      disabled:this.state.buttonDisabled\n                                    }}\n                                    handleClick={this.state.buttonDisabled ? null : this.executeAction.bind(this) }\n                                  >\n                                    {this.state.action}{ redeemGovTokens ? ' Gov Tokens' : '' /*(depositCurve ? ' in Curve' : '')*/ }\n                                  </RoundButton>\n                                </Flex>\n                            }\n                          </Flex>\n                        ) : (\n                          <Flex\n                            mt={4}\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar\n                              web3={this.props.web3}\n                              cancelTransaction={this.cancelTransaction.bind(this)}\n                              hash={this.state.processing[this.state.action].txHash}\n                              endMessage={`Finalizing ${this.state.action} request...`}\n                              waitText={`${this.functionsUtil.capitalize(this.state.action)} estimated in`}\n                            />\n                          </Flex>\n                        )\n                      )\n                    }\n                  </Box>\n                ) : null\n              ) : (\n                <Flex\n                  mt={4}\n                  flexDirection={'column'}\n                >\n                  <FlexLoader\n                    flexProps={{\n                      flexDirection:'row'\n                    }}\n                    loaderProps={{\n                      size:'30px'\n                    }}\n                    textProps={{\n                      ml:2\n                    }}\n                    text={'Loading asset info...'}\n                  />\n                </Flex>\n              )\n            }\n          </Migrate>\n        </Flex>\n        {\n          /*\n          showDepositCurve && this.state.depositCurveEnabled ? (\n            <CurveDeposit\n              {...this.props}\n            />\n          ) :\n          */\n          showRedeemCurve && this.state.redeemCurveEnabled && (\n            <Box\n              mt={3}\n              width={1}\n            >\n              <CurveRedeem\n                {...this.props}\n              />\n            </Box>\n          )\n        }\n        {\n          showBuyFlow &&\n            <Flex\n              mt={3}\n              width={[1,0.5]}\n              alignItems={'stretch'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <BuyModal\n                {...this.props}\n                showInline={true}\n                availableMethods={[]}\n                buyToken={this.props.selectedToken}\n              />\n            </Flex>\n        }\n\n        <ShareModal\n          confettiEnabled={true}\n          icon={`images/medal.svg`}\n          title={`Congratulations!`}\n          account={this.props.account}\n          closeModal={this.resetModal}\n          tokenName={this.props.selectedToken}\n          isOpen={this.state.activeModal === 'share'}\n          text={`You have successfully deposited in Idle!<br />Enjoy <strong>${this.state.tokenAPY}% APY</strong> on your <strong>${this.props.selectedToken}</strong>!`}\n          tweet={`I'm earning ${this.state.tokenAPY}% APY on my ${this.props.selectedToken} with @idlefinance! Go to ${this.functionsUtil.getGlobalConfig(['baseURL'])} and start earning now from your idle tokens!`}\n        />\n\n      </Flex>\n    );\n  }\n}\n\nexport default DepositRedeem;\n","import React, { Component } from 'react';\nimport { Flex, Text, Icon } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass CardIconButton extends Component {\n  render() {\n    const cardProps = Object.assign({\n      py:1,\n      width:'auto',\n      px:['12px',3],\n    },this.props.cardProps);\n\n    return (\n       <DashboardCard\n         cardProps={cardProps}\n         isInteractive={true}\n         handleClick={this.props.handleClick}\n       >\n         <Flex\n           my={1}\n           alignItems={'center'}\n           flexDirection={'row'}\n           justifyContent={'center'}\n         >\n           <Flex\n             mr={2}\n             p={['4px','7px']}\n             borderRadius={'50%'}\n             alignItems={'center'}\n             justifyContent={'center'}\n             backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n           >\n             <Icon\n               align={'center'}\n               color={'redeem'}\n               name={this.props.icon}\n               size={ this.props.isMobile ? '1.2em' : '1.4em' }\n             />\n           </Flex>\n           <Text\n             fontWeight={3}\n             fontSize={[1,3]}\n           >\n             {this.props.text}\n           </Text>\n         </Flex>\n       </DashboardCard>\n    );\n  }\n}\n\nexport default CardIconButton;","import theme from '../theme';\nimport { Bar } from '@nivo/bar';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Text, Input, Icon, Tooltip } from \"rimble-ui\";\n\nclass EstimatedEarnings extends Component {\n\n  state = {\n    tokenApy:null,\n    chartData:null,\n    chartProps:null,\n    inputValue:1000,\n    maxInputValue:999999999999999\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadChart();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged){\n      this.loadChart();\n    }\n  }\n\n  async getTokenApy(){\n    const tokenApy = this.state.tokenApy || await this.functionsUtil.getTokenApy(this.props.tokenConfig);\n    if (this.state.tokenApy !== tokenApy){\n      this.setState({\n        tokenApy\n      });\n    }\n    return tokenApy;\n  }\n\n  async loadChart(){\n\n    const tokenApy = await this.getTokenApy();\n\n    const amount = this.functionsUtil.BNify(this.state.inputValue);\n    const earningsYear = amount.times(tokenApy.div(100));\n\n    const amountMonth = parseFloat(earningsYear.div(12));\n    const amount3Months = parseFloat(earningsYear.div(4));\n    const amount6Months = parseFloat(earningsYear.div(2));\n    const amountYear = parseFloat(earningsYear.div(1));\n\n    const chartData = [\n      {\n        perc:1/12,\n        label:'MONTH',\n        value:amountMonth,\n        month:amountMonth,\n        color:this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.selectedToken,'color','rgb']).join(','),\n        monthColor:'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.selectedToken,'color','hsl']).join(',')+')',\n      },\n      {\n        perc:3/12,\n        label:'3 MONTHS',\n        value:amount3Months,\n        month3:amount3Months,\n        color:this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.selectedToken,'color','rgb']).join(','),\n        month3Color:'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.selectedToken,'color','hsl']).join(',')+')',\n      },\n      {\n        perc:6/12,\n        label:'6 MONTHS',\n        value:amount6Months,\n        month6:amount6Months,\n        color:this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.selectedToken,'color','rgb']).join(','),\n        month6Color:'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.selectedToken,'color','hsl']).join(',')+')',\n      },\n      {\n        perc:1,\n        label:'YEAR',\n        year:amountYear,\n        value:amountYear,\n        color:this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.selectedToken,'color','rgb']).join(','),\n        yearColor:'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.selectedToken,'color','hsl']).join(',')+')',\n      }\n    ];\n\n    let labelTextColorModifiers = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.selectedToken,'chart','labelTextColorModifiers']);\n\n    const maxGridLines = 4;\n    const gridYStep = amountYear/maxGridLines;\n    const gridYValues = [0];\n    for (let i=1;i<=maxGridLines;i++){\n      const gridYValue = i*gridYStep;\n      gridYValues.push(gridYValue);\n    }\n\n    const chartProps = {\n      padding: 0.2,\n      animate: false,\n      indexBy: 'label',\n      // enableLabel: false,\n      labelSkipWidth: 16,\n      labelSkipHeight: 16,\n      keys: ['month','month3','month6','year'],\n      colors: ({ id, data }) => data[`${id}Color`],\n      label: d => this.functionsUtil.abbreviateNumber(d.value,2,4)+' '+this.props.selectedToken,\n      labelTextColor: labelTextColorModifiers ? { from: 'color', modifiers: [ labelTextColorModifiers ] } : null,\n      isInteractive:false,\n      minValue:0,\n      gridYValues,\n      // maxValue:amountYear,\n      axisLeft:{\n        format: v => this.functionsUtil.abbreviateNumber(v,1,3),\n        tickValues:gridYValues,\n        orient: 'left',\n        tickSize: 0,\n        tickPadding: 5,\n        tickRotation: 0,\n        legend: '',\n        legendPosition: 'middle'\n      },\n      axisBottom:{\n        legend: '',\n        tickSize:0,\n        tickPadding: 15,\n        orient: 'bottom',\n      },\n      theme:{\n        labels:{\n          text:{\n            fontSize:15,\n            fontWeight:600,\n            fill:theme.colors.counter,\n            fontFamily: theme.fonts.sansSerif\n          }\n        },\n        axis: {\n          ticks: {\n            text: {\n              fontSize:14,\n              fontWeight:600,\n              fill:theme.colors.legend,\n              fontFamily: theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: '#dbdbdb', strokeDasharray: '9 5'\n          }\n        },\n      },\n      margin: this.props.isMobile ? { top: 0, right: 0, bottom: 30, left: 0 } : { top: 10, right: 0, bottom: 50, left: 65 }\n    }\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  changeInputValue(e){\n    let inputValue = e.target.value.length && !isNaN(e.target.value) ? Math.min(this.state.maxInputValue,parseFloat(e.target.value)) : 0;\n    inputValue = this.functionsUtil.BNify(inputValue);\n    this.setState({\n      inputValue\n    });\n  }\n\n  render() {\n\n    if (!this.props.selectedToken || !this.props.tokenConfig){\n      return null;\n    }\n\n    const idleTokenEnabled = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','enabled']);\n    const showAPYDisclaimer = idleTokenEnabled && this.functionsUtil.getGlobalConfig(['govTokens','IDLE','showAPR']);\n\n    return (\n      <DashboardCard\n        cardProps={{\n          p:[3,4]\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={['column','row']}\n        >\n          <Flex\n            width={[1,0.3]}\n            flexDirection={'column'}\n            justifyContent={'flex-start'}\n          >\n            <Flex\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <AssetField\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'icon',\n                  props:{\n                    mb:2,\n                    height:'2.5em'\n                  }\n                }}\n              />\n              <Text\n                fontSize={2}\n                color={'cellText'}\n                textAlign={'center'}\n              >\n                Set the amount and see your estimated earnings on time based on the current APY: { this.state.tokenApy ? `${this.state.tokenApy.toFixed(2)}%` : null}\n                {\n                  showAPYDisclaimer && \n                    <Flex\n                      style={{\n                        display:'inline-flex',\n                        verticalAlign:'middle'\n                      }}\n                    >\n                      <Tooltip\n                        placement={'top'}\n                        message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                      >\n                        <Icon\n                          ml={1}\n                          name={\"Info\"}\n                          size={'1em'}\n                          color={'cellTitle'}\n                        />\n                      </Tooltip>\n                    </Flex>\n                }\n              </Text>\n            </Flex>\n            <Flex\n              mt={3}\n              flexDirection={'column'}\n            >\n              <Input\n                min={0}\n                max={this.state.maxInputValue}\n                type={\"number\"}\n                required={true}\n                height={['3em','3.4em']}\n                borderRadius={2}\n                fontWeight={500}\n                textAlign={'center'}\n                boxShadow={'none !important'}\n                onChange={this.changeInputValue.bind(this)}\n                border={`1px solid ${theme.colors.divider}`}\n                placeholder={`Insert ${this.props.selectedToken.toUpperCase()} amount`}\n                value={this.state.inputValue && !isNaN(this.state.inputValue) ? this.state.inputValue : ''}\n              />\n            </Flex>\n            <Flex\n              mt={3}\n              justifyContent={'center'}\n            >\n              <RoundButton\n                buttonProps={{\n                  width:[1,1/2],\n                }}\n                handleClick={this.loadChart.bind(this)}\n              >\n                CALCULATE\n              </RoundButton>\n            </Flex>\n          </Flex>\n          <Flex\n            mt={[3,0]}\n            width={[1,0.7]}\n            id={'estimated-earnings-chart'}\n          >\n            {\n              this.props.isMobile ? (\n                <Flex\n                  width={1}\n                  flexDirection={'column'}\n                >\n                  {\n                    this.state.chartData !== null && this.state.chartData.map((v,index) => (\n                      <Flex\n                        py={2}\n                        my={2}\n                        width={1}\n                        flexDirection={'row'}\n                        key={`earnings_${index}`}\n                      >\n                        <Flex\n                          width={0.35}\n                          alignItems={'center'}\n                          justifyContent={'flex-start'}\n                        >\n                          <Text\n                            fontSize={1}\n                            fontWeight={3}\n                            color={'legend'}\n                          >\n                            {v.label}\n                          </Text>\n                        </Flex>\n                        <Flex\n                          width={0.65}\n                          position={'relative'}\n                          alignItems={'center'}\n                          minHeight={['20px','35px']}\n                          justifyContent={'center'}\n                        >\n                          <Flex\n                            zIndex={1}\n                            position={'relative'}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Text\n                              fontSize={1}\n                              fontWeight={3}\n                              color={'counter'}\n                            >\n                              {this.functionsUtil.abbreviateNumber(v.value,2,4)} {this.props.selectedToken}\n                            </Text>\n                          </Flex>\n                          <Flex\n                            right={0}\n                            width={v.perc}\n                            position={'absolute'}\n                            height={['20px','35px']}\n                            borderRadius={['20px 0 0 20px','35px 0 0 35px']}\n                            style={{background:`linear-gradient(-90deg, rgba(${v.color},0) 0%, rgba(${v.color},1) 100%)`}}\n                          ></Flex>\n                        </Flex>\n                      </Flex>\n                    ))\n                  }\n                </Flex>\n              ) : (\n                <GenericChart\n                  type={Bar}\n                  height={250}\n                  showLoader={true}\n                  {...this.state.chartProps}\n                  data={this.state.chartData}\n                  parentId={'estimated-earnings-chart'}\n                />\n              )\n            }\n          </Flex>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default EstimatedEarnings;","import Title from '../Title/Title';\nimport { Box, Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport AssetsList from '../AssetsList/AssetsList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport FundsOverview from '../FundsOverview/FundsOverview';\nimport DepositRedeem from '../DepositRedeem/DepositRedeem';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport EstimatedEarnings from '../EstimatedEarnings/EstimatedEarnings';\n\nclass AssetPage extends Component {\n\n  state = {\n    tokenFees:{},\n    tokenBalance:{},\n    tokenApproved:{},\n    activeModal:null,\n    govTokensBalance:{},\n    idleTokenBalance:{},\n    redeemableBalance:{},\n    govTokensDisabled:{},\n    availableGovTokens:{},\n    tokenFeesPercentage:{},\n    componentMounted:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  setActiveModal = activeModal => {\n    this.setState({\n      activeModal\n    });\n  }\n\n  async loadTokensInfo(){\n    if (this.props.account){\n      const newState = {...this.state};\n      await this.functionsUtil.asyncForEach(Object.keys(this.props.availableTokens),async (token) => {\n        const tokenConfig = this.props.availableTokens[token];\n        const govTokenAvailableTokens = {};\n        govTokenAvailableTokens[token] = tokenConfig;\n\n        const [\n          tokenFeesPercentage,\n          tokenBalance,\n          tokenFees,\n          idleTokenPrice,\n          idleTokenBalance,\n          tokenApproved,\n          govTokensBalance\n        ] = await Promise.all([\n          this.functionsUtil.getTokenFees(tokenConfig),\n          this.functionsUtil.getTokenBalance(token,this.props.account),\n          this.functionsUtil.getUserTokenFees(tokenConfig,this.props.account),\n          this.functionsUtil.genericContractCall(tokenConfig.idle.token, 'tokenPrice'),\n          this.functionsUtil.getTokenBalance(tokenConfig.idle.token,this.props.account),\n          this.functionsUtil.checkTokenApproved(token,tokenConfig.idle.address,this.props.account),\n          this.functionsUtil.getGovTokensUserTotalBalance(this.props.account,govTokenAvailableTokens,'DAI')\n        ]);\n\n        newState.tokenFees[token] = tokenFees;\n        newState.tokenBalance[token] = tokenBalance;\n        newState.tokenApproved[token] = tokenApproved;\n        newState.idleTokenBalance[token] = idleTokenBalance;\n        newState.govTokensBalance[token] = govTokensBalance;\n        newState.tokenFeesPercentage[token] = tokenFeesPercentage;\n        newState.govTokensDisabled[token] = tokenConfig.govTokensDisabled;\n        newState.redeemableBalance[token] = idleTokenBalance ? this.functionsUtil.fixTokenDecimals(idleTokenBalance.times(idleTokenPrice),tokenConfig.decimals) : this.functionsUtil.BNify(0);\n      });\n\n      newState.availableGovTokens = this.functionsUtil.getTokenGovTokens(this.props.tokenConfig);\n\n      newState.componentMounted = true;\n      this.setState(newState);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokensInfo();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n    const accountChanged = prevProps.account !== this.props.account;\n    if (accountChanged || transactionsChanged){\n      this.loadTokensInfo();\n    }\n  }\n\n  render() {\n\n    const userHasFunds = this.props.account && this.state.idleTokenBalance[this.props.selectedToken] && this.functionsUtil.BNify(this.state.idleTokenBalance[this.props.selectedToken]).gt(0);\n\n    return (\n      <Box\n        width={1}\n      >\n        <Flex\n          width={1}\n          mb={[3,4]}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'flex-start'}\n        >\n          <Flex\n            width={0.5}\n          >\n            <Breadcrumb\n              isMobile={this.props.isMobile}\n              path={[this.props.selectedToken]}\n              handleClick={ e => this.props.goToSection(this.props.selectedStrategy) }\n              text={this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'title'])}\n            />\n          </Flex>\n          <Flex\n            width={0.5}\n            justifyContent={'flex-end'}\n          >\n            <CardIconButton\n              icon={'Add'}\n              {...this.props}\n              text={'Add funds'}\n              handleClick={ e => this.setActiveModal('buy') }\n            />\n          </Flex>\n        </Flex>\n        <Title\n          mb={[3,4]}\n        >\n          Deposit / Redeem\n        </Title>\n        <Flex\n          width={1}\n        >\n          <DepositRedeem\n            {...this.props}\n            tokenFees={this.state.tokenFees[this.props.selectedToken]}\n            tokenBalance={this.state.tokenBalance[this.props.selectedToken]}\n            tokenApproved={this.state.tokenApproved[this.props.selectedToken]}\n            govTokensBalance={this.state.govTokensBalance[this.props.selectedToken]}\n            idleTokenBalance={this.state.idleTokenBalance[this.props.selectedToken]}\n            redeemableBalance={this.state.redeemableBalance[this.props.selectedToken]}\n            tokenFeesPercentage={this.state.tokenFeesPercentage[this.props.selectedToken]}\n          />\n        </Flex>\n        {\n          userHasFunds &&\n            <Flex\n              mb={[0,4]}\n              width={1}\n              flexDirection={'column'}\n              id={'funds-overview-container'}\n            >\n              <Title my={[3,4]}>Funds Overview</Title>\n              <FundsOverview\n                {...this.props}\n                tokenFees={this.state.tokenFees[this.props.selectedToken]}\n              />\n            </Flex>\n        }\n        {\n          userHasFunds && this.props.account && !this.state.govTokensDisabled[this.props.selectedToken] && Object.keys(this.state.availableGovTokens).length>0 && \n            <Flex\n              width={1}\n              id={\"yield-farming\"}\n              flexDirection={'column'}\n            >\n              <Title my={[3,4]}>Yield Farming</Title>\n              <AssetsList\n                enabledTokens={Object.keys(this.state.availableGovTokens)}\n                cols={[\n                  {\n                    title:'TOKEN',\n                    props:{\n                      width:[0.30,0.15]\n                    },\n                    fields:[\n                      {\n                        name:'icon',\n                        props:{\n                          mr:2,\n                          height:['1.4em','2.3em']\n                        }\n                      },\n                      {\n                        name:'tokenName'\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'BALANCE',\n                    props:{\n                      width:[0.33, 0.25],\n                    },\n                    fields:[\n                      {\n                        name:'tokenBalance',\n                        props:{\n                          decimals: this.props.isMobile ? 6 : 8\n                        }\n                      }\n                    ]\n                  },\n                  {\n                    title:'REDEEMABLE',\n                    desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                    props:{\n                      width:[0.35,0.30],\n                      justifyContent:['center','flex-start']\n                    },\n                    fields:[\n                      {\n                        name:'redeemableBalance',\n                        props:{\n                          decimals: this.props.isMobile ? 6 : 8\n                        }\n                      },\n                    ]\n                  },\n                  {\n                    title:'DISTRIBUTION',\n                    desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                    props:{\n                      width:[0.35,0.30],\n                    },\n                    fields:[\n                      {\n                        name:'userDistributionSpeed',\n                        props:{\n                          decimals:6\n                        }\n                      }\n                    ]\n                  },\n                  /*\n                  {\n                    title:'APR',\n                    desc:this.functionsUtil.getGlobalConfig(['messages','govTokenApr']),\n                    props:{\n                      width:[0.2,0.17],\n                    },\n                    fields:[\n                      {\n                        name:'apr',\n                      }\n                    ]\n                  },\n                  {\n                    title:'TOKEN PRICE',\n                    desc:this.functionsUtil.getGlobalConfig(['messages','tokenPrice']),\n                    mobile:false,\n                    props:{\n                      width: 0.17,\n                    },\n                    parentProps:{\n                      width:1,\n                      pr:[2,4]\n                    },\n                    fields:[\n                      {\n                        name:'tokenPrice',\n                        props:{\n                          unit:'$',\n                          unitPos:'left',\n                          unitProps:{\n                            mr:1,\n                            fontWeight:3,\n                            fontSize:[0,2],\n                            color:'cellText'\n                          }\n                        }\n                      }\n                    ]\n                  },\n                  */\n                ]}\n                {...this.props}\n                availableTokens={this.state.availableGovTokens}\n              />\n            </Flex>\n        }\n        {\n        this.props.account && \n          <Flex\n            mb={[3,4]}\n            width={1}\n            flexDirection={'column'}\n            id={'estimated-earnings-container'}\n          >\n            <Title my={[3,4]}>Estimated earnings</Title>\n            <EstimatedEarnings\n              {...this.props}\n            />\n          </Flex>\n        }\n        {\n        this.props.account && \n          <Flex\n            mb={[3,4]}\n            width={1}\n            flexDirection={'column'}\n            id={'transactions-container'}\n          >\n            <Title my={[3,4]}>Transactions</Title>\n            <TransactionsList\n              {...this.props}\n              enabledTokens={[this.props.selectedToken]}\n              cols={[\n                {\n                  title: this.props.isMobile ? '' : 'HASH',\n                  props:{\n                    width:[0.15,0.24]\n                  },\n                  fields:[\n                    {\n                      name:'icon',\n                      props:{\n                        mr:[0,2]\n                      }\n                    },\n                    {\n                      name:'hash',\n                      mobile:false\n                    }\n                  ]\n                },\n                {\n                  title:'ACTION',\n                  mobile:false,\n                  props:{\n                    width:0.15,\n                  },\n                  fields:[\n                    {\n                      name:'action'\n                    }\n                  ]\n                },\n                {\n                  title:'DATE',\n                  props:{\n                    width:[0.32,0.23],\n                  },\n                  fields:[\n                    {\n                      name:'date'\n                    }\n                  ]\n                },\n                {\n                  title:'STATUS',\n                  props:{\n                    width:[0.18,0.22],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      name:'statusIcon',\n                      props:{\n                        mr:[0,2]\n                      }\n                    },\n                    {\n                      mobile:false,\n                      name:'status'\n                    }\n                  ]\n                },\n                {\n                  title:'AMOUNT',\n                  props:{\n                    width:0.19,\n                  },\n                  fields:[\n                    {\n                      name:'amount'\n                    },\n                  ]\n                },\n                {\n                  title:'ASSET',\n                  props:{\n                    width:[0.15,0.20],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      name:'tokenIcon',\n                      props:{\n                        mr:[0,2],\n                        height:['1.4em','1.6em']\n                      }\n                    },\n                    {\n                      mobile:false,\n                      name:'tokenName'\n                    },\n                  ]\n                },\n              ]}\n            />\n          </Flex>\n        }\n\n        <BuyModal\n          {...this.props}\n          closeModal={this.resetModal}\n          buyToken={this.props.selectedToken}\n          isOpen={this.state.activeModal === 'buy'}\n        />\n      </Box>\n    );\n  }\n}\n\nexport default AssetPage;","import Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Box, Text, Icon, Tooltip } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\n\nclass CurveDeposit extends Component {\n\n  state = {\n    maxSlippage:0.2,\n    tokenConfig:null,\n    depositSlippage:null,\n    redeemableBalance:null,\n    curveTokensBalance:null,\n    migrationSucceeded:false,\n    migrationContractApproved:false,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.initToken();\n  }\n\n  setMaxSlippage = (maxSlippage) => {\n    this.setState({\n      maxSlippage\n    });\n  }\n\n  async getMigrationParams(toMigrate){\n    const migrationParams = [];\n    const curveTokenConfig = this.functionsUtil.getGlobalConfig(['curve','availableTokens',this.props.tokenConfig.idle.token]);\n\n    if (!curveTokenConfig){\n      return false;\n    }\n    \n    const migrationContractParams = curveTokenConfig.migrationParams;\n    if (migrationContractParams.n_coins){\n      const amounts = await this.functionsUtil.getCurveAmounts(this.state.tokenConfig.idle.token,toMigrate,true);\n      let minMintAmount = await this.functionsUtil.getCurveTokenAmount(amounts);\n      if (this.state.maxSlippage){\n        minMintAmount = this.functionsUtil.BNify(minMintAmount);\n        minMintAmount = minMintAmount.minus(minMintAmount.times(this.functionsUtil.BNify(this.state.maxSlippage).div(100)));\n        minMintAmount = this.functionsUtil.integerValue(minMintAmount);\n      }\n\n      migrationParams.push(amounts);\n      migrationParams.push(minMintAmount);\n\n      // console.log(this.state.tokenConfig.idle.token,toMigrate,migrationParams);\n    }\n\n    return migrationParams;\n  }\n\n  async initToken(){\n\n    let migrationContractApproved = false;\n\n    // Init and check migration contract\n    const migrationContract = await this.functionsUtil.getCurveSwapContract();\n    if (migrationContract){\n      // Check migration contract\n      migrationContractApproved = await this.functionsUtil.checkTokenApproved(this.props.tokenConfig.idle.token,migrationContract.address,this.props.account);\n    }\n\n    let redeemableBalance = this.functionsUtil.BNify(this.props.idleTokenBalance);\n    if (redeemableBalance){\n      const idleTokenPrice = await this.functionsUtil.getIdleTokenPrice(this.props.tokenConfig);\n      if (idleTokenPrice){\n        redeemableBalance = redeemableBalance.times(idleTokenPrice);\n      }\n    } else {\n      redeemableBalance = this.functionsUtil.BNify(0);\n    }\n\n    const normalizeIdleTokenBalance = this.functionsUtil.normalizeTokenAmount(redeemableBalance,18);\n    const depositSlippage = await this.functionsUtil.getCurveSlippage(this.props.tokenConfig.idle.token,normalizeIdleTokenBalance);\n\n    // Copy token config\n    const tokenConfig = Object.assign({},this.props.tokenConfig);\n\n    // Add migration info\n    const oldContract = {\n      abi:this.props.tokenConfig.idle.abi,\n      name:this.props.tokenConfig.idle.token,\n      token:this.props.tokenConfig.idle.token,\n      address:this.props.tokenConfig.idle.address\n    };\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n    };\n\n    this.setState({\n      tokenConfig,\n      depositSlippage,\n      redeemableBalance,\n      migrationContractApproved\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const idleTokenBalanceChanged = prevProps.idleTokenBalance !== this.props.idleTokenBalance;\n    if (accountChanged || idleTokenBalanceChanged){\n      await this.initToken();\n    }\n  }\n\n  approveCallback = () => {\n    this.initToken();\n  }\n\n  migrationCallback = () => {\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.tokenConfig){\n      return null;\n    }\n\n    const curveConfig = this.functionsUtil.getGlobalConfig(['curve']);\n    const hasCurveTokens = this.state.curveTokensBalance && this.state.curveTokensBalance.gt(0);\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n            {\n              this.props.idleTokenBalance && this.props.idleTokenBalance.gt(0) && (\n                <Box\n                  width={1}\n                >\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                      px:[2,4]\n                    }}\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    > \n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <Icon\n                          size={'1.5em'}\n                          name={ this.state.migrationContractApproved ? 'CheckBox' : 'LooksOne'}\n                          color={ this.state.migrationContractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                        />\n                        <Text\n                          ml={2}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'left'}\n                        >\n                          Approve the Curve contract\n                        </Text>\n                      </Flex>\n                      <Flex\n                        mt={2}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <Icon\n                          size={'1.5em'}\n                          name={ hasCurveTokens ? 'CheckBox' : 'LooksTwo'}\n                          color={ hasCurveTokens ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                        />\n                        <Text\n                          ml={2}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'left'}\n                        >\n                          Deposit your {this.props.tokenConfig.idle.token}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </DashboardCard>\n                  {\n                    this.state.migrationContractApproved && (\n                      <Box\n                        mt={2}\n                        width={1}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                        >\n                          <Text>\n                            Choose max slippage:\n                          </Text>\n                          <Tooltip\n                            placement={'top'}\n                            message={`Max additional slippage on top of the one shown below`}\n                          >\n                            <Icon\n                              ml={1}\n                              size={'1em'}\n                              color={'cellTitle'}\n                              name={\"InfoOutline\"}\n                            />\n                          </Tooltip>\n                        </Flex>\n                        <Flex\n                          mt={2}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                        >\n                          {\n                            [0.2,0.5,1,5].map( slippage => (\n                              <FastBalanceSelector\n                                cardProps={{\n                                  p:1\n                                }}\n                                textProps={{\n                                  fontSize:1\n                                }}\n                                percentage={slippage}\n                                key={`selector_${slippage}`}\n                                onMouseDown={()=>this.setMaxSlippage(slippage)}\n                                isActive={this.state.maxSlippage === parseFloat(slippage)}\n                              />\n                            ))\n                          }\n                        </Flex>\n                      </Box>\n                    )\n                  }\n                </Box>\n              )\n            }\n          {\n            this.state.tokenConfig && this.state.redeemableBalance ? (\n              <Box width={1}>\n                <Migrate\n                  {...this.props}\n                  showActions={false}\n                  getTokenPrice={false}\n                  migrationTextProps={{\n                    fontWeight:500\n                  }}\n                  migrationImage={{\n                    mb:1,\n                    height:'1.8em',\n                    src:curveConfig.params.image\n                  }}\n                  isMigrationTool={true}\n                  waitText={'Deposit estimated in'}\n                  tokenConfig={this.state.tokenConfig}\n                  callbackApprove={this.approveCallback.bind(this)}\n                  migrationParams={this.getMigrationParams.bind(this)}\n                  migrationCallback={this.migrationCallback.bind(this)}\n                  approveText={`To deposit your ${this.props.tokenConfig.idle.token} you need to approve Curve smart-contract first.`}\n                  migrationText={`You can deposit ${this.state.redeemableBalance.toFixed(4)} ${this.props.tokenConfig.idle.token} in the Curve Pool ${ this.state.depositSlippage ? (this.state.depositSlippage.gte(0) ? ` with <span style=\"color:${this.props.theme.colors.transactions.status.failed}\">${this.state.depositSlippage.times(100).toFixed(2)}% of slippage</span>` : ` with <span style=\"color:${this.props.theme.colors.transactions.status.completed}\">${Math.abs(parseFloat(this.state.depositSlippage.times(100).toFixed(2)))}% of bonus</span>`) : '' }.`}\n                >\n                  {\n                    !this.props.account ? (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          mt:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            size={'2.3em'}\n                            name={'Input'}\n                            color={'cellText'}\n                          />\n                          <Text\n                            mt={2}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Please connect with your wallet interact with Idle.\n                          </Text>\n                          <RoundButton\n                            buttonProps={{\n                              mt:2,\n                              width:[1,1/2]\n                            }}\n                            handleClick={this.props.connectAndValidateAccount}\n                          >\n                            Connect\n                          </RoundButton>\n                        </Flex>\n                      </DashboardCard>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        {\n                          this.state.migrationSucceeded ? (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                size={'2.3em'}\n                                name={'DoneAll'}\n                                color={this.props.theme.colors.transactions.status.completed}\n                              />\n                              <Text\n                                mt={2}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                You have successfully deposited your {this.props.tokenConfig.idle.token} in the Curve Pool!\n                              </Text>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                size={'2.3em'}\n                                name={'MoneyOff'}\n                                color={'cellText'}\n                              />\n                              <Text\n                                mt={2}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                You don't have any {this.props.tokenConfig.idle.token} in your wallet.\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    )\n                  }\n                </Migrate>\n              </Box>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CurveDeposit;","import theme from '../theme';\nimport { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquityCurve extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    if (mobileChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const curveTxs = await this.functionsUtil.getCurveTxs(this.props.account,0,'latest',enabledTokens);\n\n    const chartData = [];\n    let tokensBalance = [];\n    const processedTxs = {};\n    let firstTxTimestamp = null;\n    let totalBalance = this.functionsUtil.BNify(0);\n    const curvePoolContract = this.functionsUtil.getGlobalConfig(['curve','poolContract']);\n\n    if (curveTxs && curveTxs.length){\n\n      curveTxs.forEach((tx,index) => {\n\n        if (!processedTxs[tx.hash]){\n          processedTxs[tx.hash] = [];\n        }\n\n        if (processedTxs[tx.hash].includes(tx.action)){\n          return;\n        }\n        \n        firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n        const curveTokens = this.functionsUtil.BNify(tx.curveTokens);\n\n        switch (tx.action){\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            totalBalance = totalBalance.plus(curveTokens);\n          break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n          case 'CurveTransferOut':\n            totalBalance = totalBalance.minus(curveTokens);\n          break;\n          default:\n          break;\n        }\n\n        // Reset totalBalance if below zero\n        if (totalBalance.lt(0)){\n          totalBalance = this.functionsUtil.BNify(0);\n        }\n\n        const action = tx.action;\n        const balance = totalBalance;\n        const timeStamp = parseInt(tx.timeStamp);\n        const curveTokenPrice = this.functionsUtil.fixTokenDecimals(tx.curveTokenPrice,curvePoolContract.decimals);\n\n        // console.log(this.functionsUtil.strToMoment(timeStamp*1000).format('YYYY/MM/DD HH:mm'),tx.hash,tx.action,curveTokens.toString(),totalBalance.toString());\n\n        if (!curveTokenPrice.isNaN() && !curveTokenPrice.isNaN()){\n          tokensBalance.push({\n            action,\n            balance,\n            timeStamp,\n            curveTokens,\n            curveTokenPrice\n          });\n\n          processedTxs[tx.hash].push(action);\n        }\n      });\n    }\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    let aggregatedBalance = this.functionsUtil.BNify(0);\n    // let curveTokenBalance = this.functionsUtil.BNify(0);\n    const currTimestamp = parseInt(new Date().getTime()/1000)+86400;\n\n    const tokensData = await this.functionsUtil.getTokenApiData(Object.values(this.props.availableTokens)[0].address,false,firstTxTimestamp,null,false,3600);\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds){\n\n      let foundBalances = {};\n      let tokensBalances = {};\n      timeStamp = Math.min(currTimestamp,timeStamp);\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      // eslint-disable-next-line\n      const filteredTokenData = tokensData.filter(tx => (tx.timestamp>=prevTimestamp && tx.timestamp<=timeStamp));\n\n      // eslint-disable-next-line\n      let filteredBalances = tokensBalance.filter(tx => (tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n      \n      if (!filteredBalances.length){\n        if (prevBalances){\n          filteredBalances = prevBalances;\n          const lastFilteredTx = Object.values(filteredBalances).pop();\n          const currentBalance = parseFloat(lastFilteredTx.balance);\n\n          const lastTokenData = Object.values(filteredTokenData).pop();\n          let curveTokenPrice = null;\n          if (lastTokenData){\n            curveTokenPrice = await this.functionsUtil.getCurveTokenPrice(lastTokenData.blocknumber);\n          }\n\n          // Take idleToken price from API and calculate new balance\n          if (currentBalance>0 && timeStamp>firstTxTimestamp && curveTokenPrice){\n            // Set new curveTokenPrice\n            lastFilteredTx.curveTokenPrice = curveTokenPrice;\n            filteredBalances = [lastFilteredTx];\n          }\n        } else {\n          filteredBalances = [{\n            balance:this.functionsUtil.BNify(0),\n            curveTokenPrice:this.functionsUtil.BNify(0)\n          }];\n        }\n      }\n\n      const lastTx = Object.assign([],filteredBalances).pop();\n      let lastTxBalance = this.functionsUtil.BNify(lastTx.balance).times(lastTx.curveTokenPrice);\n\n      tokensBalances[curvePoolContract.token] = this.functionsUtil.BNify(lastTx.balance);\n      aggregatedBalance = lastTxBalance;\n\n      foundBalances = filteredBalances;\n\n      // console.log(momentDate.format('YYYY/MM/DD 00:00'),lastTx.balance.toString(),lastTx.curveTokenPrice.toString(),lastTxBalance.toString());\n\n      if (startDate === null || momentDate.isSameOrAfter(startDate)){\n        \n        if (momentDate.isAfter(new Date(),'day')){\n          momentDate = this.functionsUtil.strToMoment(new Date());\n        }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        const aggregatedBalanceParsed = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalanceParsed;\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n\n        // console.log(formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalanceParsed : Math.min(minChartValue,aggregatedBalanceParsed);\n        maxChartValue = maxChartValue === null ? aggregatedBalanceParsed : Math.max(maxChartValue,aggregatedBalanceParsed);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    // Add token Data\n    chartData.push({\n      id:'USD',\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens','USD','color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        format: '%b %d',\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        legendPosition: 'middle',\n        tickValues:'every '+daysFrequency+' days'\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      areaOpacity:0.1,\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:theme.colors.legend,\n              fontFamily: theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: '#dbdbdb', strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 50 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            typeof point.data.balances === 'object' && Object.keys(point.data.balances).length>0 &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const tokenInfo = this.functionsUtil.getGlobalConfig(['stats','tokens',token]);\n                const tokenName = tokenInfo.name ? tokenInfo.name : token;\n                const color = tokenInfo.color.hex;\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={tokenName}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquityCurve;","import theme from '../theme';\nimport Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport { Flex, Heading, Text } from \"rimble-ui\";\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport PortfolioEquityCurve from '../PortfolioEquityCurve/PortfolioEquityCurve';\n\nclass FundsOverviewCurve extends Component {\n\n  state = {\n    compAPR:null,\n    aggregatedValues:[],\n    govTokensUserBalance:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n\n    await this.functionsUtil.getCurveAvgBuyPrice();\n\n    // debugger;\n\n    await this.functionsUtil.getCurveAvgSlippage();\n\n    // debugger;\n    /*\n    const govTokenAvailableTokens = {};\n    govTokenAvailableTokens[this.props.selectedToken] = this.props.tokenConfig;\n\n    const [govTokensUserBalance,avgAPY,days] = await Promise.all([\n      this.functionsUtil.getGovTokensUserBalances(this.props.account,govTokenAvailableTokens,'DAI'),\n      this.functionsUtil.loadAssetField('avgAPY',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n      this.functionsUtil.loadAssetField('daysFirstDeposit',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n    ]);\n\n    const aggregatedValues = [\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Avg APY',\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (avgAPY ? avgAPY.toFixed(2)+'%' : '-') }}\n              />\n            </Flex>\n          )\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Current Allocation',\n          children:(\n            <Flex\n              width={1}\n              id={'allocationChart'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n            >\n              <AssetField\n                {...this.props}\n                showLoader={true}\n                fieldInfo={{\n                  name:'allocationChart'\n                }}\n                parentId={'allocationChart'}\n                token={this.props.selectedToken}\n                tokenConfig={this.props.tokenConfig}\n              />\n            </Flex>\n          ),\n          label:'',\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Days since first deposit',\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (days ? parseInt(days) : '-') }}\n              />\n            </Flex>\n          )\n        }\n      }\n    ];\n\n    let [tokenAllocation,compAPR] = await Promise.all([\n      this.functionsUtil.getTokenAllocation(this.props.tokenConfig,false,false),\n      this.functionsUtil.getCompAPR(this.props.selectedToken,this.props.tokenConfig)\n    ]);\n\n    if (tokenAllocation){\n      const compoundInfo = this.props.tokenConfig.protocols.find( p => (p.name === 'compound') );\n      if (compoundInfo){\n        if (tokenAllocation.protocolsAllocationsPerc[compoundInfo.address.toLowerCase()]){\n          const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[compoundInfo.address.toLowerCase()];\n          compAPR = compAPR.times(compoundAllocationPerc);\n        }\n      }\n    }\n\n    this.setState({\n      compAPR,\n      aggregatedValues,\n      govTokensUserBalance\n    });\n    */\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <Flex\n        width={1}\n        flexDirection={'column'}\n      >\n        {\n          this.state.aggregatedValues.length>0 && \n            <Flex\n              width={1}\n              mb={[0,3]}\n              mt={[2,0]}\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.aggregatedValues.map((v,i) => (\n                  <Flex\n                    {...v.flexProps}\n                    flexDirection={'column'}\n                    key={`aggregatedValue_${i}`}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        py:[2,3],\n                        mb:[3,0]\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        {\n                          v.props.children ? v.props.children : (\n                            <Text\n                              lineHeight={1}\n                              fontWeight={[3,4]}\n                              color={'copyColor'}\n                              fontFamily={'counter'}\n                              fontSize={[4,'1.7em']}\n                              dangerouslySetInnerHTML={{ __html: v.props.value }}\n                            >\n                            </Text>\n                          )\n                        }\n                        <Text\n                          mt={2}\n                          fontWeight={2}\n                          fontSize={[1,2]}\n                          color={'cellText'}\n                        >\n                          {v.props.title}\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                ))\n              }\n            </Flex>\n        }\n        <DashboardCard\n          cardProps={{\n            px:2,\n            py:3\n          }}\n        >\n          <Flex\n            width={1}\n            ml={[0,3]}\n            id={\"funds-overview\"}\n          >\n            <PortfolioEquityCurve\n              {...this.props}\n              chartHeight={350}\n              parentId={'funds-overview'}\n              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n            />\n          </Flex>\n          <Flex\n            width={1}\n            flexDirection={['column','row']}\n          >\n            <Flex\n              mb={[2,0]}\n              width={[1,1/5]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Deposited\n              </Title>\n              <AssetField\n                {...this.props}\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'amountLentCurve',\n                  props:{\n                    decimals:4,\n                    maxPrecision:8,\n                    fontWeight:300,\n                    fontSize:['1.8em','1.9em'],\n                    color:theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/5]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Redeemable\n              </Title>\n              <AssetField\n                {...this.props}\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'redeemableBalanceCounterCurve',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      color:theme.colors.counter,\n                      fontSize: this.props.isMobile ? '1.8em' : '1.9em',\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              <Flex\n                width={1}\n                mt={'-9px'}\n              >\n                <AssetField\n                  {...this.props}\n                  token={this.props.selectedToken}\n                  fieldInfo={{\n                    name:'earningsPercCurve',\n                    props:{\n                      fontSize:1,\n                      fontWeight:2,\n                      color:'cellText',\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    }\n                  }}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/5]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Earnings\n              </Title>\n              <AssetField\n                {...this.props}\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'earningsCounterCurve',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                      color:theme.colors.counter\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            {\n              /*\n              <Flex\n                mb={[2,0]}\n                width={[1,1/5]}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'flex-start'}\n              >\n                <Title\n                  mb={2}\n                  fontSize={[3,4]}\n                  component={Heading.h3}\n                >\n                  Fees\n                </Title>\n                <AssetField\n                  {...this.props}\n                  token={this.props.selectedToken}\n                  fieldInfo={{\n                    name:'feesCounter',\n                    props:{\n                      decimals:7,\n                      maxPrecision:8,\n                      style:{\n                        fontWeight:300,\n                        fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                        color:theme.colors.counter\n                      },\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    }\n                  }}\n                />\n              </Flex>\n              */\n            }\n            <Flex\n              mb={[2,0]}\n              width={[1,1/5]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Current APY\n              </Title>\n              <AssetField\n                {...this.props}\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'curveApy',\n                  props:{\n                    decimals:2,\n                    fontWeight:300,\n                    fontSize:['1.8em','1.9em'],\n                    color:theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/5]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Avg Slippage\n              </Title>\n              <AssetField\n                {...this.props}\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'curveAvgSlippage',\n                  props:{\n                    decimals:2,\n                    fontWeight:300,\n                    fontSize:['1.8em','1.9em'],\n                    color:theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n          </Flex>\n        </DashboardCard>\n      </Flex>\n    );\n  }\n}\n\nexport default FundsOverviewCurve;","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\nimport CurveRedeem from '../CurveRedeem/CurveRedeem';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport CurveDeposit from '../CurveDeposit/CurveDeposit';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TransactionField from '../TransactionField/TransactionField';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport FundsOverviewCurve from '../FundsOverviewCurve/FundsOverviewCurve';\n\nclass AssetPage extends Component {\n\n  state = {\n    inputValue:{},\n    processing:{},\n    tokenFees:null,\n    canRedeem:null,\n    canDeposit:null,\n    action:'deposit',\n    activeModal:null,\n    tokenConfig:null,\n    tokenBalance:null,\n    tokenApproved:null,\n    selectedToken:null,\n    availableTokens:{},\n    redeemBalance:null,\n    depositBalance:null,\n    buttonDisabled:false,\n    curveTokenPrice:null,\n    depositSlippage:null,\n    idleTokenBalance:null,\n    withdrawSlippage:null,\n    govTokensBalance:null,\n    curveZapContract:null,\n    curveTokenConfig:null,\n    curveTokensAmounts:{},\n    govTokensDisabled:null,\n    componentMounted:false,\n    curvePoolContract:null,\n    curveSwapContract:null,\n    curveTokenBalance:null,\n    redeemableBalance:null,\n    fastBalanceSelector:{},\n    curveAvailableTokens:{},\n    tokenFeesPercentage:null,\n    redeemUnevenAmounts:false,\n    curveDepositContract:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  setActiveModal = activeModal => {\n    this.setState({\n      activeModal\n    });\n  }\n\n  toggleUnevenAmounts = (redeemUnevenAmounts) => {\n    this.setState({\n      redeemUnevenAmounts\n    });\n  }\n\n  changeFromToken = (selectedToken) => {\n    const curveConfig = this.functionsUtil.getGlobalConfig(['curve']);\n    this.props.goToSection(`${curveConfig.params.route}/${selectedToken}`);\n  }\n\n  getSelectedToken(){\n    const curveAvailableTokens = this.functionsUtil.getGlobalConfig(['curve','availableTokens']);\n    return this.props.urlParams.param1 && curveAvailableTokens[this.props.urlParams.param1] ? this.props.urlParams.param1 : Object.keys(curveAvailableTokens)[0];\n  }\n\n  setSelectedToken = async (selectedToken) => {\n    const availableTokens = this.functionsUtil.getCurveAvailableTokens();\n    const curveAvailableTokens = this.functionsUtil.getGlobalConfig(['curve','availableTokens']);\n    const curveTokenConfig = curveAvailableTokens[selectedToken];\n    const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      availableTokens,\n      curveTokenConfig\n    });\n  }\n\n  loadTokensInfo = async () => {\n\n    const curveAvailableTokens = this.functionsUtil.getGlobalConfig(['curve','availableTokens']);\n    this.setState({\n      curveAvailableTokens\n    });\n\n    const selectedToken = this.getSelectedToken();\n    // Check if token is set the query params\n    if (selectedToken && selectedToken !== this.props.urlParams.param1){\n      this.changeFromToken(selectedToken);\n      return await this.setSelectedToken(selectedToken);\n    } else if (selectedToken !== this.state.selectedToken){\n      await this.setSelectedToken(selectedToken);\n    }\n\n    const newState = {...this.state};\n\n    const availableTokens = this.functionsUtil.getCurveAvailableTokens();\n\n    if (newState.selectedToken !== selectedToken){\n      newState.selectedToken = selectedToken;\n    }\n\n    const curveTokenConfig = curveAvailableTokens[selectedToken];\n    const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n\n    const [\n      curveZapContract,\n      curvePoolContract,\n      curveSwapContract,\n      curveDepositContract\n    ] = await Promise.all([\n      this.functionsUtil.getCurveZapContract(),\n      this.functionsUtil.getCurvePoolContract(),\n      this.functionsUtil.getCurveSwapContract(),\n      this.functionsUtil.getCurveDepositContract()\n    ]);\n\n    newState.curveZapContract = curveZapContract;\n    newState.curvePoolContract = curvePoolContract;\n    newState.curveSwapContract = curveSwapContract;\n    newState.curveDepositContract = curveDepositContract;\n\n    newState.availableTokens = availableTokens;\n\n\n    // console.log('curveTokenPrice',newState.curveTokenPrice.toFixed(6),'curveTokenBalance',newState.curveTokenBalance.toFixed(6),'redeemableBalance',newState.redeemableBalance.toFixed(20),'tokenBalance',newState.tokenBalance.toFixed(20));\n    const govTokenAvailableTokens = {};\n    govTokenAvailableTokens[selectedToken] = tokenConfig;\n\n    newState.tokenConfig = tokenConfig;\n    newState.curveTokenConfig = curveTokenConfig;\n\n    if (this.props.account){\n      [\n        newState.curveTokenPrice,\n        newState.curveTokenBalance,\n        newState.tokenFeesPercentage,\n        newState.tokenFees,\n        newState.tokenBalance,\n        newState.idleTokenBalance,\n        newState.tokenApproved,\n      ] = await Promise.all([\n        this.functionsUtil.getCurveTokenPrice(),\n        this.functionsUtil.getCurveTokenBalance(),\n        this.functionsUtil.getTokenFees(tokenConfig),\n        this.functionsUtil.getUserTokenFees(tokenConfig,this.props.account),\n        this.functionsUtil.getTokenBalance(selectedToken,this.props.account),\n        this.functionsUtil.getTokenBalance(tokenConfig.idle.token,this.props.account),\n        this.functionsUtil.checkTokenApproved(selectedToken,curveDepositContract.address,this.props.account),\n      ]);\n\n\n      newState.processing = {\n        redeem:{\n          txHash:null,\n          loading:false\n        },\n        deposit:{\n          txHash:null,\n          loading:false\n        },\n        approve:{\n          txHash:null,\n          loading:false\n        },\n      };\n      newState.inputValue = {\n        redeem:null,\n        deposit:null\n      };\n      newState.fastBalanceSelector = {\n        redeem:null,\n        deposit:null\n      };\n\n      newState.componentMounted = true;\n      newState.depositBalance = newState.tokenBalance;\n      newState.redeemBalance = newState.redeemableBalance;\n      newState.govTokensDisabled = tokenConfig.govTokensDisabled;\n      newState.canRedeem = newState.curveTokenBalance && newState.curveTokenBalance.gt(0);\n      newState.canDeposit = newState.idleTokenBalance && newState.idleTokenBalance.gt(0);\n      newState.redeemableBalance = newState.curveTokenBalance ? newState.curveTokenBalance.times(newState.curveTokenPrice) : this.functionsUtil.BNify(0);\n    }\n\n    this.setState(newState);\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokensInfo();\n  }\n\n  async calculateSlippage(){\n    const amount = this.state.inputValue[this.state.action] ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]) : null;\n\n    if (!amount || amount.lte(0)){\n      return false;\n    }\n\n    const normalizedAmount = this.functionsUtil.normalizeTokenAmount(amount,this.state.curvePoolContract.decimals);\n    const newState = {};\n\n    switch (this.state.action){\n      case 'deposit':\n        newState.depositBalance = amount;\n        newState.depositSlippage = await this.functionsUtil.getCurveSlippage(this.state.tokenConfig.idle.token,normalizedAmount,true);\n      break;\n      case 'redeem':\n        newState.redeemBalance = amount;\n        newState.withdrawSlippage = await this.functionsUtil.getCurveSlippage(this.state.tokenConfig.idle.token,normalizedAmount,true);\n      break;\n      default:\n      break;\n    }\n    // console.log('calculateSlippage',newState);\n\n    this.setState(newState);\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const accountChanged = prevProps.account !== this.props.account;\n    const tokenChanged = prevProps.urlParams.param1 !== this.props.urlParams.param1;\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (accountChanged || transactionsChanged || tokenChanged){\n      await this.loadTokensInfo();\n    }\n\n    const actionChanged = this.state.action !== prevState.action;\n    const redeemUnevenAmountsChanged = this.state.redeemUnevenAmounts !== prevState.redeemUnevenAmounts;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector[this.state.action] !== prevState.fastBalanceSelector[this.state.action];\n    if (actionChanged || fastBalanceSelectorChanged || redeemUnevenAmountsChanged){\n      this.setInputValue();\n    }\n\n    if (actionChanged){\n      this.updateAssetSelector();\n    }\n\n    const inputChanged = prevState.inputValue[this.state.action] !== this.state.inputValue[this.state.action];\n    if (inputChanged){\n      this.calculateSlippage();\n    }\n  }\n\n  updateAssetSelector = async () => {\n    const newState = {};\n    switch (this.state.action){\n      case 'deposit':\n        this.loadTokensInfo();\n      break;\n      case 'redeem':\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['curve','poolContract']);\n        newState.curveAvailableTokens = {};\n        newState.curveTokenConfig = tokenConfig;\n        newState.selectedToken = tokenConfig.token;\n        newState.curveAvailableTokens[tokenConfig.token] = tokenConfig;\n      break;\n      default:\n      break;\n    }\n\n    this.setState(newState);\n  }\n\n  getFastBalanceSelector = () => {\n    if (this.state.fastBalanceSelector[this.state.action] === null){\n      return false;\n    }\n    return this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n  }\n\n  setFastBalanceSelector = (percentage) => {\n    if (!this.state.action){\n      return false;\n    }\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: percentage\n      }\n    }));\n  }\n\n  setInputValue = () => {\n    if (!this.state.action || this.state.fastBalanceSelector[this.state.action] === null){\n      return false;\n    }\n\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n    let amount = null;\n\n    switch(this.state.action){\n      case 'deposit':\n        amount = this.state.tokenBalance ? this.functionsUtil.BNify(this.state.tokenBalance).times(selectedPercentage) : null;\n      break;\n      case 'redeem':\n        if (this.state.redeemUnevenAmounts){\n          amount = this.state.curveTokenBalance ? this.functionsUtil.BNify(this.state.curveTokenBalance).times(selectedPercentage) : null;\n        } else {\n          amount = this.state.redeemableBalance ? this.functionsUtil.BNify(this.state.redeemableBalance).times(selectedPercentage) : null;\n        }\n      break;\n      default:\n      break;\n    }\n\n    this.checkButtonDisabled(amount);\n\n    this.setState((prevState) => ({\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  changeInputValue = (e) => {\n    if (!this.state.action){\n      return false;\n    }\n\n    const amount = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n    this.checkButtonDisabled(amount);\n\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: null\n      },\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  checkButtonDisabled = (amount=null) => {\n\n    if (!this.state.action){\n      return false;\n    }\n\n    if (!amount){\n      amount = this.state.inputValue[this.state.action];\n    }\n\n    let buttonDisabled = false;\n\n    switch (this.state.action){\n      case 'deposit':\n        buttonDisabled = buttonDisabled || (amount && amount.gt(this.state.tokenBalance));\n      break;\n      case 'redeem':\n        if (this.state.redeemUnevenAmounts){\n          buttonDisabled = !this.state.canRedeem || (buttonDisabled || (amount && amount.gt(this.state.curveTokenBalance)) );\n        } else {\n          buttonDisabled = !this.state.canRedeem || (buttonDisabled || (amount && amount.gt(this.state.redeemableBalance)) );\n        }\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  cancelTransaction = async () => {\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        [this.state.action]:{\n          txHash:null,\n          loading:false\n        }\n      }\n    }));\n  }\n\n  approveToken = async () => {\n\n    // Check if the token is already approved\n    const tokenApproved = this.state.tokenApproved;\n\n    if (tokenApproved){\n      return this.setState((prevState) => ({\n        tokenApproved,\n        processing: {\n          ...prevState.processing,\n          approve:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    }\n\n    const callbackApprove = (tx,error)=>{\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Approve',\n        eventAction: this.state.selectedToken,\n        eventLabel: tx.status,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        tokenApproved: (tx.status === 'success'), // True\n        processing: {\n          ...prevState.processing,\n          approve:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptApprove = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          approve:{\n            ...prevState.processing['approve'],\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.functionsUtil.enableERC20(this.state.selectedToken,this.state.curveDepositContract.address,callbackApprove,callbackReceiptApprove);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        approve:{\n          txHash:null,\n          loading:true\n        }\n      }\n    }));\n  }\n\n  executeAction = async () => {\n\n    let contractSendResult = null;\n    const inputValue = this.state.inputValue[this.state.action];\n    const selectedPercentage = this.getFastBalanceSelector();\n\n    let loading = true;\n\n    switch (this.state.action){\n      // Handle deposit in curve\n      case 'deposit':\n\n        if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)){\n          return false;\n        }\n\n        const tokensToDeposit = this.functionsUtil.normalizeTokenAmount(inputValue,this.state.curvePoolContract.decimals);\n\n        const callbackDeposit = (tx,error) => {\n\n          if (!tx && error){\n            tx = {\n              status:'error'\n            };\n          }\n\n          const txError = tx.status === 'error';\n          const txSucceeded = tx.status === 'success';\n\n          const eventData = {\n            eventCategory: 'Deposit',\n            eventAction: this.state.selectedToken,\n            eventLabel: tx.status,\n            eventValue: parseInt(inputValue)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (txSucceeded){\n            this.setState((prevState) => ({\n              activeModal:'share',\n              inputValue:{\n                ...prevState.inputValue,\n                [this.state.action]: this.functionsUtil.BNify(0)\n              }\n            }));\n          } else if (this.state.metaTransactionsEnabled && txError){\n            this.setState({\n              txError:{\n                [this.state.action]: true\n              }\n            });\n          }\n        };\n\n        const callbackReceiptDeposit = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                ...prevState.processing[this.state.action],\n                txHash\n              }\n            }\n          }));\n        };\n\n        const amounts = await this.functionsUtil.getCurveAmounts(this.state.tokenConfig.idle.token,tokensToDeposit);\n        const minMintAmount = await this.functionsUtil.genericContractCall(this.state.curveSwapContract.name,'calc_token_amount',[amounts,true]);\n        const depositParams = [amounts,minMintAmount];\n\n        // No need for callback atm\n        contractSendResult = await this.props.contractMethodSendWrapper(this.state.curveDepositContract.name, 'add_liquidity', depositParams, null, callbackDeposit, callbackReceiptDeposit);\n      break;\n      case 'redeem':\n\n        if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)){\n          return false;\n        }\n\n        let curveTokensToRedeem = null;\n        if (selectedPercentage){\n          curveTokensToRedeem = this.functionsUtil.BNify(this.state.curveTokenBalance).times(selectedPercentage);\n        } else {\n          curveTokensToRedeem = this.functionsUtil.BNify(this.functionsUtil.normalizeTokenAmount(inputValue,this.state.curvePoolContract.decimals));\n          if (!this.state.redeemUnevenAmounts){\n            const curveTokenPrice = await this.functionsUtil.getCurveTokenPrice();\n            curveTokensToRedeem = curveTokensToRedeem.div(curveTokenPrice);\n          }\n        }\n\n        if (!curveTokensToRedeem){\n          return false;\n        }\n\n        const callbackRedeem = (tx,error) => {\n          const txSucceeded = tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventLabel: tx.status,\n            eventCategory: `CurveRedeem`,\n            eventAction: this.state.selectedToken,\n            eventValue: curveTokensToRedeem.toFixed()\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (txSucceeded){\n            this.setState((prevState) => ({\n              inputValue:{\n                ...prevState.inputValue,\n                [this.state.action]: this.functionsUtil.BNify(0)\n              }\n            }));\n          }\n        };\n\n        const callbackReceiptRedeem = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                ...prevState.processing[this.state.action],\n                txHash\n              }\n            }\n          }));\n        };\n\n        const _amount = this.functionsUtil.normalizeTokenAmount(curveTokensToRedeem,this.state.curvePoolContract.decimals).toString();\n        let min_amounts = await this.functionsUtil.getCurveAmounts(this.state.tokenConfig.idle.token,0);\n\n        const contractName = this.state.curveDepositContract.name;\n        if (this.state.redeemUnevenAmounts){\n          console.log('remove_liquidity_imbalance',this.functionsUtil.BNify(inputValue).toString(),_amount.toString(),min_amounts);\n          this.props.contractMethodSendWrapper(contractName, 'remove_liquidity_imbalance', [min_amounts, _amount], null, callbackRedeem, callbackReceiptRedeem);\n        } else {\n          min_amounts = await this.functionsUtil.getCurveAmounts(this.state.tokenConfig.idle.token,_amount);\n          console.log('remove_liquidity',this.functionsUtil.BNify(inputValue).toString(),_amount.toString(),min_amounts);\n          this.props.contractMethodSendWrapper(contractName, 'remove_liquidity', [_amount, min_amounts], null, callbackRedeem, callbackReceiptRedeem);\n        }\n      break;\n      default: // Reset loading if not handled action\n        loading = false;\n      break;\n    }\n\n    // console.log('contractSendResult',contractSendResult);\n\n    if (contractSendResult !== false){\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          [this.state.action]:{\n            ...prevState.processing[this.state.action],\n            loading\n          }\n        }\n      }));\n    }\n  }\n\n  setAction = (action) => {\n    switch (action.toLowerCase()){\n      case 'deposit':\n        \n      break;\n      case 'redeem':\n        if (!this.state.canRedeem){\n          action = null;\n        }\n      break;\n      default:\n        action = null;\n      break;\n    }\n\n    if (action !== null){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  render(){\n\n    const userHasFunds = this.props.account && this.state.curveTokenBalance && this.functionsUtil.BNify(this.state.curveTokenBalance).gt(0);\n    const canPerformAction = true;\n\n    return (\n      <Box\n        width={1}\n      >\n        <Flex\n          width={1}\n          mb={[3,4]}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'flex-start'}\n        >\n          <Flex\n            width={0.5}\n          >\n            {\n              <Breadcrumb\n                isMobile={this.props.isMobile}\n                path={['Boost',this.state.selectedToken]}\n                handleClick={ e => this.props.goToSection('best') }\n                text={this.functionsUtil.getGlobalConfig(['strategies','best','title'])}\n              />\n            }\n          </Flex>\n        </Flex>\n        <Title\n          mb={[3,4]}\n        >\n          Curve Pool\n        </Title>\n        <Flex\n          width={1}\n        >\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'column'}\n            justifyContent={'center'}\n          >\n            <Flex\n              width={[1,0.36]}\n              alignItems={'stretch'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Box\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select your asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-from'}\n                  onChange={this.changeFromToken}\n                  selectedToken={this.state.selectedToken}\n                  tokenConfig={this.state.curveTokenConfig}\n                  showBalance={this.state.action === 'deposit'}\n                  availableTokens={this.state.curveAvailableTokens}\n                />\n              </Box>\n              <Box\n                width={1}\n              >\n                {\n                  canPerformAction ? (\n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        mb={2}\n                      >\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:[2,3],\n                            width:0.48,\n                            onMouseDown:() => {\n                              this.setAction('deposit');\n                            }\n                          }}\n                          isInteractive={true}\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:[1,3]\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:[2,3],\n                            width:0.48,\n                            onMouseDown:() => {\n                              this.setAction('redeem');\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canRedeem }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:[1,3]\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Redeem\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  ) : (\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    >\n                      <Icon\n                        size={'2.3em'}\n                        name={'MoneyOff'}\n                        color={'cellText'}\n                      />\n                      <Text\n                        mt={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'center'}\n                      >\n                        You don't have any {this.state.tokenConfig.idle.token} in your wallet.\n                      </Text>\n                    </Flex>\n                  )\n                }\n              </Box>\n            </Flex>\n            <Flex\n              width={1}\n              mt={ this.props.account ? 3 : 0 }\n            >\n            {\n              this.state.action === 'deposit' ? (\n                <CurveDeposit\n                  {...this.props}\n                  {...this.state}\n                />\n              ) : this.state.action === 'redeem' && (\n                <CurveRedeem\n                  {...this.props}\n                  {...this.state}\n                />\n              )\n            }\n            </Flex>\n          </Flex>\n        </Flex>\n        {\n          userHasFunds &&\n            <Flex\n              mb={[0,4]}\n              width={1}\n              flexDirection={'column'}\n              id={'funds-overview-container'}\n            >\n              <Title my={[3,4]}>Funds Overview</Title>\n              <FundsOverviewCurve\n                {...this.props}\n                tokenFees={this.state.tokenFees}\n                tokenConfig={this.state.tokenConfig}\n                selectedToken={this.state.selectedToken}\n                availableTokens={this.state.availableTokens}\n                enabledTokens={Object.keys(this.state.availableTokens)}\n              />\n            </Flex>\n        }\n        {\n          /*\n          this.props.account && !this.state.govTokensDisabled[this.state.selectedToken] && Object.keys(availableGovTokens).length>0 && \n            <Flex\n              width={1}\n              id=\"earnings-estimation\"\n              flexDirection={'column'}\n            >\n              <Title my={[3,4]}>Yield Farming</Title>\n              <AssetsList\n                enabledTokens={Object.keys(availableGovTokens)}\n                handleClick={(props) => {}}\n                cols={[\n                  {\n                    title:'TOKEN',\n                    props:{\n                      width:[0.33,0.22]\n                    },\n                    fields:[\n                      {\n                        name:'icon',\n                        props:{\n                          mr:2,\n                          height:['1.4em','2.3em']\n                        }\n                      },\n                      {\n                        name:'tokenName'\n                      }\n                    ]\n                  },\n                  {\n                    title:'BALANCE',\n                    props:{\n                      width:[0.33, 0.26],\n                    },\n                    fields:[\n                      {\n                        name:'tokenBalance',\n                        props:{\n                          decimals: this.props.isMobile ? 6 : 8\n                        }\n                      }\n                    ]\n                  },\n                  {\n                    title:'REDEEMABLE',\n                    props:{\n                      width:[0.33,0.26],\n                      justifyContent:['center','flex-start']\n                    },\n                    fields:[\n                      {\n                        name:'redeemableBalance',\n                        props:{\n                          decimals: this.props.isMobile ? 6 : 8\n                        }\n                      },\n                      {\n                        name:'tooltip',\n                        props:{\n                          placement:'bottom',\n                          message:'The shown balance may be lower than the real one.',\n                        }\n                      }\n                    ]\n                  },\n                  {\n                    title:'TOKEN PRICE',\n                    mobile:false,\n                    props:{\n                      width: 0.26,\n                    },\n                    parentProps:{\n                      width:1,\n                      pr:[2,4]\n                    },\n                    fields:[\n                      {\n                        name:'tokenPrice',\n                        props:{\n                          unit:'$',\n                          unitPos:'left',\n                          unitProps:{\n                            mr:1,\n                            fontWeight:3,\n                            fontSize:[0,2],\n                            color:'cellText'\n                          }\n                        }\n                      }\n                    ]\n                  },\n                ]}\n                {...this.props}\n                availableTokens={availableGovTokens}\n              />\n            </Flex>\n          */\n        }\n        {\n          /*\n          this.props.account && \n            <Flex\n              mb={[3,4]}\n              width={1}\n              flexDirection={'column'}\n              id={'estimated-earnings-container'}\n            >\n              <Title my={[3,4]}>Estimated earnings</Title>\n              <EstimatedEarnings\n                {...this.props}\n              />\n            </Flex>\n          */\n        }\n        {\n        this.props.account && \n          <Flex\n            mb={[3,4]}\n            width={1}\n            flexDirection={'column'}\n            id={'transactions-container'}\n          >\n            <Title my={[3,4]}>Transactions</Title>\n            <TransactionsList\n              {...this.props}\n              availableTokens={this.state.availableTokens}\n              enabledTokens={Object.keys(this.state.availableTokens)}\n              enabledActions={['CurveIn','CurveOut','CurveZapIn','CurveZapOut','CurveTransferIn','CurveTransferOut','CurveDepositIn','CurveDepositOut']}\n              cols={[\n                {\n                  title: this.props.isMobile ? '' : 'HASH',\n                  props:{\n                    width:[0.15,0.24]\n                  },\n                  fields:[\n                    {\n                      name:'icon',\n                      props:{\n                        mr:[0,2]\n                      }\n                    },\n                    {\n                      name:'hash',\n                      mobile:false\n                    }\n                  ]\n                },\n                {\n                  title:'ACTION',\n                  mobile:false,\n                  props:{\n                    width:0.15,\n                  },\n                  fields:[\n                    {\n                      name:'action'\n                    }\n                  ]\n                },\n                {\n                  title:'DATE',\n                  props:{\n                    width:[0.32,0.23],\n                  },\n                  fields:[\n                    {\n                      name:'date'\n                    }\n                  ]\n                },\n                {\n                  title:'STATUS',\n                  props:{\n                    width:[0.18,0.22],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      name:'statusIcon',\n                      props:{\n                        mr:[0,2]\n                      }\n                    },\n                    {\n                      mobile:false,\n                      name:'status'\n                    }\n                  ]\n                },\n                {\n                  title:'AMOUNT',\n                  props:{\n                    width:0.19,\n                  },\n                  fields:[\n                    {\n                      name:'amount'\n                    },\n                  ]\n                },\n                {\n                  title:'ASSET',\n                  props:{\n                    width:[0.15,0.20],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      name:'tokenIcon',\n                      props:{\n                        mr:[0,2],\n                        height:['1.4em','1.6em']\n                      }\n                    },\n                    {\n                      mobile:false,\n                      name:'tokenName'\n                    },\n                  ]\n                },\n              ]}\n            />\n          </Flex>\n        }\n\n        <BuyModal\n          {...this.props}\n          closeModal={this.resetModal}\n          buyToken={this.state.selectedToken}\n          isOpen={this.state.activeModal === 'buy'}\n        />\n      </Box>\n    );\n  }\n}\n\nexport default AssetPage;","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Button,\n  Form,\n  Icon,\n  Flex,\n  Link\n} from \"rimble-ui\";\nimport axios from 'axios';\nimport colors from '../../colors';\nimport ModalCard from './ModalCard';\nimport header_styles from './Header.module.scss';\nimport ButtonLoader from '../../ButtonLoader/ButtonLoader.js';\nimport globalConfigs from '../../configs/globalConfigs';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass WelcomeModal extends React.Component {\n\n  state = {\n    email:null,\n    error:false,\n    subscribed:false,\n    sendingForm:false\n  };\n\n  functionsUtil = null;\n\n  constructor(props) {\n    super(props);\n    this.functionsUtil = new FunctionsUtil(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleValidation = this.handleValidation.bind(this);\n  }\n\n  componentDidUpdate = async () => {\n    this.functionsUtil.setProps(this.props);\n  }\n\n  sendUserInfo = (sendEmail=true) => {\n    const walletProvider = this.functionsUtil.getWalletProvider();\n    const userInfo = {\n      address: this.props.account,\n      provider: walletProvider\n    };\n\n    if (sendEmail && this.state.email !== null){\n      userInfo.email = this.state.email;\n    }\n\n    this.functionsUtil.simpleIDPassUserInfo(userInfo);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    if (!this.state.email){\n      return false;\n    }\n\n    const callback = () => {\n      this.setState({\n        sendingForm:false,\n        subscribed:true\n      });\n      window.setTimeout(this.props.closeModal,2500);\n    };\n\n    this.sendUserInfo();\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'UI',\n      eventAction: 'send_email',\n      eventLabel: 'WelcomeModal'\n    });\n\n    axios.post(globalConfigs.newsletterSubscription.endpoint, {\n      'email': this.state.email\n    }).then(r => {\n      callback();\n    })\n    .catch(err => {\n      callback();\n    });\n\n    // Set signedUp in the localStorage\n    if (localStorage){\n      const walletAddress = this.props.account.toLowerCase();\n      let lastLogin = localStorage.getItem('lastLogin') ? JSON.parse(localStorage.getItem('lastLogin')) : null;\n      if (lastLogin && lastLogin[walletAddress] && !lastLogin[walletAddress].signedUp){\n        lastLogin[walletAddress].signedUp = true;\n        this.functionsUtil.setLocalStorage('lastLogin',JSON.stringify(lastLogin));\n      }\n    }\n\n    this.setState({\n      sendingForm:true\n    })\n  };\n\n  closeModal = async () => {\n\n    const closeModal = () => {\n      this.props.closeModal();\n    };\n\n    try{\n      // Prevent sending email\n      this.sendUserInfo(false);\n\n      // Send Google Analytics event\n      if (globalConfigs.analytics.google.events.enabled){\n        this.functionsUtil.sendGoogleAnalyticsEvent({\n          eventCategory: 'UI',\n          eventAction: 'continue_without_email',\n          eventLabel: 'WelcomeModal'\n        },closeModal);\n\n        // Call callback after 1 second if stuck\n        setTimeout(closeModal,1000);\n      } else {\n        closeModal();\n      }\n    } catch (err) {\n      closeModal();\n    }\n  }\n\n  handleValidation(e) {\n    if (e && e.target) {\n      this.setState({ email: e.target.value });\n      e.target.parentNode.classList.add(\"was-validated\");\n    }\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        {\n          this.state.subscribed ? (\n            <ModalCard\n              closeFunc={this.closeModal}\n            >\n              <ModalCard.Header title={'All done'} icon={`images/done.svg`}></ModalCard.Header>\n              <ModalCard.Body>\n                <Flex width={1} flexDirection={'column'} mb={3}>\n                  <Text color={'dark-gray'} textAlign={'center'} fontSize={3} my={0}>\n                    Thanks for subscribing!\n                  </Text>\n                  <Button\n                    my={3}\n                    width={'100%'}\n                    borderRadius={4}\n                    onClick={this.closeModal}\n                  >\n                    CLOSE\n                  </Button>\n                </Flex>\n              </ModalCard.Body>\n            </ModalCard>\n          ) : (\n            <ModalCard closeFunc={this.closeModal}>\n              <ModalCard.Header title={'Stay up-to-date!'} icon={`images/notification.svg`}>\n              </ModalCard.Header>\n              <ModalCard.Body>\n                <Form onSubmit={this.handleSubmit}>\n                  <Flex width={1} flexDirection={'column'} mb={3}>\n                    <Text color={'mid-gray'} textAlign={'left'} fontSize={3} my={0}>\n                      Add your e-mail to receive updates about:\n                    </Text>\n                  </Flex>\n                  <Flex width={1} flexDirection={'column'} mt={2}>\n                    <Flex my={2} flexDirection={'row'} alignItems={'center'}>\n                      <Icon\n                        name={'CheckCircle'}\n                        color={colors.green}\n                        size={'32'}\n                      />\n                      <Text color={'dark-gray'} textAlign={'left'} fontSize={3} fontWeight={2} my={0} ml={2}>\n                        Performance reports\n                      </Text>\n                    </Flex>\n                    <Flex my={2} flexDirection={'row'}>\n                      <Icon\n                        name={'CheckCircle'}\n                        color={colors.green}\n                        size={'32'}\n                      />\n                      <Text color={'dark-gray'} textAlign={'left'} fontSize={3} fontWeight={2} my={0} ml={2}>\n                        New Protocols & Tokens\n                      </Text>\n                    </Flex>\n                    <Flex my={2} flexDirection={'row'}>\n                      <Icon\n                        name={'CheckCircle'}\n                        color={colors.green}\n                        size={'32'}\n                      />\n                      <Text color={'dark-gray'} textAlign={'left'} fontSize={3} fontWeight={2} my={0} ml={2}>\n                        Latest updates\n                      </Text>\n                    </Flex>\n                    <Form.Field width={1} label={''}>\n                      <Form.Input\n                        type=\"email\"\n                        name=\"EMAIL\"\n                        width={1}\n                        outline={'none'}\n                        border={0}\n                        px={3}\n                        py={4}\n                        fontSize={3}\n                        textAlign={['center','left']}\n                        placeholder={'Enter your e-mail'}\n                        onChange={this.handleValidation}\n                        required\n                      />\n                    </Form.Field>\n                    <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n                      <ButtonLoader\n                        buttonText={'SUBMIT'}\n                        isLoading={this.state.sendingForm}\n                        buttonProps={{className:header_styles.gradientButton,width:'100%',type:'submit'}}\n                      >\n                      </ButtonLoader>\n                      <Link mt={2} onClick={this.closeModal} hoverColor={'blue'}>continue without e-mail</Link>\n                    </Flex>\n                  </Flex>\n                </Form>\n              </ModalCard.Body>\n            </ModalCard>\n          )\n        }\n      </Modal>\n    );\n  }\n}\n\nexport default WelcomeModal;\n","import React from \"react\";\nimport ModalCard from './ModalCard';\nimport { Text, Modal, Flex } from \"rimble-ui\";\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport RoundButton from '../../RoundButton/RoundButton.js';\n\nclass TooltipModal extends React.Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.loadUtils();\n  }\n\n  componentDidUpdate = async () => {\n    this.loadUtils();\n  }\n\n  closeModal = async () => {\n    this.props.closeModal();\n  }\n\n  render() {\n\n    return (\n      <Modal\n        isOpen={this.props.isOpen}\n      >\n        <ModalCard\n          maxWidth={['960px','650px']}\n          closeFunc={this.props.closeModal}\n        >\n          <ModalCard.Header\n            pt={3}\n            title={this.props.title}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              flexDirection={'column'}\n            >\n              <Text\n                fontSize={2}\n                textAlign={'left'}\n                color={'dark-gray'}\n                dangerouslySetInnerHTML={{ __html: this.props.content }}\n              >\n              </Text>\n            </Flex>\n            <Flex\n              my={3}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <RoundButton\n                handleClick={this.closeModal}\n                buttonProps={{\n                  width:['100%','40%']\n                }}\n              >\n                GOT IT\n              </RoundButton>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default TooltipModal;","import React from \"react\";\nimport ModalCard from './ModalCard';\nimport header_styles from './Header.module.scss';\nimport AssetField from '../../AssetField/AssetField';\nimport { Text, Modal, Flex, Checkbox } from \"rimble-ui\";\nimport SmartNumber from '../../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport ButtonLoader from '../../ButtonLoader/ButtonLoader.js';\n\nclass MigrateModal extends React.Component {\n\n  state = {\n    dontShowAgain:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.loadUtils();\n  }\n\n  componentDidUpdate = async () => {\n    this.loadUtils();\n  }\n\n  closeModal = async () => {\n    const gaEventsEnabled = this.functionsUtil.getGlobalConfig(['globalConfigs','analytics','google','events','enabled']);\n    // Send Google Analytics event\n    if (gaEventsEnabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'UI',\n        eventAction: 'continue_without_migrate',\n        eventLabel: 'MigrateModal'\n      });\n      this.props.closeModal();\n    } else {\n      this.props.closeModal();\n    }\n  }\n\n  toggleDontShowAgain = (dontShowAgain) => {\n\n    if (dontShowAgain){\n      this.functionsUtil.setLocalStorage('dontShowMigrateModal','true');\n    } else {\n      this.functionsUtil.removeStoredItem('dontShowMigrateModal');\n    }\n\n    this.setState({\n      dontShowAgain\n    });\n  }\n\n  migrate = () => {\n    const tokenMigrationRoute = this.functionsUtil.getGlobalConfig(['tools','tokenMigration','route']);\n    this.props.goToSection('tools/'+tokenMigrationRoute);\n    this.props.closeModal();\n  }\n\n  render() {\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[2,3],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    return (\n      <Modal\n        isOpen={this.props.isOpen}\n      >\n        <ModalCard\n          maxWidth={['960px','750px']}\n          closeFunc={this.props.closeModal}\n        >\n          <ModalCard.Header\n            iconHeight={'40px'}\n            title={'Migrate to Idle'}\n            icon={`images/migrate.svg`}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              mb={0}\n              width={1}\n              flexDirection={'column'}\n            >\n              <Text\n                my={0}\n                fontSize={3}\n                color={'mid-gray'}\n                textAlign={'center'}\n              >\n                You can migrate your funds from Compound, Aave, Fulcrum, Yearn and Idle V2 with just one transaction.\n              </Text>\n            </Flex>\n            <Flex\n              width={1}\n              flexDirection={'column'}\n            >\n              <Flex\n                my={2}\n                alignItems={'center'}\n                flexDirection={'column'}\n              >\n                {\n                  this.props.protocolsTokensBalances && Object.keys(this.props.protocolsTokensBalances).map( token => (\n                    <Flex\n                      mb={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      key={`token_${token}`}\n                      justifyContent={'space-between'}\n                    >\n                      <AssetField\n                        token={token}\n                        fieldInfo={{\n                          name:'icon',\n                          props:{\n                            mr:2,\n                            height:'2.3em'\n                          }\n                        }}\n                        tokenConfig={this.props.protocolsTokensBalances[token].tokenConfig}\n                      />\n                      <SmartNumber\n                        mr={2}\n                        {...fieldProps}\n                        minPrecision={5}\n                        number={this.props.protocolsTokensBalances[token].balance} \n                      />\n                      <AssetField\n                        token={token}\n                        fieldInfo={{\n                          name:'tokenName',\n                          props:fieldProps\n                        }}\n                        tokenConfig={this.props.protocolsTokensBalances[token].tokenConfig}\n                      />\n                    </Flex>\n                  ) )\n                }\n                <Text\n                  mb={0}\n                  fontSize={1}\n                  color={'red'}\n                  fontWeight={500}\n                  textAlign={'center'}\n                >\n                  Please be aware that by migrating your tokens from other protocols, your open positions might be liquidated if collateralized with migrated tokens.\n                </Text>\n              </Flex>\n              <Flex\n                mb={3}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <ButtonLoader\n                  buttonText={'MIGRATE'}\n                  handleClick={this.migrate}\n                  isLoading={this.state.sendingForm}\n                  buttonProps={{\n                    width:['100%','50%'],\n                    className:header_styles.gradientButton\n                  }}\n                >\n                </ButtonLoader>\n                {\n                /*\n                <Link mt={2} onClick={this.closeModal} hoverColor={'blue'}>continue without migrate</Link>\n                */\n                }\n                <Checkbox\n                  mt={2}\n                  required={false}\n                  color={'mid-gray'}\n                  checked={this.state.dontShowAgain}\n                  label={`Don't show this popup again`}\n                  onChange={ e => this.toggleDontShowAgain(e.target.checked) }\n                />\n              </Flex>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default MigrateModal;","import React from \"react\";\nimport ModalCard from './ModalCard';\nimport header_styles from './Header.module.scss';\nimport AssetField from '../../AssetField/AssetField';\nimport SmartNumber from '../../SmartNumber/SmartNumber';\nimport { Text, Modal, Flex, Checkbox } from \"rimble-ui\";\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport RoundButton from '../../RoundButton/RoundButton.js';\n\nclass UpgradeModal extends React.Component {\n\n  state = {\n    dontShowAgain:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.loadUtils();\n  }\n\n  componentDidUpdate = async () => {\n    this.loadUtils();\n  }\n\n  closeModal = async () => {\n    const gaEventsEnabled = this.functionsUtil.getGlobalConfig(['globalConfigs','analytics','google','events','enabled']);\n    // Send Google Analytics event\n    if (gaEventsEnabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'UI',\n        eventAction: 'close_upgrade_modal',\n        eventLabel: 'UpgradeModal'\n      });\n      this.props.closeModal();\n    } else {\n      this.props.closeModal();\n    }\n  }\n\n  toggleDontShowAgain = (dontShowAgain) => {\n\n    if (dontShowAgain){\n      this.functionsUtil.setLocalStorage('dontShowUpgradeModal','true');\n    } else {\n      this.functionsUtil.removeStoredItem('dontShowUpgradeModal');\n    }\n\n    this.setState({\n      dontShowAgain\n    });\n  }\n\n  migrate = async (token,strategy=null) => {\n\n    if (!strategy){\n      strategy = this.props.selectedStrategy;\n    }\n\n    const gaEventsEnabled = this.functionsUtil.getGlobalConfig(['globalConfigs','analytics','google','events','enabled']);\n    // Send Google Analytics event\n    if (gaEventsEnabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'UpgradeModal',\n        eventAction: 'migrate',\n        eventLabel: `${this.props.selectedStrategy}_${token}`\n      });\n      this.props.goToSection(`${strategy}/${token}`);\n      this.props.closeModal();\n    } else {\n      this.props.goToSection(`${strategy}/${token}`);\n      this.props.closeModal();\n    }\n  }\n\n  convert = async (token) => {\n    const convertTool = this.functionsUtil.getGlobalConfig(['tools','tokenMigration']);\n    const gaEventsEnabled = this.functionsUtil.getGlobalConfig(['globalConfigs','analytics','google','events','enabled']);\n    // Send Google Analytics event\n    if (gaEventsEnabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'UpgradeModal',\n        eventAction: 'migrate',\n        eventLabel: `${this.props.selectedStrategy}_${token}`\n      });\n      this.props.goToSection(`tools/${convertTool.route}/${token}`);\n      this.props.closeModal();\n    } else {\n      this.props.goToSection(`tools/${convertTool.route}/${token}`);\n      this.props.closeModal();\n    }\n  }\n\n  render() {\n\n    if (!this.props.availableStrategies || !this.props.availableTokens){\n      return null;\n    }\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[2,3],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    return (\n      <Modal\n        isOpen={this.props.isOpen}\n      >\n        <ModalCard\n          maxWidth={['960px','750px']}\n          closeFunc={this.props.closeModal}\n        >\n          <ModalCard.Header\n            icon={`images/migrate.svg`}\n            title={'Upgrade Available'}\n            iconHeight={['35px','40px']}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              mb={0}\n              width={1}\n              flexDirection={'column'}\n            >\n              <Text\n                my={0}\n                fontSize={[2,3]}\n                color={'mid-gray'}\n                textAlign={'center'}\n              >\n                Idle now supports yield farming and governance tokens distribution, migrate now your portfolio with just one click!\n              </Text>\n            </Flex>\n            <Flex\n              width={1}\n              flexDirection={'column'}\n            >\n              <Flex\n                mt={[2,3]}\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <Flex\n                  fontSize={[2,3]}\n                  width={[0.5,0.28]}\n                  fontWeight={[4,5]}\n                  color={'copyColor'}\n                >\n                  {\n                    this.props.isMobile ? 'ASSET' : 'ASSET TO MIGRATE'\n                  }\n                </Flex>\n                {\n                  !this.props.isMobile && (\n                    <Flex\n                      width={0.19}\n                      fontWeight={[4,5]}\n                      color={'copyColor'}\n                      justifyContent={'center'}\n                    >\n                      BALANCE\n                    </Flex>\n                  )\n                }\n                {\n                  !this.props.isMobile && (\n                    <Flex\n                      width={0.19}\n                      fontWeight={[4,5]}\n                      color={'copyColor'}\n                      justifyContent={'center'}\n                    >\n                      OLD APY\n                    </Flex>\n                  )\n                }\n                <Flex\n                  fontSize={[2,3]}\n                  fontWeight={[4,5]}\n                  width={[0.25,0.19]}\n                  color={'copyColor'}\n                  justifyContent={'center'}\n                >\n                  {\n                    this.props.isMobile ? 'APY' : 'NEW APY'\n                  }\n                </Flex>\n                <Flex\n                  width={[0.25,0.15]}\n                >\n                  \n                </Flex>\n              </Flex>\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'column'}\n              >\n                {\n                  this.props.tokensToMigrate && Object.keys(this.props.tokensToMigrate).map( tokenKey => {\n                    const token = this.props.tokensToMigrate[tokenKey].token;\n                    const strategy = this.props.tokensToMigrate[tokenKey].strategy;\n                    const tokenConfig = this.props.tokensToMigrate[tokenKey].tokenConfig;\n                    const balance = this.props.tokensToMigrate[tokenKey].oldContractBalanceFormatted;\n                    return (\n                      <Flex\n                        mt={2}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        key={`token_${tokenKey}`}\n                        justifyContent={'space-between'}\n                      >\n                        <Flex\n                          width={[0.5,0.28]}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                        >\n                          <AssetField\n                            fieldInfo={{\n                              name:'icon',\n                              props:{\n                                mr:2,\n                                height:['1.8em','2.3em']\n                              }\n                            }}\n                            tokenConfig={tokenConfig}\n                            token={tokenConfig.idle.token}\n                          />\n                          <AssetField\n                            fieldInfo={{\n                              name:'tokenName',\n                              props:fieldProps\n                            }}\n                            tokenConfig={tokenConfig}\n                            token={tokenConfig.idle.token}\n                          />\n                        </Flex>\n                        {\n                          !this.props.isMobile && (\n                            <Flex\n                              width={0.19}\n                              alignItems={'center'}\n                              justifyContent={'center'}\n                            >\n                              <SmartNumber\n                                {...fieldProps}\n                                minPrecision={5}\n                                number={balance}\n                                flexProps={{\n                                  justifyContent:'center'\n                                }}\n                              />\n                            </Flex>\n                          )\n                        }\n                        {\n                          !this.props.isMobile && (\n                            <Flex\n                              width={0.19}\n                              alignItems={'center'}\n                              justifyContent={'center'}\n                            >\n                              <AssetField\n                                {...this.props}\n                                fieldInfo={{\n                                  name:'oldApy',\n                                  props:fieldProps\n                                }}\n                                token={token}\n                                tokenConfig={tokenConfig}\n                              />\n                            </Flex>\n                          )\n                        }\n                        <Flex\n                          width={[0.25,0.19]}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <AssetField\n                            {...this.props}\n                            fieldInfo={{\n                              name:'apy',\n                              props:fieldProps\n                            }}\n                            token={token}\n                            tokenConfig={tokenConfig}\n                          />\n                        </Flex>\n                        <Flex\n                          width={[0.25,0.15]}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <RoundButton\n                            handleClick={ e => this.migrate(token,strategy) }\n                            buttonProps={{\n                              size:'small',\n                              width:'100%',\n                              className:header_styles.gradientButton\n                            }}\n                          >\n                            MIGRATE\n                          </RoundButton>\n                        </Flex>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'column'}\n              >\n                {\n                  this.props.oldIdleTokensToMigrate && Object.keys(this.props.oldIdleTokensToMigrate).map( token => {\n                    const tokenConfig = this.props.oldIdleTokensToMigrate[token].tokenConfig;\n\n                    if (!tokenConfig){\n                      return null;\n                    }\n\n                    const balance = this.props.oldIdleTokensToMigrate[token].balance;\n                    let newTokenConfig = null;\n\n                    if (tokenConfig.availableStrategies && !this.props.availableTokens[tokenConfig.baseToken]){\n                      newTokenConfig = this.props.availableStrategies[tokenConfig.availableStrategies[0]][tokenConfig.baseToken];\n                    } else {\n                      newTokenConfig = this.props.availableTokens[tokenConfig.baseToken];\n                    }\n                    return (\n                      <Flex\n                        mt={2}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        key={`token_${token}`}\n                        justifyContent={'space-between'}\n                      >\n                        <Flex\n                          width={0.28}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                        >\n                          <AssetField\n                            fieldInfo={{\n                              name:'icon',\n                              props:{\n                                mr:2,\n                                height:'2.3em'\n                              }\n                            }}\n                            tokenConfig={tokenConfig}\n                            token={token}\n                          />\n                          <AssetField\n                            fieldInfo={{\n                              name:'tokenName',\n                              props:fieldProps\n                            }}\n                            tokenConfig={tokenConfig}\n                            token={token}\n                          />\n                        </Flex>\n                        <Flex\n                          width={0.19}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <SmartNumber\n                            {...fieldProps}\n                            minPrecision={5}\n                            number={balance}\n                            flexProps={{\n                              justifyContent:'center'\n                            }}\n                          />\n                        </Flex>\n                        <Flex\n                          width={0.19}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <AssetField\n                            {...this.props}\n                            fieldInfo={{\n                              name:'oldApy',\n                              props:fieldProps\n                            }}\n                            token={newTokenConfig.token}\n                            tokenConfig={newTokenConfig}\n                          />\n                        </Flex>\n                        <Flex\n                          width={0.19}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <AssetField\n                            {...this.props}\n                            fieldInfo={{\n                              name:'apy',\n                              props:fieldProps\n                            }}\n                            token={newTokenConfig.token}\n                            tokenConfig={newTokenConfig}\n                          />\n                        </Flex>\n                        <Flex\n                          width={0.15}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <RoundButton\n                            handleClick={ e => this.convert(token) }\n                            buttonProps={{\n                              size:'small',\n                              width:'100%',\n                              className:header_styles.gradientButton\n                            }}\n                          >\n                            MIGRATE\n                          </RoundButton>\n                        </Flex>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n              <Flex\n                my={3}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <RoundButton\n                  handleClick={this.closeModal}\n                  buttonProps={{\n                    fontSize:[2,3],\n                    width:['100%','40%'],\n                  }}\n                >\n                  MIGRATE LATER\n                </RoundButton>\n                {\n                  <Checkbox\n                    mt={2}\n                    required={false}\n                    color={'mid-gray'}\n                    checked={this.state.dontShowAgain}\n                    label={`Don't show this popup again`}\n                    onChange={ e => this.toggleDontShowAgain(e.target.checked) }\n                  />\n                }\n              </Flex>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default UpgradeModal;","import React from \"react\";\nimport {\n  Heading,\n  // Text,\n  Modal,\n  Box,\n  Flex,\n  // Image,\n  EthAddress\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport AssetField from '../../AssetField/AssetField.js';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport ButtonLoader from '../../ButtonLoader/ButtonLoader.js';\nimport styles from '../../CryptoInput/CryptoInput.module.scss';\n\nclass AccountModal extends React.Component {\n\n  state = {\n    logout: false,\n    balances: null\n  }\n\n  loadBalances = async () => {\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized || !this.props.account || this.state.balances !== null){\n      return false;\n    }\n\n    const balances = [];\n    const allTokens = Object.keys(this.props.availableStrategies.best);\n\n    // await this.functionsUtil.asyncForEach(allTokens, async (baseToken) => {\n    allTokens.forEach( baseToken => {\n      const tokens = [];\n      tokens.push(baseToken);\n      Object.keys(this.props.availableStrategies).forEach( strategy => {\n        const strategyToken = this.props.availableStrategies[strategy][baseToken];\n        if (strategyToken){\n          tokens.push(strategyToken.idle.token);\n        }\n      });\n\n      balances.push(tokens);\n      /*\n      const tokenBalances = {};\n\n      tokenBalances[baseToken] = await this.functionsUtil.getTokenBalance(baseToken,this.props.account);\n\n      await this.functionsUtil.asyncForEach(Object.keys(this.props.availableStrategies), async (strategy) => {\n        const strategyToken = this.props.availableStrategies[strategy][baseToken];\n        if (strategyToken){\n          tokenBalances[strategyToken.idle.token] = await this.functionsUtil.getTokenBalance(strategyToken.idle.token,this.props.account);\n        }\n      });\n\n      balances.push(tokenBalances);\n      */\n    });\n\n    this.setState({\n      balances\n    });\n  }\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n    this.loadBalances();\n  }\n\n  componentDidUpdate(prevProps) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.acccount !== this.props.account;\n    const contractsInitialized = !prevProps.contractsInitialized && this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && this.props.availableStrategies;\n    if (availableStrategiesChanged || accountChanged || contractsInitialized){\n      this.loadBalances();\n    }\n  }\n\n  setConnector = async (connectorName) => {\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Connect',\n      eventAction: 'logout'\n    });\n\n    if (typeof this.props.setConnector === 'function'){\n      this.props.setConnector(connectorName);\n    }\n\n    return await this.props.context.setConnector(connectorName);\n  }\n\n  async logout(){\n    this.setState({\n      logout:true\n    });\n\n    this.props.logout();\n    await this.setConnector('Infura');\n    // this.props.closeModal();\n  }\n\n  render(){\n    if (this.props.account){\n      // let renderBalances = null;\n\n      const rows = (Object.keys(this.props.availableStrategies).length+1);\n      const renderBalances = this.state.balances && this.state.balances.map( (tokens,i) => {\n        return (\n          <Flex\n            mt={2}\n            width={1}\n            boxShadow={0}\n            key={'balance_'+i}\n            alignItems={'center'}\n            flexDirection={'row'}\n            >\n              {\n                tokens.map( (token,tokenIndex) => (\n                  <Flex\n                    width={1/rows}\n                    flexDirection={'row'}\n                    key={'balance_token_'+token}\n                    justifyContent={'flex-start'}\n                  >\n                    <AssetField\n                      token={token}\n                      tokenConfig={{\n                        token:token\n                      }}\n                      fieldInfo={{\n                        name:'icon',\n                        props:{\n                          mr:[1,2],\n                          ml:[1,4],\n                          width:['1.4em','2em'],\n                          height:['1.4em','2em']\n                        }\n                      }}\n                    />\n                    <AssetField\n                      {...this.props}\n                      token={token}\n                      tokenConfig={{\n                        token:token\n                      }}\n                      fieldInfo={{\n                        name:'tokenBalance',\n                        props:{\n                          fontSize:[0,2],\n                          fontWeight:500,\n                          color:'cellText'\n                        }\n                      }}\n                    />\n                  </Flex>\n                ) )\n              }\n          </Flex>\n        );\n      });\n\n      return (\n        <Modal isOpen={this.props.isOpen}>\n          <ModalCard closeFunc={this.props.closeModal}>\n            <ModalCard.Header title={'Account overview'}></ModalCard.Header>\n            <ModalCard.Body>\n              <Flex\n                width={[\"auto\", \"40em\"]}\n                flexDirection={'column'}\n                alignItems={'center'}\n                justifyContent={'center'}>\n                <Flex\n                  flexDirection={'column'}\n                  alignItems={'center'}\n                  justifyContent={'center'}\n                  my={[2,3]}>\n                  <Box style={{'wordBreak': 'break-word'}}>\n                    <EthAddress address={this.props.account} />\n                  </Box>\n                </Flex>\n                <Flex\n                  mb={3}\n                  width={'100%'}\n                  alignItems={'center'}\n                  maxWidth={['100%','30em']}\n                  flexDirection={'column'}\n                >\n                  <Heading.h4\n                    textAlign={'center'}\n                  >\n                    Balances\n                  </Heading.h4>\n                  { renderBalances }\n                </Flex>\n              </Flex>\n            </ModalCard.Body>\n\n            <ModalCard.Footer>\n              {(this.props.context.active || (this.props.context.error && this.props.context.connectorName)) && (\n                <ButtonLoader\n                  buttonProps={{className:styles.gradientButton,borderRadius:'2rem',mt:[4,8],minWidth:['95px','145px'],size:['auto','medium']}}\n                  handleClick={ async () => { await this.logout() } }\n                  buttonText={'Logout wallet'}\n                  isLoading={this.state.logout}\n                >\n                </ButtonLoader>\n              )}\n            </ModalCard.Footer>\n          </ModalCard>\n        </Modal>\n      );\n    }\n    return null;\n  }\n}\n\nexport default AccountModal;\n","import React, { Component } from 'react';\nimport styles from './MenuAccount.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ShortHash from \"../utilities/components/ShortHash\";\nimport { Flex, Icon, Image, Link, Text } from \"rimble-ui\";\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport AccountModal from \"../utilities/components/AccountModal\";\n\nclass MenuAccount extends Component {\n\n  state = {\n    isModalOpen: null,\n    idleTokenBalance: null\n  };\n\n  // Utils\n  idleGovToken = null;\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.idleGovToken = this.functionsUtil.getIdleGovToken();\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadIdleTokenBalance();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const accountChanged = prevProps.account !== this.props.account;\n    if (accountChanged){\n      this.loadIdleTokenBalance();\n    }\n  }\n\n  async loadIdleTokenBalance(){\n    const idleGovTokenEnabled = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','enabled']);\n    if (idleGovTokenEnabled){\n      let idleTokenBalance = this.functionsUtil.BNify(0);\n      const [\n        balance,\n        unclaimed\n      ] = await Promise.all([\n        this.idleGovToken.getBalance(this.props.account),\n        this.idleGovToken.getUnclaimedTokens(this.props.account)\n      ]);\n\n      if (balance && unclaimed){\n        idleTokenBalance = this.functionsUtil.BNify(balance).plus(unclaimed);\n      }\n\n      return this.setState({\n        idleTokenBalance\n      });\n    }\n    return null;\n  }\n\n  toggleModal = (modalName) => {\n    this.setState(state => ({...state, isModalOpen: (state.isModalOpen===modalName ? null : modalName) }));\n  }\n\n  render() {\n    const walletProvider = this.functionsUtil.getStoredItem('walletProvider',false,null);\n    const connectorInfo = walletProvider ? this.functionsUtil.getGlobalConfig(['connectors',walletProvider.toLowerCase()]) : null;\n    const walletIcon = connectorInfo && connectorInfo.icon ? connectorInfo.icon : walletProvider ? `${walletProvider.toLowerCase()}.svg` : null;\n\n    return (\n      this.props.account ? (\n        <Flex\n          width={1}\n          flexDirection={['column','row']}\n          alignItems={['flex-start','center']}\n        >\n          <Flex\n            p={0}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n            onClick={e => this.toggleModal('account')}\n          >\n            {\n              connectorInfo ? (\n                <Image\n                  width={'2em'}\n                  height={'2em'}\n                  mr={[2,'0.5rem']}\n                  display={'inline-flex'}\n                  src={`images/${walletIcon}`}\n                  alt={walletProvider.toLowerCase()}\n                />\n              ) : (\n                <Icon\n                  size={'2em'}\n                  mr={[0,'0.5rem']}\n                  color={'copyColor'}\n                  name={'AccountCircle'}\n                />\n              )\n            }\n            <ShortHash\n              fontSize={2}\n              fontWeight={3}\n              color={'copyColor'}\n              hash={this.props.account}\n            />\n          </Flex>\n          \n          {\n            this.state.idleTokenBalance && \n              <Flex\n                ml={[0,3]}\n                width={'auto'}\n              >\n                <Link\n                  style={{\n                    textDecoration:'none'\n                  }}\n                  className={styles.balanceButton}\n                  onClick={ e => this.props.setGovModal(true) }\n                >\n                  <Flex\n                    alignItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mr={1}\n                      width={'1.7em'}\n                      height={'1.7em'}\n                      display={'inline-flex'}\n                      src={`images/tokens/IDLE.png`}\n                    />\n                    <Text\n                      fontSize={2}\n                      color={'white'}\n                      fontWeight={500}\n                    >\n                      {this.state.idleTokenBalance.toFixed(2)} IDLE\n                    </Text>\n                  </Flex>\n                </Link>\n              </Flex>\n          }\n          <AccountModal\n            {...this.props}\n            isOpen={this.state.isModalOpen==='account'}\n            closeModal={e => this.toggleModal('account') }\n          />\n        </Flex>\n      ) : (\n        <Flex\n          width={1}\n          justifyContent={'flex-start'}\n        >\n          <CardIconButton\n            icon={'Power'}\n            {...this.props}\n            text={'Connect'}\n            handleClick={this.props.connectAndValidateAccount}\n          />\n        </Flex>\n      )\n    );\n  }\n}\n\nexport default MenuAccount;\n","import React from \"react\";\nimport ModalCard from './ModalCard';\nimport RoundButton from '../../RoundButton/RoundButton';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport TxProgressBar from '../../TxProgressBar/TxProgressBar';\nimport { Text, Modal, Flex, Image, Link, Icon } from \"rimble-ui\";\n\nclass GovModal extends React.Component {\n\n  state = {\n    total:null,\n    balance:null,\n    txStatus:null,\n    unclaimed:null,\n    processing: {\n      txHash:null,\n      loading:false\n    }\n  }\n\n  // Utils\n  functionsUtil = null;\n  idleGovToken = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.idleGovToken = this.functionsUtil.getIdleGovToken();\n  }\n\n  loadTokenInfo = async () => {\n    const [\n      balance,\n      unclaimed\n    ] = await Promise.all([\n      this.idleGovToken.getBalance(this.props.account),\n      this.idleGovToken.getUnclaimedTokens(this.props.account)\n    ]);\n\n    let total = this.functionsUtil.BNify(0);\n    if (balance && unclaimed){\n      total = this.functionsUtil.BNify(balance).plus(unclaimed);\n    }\n\n    this.setState({\n      total,\n      balance,\n      unclaimed\n    });\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n    this.loadTokenInfo();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    // const txStatusChanged = prevState.txStatus !== this.state.txStatus;\n    // if (txStatusChanged && this.state.txStatus === 'success'){\n    //   this.loadTokenInfo();\n    // }\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      txStatus:null,\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  claim = async () => {\n    const callback = (tx,error) => {\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'claim',\n        eventCategory: 'Governance',\n        eventLabel: tx.status ? tx.status : error\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      const newState = {\n        processing: {\n          txHash:null,\n          loading:false\n        },\n        txStatus:tx.status ? tx.status : 'error',\n      };\n\n      if (tx.status === 'success'){\n        newState.balance = this.state.unclaimed;\n        newState.unclaimed = this.BNify(0);\n\n        if (typeof this.props.claimCallback === 'function'){\n          this.props.claimCallback();\n        }\n      }\n\n      this.setState(newState);\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.idleGovToken.claimRewards(callback,callbackReceipt);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n  }\n\n  closeModal = async (action) => {\n    this.props.closeModal();\n  }\n\n  render() {\n    return (\n      <Modal\n        isOpen={this.props.isOpen}\n      >\n        <ModalCard\n          bgLayer={true}\n          mainColor={'white'}\n          minWidth={['auto','420px']}\n          closeFunc={this.props.closeModal}\n          background={'radial-gradient(76.02% 75.41% at 1.84% 0%, rgb(162, 196, 246) 0%, rgb(10, 79, 176) 100%)'}\n        >\n          <ModalCard.Header\n            pt={3}\n            titleProps={{\n              color:'white'\n            }}\n            title={'Your IDLE balance'}\n            borderBottom={'1px solid rgba(255,255,255,0.2)'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body\n            px={3}\n          >\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Image\n                mt={2}\n                width={'3em'}\n                height={'3em'}\n                src={'images/tokens/IDLE.png'}\n              />\n              <Text\n                mt={2}\n                fontSize={7}\n                color={'white'}\n                fontWeight={500}\n              >\n                {this.state.total ? this.state.total.toFixed(2) : '-'}\n              </Text>\n              <Text\n                mb={2}\n                fontSize={3}\n                color={'white'}\n                fontWeight={400}\n              >\n                {\n                  this.state.unclaimed && this.state.unclaimed.gt(0) ? 'You can now claim your IDLE tokens!' : 'You don\\'t have any IDLE to claim'\n                }\n              </Text>\n              <Flex\n                pb={2}\n                mb={3}\n                width={1}\n                flexDirection={'column'}\n                borderBottom={'1px solid rgba(255,255,255,0.2)'}\n              >\n                <Flex\n                  mb={2}\n                  width={1}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  <Text\n                    color={'white'}\n                    fontWeight={500}\n                  >\n                    Balance:\n                  </Text>\n                  <Text\n                    color={'white'}\n                    fontWeight={500}\n                  >\n                    {this.state.balance ? this.state.balance.toFixed(4) : '-'}\n                  </Text>\n                </Flex>\n                <Flex\n                  width={1}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  <Text\n                    color={'white'}\n                    fontWeight={500}\n                  >\n                    Unclaimed:\n                  </Text>\n                  <Text\n                    color={'white'}\n                    fontWeight={500}\n                  >\n                    {this.state.unclaimed ? this.state.unclaimed.toFixed(4) : '-'}\n                  </Text>\n                </Flex>\n                <Link\n                  href={`/#${this.functionsUtil.getGlobalConfig(['governance','baseRoute'])}`}\n                >\n                  <Flex\n                    zIndex={10}\n                    position={'relative'}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontSize={2}\n                      color={'white'}\n                      fontWeight={400}\n                    >\n                      Go to governance\n                    </Text>\n                    <Icon\n                      ml={1}\n                      size={'1em'}\n                      color={'white'}\n                      name={\"OpenInNew\"}\n                    />\n                  </Flex>\n                </Link>\n              </Flex>\n              {\n                this.state.unclaimed && this.state.unclaimed.gt(0) && \n                  <Flex\n                    mb={3}\n                    width={1}\n                    zIndex={10}\n                    position={'relative'}\n                    alignItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      // Sending transaction\n                      this.state.processing && this.state.processing.loading ? (\n                        <TxProgressBar\n                          textColor={'white'}\n                          web3={this.props.web3}\n                          cancelTextColor={'moon-gray'}\n                          cancelTextHoverColor={'white'}\n                          waitText={`Claim estimated in`}\n                          hash={this.state.processing.txHash}\n                          endMessage={`Finalizing Claim request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      ) : (\n                        <RoundButton\n                          buttonProps={{\n                            color:'blue',\n                            width:[1,'45%'],\n                            mainColor:'white',\n                            contrastColor:'blue',\n                            disabled:!this.state.unclaimed || this.state.unclaimed.lte(0)\n                          }}\n                          handleClick={this.claim.bind(this)}\n                        >\n                          Claim\n                        </RoundButton>\n                      )\n                    }\n                  </Flex>\n              }\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default GovModal;","import Batcher from 'web3-batched-send';\nimport FunctionsUtil from './FunctionsUtil';\nimport VesterABI from '../contracts/Vester.json';\n\n// const env = process.env;\n\nclass GovernanceUtil {\n  // Attributes\n  props = {};\n  functionsUtil = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  getTotalSupply = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getTotalSupply`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n    let totalSupply = await this.functionsUtil.genericContractCall(contractName,'totalSupply');\n    if (totalSupply){\n      totalSupply = this.functionsUtil.fixTokenDecimals(totalSupply,18);\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,totalSupply,null);\n    }\n\n    return null;\n  }\n\n  getTokensBalance = async (account=null) => {\n\n    account = account ? account : this.props.account;\n    if (account){\n\n      // Check for cached data\n      const cachedDataKey = `getTokensBalance_${account}`;\n      const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.functionsUtil.BNify(cachedData).isNaN()){\n        return cachedData;\n      }\n\n      const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n      const balance = await this.functionsUtil.getContractBalance(contractName, account);\n      if (balance && !this.functionsUtil.BNify(balance).isNaN()){\n        return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,this.functionsUtil.BNify(balance));\n      }\n    }\n    return null;\n  }\n\n  getVestingContract = async (account=null) => {\n    account = account ? account : this.props.account;\n    const vestingContract = await this.functionsUtil.genericContractCall('VesterFactory','vestingContracts',[account]);\n\n    if (parseInt(vestingContract) === 0){\n      return null;\n    }\n    // Init vesting contract\n    await this.props.initContract('VestingContract',vestingContract,VesterABI);\n    return vestingContract;\n  }\n\n  delegateVesting = async (account=null,delegate=null,callback=null,callbackReceipt=null) => {\n    account = account ? account : this.props.account;\n    const founderVesting = await this.getVestingContract(account);\n    if (founderVesting){\n      // await this.functionsUtil.contractMethodSendWrapper('IDLE','delegate',[delegate]);\n      return await this.functionsUtil.contractMethodSendWrapper('VestingContract','setDelegate',[delegate],callback,callbackReceipt);\n    }\n    return null;\n  }\n\n  getVestingAmount = async (account=null) => {\n    account = account ? account : this.props.account;\n    const founderVesting = await this.getVestingContract(account);\n    if (founderVesting){\n      let vestingAmount = await this.functionsUtil.genericContractCall('VestingContract','vestingAmount');\n      if (vestingAmount){\n        return this.functionsUtil.BNify(vestingAmount);\n      }\n    }\n    return null;\n  }\n\n  getCurrentDelegate = async (account=null) => {\n\n    account = account ? account : this.props.account;\n    if (account){\n\n      // Check for cached data\n      const cachedDataKey = `getCurrentDelegate_${account}`;\n      const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData){\n        return cachedData;\n      }\n\n      const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n      const delegate = await this.functionsUtil.genericContractCall(contractName, 'delegates', [account]);\n\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,delegate);\n    }\n\n    return null;\n  }\n\n  getCurrentVotes = async (account=null) => {\n\n    account = account ? account : this.props.account;\n    if (account){\n      // Check for cached data\n      const cachedDataKey = `getCurrentVotes_${account}`;\n      const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData){\n        return cachedData;\n      }\n\n      const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n      const votes = await this.functionsUtil.genericContractCall(contractName, 'getCurrentVotes', [account]);\n      if (votes && !this.functionsUtil.BNify(votes).isNaN() ){\n        return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,this.functionsUtil.BNify(votes));\n      }\n    }\n\n    return null;\n  }\n\n  queueProposal = async (proposalId,callback=null,callbackReceipt=null) => {\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    await this.functionsUtil.contractMethodSendWrapper(contractName,'queue',[this.functionsUtil.toBN(proposalId)],callback,callbackReceipt);\n  }\n\n  executeProposal = async (proposalId,callback=null,callbackReceipt=null) => {\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    await this.functionsUtil.contractMethodSendWrapper(contractName,'execute',[this.functionsUtil.toBN(proposalId)],callback,callbackReceipt);\n  }\n\n  proposeAndVoteFor = async (targets, values, signatures, calldatas, description) => {\n    const batcher = new Batcher(this.props.web3,'0x741A4dCaD4f72B83bE9103a383911d78362611cf');\n\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    const contract = this.functionsUtil.getContractByName(contractName);\n\n    const txs = [\n      {\n        to:contract._address,\n        method:contract.methods.propose,\n        args:[targets, values, signatures, calldatas, description]\n      },\n      {\n        to:contract._address,\n        method:contract.methods.castVote,\n        args:[this.functionsUtil.BNify(3), true],\n      }\n    ];\n\n    batcher(txs);\n  }\n\n  propose = async (targets, values, signatures, calldatas, description, callback=null,callbackReceipt=null) => {\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    return await this.props.contractMethodSendWrapper(contractName, 'propose', [targets, values, signatures, calldatas, description], null, callback, callbackReceipt);\n  }\n\n  castVote = async (proposalId,support,callback=null,callbackReceipt=null) => {\n    proposalId = this.functionsUtil.toBN(proposalId);\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    return await this.props.contractMethodSendWrapper(contractName, 'castVote', [proposalId, support], null, callback, callbackReceipt);\n  }\n\n  setDelegate = async (delegate,callback=null,callbackReceipt=null) => {\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n    return await this.props.contractMethodSendWrapper(contractName, 'delegate', [delegate], null, callback, callbackReceipt);\n  }\n\n  getDelegatesChanges = async () => {\n\n    const lastBlockNumber = await this.props.web3.eth.getBlockNumber();\n\n    const delegationsCalls = [];\n    const blocksPerCall = 100000;\n    const fromBlock = this.functionsUtil.getGlobalConfig(['governance','startBlock']);\n    const delegatesContractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n\n    for (var blockNumber = fromBlock; blockNumber < lastBlockNumber; blockNumber+=blocksPerCall) {\n      const toBlock = Math.min(blockNumber+blocksPerCall,lastBlockNumber);\n      delegationsCalls.push(this.functionsUtil.getContractPastEvents(delegatesContractName,'DelegateChanged', {fromBlock: blockNumber, toBlock}))\n    }\n\n    const all_delegations = await Promise.all(delegationsCalls);\n\n    return all_delegations.reduce( (delegations,d) => {\n      delegations = delegations.concat(d);\n      return delegations;\n    },[]);\n  }\n\n  getDelegatesVotesChanges = async () => {\n\n    const lastBlockNumber = await this.props.web3.eth.getBlockNumber();\n\n    const delegationsCalls = [];\n    const blocksPerCall = 100000;\n    const fromBlock = this.functionsUtil.getGlobalConfig(['governance','startBlock']);\n    const delegatesContractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n\n    for (var blockNumber = fromBlock; blockNumber < lastBlockNumber; blockNumber+=blocksPerCall) {\n      const toBlock = Math.min(blockNumber+blocksPerCall,lastBlockNumber);\n      delegationsCalls.push(this.functionsUtil.getContractPastEvents(delegatesContractName,'DelegateVotesChanged', {fromBlock: blockNumber, toBlock}))\n    }\n\n    const all_delegations = await Promise.all(delegationsCalls);\n\n    return all_delegations.reduce( (delegations,d) => {\n      delegations = delegations.concat(d);\n      return delegations;\n    },[]);\n  }\n\n  getDelegates = async (limit=null) => {\n\n    // Check for cached data\n    const cachedDataKey = `getDelegates`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const [\n      all_votes,\n      totalSupply,\n      delegations,\n    ] = await Promise.all([\n      this.getVotes(),\n      this.getTotalSupply(),\n      this.getDelegatesVotesChanges()\n    ]);\n\n    const delegateAccounts = {};\n    delegations.forEach(e => {\n      const { delegate, newBalance } = e.returnValues;\n      delegateAccounts[delegate] = newBalance;\n    });\n\n    let delegates = [];\n    Object.keys(delegateAccounts).forEach((account) => {\n      const votes = +delegateAccounts[account];\n      if (votes === 0) return;\n      delegates.push({\n        votes: votes/1e18,\n        delegate: account\n      });\n    });\n\n    delegates.sort((a, b) => {\n      return a.votes < b.votes ? 1 : -1;\n    });\n\n    delegates.forEach( (d,index) => {\n      d.rank = index+1;\n      d.votes = d.votes.toFixed(6);\n      d.vote_weight = (100 * (d.votes / parseFloat(totalSupply))).toFixed(4) + '%';\n      d.proposals = all_votes.filter( v => (v.voter.toLowerCase() === d.delegate.toLowerCase()) ).length;\n    });\n\n    this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,delegates);\n\n    if (limit !== null){\n      delegates = delegates.splice(0,limit);\n    }\n\n    return delegates;\n  }\n\n  getProposalParams = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getProposalParams`;\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const govContractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    let [\n      proposalThreshold,\n      proposalMaxOperations\n    ] = await Promise.all([\n      this.functionsUtil.genericContractCall(govContractName,'proposalThreshold'),\n      this.functionsUtil.genericContractCall(govContractName,'proposalMaxOperations')\n    ]);\n\n    if (proposalThreshold){\n      proposalThreshold = this.functionsUtil.BNify(proposalThreshold);\n    }\n\n    const params = {\n      proposalThreshold,\n      proposalMaxOperations\n    };\n\n    return this.functionsUtil.setCachedData(cachedDataKey,params);\n  }\n\n  getVotes = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getVotes`;\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const governanceContractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n\n    let votes = await this.functionsUtil.getContractPastEvents(governanceContractName,'VoteCast', {fromBlock: 0, toBlock: 'latest'});\n\n    if (votes){\n      votes = votes.map( e => {\n        const {\n            voter,\n            votes,\n            support,\n            proposalId\n        } = e.returnValues;\n        return {\n          votes,\n          voter,\n          support,\n          proposalId\n        }\n      });\n    }\n\n    return this.functionsUtil.setCachedData(cachedDataKey,votes);\n  }\n\n  getProposals = async (voted_by=null) => {\n\n    // Check for cached data\n    const cachedDataKey = 'getProposals';\n    let cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      if (voted_by !== null){\n        cachedData = cachedData.filter( p => (p.votes.find( v => (v.voter.toLowerCase() === voted_by.toLowerCase()) )) );\n      }\n      return cachedData;\n    }\n\n    const enumerateProposalState = (state) => {\n      const proposalStates = ['Pending', 'Active', 'Canceled', 'Defeated', 'Succeeded', 'Queued', 'Expired', 'Executed'];\n      return proposalStates[state];\n    };\n\n    const governanceContractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    const proposalCount = await this.functionsUtil.genericContractCall(governanceContractName,'proposalCount');\n\n    if (!proposalCount){\n      return [];\n    }\n\n    const proposalGets = [];\n    const proposalStateGets = [];\n    for (const i of Array.from(Array(parseInt(proposalCount)),(n,i) => i+1)) {\n      proposalGets.push(this.functionsUtil.genericContractCall(governanceContractName,'proposals',[i]));\n      proposalStateGets.push(this.functionsUtil.genericContractCall(governanceContractName,'state',[i]));\n    }\n\n    const [\n      votes,\n      proposals,\n      proposalStates,\n      proposalQueuedEvents,\n      proposalCreatedEvents,\n      proposalCanceledEvents,\n      proposalExecutedEvents,\n    ] = await Promise.all([\n      this.getVotes(),\n      Promise.all(proposalGets),\n      Promise.all(proposalStateGets),\n      this.functionsUtil.getContractPastEvents(governanceContractName,'ProposalQueued', {fromBlock: 0, toBlock: 'latest'}),\n      this.functionsUtil.getContractPastEvents(governanceContractName,'ProposalCreated', {fromBlock: 0, toBlock: 'latest'}),\n      this.functionsUtil.getContractPastEvents(governanceContractName,'ProposalCanceled', {fromBlock: 0, toBlock: 'latest'}),\n      this.functionsUtil.getContractPastEvents(governanceContractName,'ProposalExecuted', {fromBlock: 0, toBlock: 'latest'}),\n    ]);\n\n    /*\n    console.log(\n      votes,\n      proposals,\n      proposalStates,\n      proposalQueuedEvents,\n      proposalCreatedEvents,\n      proposalCanceledEvents,\n      proposalExecutedEvents\n    );\n    */\n\n    proposals.reverse();\n    proposalStates.reverse();\n    proposalQueuedEvents.reverse();\n    proposalCreatedEvents.reverse();\n    proposalCanceledEvents.reverse();\n    proposalExecutedEvents.reverse();\n\n    await this.functionsUtil.asyncForEach(proposals, async (p,i) => {\n      const proposalId = parseInt(p.id);\n\n      const createdEvent = proposalCreatedEvents[i];\n      const canceledEvent = proposalCanceledEvents.find( e => (parseInt(e.returnValues.id) === proposalId ) );\n      const executedEvent = proposalExecutedEvents.find( e => (parseInt(e.returnValues.id) === proposalId ) );\n      const queuedEvent = proposalQueuedEvents.find( e => (parseInt(e.returnValues.id) === proposalId ) );\n\n      // Init states array\n      p.states = [];\n\n      // Create created state\n      const createdBlockInfo = await this.props.web3.eth.getBlock(createdEvent.blockNumber);\n      const createdState = {\n        state: \"Pending\",\n        end_time: createdBlockInfo.timestamp,\n        start_time: createdBlockInfo.timestamp,\n        trx_hash: createdEvent.transactionHash\n      };\n      p.states.push(createdState);\n\n      // Push active state\n      const activeState = {\n        state: \"Active\",\n        end_time: null,\n        start_time: createdState.start_time,\n        trx_hash: null\n      };\n      p.states.push(activeState);\n\n      // Push canceled state\n      if (canceledEvent){\n        const canceledBlockInfo = await this.props.web3.eth.getBlock(canceledEvent.blockNumber);\n        const canceledState = {\n          state: \"Canceled\",\n          end_time: null,\n          start_time: canceledBlockInfo.timestamp,\n          trx_hash: canceledEvent.transactionHash\n        }\n        // Update previous state end_time\n        p.states[p.states.length-1].end_time = canceledBlockInfo.timestamp;\n        p.states.push(canceledState);\n      } else {\n        // Push queued state\n        if (queuedEvent){\n          const queuedBlockInfo = await this.props.web3.eth.getBlock(queuedEvent.blockNumber);\n          const succeededState = {\n            state: \"Succeeded\",\n            end_time: null,\n            trx_hash: null,\n            start_time: queuedBlockInfo.timestamp,\n          };\n\n          const queuedState = {\n            state: \"Queued\",\n            end_time: null,\n            start_time: queuedBlockInfo.timestamp,\n            trx_hash: queuedEvent.transactionHash\n          };\n\n          // Update previous state end_time\n          p.states[p.states.length-1].end_time = queuedBlockInfo.timestamp;\n          // Push Succeeded state\n          p.states.push(succeededState);\n          // Push queued state\n          p.states.push(queuedState);\n        }\n\n        // Push executed state\n        if (executedEvent){\n          const executedBlockInfo = await this.props.web3.eth.getBlock(executedEvent.blockNumber);\n          const executedState = {\n            state: \"Executed\",\n            end_time: null,\n            start_time: executedBlockInfo.timestamp,\n            trx_hash: executedEvent.transactionHash\n          }\n          // Update previous state end_time\n          p.states[p.states.length-1].end_time = executedBlockInfo.timestamp;\n          p.states.push(executedState);\n        }\n      }\n\n      // Check for defeated or expired\n      p.state = enumerateProposalState(proposalStates[i]);\n      const foundState = p.states.find( s => (s.state === p.state) );\n      if (!foundState){\n        const endBlockInfo = await this.props.web3.eth.getBlock(p.endBlock);\n        const endState = {\n          state: p.state,\n          end_time: null,\n          trx_hash: null,\n          start_time: endBlockInfo.timestamp,\n        }\n        // Update previous state end_time\n        p.states[p.states.length-1].end_time = endBlockInfo.timestamp;\n        p.states.push(endState);\n      }\n\n      p.votes = votes.filter( v => (parseInt(v.proposalId)===proposalId) );\n\n      const { description, signatures, targets, values, calldatas } = createdEvent.returnValues;\n      p.timestamp = createdBlockInfo ? createdBlockInfo.timestamp : null;\n\n      \n      // Idle\n      p.title = description.split(/# |\\n|↵/g)[0].replace(/^#/,'') || 'Untitled';\n      p.description = description.split(/\\n|↵/g);\n      p.description.shift();\n      p.description = p.description.join(\"\\n\");\n\n      // Compound\n      // p.title = description.split(/# |\\n/g)[1] || 'Untitled';\n      // p.description = description.split(/# |\\n/g)[2] || 'No description.';\n\n      // Save proposal\n      proposals[i] = {\n        eta:p.eta,\n        actions:{\n          values,\n          targets,\n          calldatas,\n          signatures\n        },\n        id:proposalId,\n        title:p.title,\n        state:p.state,\n        votes:p.votes,\n        states:p.states,\n        executed:p.executed,\n        endBlock:p.endBlock,\n        canceled:p.canceled,\n        forVotes:p.forVotes,\n        proposer:p.proposer,\n        timestamp:p.timestamp,\n        startBlock:p.startBlock,\n        description:p.description,\n        againstVotes:p.againstVotes\n      };\n    });\n\n    this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,proposals)\n    \n    if (voted_by === null) {\n      return proposals;\n    } else {\n      return proposals.filter( p => (p.votes.find( v => (v.voter.toLowerCase() === voted_by.toLowerCase()) )) );\n    }\n  }\n}\n\nexport default GovernanceUtil;","import React, { Component } from 'react';\nimport GovernanceUtil from '../utilities/GovernanceUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport { Flex, Text, Button, Icon, Checkbox, Input } from \"rimble-ui\";\n\nclass DelegateVesting extends Component {\n\n  state = {\n    processing:{\n      txHash:null,\n      loading:false\n    },\n    newDelegate:'',\n    delegatee:null,\n    vestingAmount:null,\n    currentDelegate:null,\n    delegateAddressValid:false,\n    delegateDifferentWallet:false,\n    vestingContractDelegated:false\n  };\n\n  // Utils\n  idleGovToken = null;\n  functionsUtil = null;\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n\n    this.functionsUtil = this.governanceUtil.functionsUtil;\n    this.idleGovToken = this.functionsUtil.getIdleGovToken();\n  }\n\n  async loadData(){\n    const idleGovTokenEnabled = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','enabled']);\n    if (idleGovTokenEnabled && this.props.account){\n      const [\n        delegatesChanges,\n        currentDelegate,\n        vestingContract,\n      ] = await Promise.all([\n        this.governanceUtil.getDelegatesChanges(),\n        this.governanceUtil.getCurrentDelegate(this.props.account),\n        this.governanceUtil.getVestingContract(this.props.account),\n      ]);\n\n      // Init flags\n      let delegatee = null;\n      let vestingAmount = null;\n      let vestingContractDelegated = false;\n\n      if (vestingContract){\n        // Take vesting amount\n        vestingAmount = await this.governanceUtil.getVestingAmount(this.props.account);\n\n        // Check Vesting Contract Delegated\n        const lastDelegateTx = delegatesChanges.filter( d => (d.returnValues.delegator.toLowerCase() === vestingContract.toLowerCase() ) ).pop();\n        delegatee = lastDelegateTx ? lastDelegateTx.returnValues.toDelegate : false;\n        vestingContractDelegated = delegatee && delegatee !== '0x0000000000000000000000000000000000000000';\n      }\n\n      return this.setState({\n        delegatee,\n        vestingAmount,\n        currentDelegate,\n        vestingContractDelegated\n      });\n    }\n    return null;\n  }\n\n  /*\n  async delegateTokens(){\n\n    const callback = (tx,error) => {\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Governance',\n        eventAction: 'delegateTokens',\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n\n      const newState = {\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      };\n\n      const txSucceeded = tx.status === 'success';\n      if (txSucceeded){\n        newState.idleTokenDelegated = true;\n        this.loadData();\n      }\n\n      this.setState(newState);\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.governanceUtil.setDelegate(this.props.account,callback,callbackReceipt);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n  }\n  */\n\n  async delegateVesting(revoke=false){\n\n    let delegate = this.state.delegateDifferentWallet ? this.state.newDelegate : this.props.account;\n    if (revoke){\n      delegate = '0x'+'0'.repeat(40);\n    }\n\n    const delegateValid = this.functionsUtil.checkAddress(delegate);\n    if (!delegateValid){\n      return false;\n    }\n\n    const callback = (tx,error) => {\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Governance',\n        eventAction: 'delegateVesting',\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      const newState = {\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      };\n\n      const txSucceeded = tx.status === 'success';\n      if (txSucceeded){\n        newState.delegatee=delegate;\n        newState.delegateDifferentWallet=false;\n        newState.vestingContractDelegated=!revoke;\n        this.loadData();\n      }\n\n      this.setState(newState);\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.governanceUtil.delegateVesting(this.props.account,delegate,callback,callbackReceipt);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n  }\n\n  changeDelegate(e){\n    const newDelegate = e.target.value;\n    const delegateAddressValid = this.functionsUtil.checkAddress(newDelegate);\n    this.setState({\n      newDelegate,\n      delegateAddressValid\n    });\n  }\n\n  setDelegateDifferentWallet(delegateDifferentWallet){\n    this.setState({\n      delegateDifferentWallet\n    });\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const accountChanged = prevProps.account !== this.props.account;\n    if (accountChanged){\n      this.loadData();\n    }\n  }\n\n  render() {\n    return this.state.vestingAmount ? (\n      <Flex\n        p={2}\n        mt={3}\n        width={1}\n        borderRadius={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        backgroundColor={'#f3f6ff'}\n        boxShadow={'0px 0px 0px 1px rgba(0,54,255,0.3)'}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Text\n            mb={1}\n            fontSize={3}\n            fontWeight={500}\n            color={'#3f4e9a'}\n            textAlign={'center'}\n          >\n            You have {this.state.vestingAmount.div(1e18).toFixed(5)} {this.functionsUtil.getGlobalConfig(['governance','props','tokenName'])} in the Vesting Contract\n          </Text>\n          {\n            (this.state.vestingContractDelegated && this.state.delegatee && !this.state.delegateDifferentWallet) ? (\n              <Text\n                mb={1}\n                fontWeight={500}\n                color={'#3f4e9a'}\n                fontSize={'15px'}\n                textAlign={'center'}\n              >\n                Currently your votes are delegated to {this.state.delegatee}\n              </Text>\n            ) : (\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Text\n                  mb={1}\n                  fontWeight={500}\n                  color={'#3f4e9a'}\n                  fontSize={'15px'}\n                  textAlign={'center'}\n                >\n                  {\n                    this.state.delegateDifferentWallet ? 'Follow the next steps to delegate your tokens:' : 'Press the button below to delegate the votes in the vesting contract to yourself:'\n                  }\n                </Text>\n                {\n                  this.state.delegateDifferentWallet && (\n                    <Flex\n                      mb={2}\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    > \n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <Icon\n                          size={'1.5em'}\n                          name={ this.state.delegateAddressValid ? 'CheckBox' : 'LooksOne'}\n                          color={ this.state.delegateAddressValid ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                        />\n                        <Text\n                          ml={1}\n                          fontWeight={500}\n                          fontSize={'15px'}\n                          color={'#3f4e9a'}\n                          textAlign={'left'}\n                        >\n                          Insert delegate address\n                        </Text>\n                      </Flex>\n                      <Flex\n                        mt={2}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <Icon\n                          size={'1.5em'}\n                          name={'LooksTwo'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          ml={1}\n                          fontWeight={500}\n                          fontSize={'15px'}\n                          color={'#3f4e9a'}\n                          textAlign={'left'}\n                        >\n                          Delegate Vesting\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  )\n                }\n              </Flex>\n            )\n          }\n        </Flex>\n        {\n          this.state.delegateDifferentWallet && (\n            <Input\n              mb={2}\n              min={0}\n              type={'text'}\n              required={true}\n              borderRadius={2}\n              fontWeight={500}\n              textAlign={'center'}\n              width={['100%','30em']}\n              boxShadow={'none !important'}\n              value={this.state.newDelegate}\n              placeholder={`Insert delegate address`}\n              onChange={this.changeDelegate.bind(this)}\n              border={`1px solid ${this.props.theme.colors.divider}`}\n            />\n          )\n        }\n        {\n          this.state.processing && this.state.processing.loading ? (\n            <Flex\n              width={1}\n              flexDirection={'column'}\n            >\n              <TxProgressBar\n                web3={this.props.web3}\n                waitText={`Delegate estimated in`}\n                hash={this.state.processing.txHash}\n                endMessage={`Finalizing delegate request...`}\n                cancelTransaction={this.cancelTransaction.bind(this)}\n              />\n            </Flex>\n          ) : (this.state.vestingContractDelegated && !this.state.delegateDifferentWallet) ? (\n            <Button\n              size={'small'}\n              mainColor={'red'}\n              onClick={ e => this.delegateVesting(true) }\n            >\n              REVOKE DELEGATE\n            </Button>\n          )\n          /*\n          : !this.state.idleTokenDelegated && !this.state.delegateDifferentWallet ? (\n            <Button\n              size={'small'}\n              onClick={ e => this.delegateTokens() }\n            >\n              DELEGATE TOKENS\n            </Button>\n          )*/\n          : (!this.state.vestingContractDelegated || this.state.delegateDifferentWallet) && (\n            <Button\n              size={'small'}\n              onClick={ e => this.delegateVesting(false) }\n              disabled={ this.state.delegateDifferentWallet && !this.state.delegateAddressValid }\n            >\n              DELEGATE VESTING\n            </Button>\n          )\n        }\n        <Checkbox\n          mt={1}\n          required={false}\n          color={'#f3f6ff'}\n          label={`Delegate to different wallet`}\n          checked={this.state.delegateDifferentWallet}\n          onChange={ e => this.setDelegateDifferentWallet(e.target.checked) }\n        />\n      </Flex>\n    ) : null;\n  }\n}\n\nexport default DelegateVesting;\n","import theme from '../theme';\nimport ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport MenuAccount from '../MenuAccount/MenuAccount';\nimport RoundButton from '../RoundButton/RoundButton';\nimport GovModal from \"../utilities/components/GovModal\";\nimport GovernanceUtil from '../utilities/GovernanceUtil';\nimport { Box, Flex, Text, Icon, Button } from \"rimble-ui\";\nimport DelegateVesting from '../DelegateVesting/DelegateVesting';\n\nclass DashboardHeader extends Component {\n\n  state = {\n    unclaimed:null,\n    vestingAmount:null,\n    govModalOpened:false\n  }\n\n  // Utils\n  idleGovToken = null;\n  functionsUtil = null;\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n\n    this.functionsUtil = this.governanceUtil.functionsUtil;\n    this.idleGovToken = this.functionsUtil.getIdleGovToken();\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async loadData(){\n    const idleGovTokenEnabled = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','enabled']);\n    if (idleGovTokenEnabled && this.props.account){\n      const unclaimed = await this.idleGovToken.getUnclaimedTokens(this.props.account);\n      return this.setState({\n        unclaimed\n      });\n    }\n    return null;\n  }\n\n  setConnector = async (connectorName) => {\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventAction: 'logout',\n      eventCategory: 'Connect'\n    });\n\n    if (typeof this.props.setConnector === 'function'){\n      this.props.setConnector(connectorName);\n    }\n\n    return await this.props.context.setConnector(connectorName);\n  }\n\n  async exit(){\n    this.props.goToSection('/',false);\n  }\n\n  setGovModal(govModalOpened){\n    this.setState({\n      govModalOpened\n    });\n  }\n\n  render() {\n    const isDashboard = this.props.isDashboard;\n    const isGovernance = this.props.isGovernance;\n    const governanceRoute = this.functionsUtil.getGlobalConfig(['governance','baseRoute']);\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n    const dashboardRoute = this.functionsUtil.getGlobalConfig(['dashboard','baseRoute'])+'/'+Object.keys(this.props.availableStrategies)[0];\n    return (\n      <Box\n        mb={3}\n      >\n        <Flex\n          pb={2}\n          width={1}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n          alignItems={['flex-end','center']}\n          borderBottom={`1px solid ${theme.colors.divider}`}\n        >\n          <MenuAccount\n            {...this.props}\n            setGovModal={this.setGovModal.bind(this)}\n          />\n          <Flex\n            mr={2}\n            flexDirection={['column','row']}\n            alignItems={['flex-end','center']}\n          >\n            {\n              governanceEnabled && isDashboard ? (\n                <RoundButton\n                  buttonProps={{\n                    mainColor:'redeem',\n                    size:this.props.isMobile ? 'small' : 'medium'\n                  }}\n                  handleClick={ (e) => { this.props.goToSection(governanceRoute,false) } }\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      mr={[1,2]}\n                      size={'1.6em'}\n                      color={'white'}\n                      name={'ExitToApp'}\n                    />\n                    <Text\n                      fontWeight={3}\n                      color={'white'}\n                      fontSize={[2,3]}\n                    >\n                      Governance\n                    </Text>\n                  </Flex>\n                </RoundButton>\n              ) : isGovernance && (\n                <RoundButton\n                  buttonProps={{\n                    mainColor:'redeem',\n                    size:this.props.isMobile ? 'small' : 'medium'\n                  }}\n                  handleClick={ (e) => { this.props.goToSection(dashboardRoute,false) } }\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      mr={[1,2]}\n                      size={'1.6em'}\n                      color={'white'}\n                      name={'ExitToApp'}\n                    />\n                    <Text\n                      fontWeight={3}\n                      color={'white'}\n                      fontSize={[2,3]}\n                    >\n                      Dashboard\n                    </Text>\n                  </Flex>\n                </RoundButton>\n              )\n            }\n            {\n              /*\n              <Link\n                display={'flex'}\n                onClick={ (e) => { this.exit() } }\n                style={{\n                  alignItems:'center',\n                  justifyContent:['flex-end','space-between']\n                }}\n              >\n                <Icon\n                  mr={2}\n                  size={'1.6em'}\n                  name={'ExitToApp'}\n                  color={'copyColor'}\n                />\n                <Text\n                  fontSize={2}\n                  fontWeight={3}\n                  color={'copyColor'}\n                >\n                  Exit\n                </Text>\n              </Link>\n              */\n            }\n          </Flex>\n        </Flex>\n        {\n          this.state.unclaimed && this.state.unclaimed.gt(0) &&\n            <Flex\n              p={2}\n              mt={3}\n              width={1}\n              borderRadius={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n              backgroundColor={'#f3f6ff'}\n              flexDirection={['column','row']}\n              boxShadow={'0px 0px 0px 1px rgba(0,54,255,0.3)'}\n            >\n              <Text\n                fontWeight={500}\n                color={'#3f4e9a'}\n                fontSize={'15px'}\n                textAlign={'center'}\n              >\n                IDLE Governance Token is now available, \n                <ExtLink\n                  ml={1}\n                  fontWeight={500}\n                  color={'primary'}\n                  fontSize={'15px'}\n                  hoverColor={'primary'}\n                  href={'https://idlefinance.medium.com/idle-governance-is-live-9b55e8f407d7'}\n                >\n                  discover more\n                </ExtLink>! You have {this.state.unclaimed.toFixed(4)} IDLE tokens to claim.\n              </Text>\n              <Button\n                ml={[0,2]}\n                mt={[2,0]}\n                size={'small'}\n                onClick={ e => this.setGovModal(true) }\n              >\n                CLAIM NOW\n              </Button>\n            </Flex>\n        }\n        {\n          this.props.isGovernance && \n            <DelegateVesting\n              {...this.props}\n            />\n        }\n        <GovModal\n          {...this.props}\n          isOpen={this.state.govModalOpened}\n          claimCallback={this.loadData.bind(this)}\n          closeModal={e => this.setGovModal(false) }\n        />\n      </Box>\n    );\n  }\n}\n\nexport default DashboardHeader;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Flex, Card, Icon, Text } from 'rimble-ui';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardMenu from '../DashboardMenu/DashboardMenu';\n\n// Import page components\nimport Stats from '../Stats/Stats';\nimport Utils from '../Utils/Utils';\nimport AssetPage from '../AssetPage/AssetPage';\nimport RoundButton from '../RoundButton/RoundButton';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CurveStrategy from '../CurveStrategy/CurveStrategy';\nimport WelcomeModal from \"../utilities/components/WelcomeModal\";\nimport TooltipModal from \"../utilities/components/TooltipModal\";\nimport MigrateModal from \"../utilities/components/MigrateModal\";\nimport UpgradeModal from \"../utilities/components/UpgradeModal\";\nimport DashboardHeader from '../DashboardHeader/DashboardHeader';\n\nclass Dashboard extends Component {\n  state = {\n    menu:[],\n    baseRoute:null,\n    activeModal:null,\n    currentRoute:null,\n    pageComponent:null,\n    currentSection:null,\n    selectedSection:null,\n    tokensToMigrate:null,\n    showResetButton:false,\n    selectedSubsection:null,\n    oldIdleTokensToMigrate:null,\n    protocolsTokensBalances:null,\n  };\n\n  timeoutId = null;\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    window.functionsUtil = this.functionsUtil;\n  }\n\n  async loadMenu() {\n    const baseRoute = this.functionsUtil.getGlobalConfig(['dashboard','baseRoute']);\n    const strategies = this.functionsUtil.getGlobalConfig(['strategies']);\n    const menu = Object.keys(strategies).filter( s => ( !strategies[s].comingSoon ) ).map(strategy => ({\n        submenu:[],\n        color:'#fff',\n        selected:false,\n        route:baseRoute+'/'+strategy,\n        label:strategies[strategy].title,\n        image:strategies[strategy].icon,\n        imageInactive:strategies[strategy].iconInactive,\n        bgColor:strategies[strategy].color,\n        component:strategies[strategy].component\n      })\n    );\n\n\n    const curveConfig = this.functionsUtil.getGlobalConfig(['curve']);\n\n    // Add Curve\n    if (curveConfig.enabled){\n      const curveParams = Object.assign({\n        submenu:[],\n        selected:false,\n        component:CurveStrategy,\n      },curveConfig.params);\n\n      menu.push(curveParams);\n    }\n\n    // Add Stats\n    menu.push(\n      {\n        icon:'Equalizer',\n        label:'Stats',\n        bgColor:'#21f36b',\n        color:'dark-gray',\n        component:Stats,\n        selected:false,\n        route:'/dashboard/stats',\n        submenu:[]\n      }\n    );\n\n    // Add tools\n    menu.push(\n      {\n        icon:'Build',\n        label:'Tools',\n        color:'dark-gray',\n        component:Utils,\n        selected:false,\n        route:'/dashboard/tools',\n        bgColor:this.props.theme.colors.primary,\n        submenu:Object.values(this.functionsUtil.getGlobalConfig(['tools'])).filter( u => (u.enabled) )\n      }\n    );\n\n    await this.setState({\n      menu\n    });\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  openTooltipModal = (modalTitle,modalContent) => {\n\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'UI',\n      eventAction: modalTitle,\n      eventLabel: 'TooltipModal'\n    });\n\n    this.setState({\n      modalTitle,\n      modalContent\n    },() => {\n      this.setActiveModal('tooltip');\n    })\n  }\n\n  setActiveModal = (activeModal) => {\n    this.setState({\n      activeModal\n    });\n  }\n\n  async loadParams() {\n    const { match: { params } } = this.props;\n\n    const baseRoute = this.functionsUtil.getGlobalConfig(['dashboard','baseRoute']);\n    let currentRoute = baseRoute;\n\n    let pageComponent = null;\n    let selectedToken = null;\n    let currentSection = null;\n    let selectedStrategy = null;\n\n    // Set strategy\n    if (params.section){\n      currentSection = params.section;\n      const param1 = params.param1;\n      const param2 = params.param2;\n\n      const section_is_strategy = Object.keys(this.props.availableStrategies).includes(currentSection.toLowerCase());\n      const param1_is_strategy = param1 && Object.keys(this.props.availableStrategies).includes(param1.toLowerCase());\n\n      if (section_is_strategy || param1_is_strategy){\n        selectedStrategy = section_is_strategy ? currentSection : param1;\n        currentRoute += '/'+selectedStrategy;\n\n        // Set token\n        const param1_is_token = param1 && Object.keys(this.props.availableStrategies[selectedStrategy]).includes(param1.toUpperCase());\n        const param2_is_token = param2 && Object.keys(this.props.availableStrategies[selectedStrategy]).includes(param2.toUpperCase());\n        if (param1_is_token || param2_is_token){\n          selectedToken = param1_is_token ? param1.toUpperCase() : param2.toUpperCase();\n          currentRoute += '/'+selectedToken;\n\n          if (section_is_strategy){\n            pageComponent = AssetPage;\n          }\n        }\n      } else {\n        currentRoute += '/'+params.section;\n\n        if (params.param1 && params.param1.length){\n          currentRoute += '/'+params.param1;\n        }\n\n        // if (params.param2 && params.param2.length){\n        //   currentRoute += '/'+params.param2;\n        // }\n      }\n    }\n\n    const menu = this.state.menu;\n\n    let selectedSection = null;\n    let selectedSubsection = null;\n\n    menu.forEach(m => {\n      m.selected = false;\n      const sectionRoute = baseRoute+'/'+params.section;\n      if (currentRoute.toLowerCase() === m.route.toLowerCase() || ( !m.submenu.length && m.route.toLowerCase() === sectionRoute.toLowerCase() )){\n        m.selected = true;\n        if (pageComponent === null){\n          pageComponent = m.component;\n        }\n      } else if (m.submenu.length) {\n        m.submenu.forEach(subm => {\n          subm.selected = false;\n          const submRoute = m.route+'/'+subm.route;\n          if (submRoute.toLowerCase() === currentRoute.toLowerCase()){\n            m.selected = true;\n            subm.selected = true;\n\n            // Set component, if null use parent\n            if (pageComponent === null){\n              if (subm.component){\n                pageComponent = subm.component;\n              } else {\n                pageComponent = m.component;\n              }\n            }\n          }\n\n          // Set selected subsection\n          if (subm.selected){\n            selectedSubsection = subm;\n          }\n\n        });\n      }\n\n      // Set selected section\n      if (m.selected){\n        selectedSection = m;\n      }\n    });\n\n    // console.log('pageComponent',params,pageComponent);\n\n    // Exit if no strategy and token selected\n    if (!pageComponent){\n      return this.goToSection('/',false);\n    }\n\n    // console.log('loadParams',selectedStrategy,selectedToken);\n    await this.props.setStrategyToken(selectedStrategy,selectedToken);\n\n    await this.setState({\n      menu,\n      params,\n      baseRoute,\n      currentRoute,\n      pageComponent,\n      currentSection,\n      selectedSection,\n      selectedSubsection\n    });\n  }\n\n  componentWillUnmount(){\n    if (this.timeoutId){\n      window.clearTimeout(this.timeoutId);\n    }\n  }\n\n  async componentWillMount() {\n\n    this.loadUtils();\n    await this.loadMenu();\n    this.loadParams();\n  }\n\n  async componentDidMount() {\n\n    this.timeoutId = window.setTimeout(() => {\n      if (!this.props.accountInizialized || !this.props.contractsInitialized){\n        this.setState({\n          showResetButton:true\n        });\n      }\n    },20000);\n\n    if (!this.props.web3){\n      return this.props.initWeb3();\n    } else if (!this.props.accountInizialized){\n      return this.props.initAccount();\n    } else if (!this.props.contractsInitialized){\n      return this.props.initializeContracts();\n    }\n\n    this.loadUtils();\n    await this.loadMenu();\n    this.loadParams();\n    this.checkModals();\n  }\n\n  async componentDidUpdate(prevProps,prevState) {\n\n    this.loadUtils();\n\n    const prevParams = prevProps.match.params;\n    const params = this.props.match.params;\n\n    if (JSON.stringify(prevParams) !== JSON.stringify(params)){\n      await this.setState({\n        pageComponent:null\n      }, () => {\n        this.loadParams();\n      });\n    }\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const strategyChanged = this.props.selectedStrategy && prevProps.selectedStrategy !== this.props.selectedStrategy;\n    const accountInizialized = this.props.accountInizialized && prevProps.accountInizialized !== this.props.accountInizialized;\n    const contractsInitialized = this.props.contractsInitialized && prevProps.contractsInitialized !== this.props.contractsInitialized;\n\n    if (accountChanged || accountInizialized || contractsInitialized || strategyChanged){\n      this.checkModals();\n    }\n  }\n\n  async checkModals(){\n\n    if (this.props.selectedToken || !this.props.accountInizialized || !this.props.contractsInitialized || !this.props.availableStrategies || !this.props.availableTokens){\n      return null;\n    }\n\n    await this.checkTokensToMigrate();\n    await this.checkWelcomeModal();\n    await this.checkProtocolsTokensBalances();\n  }\n\n  async checkTokensToMigrate(){\n\n    const showUpgradeModal = this.functionsUtil.getStoredItem('dontShowUpgradeModal',false,null) !== null ? false : true;\n    if (this.props.selectedToken || !showUpgradeModal || !this.props.availableTokens){\n      return null;\n    }\n\n    const tokensToMigrate = await this.functionsUtil.getTokensToMigrate();\n    const oldIdleTokensToMigrate = await this.functionsUtil.getProtocolsTokensBalances('idle');\n\n    // console.log('tokensToMigrate',tokensToMigrate);\n    \n    if ((tokensToMigrate && Object.keys(tokensToMigrate).length>0) || (oldIdleTokensToMigrate && Object.keys(oldIdleTokensToMigrate).length>0)){\n      const activeModal = 'upgrade';\n      if (activeModal !== this.state.activeModal){\n        this.setState({\n          activeModal,\n          tokensToMigrate,\n          oldIdleTokensToMigrate\n        });\n\n        return activeModal;\n      }\n    }\n\n    return null;\n  }\n\n  async checkWelcomeModal(){\n    if (!this.props.account || !this.props.accountInizialized || !this.props.contractsInitialized){\n      return null;\n    }\n\n    // Show welcome modal\n    if (this.props.account && this.state.activeModal === null){\n      let welcomeIsOpen = false;\n\n      const welcomeModalProps = this.functionsUtil.getGlobalConfig(['modals','welcome']);\n\n      if (welcomeModalProps.enabled && localStorage){\n\n        // Check the last login of the wallet\n        const currTime = new Date().getTime();\n        const walletAddress = this.props.account.toLowerCase();\n        let lastLogin = localStorage.getItem('lastLogin') ? JSON.parse(localStorage.getItem('lastLogin')) : {};\n\n        // First login\n        if (!lastLogin[walletAddress]){\n          lastLogin[walletAddress] = {\n            'signedUp':false,\n            'lastTime':currTime\n          };\n          welcomeIsOpen = true;\n        // User didn't sign up\n        } else if (!lastLogin[walletAddress].signedUp) {\n          const lastTime = parseInt(lastLogin[walletAddress].lastTime);\n          const timeFromLastLogin = (currTime-lastTime)/1000;\n          welcomeIsOpen = timeFromLastLogin>=welcomeModalProps.frequency; // 1 day since last login\n        }\n\n        if (welcomeIsOpen){\n          lastLogin[walletAddress].lastTime = currTime;\n          this.functionsUtil.setLocalStorage('lastLogin',JSON.stringify(lastLogin));\n        }\n      }\n\n      const activeModal = welcomeIsOpen ? 'welcome' : this.state.activeModal;\n      if (this.state.activeModal !== activeModal){\n        this.setState({\n          activeModal\n        });\n\n        return activeModal;\n      }\n    }\n\n    return null;\n  }\n\n  async checkProtocolsTokensBalances() {\n\n    if (!this.props.account || !this.props.accountInizialized || !this.props.contractsInitialized){\n      return null;\n    }\n\n    // Show migration modal if no other modals are opened\n    const migrateModalEnabled = this.functionsUtil.getGlobalConfig(['modals','migrate','enabled']);\n    const showMigrateModal = this.functionsUtil.getStoredItem('dontShowMigrateModal',false,null) !== null ? false : true;\n\n    if (this.state.activeModal === null && migrateModalEnabled && showMigrateModal && !this.state.protocolsTokensBalances){\n      const protocolsTokensBalances = await this.functionsUtil.getProtocolsTokensBalances();\n      const activeModal = protocolsTokensBalances && Object.keys(protocolsTokensBalances).length>0 ? 'migrate' : null;\n      const newState = {\n        activeModal,\n        protocolsTokensBalances\n      };\n      this.setState(newState);\n      return activeModal;\n    }\n\n    return null;\n  }\n\n  goToSection(section,isDashboard=true){\n\n    // Remove dashboard route\n    if (isDashboard){\n      section = section.replace(this.state.baseRoute +'/','');\n    }\n\n    const newRoute = isDashboard ? this.state.baseRoute +'/' + section : section;\n    window.location.hash=newRoute;\n\n    // Send GA event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'UI',\n      eventAction: 'goToSection',\n      eventLabel: newRoute\n    });\n\n    window.scrollTo(0, 0);\n  }\n\n  logout = async () => {\n    this.props.setConnector('Infura','Infura');\n    await this.props.initWeb3('Infura');\n  }\n\n  changeToken(selectedToken){\n    selectedToken = selectedToken.toUpperCase();\n    if (Object.keys(this.props.availableTokens).includes(selectedToken)){\n      const routeParts = [];\n\n      // Add section\n      if (this.state.currentSection.toLowerCase() !== this.props.selectedStrategy.toLowerCase()){\n        routeParts.push(this.state.currentSection);\n      }\n\n      // Add strategy\n      routeParts.push(this.props.selectedStrategy); \n\n      // Add token\n      routeParts.push(selectedToken);\n\n      this.goToSection(routeParts.join('/'));\n    }\n  }\n\n  render() {\n    const PageComponent = this.state.pageComponent ? this.state.pageComponent : null;\n    return (\n      <Flex\n        width={'100%'}\n        position={'fixed'}\n        flexDirection={'row'}\n        height={[(window.innerHeight-61)+'px','100vh']}\n        backgroundColor={['dashboardBg','white']}\n      >\n        <Flex\n          bottom={0}\n          zIndex={1}\n          width={[1,1/6]}\n          flexDirection={'column'}\n          position={['fixed','relative']}\n        >\n          <Card\n            p={[0,3]}\n            width={['100vw','auto']}\n            height={['auto','100vh']}\n            >\n            <DashboardMenu\n              {...this.props}\n              menu={this.state.menu}\n            />\n          </Card>\n        </Flex>\n        <Flex\n          py={3}\n          px={[3,5]}\n          mb={0}\n          width={[1,5/6]}\n          style={{\n            overflowY:'scroll',\n            overflowX:'hidden'\n          }}\n          flexDirection={'columns'}\n          backgroundColor={'dashboardBg'}\n        >\n          {\n            !this.props.accountInizialized || !this.props.contractsInitialized || !PageComponent ? (\n              <Flex\n                width={1}\n                minHeight={'50vg'}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                {\n                  !this.state.showResetButton ? (\n                    <FlexLoader\n                      textProps={{\n                        textSize:4,\n                        fontWeight:2\n                      }}\n                      loaderProps={{\n                        mb:3,\n                        size:'40px'\n                      }}\n                      flexProps={{\n                        my:3,\n                        flexDirection:'column'\n                      }}\n                      text={ !this.props.accountInizialized ? 'Loading account...' : ( !this.props.contractsInitialized ? 'Loading contracts...' : 'Loading assets...' )}\n                    />\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3,\n                        width:[1,0.35]\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'Warning'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={2}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Idle can't connect to your wallet!<br />Make sure that your wallet is unlocked and try again.\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:3,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.logout.bind(this)}\n                        >\n                          Logout\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  )\n                }\n              </Flex>\n            ) : (\n              <Flex\n                width={1}\n                flexDirection={'column'}\n              >\n                <DashboardHeader\n                  goToSection={this.goToSection.bind(this)}\n                  {...this.props}\n                />\n                {\n                  PageComponent &&\n                    <PageComponent\n                      {...this.props}\n                      match={{ params:{} }}\n                      urlParams={this.state.params}\n                      changeToken={this.changeToken.bind(this)}\n                      goToSection={this.goToSection.bind(this)}\n                      selectedSection={this.state.selectedSection}\n                      selectedSubsection={this.state.selectedSubsection}\n                      openTooltipModal={this.openTooltipModal.bind(this)}\n                      />\n                }\n              </Flex>\n            )\n          }\n        </Flex>\n        <UpgradeModal\n          {...this.props}\n          closeModal={this.resetModal}\n          goToSection={this.goToSection.bind(this)}\n          tokensToMigrate={this.state.tokensToMigrate}\n          isOpen={this.state.activeModal === 'upgrade'}\n          oldIdleTokensToMigrate={this.state.oldIdleTokensToMigrate}\n        />\n        <MigrateModal\n          {...this.props}\n          closeModal={this.resetModal}\n          goToSection={this.goToSection.bind(this)}\n          isOpen={this.state.activeModal === 'migrate'}\n          protocolsTokensBalances={this.state.protocolsTokensBalances}\n        />\n        <TooltipModal\n          closeModal={this.resetModal}\n          title={this.state.modalTitle}\n          content={this.state.modalContent}\n          isOpen={this.state.activeModal === 'tooltip'}\n        >\n        </TooltipModal>\n        <WelcomeModal\n          closeModal={this.resetModal}\n          account={this.props.account}\n          simpleID={this.props.simpleID}\n          network={this.props.network.current}\n          tokenName={this.props.selectedToken}\n          initSimpleID={this.props.initSimpleID}\n          baseTokenName={this.props.selectedToken}\n          isOpen={this.state.activeModal === 'welcome'}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default Dashboard;","import React from \"react\";\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\n\nclass WrongNetworkBanner extends React.Component {\n  render() {\n    const bannerStyle = {\n      position: \"fixed\",\n      bottom: 0,\n      left: 0,\n      right: 0,\n      width: \"100%\",\n      backgroundColor: \"white\",\n      zIndex: 9999\n    };\n\n    return (\n      <Box style={bannerStyle} p={3}>\n        <Flex alignItems={\"center\"}>\n          <Box p={4}>\n            <Icon name=\"Warning\" color=\"gold\" size=\"30\" />\n          </Box>\n          <Flex flexDirection={\"column\"}>\n            <Text fontWeight={\"bold\"}>\n              Looks like you're on the wrong network\n            </Text>\n            <Text>\n              You should be on the {this.props.network.required.name} Ethereum\n              network. You are currently connected to the{\" \"}\n              <Text.span style={{ textTransform: \"capitalize\" }}>\n                {this.props.network.current.name}\n              </Text.span>{\" \"}\n              Network - please switch to the correct network.\n            </Text>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default WrongNetworkBanner;\n","import React from \"react\";\n\nimport WrongNetworkBanner from \"./components/WrongNetworkBanner\";\n\nclass NetworkUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        { this.props.network.isCorrectNetwork === false && this.props.web3\n          ?\n            <WrongNetworkBanner\n              network={this.props.network}\n            />\n          :\n            null\n        }\n      </div>\n    );\n  }\n}\n\nexport default NetworkUtil;\n","import React from \"react\";\nimport { Box, Heading, Text, Modal, Link } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport RimbleUtil from \"@rimble/utils\";\n\nclass NoWeb3BrowserModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2\n          fontSize={4}\n          fontWeight={3}\n          lineHeight={\"1.375em\"}\n          my={3}\n        >\n          Switch browsers to use the Idle App\n        </Heading.h2>\n\n        {RimbleUtil.isMobileDevice() ? (\n          <Text my={4}>\n            You can't use our blockchain features, like increasing the count\n            value, in this browser. We recommend using{\" \"}\n            <Link\n              href=\"https://status.im/\"\n              title=\"status.im website\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Status\n            </Link>\n            ,{\" \"}\n            <Link\n              href=\"https://www.cipherbrowser.com/\"\n              title=\"Cipher Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Cipher\n            </Link>{\" \"}\n            or{\" \"}\n            <Link\n              href=\"https://wallet.coinbase.com/\"\n              title=\"Coinbase Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Coinbase wallet\n            </Link>{\" \"}\n            browsers.\n          </Text>\n        ) : (\n          <Box>\n            <Text my={4}>\n              You can't use our blockchain features, like increasing the\n              count value, in this browser. Switch to{\" \"}\n              <Link\n                href=\"https://brave.com/download/\"\n                title=\"Download Brave browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Brave\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.mozilla.org/\"\n                title=\"Download FireFox browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                FireFox\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.opera.com/download\"\n                title=\"Download Opera Browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Opera\n              </Link>\n              , or{\" \"}\n              <Link\n                href=\"https://www.google.com/chrome/\"\n                title=\"Download Chrome browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Chrome\n              </Link>{\" \"}\n              to continue.\n            </Text>\n\n            <Text>\n              <Text.span bold>Rather use your phone?</Text.span> You can use\n              the Idle App in mobile browser wallets like{\" \"}\n              <Link\n                href=\"https://status.im/\"\n                title=\"status.im website\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Status\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.cipherbrowser.com/\"\n                title=\"Cipher Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Cipher\n              </Link>{\" \"}\n              or{\" \"}\n              <Link\n                href=\"https://wallet.coinbase.com/\"\n                title=\"Coinbase Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Coinbase wallet\n              </Link>\n              .\n            </Text>\n          </Box>\n        )}\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWeb3BrowserModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Flex,\n  Icon,\n  Modal,\n  Link,\n  Button\n} from \"rimble-ui\";\n\nclass NoWalletModal extends React.Component {\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card p={5} maxWidth={\"600px\"}>\n          <Button.Text\n            icononly\n            icon={\"Close\"}\n            color={\"moon-gray\"}\n            position={\"absolute\"}\n            top={0}\n            right={0}\n            mt={3}\n            mr={3}\n            onClick={this.props.closeModal}\n          />\n\n          <Flex flexDirection={\"column\"} justifyContent={\"space-between\"}>\n            <Flex justifyContent={\"center\"} my={4}>\n              <Icon name=\"Warning\" color=\"gold\" size=\"40\" />\n            </Flex>\n\n            <Heading.h2 my={3}>No Wallet Available</Heading.h2>\n\n            <Text my={4}>\n              Your current browser does not have a blockchain connected wallet.\n              Try using MetaMask, Fortmatic, Portis.\n            </Text>\n\n            <Link\n              href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              <Button.Outline size=\"small\">Get MetaMask Extension</Button.Outline>\n            </Link>\n          </Flex>\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWalletModal;\n","// Checks for MetaMask\nconst GeneralUtil = {\n  hasMetaMask: () => {\n    let hasMetaMask = false;\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasMetaMask = typeof window.ethereum.isMetaMask !== \"undefined\";\n    } else if (typeof window.web3 !== 'undefined') {\n      hasMetaMask = typeof window.web3.currentProvider.isMetaMask !== 'undefined' && window.web3.currentProvider.isMetaMask;\n    }\n\n    return hasMetaMask;\n  },\n  isTrustWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isTrust !== 'undefined' && window.web3.currentProvider.isTrust;\n    }\n    return false;\n  },\n  isCoinbaseWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isCoinbaseWallet !== 'undefined' && window.web3.currentProvider.isCoinbaseWallet;\n    }\n    return false;\n  },\n  hasDapper: () => {\n    let hasDapper = typeof window.DapperEthereum !== 'undefined';\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasDapper = typeof window.ethereum.isDapper !== \"undefined\" && window.ethereum.isDapper;\n    }\n\n    return hasDapper;\n  },\n  isOpera: () => {\n    return /Opera|OPR\\//.test(navigator.userAgent);\n  },\n  // Current device is Android\n  isAndroid: () => {\n    const isAndroid = /android/i.test(navigator.userAgent) ? true : false;\n\n    return isAndroid;\n  },\n  // Current device is iOS\n  isIos() {\n    const isIos =\n      /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream\n        ? true\n        : false;\n\n    return isIos;\n  }\n};\n\nexport default GeneralUtil;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Flex,\n  Modal,\n  Button,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\nimport RimbleUtils from \"@rimble/utils\";\n\nclass WrongNetworkModal extends React.Component {\n  renderContent = () => {\n    return (\n      <ModalCard.Body>\n        <Heading.h2 my={3}>\n          Switch to the {this.props.network.required.name} network in{\" \"}\n          {GeneralUtil.hasMetaMask() ? `MetaMask` : `Settings`}\n        </Heading.h2>\n\n        <Text my={4}>\n          The Idle App only works on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {this.props.network.required.name}\n          </Text.span>{\" \"}\n          network. You’re currently on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {\" \"}\n            {this.props.network.current.name}\n          </Text.span>{\" \"}\n          network.\n        </Text>\n\n        {GeneralUtil.hasMetaMask() && !RimbleUtils.isMobileDevice() ? (\n          <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n            <Flex alignItems={\"center\"}>\n              <Box position={\"relative\"} width={\"4em\"}>\n                <Box>\n                  <Loader size={\"3em\"} />\n                </Box>\n              </Box>\n              <Box>\n                <Text fontWeight={4}>Waiting for the right network...</Text>\n                <Text fontWeight={2}>\n                  Go to your Wallet and to switch\n                </Text>\n              </Box>\n            </Flex>\n          </Box>\n        ) : null}\n\n        <Box display={[\"block\", \"none\"]}>\n          <Button onClick={this.props.closeModal} width={1}>\n            OK\n          </Button>\n        </Box>\n      </ModalCard.Body>\n    )\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <React.Fragment>\n            {this.renderContent()}\n          </React.Fragment>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default WrongNetworkModal;\n","import React from \"react\";\nimport { Heading, Text, Box, Flex, Icon } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nfunction TransactionFeeModal(props) {\n  return (\n    <Box>\n      <ModalCard.Header title={'Transaction fees, what are you paying for?'} subtitle={'You need to pay a fee to use the Ethereum blockchain.'} subtitle2={'This pays for someone to process your transaction and store the data.'}></ModalCard.Header>\n      <ModalCard.Body>\n        <Flex flexDirection={['column', 'row']}\n          justifyContent={\"space-between\"}\n          my={[0, 4]}>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"Fingerprint\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Undeniable proof</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You get a public record of any funds you send or receive, a bit like\n              a deed for a house.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"EnhancedEncryption\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unbreakable encryption</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              Your funds can only ever go to your intended recipients.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"AccountBalance\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n              <Icon\n                name=\"NotInterested\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unparalleled control</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You can pay or get paid without using any banks or companies.\n            </Text>\n          </Box>\n        </Flex>\n      </ModalCard.Body>\n    </Box>\n  );\n}\n\nexport default TransactionFeeModal;\n","import React from 'react'\nimport moment from 'moment';\nimport connectors from '../App/connectors';\nimport { useWeb3Context } from 'web3-react';\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport globalConfigs from '../configs/globalConfigs';\nimport styles from './Web3ConnectionButtons.module.scss';\nimport { Button, Box, Text, Flex, Link } from 'rimble-ui';\n\nconst LOG_ENABLED = false;\nconst customLog = (...props) => { if (LOG_ENABLED) console.log(moment().format('HH:mm:ss'),...props); };\n\nexport default function Web3ConnectionButtons(props) {\n  const context = useWeb3Context();\n\n  if (!context.active && !context.error) {\n    customLog('context loading', context);\n  } else if (context.error) {\n    customLog('context error', context);\n  } else {\n    customLog('context success', context);\n  }\n  const setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n    if (localStorage) {\n      localStorage.setItem('walletProvider', walletProvider);\n      localStorage.setItem('connectorName', connectorName);\n    }\n\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector(connectorName,walletProvider);\n    }\n    \n    // Close modal\n    if (typeof props.connectionCallback === 'function'){\n      props.connectionCallback();\n    }\n\n    return connectorName;\n    // return await context.setConnector(connectorName);\n  };\n  const unsetConnector = async () => {\n    context.unsetConnector();\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector('Infura','Infura');\n    }\n  };\n\n  // Show provider fields to detect in-app browser\n  // alert(JSON.stringify(Object.keys(window.web3.currentProvider)));\n    \n  const isOpera = GeneralUtil.isOpera();\n  const isDapper = GeneralUtil.hasDapper();\n  const isMetamask = GeneralUtil.hasMetaMask();\n  const isTrustWallet = GeneralUtil.isTrustWallet();\n  const isCoinbaseWallet = GeneralUtil.isCoinbaseWallet();\n  const browserWalletDetected = isMetamask || isOpera || isDapper || isCoinbaseWallet || isTrustWallet;\n  \n  const allowedConnectors = props.allowedConnectors;\n  const registerPage = props.registerPage;\n\n  if (connectors.Portis) {\n    if (registerPage) {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = true;\n    } else {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = false;\n    }\n  }\n\n  let basicConnectorsName = Object.keys(connectors).filter(c => c !== 'Infura');\n\n  if (allowedConnectors) {\n    basicConnectorsName = basicConnectorsName.filter(n => allowedConnectors.map((v) => { return v.toLowerCase(); }).indexOf(n.toLowerCase()) !== -1 );\n  }\n\n  const buttons = basicConnectorsName.map(connectorName => {\n\n    switch (connectorName) {\n      case 'Injected':\n        if (browserWalletDetected) {\n          let name = null;\n          if (isMetamask) {\n            name = 'Metamask';\n          } else if (isOpera) {\n            name = 'Opera';\n          } else if (isDapper){\n            name = 'Dapper';\n          } else if (isCoinbaseWallet){\n            name = 'Coinbase';\n          } else if (isTrustWallet){\n            name = 'TrustWallet';\n          }\n\n          const connectorInfo = globalConfigs.connectors[name.toLowerCase()];\n          if (connectorInfo && connectorInfo.enabled){\n            const walletIcon = connectorInfo.icon ? connectorInfo.icon : `${name.toLowerCase()}.svg`;\n            return (\n              <Flex\n                width={1}\n                key={`wallet_${name}`}\n                style={{\n                  flex:'0 100%',\n                  justifyContent:'flex-start'\n                }}\n              >\n                <ImageButton\n                  caption={name}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  imageSrc={`images/${walletIcon}`}\n                  imageProps={{width:'auto',height:'42px'}}\n                  handleClick={ async () => await setConnector(connectorName,name)}\n                  subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${name}` }\n                />\n              </Flex>\n            )\n          }\n          return null;\n        } else {\n          const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n          return (\n            <ImageButton\n              isMobile={true}\n              caption={'Browser Wallet'}\n              key={`wallet_${connectorName}`}\n              imageSrc={`images/browser-wallet.png`}\n              imageProps={{width:'auto',height:'42px'}}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using a browser wallet`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n      default:\n        const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n        if (connectorInfo && connectorInfo.enabled){\n          const walletIcon = connectorInfo.iconModal ? connectorInfo.iconModal : (connectorInfo.icon ? connectorInfo.icon : `${connectorName.toLowerCase()}.svg`);\n\n          let caption = connectorInfo.name ? connectorInfo.name : connectorName;\n          return (\n            <ImageButton\n              isMobile={true}\n              caption={caption}\n              key={`wallet_${connectorName}`}\n              imageSrc={`images/${walletIcon}`}\n              imageProps={{width:'auto',height:'42px'}}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${connectorName}`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n        return null;\n    }\n  });\n\n  return (\n    <Box width={[1]}>\n      <Flex flexDirection={'column'} alignItems={\"center\"}>\n        {context.error && (\n          <Text.p textAlign=\"center\">\n            An error occurred, are you using an Ethereum browser such as\n            <Link href=\"https://metamask.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Metamask &nbsp;\n            </Link>\n             or\n            <Link href=\"https://www.meetdapper.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Dapper\n            </Link>\n            ?\n            If you do not have an Ethereum wallet follow the\n            \"I'm new to Ethereum\" flow when connecting.\n            If you do have a wallet, click Reset and retry one of the wallet listed below,\n            Generic wallet option is used for Ethereum browsers only.\n          </Text.p>\n        )}\n        {(context.active || (context.error && context.connectorName)) && context.connectorName !== 'Infura' && (\n          <Button.Outline\n            width={[1/2]}\n            className={[styles.button]}\n            mb={[1, 3]}\n            size={'large'}\n            key={'reset'}\n            onClick={async () => await unsetConnector()}\n          >\n            {context.active ? \"Deactivate Connector\" : \"Reset\"}\n          </Button.Outline>\n        )}\n      </Flex>\n      <Flex flexDirection={'row'} flexWrap={'wrap'} justifyContent={'space-between'}>\n        {buttons}\n      </Flex>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport {\n  Box,\n  Text,\n  Link,\n  Icon,\n  Flex,\n  Modal,\n  Loader,\n  Button,\n  Heading\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard.js';\nimport styles from './Header.module.scss';\nimport FunctionsUtil from '../FunctionsUtil.js';\nimport ImageButton from '../../ImageButton/ImageButton.js';\nimport TransactionFeeModal from \"./TransactionFeeModal.js\";\nimport Web3ConnectionButtons from \"../../Web3ConnectionButtons/Web3ConnectionButtons.js\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass ConnectionModal extends React.Component {\n  // TODO save pref in localstorage and do not show 'Before connecting' info every time\n  state = {\n    currentSection:null,\n    showTxFees: false,\n    closeRemainingTime:null,\n    newToEthereumChoice: null,\n    showInstructions: false\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  toggleShowTxFees = e => {\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  }\n\n  setStoredSection = () => {\n    let currentSection = null;\n    if (localStorage){\n      currentSection = localStorage.getItem('currentSection');\n      if (currentSection){\n        this.setState({\n          currentSection\n        });\n      }\n    }\n    return currentSection;\n  }\n\n  componentDidMount = () => {\n    this.loadUtils();\n    this.setStoredSection();\n  }\n\n  componentDidUpdate = () => {\n    this.loadUtils();\n  }\n\n  resetModal = e => {\n    this.setState({\n      showTxFees: false,\n      newToEthereumChoice:null,\n      showInstructions: false,\n      currentSection:null\n    });\n  }\n\n  setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Connect',\n      eventAction: 'select_wallet',\n      eventLabel: walletProvider\n    });\n\n    if (this.props.setConnector && typeof this.props.setConnector === 'function'){\n      this.props.setConnector(connectorName,walletProvider);\n    }\n\n    // Set Wallet choice\n    this.setState({\n      newToEthereumChoice: connectorName\n    });\n\n    this.closeCountdown();\n\n    return connectorName;\n\n    // return await window.RimbleWeb3_context.setConnector(connectorName);\n  }\n\n  closeCountdown = () => {\n    const closeRemainingTime = this.state.closeRemainingTime ? this.state.closeRemainingTime-1 : 5;\n    if (!closeRemainingTime){\n      this.closeModal();\n    } else {\n      setTimeout(() => { this.closeCountdown() },1000);\n    }\n    this.setState({\n      closeRemainingTime\n    });\n  }\n\n  setWalletChoice = (e,choice) => {\n    e.preventDefault();\n    this.setState({\n      newToEthereumChoice: choice\n    });\n  }\n\n  closeModal = () => {\n    // Reset modal\n    this.resetModal();\n    // Set latest stored sections\n    this.setStoredSection();\n    // Close modal\n    this.props.closeModal();\n  }\n\n  setCurrentSection = (e,currentSection) => {\n    e.preventDefault();\n    this.setState({\n      currentSection\n    });\n\n    if (currentSection!=='instructions'){\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Connect',\n        eventAction: 'select_mode',\n        eventLabel: currentSection\n      });\n\n      this.functionsUtil.setLocalStorage('currentSection',currentSection);\n    }\n  }\n\n  renderModalContent = () => {\n\n    const TOSacceptance = (\n      <Box>\n        <Text textAlign={'center'} fontSize={1} py={[2,3]}>By connecting, I accept Idle's <RouterLink to=\"/terms-of-service\" color={'blue'} style={{textDecoration:'underline'}} target={'_blank'} rel=\"nofollow noopener noreferrer\">Terms of Service</RouterLink></Text>\n      </Box>\n    );\n\n    const showConnectionButtons = this.state.currentSection === 'wallet';\n    const newToEthereum = this.state.currentSection === 'new';\n    const showInstructions = this.state.currentSection === 'instructions';\n\n    if (showInstructions){\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Before you connect'} subtitle={'Connecting lets you use Idle via your Ethereum account.'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              flexDirection={['column', 'row']}\n              justifyContent={\"space-between\"}\n              my={[0, 3]}\n            >\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"Public\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>The blockchain is public</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  Your Ethereum account activity is public on the\n                  blockchain. Choose an account you don’t mind being\n                  linked with your activity here.\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"AccountBalanceWallet\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have some Ether for fees</Heading>\n                <Text fontSize={1} mb={3} textAlign={'center'}>\n                  You’ll need Ether to pay transaction fees. Buy Ether\n                  from exchanges like Coinbase or directly via enabled wallet\n                  such as Portis or Dapper.<br />\n                  <Link\n                    title=\"Learn about Ethereum transaction fees\"\n                    fontWeight={'0'}\n                    color={'blue'}\n                    textAlign={'center'}\n                    hoverColor={'blue'}\n                    href=\"#\"\n                    onClick={this.toggleShowTxFees}\n                  >\n                    What are transaction fees?\n                  </Link>\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"People\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have the right account ready</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  If you have multiple Ethereum accounts, check that the\n                  one you want to use is active in your browser.\n                </Text>\n              </Box>\n            </Flex>\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    if (showConnectionButtons) {\n      return (\n        <Box>\n          <ModalCard.Header title={'Select your Wallet'} subtitle={'And get started with Idle.'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex width={1} px={[0,5]} flexDirection={'column'} justifyContent={'center'}>\n              <Web3ConnectionButtons isMobile={this.props.isMobile} connectionCallback={ this.closeModal } setConnector={ this.setConnector } width={1/2} size={ this.props.isMobile ? 'medium' : 'large' } />\n            </Flex>\n            <Flex pt={3} alignItems={'center'} justifyContent={'center'}>\n              <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'new') }>I don't have a wallet</Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (newToEthereum) {\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Let\\'s create your first Ethereum wallet'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            {\n              !this.state.newToEthereumChoice ? (\n                <Flex width={1} px={[0,4]} flexDirection={'column'} justifyContent={'center'}>\n                  <Box mb={3}>\n                    <Text fontSize={[2,3]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                      Connect with e-mail or phone number?\n                    </Text>\n                  </Box>\n                  <Flex mb={3} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                    <ImageButton isMobile={this.props.isMobile} imageSrc={'images/email.svg'} imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}} caption={'Use e-mail'} subcaption={'Powered by Portis'} handleClick={ e => this.setConnector('Portis','Portis') } />\n                    <ImageButton isMobile={this.props.isMobile} imageSrc={'images/mobile.svg'} imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}} caption={'Use phone number'} subcaption={'Powered by Fortmatic'} handleClick={ e => this.setConnector('Fortmatic','Fortmatic') }/>\n                  </Flex>\n                  <Flex alignItems={'center'} justifyContent={'center'}>\n                    <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'wallet') }>I already have a wallet</Link>\n                  </Flex>\n                </Flex>\n              ) : (\n                <Box>\n                  <Text fontSize={3} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                    We are connecting you to {this.state.newToEthereumChoice} wallet provider...\n                  </Text>\n                  <Flex\n                    mt={2}\n                    justifyContent={'center'}\n                    alignItems={'center'}\n                    textAlign={'center'}>\n                    <Loader size=\"40px\" /> <Text ml={2} color={'dark-gray'}>Closing in {this.state.closeRemainingTime} seconds...</Text>\n                  </Flex>\n                </Box>\n              )\n            }\n            { TOSacceptance }\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    return (\n      <React.Fragment>\n        <ModalCard.Header title={'Connect to Idle'} icon={'images/idle-mark.png'}></ModalCard.Header>\n        <ModalCard.Body>\n          {\n            <Flex width={1} px={[0,4]} flexDirection={'column'} justifyContent={'center'}>\n              <Box mb={3}>\n                <Text fontSize={[2,3]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                  How do you want to connect to Idle?\n                </Text>\n              </Box>\n              <Flex mb={[2,3]} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                <ImageButton isMobile={ this.props.isMobile } imageSrc={'images/ethereum-wallet.svg'} imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'} } caption={`Ethereum wallet`} subcaption={'Choose your favourite'} handleClick={ e => this.setCurrentSection(e,'wallet') } />\n                <ImageButton isMobile={ this.props.isMobile } imageSrc={'images/new-wallet.png'} imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'} } caption={`New wallet`} subcaption={'Use email / phone'} handleClick={ e => this.setCurrentSection(e,'new') } />\n              </Flex>\n            </Flex>\n          }\n          { TOSacceptance }\n        </ModalCard.Body>\n      </React.Fragment>\n    );\n  }\n\n  renderFooter = () => {\n\n    if (this.state.newToEthereumChoice){\n      return null;\n    }\n\n    return (\n      <ModalCard.Footer>\n        { (!this.state.currentSection) ? (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={ e => this.setCurrentSection(e,'instructions') }\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              READ INSTRUCTIONS\n            </Button>\n          ) : (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={this.resetModal}\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              BACK\n            </Button>\n          )\n        }\n      </ModalCard.Footer>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          {this.state.showTxFees === false ? (\n            <React.Fragment>\n              {this.renderModalContent()}\n              {this.renderFooter()}\n            </React.Fragment>\n          ) : (\n            <Box>\n              <TransactionFeeModal />\n              {this.renderFooter()}\n            </Box>\n          )}\n\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionModal;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Modal,\n  Flex,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\n\nclass ConnectionPendingModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>Connect Ethereum account</Heading.h2>\n\n        <Text my={4}>\n          Confirm the request that's just appeared. If you can't see a\n          request, open your{\" \"}\n          {GeneralUtil.hasMetaMask()\n            ? `MetaMask extension`\n            : `eth wallet settings`}\n          .\n        </Text>\n\n        <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n          <Flex alignItems={\"center\"}>\n            <Box position={\"relative\"} width={\"4em\"}>\n              <Box>\n                <Loader size={\"3em\"} />\n              </Box>\n            </Box>\n            <Box>\n              <Text fontWeight={4}>\n                Waiting for connection confirmation...\n              </Text>\n              <Text fontWeight={2}>This won’t cost you any Ether</Text>\n            </Box>\n          </Flex>\n        </Box>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionPendingModal;\n","import React from \"react\";\nimport { Heading, Text, Flex, Button, Modal } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nclass UserRejectedConnectionModal extends React.Component {\n  sendMessageAgain = event => {\n    this.props.closeModal();\n    this.props.initAccount();\n  };\n\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>\n          You can't continue without connecting your account\n        </Heading.h2>\n\n        <Text my={4}>\n          To use our blockchain features you need to confirm the connection\n          request.\n        </Text>\n\n        <Flex flexDirection={['column', 'row']} justifyContent={\"flex-end\"} mt={4}>\n          <Button.Outline onClick={this.props.closeModal} mr={[0, 3]} mb={[3, 0]}>\n            Cancel connection\n          </Button.Outline>\n          <Button onClick={this.sendMessageAgain}>\n            Try again\n          </Button>\n        </Flex>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default UserRejectedConnectionModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Modal,\n  Flex,\n  Box,\n  Button,\n  EthAddress,\n  QR,\n  Link\n} from \"rimble-ui\";\nimport TransactionFeeModal from \"./TransactionFeeModal\";\n\nclass LowFundsModal extends React.Component {\n  state = {\n    showSecondary: false,\n    showTxFees: false\n  };\n\n  toggleQRVisible = () => {\n    this.setState({\n      showSecondary: !this.state.showSecondary\n    });\n  };\n\n  toggleShowTxFees = e => {\n    console.log(\"showTxFees\", this.state.showTxFees);\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  };\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card\n          pr={[0, 5]}\n          pl={[0, 5]}\n          pt={[\"48px\", 5]}\n          pb={[\"97px\", 4]}\n          maxWidth={\"960px\"}\n          overflow={\"hidden\"}\n          position={\"relative\"}\n        >\n          <Box position={\"relative\"}>\n            <Flex\n              justifyContent={\"flex-end\"}\n              mr={[0, -5]}\n              mt={[\"-48px\", -5]}\n              position={\"absolute\"}\n              top={\"0\"}\n              left={\"0\"}\n              right={\"0\"}\n              bg={\"white\"}\n              zIndex={\"1\"}\n            >\n              <Button.Text\n                icononly\n                icon={\"Close\"}\n                color={\"moon-gray\"}\n                onClick={this.props.closeModal}\n              />\n            </Flex>\n          </Box>\n\n          {this.state.showSecondary === false &&\n          this.state.showTxFees === false ? (\n            <Box>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start primary content */}\n\n                  <Box alignContent=\"center\" py={3}>\n                    <Heading.h2>\n                      Not enough Ether for transaction fees\n                    </Heading.h2>\n                  </Box>\n                  <Text mb={4}>\n                    This is a blockchain action so you’ll have to pay a\n                    transaction fee. A few dollars worth of Ether should be\n                    enough but fees do change based on how busy the network is.{\" \"}\n                    <strong>Fund your account and try again.</strong>{\" \"}\n                    <Link\n                      title=\"Learn about Ethereum transaction fees\"\n                      as={\"a\"}\n                      href=\"#\"\n                      onClick={this.toggleShowTxFees}\n                    >\n                      What are transaction fees?\n                    </Link>\n                  </Text>\n\n                  <Heading.h3>How to add funds</Heading.h3>\n\n                  <Flex\n                    alignItems={\"stretch\"}\n                    mx={0}\n                    mb={[4, 5]}\n                    mt={[3, 4]}\n                    flexWrap={[\"wrap\", \"no-wrap\"]}\n                  >\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>Buy ETH from an exchange</Heading.h5>\n                          <Text fontSize=\"1\">\n                            You can buy ETH from exchanges like Coinbase and\n                            send it to your account. If you don’t already have\n                            a Coinbase account, it can take a while to get set\n                            up.\n                          </Text>\n                        </Box>\n\n                        <Button.Outline my={3}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"OpenInNew\" mr={2} />\n                            Go to CoinBase\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>\n                            Send ETH from another account\n                          </Heading.h5>\n                          <Text fontSize=\"1\">\n                            If you have ETH in another Ethereum account, you\n                            can send it to this account using your public\n                            Ethereum address or QR code.\n                          </Text>\n                        </Box>\n                        <Button.Outline my={3} onClick={this.toggleQRVisible}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"FilterCenterFocus\" mr={2} />\n                            Show account QR code\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                  </Flex>\n                  {/* End primary content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex pt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button onClick={this.props.closeModal} width={[1, \"auto\"]}>\n                    Back to Idle\n                  </Button>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showSecondary ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start secondary content */}\n                  <Flex my={3} justifyContent={\"center\"}>\n                    <QR\n                      size={130}\n                      value={\n                        this.props.account ? this.props.account : \"1234512345\"\n                      }\n                    />\n                  </Flex>\n\n                  <EthAddress my={4} address={this.props.account} />\n                  <Flex mb={3} />\n                  {/* End secondary content */}\n                </Box>\n              </Box>\n\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start secondary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex mt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleQRVisible}\n                  >\n                    Go back\n                  </Button.Outline>\n                </Flex>\n                {/* End secondary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showTxFees ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start tx fee content */}\n                  <TransactionFeeModal />\n                  {/* End tx fee content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex\n                  pt={4}\n                  justifyContent={[\"center\", \"flex-end\"]}\n                  borderTop={1}\n                  borderColor={\"#eee\"}\n                >\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleShowTxFees}\n                  >\n                    Go Back\n                  </Button.Outline>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default LowFundsModal;\n","import React from \"react\";\n\nimport NoWeb3BrowserModal from \"./components/NoWeb3BrowserModal\";\nimport NoWalletModal from \"./components/NoWalletModal\";\nimport WrongNetworkModal from \"./components/WrongNetworkModal\";\n\nimport ConnectionModal from \"./components/ConnectionModal\";\nimport ConnectionPendingModal from \"./components/ConnectionPendingModal\";\nimport UserRejectedConnectionModal from \"./components/UserRejectedConnectionModal\";\n\nimport LowFundsModal from \"./components/LowFundsModal\";\n\nclass ConnectionModalUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        <NoWeb3BrowserModal\n          closeModal={this.props.modals.methods.closeNoWeb3BrowserModal}\n          isOpen={this.props.modals.data.noWeb3BrowserModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <NoWalletModal\n          closeModal={this.props.modals.methods.closeNoWalletModal}\n          isOpen={this.props.modals.data.noWalletModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <WrongNetworkModal\n          closeModal={this.props.modals.methods.closeWrongNetworkModal}\n          isOpen={this.props.modals.data.wrongNetworkModalIsOpen}\n          network={this.props.network}\n        />\n\n        <ConnectionModal\n          isMobile={this.props.isMobile}\n          setConnector={this.props.setConnector}\n          currentNetwork={this.props.network.current}\n          validateAccount={this.props.validateAccount}\n          closeModal={this.props.modals.methods.closeConnectionModal}\n          isOpen={ this.props.modals.data.connectionModalIsOpen && !this.props.accountValidated }\n        />\n\n        <ConnectionPendingModal\n          closeModal={this.props.modals.methods.closeConnectionPendingModal}\n          isOpen={this.props.modals.data.accountConnectionPending}\n          currentNetwork={this.props.network.current}\n        />\n        <UserRejectedConnectionModal\n          closeModal={\n            this.props.modals.methods.closeUserRejectedConnectionModal\n          }\n          isOpen={this.props.modals.data.userRejectedConnect}\n          initAccount={this.props.initAccount}\n        />\n\n        <LowFundsModal\n          closeModal={this.props.modals.methods.closeLowFundsModal}\n          isOpen={this.props.modals.data.lowFundsModalIsOpen}\n          currentNetwork={this.props.network.current}\n          account={this.props.account}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ConnectionModalUtil;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ConnectionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    // Disconnect to Infura only if the wallet is not logged\n    if (!this.props.account){\n      await this.props.context.setFirstValidConnector(['Infura']);\n      this.props.setConnector('Infura',null);\n    }\n    this.props.modals.methods.closeConnectionErrorModal();\n  }\n\n  render() {\n\n    const walletProvider = this.functionsUtil.getWalletProvider();\n    const isLedger = (walletProvider && walletProvider.toLowerCase() === 'ledger') || (typeof this.props.modals.data.connectionError === 'string' && this.props.modals.data.connectionError.toLowerCase().includes('ledger'));\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ isLedger ? 'Ledger Error' : `Connection Error` } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to connect with your { isLedger ? 'Ledger' : 'account' }:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.connectionError}\"</Text.span><br />\n                {\n                  isLedger ? (\n                    <Text.span>\n                      Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n\n                    </Text.span>\n                  ) : 'Make sure that your wallet is unlocked and try again.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                borderRadius={4}\n                my={2}\n                mx={[0, 2]}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionErrorModal;","import React from \"react\";\nimport {\n  Text,\n  Link,\n  Flex,\n  Modal,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass TransactionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    this.props.modals.methods.closeTransactionErrorModal();\n  }\n\n  render() {\n\n    const isLedgerError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('ledger');\n    const isSlowTxError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('not mined within 50 blocks');\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ 'Transaction Error' } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to send a transaction:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.transactionError}\"</Text.span><br />\n                {\n                  isLedgerError ? (\n                    <Text.span\n                      fontSize={1}\n                    >\n                      <br />Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n                      We also suggest you to connect your Ledger with Metamask, read the <Link fontSize={1} color={'blue'} hoverColor={'blue'} target={'_blank'} rel={\"nofollow noopener noreferrer\"} href={'https://metamask.zendesk.com/hc/en-us/articles/360020394612-How-to-connect-a-Trezor-or-Ledger-Hardware-Wallet'}>instructions here</Link>.\n                    </Text.span>\n                  ) : isSlowTxError ? 'This could happen when the gas price is low, check the transaction status with your Wallet.' : 'Make sure that your have enough funds in your wallet.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                borderRadius={4}\n                my={2}\n                mx={[0, 2]}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default TransactionErrorModal;","import Web3 from \"web3\";\nimport React from 'react';\nimport BigNumber from 'bignumber.js';\nimport Biconomy from \"@biconomy/mexa\";\nimport SimpleID from 'simpleid-js-sdk';\nimport NetworkUtil from \"./NetworkUtil\";\nimport * as Sentry from '@sentry/browser';\nimport FunctionsUtil from './FunctionsUtil';\nimport globalConfigs from '../configs/globalConfigs';\nimport ConnectionModalUtil from \"./ConnectionModalsUtil\";\nimport detectEthereumProvider from '@metamask/detect-provider';\nimport ConnectionErrorModal from './components/ConnectionErrorModal';\nimport TransactionErrorModal from './components/TransactionErrorModal';\nimport { TerminalHttpProvider, SourceType } from '@terminal-packages/sdk';\n\nrequire('dotenv').config();\nconst INFURA_KEY = process.env[\"REACT_APP_INFURA_KEY\"];\n\nconst RimbleTransactionContext = React.createContext({\n  web3: {},\n  account: {},\n  biconomy: {},\n  simpleID: {},\n  contracts: [],\n  web3Infura: {},\n  tokenConfig: {},\n  transactions: {},\n  accountBalance: {},\n  initWeb3: () => {},\n  accountValidated: {},\n  initAccount: () => {},\n  accountBalanceLow: {},\n  initSimpleID: () => {},\n  initContract: () => {},\n  accountBalanceToken: {},\n  checkPreflight: () => {},\n  validateAccount: () => {},\n  network: {\n    current: {},\n    required: {},\n    checkNetwork: () => {},\n    isCorrectNetwork: null,\n  },\n  accountInizialized: false,\n  getTokenDecimals: () => {},\n  rejectValidation: () => {},\n  getAccountBalance: () => {},\n  contractsInitialized: false,\n  accountValidationPending: {},\n  initializeContracts: () => {},\n  rejectAccountConnect: () => {},\n  enableUnderlyingWithdraw: false,\n  connectAndValidateAccount: () => {},\n  modals: {\n    data: {\n      connectionError: {},\n      lowFundsModalIsOpen: {},\n      noWalletModalIsOpen: {},\n      userRejectedConnect: {},\n      connectionModalIsOpen: {},\n      userRejectedValidation: {},\n      wrongNetworkModalIsOpen: {},\n      accountValidationPending: {},\n      accountConnectionPending: {},\n      noWeb3BrowserModalIsOpen: {},\n      transactionConnectionModalIsOpen: {},\n    },\n    methods: {\n      openLowFundsModal: () => {},\n      closeLowFundsModal: () => {},\n      openWrongNetworkModal: () => {},\n      closeWrongNetworkModal: () => {},\n      openNoWeb3BrowserModal: () => {},\n      closeNoWeb3BrowserModal: () => {},\n      openConnectionErrorModal: () => {},\n      closeConnectionErrorModal: () => {},\n      openTransactionErrorModal: () => {},\n      closeTransactionErrorModal: () => {},\n      openConnectionPendingModal: () => {},\n      closeConnectionPendingModal: () => {},\n      openUserRejectedConnectionModal: () => {},\n      openUserRejectedValidationModal: () => {},\n      closeUserRejectedConnectionModal: () => {},\n      closeUserRejectedValidationModal: () => {},\n    }\n  },\n  transaction: {\n    data: {\n      transactions: {}\n    },\n    meta: {},\n    methods: {}\n  }\n});\n\nlet setConnectorName = null;\nlet biconomyLoginProcessing = false;\n\nclass RimbleTransaction extends React.Component {\n  static Consumer = RimbleTransactionContext.Consumer;\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    const props = Object.assign({},this.props);\n    props.contracts = this.state.contracts;\n    if (this.functionsUtil){\n      props.account = this.state.account;\n      this.functionsUtil.setProps(props);\n    } else {\n      props.account = this.state.account;\n      this.functionsUtil = new FunctionsUtil(props);\n    }\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n    window.initWeb3 = this.initWeb3;\n  }\n\n  componentDidMount = async () => {\n    this.initSimpleID();\n\n    // this.functionsUtil.customLog('RimbleWeb3 componentDidMount');\n    this.initWeb3();\n\n    // TEST - Manually triggers transaction error\n    // this.openTransactionErrorModal(null,'Your Ledger device is Ineligible');\n\n    window.testTransaction = (method) => {\n      const transaction = this.createTransaction();\n      transaction.method = method;\n      this.addTransaction(transaction);\n      return transaction;\n    }\n\n    window.updateTransaction = (transaction,hash,status,params) => {\n      // Add meta data to transaction\n      transaction.type = \"contract\";\n      transaction.status = status;\n      transaction.params = params;\n      transaction.transactionHash = hash;\n      this.updateTransaction(transaction);\n      return transaction;\n    }\n  }\n\n  componentDidUpdate = async (prevProps, prevState) => {\n\n    this.loadUtils();\n\n    // this.functionsUtil.customLog('componentDidUpdate',prevProps.connectorName,this.props.connectorName,this.props.context.connectorName,this.props.context.active,(this.props.context.error ? this.props.context.error.message : null));\n\n    if (prevProps.connectorName !== this.props.connectorName && this.props.connectorName){\n      this.initWeb3();\n    } else if ( prevProps.context !== this.props.context ){\n      if (this.props.context.error instanceof Error && this.props.context.error.message.length){\n        const errorMessage = this.props.context.error.message;\n        const isWalletConnectClosedModalError = (errorMessage === 'User closed WalletConnect modal' || errorMessage === 'User closed modal');\n        // this.functionsUtil.customLog('componentDidUpdate',setConnectorName,errorMessage);\n        if (setConnectorName === 'WalletConnect' && isWalletConnectClosedModalError){\n          // this.functionsUtil.customLog('WalletConnect disconnected! Set Infura connector');\n          this.props.setConnector('Infura',null);\n          // this.functionsUtil.removeStoredItem('walletProvider');\n          // this.functionsUtil.removeStoredItem('connectorName');\n          // this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:'Infura'}));\n          setConnectorName = null;\n          // await this.props.context.setConnector('Infura');\n        } else if (!isWalletConnectClosedModalError) {\n          this.openConnectionErrorModal(null,errorMessage);\n        } else {\n          this.initWeb3();\n        }\n      // WalletConnect double trigger initWeb3\n      } else if (this.props.context.active && this.props.context.connectorName!=='WalletConnect' && this.props.connectorName==='WalletConnect') {\n        this.initWeb3();\n      }\n    } else if ( (this.props.context.connectorName && this.props.context.connectorName !== this.props.connectorName) || prevProps.customAddress !== this.props.customAddress){\n      this.initWeb3();\n    }\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    // const availableTokensChanged = prevProps.availableTokens && this.props.availableTokens && JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n    const availableStrategiesChanged = prevProps.availableStrategies && this.props.availableStrategies && JSON.stringify(Object.keys(prevProps.availableStrategies)) !== JSON.stringify(Object.keys(this.props.availableStrategies));\n\n    // Reset tokenDecimals if token is changed\n    if (tokenChanged){\n      this.setState({\n        tokenDecimals: null\n      });\n    }\n\n    // this.functionsUtil.customLog(prevProps.enableUnderlyingWithdraw,this.props.enableUnderlyingWithdraw,this.state.enableUnderlyingWithdraw);\n    if (prevProps.enableUnderlyingWithdraw !== this.props.enableUnderlyingWithdraw){\n      this.setState({\n        enableUnderlyingWithdraw:this.props.enableUnderlyingWithdraw\n      });\n    }\n\n    if (localStorage){\n      const context = JSON.parse(localStorage.getItem('context'));\n      if (!context || (this.props.context.active !== context.active || this.props.context.connectorName !== context.connectorName)){\n        this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:this.props.context.connectorName}));\n      }\n    }\n\n    if (tokenChanged/* || availableTokensChanged*/ || availableStrategiesChanged){\n      await this.initializeContracts();\n    }\n  }\n\n  // Initialize a web3 provider\n  initWeb3 = async (connectorName=null) => {\n\n    // Detect ethereum provider\n    const metamaskProvider = await detectEthereumProvider();\n    if (metamaskProvider && (!window.ethereum || window.ethereum !== metamaskProvider)){\n      window.ethereum = metamaskProvider;\n    }\n\n    // Suppress console warning\n    if (window.ethereum && window.ethereum.autoRefreshOnNetworkChange) {\n      window.ethereum.autoRefreshOnNetworkChange = false;\n    }\n\n    const context = this.props.context;\n\n    const web3Infura = new Web3(new Web3.providers.HttpProvider(globalConfigs.network.providers.infura[globalConfigs.network.requiredNetwork]+INFURA_KEY));\n\n    let web3 = context.library;\n\n    // 0x Instant Wallet Provider Injection\n    if (!window.RimbleWeb3_context || context.connectorName !== window.RimbleWeb3_context.connectorName){\n      window.RimbleWeb3_context = context;\n    }\n\n    // Reset setConnectorName if force connectorName\n    if (connectorName){\n      setConnectorName = null;\n    } else {\n      connectorName = this.props.connectorName;\n    }\n\n    // const last_context = localStorage ? JSON.parse(localStorage.getItem('context')) : null;\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorName,context.connectorName,context.connector,(web3 && web3.currentProvider ? web3.currentProvider.disable : null),(context.connector ? context.connector.disable : null));\n    if (context && connectorName === 'Infura' && connectorName !== context.connectorName){\n      if (web3 && typeof web3.currentProvider.disable === 'function'){\n        web3.currentProvider.disable();\n      } else if (context.connector && typeof context.connector.disable === 'function'){\n        context.connector.disable();\n      }\n      web3 = null;\n      setConnectorName = null;\n    }\n\n    const connectorNameChanged = (context.connectorName && context.connectorName !== connectorName) || (connectorName !== 'Infura' && connectorName !== setConnectorName);\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorNameChanged,context.connectorName,connectorName,setConnectorName);\n\n    if (!context.active || connectorNameChanged) {\n      // Select preferred web3 provider\n      if (connectorName && connectorNameChanged){\n        // this.functionsUtil.customLog('initWeb3 set connector',connectorName);\n        setConnectorName = connectorName;\n        await context.setConnector(connectorName);\n        // await context.setFirstValidConnector([connectorName, 'Infura']);\n        return web3;\n      }\n      /*\n      else if (setConnectorName){\n        // Catch WalletConnect unexpected disconnect and fallback to Infura\n        if (connectorName === 'WalletConnect' && connectorName === setConnectorName && last_context && last_context.active && last_context.connectorName==='WalletConnect' && !context.connectorName){\n          this.functionsUtil.customLog('WalletConnect disconnected! Set Infura connector');\n          this.props.setConnector('Infura',null);\n          this.functionsUtil.removeStoredItem('walletProvider');\n          this.functionsUtil.removeStoredItem('connectorName');\n          this.functionsUtil.setLocalStorage('context',JSON.stringify({active:context.active,connectorName:context.connectorName}));\n          setConnectorName = null;\n          await context.setConnector('Infura');\n          if (context.connector && typeof context.connector.disable === 'function'){\n            await context.connector.disable();\n          }\n        }\n\n        this.functionsUtil.customLog('initWeb3 skip due to setConnectorName ('+setConnectorName+') already set');\n        return web3;\n      }\n      */\n    }\n    /* else if (context.connectorName === \"WalletConnect\") {\n      if (!context.account) {\n\n        // WalletConnect already opened\n        if (document.getElementById('walletconnect-wrapper')){\n          return web3;\n        }\n\n        WalletConnectQRCodeModal.open(\n          context.connector.walletConnector.uri,\n          async () => {\n            document.getElementById('walletconnect-wrapper').remove();\n            this.props.setConnector('Infura',null);\n            await context.setConnector('Infura');\n            setConnectorName = null;\n          }\n        );\n      } else {\n        try {\n          WalletConnectQRCodeModal.close();\n        } catch {}\n      }\n    // Reset web3 if Infura\n    } */\n    /*\n    else if (context.active && (connectorName === 'Infura' || context.connectorName === \"Infura\")){\n      if (typeof web3.currentProvider.disable === 'function'){\n        await web3.currentProvider.disable();\n      } else if (context.connector && typeof context.connector.disable === 'function'){\n        await context.connector.disable();\n      }\n      web3 = null;\n      setConnectorName = null;\n    }\n    */\n\n    let web3Host = null;\n    let web3Provider = null;\n\n    if (!web3) { // safety web3 implementation\n      if (window.ethereum) {\n        this.functionsUtil.customLog(\"Using modern web3 provider.\");\n        web3Provider = window.ethereum;\n      } else if (window.web3) {\n        this.functionsUtil.customLog(\"Legacy web3 provider. Try updating.\");\n        web3Provider = window.web3;\n      } else {\n        this.functionsUtil.customLog(\"Non-Ethereum browser detected. Using Infura fallback.\");\n        web3Host = globalConfigs.network.providers.infura[globalConfigs.network.requiredNetwork]+INFURA_KEY;\n      }\n    } else {\n      web3Provider = web3.currentProvider;\n    }\n\n    let forceCallback = false;\n\n    if ((!connectorName || connectorName === 'Infura') && web3Provider && typeof web3Provider.enable === 'function'){\n      try {\n        await web3Provider.enable();\n      } catch (connectionError){\n        web3Provider = null;\n        web3Host = globalConfigs.network.providers.infura[globalConfigs.network.requiredNetwork]+INFURA_KEY;\n        forceCallback = true;\n      }\n    }\n\n    const terminalInfo = globalConfigs.network.providers.terminal;\n\n    if (terminalInfo && terminalInfo.enabled && terminalInfo.supportedNetworks.indexOf(globalConfigs.network.requiredNetwork) !== -1 ){\n      const TerminalHttpProviderParams = terminalInfo.params;\n      const terminalSourceType = localStorage && localStorage.getItem('walletProvider') ? localStorage.getItem('walletProvider') : SourceType.Infura;\n      TerminalHttpProviderParams.source = terminalSourceType;\n\n      if (web3Provider){\n        TerminalHttpProviderParams.customHttpProvider = web3Provider;\n      } else if (web3Host){\n        TerminalHttpProviderParams.host = web3Host;\n      }\n\n      const terminalHttpProvider = new TerminalHttpProvider(TerminalHttpProviderParams);\n      web3 = new Web3(terminalHttpProvider);\n    } else {\n      // Injected web3 provider\n      if (web3Provider){\n        web3 = new Web3(web3Provider);\n      // Infura\n      } else if (web3Host) {\n        web3 = new Web3(new Web3.providers.HttpProvider(web3Host));\n        if (connectorName !== 'Infura'){\n          this.props.setConnector('Infura',null);\n        }\n      }\n    }\n\n    const web3Callback = async () => {\n\n      window.web3Injected = this.state.web3;\n      // window.web3InfuraInjected = this.state.web3Infura;\n\n      if (typeof this.props.callbackAfterLogin === 'function'){\n        this.props.callbackAfterLogin();\n        this.props.setCallbackAfterLogin(null);\n      }\n\n      // After setting the web3 provider, check network\n      try {\n        await this.checkNetwork();\n        if (this.state.network.isCorrectNetwork){\n\n          if (!this.state.contractsInitialized){\n            await this.initializeContracts();\n          }\n\n          if (context.account){\n            // Login with biconomy\n            if (this.state.biconomy){\n              const biconomy = this.state.biconomy;\n              const biconomyInfo = globalConfigs.network.providers.biconomy;\n              if (biconomyInfo.enableLogin && !biconomy.isLogin && !biconomyLoginProcessing){\n                biconomyLoginProcessing = true;\n                biconomy.login(context.account, (error, response) => {\n                  // this.functionsUtil.customLog('biconomy login',error,response);\n                  // Failed to login with Biconomy\n                  if (error) {\n                    return this.setState({\n                      biconomy:false,\n                    },() => {\n                      this.initAccount(context.account);\n                    });\n                  }\n\n                  biconomyLoginProcessing = false;\n\n                  if (response.transactionHash) {\n                    this.initAccount(context.account);\n                  } else if(response.userContract) {\n                    this.initAccount(context.account);\n                  }\n                });\n                return false;\n              }\n            }\n\n            await this.initAccount(context.account);\n          } else {\n            await this.setState({\n              accountInizialized: true,\n              account: this.props.customAddress\n            });\n          }\n        }\n      // Initialize Infura Web3 and display error\n      } catch (error) {\n        this.openConnectionErrorModal(null,error.message);\n      }\n    }\n\n    // Save original web3 connector in case Mexa initialization fails\n    const originalWeb3 = web3;\n    const biconomyInfo = globalConfigs.network.providers.biconomy;\n    const walletProvider = this.functionsUtil.getWalletProvider();\n\n    if (connectorName !== 'Infura' && biconomyInfo && biconomyInfo.enabled && biconomyInfo.supportedNetworks.includes(globalConfigs.network.requiredNetwork) && (!walletProvider || !biconomyInfo.disabledWallets.includes(walletProvider.toLowerCase()))){\n\n      if (this.state.biconomy === null){\n        const biconomyWeb3Provider = web3Provider ? web3Provider : web3Host;\n        const biconomy = new Biconomy(biconomyWeb3Provider,biconomyInfo.params);\n\n        if (biconomy && typeof biconomy.onEvent === 'function'){\n          web3 = new Web3(biconomy);\n          biconomy.onEvent(biconomy.READY, () => {\n            if (this.componentUnmounted || this.state.biconomy === false || this.state.biconomy === biconomy){\n              return false;\n            }\n\n            const newState = {\n              web3,\n              biconomy,\n              web3Infura\n            };\n            if (web3 !== this.state.web3){\n              this.setState(newState, web3Callback);\n            }\n          }).onEvent(biconomy.ERROR, (error, message) => {\n            // this.functionsUtil.customLog('Biconomy error',error,message,this.state.biconomy);\n            web3 = originalWeb3;\n            // Handle error while initializing mexa\n            if (this.state.biconomy !== false){\n              this.setState({\n                web3,\n                web3Infura,\n                biconomy:false\n              }, web3Callback);\n            }\n          });\n        } else {\n          this.setState({\n            web3,\n            web3Infura,\n            biconomy:false\n          }, web3Callback);\n        }\n      }\n    } else {\n      if (web3 !== this.state.web3){\n        this.setState({\n          web3,\n          web3Infura,\n        }, web3Callback);\n      } else if (context.account || forceCallback){\n        web3Callback();\n      }\n    }\n\n    return web3;\n  }\n\n  initContract = async (name, address, abi, useInfuraProvider=false) => {\n    this.functionsUtil.customLog(`Init contract: ${name}`);\n    return await this.createContract(name, address, abi, useInfuraProvider);\n  }\n\n  createContract = async (name, address, abi, useInfuraProvider=false) => {\n    this.functionsUtil.customLog(`creating contract ${name} - addr: ${address}`);\n\n    const web3Provider = useInfuraProvider && this.state.web3Infura ? this.state.web3Infura : this.state.web3;\n\n    if (!web3Provider){\n      return null;\n    }\n\n    // Create contract on initialized web3 provider with given abi and address\n    try {\n      const contract = new web3Provider.eth.Contract(abi, address);\n      this.setState(state => ({\n        ...state,\n        contracts: [...state.contracts, {name, contract}]\n      }));\n      return {name, contract};\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Could not create contract.\",name,address,error);\n    }\n\n    return null;\n  }\n\n  initSimpleID = () => {\n\n    if (this.state.simpleID){\n      return this.state.simpleID;\n    }\n\n    const simpleIDInfo = globalConfigs.network.providers.simpleID;\n    let simpleID = null;\n\n    if (simpleIDInfo && simpleIDInfo.enabled && simpleIDInfo.supportedNetworks.indexOf(globalConfigs.network.requiredNetwork) !== -1 ){\n      const simpleIDParams = simpleIDInfo.params;\n      simpleIDParams.network = simpleIDInfo.getNetwork(this.state.network.current.id,globalConfigs.network.availableNetworks);\n      simpleID = new SimpleID(simpleIDParams);\n    }\n\n    window.simpleID = simpleID;\n\n    this.setState({\n      simpleID\n    });\n\n    return simpleID;\n  }\n\n  initAccount = async (account=false) => {\n\n    this.functionsUtil.customLog('initAccount',account);\n\n    if (this.props.customAddress){\n\n      // Set custom account\n      this.setState({\n        accountInizialized: true,\n        account: this.props.customAddress\n      });\n\n      // After account is complete, get the balance\n      this.getAccountBalance();\n\n      return false;\n    }\n\n    try {\n      if (!account){\n        const wallets = await this.state.web3.eth.getAccounts();\n        if (wallets && wallets.length){\n          account = wallets[0];\n        }\n      }\n\n      if (!account || this.state.account === account){\n        this.setState({\n          accountInizialized: true\n        });\n        return false;\n      }\n\n      // Request account access if needed\n      if (account){\n\n        const walletProvider = localStorage && localStorage.getItem('walletProvider') ? localStorage.getItem('walletProvider') : 'Infura';\n\n        // Send address info to SimpleID\n        const simpleID = this.initSimpleID();\n\n        if (simpleID){\n\n          const notifications = await simpleID.notifications();\n\n          if (notifications && notifications.length && window.$crisp){\n\n            let shownNotifications = [];\n            if (localStorage){\n              shownNotifications = localStorage.getItem('shownNotifications') && JSON.parse(localStorage.getItem('shownNotifications')) ? JSON.parse(localStorage.getItem('shownNotifications')) : [];\n            }\n\n            notifications.forEach((n,i) => {\n\n              const notificationId = n.name;\n\n              // Show notification if not shown already\n              if (shownNotifications.indexOf(notificationId) === -1){\n                window.$crisp.push([\"do\", \"message:show\", [\"text\", this.functionsUtil.normalizeSimpleIDNotification(n.content) ]]);\n\n                // Save notification id\n                shownNotifications.push(notificationId);\n              }\n            });\n\n            // Store shown notification\n            if (localStorage){\n              this.functionsUtil.setLocalStorage('shownNotifications',JSON.stringify(shownNotifications));\n            }\n          }\n        }\n\n        // Send Google Analytics connection event\n        this.functionsUtil.sendGoogleAnalyticsEvent({\n          eventCategory: 'Connect',\n          eventAction: 'connected',\n          eventLabel: walletProvider\n        });\n\n        /*\n        // Unsubscribes to all subscriptions\n        if (this.state.web3SocketProvider && typeof this.state.web3SocketProvider.clearSubscriptions === 'function'){\n          this.functionsUtil.customLog('Clear all web3SocketProvider subscriptions');\n          this.state.web3SocketProvider.clearSubscriptions();\n        }\n\n        const networkName = globalConfigs.network.availableNetworks[globalConfigs.network.requiredNetwork].toLowerCase();\n        const web3SocketProvider = new Web3(new Web3.providers.WebsocketProvider(`wss://${networkName}.infura.io/ws/v3/${INFURA_KEY}`));\n\n        // Subscribe to logs\n        const addressTopic = '0x00000000000000000000000'+account.toLowerCase().replace('x','');\n\n        // Subscribe for payment methods\n        const paymentProviders = Object.keys(globalConfigs.payments.providers).filter((providerName,i) => { const providerInfo = globalConfigs.payments.providers[providerName]; return providerInfo.enabled && providerInfo.web3Subscription && providerInfo.web3Subscription.enabled  })\n        if (paymentProviders && paymentProviders.length){\n          paymentProviders.forEach((providerName,i) => {\n            const providerInfo = globalConfigs.payments.providers[providerName];\n\n            this.functionsUtil.customLog(`Subscribe to ${providerName} logs`);\n\n            // Subscribe for deposit transactions\n            web3SocketProvider.eth.subscribe('logs', {\n                address: [account,providerInfo.web3Subscription.contractAddress],\n                topics: [null,[addressTopic]]\n            }, function(error, result){\n              \n            })\n            .on(\"data\", async (log) => {\n              this.functionsUtil.customLog(providerName,'logs',log);\n\n              if (log){\n                const txHash = log.transactionHash;\n                const subscribedTransactions = this.state.subscribedTransactions;\n                const walletAddressFound = log.topics.filter((addr,i) => { return addr.toLowerCase().includes(addressTopic); });\n\n                this.functionsUtil.customLog(providerName,txHash,walletAddressFound);\n\n                if (!subscribedTransactions[txHash] && walletAddressFound.length){\n                  const decodedLogs = web3SocketProvider.eth.abi.decodeLog(providerInfo.web3Subscription.decodeLogsData,log.data,log.topics);\n\n                  this.functionsUtil.customLog(providerName,txHash,decodedLogs);\n\n                  if (decodedLogs && decodedLogs._tokenAmount && decodedLogs._tokenAddress && decodedLogs._tokenAddress.toLowerCase() === this.props.tokenConfig.address.toLowerCase()){\n\n                    const receiptCallback = async (tx,decodedLogs) => {\n                      const tokenDecimals = await this.getTokenDecimals();\n                      const tokenAmount = this.functionsUtil.BNify(decodedLogs._tokenAmount);\n                      const tokenAmountFixed = this.functionsUtil.fixTokenDecimals(tokenAmount,tokenDecimals);\n                      const tokenAmountFormatted = parseFloat(tokenAmountFixed.toString()).toFixed(2);\n                      const isProviderTx = tx.from.toLowerCase() === account.toLowerCase() && tx.to.toLowerCase() === providerInfo.web3Subscription.contractAddress.toLowerCase();\n\n                      if (isProviderTx){\n\n                        // Mined\n                        if (tx.blockNumber && tx.status){\n                          // Toast message\n                          window.showToastMessage({\n                            variant:'success',\n                            message:'Deposit completed',\n                            secondaryMessage:`${providerName} sent you ${tokenAmountFormatted} ${this.props.selectedToken}`,\n                          });\n\n                          // Update User Balance\n                          this.getAccountBalance(tokenAmount);\n                        } else {\n                          // Toast message\n                          window.showToastMessage({\n                            variant:'processing',\n                            message:'Deposit pending',\n                            secondaryMessage:`${providerName} is sending ${tokenAmountFormatted} ${this.props.selectedToken}`,\n                          });\n                        }\n                      }\n                    }\n\n                    let checkTransactionReceiptTimeoutID = null;\n\n                    const checkTransactionReceipt = (txHash,decodedLogs) => {\n                      if (checkTransactionReceiptTimeoutID){\n                        window.clearTimeout(checkTransactionReceiptTimeoutID);\n                      }\n                      web3SocketProvider.eth.getTransactionReceipt(txHash,(err,txReceipt)=>{\n                        if (!err){\n                          if (txReceipt){\n                            receiptCallback(txReceipt,decodedLogs);\n                          } else{\n                            checkTransactionReceiptTimeoutID = window.setTimeout(() => { checkTransactionReceipt(txHash,decodedLogs) },3000);\n                          }\n                        }\n                      });\n                    }\n\n                    checkTransactionReceipt(txHash,decodedLogs);\n\n                    subscribedTransactions[txHash] = log;\n                    this.setState({subscribedTransactions});\n                  }\n                }\n              }\n            });\n          })\n        }\n\n        // Subscribe for deposit transactions\n        web3SocketProvider.eth.subscribe('logs', {\n            address: [account,this.props.tokenConfig.address],\n            topics: [null,null,[addressTopic]]\n        }, function(error, result){\n\n        })\n        .on(\"data\", async (log) => {\n          if (log){\n            const txHash = log.transactionHash;\n            const subscribedTransactions = this.state.subscribedTransactions;\n            const walletAddressFound = log.topics.filter((addr,i) => { return addr.toLowerCase().includes(addressTopic); });\n\n            if (!subscribedTransactions[txHash] && walletAddressFound.length){\n              const decodedLogs = web3SocketProvider.eth.abi.decodeLog([\n                {\n                  \"internalType\": \"uint256\",\n                  \"name\": \"_tokenAmount\",\n                  \"type\": \"uint256\"\n                },\n              ],log.data,log.topics);\n\n              if (decodedLogs && decodedLogs._tokenAmount){\n\n                const receiptCallback = async (tx,decodedLogs) => {\n                  const tokenDecimals = await this.getTokenDecimals();\n                  const tokenAmount = this.functionsUtil.BNify(decodedLogs._tokenAmount);\n                  const tokenAmountFixed = this.functionsUtil.fixTokenDecimals(tokenAmount,tokenDecimals);\n                  const tokenAmountFormatted = parseFloat(tokenAmountFixed.toString()).toFixed(2);\n                  const isDepositTokenTx = tx.to.toLowerCase() === this.props.tokenConfig.address.toLowerCase();\n\n                  if (isDepositTokenTx){\n\n                    // Mined\n                    if (tx.blockNumber && tx.status){\n                      // Toast message\n                      window.showToastMessage({\n                        message:'Deposit completed',\n                        secondaryMessage: `${tokenAmountFormatted} ${this.props.selectedToken} has been deposited`,\n                        variant: \"success\",\n                      });\n\n                      // Update User Balance\n                      this.getAccountBalance(tokenAmount);\n                    } else {\n                      // Toast message\n                      window.showToastMessage({\n                        message:'Deposit pending',\n                        secondaryMessage: `${tokenAmountFormatted} ${this.props.selectedToken} are on the way`,\n                        variant: \"processing\",\n                      });\n                    }\n                  }\n                }\n\n                let checkTransactionReceiptTimeoutID = null;\n\n                const checkTransactionReceipt = (txHash,decodedLogs) => {\n                  if (checkTransactionReceiptTimeoutID){\n                    window.clearTimeout(checkTransactionReceiptTimeoutID);\n                  }\n                  web3SocketProvider.eth.getTransactionReceipt(txHash,(err,txReceipt)=>{\n                    if (!err){\n                      if (txReceipt){\n                        receiptCallback(txReceipt,decodedLogs);\n                      } else{\n                        checkTransactionReceiptTimeoutID = window.setTimeout(() => { checkTransactionReceipt(txHash,decodedLogs) },3000);\n                      }\n                    }\n                  });\n                }\n\n                checkTransactionReceipt(txHash,decodedLogs);\n\n                subscribedTransactions[txHash] = log;\n                this.setState({subscribedTransactions});\n              }\n            }\n          }\n        })\n        .on(\"changed\", log => {\n          \n        });\n        */\n\n        // this.functionsUtil.customLog('initAccount',account);\n\n        // Set custom account\n        this.setState({\n          account,\n          // web3SocketProvider,\n          accountInizialized: true\n        });\n\n        // After account is complete, get the balance\n        this.getAccountBalance();\n\n        // TODO subscribe for account changes, no polling\n        // set a state flag which indicates if the subscribe handler has been\n        // called at least once\n      }\n    } catch (error) {\n\n      this.setState({\n        accountInizialized: true\n      });\n\n      // User denied account access...\n      this.functionsUtil.customLog(\"User cancelled connect request. Error:\", error);\n\n      // this.functionsUtil.customLog(error);\n\n      // Catch ledger error\n      if (error && error.message && error.message.includes('MULTIPLE_OPEN_CONNECTIONS_DISALLOWED')) {\n        return;\n      }\n\n      // Send Sentry connection error\n      const isError = error instanceof Error;\n      if (this.functionsUtil.checkUrlOrigin() && isError){\n        Sentry.captureException(error);\n      }\n\n      // Reject Connect\n      // this.rejectAccountConnect(error);\n    }\n  }\n\n  // TODO: Can this be moved/combined?\n  rejectAccountConnect = error => {\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  getAccountBalance = async (increaseAmount) => {\n\n    increaseAmount = increaseAmount ? this.functionsUtil.BNify(increaseAmount) : null;\n\n    try {\n\n      let [accountBalance,accountBalanceToken,tokenDecimals] = await Promise.all([\n        this.state.web3.eth.getBalance(this.state.account), // Get ETH balance\n        this.getTokenBalance(this.state.account), // Get token balance\n        this.getTokenDecimals()\n      ]);\n\n      if (accountBalance) {\n\n        // Convert to wei if decimals found\n        if (accountBalance.toString().includes('.')){\n          accountBalance = this.state.web3.utils.toWei(accountBalance);\n        }\n\n        // Convert to Eth amount\n        accountBalance = this.state.web3.utils.fromWei(\n          accountBalance,\n          'ether'\n        );\n\n        accountBalance = this.functionsUtil.BNify(accountBalance).toString();\n\n        this.setState({\n          accountBalance\n        });\n\n        this.functionsUtil.customLog(\"account balance: \", accountBalance);\n      }\n\n      // this.functionsUtil.customLog('accountBalance',res,(accountBalanceToken ? accountBalanceToken.toString() : null),tokenDecimals,increaseAmount);\n\n      if (accountBalanceToken) {\n\n        accountBalanceToken = this.functionsUtil.BNify(accountBalanceToken);\n\n        // Increase balance amount if passed and balance didn't change\n        if (increaseAmount && this.state.accountBalanceToken && this.functionsUtil.normalizeTokenAmount(this.state.accountBalanceToken,tokenDecimals).toString() === accountBalanceToken.toString()){\n          accountBalanceToken = accountBalanceToken.plus(increaseAmount);\n        }\n        \n        accountBalanceToken = this.functionsUtil.fixTokenDecimals(accountBalanceToken,tokenDecimals).toString();\n\n        // this.functionsUtil.customLog('increaseAmount',(increaseAmount ? increaseAmount.toString() : '0'),(this.state.accountBalanceToken ? this.state.accountBalanceToken.toString() : '0'),(accountBalanceToken ? accountBalanceToken.toString() : 'ERROR'));\n        // this.functionsUtil.customLog(`account balance ${this.props.selectedToken}: `, accountBalanceToken);\n\n        this.setState({\n          accountBalanceToken,\n          [`accountBalance${this.props.selectedToken}`]:accountBalanceToken\n        });\n\n      } else {\n        this.functionsUtil.customLog('accountBalanceToken is not set:',accountBalanceToken);\n      }\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Failed to get account balance.\", error);\n    }\n  }\n\n  initializeContracts = async () => {\n\n    const contracts = this.functionsUtil.getGlobalConfig(['contracts']);\n    await this.functionsUtil.asyncForEach(Object.keys(contracts),async (contractName) => {\n      const contractInfo = contracts[contractName];\n      if (contractInfo.address !== null && contractInfo.abi !== null){\n        this.functionsUtil.customLog('initializeContracts, init contract', contractName, contractInfo.address);\n        await this.initContract(contractName, contractInfo.address, contractInfo.abi);\n      }\n    });\n\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    await this.functionsUtil.asyncForEach(Object.keys(govTokens),async (token) => {\n      const govTokenConfig = govTokens[token];\n      if (!govTokenConfig.enabled){\n        return;\n      }\n      // Initialize govToken contracts\n      let foundGovTokenContract = this.state.contracts.find(c => c.name === token);\n      if (!foundGovTokenContract) {\n        this.functionsUtil.customLog('initializeContracts, init contract', token, govTokenConfig.address);\n        await this.initContract(token, govTokenConfig.address, govTokenConfig.abi);\n      }\n    });\n\n    if (this.props.availableStrategies){\n      // Initialize Tokens Contracts\n      await this.functionsUtil.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n        \n        const availableTokens = this.props.availableStrategies[strategy];\n\n        await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          let foundTokenContract = this.state.contracts.find(c => c.name === token);\n          if (!foundTokenContract) {\n            this.functionsUtil.customLog('initializeContracts, init contract',token, tokenConfig.address);\n            await this.initContract(token, tokenConfig.address, tokenConfig.abi);\n          }\n\n          // Initialize idleTokens contracts\n          let foundIdleTokenContract = this.state.contracts.find(c => c.name === tokenConfig.idle.token);\n          if (!foundIdleTokenContract) {\n            this.functionsUtil.customLog('initializeContracts, init contract',tokenConfig.idle.token, tokenConfig.idle.address);\n            await this.initContract(tokenConfig.idle.token, tokenConfig.idle.address, tokenConfig.idle.abi);\n          }\n\n          // Initialize protocols contracts\n          tokenConfig.protocols.forEach(async (p,i) => {\n            let foundProtocolContract = this.state.contracts.find(c => c.name === p.token);\n            if (!foundProtocolContract) {\n              this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n              await this.initContract(p.token, p.address, p.abi);\n            }\n          });\n\n          // Check migration contract\n          if (tokenConfig.migration){\n\n            if (tokenConfig.migration.oldContract){\n              const oldContract = tokenConfig.migration.oldContract;\n              this.functionsUtil.customLog('initializeContracts, init '+oldContract.name+' contract',oldContract);\n              await this.initContract(oldContract.name, oldContract.address, oldContract.abi);\n            }\n\n            // Initialize protocols contracts\n            if (tokenConfig.migration.oldProtocols){\n              tokenConfig.migration.oldProtocols.forEach(async (p,i) => {\n                let foundProtocolContract = this.state.contracts.find(c => c.name === p.token);\n                if (!foundProtocolContract) {\n                  this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n                  await this.initContract(p.token, p.address, p.abi);\n                }\n              });\n            }\n\n            if (tokenConfig.migration.migrationContract){\n              const migrationContract = tokenConfig.migration.migrationContract;\n              this.functionsUtil.customLog('initializeContracts, init '+migrationContract.name+' contract',migrationContract);\n              await this.initContract(migrationContract.name, migrationContract.address, migrationContract.abi);\n            }\n          }\n        })\n      });\n    }\n\n    return this.setState({\n      contractsInitialized:true\n    });\n  }\n\n  getContractByName = async (contractName) => {\n    let contract = this.state.contracts.find(c => c.name === contractName);\n\n    if (!contract && this.props.tokenConfig) {\n      const tokenConfig = this.props.tokenConfig;\n      contract = await this.initContract(contractName, tokenConfig.address, tokenConfig.abi);\n    }\n\n    return contract ? contract.contract : null;\n  }\n\n  getTokenDecimals = async () => {\n    let tokenDecimals = null;\n\n    if (!this.state.tokenDecimals){\n\n      tokenDecimals = await this.functionsUtil.getTokenDecimals(this.props.selectedToken);\n\n      this.setState({\n        tokenDecimals\n      });\n    } else {\n      tokenDecimals = await (new Promise( async (resolve, reject) => {\n        resolve(this.state.tokenDecimals);\n      }));\n    }\n\n    return tokenDecimals;\n  }\n\n  getTokenBalance = async (account) => {\n    const contract = await this.getContractByName(this.props.selectedToken);\n\n    if (!contract) {\n      this.functionsUtil.customLogError('Wrong contract name', this.props.selectedToken);\n      return null;\n    }\n\n    if (!contract.methods['balanceOf']){\n      this.customLogError('Wrong method name balanceOf');\n      return null;\n    }\n\n    return await contract.methods.balanceOf(account).call().catch(error => {\n      this.functionsUtil.customLog(`Failed to get ${this.props.selectedToken} balance`, error);\n    });\n  }\n\n  determineAccountLowBalance = () => {\n    // If provided a minimum from config then use it, else default to 1\n    const accountBalanceMinimum =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.accountBalanceMinimum !== \"undefined\"\n        ? this.props.config.accountBalanceMinimum\n        : 1;\n    // Determine if the account balance is low\n    const accountBalanceLow =\n      this.state.accountBalance < accountBalanceMinimum;\n\n    this.setState({\n      accountBalanceLow\n    });\n  }\n\n  connectAndValidateAccount = async (callbackAfterLogin) => {\n    // Check for account\n    if (!this.state.account) {\n      this.props.setCallbackAfterLogin(callbackAfterLogin);\n      // Show modal to connect account\n      this.openConnectionModal();\n    }\n  }\n\n  getRequiredNetwork = () => {\n\n    const networkId =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.requiredNetwork !== \"undefined\"\n        ? this.props.config.requiredNetwork\n        : globalConfigs.network.requiredNetwork;\n\n    let networkName = globalConfigs.network.availableNetworks[networkId] ? globalConfigs.network.availableNetworks[networkId] : 'unknown';\n\n    let requiredNetwork = {\n      name: networkName,\n      id: networkId\n    };\n\n    let network = { ...this.state.network };\n    network.required = requiredNetwork;\n\n    this.setState({ network });\n  }\n\n  getNetworkId = async () => {\n    try {\n      return this.state.web3.eth.net.getId((error, networkId) => {\n        let current = { ...this.state.network.current };\n        current.id = networkId;\n        let network = { ...this.state.network };\n        network.current = current;\n        this.setState({ network });\n      });\n    } catch (error) {\n      this.functionsUtil.customLog(\"Could not get network ID: \", error);\n    }\n  }\n\n  getNetworkName = async () => {\n    try {\n      return this.state.web3.eth.net.getNetworkType((error, networkName) => {\n        let current = { ...this.state.network.current };\n        current.name = networkName;\n        let network = { ...this.state.network };\n        network.current = current;\n        this.setState({ network });\n      });\n    } catch (error) {\n      this.functionsUtil.customLog(\"Could not get network Name: \", error);\n    }\n  }\n\n  checkNetwork = async () => {\n    this.getRequiredNetwork();\n\n    await Promise.all([\n      this.getNetworkId(),\n      this.getNetworkName()\n    ]);\n\n    let network = { ...this.state.network };\n    network.isCorrectNetwork = this.state.network.current.id === this.state.network.required.id;\n\n    // To do, check window.web3.currentProvider.networkVersion to see if Metamask is in the requiredNetwork\n\n    this.setState({ network });\n  }\n\n  contractMethodSendWrapper = async (contractName, contractMethod, params = [], value = null, callback = null, callback_receipt = null, gasLimit = null, txData = null) => {\n    // Is it on the correct network?\n    if (!this.state.network.isCorrectNetwork) {\n      // wrong network modal\n      this.state.modals.methods.openWrongNetworkModal();\n      return false;\n    }\n\n    // Is a wallet connected and verified?\n    if (!this.state.account) {\n      this.openConnectionModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_not_connected');\n      }\n      return false;\n    }\n\n    // Are there a minimum amount of funds?\n    if (this.state.accountBalanceLow) {\n      this.openLowFundsModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_balance_low');\n      }\n      return false;\n    }\n\n    // Is the contract loaded?\n\n    // Create new tx and add to collection\n    // Maybe this needs to get moved out of the wrapper?\n    let transaction = this.createTransaction(txData);\n    transaction.method = contractMethod;\n\n    this.addTransaction(transaction);\n\n    // Add meta data to transaction\n    transaction.type = \"contract\";\n    transaction.status = \"started\";\n    transaction.params = params;\n\n    // Show toast for starting transaction\n    this.updateTransaction(transaction);\n\n    const { account, contracts } = this.state;\n    let contract = contracts.find(c => c.name === contractName);\n    if (!contract) {\n      if (typeof callback === 'function') {\n        callback(null,'contract_not_found');\n      }\n      return this.functionsUtil.customLog(`No contract with name ${contractName}`);\n    }\n\n    contract = contract.contract;\n\n    // Does the method exists?\n    // if (typeof contract.methods[contractMethod] === 'undefined'){\n    //   return false;\n    // }\n\n    let manualConfirmationTimeoutId = null;\n\n    try {\n\n      if (!value){\n        value = this.functionsUtil.BNify(0);\n      }\n\n      this.functionsUtil.customLog('contractMethodSendWrapper',contractName,contract._address,account,contractMethod,params,(value ? { from: account, value } : { from: account }));\n\n      // estimate gas price\n      let gas = await contract.methods[contractMethod](...params)\n        .estimateGas(value ? { from: account, value } : { from: account })\n        .catch(e => console.error(e));\n\n      if (gas) {\n\n        gas = this.functionsUtil.BNify(gas);\n        gas = gas.plus(gas.times(this.functionsUtil.BNify('0.2'))); // Increase 20% of enstimation\n\n        // Check if gas is under the gasLimit param\n        if (gasLimit && gas.lt(this.functionsUtil.BNify(gasLimit))){\n          gas = this.functionsUtil.BNify(gasLimit);\n        }\n\n        // Convert gasLimit toBN with web3 utils\n        gas = this.state.web3.utils.toBN(gas.integerValue(BigNumber.ROUND_FLOOR));\n      }\n\n      const confirmationCallback = (confirmationNumber, receipt) => {\n\n        // this.functionsUtil.customLog('confirmationCallback', confirmationNumber, receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // this.functionsUtil.customLog('txOnConfirmation', receipt);\n        // Update confirmation count on each subsequent confirmation that's received\n        transaction.confirmationCount += 1;\n\n        const call_callback = !globalConfigs.network.isForked && typeof callback === 'function' && transaction.confirmationCount===1;\n\n        // How many confirmations should be received before informing the user\n        const confidenceThreshold = this.props.config.requiredConfirmations || 1;\n\n        if (transaction.confirmationCount === 1) {\n          // Initial confirmation receipt\n          transaction.status = \"confirmed\";\n        } else if (transaction.confirmationCount < confidenceThreshold) {\n          // Not enough confirmations to match threshold\n        }\n\n        if (transaction.confirmationCount === confidenceThreshold) {\n          // Confirmations match threshold\n          // Check the status from result since we are confident in the result\n          if (receipt.status) {\n            transaction.status = \"success\";\n          } else if (!receipt.status) {\n            transaction.status = \"error\";\n          }\n        } else if (transaction.confirmationCount > confidenceThreshold) {\n          // Confidence threshold met\n        }\n\n\n        if (call_callback){\n          // Update transaction with receipt details\n          transaction.recentEvent = \"confirmation\";\n          this.updateTransaction(transaction);\n          \n          callback(transaction);\n\n          this.functionsUtil.customLog('Confirmed', confirmationNumber, receipt, transaction);\n        }\n      };\n\n      const manualConfirmation = (transactionHash,timeout) => {\n        if (!transactionHash){\n          return false;\n        }\n        this.state.web3.eth.getTransactionReceipt(transactionHash,(err,txReceipt) => {\n          if (txReceipt && txReceipt.status){\n            this.functionsUtil.customLog('Tx manualConfirmation', txReceipt);\n            confirmationCallback(1,txReceipt);\n          } else {\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(transactionHash,timeout) , timeout);\n          }\n        });\n      };\n\n      const receiptCallback = receipt => {\n\n        // this.functionsUtil.customLog('txOnReceipt', receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // Received receipt, met total number of confirmations\n        transaction.recentEvent = \"receipt\";\n\n        // If the network is forked use the receipt for confirmation\n        if (globalConfigs.network.isForked){\n          transaction.status = \"success\";\n          if (typeof callback === 'function') {\n            callback(transaction);\n          }\n        } else {\n          this.updateTransaction(transaction);\n\n          // Transaction mined, wait for manual confirmation\n          if (receipt.status){\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(receipt.transactionHash,4000), 2000);\n          }\n        }\n      };\n\n      return contract.methods[contractMethod](...params)\n        .send(value ? { from: account, value, gas  } : { from: account, gas })\n        .on(\"transactionHash\", hash => {\n          this.functionsUtil.customLog('txOnTransactionHash', hash);\n\n          if (!hash){\n            this.functionsUtil.customLog('Skip transactionHash due to hash empty', hash);\n            return false;\n          }\n\n          transaction.transactionHash = hash;\n          transaction.status = \"pending\";\n          transaction.recentEvent = \"transactionHash\";\n          this.updateTransaction(transaction);\n\n          if (callback_receipt){\n            callback_receipt(transaction);\n          }\n\n          // Wait for manual confirmation only for mobile\n          if (this.props.isMobile){\n            if (manualConfirmationTimeoutId){\n              window.clearTimeout(manualConfirmationTimeoutId);\n            }\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(hash,60000), 20000);\n          }\n        })\n        .on(\"receipt\", receiptCallback)\n        .on(\"confirmation\", confirmationCallback)\n        .on(\"error\", error => {\n\n          console.log('Tx error',error);\n          \n          const isDeniedTx = error && error.message && typeof error.message.includes === 'function' ? error.message.includes('User denied transaction signature') : false;\n          \n          // Set error on transaction\n          transaction.status = \"error\";\n          transaction.recentEvent = \"error\";\n          this.updateTransaction(transaction);\n\n\n          // Show ToastProvider\n          if (!isDeniedTx){\n            window.toastProvider.addMessage(\"Something went wrong\", {\n              icon: 'Block',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n              colorTheme: 'light',\n              secondaryMessage: \"Please retry\",\n            });\n\n            const isError = error instanceof Error;\n\n            if (typeof error.message !== 'undefined'){\n              this.openTransactionErrorModal(null,error.message);\n            } else if (this.functionsUtil.checkUrlOrigin() && isError){\n              Sentry.captureException(error);\n            }\n          }\n\n          if (typeof callback === 'function') {\n            callback(transaction,error);\n          }\n        });\n    } catch (error) {\n\n      console.log('Tx catch error',error);\n\n      transaction.status = \"error\";\n      this.updateTransaction(transaction);\n\n      // TODO: should this be a custom error? What is the error here?\n      // TODO: determine how to handle error messages globally\n      window.toastProvider.addMessage(\"Something went really wrong, we are sorry\", {\n        icon: 'Block',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"failure\",\n        colorTheme: 'light',\n        secondaryMessage: \"Try refreshing the page :(\",\n      });\n\n      const isDeniedTx = error && error.message ? error.message.includes('User denied transaction signature') : false;\n\n      const isError = error instanceof Error;\n      if ( this.functionsUtil.checkUrlOrigin() && isError && !isDeniedTx){\n        Sentry.captureException(error);\n      }\n\n      if (typeof callback === 'function') {\n        // this.functionsUtil.customLog('Tx Failed',error,transaction,typeof callback);\n        callback(transaction,error);\n      }\n\n      return false;\n    }\n  }\n\n  // Create tx\n  createTransaction = (txData=null) => {\n    let transaction = {\n      ...txData\n    };\n    transaction.created = Date.now();\n    transaction.lastUpdated = Date.now();\n    transaction.status = \"initialized\";\n    transaction.confirmationCount = 0;\n    transaction.token = this.props.selectedToken;\n    transaction.strategy = this.props.selectedStrategy;\n    return transaction;\n  }\n\n  addTransaction = transaction => {\n    const transactions = { ...this.state.transactions };\n    transactions[`tx${transaction.created}`] = transaction;\n    this.setState({ transactions });\n  }\n\n  // Add/update transaction in state\n  updateTransaction = updatedTransaction => {\n    const transactions = { ...this.state.transactions };\n    const transaction = { ...updatedTransaction };\n    transaction.lastUpdated = Date.now();\n    transactions[`tx${updatedTransaction.created}`] = transaction;\n    this.setState({ transactions });\n\n    // this.functionsUtil.customLog('updateTransaction',transactions);\n\n    // Save transactions in localStorage only if pending or succeeded\n    // console.log('updateTransaction',transaction.transactionHash,transaction.status.toLowerCase());\n    if (transaction.transactionHash){\n      // Clear cached data\n      this.functionsUtil.clearCachedData();\n\n      // Store transaction\n      this.functionsUtil.addStoredTransaction(`tx${transaction.created}`,transaction);\n    }\n\n    return transaction;\n  }\n\n  // CONNECTION MODAL METHODS\n  closeConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = false;\n    // this.functionsUtil.customLog(\"this.state\", this.state);\n    this.setState({ modals });\n  }\n\n  openConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = true;\n    this.setState({ modals: modals });\n  }\n\n  closeConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    this.setState({ modals });\n  }\n\n  openConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = true;\n    modals.data.transactionConnectionModalIsOpen = false;\n    modals.data.connectionModalIsOpen = false;\n\n    this.setState({ modals });\n  }\n\n  closeTransactionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = false;\n    this.setState({ modals });\n  }\n\n  openTransactionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = error;\n\n    this.setState({ modals });\n  }\n\n  closeConnectionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionError = false;\n    this.setState({ modals });\n  }\n\n  openConnectionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n\n    // Handle generic error\n    if (error==='[object Object]'){\n      error = 'Unable to access to the wallet.'\n    }\n\n    // this.functionsUtil.customLog('openConnectionErrorModal',typeof error,typeof error === 'object' ? JSON.stringify(error) : error);\n\n    modals.data.connectionError = error;\n\n    this.setState({ modals });\n  }\n\n  closeUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = false;\n    this.setState({ modals });\n  }\n\n  openUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  closeNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  state = {\n    web3: null,\n    context:null,\n    account: null,\n    contracts: [],\n    biconomy: null,\n    simpleID: null,\n    web3Infura:null,\n    transactions: {},\n    CrispClient: null,\n    tokenDecimals:null,\n    accountBalance: null,\n    web3Subscription: null,\n    accountValidated: null,\n    accountBalanceDAI: null,\n    initWeb3: this.initWeb3,\n    accountBalanceLow: null,\n    accountInizialized:false,\n    subscribedTransactions:{},\n    contractsInitialized:false,\n    initAccount: this.initAccount,\n    accountValidationPending: null,\n    initSimpleID: this.initSimpleID,\n    initContract: this.initContract,\n    checkPreflight: this.checkPreflight,\n    validateAccount: this.validateAccount,\n    rejectValidation: this.rejectValidation,\n    getTokenDecimals: this.getTokenDecimals,\n    getAccountBalance: this.getAccountBalance,\n    initializeContracts: this.initializeContracts,\n    rejectAccountConnect: this.rejectAccountConnect,\n    contractMethodSendWrapper: this.contractMethodSendWrapper,\n    connectAndValidateAccount: this.connectAndValidateAccount,\n    enableUnderlyingWithdraw: this.props.enableUnderlyingWithdraw,\n    network: {\n      current: {},\n      required: {},\n      isCorrectNetwork: null,\n      checkNetwork: this.checkNetwork\n    },\n    modals: {\n      data: {\n        connectionError: null,\n        lowFundsModalIsOpen: null,\n        userRejectedConnect: null,\n        connectionModalIsOpen: null,\n        userRejectedValidation: null,\n        wrongNetworkModalIsOpen: null,\n        accountConnectionPending: null,\n        accountValidationPending: null,\n        transactionConnectionModalIsOpen: null,\n        noWalletModalIsOpen: this.noWalletModalIsOpen,\n        noWeb3BrowserModalIsOpen: this.noWeb3BrowserModalIsOpen,\n      },\n      methods: {\n        openLowFundsModal: this.openLowFundsModal,\n        openNoWalletModal: this.openNoWalletModal,\n        closeNoWalletModal: this.closeNoWalletModal,\n        closeLowFundsModal: this.closeLowFundsModal,\n        openConnectionModal: this.openConnectionModal,\n        closeConnectionModal: this.closeConnectionModal,\n        openWrongNetworkModal: this.openWrongNetworkModal,\n        closeWrongNetworkModal: this.closeWrongNetworkModal,\n        openNoWeb3BrowserModal: this.openNoWeb3BrowserModal,\n        closeNoWeb3BrowserModal: this.closeNoWeb3BrowserModal,\n        openConnectionErrorModal: this.openConnectionErrorModal,\n        closeConnectionErrorModal: this.closeConnectionErrorModal,\n        openTransactionErrorModal: this.openTransactionErrorModal,\n        closeTransactionErrorModal: this.closeTransactionErrorModal,\n        openConnectionPendingModal: this.openConnectionPendingModal,\n        closeConnectionPendingModal: this.closeConnectionPendingModal,\n        openUserRejectedValidationModal: this.openUserRejectedValidationModal,\n        openUserRejectedConnectionModal: this.openUserRejectedConnectionModal,\n        closeUserRejectedValidationModal: this.closeUserRejectedValidationModal,\n        closeUserRejectedConnectionModal: this.closeUserRejectedConnectionModal,\n      }\n    },\n    transaction: {\n      data: {\n        transactions: null\n      },\n      meta: {},\n      methods: {}\n    }\n  }\n\n  render() {\n    const connectionErrorModalOpened = typeof this.state.modals.data.connectionError === 'string' && this.state.modals.data.connectionError.length>0;\n    const transactionErrorModalOpened = typeof this.state.modals.data.transactionError === 'string' && this.state.modals.data.transactionError.length>0;\n    return (\n      <div>\n        <RimbleTransactionContext.Provider value={this.state} {...this.props} />\n        <ConnectionModalUtil\n          modals={this.state.modals}\n          network={this.state.network}\n          account={this.state.account}\n          isMobile={this.props.isMobile}\n          initAccount={this.state.initAccount}\n          setConnector={this.props.setConnector}\n          validateAccount={this.state.validateAccount}\n          accountValidated={this.state.accountValidated}\n          accountConnectionPending={this.state.accountConnectionPending}\n          accountValidationPending={this.state.accountValidationPending}\n        />\n        <TransactionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={transactionErrorModalOpened}\n        />\n        <ConnectionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={connectionErrorModalOpened}\n          setConnector={this.props.setConnector}\n        />\n        <NetworkUtil\n          web3={this.state.web3}\n          network={this.state.network}\n        />\n      </div>\n    );\n  }\n}\n\nexport default RimbleTransaction;\n","import React, { Component } from 'react';\nimport { Flex, Text, Icon } from \"rimble-ui\";\nimport SmartNumber from '../../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass ProposalField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render(){\n    let icon = null;\n    let color = null;\n    let output = null;\n    const fieldInfo = this.props.fieldInfo;\n    const proposal = Object.assign({},this.props.proposal);\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      style:{\n        maxWidth:'100%',\n        overflow: 'hidden',\n        whiteSpace: 'nowrap',\n        textOverflow: 'ellipsis'\n      },\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n\n    switch (fieldInfo.name){\n      case 'date':\n        const formattedDate = this.functionsUtil.strToMoment(proposal.timestamp*1000).format('DD MMM, YYYY');\n        output = (\n          <Text {...fieldProps}>{formattedDate}</Text>\n        );\n      break;\n      case 'statusIcon':\n        const state = fieldInfo.state ? fieldInfo.state : proposal.state;\n        switch (state) {\n          case 'Pending':\n            icon = \"HourglassEmpty\";\n            color = '#a5a5a5';\n          break;\n          case 'Active':\n            icon = \"Adjust\";\n            color = '#a5a5a5';\n          break;\n          case 'Canceled':\n            icon = \"Cancel\";\n            color = '#fa0000';\n          break;\n          case 'Defeated':\n            icon = \"Block\";\n            color = '#fa0000';\n          break;\n          case 'Succeeded':\n            icon = \"Done\";\n            color = '#00b84a';\n          break;\n          case 'Queued':\n            icon = \"Timelapse\";\n            color = '#ff9900';\n          break;\n          case 'Expired':\n            icon = \"ErrorOutline\";\n            color = '#a5a5a5';\n          break;\n          case 'Executed':\n            icon = \"CheckCircle\";\n            color = '#00b84a';\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Flex\n            {...fieldProps}\n            alignItems={'center'}\n            justifyContent={'center'}\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={ fieldProps.size ? fieldProps.size : (this.props.isMobile ? '1em' : '1.8em') }\n            />\n          </Flex>\n        );\n      break;\n      case 'id':\n        output = (\n          <Text {...fieldProps}>{proposal.id}</Text>\n        );\n      break;\n      case 'title':\n        output = (\n          <Text {...fieldProps}>{proposal.title}</Text>\n        );\n      break;\n      case 'votes':\n        const forVotes = this.functionsUtil.BNify(proposal.forVotes).div(1e18);\n        const againstVotes = this.functionsUtil.BNify(proposal.againstVotes).div(1e18);\n        const totalVotes = forVotes.plus(againstVotes);\n        output = (\n          <Text {...fieldProps}>{this.functionsUtil.formatMoney(totalVotes.toFixed(0,1),0)}</Text>\n        );\n      break;\n      case 'status':\n        output = (\n          <Text {...fieldProps}>{proposal.state}</Text>\n        );\n      break;\n      case 'support':\n        let support = null;\n        if (this.props.delegate){\n          const delegate = this.props.delegate.delegate.toLowerCase();\n          const vote = proposal.votes.find( v => (v.voter.toLowerCase() === delegate) );\n          if (vote){\n            support = vote.support;\n          }\n        }\n        output = (\n          <Text {...fieldProps}>{ support === null ? 'NONE' : (support ? 'FOR' : 'AGAINST') }</Text>\n        );\n      break;\n      case 'forVotes':\n        output = (\n          <SmartNumber {...fieldProps} number={proposal.forVotes} />\n        );\n      break;\n      case 'againstVotes':\n        output = (\n          <SmartNumber {...fieldProps} number={proposal.againstVotes} />\n        );\n      break;\n      default:\n      break;\n    }\n    return output;\n  }\n}\n\nexport default ProposalField;\n","import React, { Component } from 'react';\nimport styles from './ProposalListFilters.module.scss';\nimport DashboardCard from '../../DashboardCard/DashboardCard';\nimport { Flex, Text, Icon, Radio, Button, Link } from \"rimble-ui\";\nimport TableCellHeader from '../../TableCellHeader/TableCellHeader';\n\nclass ProposalListFilters extends Component {\n\n  state = {\n    maxWidth:0.4,\n    minWidth:0.18,\n    maxHeight:425,\n    isOpened:false,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null\n    }\n  }\n\n  setFilter = (filter,value) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:value\n      }\n    }));\n  }\n\n  applyFilters = (toggle=true) => {\n    if (typeof this.props.applyFilters === 'function'){\n      this.props.applyFilters(this.state.activeFilters);\n    }\n    if (toggle){\n      this.toggleOpened();\n    }\n  }\n\n  resetFilter = (filter) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:null\n      }\n    }),() => {\n      this.applyFilters(false);\n    });\n  }\n\n  resetFilters = (toggle=true) => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null\n      }\n    },() => {\n      if (typeof this.props.resetFilters === 'function'){\n        this.props.resetFilters();\n      }\n      if (toggle){\n        this.toggleOpened();\n      }\n    })\n  }\n\n  toggleOpened = () => {\n    this.setState((prevState) => ({\n      isOpened: !prevState.isOpened\n    }));\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={3}\n        top={0}\n        width={1}\n        zIndex={1}\n        flexDirection={'column'}\n        alignItems={'flex-start'}\n        justifyContent={'center'}\n        position={['relative','absolute']}\n      >\n        <DashboardCard\n          cardProps={{\n            py:2,\n            px:3,\n            width:[1, this.state.isOpened ? this.state.maxWidth : this.state.minWidth ],\n            style:{\n              transition:'width 0.3s ease-in-out'\n            }\n          }}\n          isInteractive={ !this.state.isOpened }\n          handleClick={ !this.state.isOpened ? this.toggleOpened : null }\n        >\n          <Flex\n            width={1}\n            style={{\n              cursor:'pointer'\n            }}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'space-between'}\n            onClick={ this.state.isOpened ? this.toggleOpened : null }\n          >\n            <Text\n              fontSize={2}\n              fontWeight={500}\n              color={'copyColor'}\n            >\n              Filters\n            </Text>\n            <Icon\n              color={'copyColor'}\n              size={ this.props.isMobile ? '1.3em' : '1.5em'}\n              name={ this.state.isOpened ? 'Close' : 'Tune' }\n            />\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n            style={{\n              overflow:'hidden',\n              transition:'max-height 0.3s ease-in-out',\n              maxHeight:this.state.isOpened ? this.state.maxHeight : 0\n            }}\n          >\n            <Flex\n              mt={2}\n              py={2}\n              width={1}\n              flexDirection={'row'}\n              borderTop={`1px solid ${this.props.theme.colors.divider}`}\n            >\n              {\n                Object.keys(this.props.filters).map((filterCategory) => {\n                  const filterValues = this.props.filters[filterCategory];\n                  return (\n                    <Flex\n                      flexDirection={'column'}\n                      key={`filter_${filterCategory}`}\n                      style={{\n                        flexBasis:'0',\n                        flex:'1 1 0px'\n                      }}\n                    >\n                      <TableCellHeader\n                        pb={2}\n                        fontWeight={3}\n                        fontSize={[0,2]}\n                        color={'cellText'}\n                      >\n                        {filterCategory.toUpperCase()}\n                      </TableCellHeader>\n                      {\n                        Object.keys(filterValues).map((filterValue) => {\n                          const filterLabel = filterValues[filterValue];\n                          const isChecked = this.state.activeFilters[filterCategory]===filterValue;\n                          return (\n                            <Radio\n                              my={2}\n                              fontSize={[0,2]}\n                              label={filterLabel}\n                              checked={isChecked}\n                              className={styles.radioBtn}\n                              key={`filter_${filterCategory}_${filterValue}`}\n                              onChange={ e => this.setFilter(filterCategory,filterValue) }\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                  );\n                })\n              }\n            </Flex>\n            <Flex\n              flexDirection={'row'}\n            >\n              <Button.Text\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.applyFilters}\n              >\n                Apply filters\n              </Button.Text>\n              <Button.Text\n                ml={3}\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.resetFilters}\n              >\n                Reset\n              </Button.Text>\n            </Flex>\n          </Flex>\n        </DashboardCard>\n        {\n          !this.state.isOpened && this.props.activeFilters && Object.values(this.props.activeFilters).filter( v => (v !== null) ).length>0 &&\n            <Flex\n              mt={3}\n              width={1}\n              flexDirection={['column','row']}\n              alignItems={['flex-start','flex-end']}\n              justifyContent={['flex-end','flex-start']}\n            >\n              {\n                Object.keys(this.props.activeFilters).map((filterName) => {\n                  const filterValue = this.props.activeFilters[filterName];\n                  if (filterValue !== null){\n                    const filterLabel = this.props.filters[filterName][filterValue];\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:[2,0],\n                          mr:[0,3],\n                          width:[1,this.state.minWidth]\n                        }}\n                        isInteractive={true}\n                        key={`filter_${filterName}`}\n                      >\n                        <Flex\n                          width={1}\n                          style={{\n                            cursor:'pointer'\n                          }}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                          onClick={e => this.resetFilter(filterName)}\n                        >\n                          <Text\n                            fontSize={2}\n                            fontWeight={500}\n                            color={'cellText'}\n                            style={{\n                              textTransform:'capitalize'\n                            }}\n                          >\n                            {filterLabel}\n                          </Text>\n                          <Icon\n                            name={'Close'}\n                            color={'cellText'}\n                            size={ this.props.isMobile ? '1.3em' : '1.5em'}\n                          />\n                        </Flex>\n                      </DashboardCard>\n                    );\n                  }\n                  return null;\n                })\n              }\n              <Link\n                mt={[2,0]}\n                fontSize={[3,2]}\n                fontWeight={[3]}\n                color={'dark-gray'}\n                hoverColor={'copyColor'}\n                textAlign={['center','left']}\n                onClick={ e => this.resetFilters(false) }\n              >\n                Clear all filters\n              </Link>\n            </Flex>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default ProposalListFilters;","import React, { Component } from 'react';\nimport TableRow from '../../TableRow/TableRow';\nimport FlexLoader from '../../FlexLoader/FlexLoader';\nimport TableHeader from '../../TableHeader/TableHeader';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport ProposalField from '../ProposalField/ProposalField';\nimport { Flex, Heading, Text, Link, Icon } from \"rimble-ui\";\nimport ProposalListFilters from '../ProposalListFilters/ProposalListFilters';\n\nclass ProposalsList extends Component {\n\n  state = {\n    page:1,\n    loading:true,\n    rowsPerPage:10,\n    totalRows:null,\n    totalPages:null,\n    activeFilters:{\n      status:null,\n    },\n    filters:{\n      status:{\n        pending:'Pending',\n        active:'Active',\n        canceled:'Canceled',\n        defeated:'Defeated',\n        succeeded:'Succeeded',\n        queued:'Queued',\n        expired:'Expired',\n        executed:'Executed'\n      },\n    },\n    processedRows:null,\n    lastBlockNumber:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);\n    this.processList(page);\n    this.setState({\n      page\n    });\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.processList();\n  }\n\n  applyFilters = activeFilters => {\n    this.setState({\n      activeFilters\n    },() => {\n      this.processList();\n    });\n  }\n\n  resetFilters = () => {\n    this.setState({\n      activeFilters:{\n        status:null,\n      }\n    },() => {\n      this.processList();\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const pageChanged = prevState.page !== this.state.page;\n    const proposalsChanged = JSON.stringify(prevProps.proposals) !== JSON.stringify(this.props.proposals);\n    if (pageChanged || proposalsChanged){\n      this.processList();\n    }\n  }\n\n  processList = (page=null) => {\n\n    if (!this.props.proposals){\n      return false;\n    }\n\n    page = page ? page : this.state.page;\n\n    const rowsPerPage = this.props.rowsPerPage ? this.props.rowsPerPage : this.state.rowsPerPage;\n\n    // Sort Proposals by timeStamp\n    const proposals = Object.values(this.props.proposals)\n                        .filter(p => (\n                          (this.state.activeFilters.status === null || p.state.toLowerCase() === this.state.activeFilters.status.toLowerCase())\n                        )) // Filter by activeFilters\n                        .sort((a,b) => (a.timestamp > b.timestamp) ? -1 : 1 );\n\n    // Calculate max number of pages\n    const totalRows = proposals.length;\n    const totalPages = Math.ceil(totalRows/rowsPerPage);\n\n    const processedRows = [];\n\n    proposals.forEach((p, i) => {\n      if (i>=((page-1)*rowsPerPage) && i<((page-1)*rowsPerPage)+rowsPerPage) {\n        processedRows.push(p);\n      }\n    });\n\n    const loading = false;\n  \n    this.setState({\n      loading,\n      totalRows,\n      totalPages,\n      processedRows\n    });\n  }\n\n  render() {\n\n    const filtersEnabled = typeof this.props.filtersEnabled === 'undefined' || this.props.filtersEnabled;\n    const hasActiveFilters = filtersEnabled && Object.values(this.state.activeFilters).filter( v => (v !== null) ).length>0;\n    const processedRows = this.state.processedRows ? Object.values(this.state.processedRows) : null;\n    const hasRows = processedRows && processedRows.length>0;\n\n    return (\n      <Flex flexDirection={'column'} width={1} m={'0 auto'}>\n        {\n          (this.state.loading || !this.state.processedRows === null) ? (\n            <FlexLoader\n              flexProps={{\n                minHeight:'50vh',\n                flexDirection:'row'\n              }}\n              loaderProps={{\n                size:'30px'\n              }}\n              textProps={{\n                ml:2\n              }}\n              text={'Loading Proposals...'}\n            />\n          ) : (\n            <Flex\n              width={1}\n              position={'relative'}\n              flexDirection={'column'}\n              id={'proposals-list-container'}\n              pt={[0, (!filtersEnabled || !hasRows ? 0 : hasActiveFilters ? '116px' : 5) ] }\n            >\n              {\n                hasRows ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    {\n                      filtersEnabled &&\n                        <ProposalListFilters\n                          {...this.props}\n                          filters={this.state.filters}\n                          activeFilters={this.state.activeFilters}\n                          resetFilters={this.resetFilters.bind(this)}\n                          applyFilters={this.applyFilters.bind(this)}\n                        />\n                    }\n                    <TableHeader\n                      cols={this.props.cols}\n                      isMobile={this.props.isMobile}\n                    />\n                    <Flex\n                      id={'proposals-list'}\n                      flexDirection={'column'}\n                    >\n                      {\n                        processedRows.map( (proposal,index) => {\n                          const proposalId = proposal.id;\n                          const handleClick = (e) => {\n                            return (proposalId ? this.props.goToSection(`proposals/${proposalId}`) : null);\n                          };\n                          return (\n                            <TableRow\n                              {...this.props}\n                              rowProps={{\n                                isInteractive:true\n                              }}\n                              id={proposalId}\n                              proposal={proposal}\n                              handleClick={handleClick}\n                              key={`proposal-${proposalId}`}\n                              fieldComponent={ProposalField}\n                              rowId={`proposal-col-${proposalId}`}\n                              cardId={`proposal-card-${proposalId}`}\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                    <Flex\n                      height={'50px'}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'flex-end'}\n                      id={'proposals-list-pagination'}\n                    >\n                      <Flex mr={3}>\n                        <Link mr={1} onClick={ e => this.prevPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowLeft'}\n                            size={'2em'}\n                            color={ this.state.page>1 ? '#4f4f4f' : '#d8d8d8' }\n                          />\n                        </Link>\n                        <Link onClick={ e => this.nextPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowRight'}\n                            size={'2em'}\n                            color={ this.state.page<this.state.totalPages ? '#4f4f4f' : '#d8d8d8' }\n                          />\n                        </Link>\n                      </Flex>\n                      <Flex alignItems={'center'}>\n                        <Text \n                          fontSize={1}\n                          fontWeight={3}\n                          color={'cellText'}\n                        >\n                          Page {this.state.page} of {this.state.totalPages}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Heading.h3\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                    fontFamily={'sansSerif'}\n                  >\n                    There are no proposals\n                  </Heading.h3>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default ProposalsList;\n","import React, { Component } from 'react';\nimport { Flex, Text, Blockie } from \"rimble-ui\";\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass DelegateField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render(){\n    let output = null;\n    const fieldInfo = this.props.fieldInfo;\n    const delegate = Object.assign({},this.props.delegate);\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      style:{\n        maxWidth:'100%',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis'\n      },\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    switch (fieldInfo.name){\n      case 'avatar':\n        output = (\n          <Flex\n            {...fieldProps}\n            alignItems={'center'}\n            justifyContent={'center'}\n          >\n            <Blockie\n              opts={{\n                size: 7,\n                color: \"#dfe\",\n                bgcolor: \"#a71\",\n                spotcolor: \"#000\",\n                seed: delegate.delegate,\n              }}\n            />\n          </Flex>\n        );\n      break;\n      case 'rank':\n      case 'votes':\n      case 'delegate':\n      case 'proposals':\n      case 'vote_weight':\n        let value = delegate[fieldInfo.name];\n        if (fieldInfo.name === 'votes'){\n          value = this.functionsUtil.formatMoney(this.functionsUtil.BNify(value).toFixed(2,1),2);\n        }\n        output = (\n          <Text\n            {...fieldProps}\n          >\n            {value}\n          </Text>\n        );\n      break;\n      default:\n      break;\n    }\n    return output;\n  }\n}\n\nexport default DelegateField;\n","import React, { Component } from 'react';\nimport TableRow from '../../TableRow/TableRow';\nimport FlexLoader from '../../FlexLoader/FlexLoader';\nimport TableHeader from '../../TableHeader/TableHeader';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport DelegateField from '../DelegateField/DelegateField';\nimport { Flex, Heading, Text, Link, Icon } from \"rimble-ui\";\n\nclass DelegatesList extends Component {\n\n  state = {\n    page:1,\n    filters:{},\n    loading:true,\n    rowsPerPage:10,\n    totalRows:null,\n    totalPages:null,\n    activeFilters:{},\n    processedRows:null,\n    lastBlockNumber:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);\n    this.processList(page);\n    this.setState({\n      page\n    });\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.processList();\n  }\n\n  applyFilters = activeFilters => {\n    this.setState({\n      activeFilters\n    },() => {\n      this.processList();\n    });\n  }\n\n  resetFilters = () => {\n    this.setState({\n      activeFilters:{\n        status:null,\n      }\n    },() => {\n      this.processList();\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const pageChanged = prevState.page !== this.state.page;\n    const delegatesChanged = JSON.stringify(prevProps.delegates) !== JSON.stringify(this.props.delegates);\n    if (pageChanged || delegatesChanged){\n      this.processList();\n    }\n  }\n\n  processList = (page=null) => {\n\n    if (!this.props.delegates){\n      return false;\n    }\n\n    page = page ? page : this.state.page;\n\n    const rowsPerPage = this.props.rowsPerPage ? this.props.rowsPerPage : this.state.rowsPerPage;\n\n    // Sort Proposals by timeStamp\n    let delegates = Object.values(this.props.delegates)\n                        .sort((a,b) => (a.timestamp > b.timestamp) ? -1 : 1 );\n\n    if (this.props.maxRows !== null && this.props.maxRows>0){\n      delegates = delegates.splice(0,this.props.maxRows);\n    }\n\n    // Calculate max number of pages\n    const totalRows = delegates.length;\n    const totalPages = Math.ceil(totalRows/rowsPerPage);\n\n    const processedRows = [];\n\n    delegates.forEach((p, i) => {\n      if (i>=((page-1)*rowsPerPage) && i<((page-1)*rowsPerPage)+rowsPerPage) {\n        processedRows.push(p);\n      }\n    });\n\n    const loading = false;\n  \n    this.setState({\n      loading,\n      totalRows,\n      totalPages,\n      processedRows\n    });\n  }\n\n  render() {\n\n    const processedRows = this.state.processedRows ? Object.values(this.state.processedRows) : null;\n\n    return (\n      <Flex flexDirection={'column'} width={1} m={'0 auto'}>\n        {\n          (this.state.loading || !this.state.processedRows === null) ? (\n            <FlexLoader\n              flexProps={{\n                minHeight:'50vh',\n                flexDirection:'row'\n              }}\n              loaderProps={{\n                size:'30px'\n              }}\n              textProps={{\n                ml:2\n              }}\n              text={'Loading Leaderboard...'}\n            />\n          ) : (\n            <Flex\n              width={1}\n              position={'relative'}\n              flexDirection={'column'}\n              id={'delegates-list-container'}\n            >\n              {\n                processedRows && processedRows.length>0 ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <TableHeader\n                      cols={this.props.cols}\n                      isMobile={this.props.isMobile}\n                    />\n                    <Flex\n                      id={'delegates-list'}\n                      flexDirection={'column'}\n                    >\n                      {\n                        processedRows.map( (delegate,index) => {\n                          const delegateId = delegate.delegate;\n                          const handleClick = (e) => {\n                            return (delegateId ? this.props.goToSection(`leaderboard/${delegateId}`) : null);\n                          };\n                          return (\n                            <TableRow\n                              {...this.props}\n                              rowProps={{\n                                isInteractive:true\n                              }}\n                              id={delegateId}\n                              delegate={delegate}\n                              key={`delegate-${index}`}\n                              handleClick={handleClick}\n                              fieldComponent={DelegateField}\n                              rowId={`delegate-col-${index}`}\n                              cardId={`delegate-card-${index}`}\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                    <Flex\n                      height={'50px'}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'flex-end'}\n                      id={'delegates-list-pagination'}\n                    >\n                      <Flex mr={3}>\n                        <Link mr={1} onClick={ e => this.prevPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowLeft'}\n                            size={'2em'}\n                            color={ this.state.page>1 ? '#4f4f4f' : '#d8d8d8' }\n                          />\n                        </Link>\n                        <Link onClick={ e => this.nextPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowRight'}\n                            size={'2em'}\n                            color={ this.state.page<this.state.totalPages ? '#4f4f4f' : '#d8d8d8' }\n                          />\n                        </Link>\n                      </Flex>\n                      <Flex alignItems={'center'}>\n                        <Text \n                          fontSize={1}\n                          fontWeight={3}\n                          color={'cellText'}\n                        >\n                          Page {this.state.page} of {this.state.totalPages}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Heading.h3\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                    fontFamily={'sansSerif'}\n                  >\n                    There are no delegates\n                  </Heading.h3>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default DelegatesList;\n","import Title from '../Title/Title';\nimport { Box, Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport StatsCard from '../StatsCard/StatsCard';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport GovernanceUtil from '../utilities/GovernanceUtil';\nimport ProposalsList from './ProposalsList/ProposalsList';\nimport DelegatesList from './DelegatesList/DelegatesList';\n\nclass Overview extends Component {\n\n  state = {\n    delegates:[],\n    proposals:[],\n    totalSupply:0,\n    dataLoaded:false,\n    votesDelegated:0,\n  };\n\n  // Utils\n  functionsUtil = null;\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n\n    this.functionsUtil = this.governanceUtil.functionsUtil;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async loadData(){\n    const [\n      delegates,\n      proposals,\n      totalSupply\n    ] = await Promise.all([\n      this.governanceUtil.getDelegates(),\n      this.governanceUtil.getProposals(),\n      this.governanceUtil.getTotalSupply()\n    ]);\n\n    const votesDelegated = delegates.reduce( (votesDelegated,d) => {\n      votesDelegated = votesDelegated+parseFloat(d.votes);\n      return votesDelegated;\n    },0);\n\n    const dataLoaded = true;\n\n    this.setState({\n      delegates,\n      proposals,\n      dataLoaded,\n      totalSupply,\n      votesDelegated\n    });\n  }\n\n  render() {\n    return (\n      <Box\n        width={1}\n      >\n        <Title\n          mb={[3,4]}\n        >\n          Governance Overview\n        </Title>\n        {\n          !this.state.dataLoaded ? (\n            <FlexLoader\n              flexProps={{\n                minHeight:'50vh',\n                flexDirection:'row'\n              }}\n              loaderProps={{\n                size:'30px'\n              }}\n              textProps={{\n                ml:2\n              }}\n              text={'Loading Data...'}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              <Flex\n                width={1}\n                mb={[3,4]}\n                alignItems={'center'}\n                justifyContent={'center'}\n                flexDirection={['column','row']}\n              >\n                <Flex\n                  mb={[2,0]}\n                  pr={[0,1]}\n                  width={[1,1/4]}\n                  flexDirection={'column'}\n                >\n                  <StatsCard\n                    label={null}\n                    labelTooltip={null}\n                    title={'Votes Delegated'}\n                    minHeight={['130px','143px']}\n                    titleMinHeight={['auto','50px']}\n                    value={this.functionsUtil.formatMoney(this.state.votesDelegated.toFixed(2,1),2)}\n                  />\n                </Flex>\n                <Flex\n                  mb={[2,0]}\n                  pl={[0,1]}\n                  pr={[0,1]}\n                  width={[1,1/4]}\n                  flexDirection={'column'}\n                >\n                  <StatsCard\n                    label={null}\n                    labelTooltip={null}\n                    title={'Voting Addresses'}\n                    minHeight={['130px','143px']}\n                    titleMinHeight={['auto','50px']}\n                    value={this.state.delegates.length}\n                  />\n                </Flex>\n                <Flex\n                  mb={[2,0]}\n                  pl={[0,1]}\n                  pr={[0,1]}\n                  width={[1,1/4]}\n                  flexDirection={'column'}\n                >\n                  <StatsCard\n                    label={null}\n                    labelTooltip={null}\n                    title={'Proposals'}\n                    minHeight={['130px','143px']}\n                    titleMinHeight={['auto','50px']}\n                    value={this.state.proposals.length}\n                  />\n                </Flex>\n                <Flex\n                  pl={[0,1]}\n                  mb={[2,0]}\n                  width={[1,1/4]}\n                  flexDirection={'column'}\n                >\n                  <StatsCard\n                    label={null}\n                    labelTooltip={null}\n                    title={'IDLE Circulating'}\n                    minHeight={['130px','143px']}\n                    titleMinHeight={['auto','50px']}\n                    value={this.functionsUtil.formatMoney(this.state.totalSupply,0)}\n                  />\n                </Flex>\n              </Flex>\n              <Box\n                width={1}\n                mt={[4,5]}\n              >\n                <Title\n                  mb={[3,4]}\n                >\n                  Recent Proposals\n                </Title>\n                <Flex\n                  mb={[3,4]}\n                  width={1}\n                  id={'transactions'}\n                  flexDirection={'column'}\n                >\n                  <ProposalsList\n                    {...this.props}\n                    rowsPerPage={5}\n                    filtersEnabled={false}\n                    proposals={this.state.proposals}\n                    cols={[\n                      {\n                        title: '#',\n                        props:{\n                          width:[0.1,0.05]\n                        },\n                        fields:[\n                          {\n                            name:'id',\n                            props:{\n                            }\n                          },\n                        ]\n                      },\n                      {\n                        title:'DATE',\n                        mobile:false,\n                        props:{\n                          width:[0.15,0.12],\n                        },\n                        fields:[\n                          {\n                            name:'date'\n                          }\n                        ]\n                      },\n                      {\n                        title:'TITLE',\n                        props:{\n                          width:[0.75,0.60],\n                        },\n                        fields:[\n                          {\n                            name:'title'\n                          }\n                        ]\n                      },\n                      {\n                        mobile:false,\n                        title:'VOTES',\n                        props:{\n                          width:[0.11,0.11],\n                        },\n                        fields:[\n                          {\n                            name:'votes'\n                          }\n                        ]\n                      },\n                      {\n                        title:'STATUS',\n                        props:{\n                          width:[0.15,0.12],\n                          alignItems:['center','flex-start'],\n                          justifyContent:['center','flex-start']\n                        },\n                        parentProps:{\n                          justifyContent:['center','flex-start']\n                        },\n                        fields:[\n                          {\n                            name:'statusIcon',\n                            props:{\n                              mr:[0,2],\n                            },\n                          },\n                          {\n                            mobile:false,\n                            name:'status'\n                          }\n                        ]\n                      },\n                    ]}\n                  />\n                </Flex>\n              </Box>\n              <Box\n                width={1}\n              >\n                <Title\n                  mb={[3,4]}\n                >\n                  Leaderboard\n                </Title>\n                <Flex\n                  mb={[3,4]}\n                  width={1}\n                  id={'transactions'}\n                  flexDirection={'column'}\n                >\n                  <DelegatesList\n                    maxRows={100}\n                    {...this.props}\n                    rowsPerPage={5}\n                    delegates={this.state.delegates}\n                    cols={[\n                      {\n                        title: 'RANK',\n                        props:{\n                          width:[0.13,0.08]\n                        },\n                        fields:[\n                          {\n                            name:'rank'\n                          },\n                        ]\n                      },\n                      {\n                        title:'ADDRESS',\n                        props:{\n                          width:[0.60,0.50],\n                        },\n                        fields:[\n                          {\n                            mobile:false,\n                            name:'avatar',\n                            props:{\n                              mr:2\n                            }\n                          },\n                          {\n                            name:'delegate'\n                          }\n                        ]\n                      },\n                      {\n                        title:'VOTES',\n                        props:{\n                          width:[0.27,0.12],\n                        },\n                        fields:[\n                          {\n                            name:'votes'\n                          }\n                        ]\n                      },\n                      {\n                        mobile:false,\n                        title:'VOTE WEIGHT',\n                        props:{\n                          width:[0.15,0.15],\n                        },\n                        fields:[\n                          {\n                            name:'vote_weight',\n                            parentProps:{\n                              alignItems:'center'\n                            }\n                          }\n                        ]\n                      },\n                      {\n                        mobile:false,\n                        title:'PROPOSALS VOTED',\n                        props:{\n                          width:[0.15,0.15],\n                        },\n                        fields:[\n                          {\n                            name:'proposals',\n                            parentProps:{\n                              alignItems:'center'\n                            }\n                          }\n                        ]\n                      },\n                    ]}\n                  />\n                </Flex>\n              </Box>\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default Overview;\n","import React, { Component } from 'react';\nimport ConnectBox from '../../ConnectBox/ConnectBox';\nimport FlexLoader from '../../FlexLoader/FlexLoader';\nimport RoundButton from '../../RoundButton/RoundButton';\nimport GovernanceUtil from '../../utilities/GovernanceUtil';\nimport DashboardCard from '../../DashboardCard/DashboardCard';\nimport TxProgressBar from '../../TxProgressBar/TxProgressBar';\nimport { Flex, Text, Input, Button, Box, EthAddress } from \"rimble-ui\";\n\nclass DelegateVote extends Component {\n\n  state = {\n    newDelegate:'',\n    processing:{\n      txHash:null,\n      loading:false\n    }\n  }\n\n  // Utils\n  functionsUtil = null;\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n\n    this.functionsUtil = this.governanceUtil.functionsUtil;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  checkNewDelegate = () => {\n    return this.functionsUtil.checkAddress(this.state.newDelegate) && this.state.newDelegate.toLowerCase() !== this.props.currentDelegate.toLowerCase();\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  setDelegate(address){\n    const addressOk = this.functionsUtil.checkAddress(address);\n\n    if (addressOk){\n\n      const callback = (tx,error) => {\n        // Send Google Analytics event\n        const eventData = {\n          eventCategory: 'Delegate',\n          eventAction: address,\n          eventLabel: tx.status\n        };\n\n        if (error){\n          eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n        }\n\n        // Send Google Analytics event\n        if (error || eventData.status !== 'error'){\n          this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n        }\n\n        if (typeof this.props.loadUserData === 'function' && tx.status === 'success'){\n          this.props.loadUserData();\n        }\n\n        this.setState({\n          processing: {\n            txHash:null,\n            loading:false\n          }\n        });\n      };\n\n      const callbackReceipt = (tx) => {\n        const txHash = tx.transactionHash;\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            txHash\n          }\n        }));\n      };\n\n      this.governanceUtil.setDelegate(address,callback,callbackReceipt);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:true\n        }\n      }));\n    }\n    return null;\n  }\n\n  changeDelegate = (e) => {\n    const newDelegate = e.target.value;\n    this.setState({\n      newDelegate\n    });\n  }\n\n  render() {\n    const isUndelegated = parseInt(this.props.currentDelegate) === 0;\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n        !this.props.account ? (\n          <Flex\n            width={[1,0.36]}\n            alignItems={'stretch'}\n            flexDirection={'column'}\n            justifyContent={'center'}\n          >\n            <ConnectBox\n              {...this.props}\n            />\n          </Flex>\n        ) : this.props.currentDelegate ? (\n          <DashboardCard\n            cardProps={{\n              mb:2,\n              py:[2,3],\n              px:[3,4],\n              width:[1,0.5],\n              position:'relative',\n            }}\n            isInteractive={false}\n          >\n            {\n              this.props.canClose &&\n                <Box\n                  top={'0'}\n                  zIndex={1}\n                  right={'0'}\n                  position={'absolute'}\n                >\n                  <Button.Text\n                    icononly\n                    icon={'Close'}\n                    size={'2.5em'}\n                    mainColor={'statValue'}\n                    onClick={this.props.closeFunc}\n                  />\n                </Box>\n            }\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                /*\n                <Text\n                  mb={2}\n                  fontWeight={3}\n                  fontSize={[2,3]}\n                  color={'dark-gray'}\n                  textAlign={'center'}\n                >\n                  You have {this.functionsUtil.fixTokenDecimals(this.props.balance,18).toFixed(4)} {this.functionsUtil.getGlobalConfig(['governance','props','tokenName'])} available.\n                </Text>\n                */\n              }\n              <Text\n                mb={1}\n                fontWeight={3}\n                color={'statValue'}\n                textAlign={'center'}\n              >\n                Current Delegate:\n              </Text>\n              <Flex\n                mb={3}\n                width={1}\n                alignItems={'center'}\n                justifyContent={isUndelegated ? 'center' : 'stretch'}\n              >\n                {\n                  isUndelegated ? (\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'dark-gray'}\n                      textAlign={'center'}\n                    >\n                      Undelegated\n                    </Text>\n                  ) : (\n                    <EthAddress\n                      width={1}\n                      address={this.props.currentDelegate}\n                    />\n                  )\n                }\n              </Flex>\n              {\n                this.state.processing && this.state.processing.loading ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      web3={this.props.web3}\n                      waitText={`Delegate estimated in`}\n                      hash={this.state.processing.txHash}\n                      endMessage={`Finalizing delegate request...`}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                    />\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      mb={1}\n                      fontWeight={3}\n                      color={'statValue'}\n                      textAlign={'center'}\n                    >\n                      Set New Delegate:\n                    </Text>\n                    <Input\n                      min={0}\n                      type={'text'}\n                      width={'100%'}\n                      required={true}\n                      height={'3.4em'}\n                      borderRadius={2}\n                      fontWeight={500}\n                      textAlign={'center'}\n                      boxShadow={'none !important'}\n                      value={this.state.newDelegate}\n                      placeholder={`Insert delegate address`}\n                      onChange={this.changeDelegate.bind(this)}\n                      border={`1px solid ${this.props.theme.colors.divider}`}\n                    />\n                    <Flex\n                      mt={3}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                    >\n                      <RoundButton\n                        buttonProps={{\n                          mx:1,\n                          fontSize:[1,2],\n                          width:['auto','10em'],\n                          disabled:!this.checkNewDelegate()\n                        }}\n                        handleClick={ e => this.setDelegate(this.state.newDelegate) }\n                      >\n                        Delegate\n                      </RoundButton>\n                      <RoundButton\n                        buttonProps={{\n                          mx:1,\n                          fontSize:[1,2],\n                          width:['auto','10em'],\n                          mainColor:this.props.theme.colors.redeem,\n                          disabled:this.props.currentDelegate.toLowerCase() === this.props.account.toLowerCase()\n                        }}\n                        handleClick={ e => this.setDelegate(this.props.account) }\n                      >\n                        Self-delegate\n                      </RoundButton>\n                    </Flex>\n                  </Flex>\n                )\n              }\n            </Flex>\n          </DashboardCard>\n        ) : (\n          <FlexLoader\n            flexProps={{\n              minHeight:'50vh',\n              flexDirection:'row'\n            }}\n            loaderProps={{\n              size:'30px'\n            }}\n            textProps={{\n              ml:2\n            }}\n            text={'Loading Delegate...'}\n          />\n        )\n       } \n      </Flex>\n    );\n  }\n}\n\nexport default DelegateVote;","import Title from '../Title/Title';\nimport { Box, Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport DelegateVote from './DelegateVote/DelegateVote';\n\nclass Delegate extends Component {\n\n  render() {\n    return (\n      <Box\n        width={1}\n      >\n        <Flex\n          mb={3}\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'flex-start'}\n        >\n          <Breadcrumb\n            {...this.props}\n            text={'Governance'}\n            path={['Delegate votes']}\n            isMobile={this.props.isMobile}\n            handleClick={ e => this.props.goToSection('') }\n          />\n        </Flex>\n        <Box\n          width={1}\n        >\n          <Title\n            mb={[3,4]}\n          >\n            Delegate Votes\n          </Title>\n          <Flex\n            px={[0,3]}\n            mb={[3,4]}\n            width={1}\n            flexDirection={'column'}\n            id={'delegate-container'}\n          >\n            <DelegateVote\n              {...this.props}\n            />\n          </Flex>\n        </Box>\n      </Box>\n    );\n  }\n}\n\nexport default Delegate;\n","import Title from '../../Title/Title';\nimport React, { Component } from 'react';\nimport styles from './NewProposal.module.scss';\nimport DelegateVote from '../DelegateVote/DelegateVote';\nimport RoundButton from '../../RoundButton/RoundButton';\nimport GovernanceUtil from '../../utilities/GovernanceUtil';\nimport DashboardCard from '../../DashboardCard/DashboardCard';\nimport TxProgressBar from '../../TxProgressBar/TxProgressBar';\nimport { Flex, Text, Heading, Input, Form, Field, Textarea, Icon, Select, Link } from \"rimble-ui\";\n\nclass NewProposal extends Component {\n\n  state = {\n    title:'',\n    actions:[],\n    txError:false,\n    actionValue:0,\n    customABI:null,\n    description:'',\n    processing: {\n      txHash:null,\n      loading:false\n    },\n    validated:false,\n    newAction:false,\n    editAction:null,\n    actionInputs:null,\n    actionValid:false,\n    customAddress:null,\n    contractOptions:[],\n    proposalCreated:false,\n    functionsOptions:null,\n    selectedContract:null,\n    selectedFunction:null,\n    selectedSignature:null,\n    availableFunctions:null,\n    availableContracts:null\n  }\n\n  // Utils\n  functionsUtil = null;\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n\n    this.functionsUtil = this.governanceUtil.functionsUtil;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    this.validateForm();\n    this.checkInputs();\n\n    const customABIChanged = prevState.customABI !== this.state.customABI;\n    // console.log('customABIChanged',customABIChanged,this.state.selectedContract);\n    if (customABIChanged && this.state.selectedContract === 'custom'){\n      this.loadFunctionsOptions();\n    }\n  }\n\n  loadData(){\n    const availableContracts = this.functionsUtil.getGlobalConfig(['governance','props','availableContracts']);\n    const contractOptions = [\n      {label:'Select a Contract',value:null}\n    ];\n\n    Object.keys(availableContracts).forEach( contractName => {\n      contractOptions.push({label:contractName,value:contractName});\n    });\n\n    contractOptions.push({label:'Custom',value:'custom'});\n\n    this.setState({\n      contractOptions,\n      availableContracts\n    });\n  }\n\n  handleInput(field,e,type=null){\n    let value = e.target.value;\n    this.setState({\n      [field]:value\n    });\n  }\n\n  validateForm(){\n    const validated = this.state.title.length>0 && this.state.description.length>0 && Object.values(this.state.actions).length>0;\n    if (validated !== this.state.validated){\n      this.setState({\n        validated\n      });\n    }\n  }\n\n  getContractABI(selectedContract=null){\n    selectedContract = selectedContract ? selectedContract : this.state.selectedContract;\n\n    let contractABI = null;\n    try {\n      contractABI = selectedContract === 'custom' ? JSON.parse(this.state.customABI) : this.state.availableContracts[selectedContract];\n    } catch (err) {\n      \n    }\n    return contractABI;\n  }\n\n  loadFunctionsOptions(selectedContract=null){\n    let actionInputs = null;\n    let functionsOptions = null;\n    let selectedFunction = null;\n    let selectedSignature = null;\n    let availableFunctions = null;\n\n    const contractABI = this.getContractABI(selectedContract);\n    if (contractABI){\n      availableFunctions = contractABI.filter( f => (!f.constant && f.type === 'function' && f.inputs.length>0 && ['nonpayable','payable'].includes(f.stateMutability)) )\n      functionsOptions = availableFunctions.map( (f,index) => ({\n                          label:f.name,\n                          value:index\n                        }));\n\n      // Add default option\n      functionsOptions.unshift({label:'Select a Function',value:null});\n    }\n\n    // console.log('loadFunctionsOptions',contractABI,functionsOptions);\n\n    this.setState({\n      actionInputs,\n      functionsOptions,\n      selectedFunction,\n      selectedSignature,\n      availableFunctions\n    });\n  }\n\n  changeContract(e){\n    const selectedContract = e.target.value;\n    const selectedContractChanged = selectedContract !== this.state.selectedContract;\n\n    if (selectedContractChanged){\n\n      // Reset function\n      let selectedFunction = null;\n      let selectedSignature = null;\n\n      const newState = {\n        selectedContract,\n        selectedFunction,\n        selectedSignature\n      };\n\n      // Load contract functions\n      if (selectedContract !== null){\n        const contractABI = this.getContractABI(selectedContract);\n        if (contractABI){\n          this.loadFunctionsOptions(selectedContract);\n        } else {\n          newState.functionsOptions = null;\n        }\n      }\n\n      // console.log('changeContract',newState);\n\n      this.setState(newState);\n    }\n  }\n\n  changeFunction(e){\n    const actionValue = 0;\n    let actionInputs = null;\n    const selectedSignature = e.target.value;\n    let selectedFunction = this.state.availableFunctions.find( (f,index) => (index === parseInt(selectedSignature)) );\n\n    if (selectedFunction){\n      actionInputs = new Array(selectedFunction.inputs.length);\n    } else {\n      selectedFunction  = null;\n    }\n\n    this.setState({\n      actionValue,\n      actionInputs,\n      selectedFunction,\n      selectedSignature\n    })\n  }\n  validateField(value,type){\n    if (value===null){\n      return false;\n    }\n    let valid = true;\n    if (type === 'json'){\n      valid = this.functionsUtil.isValidJSON(value);\n    } else {\n      const fieldPattern = this.getPatternByFieldType(type);\n      if (fieldPattern){\n        valid = value.toString().match(fieldPattern) !== null;\n      }\n    }\n    return valid;\n  }\n  getPatternByFieldType(type,returnString=false){\n    let fieldPattern = null;\n    switch (type){\n      case 'address':\n        fieldPattern = '^0x[a-fA-F0-9]{40}$';\n      break;\n      case 'address[]':\n        fieldPattern = '^((0x[a-fA-F0-9]{40})[,]?)+$';\n      break;\n      case 'string':\n        fieldPattern = '[\\\\w]+';\n      break;\n      case 'bool':\n        fieldPattern = '(0|1)';\n      break;\n      case 'uint256':\n      case 'uint8':\n        fieldPattern = '[\\\\d]+';\n      break;\n      default:\n        fieldPattern = null;\n      break;\n    }\n\n    if (!returnString && fieldPattern){\n      fieldPattern = new RegExp(fieldPattern);\n    }\n\n    return fieldPattern;\n  }\n\n  checkInputs(){\n\n    if (!this.state.actionInputs || !this.state.selectedFunction){\n      return false;\n    }\n\n    const inputs = this.state.selectedFunction.inputs;\n    let actionValid = Object.values(this.state.actionInputs).length === inputs.length;\n\n    if (actionValid){\n      Object.values(this.state.actionInputs).forEach( (inputValue,inputIndex) => {\n        const inputInfo = inputs[inputIndex];\n        const fieldPattern = this.getPatternByFieldType(inputInfo.type);\n        const inputValid = fieldPattern ? inputValue.match(fieldPattern) !== null : true;\n        actionValid = actionValid && inputValid;\n        // console.log('checkInputs',inputInfo.name,inputInfo.type,inputValue,inputValid,actionValid);\n      });\n    }\n\n    // Check custom token\n    if (actionValid && this.state.selectedContract === 'custom'){\n      actionValid = actionValid && this.validateField(this.state.customABI,'json') && this.validateField(this.state.customAddress,'address');\n    }\n\n    // console.log('actionValid',this.state.selectedContract,this.validateField(this.state.customABI,'json'),this.state.customAddress,this.validateField(this.state.customAddress,'address'),actionValid);\n\n    if (actionValid !== this.state.actionValid){\n      this.setState({\n        actionValid\n      });\n    }\n  }\n\n  valueChange(e,inputIndex){\n    let actionValue = e.target.value;\n    this.setState({\n      actionValue\n    });\n  }\n\n  inputChange(e,inputIndex){\n    let inputValue = e.target.value;\n\n    this.setState((prevState) => ({\n      actionInputs:{\n        ...prevState.actionInputs,\n        [inputIndex]:inputValue\n      }\n    }));\n  }\n\n  deleteAction(){\n    if (this.state.editAction !== null){\n      let actions = this.state.actions;\n      if (actions[this.state.editAction]){\n        delete actions[this.state.editAction];\n        actions = Object.values(actions);\n        const editAction = null;\n        const actionInputs = null;\n        const selectedContract = null;\n        const selectedFunction = null;\n        const selectedSignature = null;\n\n        this.setState({\n          actions,\n          editAction,\n          actionInputs,\n          selectedContract,\n          selectedFunction,\n          selectedSignature\n        });\n      }\n    }\n  }\n\n  addAction(){\n\n    // Check inputs number\n    const inputs = Object\n                    .values(this.state.actionInputs).filter( v => v.length>0 )\n                    .map( (inputValue,inputIndex) => {\n                      const inputInfo = this.state.selectedFunction.inputs[inputIndex];\n                      switch (inputInfo.type){\n                        case 'address[]':\n                          inputValue = inputValue.split(',');\n                        break;\n                        case 'uint256[]':\n                          inputValue = inputValue.split(',').map( n => this.functionsUtil.toBN(n) );\n                        break;\n                        case 'uint256':\n                          inputValue = this.functionsUtil.toBN(inputValue);\n                        break;\n                        default:\n                          if (inputInfo.type.substr(-2) === '[]'){\n                            inputValue = inputValue.split(',');\n                          }\n                        break;\n                      }\n\n                      return inputValue;\n                    });\n\n    if (inputs.length<this.state.selectedFunction.inputs.length){\n      return false;\n    }\n\n    // Check contract\n    let target = null;\n    if (this.state.selectedContract !== 'custom'){\n      const contract = this.functionsUtil.getContractByName(this.state.selectedContract);\n      if (!contract){\n        return false;\n      } else {\n        target = contract._address;\n      }\n    } else {\n      const contractABIValid = this.functionsUtil.isValidJSON(this.state.customABI);\n      if (!contractABIValid){\n        return false;\n      } else {\n        target = this.state.customAddress;\n      }\n    }\n    \n    const customABI = this.state.customABI;\n    const customAddress = this.state.customAddress;\n    const inputTypes = this.state.selectedFunction.inputs.map( i => (i.type) );\n    const calldata = this.props.web3.eth.abi.encodeParameters(inputTypes,inputs);\n    const signature = this.state.selectedFunction.name+'('+inputTypes.join(',')+')';\n    const value = this.state.actionValue ? this.functionsUtil.BNify(this.state.actionValue).toFixed(0) : this.functionsUtil.BNify(0).toFixed(0);\n\n    const action = {\n      params:{\n        value,\n        target,\n        calldata,\n        signature\n      },\n      customABI,\n      customAddress,\n      inputs:this.state.actionInputs,\n      function:this.state.selectedFunction,\n      contract:this.state.selectedContract,\n      signature:this.state.selectedSignature\n    };\n\n    const newAction = false;\n    const actions = Object.values(this.state.actions);\n\n    if (this.state.editAction === null){\n      actions.push(action);\n    } else {\n      actions[this.state.editAction] = action;\n    }\n\n    const editAction = null;\n\n    this.setState({\n      actions,\n      newAction,\n      editAction\n    });\n  }\n\n  setEditAction(editAction){\n\n    if (!this.state.actions[editAction]){\n      return false;\n    }\n\n    if (editAction === this.state.editAction){\n      return false;\n    }\n\n    const action = this.state.actions[editAction];\n\n    const newAction = false;\n    const actionInputs = action.inputs;\n    const customABI = action.customABI;\n    const actionValue = action.params.value;\n    const selectedContract = action.contract;\n    const selectedFunction = action.function;\n    const customAddress = action.customAddress;\n    const selectedSignature = action.signature;\n\n    this.setState({\n      customABI,\n      newAction,\n      editAction,\n      actionValue,\n      actionInputs,\n      customAddress,\n      selectedContract,\n      selectedFunction,\n      selectedSignature\n    });\n  }\n\n  setNewAction(newAction){\n    if (newAction === this.state.newAction){\n      return false;\n    }\n\n    const editAction = null;\n    const selectedContract = null;\n    const selectedFunction = null;\n\n    this.setState({\n      newAction,\n      editAction,\n      selectedContract,\n      selectedFunction\n    });\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  handleSubmit(e){\n    e.preventDefault();\n\n    const callback = (tx,error) => {\n      // Send Google Analytics event\n      const eventData = {\n        eventLabel: tx.status,\n        eventAction: 'propose',\n        eventCategory: 'Proposal',\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      const txSucceeded = tx.status === 'success';\n\n      const newState = {\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      };\n      \n      if (txSucceeded){\n        newState.actionValue = 0;\n        newState.customABI = null;\n        newState.newAction = null;\n        newState.editAction = null;\n        newState.actionInputs = null;\n        newState.customAddress = null;\n        newState.proposalCreated = true;\n        newState.selectedContract = null;\n        newState.functionsOptions = null;\n        newState.selectedFunction = null;\n        newState.selectedSignature = null;\n      } else {\n        newState.txError = true;\n      }\n\n      this.setState(newState);\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    const targets = [];\n    const values = [];\n    const signatures = [];\n    const calldatas = [];\n    const description = '#'+this.state.title+\"\\n\"+this.state.description;\n\n    Object.values(this.state.actions).forEach( action => {\n      values.push(action.params.value);\n      targets.push(action.params.target);\n      calldatas.push(action.params.calldata);\n      signatures.push(action.params.signature);\n    });\n\n    this.governanceUtil.propose(targets, values, signatures, calldatas, description, callback, callbackReceipt);\n    // this.governanceUtil.proposeAndVoteFor(targets, values, signatures, calldatas, description, callback, callbackReceipt);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    return false;\n  }\n\n  formValidated(){\n\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Title\n          mb={[3,4]}\n        >\n          Create Proposal\n        </Title>\n        {\n        this.state.proposalCreated ? (\n          <DashboardCard\n            cardProps={{\n              py:3,\n              px:4,\n              width:[1,'auto']\n            }}\n          >\n            <Flex\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Icon\n                name={'Done'}\n                align={'center'}\n                size={ this.props.isMobile ? '1.4em' : '2.2em' }\n                color={this.props.theme.colors.transactions.status.completed}\n              />\n              <Text\n                mt={1}\n                fontWeight={3}\n                fontSize={[2,3]}\n                color={'dark-gray'}\n                textAlign={'center'}\n              >\n                The proposal has been successfully created\n              </Text>\n            </Flex>\n          </DashboardCard>\n        ) : \n        // Has balance\n        this.props.votes && this.props.votes.gte(this.props.proposalThreshold) ? (\n          <Form\n            width={1}\n            validated={this.state.validated}\n            onSubmit={this.handleSubmit.bind(this)}\n          >\n            <Flex\n              mb={2}\n              width={1}\n              flexDirection={['column','row']}\n              justifyContent={['center','space-between']}\n            >\n              <Flex\n                width={[1,0.48]}\n                flexDirection={'column'}\n              >\n                <Flex\n                  pb={2}\n                  width={1}\n                  mb={[2,3]}\n                  borderColor={'divider'}\n                  borderBottom={'1px solid transparent'}\n                >\n                  <Heading.h4\n                    fontSize={[2,3]}\n                    fontWeight={[2,3]}\n                  >\n                    Proposal Description\n                  </Heading.h4>\n                </Flex>\n                <Flex\n                  flexDirection={'column'}\n                >\n                  <Field\n                    width={1}\n                    label={\"Title\"}\n                    validated={this.state.validated}\n                  >\n                    <Input\n                      required\n                      width={1}\n                      type={'text'}\n                      className={styles.input}\n                      value={this.state.title}\n                      placeholder={'Title of your proposal'}\n                      onChange={ e => this.handleInput('title',e) }\n                    />\n                  </Field>\n                </Flex>\n                <Flex\n                  flexDirection={'column'}\n                >\n                  <Field\n                    width={1}\n                    label={'Description'}\n                    validated={this.state.validated}\n                  >\n                    <Textarea\n                      required\n                      rows={8}\n                      width={1}\n                      className={styles.input}\n                      value={this.state.description}\n                      placeholder={'Description of your proposal'}\n                      onChange={ e => this.handleInput('description',e) }\n                    />\n                  </Field>\n                </Flex>\n              </Flex>\n\n              <Flex\n                width={[1,0.48]}\n                flexDirection={'column'}\n              >\n                <Flex\n                  pb={2}\n                  width={1}\n                  mb={[2,3]}\n                  borderColor={'divider'}\n                  borderBottom={'1px solid transparent'}\n                >\n                  <Heading.h4\n                    fontSize={[2,3]}\n                    fontWeight={[2,3]}\n                  >\n                    Actions\n                  </Heading.h4>\n                </Flex>\n                <Flex\n                  flexDirection={'column'}\n                >\n                  {\n                    Object.values(this.state.actions).map( (action,actionIndex) => {\n                      return (\n                        <DashboardCard\n                          cardProps={{\n                            py:2,\n                            px:3,\n                            mb:3,\n                            width:1\n                          }}\n                          titleParentProps={{\n                            ml:0,\n                            my:1,\n                            justifyContent:'center'\n                          }}\n                          titleProps={{\n                            fontSize:2,\n                            fontWeight:3\n                          }}\n                          isInteractive={true}\n                          key={`action_${actionIndex}`}\n                          handleClick={ e => this.setEditAction(actionIndex) }\n                          title={ this.state.editAction === actionIndex ? 'Edit Action' : null }\n                        >\n                          {\n                            this.state.editAction === actionIndex ? (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Field\n                                  style={{\n                                    width:'100%',\n                                    display:'flex',\n                                    alignItems:'stretch',\n                                    flexDirection:'column'\n                                  }}\n                                  label={\"Select Contract\"}\n                                >\n                                  <Select\n                                    style={{\n                                      width:'100%'\n                                    }}\n                                    required={true}\n                                    value={this.state.selectedContract}\n                                    options={this.state.contractOptions}\n                                    onChange={this.changeContract.bind(this)}\n                                  />\n                                </Field>\n                                {\n                                  this.state.selectedContract && this.state.selectedContract === 'custom' &&\n                                  (\n                                    <Flex\n                                      width={1}\n                                      flexDirection={'column'}\n                                    >\n                                      <Field\n                                        width={1}\n                                        label={\"Contract Address\"}\n                                        validated={this.state.validated}\n                                      >\n                                        <Input\n                                          required\n                                          width={1}\n                                          type={'text'}\n                                          className={styles.input}\n                                          placeholder={'Custom contract address'}\n                                          pattern={this.getPatternByFieldType('address',true)}\n                                          onChange={ e => this.handleInput('customAddress',e,'address') }\n                                          value={this.state.customAddress ? this.state.customAddress : ''}\n                                        />\n                                      </Field>\n                                      <Field\n                                        width={1}\n                                        label={'Custom ABI'}\n                                        validated={this.state.validated}\n                                      >\n                                        <Textarea\n                                          required\n                                          rows={8}\n                                          width={1}\n                                          className={styles.input}\n                                          placeholder={'Insert the ABI of your contract'}\n                                          onChange={ e => this.handleInput('customABI',e,'json') }\n                                          value={this.state.customABI ? this.state.customABI : ''}\n                                        />\n                                      </Field>\n                                    </Flex>\n                                  )\n                                }\n                                {\n                                  this.state.selectedContract && this.state.functionsOptions &&\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      label={\"Select Function\"}\n                                    >\n                                      <Select\n                                        style={{\n                                          width:'100%'\n                                        }}\n                                        required={true}\n                                        options={this.state.functionsOptions}\n                                        onChange={this.changeFunction.bind(this)}\n                                        value={this.state.selectedSignature ? this.state.selectedSignature : ''}\n                                      />\n                                    </Field>\n                                }\n                                {\n                                  this.state.selectedFunction && this.state.selectedFunction.payable && (\n                                    <Field\n                                      label={`Value`}\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                    >\n                                      <Input\n                                        required\n                                        width={1}\n                                        type={'number'}\n                                        className={styles.input}\n                                        placeholder={`Enter ETH value`}\n                                        onChange={ e => this.valueChange(e) }\n                                        value={this.state.actionValue ? this.state.actionValue : 0}\n                                      />\n                                    </Field>\n                                  )\n                                }\n                                {\n                                  this.state.selectedFunction &&\n                                    this.state.selectedFunction.inputs.map( (input,inputIndex) => {\n                                      const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                      const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                      return (\n                                        <Field\n                                          style={{\n                                            width:'100%',\n                                            display:'flex',\n                                            alignItems:'stretch',\n                                            flexDirection:'column'\n                                          }}\n                                          key={`input_${inputIndex}`}\n                                          label={`${input.name} (${input.type})`}\n                                        >\n                                          <Input\n                                            required\n                                            width={1}\n                                            type={fieldType}\n                                            pattern={fieldPattern}\n                                            className={styles.input}\n                                            placeholder={`${input.name} (${input.type})`}\n                                            onChange={ e => this.inputChange(e,inputIndex) }\n                                            value={this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                          />\n                                        </Field>\n                                      )\n                                    })\n                                }\n                                {\n                                  this.state.selectedContract && this.state.selectedFunction &&\n                                    <Flex\n                                      mb={2}\n                                      width={1}\n                                      alignItems={'center'}\n                                      flexDirection={'column'}\n                                      justifyContent={'center'}\n                                    >\n                                      <RoundButton\n                                        buttonProps={{\n                                          px:[0,4],\n                                          width:[1,'auto'],\n                                          type:'button',\n                                          disabled:!this.state.actionValid\n                                        }}\n                                        handleClick={this.addAction.bind(this)}\n                                      >\n                                        Save Action\n                                      </RoundButton>\n                                      <Link\n                                        mt={2}\n                                        color={'red'}\n                                        hoverColor={'red'}\n                                        onClick={this.deleteAction.bind(this)}\n                                      >\n                                        Delete Action\n                                      </Link>\n                                    </Flex>\n                                }\n                              </Flex>\n                            ) : (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                <Text>\n                                  {action.contract} - {action.params.signature}\n                                </Text>\n                                <Flex\n                                  p={['4px','7px']}\n                                  borderRadius={'50%'}\n                                  alignItems={'center'}\n                                  justifyContent={'center'}\n                                  backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                                >\n                                  <Icon\n                                    name={'Edit'}\n                                    align={'center'}\n                                    color={'redeem'}\n                                    size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                  />\n                                </Flex>\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                      );\n                    })\n                  }\n                  {\n                    (!this.state.actions || Object.values(this.state.actions).length<this.props.proposalMaxOperations) && (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        handleClick={ e => this.setNewAction(true) }\n                        title={ this.state.newAction ? 'Add Action' : null }\n                      >\n                        {\n                          this.state.newAction ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={\"Select Contract\"}\n                              >\n                                <Select\n                                  style={{\n                                    width:'100%'\n                                  }}\n                                  required={true}\n                                  options={this.state.contractOptions}\n                                  onChange={this.changeContract.bind(this)}\n                                />\n                              </Field>\n                              {\n                                this.state.selectedContract && this.state.selectedContract === 'custom' &&\n                                (\n                                  <Flex\n                                    width={1}\n                                    flexDirection={'column'}\n                                  >\n                                    <Field\n                                      width={1}\n                                      label={\"Contract Address\"}\n                                      validated={this.state.validated}\n                                    >\n                                      <Input\n                                        required\n                                        width={1}\n                                        type={'text'}\n                                        className={styles.input}\n                                        placeholder={'Custom contract address'}\n                                        pattern={this.getPatternByFieldType('address',true)}\n                                        onChange={ e => this.handleInput('customAddress',e,'address') }\n                                        value={this.state.customAddress ? this.state.customAddress : ''}\n                                      />\n                                    </Field>\n                                    <Field\n                                      width={1}\n                                      label={'Custom ABI'}\n                                      validated={this.state.validated}\n                                    >\n                                      <Textarea\n                                        required\n                                        rows={8}\n                                        width={1}\n                                        className={styles.input}\n                                        placeholder={'Insert the ABI of your contract'}\n                                        onChange={ e => this.handleInput('customABI',e,'json') }\n                                        value={this.state.customABI ? this.state.customABI : ''}\n                                      />\n                                    </Field>\n                                  </Flex>\n                                )\n                              }\n                              {\n                                this.state.selectedContract && this.state.functionsOptions && \n                                  <Field\n                                    style={{\n                                      width:'100%',\n                                      display:'flex',\n                                      alignItems:'stretch',\n                                      flexDirection:'column'\n                                    }}\n                                    label={\"Select Function\"}\n                                  >\n                                    <Select\n                                      style={{\n                                        width:'100%'\n                                      }}\n                                      required={true}\n                                      options={this.state.functionsOptions}\n                                      onChange={this.changeFunction.bind(this)}\n                                      value={this.state.selectedSignature ? this.state.selectedSignature : ''}\n                                    />\n                                  </Field>\n                              }\n                              {\n                                this.state.selectedFunction && this.state.selectedFunction.payable && (\n                                  <Field\n                                    label={`Value`}\n                                    style={{\n                                      width:'100%',\n                                      display:'flex',\n                                      alignItems:'stretch',\n                                      flexDirection:'column'\n                                    }}\n                                  >\n                                    <Input\n                                      required\n                                      width={1}\n                                      type={'number'}\n                                      className={styles.input}\n                                      placeholder={`Enter ETH value`}\n                                      onChange={ e => this.valueChange(e) }\n                                      value={this.state.actionValue ? this.state.actionValue : 0}\n                                    />\n                                  </Field>\n                                )\n                              }\n                              {\n                                this.state.selectedFunction &&\n                                  this.state.selectedFunction.inputs.map( (input,inputIndex) => {\n                                    const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                    const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                    return (\n                                      <Field\n                                        style={{\n                                          width:'100%',\n                                          display:'flex',\n                                          alignItems:'stretch',\n                                          flexDirection:'column'\n                                        }}\n                                        key={`input_${inputIndex}`}\n                                        label={`${input.name} (${input.type})`}\n                                      >\n                                        <Input\n                                          required\n                                          width={1}\n                                          type={fieldType}\n                                          pattern={fieldPattern}\n                                          className={styles.input}\n                                          placeholder={`${input.name} (${input.type})`}\n                                          onChange={ e => this.inputChange(e,inputIndex) }\n                                          value={this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                        />\n                                      </Field>\n                                    )\n                                  })\n                              }\n                              {\n                                this.state.selectedContract && this.state.selectedFunction &&\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    justifyContent={'center'}\n                                  >\n                                    <RoundButton\n                                      buttonProps={{\n                                        px:[0,4],\n                                        type:'button',\n                                        width:[1,'auto'],\n                                        disabled:!this.state.actionValid\n                                      }}\n                                      handleClick={this.addAction.bind(this)}\n                                    >\n                                      Add Action\n                                    </RoundButton>\n                                  </Flex>\n                              }\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                Add Action\n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'Add'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    )\n                  }\n\n                </Flex>\n              </Flex>\n            </Flex>\n            <Flex\n              mb={3}\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                // Sending transaction\n                this.state.processing && this.state.processing.loading ? (\n                  <TxProgressBar\n                    web3={this.props.web3}\n                    hash={this.state.processing.txHash}\n                    waitText={`Proposal creation estimated in`}\n                    endMessage={`Finalizing proposal creation request...`}\n                    cancelTransaction={this.cancelTransaction.bind(this)}\n                  />\n                ) : (\n                  <RoundButton\n                    buttonProps={{\n                      type:'submit',\n                      width:[1,'15em'],\n                      disabled:!this.state.validated\n                    }}\n                  >\n                    Submit Proposal\n                  </RoundButton>\n                )\n              }\n            </Flex>\n          </Form>\n        ) : this.props.balance && this.props.balance.gte(this.props.proposalThreshold) ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'column'}\n            justifyContent={'center'}\n          >\n            <Text\n              mb={3}\n              fontWeight={2}\n              fontSize={[2,3]}\n              color={'dark-gray'}\n              textAlign={'center'}\n            >\n              Please delegate your votes to yourself to create a new proposal.\n            </Text>\n            <DelegateVote\n              {...this.props}\n            />\n          </Flex>\n        ) : (\n          <Text\n            fontWeight={2}\n            fontSize={[2,3]}\n            color={'dark-gray'}\n            textAlign={'center'}\n          >\n            You need at least {this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(this.props.proposalThreshold,18),0)} delegated votes to send a new proposal.\n          </Text>\n        )\n       }\n      </Flex>\n    );\n  }\n}\n\nexport default NewProposal;","import React, { Component } from 'react';\nimport { Flex, Text, Box, Link } from \"rimble-ui\";\nimport FlexLoader from '../../FlexLoader/FlexLoader';\nimport RoundButton from '../../RoundButton/RoundButton';\nimport DelegateVote from '../DelegateVote/DelegateVote';\nimport ProposalField from '../ProposalField/ProposalField';\nimport GovernanceUtil from '../../utilities/GovernanceUtil';\nimport DashboardCard from '../../DashboardCard/DashboardCard';\nimport TxProgressBar from '../../TxProgressBar/TxProgressBar';\n\nclass CastVote extends Component {\n\n  state = {\n    vote:null,\n    loaded:false,\n    userVote:null,\n    processing:{\n      txHash:null,\n      loading:false\n    },\n    voteSucceed:false,\n    showDelegateBox:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n\n    this.functionsUtil = this.governanceUtil.functionsUtil;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const accountChanged = prevProps.account !== this.props.account;\n    if (accountChanged){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    if (this.props.account){\n      const userVote = this.props.proposal.votes.find( v => (v.voter.toLowerCase() === this.props.account.toLowerCase()) );\n      this.setState({\n        userVote,\n        loaded:true\n      });\n    }\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  toggleDelegateBox(showDelegateBox){\n    this.setState({\n      showDelegateBox\n    });\n  }\n\n  castVote(){\n\n    if (this.state.vote === null){\n      return false;\n    }\n\n    const callback = (tx,error) => {\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Proposal',\n        eventAction: 'CastVote',\n        eventLabel: this.state.vote\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      let userVote = null;\n      const txSucceeded = tx.status === 'success';\n      if (txSucceeded){\n        userVote = {\n          voter:this.props.account,\n          votes:this.props.votes.toString(),\n          support:this.state.vote === 'for',\n          proposalId:this.props.proposal.id,\n        };\n\n        if (typeof this.props.callback === 'function'){\n          this.props.callback();\n        }\n      }\n\n\n      this.setState({\n        userVote,\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      });\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    const vote = this.state.vote === 'for';\n    const proposalId = parseInt(this.props.proposal.id);\n\n    this.governanceUtil.castVote(proposalId,vote,callback,callbackReceipt);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n  }\n\n  setVote = (vote) => {\n    this.setState({\n      vote\n    });\n  }\n\n  render() {\n    return this.state.userVote ? (\n        <Flex\n          p={3}\n          width={1}\n          mb={[2,3]}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Text\n            mb={2}\n            fontWeight={4}\n            fontSize={[2,3]}\n            color={'dark-gray'}\n            textAlign={'center'}\n          >\n            You have voted for the proposal #{this.props.proposal.id}:\n          </Text>\n          <DashboardCard\n            cardProps={{\n              mb:2,\n              py:[2,3],\n              px:[3,4],\n              width:'auto'\n            }}\n            isInteractive={false}\n          >\n            <Flex\n              my={1}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <ProposalField\n                fieldInfo={{\n                  name:'statusIcon',\n                  state: this.state.userVote.support ? 'Executed' : 'Canceled',\n                  props:{\n                    mr:2\n                  }\n                }}\n              />\n              <Text\n                fontWeight={3}\n                fontSize={[2,3]}\n              >\n                {this.state.userVote.support ? 'For' : 'Against'}\n              </Text>\n            </Flex>\n          </DashboardCard>\n          <Text\n            fontSize={1}\n            fontWeight={500}\n            color={'statValue'}\n            textAlign={'center'}\n          >\n            voted with {this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(this.state.userVote.votes,18).toFixed(0,1),0)} votes\n          </Text>\n        </Flex>\n      ) : this.props.proposal.state === 'Active' && (\n        <Box\n          p={3}\n          width={1}\n          mb={[2,3]}\n        >\n          {\n            // Data not loaded yet\n            !this.state.loaded ? (\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row',\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading data...'}\n              />\n            ) :\n            // No votes delegated\n            (!this.props.votes || this.functionsUtil.BNify(this.props.votes).lte(0) || this.state.showDelegateBox) ? (\n              <DelegateVote\n                {...this.props}\n                canClose={this.state.showDelegateBox}\n                closeFunc={ e => this.toggleDelegateBox(false) }\n              />\n            ) : (\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Text\n                  mb={1}\n                  fontWeight={4}\n                  fontSize={[2,3]}\n                  color={'dark-gray'}\n                  textAlign={'center'}\n                >\n                  Cast your vote for the proposal #{this.props.proposal.id}:\n                </Text>\n                <Text\n                  mb={2}\n                  fontSize={1}\n                  color={'red'}\n                  fontWeight={500}\n                  textAlign={'center'}\n                >\n                  Make sure you have been delegated before this proposal has been submitted\n                </Text>\n                {\n                  this.state.processing && this.state.processing.loading ? (\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <TxProgressBar\n                        web3={this.props.web3}\n                        waitText={`Vote estimated in`}\n                        hash={this.state.processing.txHash}\n                        endMessage={`Finalizing vote request...`}\n                        cancelTransaction={this.cancelTransaction.bind(this)}\n                      />\n                    </Flex>\n                  ) : (\n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Flex\n                        mb={2}\n                        width={[1,0.4]}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:[2,3],\n                            width:0.48,\n                            onMouseDown:() => {\n                              this.setVote('for');\n                            }\n                          }}\n                          isInteractive={true}\n                          isActive={ this.state.vote === 'for' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <ProposalField\n                              fieldInfo={{\n                                name:'statusIcon',\n                                state:'Executed',\n                                props:{\n                                  mr:2\n                                }\n                              }}\n                            />\n                            <Text\n                              fontWeight={3}\n                              fontSize={[2,3]}\n                            >\n                              For\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:[2,3],\n                            width:0.48,\n                            onMouseDown:() => {\n                              this.setVote('against');\n                            }\n                          }}\n                          isInteractive={true}\n                          isActive={ this.state.vote === 'against' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <ProposalField\n                              fieldInfo={{\n                                name:'statusIcon',\n                                state:'Canceled',\n                                props:{\n                                  mr:2\n                                }\n                              }}\n                            />\n                            <Text\n                              fontWeight={3}\n                              fontSize={[2,3]}\n                            >\n                              Against\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Text\n                        mb={0}\n                        fontSize={1}\n                        fontWeight={500}\n                        color={'statValue'}\n                        textAlign={'center'}\n                      >\n                        You have {this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(this.props.votes,18).toFixed(0,1),0)} votes delegated\n                      </Text>\n                      {\n                        this.props.balance && this.functionsUtil.BNify(this.props.balance).gt(0) &&\n                          <Link\n                            mt={0}\n                            mainColor={'primary'}\n                            hoverColor={'primary'}\n                            onClick={ e => this.toggleDelegateBox(true) }\n                          >\n                            change delegate\n                          </Link>\n                      }\n                      <RoundButton\n                        buttonProps={{\n                          mt:2,\n                          width:[1,0.2],\n                          disabled:this.state.vote === null\n                        }}\n                        handleClick={this.castVote.bind(this)}\n                      >\n                        Vote\n                      </RoundButton>\n                    </Flex>\n                  )\n                }\n              </Flex>\n            )\n          }\n        </Box>\n      );\n  }\n}\n\nexport default CastVote;","import Title from '../../Title/Title';\nimport React, { Component } from 'react';\nimport CastVote from '../CastVote/CastVote';\nimport StatsCard from '../../StatsCard/StatsCard';\nimport RoundButton from '../../RoundButton/RoundButton';\nimport { Box, Flex, Blockie, Text, Link } from \"rimble-ui\";\nimport ProposalField from '../ProposalField/ProposalField';\nimport GovernanceUtil from '../../utilities/GovernanceUtil';\nimport ShortHash from \"../../utilities/components/ShortHash\";\nimport TxProgressBar from '../../TxProgressBar/TxProgressBar';\nimport DashboardCard from '../../DashboardCard/DashboardCard';\n\nclass ProposalDetails extends Component {\n\n  state = {\n    showActionParams:null,\n    processing:{\n      action:null,\n      txHash:null,\n      loading:false\n    },\n  };\n\n  // Utils\n  functionsUtil = null;\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n\n    this.functionsUtil = this.governanceUtil.functionsUtil;\n  }\n\n  toggleShowParams(showActionParams){\n    // Reset show action params\n    if (this.state.showActionParams === showActionParams){\n      showActionParams = null;\n    }\n    this.setState({\n      showActionParams\n    });\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        action:null,\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async queueProposal(){\n\n    const callback = (tx,error) => {\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'queue',\n        eventCategory: 'Governance',\n        eventLabel: this.props.proposal.id\n      };\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      if (typeof this.props.loadData === 'function' && tx.status === 'success'){\n        this.props.loadData();\n      }\n\n      this.setState({\n        processing: {\n          action:null,\n          txHash:null,\n          loading:false\n        }\n      });\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.governanceUtil.queueProposal(this.props.proposal.id,callback,callbackReceipt);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true,\n        action:'Queue'\n      }\n    }));\n  }\n\n  async executeProposal(){\n    const callback = (tx,error) => {\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'execute',\n        eventCategory: 'Governance',\n        eventLabel: this.props.proposal.id\n      };\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      if (typeof this.props.loadData === 'function' && tx.status === 'success'){\n        this.props.loadData();\n      }\n\n      this.setState({\n        processing: {\n          action:null,\n          txHash:null,\n          loading:false\n        }\n      });\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.governanceUtil.executeProposal(this.props.proposal.id,callback,callbackReceipt);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true,\n        action:'Execute'\n      }\n    }));\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n\n    window.loadData = this.props.loadData;\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    let proposal = this.props.proposal;\n    const lastState = Object.values(proposal.states).pop();\n    const hasVotes = proposal.votes && proposal.votes.length>0;\n    const forVotes = this.functionsUtil.BNify(proposal.forVotes).div(1e18);\n    const againstVotes = this.functionsUtil.BNify(proposal.againstVotes).div(1e18);\n    const totalVotes = forVotes.plus(againstVotes);\n    const forVotesPerc = forVotes.div(totalVotes).times(100).toFixed(2);\n    const againstVotesPerc = againstVotes.div(totalVotes).times(100).toFixed(2);\n    const forVotesAddrs = proposal.votes.filter( v => (v.support) ).sort( (a,b) => (this.functionsUtil.BNify(a.votes).lt(this.functionsUtil.BNify(b.votes)) ? 1 : -1) );\n    const againstVotesAddrs = proposal.votes.filter( v => (!v.support) ).sort( (a,b) => (this.functionsUtil.BNify(a.votes).lt(this.functionsUtil.BNify(b.votes)) ? 1 : -1) );\n\n    const canQueue = proposal.state.toLowerCase() === 'succeeded'; \n    const canExecute = proposal.state.toLowerCase() === 'queued';\n\n    return (\n      <Box\n        width={1}\n      >\n        <Title\n          mb={[3,4]}\n        >\n          {proposal.title}\n        </Title>\n        <Flex\n          mb={3}\n          width={1}\n          alignItems={'center'}\n          justifyContent={'center'}\n          flexDirection={['column','row']}\n        >\n          <Flex\n            mb={[2,0]}\n            pr={[0,1]}\n            width={[1,1/4]}\n            flexDirection={'column'}\n          >\n            <StatsCard\n              labelTooltip={null}\n              title={'Proposal ID'}\n              value={`#${proposal.id}`}\n              minHeight={['110px','143px']}\n              titleMinHeight={['auto','50px']}\n              label={`Created on ${this.functionsUtil.strToMoment(proposal.states[0].start_time*1000).format('DD MMM, YYYY')}`}\n            />\n          </Flex>\n          <Flex\n            mb={[2,0]}\n            pl={[0,1]}\n            pr={[0,1]}\n            width={[1,1/4]}\n            flexDirection={'column'}\n          >\n            <StatsCard\n              titleMinHeight={['auto','50px']}\n              minHeight={['110px','143px']}\n              labelTooltip={ null }\n              title={'Proposer'}\n              label={null}\n            >\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <Blockie\n                  opts={{\n                    size: 12,\n                    color: \"#dfe\",\n                    bgcolor: \"#a71\",\n                    spotcolor: \"#000\",\n                    seed: proposal.address,\n                  }}\n                />\n                <ShortHash\n                  ml={2}\n                  lineHeight={1}\n                  fontSize={[3,4]}\n                  fontWeight={[3,4]}\n                  color={'statValue'}\n                  hash={proposal.proposer}\n                />\n              </Flex>\n            </StatsCard>\n          </Flex>\n          <Flex\n            mb={[2,0]}\n            pl={[0,1]}\n            pr={[0,1]}\n            width={[1,1/4]}\n            flexDirection={'column'}\n          >\n            <StatsCard\n              title={'Status'}\n              labelTooltip={ null }\n              minHeight={['110px','143px']}\n              titleMinHeight={['auto','50px']}\n              label={`Updated on ${this.functionsUtil.strToMoment(lastState.start_time*1000).format('DD MMM, YYYY')}`}\n            >\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <ProposalField\n                  {...this.props}\n                  proposal={proposal}\n                  fieldInfo={{\n                    name:'statusIcon',\n                    props:{\n                      size: this.props.isMobile ? '1.7em' : '2em'\n                    }\n                  }}\n                />\n                <Text\n                  ml={2}\n                  lineHeight={1}\n                  fontSize={[4,5]}\n                  fontWeight={[3,4]}\n                  color={'statValue'}\n                >\n                  {proposal.state}\n                </Text>\n              </Flex>\n            </StatsCard>\n          </Flex>\n          <Flex\n            pl={[0,1]}\n            mb={[2,0]}\n            width={[1,1/4]}\n            flexDirection={'column'}\n          >\n            <StatsCard\n              label={null}\n              title={'Total Votes'}\n              labelTooltip={ null }\n              minHeight={['110px','143px']}\n              titleMinHeight={['auto','50px']}\n              value={this.functionsUtil.formatMoney(totalVotes.toFixed(0,1),0)}\n            />\n          </Flex>\n        </Flex>\n        {\n          this.props.account && \n            <CastVote\n              {...this.props}\n              callback={this.props.loadData}\n            />\n        }\n        <Flex\n          width={1}\n          mb={[2,3]}\n          id={'details-container'}\n          justifyContent={'space-between'}\n          flexDirection={['column','row']}\n        >\n          <DashboardCard\n            cardProps={{\n              p:3,\n              mb:[2,0],\n              mr:[0,1],\n              width:[1,1/2]\n            }}\n            title={'Actions'}\n            titleParentProps={{\n              mt:0,\n              ml:0\n            }}\n          >\n            <Flex\n              pt={2}\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                proposal.actions.signatures.map( (action,actionIndex) => {\n                  const data = proposal.actions.calldatas[actionIndex];\n                  // const targetAddr = proposal.actions.targets[actionIndex];\n\n                  let decodedParams = null;\n                  let attrs = action.match(/\\(([a-z0-9,]+(\\[\\])?)\\)/i);\n                  attrs = attrs ? attrs[1].split(',') : null;\n\n                  if (attrs){\n                    decodedParams = this.props.web3.eth.abi.decodeParameters(attrs,data);\n                    if (decodedParams){\n                      decodedParams = Object.values(decodedParams).splice(0,attrs.length);\n                    }\n                  }\n\n                  return (\n                    <Flex\n                      py={1}\n                      width={1}\n                      flexDirection={'column'}\n                      alignItems={'flex-start'}\n                      key={`action_${actionIndex}`}\n                      justifyContent={'flex-start'}\n                      borderBottom={`1px solid ${this.props.theme.colors['near-white']}`}\n                    >\n                      <Flex\n                        mb={1}\n                        width={1}\n                        flexDirection={['column','row']}\n                        alignItems={['flex-start','center']}\n                      >\n                        <Flex\n                          flexDirection={'row'}\n                        >\n                          <Text\n                            fontSize={1}\n                            fontWeight={3}\n                            color={'dark-gray'}\n                          >\n                            {parseInt(actionIndex)+1}\n                          </Text>\n                          <Text\n                            ml={2}\n                            fontSize={1}\n                            fontWeight={2}\n                            color={'dark-gray'}\n                          >\n                            {action}\n                          </Text>\n                        </Flex>\n                        {\n                          decodedParams &&\n                            <Link\n                              mt={[1,0]}\n                              ml={[0,1]}\n                              fontSize={1}\n                              fontWeight={2}\n                              textAlign={'left'}\n                              lineHeight={'initial'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.toggleShowParams(actionIndex) }\n                            >\n                              {\n                                this.state.showActionParams === actionIndex ? '(hide params)' : '(show params)'\n                              }\n                            </Link>\n                        }\n                      </Flex>\n                      {\n                        decodedParams && this.state.showActionParams === actionIndex &&\n                          <Flex\n                            pl={[0,3]}\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            {\n                              decodedParams.map( (param,paramIndex) => (\n                                <Text\n                                  fontSize={0}\n                                  color={'statValue'}\n                                  key={`param_${paramIndex}`}\n                                >\n                                  {param}\n                                </Text>\n                              ))\n                            }\n                          </Flex>\n                      }\n                    </Flex>\n                  );\n                })\n              }\n            </Flex>\n          </DashboardCard>\n          <DashboardCard\n            cardProps={{\n              p:3,\n              ml:[0,1],\n              width:[1,1/2]\n            }}\n          >\n            <Flex\n              mb={2}\n              width={1}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <Text\n                fontWeight={4}\n                fontSize={[2,3]}\n                textAlign={'left'}\n                color={'dark-gray'}\n                lineHeight={'initial'}\n              >\n                Proposal History\n              </Text>\n              <Text\n                fontWeight={4}\n                fontSize={[2,3]}\n                textAlign={'left'}\n                color={'dark-gray'}\n                lineHeight={'initial'}\n              >\n                Date\n              </Text>\n            </Flex>\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                proposal.states.map( (stateInfo,stateIndex) => {\n                  return (\n                    <Flex\n                      py={2}\n                      width={1}\n                      alignItems={'center'}\n                      key={`state_${stateIndex}`}\n                      justifyContent={'space-between'}\n                      borderBottom={`1px solid ${this.props.theme.colors['near-white']}`}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <ProposalField\n                          {...this.props}\n                          proposal={proposal}\n                          fieldInfo={{\n                            name:'statusIcon',\n                            state:stateInfo.state,\n                            props:{\n                              size: this.props.isMobile ? '1.3em' : '1.5em'\n                            }\n                          }}\n                        />\n                        <Link\n                          ml={2}\n                          fontSize={1}\n                          fontWeight={2}\n                          target={'_blank'}\n                          textAlign={'left'}\n                          color={'dark-gray'}\n                          lineHeight={'initial'}\n                          hoverColor={'primary'}\n                          rel={'nofollow noopener noreferrer'}\n                          href={this.functionsUtil.getEtherscanTransactionUrl(stateInfo.trx_hash)}\n                        >\n                          {stateInfo.state}\n                        </Link>\n                      </Flex>\n                      <Text\n                        fontSize={1}\n                        fontWeight={2}\n                        textAlign={'left'}\n                        color={'dark-gray'}\n                        lineHeight={'initial'}\n                      >\n                        {this.functionsUtil.strToMoment(stateInfo.start_time*1000).format('DD MMM, YYYY')}\n                      </Text>\n                    </Flex>\n                  );\n                })\n              }\n              {\n                this.state.processing && this.state.processing.loading ? (\n                  <Flex\n                    mt={3}\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      web3={this.props.web3}\n                      hash={this.state.processing.txHash}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      waitText={`${this.state.processing.action} estimated in`}\n                      endMessage={`Finalizing ${this.state.processing.action.toLowerCase()} request...`}\n                    />\n                  </Flex>\n                ) : canQueue ? (\n                  <RoundButton\n                    buttonProps={{\n                      mt:3,\n                      width:[1,'auto'],\n                    }}\n                    handleClick={this.queueProposal.bind(this)}\n                  >\n                    Queue Proposal\n                  </RoundButton>\n                ) : canExecute && (\n                  <RoundButton\n                    buttonProps={{\n                      mt:3,\n                      width:[1,'auto'],\n                    }}\n                    handleClick={this.executeProposal.bind(this)}\n                  >\n                    Execute Proposal\n                  </RoundButton>\n                )\n              }\n            </Flex>\n          </DashboardCard>\n        </Flex>\n        <DashboardCard\n          cardProps={{\n            p:3,\n            mb:[2,3]\n          }}\n          title={'Details'}\n          titleParentProps={{\n            mt:0,\n            ml:0\n          }}\n        >\n          <Text\n            mt={2}\n            fontSize={[1,2]}\n            style={{\n              wordBreak:'break-word'\n            }}\n            dangerouslySetInnerHTML={{\n              __html:proposal.description.replace(/\\n/g,\"<br />\")\n            }}\n          >\n          </Text>\n        </DashboardCard>\n        {\n          hasVotes && \n            <DashboardCard\n              cardProps={{\n                p:3,\n                mb:[2,3]\n              }}\n            >\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Flex\n                  mb={2}\n                  width={1}\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  <Text\n                    fontWeight={4}\n                    fontSize={[2,3]}\n                    textAlign={'left'}\n                    color={'dark-gray'}\n                    lineHeight={'initial'}\n                  >\n                    For ({forVotesPerc}%)\n                  </Text>\n                  <Text\n                    fontWeight={4}\n                    fontSize={[2,3]}\n                    textAlign={'left'}\n                    color={'dark-gray'}\n                    lineHeight={'initial'}\n                  >\n                    Against ({againstVotesPerc}%)\n                  </Text>\n                </Flex>\n                <Flex\n                  mb={2}\n                  width={1}\n                  height={'20px'}\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  id={'votes-cursor-container'}\n                >\n                  <Flex\n                    height={'100%'}\n                    width={`${forVotesPerc}%`}\n                    style={{background:'rgba(0, 211, 149, 1)'}}\n                    borderRadius={ parseFloat(forVotesPerc)===100 ? '20px' : '20px 0 0 20px' }\n                  >\n                  </Flex>\n                  <Flex\n                    height={'100%'}\n                    width={`${againstVotesPerc}%`}\n                    style={{background:'rgba(211, 0, 0, 1)'}}\n                    borderRadius={ parseFloat(againstVotesPerc)===100 ? '20px' : '0 20px 20px 0' }\n                  >\n                  </Flex>\n                </Flex>\n                <Flex\n                  width={1}\n                  height={'20px'}\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  id={'votes-number-container'}\n                >\n                  <Flex\n                    width={1/2}\n                    height={'100%'}\n                    justifyContent={'flex-end'}\n                  >\n                    <Flex\n                      width={1}\n                      height={'100%'}\n                      justifyContent={'flex-start'}\n                    >\n                      <Text\n                        fontWeight={3}\n                        fontSize={[1,2]}\n                        textAlign={'left'}\n                        color={'statValue'}\n                        lineHeight={'initial'}\n                      >\n                        {this.functionsUtil.formatMoney(forVotes.toFixed(0,1),0)}\n                      </Text>\n                    </Flex>\n                  </Flex>\n                  <Flex\n                    width={1/2}\n                    height={'100%'}\n                    justifyContent={'flex-start'}\n                  >\n                    <Flex\n                      width={1}\n                      height={'100%'}\n                      minWidth={'10%'}\n                      justifyContent={'flex-end'}\n                    >\n                      <Text\n                        fontWeight={3}\n                        fontSize={[1,2]}\n                        textAlign={'right'}\n                        color={'statValue'}\n                        lineHeight={'initial'}\n                      >\n                        {this.functionsUtil.formatMoney(againstVotes.toFixed(0,1),0)}\n                      </Text>\n                    </Flex>\n                  </Flex>\n                </Flex>\n              </Flex>\n            </DashboardCard>\n        }\n        {\n          hasVotes && \n            <Flex\n              mb={4}\n              width={1}\n              id={'votes-addresses-container'}\n              justifyContent={'space-between'}\n              flexDirection={['column','row']}\n            >\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mb:[2,0],\n                  mr:[0,1],\n                  width:[1,1/2]\n                }}\n                id={'for-votes-addresses-container'}\n              >\n                <Flex\n                  width={1}\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                  justifyContent={'center'}\n                >\n                  <Flex\n                    mb={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <Text\n                      fontWeight={4}\n                      fontSize={[2,3]}\n                      textAlign={'left'}\n                      color={'dark-gray'}\n                      lineHeight={'initial'}\n                    >\n                      For Addresses ({forVotesAddrs.length})\n                    </Text>\n                    <Text\n                      fontWeight={4}\n                      fontSize={[2,3]}\n                      textAlign={'left'}\n                      color={'dark-gray'}\n                      lineHeight={'initial'}\n                    >\n                      Votes\n                    </Text>\n                  </Flex>\n                  <Flex\n                    width={1}\n                    style={{\n                      overflow:'scroll'\n                    }}\n                    maxHeight={'400px'}\n                    flexDirection={'column'}\n                  >\n                    {\n                      forVotesAddrs.map( (voteInfo,voteIndex) => {\n                        const votes = this.functionsUtil.formatMoney(this.functionsUtil.BNify(voteInfo.votes).div(1e18).toFixed(4,1),4);\n                        return (\n                          <Flex\n                            py={2}\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            key={`vote_for_${voteIndex}`}\n                            justifyContent={'space-between'}\n                            borderBottom={`1px solid ${this.props.theme.colors['near-white']}`}\n                          >\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Blockie\n                                opts={{\n                                  size: 7,\n                                  color: \"#dfe\",\n                                  bgcolor: \"#a71\",\n                                  spotcolor: \"#000\",\n                                  seed: voteInfo.voter,\n                                }}\n                              />\n                              <Link\n                                ml={2}\n                                fontSize={1}\n                                fontWeight={2}\n                                target={'_blank'}\n                                textAlign={'left'}\n                                color={'statValue'}\n                                lineHeight={'initial'}\n                                hoverColor={'primary'}\n                                rel={'nofollow noopener noreferrer'}\n                                href={`/#/governance/leaderboard/${voteInfo.voter}`}\n                              >\n                                {\n                                  this.props.isMobile ? (\n                                    <ShortHash\n                                      fontSize={1}\n                                      fontWeight={2}\n                                      textAlign={'left'}\n                                      color={'statValue'}\n                                      hash={voteInfo.voter}\n                                      lineHeight={'initial'}\n                                    />\n                                  ) : voteInfo.voter\n                                }\n                              </Link>\n                            </Flex>\n                            <Text\n                              fontSize={1}\n                              fontWeight={2}\n                              textAlign={'left'}\n                              color={'statValue'}\n                              lineHeight={'initial'}\n                            >\n                              {votes}\n                            </Text>\n                          </Flex>\n                        )\n                      })\n                    }\n                  </Flex>\n                </Flex>\n              </DashboardCard>\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  ml:[0,1],\n                  width:[1,1/2]\n                }}\n                id={'against-votes-addresses-container'}\n              >\n                <Flex\n                  mb={2}\n                  width={1}\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  <Text\n                    fontWeight={4}\n                    fontSize={[2,3]}\n                    textAlign={'left'}\n                    color={'dark-gray'}\n                    lineHeight={'initial'}\n                  >\n                    Against Addresses ({againstVotesAddrs.length})\n                  </Text>\n                  <Text\n                    fontWeight={4}\n                    fontSize={[2,3]}\n                    textAlign={'left'}\n                    color={'dark-gray'}\n                    lineHeight={'initial'}\n                  >\n                    Votes\n                  </Text>\n                </Flex>\n                <Flex\n                  width={1}\n                  style={{\n                    overflow:'scroll'\n                  }}\n                  maxHeight={'400px'}\n                  flexDirection={'column'}\n                >\n                  {\n                    againstVotesAddrs.map( (voteInfo,voteIndex) => {\n                      const votes = this.functionsUtil.formatMoney(this.functionsUtil.BNify(voteInfo.votes).div(1e18).toFixed(4,1),4);\n                      return (\n                        <Flex\n                          py={2}\n                          width={1}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                          key={`vote_against_${voteIndex}`}\n                          borderBottom={`1px solid ${this.props.theme.colors['near-white']}`}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'flex-start'}\n                          >\n                            <Blockie\n                              opts={{\n                                size: 7,\n                                color: \"#dfe\",\n                                bgcolor: \"#a71\",\n                                spotcolor: \"#000\",\n                                seed: voteInfo.voter,\n                              }}\n                            />\n                            <Link\n                              ml={2}\n                              fontSize={1}\n                              fontWeight={2}\n                              target={'_blank'}\n                              textAlign={'left'}\n                              color={'statValue'}\n                              lineHeight={'initial'}\n                              hoverColor={'primary'}\n                              rel={'nofollow noopener noreferrer'}\n                              href={`/#/governance/leaderboard/${voteInfo.voter}`}\n                            >\n                              {voteInfo.voter}\n                            </Link>\n                          </Flex>\n                          <Text\n                            fontSize={1}\n                            fontWeight={2}\n                            textAlign={'left'}\n                            color={'statValue'}\n                            lineHeight={'initial'}\n                          >\n                            {votes}\n                          </Text>\n                        </Flex>\n                      )\n                    })\n                  }\n                </Flex>\n              </DashboardCard>\n            </Flex>\n        }\n      </Box>\n    );\n  }\n}\n\nexport default ProposalDetails;","import Title from '../Title/Title';\nimport { Box, Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport NewProposal from './NewProposal/NewProposal';\nimport GovernanceUtil from '../utilities/GovernanceUtil';\nimport ProposalsList from './ProposalsList/ProposalsList';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport ProposalDetails from './ProposalDetails/ProposalDetails';\n\nclass Proposals extends Component {\n  state = {\n    proposals:null,\n    addProposal:false,\n    selectedProposal:null\n  };\n\n  // Utils\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const contractsInitialized = this.props.contractsInitialized && prevProps.contractsInitialized !== this.props.contractsInitialized;\n    if (contractsInitialized){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n\n    if (!this.props.contractsInitialized){\n      return false;\n    }\n\n    const proposals = await this.governanceUtil.getProposals();\n\n    const { match: { params } } = this.props;\n      \n    // Look if proposalId exists\n    let addProposal = false;\n    let selectedProposal = null;\n    if (params.item_id && parseInt(params.item_id)){\n      const proposalId = parseInt(params.item_id);\n      const foundProposal = proposals.find( p => parseInt(p.id) === proposalId );\n      // Set selected proposal\n      if (foundProposal){\n        selectedProposal = foundProposal;\n      }\n    } else if (params.item_id && params.item_id.toLowerCase() === 'new'){\n      addProposal = true;\n    }\n\n    this.setState({\n      proposals,\n      addProposal,\n      selectedProposal\n    });\n  }\n\n  render() {\n    return (\n      <Box\n        width={1}\n      >\n        <Flex\n          mb={3}\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={(this.state.selectedProposal || this.state.addProposal) ? 'space-between' : 'flex-end'}\n        >\n          {\n            this.state.selectedProposal ? (\n              <Flex\n                alignItems={'center'}\n                width={0.5}\n              >\n                <Breadcrumb\n                  {...this.props}\n                  text={'Governance'}\n                  pathLink={['proposals']}\n                  isMobile={this.props.isMobile}\n                  handleClick={ e => this.props.goToSection('/') }\n                  path={['Proposals',this.state.selectedProposal.title]}\n                />\n              </Flex>\n            ) : this.state.addProposal ? (\n              <Flex\n                alignItems={'center'}\n                width={0.5}\n              >\n                <Breadcrumb\n                  {...this.props}\n                  text={'Governance'}\n                  pathLink={['proposals']}\n                  isMobile={this.props.isMobile}\n                  path={['Proposals','Add proposal']}\n                  handleClick={ e => this.props.goToSection('/') }\n                />\n              </Flex>\n            ) : (\n              <Flex\n                alignItems={'center'}\n                width={0.5}\n              >\n                <Breadcrumb\n                  {...this.props}\n                  text={'Governance'}\n                  path={['Proposals']}\n                  isMobile={this.props.isMobile}\n                  handleClick={ e => this.props.goToSection('/') }\n                />\n              </Flex>\n            )\n          }\n          {\n            !this.state.addProposal && \n              <Flex\n                width={0.5}\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <CardIconButton\n                  icon={'Add'}\n                  {...this.props}\n                  text={'New Proposal'}\n                  handleClick={ e => this.props.goToSection(`proposals/new`) }\n                />\n              </Flex>\n          }\n        </Flex>\n        {\n          this.state.selectedProposal ? (\n            <Box\n              width={1}\n            >\n              <ProposalDetails\n                {...this.props}\n                loadData={this.loadData.bind(this)}\n                proposal={this.state.selectedProposal}\n              />\n            </Box>\n          ) : this.state.addProposal ? (\n            <Box\n              width={1}\n            >\n              <NewProposal\n                {...this.props}\n              />\n            </Box>\n          ) : (\n            <Box\n              width={1}\n            >\n              <Title\n                mb={[3,4]}\n              >\n                Governance Proposals\n              </Title>\n              <Flex\n                mb={3}\n                width={1}\n                id={'proposals'}\n                flexDirection={'column'}\n              >\n                <ProposalsList\n                  {...this.props}\n                  proposals={this.state.proposals}\n                  cols={[\n                    {\n                      title: '#',\n                      props:{\n                        width:[0.1,0.05]\n                      },\n                      fields:[\n                        {\n                          name:'id',\n                          props:{\n                          }\n                        },\n                      ]\n                    },\n                    {\n                      title:'DATE',\n                      mobile:false,\n                      props:{\n                        width:[0.15,0.12],\n                      },\n                      fields:[\n                        {\n                          name:'date'\n                        }\n                      ]\n                    },\n                    {\n                      title:'TITLE',\n                      props:{\n                        width:[0.75,0.60],\n                      },\n                      fields:[\n                        {\n                          name:'title'\n                        }\n                      ]\n                    },\n                    {\n                      mobile:false,\n                      title:'VOTES',\n                      props:{\n                        width:[0.11,0.11],\n                      },\n                      fields:[\n                        {\n                          name:'votes'\n                        }\n                      ]\n                    },\n                    {\n                      title:'STATUS',\n                      props:{\n                        width:[0.15,0.12],\n                        alignItems:['center','flex-start'],\n                        justifyContent:['center','flex-start']\n                      },\n                      parentProps:{\n                        justifyContent:['center','flex-start']\n                      },\n                      fields:[\n                        {\n                          name:'statusIcon',\n                          props:{\n                            mr:[0,2],\n                          },\n                        },\n                        {\n                          mobile:false,\n                          name:'status'\n                        }\n                      ]\n                    },\n                  ]}\n                />\n              </Flex>\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default Proposals;\n","import Title from '../../Title/Title';\nimport React, { Component } from 'react';\nimport ExtLink from '../../ExtLink/ExtLink';\nimport StatsCard from '../../StatsCard/StatsCard';\nimport { Box, Flex, Blockie, Icon } from \"rimble-ui\";\nimport ProposalsList from '../ProposalsList/ProposalsList';\nimport GovernanceUtil from '../../utilities/GovernanceUtil';\nimport ShortHash from \"../../utilities/components/ShortHash\";\n\nclass DelegateDetails extends Component {\n\n  state = {\n    proposals:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n\n    this.functionsUtil = this.governanceUtil.functionsUtil;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadProposals();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const delegateChanged = JSON.stringify(prevProps.delegate) !== JSON.stringify(this.props.delegate);\n    if (delegateChanged){\n      this.loadProposals();\n    }\n  }\n\n  async loadProposals(){\n    const delegate = this.props.delegate;\n    const proposals = await this.governanceUtil.getProposals(delegate.delegate);\n\n    this.setState({\n      proposals\n    });\n  }\n\n  render() {\n\n    const delegate = this.props.delegate;\n\n    // rank\n    // votes\n    // delegate\n    // proposals\n    // vote_weight\n\n    return (\n      <Box\n        width={1}\n      >\n        <Title\n          mb={[3,4]}\n        >\n          Delegate Details\n        </Title>\n        <Flex\n          mb={3}\n          width={1}\n          alignItems={'center'}\n          justifyContent={'center'}\n          flexDirection={['column','row']}\n        >\n          <Flex\n            mb={[2,0]}\n            pr={[0,1]}\n            width={[1,1/4]}\n            flexDirection={'column'}\n          >\n            <StatsCard\n              label={null}\n              title={'Rank'}\n              value={delegate.rank}\n              labelTooltip={ null }\n              minHeight={['100px','143px']}\n              titleMinHeight={['auto','50px']}\n            />\n          </Flex>\n          <Flex\n            mb={[2,0]}\n            pl={[0,1]}\n            pr={[0,1]}\n            width={[1,1/4]}\n            flexDirection={'column'}\n          >\n            <StatsCard\n              titleMinHeight={['auto','50px']}\n              minHeight={['100px','143px']}\n              labelTooltip={ null }\n              title={'Address'}\n              label={null}\n            >\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <Blockie\n                  opts={{\n                    size: 12,\n                    color: \"#dfe\",\n                    bgcolor: \"#a71\",\n                    spotcolor: \"#000\",\n                    seed: delegate.delegate,\n                  }}\n                />\n                <ExtLink\n                  href={this.functionsUtil.getEtherscanAddressUrl(delegate.delegate)}\n                >\n                  <Flex\n                    flexDirection={'row'}\n                    alignItems={'flex-end'}\n                    justifyContent={'flex-start'}\n                  >\n                    <ShortHash\n                      ml={2}\n                      lineHeight={1}\n                      fontSize={[3,4]}\n                      fontWeight={[3,4]}\n                      color={'statValue'}\n                      hash={delegate.delegate}\n                    />\n                    <Icon\n                      ml={1}\n                      size={'1.2em'}\n                      name={'OpenInNew'}\n                      color={'statValue'}\n                    />\n                  </Flex>\n                </ExtLink>\n              </Flex>\n            </StatsCard>\n          </Flex>\n          <Flex\n            mb={[2,0]}\n            pl={[0,1]}\n            pr={[0,1]}\n            width={[1,1/4]}\n            flexDirection={'column'}\n          >\n            <StatsCard\n              label={null}\n              title={'Votes'}\n              labelTooltip={null}\n              minHeight={['100px','143px']}\n              titleMinHeight={['auto','50px']}\n              value={this.functionsUtil.formatMoney(this.functionsUtil.BNify(delegate.votes).toFixed(2,1),2)}\n            />\n          </Flex>\n          <Flex\n            pl={[0,1]}\n            mb={[2,0]}\n            width={[1,1/4]}\n            flexDirection={'column'}\n          >\n            <StatsCard\n              label={null}\n              labelTooltip={ null }\n              title={'Proposals Voted'}\n              value={delegate.proposals}\n              minHeight={['100px','143px']}\n              titleMinHeight={['auto','50px']}\n            />\n          </Flex>\n        </Flex>\n        <Box\n          width={1}\n          mt={[4,5]}\n        >\n          <Title\n            mb={[2,3]}\n          >\n            Voting History\n          </Title>\n          <Flex\n            mb={[3,4]}\n            width={1}\n            id={'transactions'}\n            flexDirection={'column'}\n          >\n            <ProposalsList\n              {...this.props}\n              rowsPerPage={5}\n              delegate={delegate}\n              filtersEnabled={false}\n              proposals={this.state.proposals}\n              cols={[\n                {\n                  title: '#',\n                  props:{\n                    width:[0.08,0.05]\n                  },\n                  fields:[\n                    {\n                      name:'id',\n                      props:{\n                      }\n                    },\n                  ]\n                },\n                {\n                  title:'DATE',\n                  mobile:false,\n                  props:{\n                    width:0.12,\n                  },\n                  fields:[\n                    {\n                      name:'date'\n                    }\n                  ]\n                },\n                {\n                  title:'TITLE',\n                  props:{\n                    width:[0.66,0.57],\n                  },\n                  fields:[\n                    {\n                      name:'title'\n                    }\n                  ]\n                },\n                {\n                  title:'VOTE',\n                  props:{\n                    width:[0.14,0.14],\n                    textAlign:'center'\n                  },\n                  fields:[\n                    {\n                      name:'support',\n                      parentProps:{\n                        alignItems:'center'\n                      }\n                    }\n                  ]\n                },\n                {\n                  title:'STATUS',\n                  props:{\n                    width:[0.12,0.12],\n                    justifyContent:['center','flex-start']\n                  },\n                  parentProps:{\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      name:'statusIcon',\n                      props:{\n                        mr:[0,2]\n                      }\n                    },\n                    {\n                      mobile:false,\n                      name:'status'\n                    }\n                  ]\n                },\n              ]}\n            />\n          </Flex>\n        </Box>\n      </Box>\n    );\n  }\n}\n\nexport default DelegateDetails;","import Title from '../Title/Title';\nimport { Box, Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport GovernanceUtil from '../utilities/GovernanceUtil';\nimport DelegatesList from './DelegatesList/DelegatesList';\nimport DelegateDetails from './DelegateDetails/DelegateDetails';\n\nclass Leaderboard extends Component {\n  state = {\n    maxRows:100,\n    delegates:null,\n    selectedDelegate:null\n  };\n\n  // Utils\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async loadData(){\n    const delegates = await this.governanceUtil.getDelegates();\n\n    const { match: { params } } = this.props;\n\n    // Select delegate\n    let selectedDelegate = null;\n    if (params.item_id){\n      const delegateId = params.item_id.toLowerCase();\n      const foundProposal = delegates.find( d => d.delegate.toLowerCase() === delegateId );\n      if (foundProposal){\n        selectedDelegate = foundProposal;\n      }\n    }\n\n    this.setState({\n      delegates,\n      selectedDelegate\n    });\n  }\n\n  render() {\n\n    return (\n      <Box\n        width={1}\n      >\n        {\n          this.state.selectedDelegate ? (\n            <Box\n              width={1}\n            >\n              <Flex\n                mb={3}\n                width={1}\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'flex-start'}\n              >\n                <Flex\n                  width={1}\n                >\n                  <Breadcrumb\n                    {...this.props}\n                    text={'Governance'}\n                    pathLink={['leaderboard']}\n                    isMobile={this.props.isMobile}\n                    handleClick={ e => this.props.goToSection('') }\n                    path={['Leaderboard',this.state.selectedDelegate.delegate]}\n                  />\n                </Flex>\n              </Flex>\n              <DelegateDetails\n                {...this.props}\n                delegate={this.state.selectedDelegate}\n              />\n            </Box>\n          ) : (\n            <Box\n              width={1}\n            >\n              <Flex\n                mb={3}\n                width={1}\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'flex-start'}\n              >\n                <Breadcrumb\n                  {...this.props}\n                  text={'Governance'}\n                  path={['Leaderboard']}\n                  isMobile={this.props.isMobile}\n                  handleClick={ e => this.props.goToSection('') }\n                />\n              </Flex>\n              <Title\n                mb={[3,4]}\n              >\n                Governance Leaderboard\n              </Title>\n              <Flex\n                mb={3}\n                width={1}\n                id={'leaderboard'}\n                flexDirection={'column'}\n              >\n                <DelegatesList\n                  {...this.props}\n                  delegates={this.state.delegates}\n                  cols={[\n                    {\n                      title: 'RANK',\n                      props:{\n                        width:[0.13,0.08]\n                      },\n                      fields:[\n                        {\n                          name:'rank'\n                        },\n                      ]\n                    },\n                    {\n                      title:'ADDRESS',\n                      props:{\n                        width:[0.60,0.50],\n                      },\n                      fields:[\n                        {\n                          mobile:false,\n                          name:'avatar',\n                          props:{\n                            mr:2\n                          }\n                        },\n                        {\n                          name:'delegate'\n                        }\n                      ]\n                    },\n                    {\n                      title:'VOTES',\n                      props:{\n                        width:[0.27,0.12],\n                      },\n                      fields:[\n                        {\n                          name:'votes'\n                        }\n                      ]\n                    },\n                    {\n                      mobile:false,\n                      title:'VOTE WEIGHT',\n                      props:{\n                        width:[0.15,0.15],\n                      },\n                      fields:[\n                        {\n                          name:'vote_weight',\n                          parentProps:{\n                            alignItems:'center'\n                          }\n                        }\n                      ]\n                    },\n                    {\n                      mobile:false,\n                      title:'PROPOSALS VOTED',\n                      props:{\n                        width:[0.15,0.15],\n                      },\n                      fields:[\n                        {\n                          name:'proposals',\n                          parentProps:{\n                            alignItems:'center'\n                          }\n                        }\n                      ]\n                    },\n                  ]}\n                />\n              </Flex>\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default Leaderboard;","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Flex, Card, Icon, Text } from 'rimble-ui';\nimport GovernanceUtil from '../utilities/GovernanceUtil';\nimport DashboardMenu from '../DashboardMenu/DashboardMenu';\n\n// Import page components\nimport Overview from './Overview';\nimport Delegate from './Delegate';\nimport Proposals from './Proposals';\nimport Leaderboard from './Leaderboard';\nimport RoundButton from '../RoundButton/RoundButton';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TooltipModal from \"../utilities/components/TooltipModal\";\nimport DashboardHeader from '../DashboardHeader/DashboardHeader';\n\nclass Dashboard extends Component {\n  state = {\n    menu:[],\n    votes:null,\n    balance:null,\n    baseRoute:null,\n    modalTitle:null,\n    activeModal:null,\n    currentRoute:null,\n    modalContent:null,\n    pageComponent:null,\n    currentSection:null,\n    selectedSection:null,\n    currentDelegate:null,\n    proposalThreshold:null,\n    selectedSubsection:null,\n    proposalMaxOperations:null\n  };\n\n  timeoutId = null;\n\n  // Utils\n  functionsUtil = null;\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n\n    window.governanceUtil = this.governanceUtil;\n    window.functionsUtil = this.functionsUtil = this.governanceUtil.functionsUtil;\n  }\n\n  async loadMenu() {\n    const menu = [];\n    const baseRoute = this.functionsUtil.getGlobalConfig(['governance','baseRoute']);\n\n    // Add Proposals\n    menu.push(\n      {\n        submenu:[],\n        selected:true,\n        route:baseRoute,\n        icon:'Dashboard',\n        label:'Overview',\n        color:'dark-gray',\n        component:Overview,\n        bgColor:this.props.theme.colors.primary,\n      }\n    );\n\n    // Add Proposals\n    menu.push(\n      {\n        submenu:[],\n        selected:false,\n        label:'Proposals',\n        bgColor:'#00acff',\n        color:'dark-gray',\n        icon:'LightbulbOutline',\n        component:Proposals,\n        route:`${baseRoute}/proposals`,\n      }\n    );\n\n    // Add tools\n    menu.push(\n      {\n        submenu:[],\n        selected:false,\n        bgColor:'#ff0000',\n        color:'dark-gray',\n        label:'Leaderboard',\n        component:Leaderboard,\n        icon:'FormatListNumbered',\n        route:`${baseRoute}/leaderboard`,\n      }\n    );\n\n    // Add tools\n    menu.push(\n      {\n        submenu:[],\n        selected:false,\n        label:'Delegate',\n        color:'dark-gray',\n        bgColor:'#ff0000',\n        component:Delegate,\n        icon:'CompareArrows',\n        route:`${baseRoute}/delegate`,\n      }\n    );\n\n    // Add tools\n    menu.push(\n      {\n        submenu:[],\n        icon:'Forum',\n        mobile:false,\n        label:'Forum',\n        selected:false,\n        component:null,\n        color:'dark-gray',\n        bgColor:'#ff0000',\n        isExternalLink:true,\n        route:`https://gov.idle.finance`,\n      }\n    );\n\n    await this.setState({\n      menu,\n      baseRoute\n    });\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  openTooltipModal = (modalTitle,modalContent) => {\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'UI',\n      eventAction: modalTitle,\n      eventLabel: 'TooltipModal'\n    });\n\n    this.setState({\n      modalTitle,\n      modalContent\n    },() => {\n      this.setActiveModal('tooltip');\n    })\n  }\n\n  setActiveModal = (activeModal) => {\n    this.setState({\n      activeModal\n    });\n  }\n\n  async loadParams() {\n    const { match: { params } } = this.props;\n\n    const baseRoute = this.state.baseRoute;\n    const currentRoute = window.location.hash.substr(1);\n\n    let pageComponent = null;\n    let currentSection = null;\n\n    const menu = this.state.menu;\n\n    let selectedSection = null;\n    let selectedSubsection = null;\n\n    menu.forEach( m => {\n      m.selected = false;\n      const sectionRoute = baseRoute+'/'+params.section;\n      if (currentRoute.toLowerCase() === m.route.toLowerCase() || ( !m.submenu.length && m.route.toLowerCase() === sectionRoute.toLowerCase() )){\n        m.selected = true;\n        if (pageComponent === null){\n          pageComponent = m.component;\n        }\n      } else if (m.submenu.length) {\n        m.submenu.forEach(subm => {\n          subm.selected = false;\n          const submRoute = m.route+'/'+subm.route;\n          if (submRoute.toLowerCase() === currentRoute.toLowerCase()){\n            m.selected = true;\n            subm.selected = true;\n\n            // Set component, if null use parent\n            if (pageComponent === null){\n              if (subm.component){\n                pageComponent = subm.component;\n              } else {\n                pageComponent = m.component;\n              }\n            }\n          }\n\n          // Set selected subsection\n          if (subm.selected){\n            selectedSubsection = subm;\n          }\n\n        });\n      }\n\n      // Set selected section\n      if (m.selected){\n        selectedSection = m;\n      }\n    });\n\n    // Exit if no strategy and token selected\n    if (!pageComponent){\n      return this.goToSection('/',false);\n    }\n\n    await this.setState({\n      menu,\n      params,\n      baseRoute,\n      currentRoute,\n      pageComponent,\n      currentSection,\n      selectedSection,\n      selectedSubsection\n    });\n  }\n\n  componentWillUnmount(){\n    if (this.timeoutId){\n      window.clearTimeout(this.timeoutId);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n\n    // const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n    // if (!governanceEnabled){\n    //   this.goToSection('/',false);\n    // }\n\n    await this.loadMenu();\n    this.loadParams();\n  }\n\n  async componentDidMount() {\n    this.timeoutId = window.setTimeout(() => {\n      if (!this.props.accountInizialized || !this.props.contractsInitialized){\n        this.setState({\n          showResetButton:true\n        });\n      }\n    },20000);\n\n    /*\n    if (!this.props.web3){\n      return this.props.initWeb3();\n    } else if (!this.props.accountInizialized){\n      return this.props.initAccount();\n    } else if (!this.props.contractsInitialized){\n      return this.props.initializeContracts();\n    }\n    */\n\n    this.loadUtils();\n    await this.loadMenu();\n    this.loadParams();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState) {\n\n    this.loadUtils();\n\n    const prevParams = prevProps.match.params;\n    const params = this.props.match.params;\n\n    if (JSON.stringify(prevParams) !== JSON.stringify(params)){\n      await this.setState({\n        pageComponent:null\n      }, () => {\n        this.loadParams();\n      });\n    }\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const accountInizialized = this.props.accountInizialized && prevProps.accountInizialized !== this.props.accountInizialized;\n    const contractsInitialized = this.props.contractsInitialized && prevProps.contractsInitialized !== this.props.contractsInitialized;\n\n    if (accountChanged || accountInizialized || contractsInitialized){\n      this.loadData();\n    }\n  }\n\n  goToSection(section,isGovernance=true){\n\n    // Remove dashboard route\n    if (isGovernance){\n      section = section.replace(this.state.baseRoute+'/','');\n    }\n\n    const newRoute = (isGovernance ? this.state.baseRoute+(section.length>0 ? '/'+section : '') : section).replace(/[/]+$/,'');\n    window.location.hash = newRoute;\n\n    // Send GA event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'UI',\n      eventLabel: newRoute,\n      eventAction: 'goToSection'\n    });\n\n    window.scrollTo(0, 0);\n  }\n\n  async loadData(){\n    if (this.props.account){\n      const [\n        {\n          proposalThreshold, proposalMaxOperations\n        },\n        votes,\n        balance,\n        currentDelegate\n      ] = await Promise.all([\n        this.governanceUtil.getProposalParams(),\n        this.governanceUtil.getCurrentVotes(this.props.account),\n        this.governanceUtil.getTokensBalance(this.props.account),\n        this.governanceUtil.getCurrentDelegate(this.props.account)\n      ]);\n\n      this.setState({\n        votes,\n        balance,\n        currentDelegate,\n        proposalThreshold,\n        proposalMaxOperations\n      });\n    }\n  }\n\n  logout = async () => {\n    this.props.setConnector('Infura','Infura');\n    await this.props.initWeb3('Infura');\n  }\n\n  render() {\n    const PageComponent = this.state.pageComponent ? this.state.pageComponent : null;\n    return (\n      <Flex\n        width={'100%'}\n        position={'fixed'}\n        flexDirection={'row'}\n        height={[(window.innerHeight-61)+'px','100vh']}\n        backgroundColor={['dashboardBg','white']}\n      >\n        <Flex\n          bottom={0}\n          zIndex={1}\n          width={[1,1/6]}\n          flexDirection={'column'}\n          position={['fixed','relative']}\n        >\n          <Card\n            p={[0,3]}\n            width={['100vw','auto']}\n            height={['auto','100vh']}\n            >\n            <DashboardMenu\n              {...this.props}\n              menu={this.state.menu}\n            />\n          </Card>\n        </Flex>\n        <Flex\n          py={3}\n          px={[3,5]}\n          mb={0}\n          width={[1,5/6]}\n          style={{\n            overflowY:'scroll',\n            overflowX:'hidden'\n          }}\n          flexDirection={'columns'}\n          backgroundColor={'dashboardBg'}\n        >\n          {\n            !this.props.accountInizialized || !this.props.contractsInitialized || !PageComponent ? (\n              <Flex\n                width={1}\n                minHeight={'50vg'}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                {\n                  !this.state.showResetButton ? (\n                    <FlexLoader\n                      textProps={{\n                        textSize:4,\n                        fontWeight:2\n                      }}\n                      loaderProps={{\n                        mb:3,\n                        size:'40px'\n                      }}\n                      flexProps={{\n                        my:3,\n                        flexDirection:'column'\n                      }}\n                      text={ !this.props.accountInizialized ? 'Loading account...' : ( !this.props.contractsInitialized ? 'Loading contracts...' : 'Loading assets...' )}\n                    />\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3,\n                        width:[1,0.35]\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'Warning'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={2}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Idle can't connect to your wallet!<br />Make sure that your wallet is unlocked and try again.\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:3,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.logout.bind(this)}\n                        >\n                          Logout\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  )\n                }\n              </Flex>\n            ) : (\n              <Flex\n                width={1}\n                flexDirection={'column'}\n              >\n                <DashboardHeader\n                  goToSection={this.goToSection.bind(this)}\n                  {...this.props}\n                />\n                {\n                  PageComponent &&\n                    <PageComponent\n                      {...this.props}\n                      votes={this.state.votes}\n                      balance={this.state.balance}\n                      urlParams={this.state.params}\n                      loadUserData={this.loadData.bind(this)}\n                      goToSection={this.goToSection.bind(this)}\n                      currentDelegate={this.state.currentDelegate}\n                      selectedSection={this.state.selectedSection}\n                      proposalThreshold={this.state.proposalThreshold}\n                      selectedSubsection={this.state.selectedSubsection}\n                      openTooltipModal={this.openTooltipModal.bind(this)}\n                      proposalMaxOperations={this.state.proposalMaxOperations}\n                      />\n                }\n              </Flex>\n            )\n          }\n        </Flex>\n        <TooltipModal\n          closeModal={this.resetModal}\n          title={this.state.modalTitle}\n          content={this.state.modalContent}\n          isOpen={this.state.activeModal === 'tooltip'}\n        >\n        </TooltipModal>\n      </Flex>\n    );\n  }\n}\n\nexport default Dashboard;","import React from \"react\";\nimport ExtLink from '../../ExtLink/ExtLink';\nimport FunctionsUtil from '../FunctionsUtil';\nimport { Box, Flex, Image, Text, Link, Icon } from \"rimble-ui\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass Header extends React.Component {\n  state = {\n\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidMount() {\n\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n\n    this.loadUtils();\n\n    if (this.props.network && !this.props.network.isCorrectNetwork){\n      return false;\n    }\n  }\n\n  render() {\n\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n\n    return (\n      <Box\n        style={{\n          left: '0',\n          right: '0',\n          zIndex: 99,\n          position: 'absolute',\n        }}\n      >\n        <Flex\n          p={2}\n          alignItems={'center'}\n          justifyContent={'center'}\n          backgroundColor={'dark-blue'}\n          flexDirection={['column','row']}\n        >\n          <Text\n            color={'white'}\n            textAlign={'center'}\n          >\n            IDLE Governance Token is now live!\n          </Text>\n          <ExtLink\n            pr={2}\n            py={1}\n            mt={[1,0]}\n            ml={[0,2]}\n            pl={'12px'}\n            color={'white'}\n            style={{\n              display:'flex',\n              borderRadius:'8px',\n              flexDirection:'row',\n              alignItems:'flex-end'\n            }}\n            backgroundColor={'#0037ff'}\n            href={'https://idlefinance.medium.com/idle-governance-is-live-9b55e8f407d7'}\n          >\n            Read More\n            <Icon\n              ml={1}\n              size={'1.3em'}\n              color={'white'}\n              name={'KeyboardArrowRight'}\n            >\n            </Icon>\n          </ExtLink>\n        </Flex>\n        <Flex\n          pt={[3,4]}\n          mx={'auto'}\n          bg={\"transparent\"}\n          width={['98%','100%']}\n          maxWidth={['100%','100em']}\n          alignItems={['center','flex-start']}\n        >\n          <Flex\n            ml={[3, 5]}\n            width={[0.5, 3/12]}\n          >\n            <RouterLink\n              to=\"/\"\n            >\n              <Image\n                position={'relative'}\n                src={'images/logo.svg'}\n                height={['35px','48px']}\n              />\n            </RouterLink>\n          </Flex>\n            <Flex\n              width={[0.5,8/12]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={\"flex-end\"}\n            >\n              {\n                governanceEnabled && \n                  <Link\n                    mr={4}\n                    fontSize={3}\n                    color={'white'}\n                    hoverColor={'white'}\n                    fontFamily={'sansSerif'}\n                    textAlign={['center','left']}\n                    onClick={ (e) => window.location.hash='#/governance' }\n                  >\n                    Governance\n                  </Link>\n              }\n              {\n                !this.props.isMobile &&\n                  <>\n                    <Link\n                      mr={4}\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('contacts').offsetTop,300)}}\n                    >\n                      Contact Us\n                    </Link>\n                    <Link\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('faq').offsetTop,300)}}\n                    >\n                      FAQs\n                    </Link>\n                  </>\n              }\n            </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default Header;\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}","import Footer from '../Footer/Footer';\nimport React, { Component } from 'react';\nimport styles from './PageNotFound.module.scss';\nimport { Box, Flex, Heading, Button } from 'rimble-ui'\nimport Header_styles from '../utilities/components/Header.module.scss';\nimport {\n  Link as RouterLink,\n} from \"react-router-dom\";\n\nclass PageNotFound extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.3em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                This page doesn't exist!\n              </Heading.h1>\n              <Heading.h3 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.6em'} fontWeight={2} fontSize={['1.5em',4]} textAlign={'center'} color={'white'}>\n                Sorry, the page you are looking for cannot be found.\n              </Heading.h3>\n              <RouterLink to=\"/\" style={{textDecoration:'none'}}>\n                <Button\n                  className={Header_styles.gradientButton}\n                  borderRadius={4}\n                  size={this.props.isMobile ? 'medium' : 'medium'}\n                  mainColor={'blue'}\n                  contrastColor={'white'}\n                  fontWeight={3}\n                  fontSize={[2,2]}\n                  mx={'auto'}\n                  px={[4,5]}\n                  mt={2}\n                >\n                  GO TO HOMEPAGE\n                </Button>\n              </RouterLink>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default PageNotFound;\n","import React from \"react\";\nimport { Box, Flex, Text } from \"rimble-ui\";\n\nclass NetworkOverview extends React.Component {\n  getNetworkCircleColor = () => {\n    let circleColor = \"#333\";\n    if (this.props.network) {\n      switch (this.props.network.id) {\n        case 1:\n          circleColor = \"#56b3ae\";\n          break;\n        case 2:\n          circleColor = \"#000\";\n          break;\n        case 3:\n          circleColor = \"#ed5a8d\";\n          break;\n        case 4:\n          circleColor = \"#efc35c\";\n          break;\n        case 42:\n          circleColor = \"#6a5ff6\";\n          break;\n        default:\n          circleColor = \"#ccc\";\n      }\n    }\n\n    return circleColor;\n  };\n\n  render() {\n    const networkCircle = {\n      borderRadius: \"50%\",\n      backgroundColor: this.getNetworkCircleColor(),\n      height: \"1em\",\n      width: \"1em\"\n    };\n\n    return (\n      <Flex alignItems={\"center\"}>\n        <Box style={networkCircle} mr={2} />\n        <Text style={{ textTransform: \"capitalize\" }}>\n          {this.props.network.name}\n        </Text>\n      </Flex>\n    );\n  }\n}\n\nexport default NetworkOverview;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Flex,\n  ToastMessage,\n  Box,\n  Button,\n  Link\n} from \"rimble-ui\";\nimport NetworkOverview from \"../utilities/components/NetworkOverview\";\n\nconst DebuggerButtons = props => (\n  <Box mt={4} borderTop={1} borderColor=\"#E8E8E8\" pt={3}>\n    <Heading.h4 textAlign={\"center\"}>Show Modal</Heading.h4>\n    <Button\n      onClick={props.modals.methods.openWrongNetworkModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Blocking Wrong Network\n    </Button>\n\n    <Button\n      onClick={props.modals.methods.openConnectionModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Connection\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openConnectionPendingModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Pending\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openUserRejectedConnectionModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Rejected\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={event => {\n        props.modals.methods.openLowFundsModal(event);\n      }}\n      mr={2}\n      mb={2}\n    >\n      Low Funds\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWeb3BrowserModal}\n      mr={2}\n      mb={2}\n    >\n      Not Web3 Browser\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWalletModal}\n      mr={2}\n      mb={2}\n    >\n      No Wallet\n    </Button>\n  </Box>\n);\n\nclass Web3Debugger extends React.Component {\n  render() {\n    return (\n      <Card width={\"600px\"} mx={\"auto\"} px={4}>\n        <Heading.h3 textAlign={\"center\"}>Get Connected</Heading.h3>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            <Icon name=\"Check\" color={\"green\"} mr={2} />\n            <Text>Modern & Web3 Capable Browser</Text>\n          </Flex>\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.web3 ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Browser-connected Wallet</Text>\n          </Flex>\n\n          {!this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">You do not have a wallet.</Text>\n              </Flex>\n\n              <Link\n                href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                <Button.Outline size=\"small\">\n                  Get MetaMask Extension\n                </Button.Outline>\n              </Link>\n            </Flex>\n          ) : null}\n        </Box>\n\n        {this.props.web3 ? (\n          <Flex\n            py={3}\n            my={3}\n            borderTop={1}\n            borderBottom={1}\n            borderColor={\"#E8E8E8\"}\n            textAlign={\"center\"}\n            justifyContent={\"space-around\"}\n            alignItems={\"center\"}\n          >\n            <Button\n              size=\"small\"\n              onClick={this.props.connectAndValidateAccount}\n              disabled={!this.props.web3}\n            >\n              Connect and verify\n            </Button>\n            <Text>- or -</Text>\n            <Button size=\"small\" disabled>\n              Initiate On-Chain Action\n            </Button>\n          </Flex>\n        ) : null}\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.network.isCorrectNetwork ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Correct Network</Text>\n          </Flex>\n\n          {this.props.web3 && !this.props.network.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Box>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Current network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.current} />\n                  </Flex>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Required network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.required} />\n                  </Flex>\n                </Box>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.checkNetwork}>\n                Check Network\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.web3 && this.props.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <NetworkOverview network={this.props.network.current} />\n            </Flex>\n          ) : null}\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.account && this.props.accountValidated ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Wallet connected and verified</Text>\n          </Flex>\n\n          {!this.props.account &&\n          this.props.web3 &&\n          !this.props.userRejectedConnect ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Not connected to this dApp.</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.account && this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n              <Box>\n                <Text color=\"#999\">Connected wallet {this.props.account}</Text>\n                <Text color={this.props.accountBalanceLow ? \"red\" : \"#999\"}>\n                  Account balance {this.props.accountBalance}\n                </Text>\n              </Box>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedConnect ? (\n            <Flex ml={4} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">User rejected Connect request</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {(this.props.accountValidated === null ||\n            this.props.accountValidated === false) &&\n          this.props.web3 ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.accountValidated === false ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedValidation === false ? (\n            <Flex ml={4}>\n              <Icon name=\"Error\" mr={2} color=\"red\" />\n              <Text color=\"red\">Account not verified</Text>\n            </Flex>\n          ) : null}\n        </Box>\n\n        <DebuggerButtons {...this.props} />\n\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </Card>\n    );\n  }\n}\n\nexport default Web3Debugger;\n","const address = '0x5592EC0cfb4dbc12D3aB100b257153436a1f0FEa'; // rinkeby\nconst abi = [{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"stop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"name_\",\"type\":\"bytes32\"}],\"name\":\"setName\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stopped\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"authority_\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"push\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"move\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"start\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"pull\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"symbol_\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"LogSetAuthority\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"LogSetOwner\",\"type\":\"event\"},{\"anonymous\":true,\"inputs\":[{\"indexed\":true,\"name\":\"sig\",\"type\":\"bytes4\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"foo\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"bar\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"fax\",\"type\":\"bytes\"}],\"name\":\"LogNote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}];\nexport default { address, abi };\n","const address = '0xf5dce57282a584d2746faf1593d3121fcac444dc'; // mainnet\nconst abi = [\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"name\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x06fdde03\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"approve\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x095ea7b3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"reserveFactorMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x173b9904\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x17bfdfbc\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalSupply\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x18160ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"exchangeRateStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x182df0f5\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"src\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transferFrom\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x23b872dd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"pendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x26782247\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"decimals\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x313ce567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOfUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3af9e669\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"getCash\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3b1d21a2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setComptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x4576b5db\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalBorrows\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x47bd3718\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"comptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x5fe3b567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_reduceReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x601a0bf1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"initialExchangeRateMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x675d972c\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"accrualBlockNumber\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6c540baf\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"underlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6f307dc3\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x70a08231\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"totalBorrowsCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x73acee98\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x8f840ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"symbol\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95d89b41\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95dd9193\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"accrueInterest\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa6afed95\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transfer\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa9059cbb\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowIndex\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xaa5af0fd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"supplyRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xae9d70b0\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"seize\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb2a02ff1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setPendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb71d1a0c\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"exchangeRateCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xbd6d894d\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"getAccountSnapshot\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc37f68e2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"allowance\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdd62ed3e\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"_acceptAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xe9c714f2\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setInterestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf2b3abbd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"interestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf3fdb15a\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"admin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf851a440\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf8f9da28\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_setReserveFactor\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfca7820b\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"isCToken\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfe9c44ae\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"name\": \"underlying_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"comptroller_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"interestRateModel_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"initialExchangeRateMantissa_\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"name_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"symbol_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"decimals_\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"constructor\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"interestAccumulated\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowIndex\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"AccrueInterest\",\n    \"signature\": \"0x875352fb3fadeb8c0be7cbbe8ff761b308fa7033470cd0287f02f3436fd76cb9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"minter\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Mint\",\n    \"signature\": \"0x4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"redeemer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Redeem\",\n    \"signature\": \"0xe5b754fb1abb7f01b499791d0b820ae3b6af3424ac1c59768edb53f4ec31a929\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Borrow\",\n    \"signature\": \"0x13ed6866d4e1ee6da46f845c46d7e54120883d75c5ea9a2dacc1c4ca8984ab80\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"payer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"RepayBorrow\",\n    \"signature\": \"0x1a2a22cb034d26d1854bdc6666a5b91fe25efbbb5dcad3b0355478d6f5c362a1\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"LiquidateBorrow\",\n    \"signature\": \"0x298637f684da70674f26509b10f07ec2fbc77a335ab1e7d6215a4b2484d8bb52\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldPendingAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewPendingAdmin\",\n    \"signature\": \"0xca4f2f25d0898edd99413412fb94012f9e54ec8142f9b093e7720646a95b16a9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewAdmin\",\n    \"signature\": \"0xf9ffabca9c8276e99321725bcb43fb076a6c66a54b7f21c4e8146d8519b417dc\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldComptroller\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewComptroller\",\n    \"signature\": \"0x7ac369dbd14fa5ea3f473ed67cc9d598964a77501540ba6751eb0b3decf5870d\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldInterestRateModel\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewMarketInterestRateModel\",\n    \"signature\": \"0xedffc32e068c7c95dfd4bdfd5c4d939a084d6b11c4199eac8436ed234d72f926\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"NewReserveFactor\",\n    \"signature\": \"0xaaa68312e2ea9d50e16af5068410ab56e1a1fd06037b1a35664812c30f821460\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"admin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newTotalReserves\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"ReservesReduced\",\n    \"signature\": \"0x3bad0c59cf2f06e7314077049f48a93578cd16f5ef92329f1dab1420a99c177e\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"error\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"info\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"detail\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Failure\",\n    \"signature\": \"0x45b96fe442630264581b197e84bbada861235052c5a1aadfff9ea4e40a969aa0\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Transfer\",\n    \"signature\": \"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Approval\",\n    \"signature\": \"0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\",\n    \"type\": \"event\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"mint\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa0712d68\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeem\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdb006a75\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeemUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x852a12e3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"borrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc5ebeaec\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x0e752702\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrowBehalf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x2608f818\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"liquidateBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf5e3c462\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }\n];\nexport default { address, abi };\n","import ERC20 from '../abis/tokens/DAI.js';\nimport CHAI from '../abis/chai/CHAI.json';\nimport cToken from '../abis/compound/cDAI';\nimport aToken from '../abis/aave/AToken.json';\nimport yToken from '../abis/dydx/yToken.json';\nimport iToken from '../abis/fulcrum/iToken.json';\nimport IdleTokenV3 from '../contracts/IdleTokenV3.json';\nimport IdleTokenV4 from '../contracts/IdleTokenV4.json';\nimport IdleConverterPersonalSignV4 from '../contracts/IdleConverterPersonalSignV4.json';\n\nconst availableTokens = {\n  42:{\n    best:{\n      DAI:{\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x4f96fe3b7a6cf9725f59d353f723c1bdb64ca6aa',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x295CA5bC5153698162dDbcE5dF50E436a58BA21e',\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf0d0eb522cfa50b716b3b1604c4f0fa6f04376ad',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n    },\n    risk:{\n\n    }\n  },\n  1:{ // Mainnet\n    best:{\n      DAI:{\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            token:'idleDAI',\n            abi:IdleConverterPersonalSignV4,\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            enabled:true,\n            name:'fulcrum',\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:CHAI,\n            name:'dsr',\n            enabled:true,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:yToken,\n            name:'dydx',\n            enabled:true,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols:[\n            {\n              abi:yToken,\n              name:'dydx',\n              enabled:true,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:true,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTYield',\n          address:'0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTYieldV3',\n            address:'0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDT',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:true,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      SUSD:{\n        decimals:18,\n        token:'SUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address:'0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre:{\n          destCurrency:'SUSD'\n        },\n        defiPrime:{\n          token:'susd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleSUSDYield',\n          address:'0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleSUSD',\n            name:'idleSUSDYieldV3',\n            address:'0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleSUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x625aE63000f46200499120B906716420bd059240',\n            token:'aSUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      TUSD:{\n        decimals:18,\n        token:'TUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(217, 100%, 20%)',\n        address:'0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre:{\n          destCurrency:'TUSD'\n        },\n        defiPrime:{\n          token:'tusd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleTUSDYield',\n          address:'0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleTUSD',\n            name:'idleTUSDYieldV3',\n            address:'0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleTUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token:'aTUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      WBTC:{\n        decimals:8,\n        token:'WBTC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(29, 81%, 59%)',\n        address:'0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WBTC'\n        },\n        defiPrime:{\n          token:'wbtc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWBTCYield',\n          address:'0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleWBTC',\n            name:'idleWBTCYieldV3',\n            address:'0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleWBTC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xc11b1268c1a384e55c48c2391d8d480264a3a7f4',\n            token:'cWBTC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            decimals:18,\n            token:'iWBTC',\n            enabled:true,\n            name:'fulcrum',\n            address:'0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            token:'aWBTC',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      }\n    },\n    risk:{\n      DAI:{\n        decimals:18,\n        token:'DAI',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAISafe',\n          address:'0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAISafeV3',\n            address:'0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:true,\n            abi:iToken,\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dsr',\n            enabled:true,\n            abi:CHAI,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCSafe',\n          address:'0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCSafeV3',\n            address:'0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:true,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTSafe',\n          address:'0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTSafeV3',\n            address:'0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:true,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      }\n    }\n  }\n};\n\nexport default availableTokens;","const TransactionToastMessages = {\n    initialized: {\n      message: \"{action} request initialized\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    started: {\n      message: \"{action} request submitted\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    pending: {\n      message: \"Processing {action} request...\",\n      secondaryMessage: \"This may take a few minutes\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: \"InfoOutline\"\n    },\n    confirmed: {\n      message: \"First block confirmed\",\n      secondaryMessage: \"Your {action} request is in progress\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: 'CheckCircle'\n    },\n    success: {\n      message: \"{action} request completed\",\n      variant: \"success\",\n      icon: 'CheckCircle'\n    },\n    error: {\n      message: \"{action} request failed\",\n      secondaryMessage: \"Could not complete transaction.\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"failure\",\n      icon: \"Block\"\n    }\n  };\n\n  export default TransactionToastMessages;\n","import React from \"react\";\nimport TransactionToastMessages from \"./TransactionToastMessages\";\nimport { ToastMessage } from \"rimble-ui\";\n\nclass TransactionToastUtil extends React.Component {\n  // Determines if collections are same size\n  collectionHasNewObject = (prevCollection, currentCollection) => {\n    return (\n      typeof prevCollection === \"undefined\" ||\n      Object.keys(prevCollection).length !==\n        Object.keys(currentCollection).length\n    );\n  };\n\n  // Returns object from currentCollection that doesn't exist in prevCollection\n  getNewObjectFromCollection = (prevCollection, currentCollection) => {\n    if (typeof prevCollection !== \"undefined\") {\n      const objectKey = Object.keys(currentCollection).filter(key => {\n        return !Object.keys(prevCollection).includes(key);\n      });\n      return currentCollection[objectKey];\n    } else {\n      return Object.keys(currentCollection).map(key => {\n        return currentCollection[key];\n      });\n    }\n  };\n\n  // Compare two collections of objects, return single object from current collection that differs from prev collection\n  getUpdatedObjectFromCollection = (prevCollection, currentCollection) => {\n    const updatedTransaction = Object.keys(prevCollection)\n      .map(key => {\n        if (\n          prevCollection[key].lastUpdated !== currentCollection[key].lastUpdated\n        ) {\n          return currentCollection[key];\n        } else {\n          return null;\n        }\n      })\n      .filter(object => object !== null);\n    return updatedTransaction[0];\n  };\n\n  // Returns an transaction from a collection based on a given identifier\n  getTransactionFromCollection = (identifier, collection) => {\n    const object = collection[`tx${identifier}`];\n    return object;\n  };\n\n  // Returns either a new object or finds an updated object in a collection against a previous collection\n  getUpdatedTransaction = (prevCollection, currentCollection) => {\n    let tx = null;\n    let currentTx = {};\n    let prevTx = {};\n\n    if (this.collectionHasNewObject(prevCollection, currentCollection)) {\n      tx = this.getNewObjectFromCollection(prevCollection, currentCollection);\n    } else {\n      currentTx = this.getUpdatedObjectFromCollection(\n        prevCollection,\n        currentCollection\n      );\n      if (currentTx) {\n        prevTx = this.getTransactionFromCollection(\n          currentTx.created,\n          prevCollection\n        );\n      } else {\n        return false;\n      }\n\n      if (currentTx.status !== prevTx.status) {\n        tx = currentTx;\n      }\n    }\n    return tx;\n  };\n\n  // Check for updates to the transactions collection\n  processTransactionUpdates = prevProps => {\n    let tx = null;\n    if (Object.keys(this.props.transactions).length) {\n      tx = this.getUpdatedTransaction(\n        prevProps.transactions,\n        this.props.transactions\n      );\n    }\n\n    if (tx) {\n      this.showTransactionToast(tx);\n    }\n  };\n\n  showTransactionToast = transaction => {\n    // console.log(\"showTransactionToast: \", { ...transaction });\n    // Get text info for toast\n    let toastMeta = this.getTransactionToastMeta(transaction);\n    toastMeta.colorTheme = 'light';\n    toastMeta.closeElem = true;\n    // console.log('toastMeta',toastMeta);\n\n    // Show toast\n    window.toastProvider.addMessage(\".\", toastMeta);\n  };\n\n  getTransactionToastMeta = transaction => {\n    let transactionToastMeta = {};\n    let status = transaction.status;\n\n    switch (status) {\n      case \"initialized\":\n        transactionToastMeta = TransactionToastMessages.initialized;\n        break;\n      case \"started\":\n        transactionToastMeta = TransactionToastMessages.started;\n        break;\n      case \"pending\":\n        transactionToastMeta = TransactionToastMessages.pending;\n        break;\n      case \"confirmed\":\n        transactionToastMeta = TransactionToastMessages.confirmed;\n        break;\n      case \"success\":\n        transactionToastMeta = TransactionToastMessages.success;\n        break;\n      case \"error\":\n        transactionToastMeta = TransactionToastMessages.error;\n        break;\n      default:\n        // do nothing\n        break;\n    }\n\n    let transactionAction = '';\n    switch (transaction.method){\n      case 'redeemIdleToken':\n        transactionAction = 'Redeem';\n      break;\n      case 'redeemGovTokens':\n        transactionAction = 'Redeem (Gov Tokens)';\n      break;\n      case 'mintIdleToken':\n      case 'mintIdleTokensProxy':\n        transactionAction = 'Lending';\n      break;\n      case 'migrateFromToIdle':\n      case 'migrateFromCompoundToIdle':\n      case 'migrateFromFulcrumToIdle':\n      case 'migrateFromAaveToIdle':\n      case 'migrateFromIearnToIdle':\n      case 'bridgeIdleV1ToIdleV2':\n        transactionAction = 'Migration';\n      break;\n      case 'executeMetaTransaction':\n        transactionAction = 'Meta-Tx';\n      break;\n      case 'approve':\n        transactionAction = 'Approve';\n      break;\n      case 'rebalance':\n        transactionAction = 'Rebalance';\n      break;\n      default:\n        transactionAction = transaction.method.charAt(0).toUpperCase() + transaction.method.substr(1);\n      break;\n    }\n\n    transactionToastMeta = JSON.parse(JSON.stringify(transactionToastMeta));\n\n    let newMessage = transactionToastMeta.message.replace('{action}',transactionAction);\n    newMessage = newMessage.charAt(0).toUpperCase() + newMessage.slice(1);\n    transactionToastMeta.message = newMessage;\n    transactionToastMeta.closeElem = true;\n\n    return transactionToastMeta;\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    this.processTransactionUpdates(prevProps);\n  }\n\n  render() {\n    return (\n      <div>\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </div>\n    );\n  }\n}\n\nexport default TransactionToastUtil;\n","import Web3 from \"web3\";\nimport jQuery from 'jquery';\nimport theme from \"../theme\";\nimport Tos from \"../Tos/Tos\";\nimport connectors from './connectors';\nimport Web3Provider from 'web3-react';\nimport React, { Component } from \"react\";\nimport Landing from \"../Landing/Landing\";\nimport { Web3Consumer } from 'web3-react';\nimport Dashboard from '../Dashboard/Dashboard';\nimport CookieConsent from \"react-cookie-consent\";\nimport RimbleWeb3 from \"../utilities/RimbleWeb3\";\nimport Governance from '../Governance/Governance';\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport Header from \"../utilities/components/Header\";\nimport globalConfigs from '../configs/globalConfigs';\nimport ScrollToTop from \"../ScrollToTop/ScrollToTop\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport PageNotFound from \"../PageNotFound/PageNotFound\";\nimport Web3Debugger from \"../Web3Debugger/Web3Debugger\";\nimport availableTokens from '../configs/availableTokens';\nimport TransactionToastUtil from \"../utilities/TransactionToastUtil\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { ThemeProvider, Box, Text, Link, Image, Flex } from 'rimble-ui';\n\nclass App extends Component {\n  state = {\n    cachedData:{},\n    buyToken: null,\n    selectedTab: '1',\n    route: \"default\", // or 'onboarding'\n    connecting: false,\n    tokenConfig: null,\n    genericError: null,\n    customAddress: null,\n    connectorName: null,\n    selectedToken: null,\n    walletProvider: null,\n    availableTokens: null,\n    buyModalOpened: false,\n    selectedStrategy: null,\n    toastMessageProps: null,\n    callbackAfterLogin: null,\n    width: window.innerWidth,\n    availableStrategies: null,\n    height: window.innerHeight,\n    unsubscribeFromHistory: null,\n    enableUnderlyingWithdraw: false,\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  closeToastMessage = (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    this.setState({\n      toastMessageProps:null\n    });\n  }\n\n  showToastMessage = (props) => {\n    this.setState({\n      toastMessageProps:props\n    });\n  }\n\n  processCustomParam = (props,prevProps) => {\n    const params = props ? props.match.params : null;\n    const prevParams = prevProps ? prevProps.match.params : null;\n\n    // Reset params\n    if ( prevParams && params && prevParams.customParam !== params.customParam && (!params || !params.customParam || params.customParam === undefined)){\n      this.setState({\n        customAddress:null,\n        enableUnderlyingWithdraw:false\n      });\n    } else if (params && typeof params.customParam === 'string') {\n      // Check if custom address\n      if (params.customParam.toLowerCase().match(/0x[\\w]{40}/) && this.state.customAddress !== params.customParam){\n        this.setCustomAddress(params.customParam);\n      } else if (params && params.customParam === 'withdraw' && !this.state.enableUnderlyingWithdraw){\n        this.setState({\n          customAddress:null,\n          enableUnderlyingWithdraw:true\n        });\n      }\n    }\n  }\n\n  clearCachedData = () => {\n    this.functionsUtil.setLocalStorage('cachedData',{},true);\n    this.setState({\n      cachedData:{}\n    });\n    return true;\n  }\n\n  setCachedData = (key,data,TTL=null,useLocalStorage=false) => {\n\n    const cachedKeyFound = this.state.cachedData[key.toLowerCase()];\n    const currentTime = parseInt(new Date().getTime()/1000);\n\n    if (!cachedKeyFound || ( (!cachedKeyFound.expirationDate || cachedKeyFound.expirationDate>=currentTime) || JSON.stringify(cachedKeyFound.data) !== JSON.stringify(data)) ){\n      const expirationDate = TTL ? currentTime+(TTL) : null;\n\n      // Save cached data in local storage\n      if (useLocalStorage){\n        let storedCachedData = this.functionsUtil.getStoredItem('cachedData');\n        if (!storedCachedData){\n          storedCachedData = {};\n        }\n        storedCachedData = {\n          ...storedCachedData,\n          [key.toLowerCase()]:{\n            data,\n            expirationDate\n          }\n        };\n        // console.log('STORED CACHE - INSERT KEY',key,data);\n        this.functionsUtil.setLocalStorage('cachedData',storedCachedData,true);\n      }\n\n      // Set new cached data state\n      this.setState((prevState) => ({\n        cachedData: {\n          ...prevState.cachedData,\n          [key.toLowerCase()]:{\n            data,\n            expirationDate\n          }\n        }\n      }));\n\n      return true;\n    }\n    return false;\n  }\n\n  setCallbackAfterLogin = (callbackAfterLogin) => {\n    this.setState({\n      callbackAfterLogin\n    });\n  }\n\n  setCustomAddress = (customAddress) => {\n    // Reset customAddress if not well formatted\n    if (customAddress && !customAddress.toLowerCase().match(/0x[\\w]{40}/)){\n      customAddress = null;\n    }\n\n    if (customAddress !== this.state.customAddress){\n      this.setState({\n        customAddress,\n        enableUnderlyingWithdraw:false\n      });\n    }\n  }\n\n  async selectTab(e, tabIndex) {\n    return this.setState(state => ({...state, selectedTab: tabIndex}));\n  }\n\n  async loadAvailableTokens() {\n    const newState = {};\n    const availableStrategies = {};\n    const requiredNetwork = globalConfigs.network.requiredNetwork;\n\n    // Load available strategies\n    Object.keys(availableTokens[requiredNetwork]).forEach((strategy) => {\n      availableStrategies[strategy] = availableTokens[requiredNetwork][strategy];\n    });\n\n    newState.availableStrategies = availableStrategies;\n\n    // Load strategy\n    const selectedStrategy = this.state.selectedStrategy;\n    if (selectedStrategy && this.state.availableStrategies[selectedStrategy]){\n      newState.availableTokens = this.state.availableStrategies[selectedStrategy];\n\n      // Load token\n      const selectedToken = this.state.selectedToken;\n      if (selectedToken && newState.availableTokens[selectedToken]){\n        newState.tokenConfig = newState.availableTokens[selectedToken];\n      }\n    }\n\n    // console.log('loadAvailableTokens',newState);\n\n    await this.setState(newState);\n  }\n\n  async setStrategyToken(selectedStrategy,selectedToken){\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    const newState = {\n      tokenConfig:!selectedToken ? null : this.state.tokenConfig,\n      availableTokens:!selectedToken ? null : this.state.availableTokens,\n      selectedToken:!selectedToken ? selectedToken :this.state.selectedToken,\n      selectedStrategy:!selectedStrategy ? selectedStrategy :this.state.selectedStrategy,\n    };\n\n    if (selectedStrategy && this.state.availableStrategies && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())){\n      newState.selectedStrategy = selectedStrategy.toLowerCase();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken) {\n      if ( this.state.availableTokens && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase()) ){\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableTokens[selectedToken];\n      } else if (this.state.availableStrategies && Object.keys(this.state.availableStrategies[selectedStrategy]).includes(selectedToken.toUpperCase())) {\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableStrategies[selectedStrategy][newState.selectedToken];\n        newState.availableTokens = this.state.availableStrategies[selectedStrategy];\n      }\n    }\n\n    // console.log('setStrategyToken',newState);\n\n    await this.setState(newState,callback);\n  }\n\n  async setStrategy(selectedStrategy) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedStrategy && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())){\n      selectedStrategy = selectedStrategy.toLowerCase();\n      await this.setState({\n        selectedStrategy\n      },callback);\n    } else if (!selectedStrategy) {\n      await this.setState({\n        selectedStrategy\n      },callback);\n    }\n  }\n\n  async setToken(selectedToken) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase())){\n      selectedToken = selectedToken.toUpperCase();\n      const newState = {\n        selectedToken\n      };\n      newState.tokenConfig = this.state.availableTokens[selectedToken];\n      await this.setState(newState,callback);\n    } else if(!selectedToken) {\n      await this.setState({\n        selectedToken,\n        tokenConfig:null\n      },callback);\n    }\n  }\n\n  async componentWillMount() {\n\n    this.loadUtils();\n\n    window.BNify = this.functionsUtil.BNify;\n\n    // Suppress warnings and errors in production\n    const isProduction = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n    if (isProduction){\n      window.console.error = () => {};\n      window.console.warn = () => {};\n    }\n\n    window.jQuery = jQuery;\n\n    if (window.localStorage){\n      this.functionsUtil.removeStoredItem('context');\n\n      // Clear all localStorage data except walletProvider and connectorName if version has changed\n      const version = this.functionsUtil.getStoredItem('version',false);\n      if (version !== globalConfigs.version){\n        this.functionsUtil.clearStoredData(['walletProvider','connectorName']);\n        this.functionsUtil.setLocalStorage('version',globalConfigs.version);\n      }\n    }\n\n    window.closeIframe = (w) => {\n      const iFrames = document.getElementsByTagName('iframe');\n      for (let i=0;i<iFrames.length;i++){\n        const iframe = iFrames[i];\n        if (iframe.contentWindow === w){\n          window.jQuery(iframe).parents('.iframe-container')[0].remove();\n        }\n      }\n    }\n\n    window.addEventListener('resize', this.handleWindowSizeChange);\n\n    this.loadAvailableTokens();\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const strategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n\n    if (tokenChanged || strategyChanged){\n      this.loadAvailableTokens();\n    }\n  }\n\n  componentDidMount() {\n    // Close iFrame\n    if (window.self !== window.top && window.top.location.href.indexOf(globalConfigs.baseURL) !== -1 && typeof window.parent.closeIframe === 'function' ){\n      window.parent.closeIframe(window.self);\n    }\n\n    window.showToastMessage = this.showToastMessage;\n    window.closeToastMessage = this.closeToastMessage;\n\n    if (localStorage){\n      const connectorName = localStorage.getItem('connectorName') ? localStorage.getItem('connectorName') : 'Infura';\n      const walletProvider = localStorage.getItem('walletProvider') ? localStorage.getItem('walletProvider') : 'Infura';\n\n      this.setConnector(connectorName,walletProvider);\n    }\n  }\n\n  handleWindowSizeChange = () => {\n    const newState = {\n      width:this.state.width,\n      height:this.state.height,\n    };\n\n    const widthChanged = window.innerWidth !== this.state.width;\n    const heightChanged = window.innerHeight !== this.state.height;\n\n    if (widthChanged || heightChanged){\n      if (widthChanged){\n        newState.width = window.innerWidth;\n      }\n      if (heightChanged){\n        newState.height = window.innerHeight;\n      }\n      return this.setState(newState);\n    }\n\n    return null;\n  };\n\n  // Optional parameters to pass into RimbleWeb3\n  config = globalConfigs.network;\n\n  showRoute(route) {\n    return this.setState({ route });\n  }\n\n  closeBuyModal(e) {\n    if (e){\n      e.preventDefault();\n    }\n    return this.setState({\n      buyToken:null,\n      buyModalOpened:false\n    });\n  }\n\n  openBuyModal(e,buyToken) {\n    e.preventDefault();\n\n    return this.setState({\n      buyToken,\n      buyModalOpened:true\n    });\n  }\n\n  async logout(){\n    this.functionsUtil.clearStoredData();\n  }\n\n  setConnector(connectorName,walletProvider){\n\n    let connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n    if (!connectorInfo && walletProvider){\n      connectorInfo = globalConfigs.connectors[walletProvider.toLowerCase()];\n    }\n\n    if ( (connectorInfo && !connectorInfo.enabled) || (connectorName !== 'Injected' && !Object.keys(globalConfigs.connectors).includes(connectorName.toLowerCase())) || (walletProvider && !Object.keys(globalConfigs.connectors).includes(walletProvider.toLowerCase()))) {\n      connectorName = 'Infura';\n      walletProvider = 'Infura';\n    } else if ( connectorName === 'Injected' ){\n      const hasMetamask = GeneralUtil.hasMetaMask();\n      const hasDapper = GeneralUtil.hasDapper()\n\n      // Check if injected connector is valid\n      switch (walletProvider){\n        case 'Metamask':\n          if (!hasMetamask && hasDapper){\n            walletProvider = 'Dapper';\n          }\n        break;\n        case 'Dapper':\n          if (!hasDapper && hasMetamask){\n            walletProvider = 'Metamask';\n          }\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.functionsUtil.setLocalStorage('connectorName', connectorName);\n    this.functionsUtil.setLocalStorage('walletProvider', walletProvider);\n\n    return this.setState({\n      connectorName,\n      walletProvider\n    });\n  }\n\n  render() {\n    const isMobile = this.state.width <= 768;\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n\n    // console.log(this.state.selectedToken,this.state.tokenConfig);\n\n    return (\n      <Router>\n        <ScrollToTop />\n        <ThemeProvider theme={theme}>\n          <Web3Provider\n            connectors={connectors}\n            libraryName={'web3.js'}\n            web3Api={Web3}\n          >\n            <Web3Consumer>\n              {context => {\n                return (\n                  <RimbleWeb3\n                    context={context}\n                    isMobile={isMobile}\n                    config={this.config}\n                    connectors={connectors}\n                    cachedData={this.state.cachedData}\n                    tokenConfig={this.state.tokenConfig}\n                    customAddress={this.state.customAddress}\n                    selectedToken={this.state.selectedToken}\n                    connectorName={this.state.connectorName}\n                    walletProvider={this.state.walletProvider}\n                    setConnector={this.setConnector.bind(this)}\n                    availableTokens={this.state.availableTokens}\n                    setCachedData={this.setCachedData.bind(this)}\n                    clearCachedData={this.clearCachedData.bind(this)}\n                    callbackAfterLogin={this.state.callbackAfterLogin}\n                    availableStrategies={this.state.availableStrategies}\n                    setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                    enableUnderlyingWithdraw={this.state.enableUnderlyingWithdraw}\n                  >\n                    <RimbleWeb3.Consumer>\n                      {({\n                        web3,\n                        modals,\n                        network,\n                        account,\n                        initWeb3,\n                        simpleID,\n                        biconomy,\n                        contracts,\n                        transaction,\n                        initAccount,\n                        initContract,\n                        transactions,\n                        initSimpleID,\n                        tokenDecimals,\n                        accountBalance,\n                        needsPreflight,\n                        validateAccount,\n                        rejectValidation,\n                        accountValidated,\n                        getTokenDecimals,\n                        getAccountBalance,\n                        accountBalanceLow,\n                        accountInizialized,\n                        accountBalanceToken,\n                        userRejectedConnect,\n                        initializeContracts,\n                        rejectAccountConnect,\n                        contractsInitialized,\n                        userRejectedValidation,\n                        accountValidationPending,\n                        connectAndValidateAccount,\n                        contractMethodSendWrapper\n                      }) => {\n                        return (\n                        <Box>\n                          <Switch>\n                            <Route\n                              path=\"/dashboard/:section?/:param1?/:param2?\"\n                              render={\n                                (props) => <Dashboard\n                                              {...props}\n                                              web3={web3}\n                                              theme={theme}\n                                              modals={modals}\n                                              network={network}\n                                              context={context}\n                                              account={account}\n                                              isDashboard={true}\n                                              initWeb3={initWeb3}\n                                              biconomy={biconomy}\n                                              isMobile={isMobile}\n                                              simpleID={simpleID}\n                                              contracts={contracts}\n                                              initAccount={initAccount}\n                                              initSimpleID={initSimpleID}\n                                              initContract={initContract}\n                                              transactions={transactions}\n                                              buyToken={this.state.buyToken}\n                                              logout={this.logout.bind(this)}\n                                              accountBalance={accountBalance}\n                                              validateAccount={validateAccount}\n                                              connecting={this.state.connecting}\n                                              cachedData={this.state.cachedData}\n                                              setToken={this.setToken.bind(this)}\n                                              accountValidated={accountValidated}\n                                              getTokenDecimals={getTokenDecimals}\n                                              rejectValidation={rejectValidation}\n                                              tokenConfig={this.state.tokenConfig}\n                                              getAccountBalance={getAccountBalance}\n                                              accountBalanceLow={accountBalanceLow}\n                                              accountInizialized={accountInizialized}\n                                              selectedToken={this.state.selectedToken}\n                                              connectorName={this.state.connectorName}\n                                              setStrategy={this.setStrategy.bind(this)}\n                                              userRejectedConnect={userRejectedConnect}\n                                              accountBalanceToken={accountBalanceToken}\n                                              initializeContracts={initializeContracts}\n                                              walletProvider={this.state.walletProvider}\n                                              buyModalOpened={this.state.buyModalOpened}\n                                              contractsInitialized={contractsInitialized}\n                                              openBuyModal={this.openBuyModal.bind(this)}\n                                              rejectAccountConnect={rejectAccountConnect}\n                                              handleMenuClick={this.selectTab.bind(this)}\n                                              setConnector={this.setConnector.bind(this)}\n                                              availableTokens={this.state.availableTokens}\n                                              closeBuyModal={this.closeBuyModal.bind(this)}\n                                              setCachedData={this.setCachedData.bind(this)}\n                                              selectedStrategy={this.state.selectedStrategy}\n                                              userRejectedValidation={userRejectedValidation}\n                                              clearCachedData={this.clearCachedData.bind(this)}\n                                              setStrategyToken={this.setStrategyToken.bind(this)}\n                                              accountValidationPending={accountValidationPending}\n                                              availableStrategies={this.state.availableStrategies}\n                                              connectAndValidateAccount={connectAndValidateAccount}\n                                              contractMethodSendWrapper={contractMethodSendWrapper}\n                                              setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                            />\n                              }\n                            >\n                            </Route>\n                            {\n                              governanceEnabled && \n                                <Route\n                                  path=\"/governance/:section?/:item_id?\"\n                                  render={\n                                    (props) => <Governance\n                                                  {...props}\n                                                  web3={web3}\n                                                  theme={theme}\n                                                  modals={modals}\n                                                  network={network}\n                                                  context={context}\n                                                  account={account}\n                                                  initWeb3={initWeb3}\n                                                  biconomy={biconomy}\n                                                  isMobile={isMobile}\n                                                  simpleID={simpleID}\n                                                  isGovernance={true}\n                                                  contracts={contracts}\n                                                  initAccount={initAccount}\n                                                  initSimpleID={initSimpleID}\n                                                  initContract={initContract}\n                                                  transactions={transactions}\n                                                  buyToken={this.state.buyToken}\n                                                  logout={this.logout.bind(this)}\n                                                  accountBalance={accountBalance}\n                                                  validateAccount={validateAccount}\n                                                  connecting={this.state.connecting}\n                                                  cachedData={this.state.cachedData}\n                                                  setToken={this.setToken.bind(this)}\n                                                  accountValidated={accountValidated}\n                                                  getTokenDecimals={getTokenDecimals}\n                                                  rejectValidation={rejectValidation}\n                                                  tokenConfig={this.state.tokenConfig}\n                                                  getAccountBalance={getAccountBalance}\n                                                  accountBalanceLow={accountBalanceLow}\n                                                  accountInizialized={accountInizialized}\n                                                  selectedToken={this.state.selectedToken}\n                                                  connectorName={this.state.connectorName}\n                                                  setStrategy={this.setStrategy.bind(this)}\n                                                  userRejectedConnect={userRejectedConnect}\n                                                  accountBalanceToken={accountBalanceToken}\n                                                  initializeContracts={initializeContracts}\n                                                  walletProvider={this.state.walletProvider}\n                                                  buyModalOpened={this.state.buyModalOpened}\n                                                  contractsInitialized={contractsInitialized}\n                                                  openBuyModal={this.openBuyModal.bind(this)}\n                                                  rejectAccountConnect={rejectAccountConnect}\n                                                  handleMenuClick={this.selectTab.bind(this)}\n                                                  setConnector={this.setConnector.bind(this)}\n                                                  availableTokens={this.state.availableTokens}\n                                                  closeBuyModal={this.closeBuyModal.bind(this)}\n                                                  setCachedData={this.setCachedData.bind(this)}\n                                                  selectedStrategy={this.state.selectedStrategy}\n                                                  userRejectedValidation={userRejectedValidation}\n                                                  clearCachedData={this.clearCachedData.bind(this)}\n                                                  setStrategyToken={this.setStrategyToken.bind(this)}\n                                                  accountValidationPending={accountValidationPending}\n                                                  availableStrategies={this.state.availableStrategies}\n                                                  connectAndValidateAccount={connectAndValidateAccount}\n                                                  contractMethodSendWrapper={contractMethodSendWrapper}\n                                                  setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                                />\n                                  }\n                                >\n                                </Route>\n                            }\n                            <Route>\n                              <Header\n                                modals={modals}\n                                network={network}\n                                context={context}\n                                account={account}\n                                initWeb3={initWeb3}\n                                isMobile={isMobile}\n                                contracts={contracts}\n                                initAccount={initAccount}\n                                initContract={initContract}\n                                buyToken={this.state.buyToken}\n                                accountBalance={accountBalance}\n                                logout={this.logout.bind(this)}\n                                validateAccount={validateAccount}\n                                connecting={this.state.connecting}\n                                accountValidated={accountValidated}\n                                getTokenDecimals={getTokenDecimals}\n                                rejectValidation={rejectValidation}\n                                tokenConfig={this.state.tokenConfig}\n                                getAccountBalance={getAccountBalance}\n                                accountBalanceLow={accountBalanceLow}\n                                selectedToken={this.state.selectedToken}\n                                connectorName={this.state.connectorName}\n                                userRejectedConnect={userRejectedConnect}\n                                accountBalanceToken={accountBalanceToken}\n                                walletProvider={this.state.walletProvider}\n                                buyModalOpened={this.state.buyModalOpened}\n                                contractsInitialized={contractsInitialized}\n                                openBuyModal={this.openBuyModal.bind(this)}\n                                rejectAccountConnect={rejectAccountConnect}\n                                handleMenuClick={this.selectTab.bind(this)}\n                                setConnector={this.setConnector.bind(this)}\n                                availableTokens={this.state.availableTokens}\n                                closeBuyModal={this.closeBuyModal.bind(this)}\n                                userRejectedValidation={userRejectedValidation}\n                                accountValidationPending={accountValidationPending}\n                                connectAndValidateAccount={connectAndValidateAccount}\n                                setToken={ e => { this.setToken(e) } }\n                              />\n\n                              {this.state.route === \"onboarding\" ? (\n                                <Web3Debugger\n                                  web3={web3}\n                                  account={account}\n                                  accountBalance={accountBalance}\n                                  accountBalanceToken={accountBalanceToken}\n                                  accountBalanceLow={accountBalanceLow}\n                                  initAccount={initAccount}\n                                  rejectAccountConnect={rejectAccountConnect}\n                                  userRejectedConnect={userRejectedConnect}\n                                  accountValidated={accountValidated}\n                                  accountValidationPending={accountValidationPending}\n                                  rejectValidation={rejectValidation}\n                                  userRejectedValidation={userRejectedValidation}\n                                  validateAccount={validateAccount}\n                                  connectAndValidateAccount={connectAndValidateAccount}\n                                  modals={modals}\n                                  network={network}\n                                  transaction={transaction}\n                                />\n                              ) : null}\n\n                              {this.state.route === \"default\" ? (\n                                <Switch>\n                                  <Route exact path=\"/\"\n                                    render={ (props) =>\n                                      <>\n                                        <Landing\n                                          {...props}\n                                          web3={web3}\n                                          theme={theme}\n                                          network={network}\n                                          account={account}\n                                          isMobile={isMobile}\n                                          simpleID={simpleID}\n                                          contracts={contracts}\n                                          innerWidth={this.state.width}\n                                          logout={this.logout.bind(this)}\n                                          innerHeight={this.state.height}\n                                          accountBalance={accountBalance}\n                                          connecting={this.state.connecting}\n                                          selectedTab={this.state.selectedTab}\n                                          tokenConfig={this.state.tokenConfig}\n                                          accountBalanceLow={accountBalanceLow}\n                                          getAccountBalance={getAccountBalance}\n                                          customAddress={this.state.customAddress}\n                                          selectedToken={this.state.selectedToken}\n                                          accountBalanceToken={accountBalanceToken}\n                                          closeToastMessage={this.closeToastMessage}\n                                          contractsInitialized={contractsInitialized}\n                                          openBuyModal={this.openBuyModal.bind(this)}\n                                          processCustomParam={this.processCustomParam}\n                                          availableTokens={this.state.availableTokens}\n                                          updateSelectedTab={this.selectTab.bind(this)}\n                                          toastMessageProps={this.state.toastMessageProps}\n                                          availableStrategies={this.state.availableStrategies}\n                                          connectAndValidateAccount={connectAndValidateAccount}\n                                          setToken={ e => { this.setToken(e) } }\n                                        />\n                                        <CookieConsent\n                                          expires={365}\n                                          buttonText={\"Ok\"}\n                                          location={\"bottom\"}\n                                          acceptOnScroll={true}\n                                          cookieName={\"cookieAccepted\"}\n                                          acceptOnScrollPercentage={5}\n                                          style={{background: \"rgba(255,255,255,0.95)\",zIndex:'9999999'}}\n                                          buttonStyle={{display: isMobile ? \"block\" : \"none\", backgroundColor:'#0036ff', color: 'white', marginTop: isMobile ? \"0px\" : \"15px\"}}\n                                        >\n                                          <Flex flexDirection={'row'} alignItems={['flex-start','center']} justifyContent={'flex-start'} maxHeight={['150px','initial']} style={ isMobile ? {overflowY:'scroll'} : null }>\n                                            <Image display={['none','block']} src={'images/cookie.svg'} width={'42px'} height={'42px'} />\n                                            <Text pl={[0,3]} color={'dark-gray'} fontSize={1} textAlign={'justify'}>\n                                              This website or its third-party tools process personal data (e.g. browsing data or IP addresses) and use cookies or other identifiers, which are necessary for its functioning and required to achieve the purposes illustrated in the cookie policy. To learn more, please refer to the <Link href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'} target={'_blank'} rel=\"nofollow noopener noreferrer\" hoverColor={'blue'}>cookie policy</Link>.\n                                              You accept the use of cookies or other identifiers by closing or dismissing this notice, by scrolling this page, by clicking a link or button or by continuing to browse otherwise.\n                                            </Text>\n                                          </Flex>\n                                        </CookieConsent>\n                                      </>\n                                    }\n                                  ></Route>\n                                  <Route exact path=\"/terms-of-service\">\n                                    <Tos />\n                                  </Route>\n                                  <Route>\n                                    <PageNotFound />\n                                  </Route>\n                                </Switch>\n                              ) : null}\n                            </Route>\n                          </Switch>\n                          <TransactionToastUtil transactions={transactions} />\n                        </Box>\n                      )}}\n                    </RimbleWeb3.Consumer>\n                  </RimbleWeb3>\n                );\n              }}\n            </Web3Consumer>\n          </Web3Provider>\n        </ThemeProvider>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport * as Sentry from '@sentry/browser';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\n\nif (window.location.hostname !== 'localhost') {\n  Sentry.init({\n    dsn: \"https://56f5c0bce273442390d7f25698fefe53@sentry.io/1547544\",\n    beforeSend(event, hint) {\n      let output = event;\n      const error = hint.originalException;\n      if (error && error.message){\n        if (error.message.match(/Failed to subscribe to new newBlockHeaders/i)){\n          output = false;\n        }\n      }\n      return output;\n    }\n  });\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__38P6I\",\"link\":\"Footer_link__13yZU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading-dots\":\"LoadingSpinner_loading-dots__2-3YZ\",\"loading-dots--dot\":\"LoadingSpinner_loading-dots--dot__2Y25C\",\"dot-keyframes\":\"LoadingSpinner_dot-keyframes__3SU_M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bulletCard\":\"HowItWorks_bulletCard__2Ym_N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchInput\":\"GenericSelector_searchInput__vl2hJ\",\"genericSelector\":\"GenericSelector_genericSelector__1Nqkd\",\"searchInputHidden\":\"GenericSelector_searchInputHidden__2Zm1B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainViewport\":\"Landing_mainViewport__foI3b\",\"headerContainer\":\"Landing_headerContainer__TvHkH\",\"bgContainer\":\"Landing_bgContainer__2WN2x\",\"button\":\"Landing_button__1Dxq1\",\"graySection\":\"Landing_graySection__2p8Tj\",\"whiteSection\":\"Landing_whiteSection__3bI3Y\",\"howItWork\":\"Landing_howItWork__1ukLM\",\"skewBg\":\"Landing_skewBg__gqJRL\",\"bgHeart\":\"Landing_bgHeart__NA46m\",\"platformLogo\":\"Landing_platformLogo__1hJaf\",\"bulletCard\":\"Landing_bulletCard__1JBcJ\",\"bulletCardFirst\":\"Landing_bulletCardFirst__HI7ri\",\"bulletCardActive\":\"Landing_bulletCardActive__AVHnI\",\"bulletPoint\":\"Landing_bulletPoint__uVUzZ\",\"bulletRight\":\"Landing_bulletRight__3vjg5\",\"bulletTop\":\"Landing_bulletTop__2qDPm\",\"bulletLeft\":\"Landing_bulletLeft__MYQV4\",\"bulletBottom\":\"Landing_bulletBottom__1vQq-\",\"bulletBottomLeft\":\"Landing_bulletBottomLeft__1bIB1\",\"bulletBottomBottom\":\"Landing_bulletBottomBottom__mqq0k\",\"bulletMobile\":\"Landing_bulletMobile__1dlqp\",\"carouselItem\":\"Landing_carouselItem__2leMl\",\"pos1\":\"Landing_pos1__tMo3K\",\"carouselItemMobile\":\"Landing_carouselItemMobile__2GqCc\",\"pos2\":\"Landing_pos2__2HmVh\",\"pos3\":\"Landing_pos3__28UmQ\",\"bentTube\":\"Landing_bentTube__2dNhi\",\"bounceArrow\":\"Landing_bounceArrow__3SKSY\",\"bounce\":\"Landing_bounce__z5RHk\",\"rebalanceCircle\":\"Landing_rebalanceCircle__2UwcI\",\"spin\":\"Landing_spin__1_Jg0\",\"carouselDesc\":\"Landing_carouselDesc__351uo\",\"selected\":\"Landing_selected__190kp\",\"carouselNav\":\"Landing_carouselNav__3oCdi\",\"footer\":\"Landing_footer__1wRkb\",\"socialIcon\":\"Landing_socialIcon__1nHuK\",\"gradientBackground\":\"Landing_gradientBackground__2DtpV\",\"bentTubeLeft\":\"Landing_bentTubeLeft__3844Y\",\"bentTubeRight\":\"Landing_bentTubeRight__2akHv\",\"bentTubeActive\":\"Landing_bentTubeActive__3rtbt\",\"bg1\":\"Landing_bg1__23mxk\"};"],"sourceRoot":""}