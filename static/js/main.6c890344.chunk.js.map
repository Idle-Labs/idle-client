{"version":3,"sources":["SmartNumber/SmartNumber.js","TrancheWelcome/TrancheWelcome.module.scss","PageNotFound/PageNotFound.module.scss","Breadcrumb/Breadcrumb.js","utilities/components/ShortHash.js","LoadingSpinner/LoadingSpinner.js","ButtonLoader/ButtonLoader.js","RoundIconButton/RoundIconButton.js","CardIconButton/CardIconButton.js","CustomTooltip/CustomTooltip.js","AllocationChart/AllocationChart.js","CustomTooltip/CustomTooltipRow.js","Faquestion/Faquestion.js","ActiveCoverages/ActiveCoverages.js","PortfolioEquity/PortfolioEquity.js","GenericSelector/GenericSelector.js","TxProgressBar/TxProgressBar.js","theme.js","IconBox/IconBox.js","AssetSelector/AssetSelector.js","utilities/components/ModalCard.module.scss","TwitterShareButton/TwitterShareButton.module.scss","TableCellHeader/TableCellHeader.module.scss","TransactionListFilters/TransactionListFilters.module.scss","Web3ConnectionButtons/Web3ConnectionButtons.module.scss","GenericChart/GenericChart.js","utilities/components/Header.module.scss","ExecuteTransaction/ExecuteTransaction.js","Tos/Tos.module.scss","TransactionField/TransactionField.js","utilities/components/BuyModal.js","utilities/IdleGovToken.js","utilities/FunctionsUtil.js","DashboardCard/DashboardCard.module.scss","DashboardCard/DashboardCard.js","TableRow/TableRow.js","TableHeader/TableHeader.js","FastBalanceSelector/FastBalanceSelector.js","abis/compound/cDAI.js","abis/tokens/ERC20.js","configs/availableTokens.js","Staking/Staking.js","GenericFaqs/GenericFaqs.js","SendTxWithBalance/SendTxWithBalance.js","utilities/components/LimitReachedModal.js","TrancheDetails/TrancheDetails.js","TrancheDepositRedeem/TrancheDepositRedeem.js","PortfolioEquityTranches/PortfolioEquityTranches.js","FundsOverviewTranche/FundsOverviewTranche.js","StakingRewardsTranche/StakingRewardsTranche.js","TranchePage/TranchePage.js","TranchesList/TranchesList.js","TrancheBox/TrancheBox.js","TrancheFlash/TrancheFlash.js","TrancheWelcome/TrancheWelcome.js","GenericPieChart/GenericPieChart.js","TotalBalanceCounter/TotalBalanceCounter.js","TotalEarningsCounter/TotalEarningsCounter.js","Tranches/Tranches.js","TokenSwap/TokenSwap.js","LpStaking/LpStaking.js","StatsCardSmall/StatsCardSmall.js","IdleStaking/IdleStaking.js","NexusMutual/NexusMutual.js","TokenWrapper/TokenWrapper.js","PortfolioDonut/PortfolioDonut.js","EarningsEstimation/EarningsEstimation.js","DashboardIconButton/DashboardIconButton.js","PolygonBridgeTransactions/PolygonBridgeTransactions.js","StrategyPage/StrategyPage.js","BatchDeposit/BatchDeposit.js","PolygonBridge/PolygonBridge.js","CoverProtocol/CoverProtocol.js","TokenMigration/TokenMigration.js","BatchMigration/BatchMigration.js","DeployB2BVesting/DeployB2BVesting.js","configs/globalConfigs.js","../node_modules/@maticnetwork/meta/network sync /^/.//.*//index/.json$","../node_modules/@maticnetwork/meta/network sync /^/.//.*/.json$","ConnectBox/ConnectBox.js","TransactionListFilters/TransactionListFilters.js","TransactionsList/TransactionsList.js","Migrate/Migrate.js","ChartCustomTooltipRow/ChartCustomTooltipRow.js","CustomList/CustomList.js","AssetsList/AssetsList.js","Tos/Tos.js","theme-dark.js","App/connectors/TorusConnector.js","App/connectors/AuthereumConnector.js","App/connectors/GnosisSafeConnector.js","App/connectors/WalletLinkConnector.js","App/connectors/WalletConnectConnector.js","App/connectors.js","utilities/components/WrongNetworkBanner.js","utilities/NetworkUtil.js","utilities/components/NoWeb3BrowserModal.js","utilities/components/NoWalletModal.js","utilities/GeneralUtil.js","utilities/components/WrongNetworkModal.js","utilities/components/TransactionFeeModal.js","Web3ConnectionButtons/Web3ConnectionButtons.js","utilities/components/ConnectionModal.js","utilities/components/ConnectionPendingModal.js","utilities/components/UserRejectedConnectionModal.js","utilities/components/LowFundsModal.js","utilities/ConnectionModalsUtil.js","utilities/components/ConnectionErrorModal.js","utilities/components/TransactionErrorModal.js","utilities/RimbleWeb3.js","utilities/components/Header.js","ScrollToTop/ScrollToTop.js","PageNotFound/PageNotFound.js","utilities/components/NetworkOverview.js","Web3Debugger/Web3Debugger.js","configs/availableTranches.js","utilities/TransactionToastMessages.js","utilities/TransactionToastUtil.js","App/App.js","serviceWorker.js","index.js","Footer/Footer.module.scss","utilities/components/ModalCard.js","colors.js","VariationNumber/VariationNumber.js","GenericSelector/GenericSelector.module.scss","LoadingSpinner/LoadingSpinner.module.scss","FlexLoader/FlexLoader.js","Footer/Footer.js","TableCellHeader/TableCellHeader.js","ChartCustomTooltip/ChartCustomTooltip.js","TwitterShareButton/TwitterShareButton.js","utilities/components/ShareModal.js","CustomField/CustomField.js","Title/Title.js","ImageButton/ImageButton.js","RoundButton/RoundButton.js","ExtLink/ExtLink.js","TrancheField/TrancheField.js","AssetField/AssetField.js"],"names":["SmartNumber","functionsUtil","this","setProps","props","FunctionsUtil","loadUtils","_this2","formattedNumber","number","isNaN","type","formatMoney","precision","abbreviateNumber","decimals","maxPrecision","minPrecision","flexProps","width","alignItems","flexDirection","justifyContent","Object","keys","length","forEach","p","showUnit","unit","unitPos","react__WEBPACK_IMPORTED_MODULE_8___default","a","createElement","rimble_ui__WEBPACK_IMPORTED_MODULE_7__","unitProps","Component","module","exports","trancheFlash","mobile","headerContainer","headerBgFiller","bgContainer","list","textContainer","Breadcrumb","_this","showPathMobile","react__WEBPACK_IMPORTED_MODULE_5___default","rimble_ui__WEBPACK_IMPORTED_MODULE_6__","id","handleClick","_RoundIconButton_RoundIconButton__WEBPACK_IMPORTED_MODULE_7__","buttonProps","border","height","iconSize","iconName","text","ml","fontSize","fontWeight","color","hoverColor","onClick","isMobile","path","map","index","link","pathLink","Link","Text","pl","style","maxWidth","overflow","whiteSpace","textOverflow","borderLeft","concat","theme","colors","divider","key","e","goToSection","ShortHash","state","componentUnmounted","loadData","prevProps","prevState","hash","newState","callback","setState","resolveAddress","shortenHash","getENSName","ensName","setStateSafe","loader","react__WEBPACK_IMPORTED_MODULE_7___default","rimble_ui__WEBPACK_IMPORTED_MODULE_8__","size","assign","display","LoadingSpinner","react_default","index_es","className","styles","mx","ButtonLoader","isLoading","src_LoadingSpinner_LoadingSpinner","buttonText","RoundIconButton","borderRadius","mainColor","disabled","minWidth","react__WEBPACK_IMPORTED_MODULE_6___default","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_7__","rimble_ui__WEBPACK_IMPORTED_MODULE_5__","name","CardIconButton","cardProps","py","px","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_7__","isInteractive","isActive","isDisabled","backgroundColor","margin","my","align","image","src","imageProps","useIconOnly","icon","iconColor","iconProps","mr","isSidebar","iconBgColor","transactions","actionBg","redeem","textProps","CustomTooltip","point","left","data","itemPos","xFormatted","mb","textAlign","children","AllocationChart","chartData","chartProps","selectedSlice","totalAllocation","protocolsAllocations","protocolsAllocationsPerc","selectedToken","getTokenAllocation","tokenConfig","padAngle","animate","borderWidth","cornerRadius","motionDamping","innerRadius","motionStiffness","d","onMouseEnter","_this3","onMouseLeave","tooltipFormat","v","sliceLabel","value","radialLabel","tooltip","container","inline","background","cardBg","labels","fontFamily","fonts","sansSerif","legends","slicesLabelsSkipAngle","radialLabelsSkipAngle","enableRadialLabels","radialLabelsTextXOffset","slicesLabelsTextColor","radialLabelsTextColor","radialLabelsLinkStrokeWidth","radialLabelsLinkDiagonalLength","radialLabelsLinkHorizontalLength","enableSlicesLabels","radialLabelsLinkColor","from","borderColor","modifiers","top","right","bottom","protocols","protocolInfo","i","protocolName","protocolAddr","address","toLowerCase","protocolAllocationPercParsed","parseFloat","times","toFixed","push","globalConfigs","stats","hsl","join","label","capitalize","protocolIcon","rimble_ui__WEBPACK_IMPORTED_MODULE_9__","position","zIndex","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_10__","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_13__","Pie","showLoader","CustomTooltipRow","pr","flexBasis","flex","textTransform","dangerouslySetInnerHTML","__html","Faquestion","isShowingAnswer","preventDefault","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","isOpened","boxShadow","cursor","h4","question","answer","Base","loaded","activeCoverages","loadCoverages","account","getActiveCoverages","coverages","c","availableTokens","includes","collateral","statusColors","status","statusIcon","statusColor","completed","failed","pending","statusIconProps","portfolioCoverage","react__WEBPACK_IMPORTED_MODULE_9___default","title","_Title_Title__WEBPACK_IMPORTED_MODULE_8__","titleProps","_CustomList_CustomList__WEBPACK_IMPORTED_MODULE_10__","rows","row","fileClaimUrl","openWindow","cols","fields","themeMode","parentProps","funcProps","actionLabel","actionDisabled","actionUrl","PortfolioEquity","startDate","chartwidth","chartHeight","loadChartData","quickDateSelectionChanged","quickDateSelection","JSON","stringify","enabledTokens","componentDidMount","mobileChanged","themeModeChanged","getEtherscanTxs","etherscanTxs","tokensBalance","firstTxTimestamp","asyncForEach","_ref","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee3","filteredTxs","amountLent","wrap","_context3","prev","next","values","filter","tx","token","BNify","action","Math","min","parseInt","timeStamp","tokenAmount","plus","minus","lt","balance","tokenPrice","idleTokens","stop","_x3","apply","arguments","currentDate","strToMoment","Date","clone","subtract","days","prevBalances","prevTimestamp","minChartValue","maxChartValue","aggregatedBalance","aggregatedBalancesKeys","tokensBalancesPerDate","currTimestamp","getTime","tokensData","isRisk","selectedStrategy","_ref2","_callee4","tokenAddress","_context4","getAvailableTokenAddress","getTokenApiData","sent","_x4","idleTokenBalance","foundBalances","tokensBalances","lastTokenData","lastTokenDataUnfiltered","pop","filteredTokenData","timestamp","tokenDecimals","filteredBalances","lastFilteredTx","idlePrice","fixTokenDecimals","newBalance","lastTx","lastTxBalance","gt","tokenUsdConversionRate","conversionRateField","getGlobalConfig","chartToken","conversionRate","momentDate","isSameOrAfter","isSameOrBefore","formattedDate","format","max","frequencySeconds","_loop","aggregatedBalances","date","x","y","balances","itemIndex","item","floor","toUpperCase","yFormatDecimals","gridYStep","gridYValues","gridYValue","axisBottomIndex","daysCount","daysFrequency","ceil","xScale","yScale","stacked","xFormat","yFormat","axisBottom","legend","tickSize","tickPadding","orient","legendOffset","tickValues","legendPosition","pointSize","useMesh","axisLeft","tickRotation","pointLabel","enableArea","enableSlices","enableGridY","curve","enableGridX","pointBorderWidth","pointLabelYOffset","areaBaselineValue","pointColor","areaOpacity","axis","ticks","fill","grid","line","stroke","lineChartStroke","strokeDasharray","sliceTooltip","slideData","slice","points","_ChartCustomTooltip_ChartCustomTooltip__WEBPACK_IMPORTED_MODULE_11__","_ChartCustomTooltipRow_ChartCustomTooltipRow__WEBPACK_IMPORTED_MODULE_12__","serieId","yFormatted","formattedBalance","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_10__","Line","parentId","parentIdHeight","GenericSelector","loadComponents","selectedTokenChanged","optionsChanged","options","defaultValueChanged","defaultValue","componentsChanged","CustomOptionValue","CustomValueContainer","ControlComponent","innerProps","menuIsOpen","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_12__","CustomIndicatorSeparator","CustomMenu","mt","selectProps","CustomInputContainer","isSearchable","fontSizes","copyColor","fontWeights","searchInput","dark","searchInputHidden","CustomOption","selectedValue","o","indexOf","genericSelector","isFocused","react_select__WEBPACK_IMPORTED_MODULE_7__","onChange","components","Menu","Option","Control","Input","SingleValue","IndicatorSeparator","TxProgressBar","txCount","error","ended","percentage","processing","txTimestamp","initialized","estimatedTime","remainingTime","_callee","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default","_context","initProgressBar","getTransaction","transaction","Promise","_ref3","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__","_callee2","resolve","reject","_context2","web3","eth","err","_x","_x2","abrupt","getBlockTime","pt","blockTime","axios","get","getPredictionTable","_callee5","predictTable","_context5","getTxEstimatedTime","gasPrice","getRequiredNetwork","provider","prediction","gasprice","pdValues","_estimateWait","gas","txMeanSecs","block_time","customLog","calculateRemainingTime","_callee6","secondsPassed","timePassed","_context6","blockNumber","div","toString","setTimeout","updateProgressBar","getTxInfo","_callee7","txProgressBarKey","txHash","txProgressBarData","_ref8","_ref9","_context7","localStorage","getItem","parse","all","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","setLocalStorage","_callee8","_context8","window","clearTimeout","gasoffered","minedProb","expectedWait","sum1","sum2","prob","exp","minutes","seconds","substr","currentNetwork","react__WEBPACK_IMPORTED_MODULE_10___default","rimble_ui__WEBPACK_IMPORTED_MODULE_13__","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_11__","textColor","loaderProps","endMessage","waitText","span","renderRemainingTime","loadingMessage","sendingMessage","target","rel","href","getEtherscanTransactionUrl","explorer","cancelTransaction","cancelTextColor","cancelTextHoverColor","_colors__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","polished__WEBPACK_IMPORTED_MODULE_1__","__webpack_exports__","breakpoints","letterSpacings","lineHeights","solid","copy","serif","counter","space","radii","widths","minWidths","maxWidths","heights","minHeights","maxHeights","borders","borderWidths","shadows","opacity","primary","blue","base","gradient-bg","primary-light","light","primary-dark","bgBlue","tick","dark-blue","skyBlue","lightBlue","subColor","black","baseColors","near-black","dark-gray","mid-gray","gray","grey","silver","light-silver","moon-gray","light-gray","near-white","white","transparent","green","connect","newblue","alert","arrowActive","arrowInactive","selectBgFocused","selectBg","backButtonBg","wrongNetworkBannerBg","dashboardBg","statValue","boxBorder","cellTitle","cellText","divider2","deposit","migrate","menuBg","menuHover","flashColor","menuRightBorder","menuIconActive","cardBgContrast","cardHoverShadow","cardBgHover","cardBorder","pageActive","pageInactive","send","swap","boost","swapout","curvein","receive","default","curveout","withdraw","curvedepositin","curvedepositout","blacks","whites","zIndices","messageStyle","shade","tint","success","warning","yellow","danger","red","info","buttons","--main-color","--contrast-color","normal","buttonSizes","small","padding","medium","large","IconBox","isVisible","AssetSelector","find","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_9__","fieldInfo","showCustomField","cachedData","setCachedData","showBalance","_GenericSelector_GenericSelector__WEBPACK_IMPORTED_MODULE_11__","changeToken","bg","twitterIcon","radioBtn","button","GenericChart","addEventListener","handleWindowSizeChange","bind","removeEventListener","chartContainer","document","getElementById","chartWidth","offsetWidth","chartContainerH","ChartType","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_7__","minHeight","undefined","loaderText","gradientButton","empty","select","selectDark","input","ExecuteTransaction","txStatus","loading","eventData","eventCategory","eventLabel","methodName","eventAction","contractName","getTransactionError","sendGoogleAnalyticsEvent","callbackReceipt","transactionHash","params","getTransactionParams","getTransactionParamsAsync","transactionParams","sendRawTransaction","contractMethodSendWrapper","ExecuteComponent","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_11__","network","progressBarProps","execute","componentProps","TransactionField","loadField","hashChanged","accountChanged","output","bgColor","fieldProps","rimble_ui__WEBPACK_IMPORTED_MODULE_12__","_utilities_components_ShortHash__WEBPACK_IMPORTED_MODULE_11__","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_9__","amount","tokenSymbol","iconSrc","CustomComponent","customValue","getArrayPath","Image","Icon","BuyModal","selectedMethod","availableMethods","selectedCountry","selectedProvider","availableProviders","buyToken","renderPaymentMethod","buyParams","onSuccess","onClose","paymentProvider","initParams","currentState","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","toastProvider","addMessage","secondaryMessage","colorTheme","actionHref","actionText","variant","getAccountBalance","_x5","payments","providers","getInitParams","t0","render","analytics","google","events","enabled","closeModal","goBack","resetModal","componentWillMount","showInline","getProviderInfo","providerInfo","getInfo","newProviderInfo","getDefaultPaymentProvider","paymentMethod","defaultProvider","getAvailablePaymentProviders","providerSupportMethod","supportedMethods","providerSupportToken","supportedTokens","baseToken","defaultPaymentProvider","showDefaultOnly","selectProvider","ethAvailable","tokenAvailable","selectMethod","selectToken","loadRemoteResources","handleCountryChange","getAvailableCountries","availableCountries","supportedCountries","countryCode","j","countries","remoteResources","url","split","scriptID","script","remoteResourceParams","precall","readyState","onreadystatechange","onload","async","parentElement","appendChild","head","stylesheetId","methods","method","methodInfo","loadAvailableMethods","_this4","caption","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","showAllTokens","InnerComponent","flexWrap","imageSrc","_ImageButton_ImageButton__WEBPACK_IMPORTED_MODULE_12__","imagePropsExtended","react_select__WEBPACK_IMPORTED_MODULE_10__","placeholder","noOptionsMessage","inputValue","isOpen","_ModalCard__WEBPACK_IMPORTED_MODULE_11__","closeFunc","Header","Body","Footer","React","IdleGovToken","classCallCheck","tokenName","getBalance","asyncToGenerator","regenerator_default","getTokenBalance","claimRewards","getPriorVotes","priorVotes","_args3","genericContractCall","refreshIdleSpeed","getUnclaimedTokens","getAPR","_ref6","IDLETokenConfig","cachedDataKey","APR","_ref7","idleDistribution","tokenAllocation","DAITokenConfig","tokenPool","idleDistributedPerYearUSD","_args6","idle","getDistribution","slicedToArray","getUniswapConversionRate","lte","convertTokenBalance","totalAllocationWithUnlent","getSpeed","idleTokenAddress","idleSpeeds","getCachedDataWithLocalStorage","setCachedDataWithLocalStorage","_ref10","blocksPerYear","distribution","_x6","getUserDistribution","_callee10","fixByFrequency","currentNetworkId","totalSpeed","_args10","_context10","availableStrategies","getRequiredNetworkId","_ref12","_callee9","_ref13","_ref14","idleSpeed","userPoolShare","tokenSpeed","_context9","getUserPoolShare","_x7","fixDistributionSpeed","distributionFrequency","getAvgApr","_callee12","_args12","_context12","_ref16","_callee11","_ref17","_ref18","idleApr","_context11","_x8","ethereumjsABI","require","profiler","idleGovToken","trimEth","toBN","n","utils","BN","toEth","wei","fromWei","toWei","htmlDecode","innerHTML","childNodes","nodeValue","BNify_obj","s","BigNumber","String","_len","Array","_key","logs","messagesEnabled","moment","customLogError","_console","_len2","_key2","errorsEnabled","console","getContractByName","networkId","required","contract","contracts","current","isCorrectNetwork","contractsNetworks","normalizeSimpleIDNotification","replace","str","replaceArrayProps","arr1","arr2","replaceArrayPropsRecursive","objectSpread","stripHtml","html","tmp","textContent","innerText","scrollTo","to","duration","start","scrollY","change","currentTime","easeInOutQuad","t","b","animateScroll","val","getQueryStringParameterByName","location","results","RegExp","exec","decodeURIComponent","getTxAction","depositProxyContractInfo","migrationContractAddr","migration","migrationContract","migrationContractOldAddrs","oldAddresses","batchMigration","batchMigrationContractAddr","isMigrationTx","contractAddress","isSendTransferTx","isReceiveTransferTx","isDepositTx","isRedeemTx","isSwapTx","shortHash","txStart","txEnd","addEthereumChain","chainId","getCurrentWeb3","currentProvider","request","networkConfig","chainName","providerConfig","blockExplorerUrl","rpcUrls","publicRpc","rpc","toHex","nativeCurrency","symbol","blockExplorerUrls","ensConfig","TTL","ens","addressCheck","supportedNetworks","checkAddress","ENS","ensAddress","getEnsAddress","getName","getAddress","getAccountPortfolioTranches","availableTranches","portfolio","tranches","avgAPY","totalEarnings","totalAmountLent","totalEarningsPerc","_args5","tranchesBalance","totalBalance","protocol","protocolConfig","_ref4","_ref5","tranche","trancheConfig","trancheTokenBalance","tranchePool","tranchePrice","tokenBalance","trancheUserInfo","trancheApy","poolShare","amountDeposited","trancheEarnings","loadTrancheFieldRaw","getTrancheUserInfo","toConsumableArray","trancheInfo","trancheWeight","getAccountPortfolio","orderedTokensBalance","depositedTokens","_args8","tokensToMigrate","totalBalanceConverted","_ref11","_ref13$","migrationEnabled","oldContractBalanceFormatted","tokenKey","tokenBalanceConverted","checkMigration","strategy","getIdleTokenPrice","_ref15","tokenAprs","tokenAPY","tokenWeight","amountLentToken","tokenEarnings","getTokenAprs","getAmountDeposited","avgApy","requiredNetwork","web3RpcKey","web3Rpc","ethereum","Web3","HttpProvider","getCurveAvgSlippage","processedTxs","processedHashes","curveTokensBalance","curveTxs","avgSlippage","totalDeposited","_args9","getCurveAvailableTokens","getCurveTxs","curveTokens","curveTokenPrice","price","received","slippage","deposited","getCurveAvgBuyPrice","avgBuyPrice","prevAvgBuyPrice","getAvgBuyPrice","_args11","idleTokensBalance","getFirstDepositTx","deposits","firstDepositTx","getDashboardSectionUrl","section","env","envUrl","baseUrl","origin","asyncTimeout","ms","getDepositTimestamp","_callee13","firstDepositTxs","_args13","_context13","reduce","acc","getTrancheRewardTokensInfo","_ref22","_callee15","stakingRewards","tokensDistribution","_context15","_ref23","_callee14","eventFilters","transfers","firstHarvest","latestHarvest","firstBlock","govTokenConfig","_ref24","_ref25","prevBlockInfo","lastBlockInfo","lastBlockPoolSize","poolSize","elapsedBlocks","elapsedSeconds","lastAmount","totalAmount","tokensPerBlock","tokensPerSecond","tokensPerDay","tokensPerYear","convertedTokensPerYear","tokenApr","tokenApy","_context14","CDO","CDORewards","getContractEvents","fromBlock","toBlock","_address","getBlockInfo","genericContractCallCached","returnValues","total","apr2apy","apr","apy","_x9","_ref26","_callee17","defaultEventsConfig","underlyingEventsConfig","underlyingEventsFilters","_ref27","_ref28","underlying_transfers","trancheToken_transfers","totalAmountDeposited","_context17","_ref29","_callee16","trancheTokenTransferEvent","tokenTransferEvent","trancheTokenAmount","blockInfo","hashKey","_context16","trancheTokens","_x13","_x10","_x11","_x12","getTrancheUserTransactions","_ref30","_callee18","_context18","_x14","_x15","_x16","getTrancheFirstDepositTx","_ref31","_callee19","_context19","_x17","_x18","_x19","getAmountDepositedTranche","_ref32","_callee20","_context20","_x20","_x21","_x22","_ref33","_callee21","_ref34","_ref35","userAvgPrice","_context21","_x23","_x24","getAmountLent","_callee22","amountLents","_args22","_context22","getBaseToken","getCurrentNetwork","getCurrentNetworkId","defaultNetwork","getPolygonBridgeTxs","_callee28","txs","covalentInfo","etherscanInfo","stateSenderConfig","erc20PredicateConfig","etherPredicateConfig","depositManagerConfig","rootChainManagerConfig","polygonNetworkId","covalentApiUrl","polygonAvailableTokens","polygonEndpoint","ethereumNetworkId","etherscanApiUrl","etherscanEndpoint","etherscanTxlistEndpoint","etherscanTxlistInternalEndpoint","_ref38","_ref39","last_state_id","polygonTxs","etherscanTxlist","etherscanTxlistInternal","rootTokensAddresses","childTokensAddresses","depositTxs","exitTxs","depositTxsHashes","depositETHInputRexExp","depositETHTxs","exitETHTxs","_args28","_context28","getCachedData","endpoints","getPolygonCurrentLastStateId","makeCachedRequest","makeEtherscanApiRequest","childToken","rootToken","result","_ref40","_callee23","ethereumTx","txReceipt","stateSenderLog","tx_state_id","_context23","bridgeType","getTxReceipt","web3Infura","log","hexToNumberString","topics","included","_x25","_ref41","_callee24","_context24","_x26","match","_ref42","_callee25","_context25","_x27","_ref43","_callee26","_context26","_x28","items","to_address","_ref44","_callee27","polygonTx","_context27","normalizePolygonTx","exited","maticPOSClient","exitERC20","encodeAbi","_x29","sort","getPolygonBaseTxs","_callee29","debug","baseTxs","baseEndpoint","cachedRows","lastCachedTx","lastCachedBlockNumber","covalentEndpointLastBlock","latestTxs","latestBlockNumbers","requestCount","requestStatus","dataToCache","_args29","_context29","getCachedRequest","block_height","filterPolygonTxs","tx_hash","saveFetchedTransactions","makeRequest","now","addKeyToCachedDataWithLocalStorage","getEtherscanBaseTxs","_callee30","firstBlockNumber","endBlockNumber","firstIdleBlockNumber","etherscanEndpointLastBlock","_args30","_context30","filterEthereumTxs","_callee31","_args31","_context31","filterCurveTxs","endpoint","txsToStore","cachedRequest","saveCachedRequest","_callee32","resultData","_resultData","allAvailableTokens","_args32","_context32","processStoredTxs","t1","_callee33","contractInstance","_context33","web3Polygon","Contract","constant","inputs","outputs","internalType","payable","stateMutability","lastStateId","call","checkPolygonTransactionIncluded","_ref50","_callee34","_ref51","_ref52","_context34","getTransactionReceipt","_x30","_ref53","_callee35","_args35","_context35","_x31","depositLogEvent","log_events","sender_address","decoded","param","redeemLogEvent","withdrawLogEvent","tokenDecimal","idleToken","block_signed_at","_d","logEvent","raw_log_topics","from_address","gasUsed","gas_spent","gas_price","_ref54","_callee36","processTransactions","idleTokensAddresses","_args36","_context36","mappedTx","_x32","_x33","filterEtherscanTxs","_ref55","_callee37","processTxs","_args37","_context37","_x34","_ref56","_callee38","curveTransfersTxs","curveTransfersTxsToDelete","curveZapContract","curvePoolContract","curveSwapContract","curveDepositContract","_args38","_context38","tokenMigrationToolParams","curveTokenConfig","internalTxs","r","isRightToken","iTx","isBatchMigrationTx","isDepositInternalTx","iTx2","isRedeemInternalTx","isConversionTx","isWithdrawTx","curveTx","isCurveTx","isCurveDepositTx","isCurveRedeemTx","isCurveDepositIn","isCurveDepositOut","isCurveZapIn","isCurveZapOut","isCurveTransferOut","isCurveTransferIn","isSwapOutTx","tokenValue","newValue","iTxs","withdrawnValue","_x35","addStoredTransaction","txKey","storedTxs","getStoredTransactions","updateStoredTransactions","getStoredItem","_ref57","_callee43","txReceipts","baseTokensConfigs","baseTokensAddresses","curveAvailableTokens","_args43","_context43","baseTokenConfig","baseTokenAddress","_ref58","_callee42","minedTxs","_context42","_ref59","_callee41","storedTx","tokensTransfered","_curveTokenPrice","_curveTokenPrice2","curveTxReceipt","filteredLogs","_curveTokenPrice3","_curveTxReceipt","idleTokenDecimals","_filteredLogs","_context41","getCurveTokenPrice","_ref60","_callee39","_context39","_x40","_x41","baseTokensConfig","t2","_ref61","_callee40","_context40","_x42","_x43","_x38","_x39","_x37","_x36","_ref62","_callee49","txsToProcess","_args49","_context49","_ref63","_callee48","_context48","_ref64","_callee47","isStoredTx","allowedMethods","pendingStatus","txSucceeded","txPending","isMetaTx","methodIsAllowed","realTx","txValue","redeemedValueFixed","executeMetaTransactionReceipt","executeMetaTransactionContractAddr","executeMetaTransactionInternalTransfers","IdleProxyMinterInfo","internalTransfer","metaTxValue","metaTxValueFixed","migrationTxReceipt","migrationTxInternalTransfers","migrationInternalTransfer","decodedLogs","migrationValue","migrationValueFixed","_context47","mintIdleToken","redeemIdleToken","migrateFromToIdle","mintIdleTokensProxy","migrateFromAaveToIdle","migrateFromIearnToIdle","executeMetaTransaction","migrateFromFulcrumToIdle","migrateFromCompoundToIdle","created","_ref65","_callee44","_context44","_x48","_x49","_ref66","_callee45","_context45","_x50","_x51","oldContract","raw","_ref67","_callee46","_context46","_x52","_x53","abi","decodeLog","_token","_x46","_x47","_x45","_x44","alias","getCustomAddress","setCustomAddress","customAddress","cachedRequests","_ref68","_callee50","error_callback","config","_args50","_context50","catch","_x54","_ref69","_callee51","apiKeyIndex","apiKey","_args51","_context51","message","_x55","_ref70","_callee52","return_data","_args52","_context52","_x56","code","errorCode","getGlobalConfigs","array","prop","shift","configs","getAppUrl","baseURL","getCurrentEnvironment","environments","checkUrlPolygon","polygonUrl","checkUrlOrigin","checkUrlBeta","betaURL","sendGoogleAnalyticsPageview","_callee53","page","googlePageviewInfo","isOrigin","_args53","_context53","ga","_ref72","_callee55","googleEventsInfo","debugEnabled","originOk","_args55","_context55","addPostfixForTestnet","availableNetworks","_ref73","_callee54","_context54","hitCallback","hitCallbackFail","_x58","_x59","_x57","createContract","_ref74","_callee56","_context56","_x60","_x61","_x62","getWalletProvider","simpleIDPassUserInfo","userInfo","simpleID","email","initSimpleID","passUserInfo","defaultUrl","baseurl","getEtherscanAddressUrl","decimalCount","decimal","thousands","abs","negativeSign","Number","getSnapshotProposals","_callee59","activeOnly","whitelist","proposals","currTime","validProposals","_args59","_context59","addr","msg","payload","end","_ref76","_callee58","checkedStrategies","_context58","snapshot","metadata","strategies","_ref77","_callee57","_context57","_x64","_x63","getAprsFromApi","_callee60","endpointInfo","aprs","_args60","_context60","_ref79","_callee61","startTimestamp","endTimestamp","forceStartTimestamp","frequency","order","limit","filteredCachedData","_filteredData","apiInfo","filteredData","_args61","_context61","_x65","getTokenExchangeRate","_ref80","_callee62","exchangeRateParams","exchangeRate","_context62","_x66","_x67","getTokenDecimals","_ref81","_callee63","_context63","_x68","allocations","avgApr","aprWeighted","allocation","getFrequencySeconds","quantity","hour","day","week","getIdleStakingRewardsTxs","_callee64","idleTokenConfig","feeDistributorConfig","_context64","getProtocolInfoByAddress","integerValue","ROUND_FLOOR","normalizeTokenDecimals","normalizeTokenAmount","normalizedTokenDecimals","checkContractPaused","_callee65","contractPaused","_args65","_context65","parse_json","return_default","clearStoredData","excludeKeys","clear","storedKeysToRemove","storedKey","removeStoredItem","removeItem","setItem","checkRebalance","_ref84","_callee67","lastAllocationsPromises","protocolIndex","newAllocations","diff","_context67","lastAllocationsPromise","_ref85","_callee66","lastAllocations","_context66","_x70","_x71","alloc","_x69","_ref86","_callee68","oldContractBalance","oldContractTokenDecimals","oldContractName","_context68","getContractBalance","_x72","_x73","_ref87","_callee69","eventName","_args69","_context69","getContractPastEvents","_x74","_x75","estimateMethodGasUsage","_ref88","_callee70","methodParams","_contract$methods","functionCall","gasLimit","_ref89","_ref90","_args70","_context70","getGasPrice","estimateGas","_x76","_x77","_ref91","_callee71","userAddress","signedParameters","callback_receipt","_contract$methods2","_context71","on","once","confirmationNumber","receipt","_x78","_x79","_x80","_x81","_x82","getSignatureParameters_v4","signature","isHexStrict","Error","hexToNumber","constructMetaTransactionMessage","nonce","functionSignature","soliditySHA3","toBuffer","checkBiconomyLimits","_ref92","_callee72","biconomyInfo","res","_context72","limits","apiId","headers","x-api-key","_x83","sendTxWithPermit","_ref93","_callee73","_contract$methods3","messageToSign","_this$getSignaturePar","_context73","encodeABI","personal","sign","_x84","_x85","_x86","_x87","_x88","_x89","buildBiconomyErc20ForwarderTx","_ref94","_callee74","permitType","callData","buildParams","_context74","txGas","erc20ForwarderClient","buildTx","_x90","_x91","_x92","_x93","_x94","_ref95","_callee76","_context76","_ref96","_callee75","_context75","_x96","_x97","_x95","sendBiconomyTxWithErc20Forwarder","_ref97","_callee77","req","metaInfo","txResponse","fetchReceiptIntervalId","_context77","permitAndSendTxEIP712","setInterval","clearInterval","updateTransaction","_x98","_x99","_x100","_x101","sendBiconomyTxWithPersonalSign","_ref98","_callee78","_this$getSignaturePar2","_context78","getNonce","_x102","_x103","_x104","_x105","signPermitEIP2612","_ref99","_callee79","erc20Name","owner","spender","deadline","domain","permit","domainData","_context79","getChainId","version","verifyingContract","types","EIP712Domain","Permit","primaryType","jsonrpc","substring","_x106","_x107","_x108","_x109","_x110","_x111","_x112","_x113","signPermit","_ref100","_callee80","baseContractName","holder","spenderContractName","addToNonce","baseContract","spenderContract","permitConfig","expiry","EIPVersion","permitName","_args80","_context80","net","getId","round","nonceMethod","pow","allowed","response","_x114","_x115","_x116","_ref101","_callee81","permitParams","methodAbi","useNonce","_args81","_context81","_jsonInterface","f","unshift","_x117","_x118","_x119","_x120","_x121","_x122","_x123","sendSignedTx","_ref102","_callee82","MetaTransaction","dataToSign","_context82","_x124","_x125","_x126","_x127","_x128","checkTokenApproved","_ref103","_callee83","contractAddr","walletAddr","_ref104","_ref105","allowance","_context83","getAllowance","gte","_x129","_x130","_x131","_ref106","_callee84","_context84","_x132","_x133","_x134","contractMethodSendWrapperWithValue","txData","send_raw","raw_tx_data","disableERC20","toTwosComplement","enableERC20","getTrancheStakedBalance","_ref107","_callee85","stakedBalance","_args85","_context85","_x135","_x136","getTrancheStakingRewards","_ref108","_callee87","_context87","_ref109","_callee86","tokenGlobalConfig","_context86","_x139","_x137","_x138","_ref110","_callee88","field","addGovTokens","_args88","_context88","loadTrancheField","_x140","_x141","_x142","_x143","_x144","_x145","_x146","_x147","_ref111","_callee89","formatValue","addTokenName","strategyConfig","idleStrategyAddress","idleGovTokenConfig","_ref112","_ref113","totalSupply","virtualPrice","_ref114","_ref115","staked1","lastPrice1","_ref116","_ref117","deposited1","lastPrice","_ref118","_ref119","redeemable1","staked2","_ref120","_ref121","earningsStart","trancheApy2","deposited3","earningsEnd","_ref122","_ref123","trancheFee","earningsCounter","feesStart","feesEnd","_ref124","_ref125","deposited4","redeemable3","_ref126","_ref127","deposited2","redeemable2","_ref128","_ref129","earningsPerc","secondsFromFirstTx","rewardsTokensInfo","_ref130","_ref131","rewardsTokens","incentiveTokens","govTokens","_args89","_context89","Strategy","initContract","AA","BB","getTokenTotalSupply","IDLE","rewardTokenAddr","govTokenAddress","getGovTokenConfigByAddress","stakingRewardsTokenConfig","_x148","_x149","_x150","_x151","_x152","_x153","_x154","loadAssetField","_ref132","_callee90","addCurveApy","strategyInfo","govTokenAvailableTokens","newTokenConfig","_ref133","_ref134","curveAvgSlippage","curveAvgBuyPrice","curveTokenBalance","_ref135","_ref136","amountLentCurve1","redeemableBalanceCurve","_ref137","_ref138","curveApy","amountLentCurve","redeemableBalanceCurveStart","redeemableBalanceCurveEnd","earningPerYear","_ref139","_ref140","amountLent1","redeemableBalance1","depositTimestamp","_idleGovToken","blocksPerDay","blocksPerWeek","blocksPerMonth","selectedTokenConfig","_idleGovToken2","_idleGovToken3","tokenApys","curveAPY","_ref141","_ref142","tokenPriceFirstDeposit","_ref143","_ref144","daysFirstDeposit","depositTimestamps","_govTokenConfig","_ref145","_ref146","tokenAPY1","amountLent2","redeemableBalanceStart","redeemableBalanceEnd","_earningPerYear","_govTokenConfig2","_ref147","_ref148","idleTokenPrice1","idleTokenBalance2","govTokensBalance","_tokenBalance","redeemableBalance","_ref149","_ref150","amountLentCurve2","redeemableBalanceCurve1","_ref151","_ref152","redeemableBalance2","_args90","_context90","getCurveTokenBalance","getCurveAPY","getCurveRedeemableIdleTokens","getGovTokenPool","getTokenPool","getCompUserDistribution","getStkAaveUserDistribution","getIdleGovToken","distributionMode","t3","getCompDistribution","getStkAaveDistribution","t4","getCompAvgApr","t5","t6","t7","getTokenPrice","getUserTokenFees","t8","t9","getGovTokenUserBalance","getGovTokensUserTotalBalance","_x155","_x156","_x157","_x158","getIdleTokenSupply","_ref153","_callee91","idleTokenSupply","_args91","_context91","_x159","getIdleTokenPriceWithFee","_ref154","_callee92","_ref155","_ref156","fee","priceWFee","_args92","_context92","eq","_x160","_x161","_ref157","_callee93","tokenData","beforePrice","afterPrice","tokenPriceBefore","tokenPriceAfter","timeBefore","timeAfter","timeDiff","priceDiff","priceAcceleration","timeDiffFromBeforePrice","_args93","_context93","_x162","clearCachedData","clear_all","parent_key","useLocalStorage","expirationDate","_ref158","_callee94","_ref159","_ref160","idleTokensTotalSupply","userShare","_context94","_x163","_x164","open","_callee96","coverProtocolConfig","nexusMutualConfig","_args96","_context96","_ref162","_callee95","coverage","coverageTokens","protocolImage","_context95","tokens","expirationTimestamp","utc","_x165","getNexusMutualCoverages","sumAssured","coverAssetConfig","yieldTokenConfig","collateralIcon","incident","claimId","protocolImageDark","coverDetails","validUntil","route","_ref163","_callee98","incidentsInfo","_ref164","_ref165","coverBoughtEvents","claimSubmittedEvents","nexusMutualCoverages","_context98","directProps","startBlock","contractInfo","buyer","_ref166","_callee97","cover","coverId","claimSubmittedEvent","_ref167","_ref168","incidentEvents","matchedIncidents","matchedIncident","expiryDate","payoutOutcome","claimedAmount","claimTxReceipt","claimedAmountLog","claimableAmount","claimablePrice","maxCoveredAmount","coveredTokenAmount","_ref169","_ref170","_context97","claim","productId","incidentDate","yieldTokenCoverGracePeriod","curr","priceBefore","underlying","underlyingConfig","coverAsset","findIndex","_x167","_x166","getBatchedDepositExecutions","_ref171","_callee99","_context99","_x168","getBatchedDeposits","_callee101","filter_by_status","batchDepositConfig","batchedDeposits","_args101","_context101","_ref173","_callee100","currBatchIndex","batchIndex","_ref174","_ref175","batchExecutions","batchTotal","batchRedeem","batchDeposit","batchTotals","batchRedeems","batchDeposits","lastExecution","_context100","_x169","getETHBalance","_ref176","_callee102","fixDecimals","_args102","_context102","_x170","_ref177","_callee103","_ref178","_ref179","_args103","_context103","_x171","_x172","copyToClipboard","copyText","setSelectionRange","execCommand","loadScript","attr","body","isValidJSON","_ref180","_callee104","_args104","_context104","_x173","_ref181","_callee105","_args105","_context105","_x174","_ref182","_callee106","_args106","_context106","_x175","_x176","getProtocolBalance","_ref183","_callee107","_context107","_x177","_x178","getAprs","_ref184","_callee108","_context108","addresses","_x179","genericIdleCall","_ref185","_callee109","callParams","_args109","_context109","_x180","_ref186","_callee110","_contract$methods4","_args110","_context110","_x181","_x182","_ref187","_callee112","_args112","_context112","_ref188","_callee111","_context111","_x184","_x185","_x183","getTxDecodedLogs","_ref189","_callee114","logAddr","decodeLogs","internalTransfers","_context114","_ref190","_callee113","_context113","_x190","_x191","_x186","_x187","_x188","_x189","blocksToSeconds","blocks","blocksPerSeconds","getBlockNumber","_callee115","_context115","_ref192","_callee116","_context116","getBlock","_x192","_ref193","_callee117","_args117","_context117","getPastEvents","_x193","_x194","_ref194","_callee118","_args118","_context118","_x195","_x196","cachedContractCall","_ref195","_callee119","_args119","_context119","_x197","_x198","_ref196","_callee120","_contract$methods5","_args120","_context120","_x199","_x200","_ref197","_callee121","_args121","_context121","_x201","_x202","getUnlentBalance","_ref198","_callee122","unlentBalance","_context122","_x203","_ref199","_callee123","_args123","_context123","_x204","getLastAllocations","_ref200","_callee125","tokenAllocations","_context125","_ref201","_callee124","_context124","_x206","_x207","_x205","_ref202","_callee126","protocolsAprs","_ref203","_ref204","govTokensBalances","_args126","_context126","totalAllocationConverted","totalAllocationWithUnlentConverted","getTokenConversionRate","getGovTokensBalances","protocolAllocationPerc","protocolAllocation","_x208","getSushiswapPoolTokenPrice","_ref205","_callee127","_ref206","_ref207","token0_address","token1_address","poolReserves","token0_config","token1_config","_ref208","_ref209","token0_price","token1_price","token0_pool","token1_pool","totalPoolSize","poolTokenPrice","_context127","getSushiswapConversionRate","_x209","_ref210","_callee128","tokenConfigFrom","tokenConfigDest","WETHAddr","one","_context128","_x210","_x211","_ref211","_callee129","unires","_context129","addressForPrice","_x212","_x213","getCurveDepositedTokens","_ref212","_callee130","idleTokensBalances","remainingCurveTokens","_args130","_context130","_x214","getCurveUnevenTokenAmounts","_ref213","_callee131","amounts","max_burn_amount","unevenAmounts","_context131","getCurveDepositContract","_x215","_x216","_callee132","curveRatesInfo","_context132","strategyTokens","getCurveAPYContract","_callee133","blocksForPrevTokenPrice","_ref216","_ref217","prevTokenPrice","blocksMultiplier","curveAPR","_context133","getCurveTokenSupply","_callee134","_context134","getCurvePoolContract","_callee135","_args135","_context135","_callee136","_args136","_context136","_ref221","_callee137","_ref222","_ref223","_context137","_x217","_callee138","depositContractInfo","_context138","getCurveZapContract","_callee139","zapContractInfo","_context139","_callee140","poolContractInfo","_context140","getCurveSwapContract","_callee141","migrationContractInfo","_context141","getCurveIdleTokensAmounts","_callee143","max_slippage","curveTokenSupply","curveTokenShare","n_coins","_args143","_context143","_ref229","_callee142","coinIndex","curveIdleTokens","_context142","migrationParams","_x218","getCurveTokensAmounts","_callee145","useCoinIndex","_args145","_context145","_ref231","_callee144","_ref232","_ref233","idleTokenPrice","totalTokenSupply","_context144","_x219","getCurveAmounts","_ref234","_callee147","_args147","_context147","_ref235","_callee146","_context146","_x222","_x220","_x221","getCurveTokenAmount","_ref236","_callee148","_args148","_context148","_x223","getCurveSlippage","_ref237","_callee149","uneven_amounts","depositContract","_ref238","_ref239","Sv","_args149","_context149","_x224","_x225","_ref240","_callee150","aTokenIdleSupply","annualize","aaveDistribution","stkAAVETokenConfig","aTokenConfig","disabledTokens","aaveIncentivesController_address","IAaveIncentivesController_name","_ref241","_ref242","aTokenTotalSupply","assetData","aaveAllocationPerc","aaveSpeed","secondsPerYear","aavePoolShare","_args150","_context150","IAaveIncentivesController","emissionPerSecond","_x226","_callee152","_args152","_context152","_ref244","_callee151","_ref245","_ref246","_context151","_x227","getWMaticApr","_ref247","_callee153","maticConversionRate","wMaticTokenConfig","wMaticApr","distributionSpeed","destTokenConfig","wMaticValue","_args153","_context153","_x228","_x229","getStkAaveApr","_ref248","_callee154","aaveConversionRate","stkAaveAPR","stkAaveValue","_args154","_context154","_x230","_x231","getCompAPR","_ref249","_callee155","cTokenIdleSupply","compConversionRate","COMPTokenConfig","compAPR","compDistribution","compValue","_args155","_context155","_x232","_x233","getCompSpeed","_ref250","_callee156","cTokenAddress","compSpeed","_context156","_x234","_ref251","_callee157","cTokenInfo","compoundAllocationPerc","_ref252","_ref253","cTokenTotalSupply","compoundPoolShare","_args157","_context157","_x235","_callee159","_args159","_context159","_ref255","_callee158","_ref256","_ref257","_context158","_x236","_callee161","_args161","_context161","_ref259","_callee160","_ref260","_ref261","compApr","_context160","_x237","getTokensCsv","_callee164","csv","_context164","prototype","sum","pv","cv","avg","_ref263","_callee163","_context163","_ref264","_callee162","rates","header","aprAvg","scoreAvg","lastRow","_context162","protocolsData","p1","foundProtocol","p2","rate","idleRate","score","idleScore","pInfo","pData","pRate","pScore","defiScore","additionalRate","avgRate","avgScore","_x239","_x238","_callee166","govToken","convertToken","_args166","_context166","_ref266","_callee165","compTokenBalance","_context165","_x240","getGovTokensFarming","tokenGovTokens","getTokenGovTokens","speed","mode","multipliers","block","second","month","year","getGovTokensUserDistributionSpeed","_ref267","_callee168","govTokensUserDistribution","_args168","_context168","_ref268","_callee167","_context167","_x242","_x241","getGovTokensDistributionSpeed","_ref269","_callee170","govTokensDistribution","_args170","_context170","_ref270","_callee169","govSpeed","_context169","_x244","_x243","getGovTokensAprs","_ref271","_callee172","govTokensAprs","_args172","_context172","_ref272","_callee171","_ref273","_ref274","_ref275","_ref276","cTokenConfig","_context171","aprTooltipMode","_x247","_x245","_x246","_callee174","_args174","_context174","_ref278","_callee173","govTokenBalance","tokenConversionRate","fromTokenConfig","_context173","_x248","_callee175","checkShowBalance","govTokensUserBalances","govTokensEarnings","_args175","_context175","getGovTokensUserBalances","govTokenAmount","getGovTokensIndexes","_ref280","_callee177","govTokensAmounts","_context177","getGovTokensUserAmounts","_ref281","_callee176","govTokenIndex","_context176","getGovTokenAddessByIndex","_x251","_x252","_x249","_x250","_ref282","_callee178","_context178","_x253","_x254","_ref283","_callee179","_context179","_x255","_x256","_callee182","govTokenConfigForced","_args182","_context182","_ref285","_callee181","_context181","_ref286","_callee180","_context180","_x258","_x259","_x257","getTokenFees","_callee183","_args183","_context183","_callee184","_ref289","_ref290","feePercentage","gain","fees","_args184","_context184","_ref291","_callee185","_args185","_context185","_x260","getTotalTVL","_callee186","tokensTVL","_context186","getTokensTVL","totalTVL","tokenInfo","tokenTVL","_callee190","_context190","_ref294","_callee189","_context189","_ref295","_callee188","oldTokenTVL","idleTokenName","_ref296","_ref297","oldTokenConfig","_ref301","_ref302","oldTokenPrice","oldTotalSupply","_context188","showAUM","_ref298","_callee187","_ref299","_ref300","govTokenConversionRate","govTokenBalanceConverted","_context187","_x263","oldProtocols","oldProtocol","protocolPos","_x262","_x261","getSubstackLatestFeed","_callee191","idleSubstackFeed","latestFeed","_context191","getAggregatedStats","_callee193","allNetworks","networkIds","totalAUM","_args193","_context193","_ref305","_callee192","tvls","_context192","getAggregatedStats_chain","_x264","_callee197","avgAPR","_args197","_context197","_ref307","_callee196","_context196","_ref308","_callee195","tokenAUM","oldTokenAllocation","oldTokenTotalAllocation","_context195","_ref309","_callee194","_ref310","_ref311","_context194","_x267","_x266","_x265","getTokenApy","_ref312","_callee198","_context198","_x268","getTokensToMigrate","_callee201","_args201","_context201","_ref314","_callee200","_context200","_ref315","_callee199","_ref316","_context199","_x270","_x269","getProtocolsTokensBalances","_callee203","tokenBalances","minTokenBalance","protocolsTokens","_args203","_context203","_ref318","_callee202","tokenContract","_context202","_x271","_ref319","_callee204","_args204","_context204","_x272","_x273","_x274","getAvgAPYStats","_ref320","_callee205","apiResults","_args205","_context205","_x275","_x276","_ref321","_callee206","count","_conversionRate","ToTokenConfig","_args206","_context206","_x277","_x278","getTokenScore","_ref322","_callee207","_ref323","_ref324","tokenScore","_context207","protocolScore","getTokenScoreApi","_x279","_x280","_ref325","_callee208","scores","_context208","_x281","_x282","_ref326","_callee209","idleGovTokenShowAPR","idleAPR","_args209","_context209","_x283","isNegative","suffixNum","decimalPart","mod","toPrecision","difference","maxLen","highlightedDecimals","numLen","intPart","decPart","repeat","highlightedDec","highlightedIntPart","Fragment","defaultOpacity","hidden","interactive","rainbow","DashboardCard","mouseOver","isRainbow","active","onMouseOut","setMouseOver","onMouseOver","titleParentProps","lineHeight","description","placement","TableRow","FieldComponent","fieldComponent","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_10__","cardId","rowProps","rowId","colInfo","colIndex","visibleOnDesktop","visible","fieldIndex","colProps","TableHeader","pb","_TableCellHeader_TableCellHeader__WEBPACK_IMPORTED_MODULE_7__","desc","FastBalanceSelector","onMouseDown","cDAI","anonymous","indexed","ERC20","5","best","DAI","govTokensDisabled","minAmountForMint","wyre","destCurrency","ramp","swapAsset","defiPrime","IdleTokenV4","aToken","functions","risk","80001","137","crToken","USDC","WETH","42","cToken","1337","IdleTokenV3","yToken","IdleConverterPersonalSignV4","iToken","CHAI","USDT","SUSD","skipMintForDeposit","TUSD","WBTC","RAI","enabledEnvs","fToken","FEI","1","defiScoreDisabled","canDeposit","disabledMessageRedeemKey","disabledMessageDepositKey","Staking","selectedOption","toolProps","SelectedComponent","component","AssetField","FlexLoader","GenericFaqs","openedAnswer","selectedSection","questions","setSection","showSections","isSelected","borderBottom","q","toggleAnswer","SendTxWithBalance","permitEnabled","showPermitBox","approveEnabled","buttonDisabled","contractApproved","fastBalanceSelector","changeInputValue","call_callback","changeInputCallback","setInputValue","selectedPercentage","getFastBalanceSelector","setFastBalanceSelector","checkButtonDisabled","approve","callbackApprove","callbackReceiptApprove","checkContractApproved","executeTx","_amount","_params","checkLimit","eventValue","getPermitTransactionParams","approveCallback","actionChanged","tokenBalanceChanged","permitEnabledChanged","approveEnabledChanged","contractChanged","tokenConfigChanged","viewOnly","connectorName","infoBox","steps","step","stepIndex","ExtLink","checked","togglePermitEnabled","approveDescription","RoundButton","balanceSelectorInfo","ConnectBox","LimitReachedModal","possibleConstructorReturn","getPrototypeOf","componentDidUpdate","ModalCard","iconHeight","TrancheDetails","infoText","canUnstake","canWithdraw","activeModal","balanceProp","trancheBalance","selectedAction","userHasAvailableFunds","loadActionData","selectedProtocol","selectedTranche","trancheAPY","trancheDetails","cdoConfig","cantUnstake","cantWithdraw","trancheLimit","otherTrancheType","otherTrancheDetails","stakingEnabled","showSelectButton","contrastColor","hex","selectTrancheType","TrancheField","setSelectedAction","src_SendTxWithBalance_SendTxWithBalance","transactionSucceeded","contractApprovedCallback","components_LimitReachedModal","ShareModal","confettiEnabled","tweet","stakeEnabled","unstakeEnabled","selectedTrancheOption","selectedStakeAction","selectedActionChanged","selectedStakeActionChanged","trancheType","isStake","isDeposit","isWithdraw","option","selectTranche","ImageButton","setStakeAction","PortfolioEquityTranches","transactionsList","ChartCustomTooltip","ChartCustomTooltipRow","FundsOverviewTranche","aggregatedValues","govTokensTotalApr","govTokensUserBalance","govTokensTotalBalance","govTokensTotalAprTooltip","idleTokenUserDistribution","govTokensDistributionTooltip","govTokensTotalBalanceTooltip","src_PortfolioEquityTranches_PortfolioEquityTranches","Title","Heading","h3","StakingRewardsTranche","stakingRewardsRows","loadUserRewards","portfolioChanged","trancheConfigChanged","transactionsChanged","rewardTokensInfo","trancheStakedAmount","trancheBalanceInfo","rewardToken","rewardTokenInfo","staked","reedemable","tokenIcon","CustomList","Button","claimCallback","TranchePage","userHasFunds","componentLoaded","loadTransactions","balanceInfo","tranchesDetails","filteredTranchesTypes","TrancheDepositRedeem","src_TrancheDetails_TrancheDetails","src_FundsOverviewTranche_FundsOverviewTranche","src_StakingRewardsTranche_StakingRewardsTranche","TransactionsList","availableActions","src_GenericFaqs_GenericFaqs","","TranchesList","enabledProtocols","alt","baseName","showTooltip","justifyItems","long","features","feature","TrancheFlash","flashData","bold","subtitle","openTooltipModal","helpcircle","arrows","seniorinfo","juniorinfo","TrancheWelcome","aligItems","src_TrancheFlash_TrancheFlash","TrancheBox","GenericPieChart","showLegend","itemWidth","itemHeight","translateY","symbolSize","anchor","direction","itemTextColor","symbolShape","effects","valueHover","defaultImage","defaultLabel","TotalBalanceCounter","counterEnd","counterStart","loadTotalEarnings","contractsInitialized","counterStyle","oldState","build_default","delay","separator","useEasing","formattingFn","countUpRef","ref","TotalEarningsCounter","Tranches","trancheRoute","useTrancheType","portfolioLoaded","allocationChartData","portfolioEquityQuickSelection","loadPortfolio","then","urlParams","param1","param3","param2","availableTranchesChanged","tranchesTokens","tranchesBalances","tranchesConfig","weight","portfolioDonutData","balanceValue","tokenPercentage","trancheName","_this5","breadcrumbPath","src_TranchePage_TranchePage","src_TotalBalanceCounter_TotalBalanceCounter","src_TotalEarningsCounter_TotalEarningsCounter","src_GenericPieChart_GenericPieChart","setPortfolioEquityQuickSelection","src_TranchesList_TranchesList","src_TrancheWelcome_TrancheWelcome","textSize","TokenSwap","selectedFromToken","selectedDestToken","availableDestinationTokens","selectFromToken","selectDestToken","initProps","buttonId","loadTokens","fromTokenChanged","destTokenChanged","loadKyberWidget","LpStaking","globalStats","statsLoaded","programEnded","rewardMultiplier","accountingData","programEndDate","successMessage","rewardTokenPrice","tokenWrapperProps","showTokenWrapperEnabled","updateData","contractApprovedChanged","contractInfoChanged","userStakedBalance","totalStakedBalance","totalStakingShares","userTotalStakingShare","rewardsPerDay","stakedBalanceUSD","rewardsPerYearUSD","normalizedInputValue","unstakeRewards","totalLocked","totalUnlocked","unlockScheduleCount","collectedRewards","unlockSchedulesPromises","unlockSchedules","totalRewards","totalDeposits","lockedRewards","unlockedRewards","programEndTime","endTime","endAtSec","initialLockedShares","durationSec","stakingShare","maxMultiplier","distributionSpeedMultiplier","userDistributionSpeed","maxBonusDays","currentRewards","stakedTokensLog","stakedTokens","unstakedTokensLog","unstakedTokens","rewardTokenConfig","receivedRewardsLog","receivedRewards","startContract","wrapMethod","destContract","unwrapMethod","_this6","loadStats","_this7","StatsCard","isUnstake","isStats","txAction","poolLink","statInfo","setAction","IdleStaking","maxApr","lockPeriods","lockedEnd","lockExpired","claimedRewards","increaseAction","lockPeriodInput","internalInfoBox","distributedRewards","selectedLockPeriod","lockPeriodTimestamp","lockEndDateIsMaxEndDate","feeDistributor","lockPeriodChanged","increaseActionChanged","calculateStkIDLEAmount","minLockPeriod","maxLockPeriod","minDate","add","mDate","maxDate","isAfter","endDate","endDateTime","maxDateTime","stkIDLEAmount","_value","_unlock_time","etherscanRewardsTxs","tokenTotalSupply","claimableRewards","lockedInfo","tokenUserBalance","claimable","claimEvents","depositEvents","totalRewardsDays","totalClaimedUser","recipient","totalLockedFunds","stkTokenTotalSupply","claimableRewardsFormatted","totalRewardsFormatted","userDeposited","totalCollectedRewards","stakeStartTime","stakedTime","event","ts","depositValue","stakePeriod","currentProfit","stakePeriodWeeks","lockEndDate","currDate","isValid","lockedTokensLog","lockedTokens","increaseAmountTokensLog","increaseTokens","_this8","isLock","isClaim","isIncrease","canIncrease","StatsCardSmall","maxHeight","reward","setIncreaseAction","changelockPeriodInput","selectLockPeriod","getIncreaseTimeParams","NexusMutual","quote","2","periodOptions","30","60","90","365","capacity","coverCost","amountValue","periodValue","yearlyCost","maxCapacity","amountValid","periodValid","claimableCovers","tokenApproved","selectedPeriod","maxPriceWithFee","transactionValue","yieldTokenBalance","selectedUnderlying","yieldTokenApproved","claimButtonDisabled","selectedCoverToClaim","defaultClaimableCover","selectedUnderlyingConfig","changeAmount","changePeriod","selectPeriod","approveSucceeded","yieldTokenApproveSucceeded","claimInputChange","normalizedAmount","getClaimTransactionParams","realAddress","claimTransactionSucceeded","loadContracts","buyCoverTransactionSucceeded","validClaimableCoverFromParam","paramIsValidToken","changeSelectedToken","selectedUnderlyingChanged","loadTokenData","isETH","getPoolCapacity","coverData","period","coverAmount","currency","asset","quoteURL","encodeParameters","priceInNXM","expiresAt","generatedAt","COVER_TYPE","basePrice","priceWithFee","mul","divn","amountInWei","textDecoration","activeColor","reset","changeSelectedUnderlying","setMaxCoverAmount","borderStyle","periodInfo","getQuote","selectCoverToClaim","TokenWrapper","balanceDest","balanceStart","startContractChanged","destContractChanged","loadBalance","updateActionData","mintLog","mintedAmount","withdrawLog","withdrawnAmount","fullWidth","connectAndValidateAccount","PortfolioDonut","totalFunds","parentWidth","tokenColorHsl","radialLabelsLinkOffset","strategyIcon","EarningsEstimation","tokensEarnings","estimationStepsPerc","estimationStepsOptions","estimationStepsDefaultOption","estimationSteps","0","Month","perc","2 months","3 months","optionName","25","8 months","Year","2 Years","5 Years","loadEarnings","stepsCount","aggregatedEarnings","earnings","earningsYear","earningsPercStep","possibleSteps","maxPossibleStep","maxCountStep","orderedTokensEarnings","estimationStep","setEstimationStepsPerc","tokenIndex","estimationStepPerc","finalEarnings","cursorPerc","tokenRGBColor","borderTop","estimateIndex","estimationStepEarnings","estimationStepEarningsFormatted","borderRight","wordBreak","estimationLabel","DashboardIconButton","PolygonBridgeTransactions","bridgeEnabled","polygonTransactions","polygonTransactionsAvailableTokens","polygonBridgeConfig","actionIcon","actionIconProps","paginationEnabled","StrategyPage","remainingTokens","portfolioLoading","availableGovTokens","portfolioEquityStartDate","batchedDepositsAvailableTokens","availableTokensChanged","batchInfo","redeemable","apyLong","yieldFarming","strategyName","toolsToShow","toolName","toolConfig","src_PortfolioDonut_PortfolioDonut","toolIndex","src_DashboardIconButton_DashboardIconButton","ActiveCoverages","AssetsList","showDirection","src_EarningsEstimation_EarningsEstimation","src_PolygonBridgeTransactions_PolygonBridgeTransactions","BatchDeposit","canClaim","usePermit","hasDeposited","permitSigned","batchCompleted","claimSucceeded","executeSucceeded","migrationSucceeded","batchDepositEnabled","migrationContractApproved","migrationEnabledCallback","migrationCallback","checkBatchs","loadStrategies","executeSucceededChanged","callbackExecute","callbackReceiptExecute","functionInfo","permitContract","batchDepositInfo","depositEnabled","availableStrategiesKeys","selectStrategy","obj","strategyAvailableTokens","migrateFunction","setStrategyToken","batchId","callbackClaim","callbackReceiptClaim","canExecuteBatch","strategyDefaultValue","Migrate","useMetaTx","showActions","isMigrationTool","showBalanceSelector","migrationIcon","toMigrate","callbackPermit","migrationText","minPoolSize","PolygonBridge","txsToExit","dataLoaded","defaultTransaction","selectedTransaction","rootTokenConfig","childTokenConfig","encodeParameter","depositData","sendValue","exitCalldata","ERC20Predicate","DepositManager","depositedTokensLog","depositedTokensEvent","EtherPredicate","maticNetwork","mainNetworkId","mainNetworkName","withdrawnTokensEvent","withdrawnTokensLog","withdrawnTokens","Transfer","paramIsToken","defaultAction","loadPolygonTxs","isExit","selectTransaction","exitCallback","getExitTransactionParams","setRequiredNetwork","CoverProtocol","swapInfo","defaultCoverage","selectedCoverage","inputValueChanged","swapInfoChanged","swapFee","covTokens","tokenAmountOut","getSwapInfo","MAX_UINT256","balancerTokenConfig","dashboardUrl","fixedAmount","mintedClaimLog","mintedNoClaimLog","mintedClaimAmount","mintedNoClaimAmount","claimTokenConfig","claimTokensLog","receivedClaimAmount","balancerPool","noClaimTokenConfig","noClaimTokensLog","receivedNoClaimAmount","collateralAmount","balancerClaimConfig","balancerNoClaimConfig","claimTokenBalance","noClaimTokenBalance","balancerPoolClaimBalance","balancerPoolNoClaimBalance","hasMintedTokens","apyPrice","selectCoverage","isMint","isBuyClaim","isBuyNoClaim","subcaption","TokenMigration","changeFromToken","convertTool","BatchMigration","batchMigrationInfo","batchMigrationDepositEnabled","DeployB2BVesting","actions","actionIndex","validated","viewAction","editAction","newAction","maxContracts","actionValid","actionInputs","claimedTokens","deployedContracts","contractDeployed","validateForm","checkInputs","vesterImplementation","proxyCreated","deployedContractsAddresses","implementation","proxy","vestingPeriod","availableBalance","depositAmounts","claimedTokensLog","returnString","fieldPattern","inputIndex","inputInfo","getPatternByFieldType","inputValid","actionValue","defineProperty","txError","deployedContract","idleAddress","isLastAction","clonedVesterAddress","ProxyCreated","ownerAddress","recipientAddress","initData","depositContracts","claimContracts","onSubmit","handleSubmit","setEditAction","fieldType","pattern","inputChange","addAction","deleteAction","setNewAction","setViewAction","readOnly","depositCallback","process","appName","forumURL","telegramURL","discordURL","twitterURL","darkModeEnabled","live","beta","polygon","USA","GBR","AUS","BRA","CHN","CAN","EUR","HKG","IND","MEX","RUS","ZAF","KOR","connectors","metamask","opera","dapper","coinbase","trustwallet","walletconnect","iconModal","walletlink","gnosis","fortmatic","portis","authereum","torus","trezor","ledger","ledgerlive","custom","newsletterSubscription","messages","scoreShort","apyShort","totalProfitPerc","cheapRedeem","curveBonusSlippage","directMint","performanceFee","govTokenApr","govTokenRedeemableBalance","riskScoreShort","redeemSkipGov","batchDepositExecutionSchedule","riskAdjustedDisabledMessageDeposit","riskScore","curveInstructions","riskAdjustedDisabledMessageRedeem","pageView","modals","first_deposit_referral","first_deposit_share","welcome","dashboard","baseRoute","governance","test","availableContracts","FeeTreasury","PriceOracle","GovernorAlpha","EcosystemFund","IdleController","12","7","delegates","imageInactive","poolContract","CurvePool","CurveDeposit","gaugeContract","LiquidityGaugeV2","zapContract","CurveZap","idleDAIYield","idleUSDCYield","idleUSDTYield","SLP","showAPR","showPrice","COMP","stkAAVE","WMATIC","ProtocolDataProvider","ChildChainManager","UniswapRouter","UniswapV2Router02","SushiswapRouter","SushiV2Router02","RootChainManager","ProxyFactory","MinimalInitializableProxyFactory","LockedIDLE","Timelock","VesterFactory","EarlyRewards","Comptroller","BalancerExchangeProxy","zeroExInstant","orderSource","affiliateInfo","feeRecipient","tranchflash","rgb","bubble","stake","unstake","extraicons","iconDark","iconInactive","iconInactiveDark","tools","forum","leaderboard","overview","delegate","landingStrategies","comingSoon","titlePostfix","govTokensEnabled","chartColor","descLong","descShort","substack","REACT_APP_IDLE_KEY","Authorization","versions","v3","additionalProtocols","showPerformanceTooltip","strategiesParams","enabledStrategies","v4","chart","labelTextColorModifiers","performanceTooltip","ETH","MATIC","USD","disabledCharts","idleDAI+idleUSDC+idleUSDT","compound","aavev2WithStkAAVE","rateField","compoundWithCOMP","fulcrum","dsr","dydx","iearn","aave","aavev2","cream","fuse","skipRebalance","metaTransactionsEnabled","skipMint","erc20ForwarderEnabled","skipMintCheckboxEnabled","erc20ForwarderProxyContract","forwarder","erc20Forwarder","function","IdleDepositForwarder","proxyContract","IdleProxyMinter","minAmountForRebalance","minAmountForRebalanceMetaTx","redeemGovTokens","rebalance","IdleRebalancerV3","3","4","isForked","requiredConfirmations","enabledNetworks","accountBalanceMinimum","infura","REACT_APP_INFURA_KEY","networkPairs","nexus","covalent","REACT_APP_COVALENT_KEY","etherscan","REACT_APP_ETHERSCAN_KEY","REACT_APP_ETHERSCAN_KEY2","REACT_APP_ETHERSCAN_KEY3","REACT_APP_ETHERSCAN_KEY4","urls","biconomy","enableLogin","disabledWallets","REACT_APP_BICONOMY_KEY","dappId","REACT_APP_BICONOMY_APPID","getNetwork","networkName","appOrigin","appId","renderNotifications","notifications","subComponent","stkIDLE","StakingFeeDistributor","LpStakingAbi","SushiLiquidityPool","stakePolygon","nexusMutual","NexusMutualDistributor","NexusMutualIncidents","b2bVesting","B2BVester","polygonBridge","StateSender","ChildERC20","ethWrapper","coverProtocol","CoverMint","Claim","CovToken","BalancerPool","NoClaim","claimEnabled","IdleBatchedMint","IdleBatchConverter","idleSUSDYield","idleTUSDYield","idleWBTCYield","idleDAISafe","idleUSDCSafe","idleUSDTSafe","tokenMigration","idleDAIv2","IdleTokenV2","iDAI","aDAI","yDAIv3","yDAIv2","idleUSDCv2","cUSDC","iUSDC","aUSDC","yUSDCv3","yUSDCv2","cUSDT","iUSDT","aUSDT","yUSDTv3","yUSDTv2","idleSUSDv2","aSUSD","ySUSDv3","idleTUSDv2","aTUSD","yTUSDv3","cWBTC","iWBTC","aWBTC","addFunds","tokenSwap","USDS","BUSD","EURS","2KEY","ABT","ABYSS","AMPL","ANT","BAM","BAND","BAT","BLZ","BNT","BQX","BTU","CDT","CVC","DAT","DGX","EKG","ELF","ENJ","EQUAD","FXC","GDC","GEN","GHT","GNO","IOST","KEY","KNC","LEND","LINK","LOOM","LRC","MANA","MCO","MET","MFG","MKR","MLN","MTL","MYB","NEXXO","NPXS","OGN","OMG","OST","PAX","PBTC","PLR","PNK","POLY","POWR","PT","QKC","QNT","RAE","REN","REP","REQ","RLC","RSR","RSV","SAN","SNT","SNX","SPIKE","SPN","TKN","TKX","TRYB","UBT","UPP","ZRX","insurance","imageDark","bank","card","wallet","captionPos","envParams","accountId","prod","referrerAccountId","dest","redirectUrl","k","encodeURIComponent","iframeBox","wyreStyle","badge","hostAppName","hostApiKey","REACT_APP_RAMP_KEY","hostLogoUrl","RampInstantSDK","purchase","show","transak","https://global.transak.com/v1/widget.js","REACT_APP_TRANSAK_KEY_TEST","REACT_APP_TRANSAK_KEY_PROD","fiatCurrency","cryptoCurrencyCode","currencyCode","walletAddress","partnerCustomerId","disableWalletAddressForm","transakGlobal","transakStyle","moonpay","REACT_APP_MOONPAY_KEY_TEST","REACT_APP_MOONPAY_KEY_PROD","baseCurrencyCode","showWalletAddressForm","enabledPaymentMethods","navigator","userAgent","cookie","moonpayStyle","https://instant.0x.org/v3/instant.js","tokenParams","RimbleWeb3_context","connector","defaultSelectedAssetData","availableAssetDatas","shouldDisableAnalyticsTracking","defaultAssetBuyAmount","kyberSwap","web3Subscription","decodeLogsData","https://widget.kyber.network/v0.7.5/widget.css","https://widget.kyber.network/v0.7.5/widget.js","querySelectorAll","remove","scripts","lang","paramForwarding","pinnedTokens","defaultPair","commissionId","click","airSwap","https://cdn.airswap.io/airswap-instant-widget.js","onComplete","AirSwapInstant","totle","https://widget.totle.com/latest/dist.js","sourceAssetAddress","sourceAmountDecimal","destinationAssetAddress","destinationAmountDecimal","partnerContractAddress","TotleWidget","nodeId","totleWidgetContainer","run","./mainnet/v1/index.json","./testnet/mumbai/index.json","webpackContext","webpackContextResolve","./mainnet/v1/artifacts/fx-portal/FxChild.json","./mainnet/v1/artifacts/fx-portal/FxERC1155ChildTunnel.json","./mainnet/v1/artifacts/fx-portal/FxERC1155RootTunnel.json","./mainnet/v1/artifacts/fx-portal/FxERC20ChildToken.json","./mainnet/v1/artifacts/fx-portal/FxERC20ChildTunnel.json","./mainnet/v1/artifacts/fx-portal/FxERC20RootToken.json","./mainnet/v1/artifacts/fx-portal/FxERC20RootTunnel.json","./mainnet/v1/artifacts/fx-portal/FxERC721ChildTunnel.json","./mainnet/v1/artifacts/fx-portal/FxERC721RootTunnel.json","./mainnet/v1/artifacts/fx-portal/FxRoot.json","./mainnet/v1/artifacts/genesis/BorValidatorSet.json","./mainnet/v1/artifacts/genesis/IStateReceiver.json","./mainnet/v1/artifacts/genesis/Migrations.json","./mainnet/v1/artifacts/genesis/StateReceiver.json","./mainnet/v1/artifacts/genesis/System.json","./mainnet/v1/artifacts/genesis/TestBorValidatorSet.json","./mainnet/v1/artifacts/genesis/TestCommitState.json","./mainnet/v1/artifacts/genesis/TestStateReceiver.json","./mainnet/v1/artifacts/genesis/TestSystem.json","./mainnet/v1/artifacts/genesis/ValidatorSet.json","./mainnet/v1/artifacts/genesis/ValidatorVerifier.json","./mainnet/v1/artifacts/plasma/BaseERC20.json","./mainnet/v1/artifacts/plasma/ChainIdMixin.json","./mainnet/v1/artifacts/plasma/ChildChain.json","./mainnet/v1/artifacts/plasma/ChildERC20.json","./mainnet/v1/artifacts/plasma/ChildERC20Proxified.json","./mainnet/v1/artifacts/plasma/ChildERC721.json","./mainnet/v1/artifacts/plasma/ChildERC721Mintable.json","./mainnet/v1/artifacts/plasma/ChildERC721Proxified.json","./mainnet/v1/artifacts/plasma/ChildToken.json","./mainnet/v1/artifacts/plasma/ChildTokenProxy.json","./mainnet/v1/artifacts/plasma/Common.json","./mainnet/v1/artifacts/plasma/ContractReceiver.json","./mainnet/v1/artifacts/plasma/ContractWitRevertingFallback.json","./mainnet/v1/artifacts/plasma/ContractWithFallback.json","./mainnet/v1/artifacts/plasma/ContractWithoutFallback.json","./mainnet/v1/artifacts/plasma/DelegateProxy.json","./mainnet/v1/artifacts/plasma/DepositManager.json","./mainnet/v1/artifacts/plasma/DepositManagerHeader.json","./mainnet/v1/artifacts/plasma/DepositManagerProxy.json","./mainnet/v1/artifacts/plasma/DepositManagerStorage.json","./mainnet/v1/artifacts/plasma/DrainStakeManager.json","./mainnet/v1/artifacts/plasma/Drainable.json","./mainnet/v1/artifacts/plasma/ECVerify.json","./mainnet/v1/artifacts/plasma/ERC165.json","./mainnet/v1/artifacts/plasma/ERC20.json","./mainnet/v1/artifacts/plasma/ERC20Detailed.json","./mainnet/v1/artifacts/plasma/ERC20Mintable.json","./mainnet/v1/artifacts/plasma/ERC20NonTransferable.json","./mainnet/v1/artifacts/plasma/ERC20Predicate.json","./mainnet/v1/artifacts/plasma/ERC20PredicateBurnOnly.json","./mainnet/v1/artifacts/plasma/ERC721.json","./mainnet/v1/artifacts/plasma/ERC721Enumerable.json","./mainnet/v1/artifacts/plasma/ERC721Full.json","./mainnet/v1/artifacts/plasma/ERC721Metadata.json","./mainnet/v1/artifacts/plasma/ERC721MetadataMintable.json","./mainnet/v1/artifacts/plasma/ERC721Mintable.json","./mainnet/v1/artifacts/plasma/ERC721PlasmaMintable.json","./mainnet/v1/artifacts/plasma/ERC721Predicate.json","./mainnet/v1/artifacts/plasma/ERC721PredicateBurnOnly.json","./mainnet/v1/artifacts/plasma/ERCProxy.json","./mainnet/v1/artifacts/plasma/ExitNFT.json","./mainnet/v1/artifacts/plasma/FallbackManager.json","./mainnet/v1/artifacts/plasma/GnosisSafe.json","./mainnet/v1/artifacts/plasma/GnosisSafeProxy.json","./mainnet/v1/artifacts/plasma/Governable.json","./mainnet/v1/artifacts/plasma/Governance.json","./mainnet/v1/artifacts/plasma/GovernanceLockable.json","./mainnet/v1/artifacts/plasma/GovernanceLockableTest.json","./mainnet/v1/artifacts/plasma/GovernanceProxy.json","./mainnet/v1/artifacts/plasma/IDepositManager.json","./mainnet/v1/artifacts/plasma/IERC165.json","./mainnet/v1/artifacts/plasma/IERC20.json","./mainnet/v1/artifacts/plasma/IERC721.json","./mainnet/v1/artifacts/plasma/IERC721Enumerable.json","./mainnet/v1/artifacts/plasma/IERC721Metadata.json","./mainnet/v1/artifacts/plasma/IERC721Receiver.json","./mainnet/v1/artifacts/plasma/IErcPredicate.json","./mainnet/v1/artifacts/plasma/IGovernance.json","./mainnet/v1/artifacts/plasma/IParentToken.json","./mainnet/v1/artifacts/plasma/IPredicate.json","./mainnet/v1/artifacts/plasma/IRootChain.json","./mainnet/v1/artifacts/plasma/ISignatureValidator.json","./mainnet/v1/artifacts/plasma/ISlashingManager.json","./mainnet/v1/artifacts/plasma/IStakeManager.json","./mainnet/v1/artifacts/plasma/IStakeManagerLocal.json","./mainnet/v1/artifacts/plasma/IValidatorShare.json","./mainnet/v1/artifacts/plasma/IWithdrawManager.json","./mainnet/v1/artifacts/plasma/LibEIP712Domain.json","./mainnet/v1/artifacts/plasma/LibTokenTransferOrder.json","./mainnet/v1/artifacts/plasma/Lockable.json","./mainnet/v1/artifacts/plasma/MRC20.json","./mainnet/v1/artifacts/plasma/Marketplace.json","./mainnet/v1/artifacts/plasma/MarketplacePredicate.json","./mainnet/v1/artifacts/plasma/MarketplacePredicateTest.json","./mainnet/v1/artifacts/plasma/MarketplaceToken.json","./mainnet/v1/artifacts/plasma/MasterCopy.json","./mainnet/v1/artifacts/plasma/MaticWETH.json","./mainnet/v1/artifacts/plasma/Merkle.json","./mainnet/v1/artifacts/plasma/Migrations.json","./mainnet/v1/artifacts/plasma/MintableERC721Predicate.json","./mainnet/v1/artifacts/plasma/MinterRole.json","./mainnet/v1/artifacts/plasma/Module.json","./mainnet/v1/artifacts/plasma/ModuleManager.json","./mainnet/v1/artifacts/plasma/Ownable.json","./mainnet/v1/artifacts/plasma/OwnableLockable.json","./mainnet/v1/artifacts/plasma/OwnerManager.json","./mainnet/v1/artifacts/plasma/ParentTokenMock.json","./mainnet/v1/artifacts/plasma/PredicateUtils.json","./mainnet/v1/artifacts/plasma/PriorityQueue.json","./mainnet/v1/artifacts/plasma/Proxy.json","./mainnet/v1/artifacts/plasma/ProxyStorage.json","./mainnet/v1/artifacts/plasma/ProxyTestImpl.json","./mainnet/v1/artifacts/plasma/ProxyTestImplStorageLayoutChange.json","./mainnet/v1/artifacts/plasma/Registry.json","./mainnet/v1/artifacts/plasma/RootChain.json","./mainnet/v1/artifacts/plasma/RootChainHeader.json","./mainnet/v1/artifacts/plasma/RootChainProxy.json","./mainnet/v1/artifacts/plasma/RootChainStorage.json","./mainnet/v1/artifacts/plasma/RootChainable.json","./mainnet/v1/artifacts/plasma/RootERC721.json","./mainnet/v1/artifacts/plasma/SlashingManager.json","./mainnet/v1/artifacts/plasma/StakeManager.json","./mainnet/v1/artifacts/plasma/StakeManagerProxy.json","./mainnet/v1/artifacts/plasma/StakeManagerStorage.json","./mainnet/v1/artifacts/plasma/StakeManagerTest.json","./mainnet/v1/artifacts/plasma/StakeManagerTestable.json","./mainnet/v1/artifacts/plasma/StakingInfo.json","./mainnet/v1/artifacts/plasma/StakingNFT.json","./mainnet/v1/artifacts/plasma/StateReceiver.json","./mainnet/v1/artifacts/plasma/StateSender.json","./mainnet/v1/artifacts/plasma/StateSyncerVerifier.json","./mainnet/v1/artifacts/plasma/TestMRC20.json","./mainnet/v1/artifacts/plasma/TestToken.json","./mainnet/v1/artifacts/plasma/TransferWithSigPredicate.json","./mainnet/v1/artifacts/plasma/TransferWithSigUtils.json","./mainnet/v1/artifacts/plasma/UpgradableProxy.json","./mainnet/v1/artifacts/plasma/ValidatorShare.json","./mainnet/v1/artifacts/plasma/ValidatorShareFactory.json","./mainnet/v1/artifacts/plasma/ValidatorShareProxy.json","./mainnet/v1/artifacts/plasma/ValidatorShareTest.json","./mainnet/v1/artifacts/plasma/WETH.json","./mainnet/v1/artifacts/plasma/WithdrawManager.json","./mainnet/v1/artifacts/plasma/WithdrawManagerHeader.json","./mainnet/v1/artifacts/plasma/WithdrawManagerProxy.json","./mainnet/v1/artifacts/plasma/WithdrawManagerStorage.json","./mainnet/v1/artifacts/pos/AccessControl.json","./mainnet/v1/artifacts/pos/AccessControlMixin.json","./mainnet/v1/artifacts/pos/ChainConstants.json","./mainnet/v1/artifacts/pos/ChildChainManager.json","./mainnet/v1/artifacts/pos/ChildChainManagerProxy.json","./mainnet/v1/artifacts/pos/ChildERC1155.json","./mainnet/v1/artifacts/pos/ChildERC20.json","./mainnet/v1/artifacts/pos/ChildERC721.json","./mainnet/v1/artifacts/pos/ChildMintableERC721.json","./mainnet/v1/artifacts/pos/ChildTunnel.json","./mainnet/v1/artifacts/pos/DummyERC1155.json","./mainnet/v1/artifacts/pos/DummyERC20.json","./mainnet/v1/artifacts/pos/DummyERC721.json","./mainnet/v1/artifacts/pos/DummyMintableERC721.json","./mainnet/v1/artifacts/pos/DummyStateSender.json","./mainnet/v1/artifacts/pos/EIP712Base.json","./mainnet/v1/artifacts/pos/ERC1155.json","./mainnet/v1/artifacts/pos/ERC1155Predicate.json","./mainnet/v1/artifacts/pos/ERC1155PredicateProxy.json","./mainnet/v1/artifacts/pos/ERC1155Receiver.json","./mainnet/v1/artifacts/pos/ERC165.json","./mainnet/v1/artifacts/pos/ERC20.json","./mainnet/v1/artifacts/pos/ERC20Predicate.json","./mainnet/v1/artifacts/pos/ERC20PredicateProxy.json","./mainnet/v1/artifacts/pos/ERC721.json","./mainnet/v1/artifacts/pos/ERC721Predicate.json","./mainnet/v1/artifacts/pos/ERC721PredicateProxy.json","./mainnet/v1/artifacts/pos/EtherPredicate.json","./mainnet/v1/artifacts/pos/EtherPredicateProxy.json","./mainnet/v1/artifacts/pos/ICheckpointManager.json","./mainnet/v1/artifacts/pos/IChildChainManager.json","./mainnet/v1/artifacts/pos/IChildToken.json","./mainnet/v1/artifacts/pos/IERC1155.json","./mainnet/v1/artifacts/pos/IERC1155MetadataURI.json","./mainnet/v1/artifacts/pos/IERC1155Receiver.json","./mainnet/v1/artifacts/pos/IERC165.json","./mainnet/v1/artifacts/pos/IERC20.json","./mainnet/v1/artifacts/pos/IERC721.json","./mainnet/v1/artifacts/pos/IERC721Enumerable.json","./mainnet/v1/artifacts/pos/IERC721Metadata.json","./mainnet/v1/artifacts/pos/IERC721Receiver.json","./mainnet/v1/artifacts/pos/IERCProxy.json","./mainnet/v1/artifacts/pos/IMintableERC721.json","./mainnet/v1/artifacts/pos/IRootChainManager.json","./mainnet/v1/artifacts/pos/IStateSender.json","./mainnet/v1/artifacts/pos/ITokenPredicate.json","./mainnet/v1/artifacts/pos/MaticWETH.json","./mainnet/v1/artifacts/pos/Merkle.json","./mainnet/v1/artifacts/pos/MerklePatriciaTest.json","./mainnet/v1/artifacts/pos/Migrations.json","./mainnet/v1/artifacts/pos/MintableERC1155Predicate.json","./mainnet/v1/artifacts/pos/MintableERC1155PredicateProxy.json","./mainnet/v1/artifacts/pos/MintableERC20Predicate.json","./mainnet/v1/artifacts/pos/MintableERC20PredicateProxy.json","./mainnet/v1/artifacts/pos/MintableERC721Predicate.json","./mainnet/v1/artifacts/pos/MintableERC721PredicateProxy.json","./mainnet/v1/artifacts/pos/MockCheckpointManager.json","./mainnet/v1/artifacts/pos/NativeMetaTransaction.json","./mainnet/v1/artifacts/pos/NetworkAgnostic.json","./mainnet/v1/artifacts/pos/Proxy.json","./mainnet/v1/artifacts/pos/ProxyTestImpl.json","./mainnet/v1/artifacts/pos/ProxyTestImplStorageLayoutChange.json","./mainnet/v1/artifacts/pos/RootChainManager.json","./mainnet/v1/artifacts/pos/RootChainManagerProxy.json","./mainnet/v1/artifacts/pos/RootChainManagerStorage.json","./mainnet/v1/artifacts/pos/RootTunnel.json","./mainnet/v1/artifacts/pos/UpgradableProxy.json","./networks.json","./testnet/mumbai/artifacts/fx-portal/FxChild.json","./testnet/mumbai/artifacts/fx-portal/FxERC1155ChildTunnel.json","./testnet/mumbai/artifacts/fx-portal/FxERC1155RootTunnel.json","./testnet/mumbai/artifacts/fx-portal/FxERC20ChildToken.json","./testnet/mumbai/artifacts/fx-portal/FxERC20ChildTunnel.json","./testnet/mumbai/artifacts/fx-portal/FxERC20RootToken.json","./testnet/mumbai/artifacts/fx-portal/FxERC20RootTunnel.json","./testnet/mumbai/artifacts/fx-portal/FxERC721ChildTunnel.json","./testnet/mumbai/artifacts/fx-portal/FxERC721RootTunnel.json","./testnet/mumbai/artifacts/fx-portal/FxRoot.json","./testnet/mumbai/artifacts/genesis/BorValidatorSet.json","./testnet/mumbai/artifacts/genesis/IStateReceiver.json","./testnet/mumbai/artifacts/genesis/Migrations.json","./testnet/mumbai/artifacts/genesis/StateReceiver.json","./testnet/mumbai/artifacts/genesis/System.json","./testnet/mumbai/artifacts/genesis/TestBorValidatorSet.json","./testnet/mumbai/artifacts/genesis/TestCommitState.json","./testnet/mumbai/artifacts/genesis/TestStateReceiver.json","./testnet/mumbai/artifacts/genesis/TestSystem.json","./testnet/mumbai/artifacts/genesis/ValidatorSet.json","./testnet/mumbai/artifacts/genesis/ValidatorVerifier.json","./testnet/mumbai/artifacts/plasma/BaseERC20.json","./testnet/mumbai/artifacts/plasma/ChainIdMixin.json","./testnet/mumbai/artifacts/plasma/ChildChain.json","./testnet/mumbai/artifacts/plasma/ChildERC20.json","./testnet/mumbai/artifacts/plasma/ChildERC20Proxified.json","./testnet/mumbai/artifacts/plasma/ChildERC721.json","./testnet/mumbai/artifacts/plasma/ChildERC721Mintable.json","./testnet/mumbai/artifacts/plasma/ChildERC721Proxified.json","./testnet/mumbai/artifacts/plasma/ChildToken.json","./testnet/mumbai/artifacts/plasma/ChildTokenProxy.json","./testnet/mumbai/artifacts/plasma/Common.json","./testnet/mumbai/artifacts/plasma/ContractReceiver.json","./testnet/mumbai/artifacts/plasma/ContractWitRevertingFallback.json","./testnet/mumbai/artifacts/plasma/ContractWithFallback.json","./testnet/mumbai/artifacts/plasma/ContractWithoutFallback.json","./testnet/mumbai/artifacts/plasma/DelegateProxy.json","./testnet/mumbai/artifacts/plasma/DepositManager.json","./testnet/mumbai/artifacts/plasma/DepositManagerHeader.json","./testnet/mumbai/artifacts/plasma/DepositManagerProxy.json","./testnet/mumbai/artifacts/plasma/DepositManagerStorage.json","./testnet/mumbai/artifacts/plasma/DrainStakeManager.json","./testnet/mumbai/artifacts/plasma/Drainable.json","./testnet/mumbai/artifacts/plasma/ECVerify.json","./testnet/mumbai/artifacts/plasma/ERC165.json","./testnet/mumbai/artifacts/plasma/ERC20.json","./testnet/mumbai/artifacts/plasma/ERC20Detailed.json","./testnet/mumbai/artifacts/plasma/ERC20Mintable.json","./testnet/mumbai/artifacts/plasma/ERC20NonTransferable.json","./testnet/mumbai/artifacts/plasma/ERC20Predicate.json","./testnet/mumbai/artifacts/plasma/ERC20PredicateBurnOnly.json","./testnet/mumbai/artifacts/plasma/ERC721.json","./testnet/mumbai/artifacts/plasma/ERC721Enumerable.json","./testnet/mumbai/artifacts/plasma/ERC721Full.json","./testnet/mumbai/artifacts/plasma/ERC721Metadata.json","./testnet/mumbai/artifacts/plasma/ERC721MetadataMintable.json","./testnet/mumbai/artifacts/plasma/ERC721Mintable.json","./testnet/mumbai/artifacts/plasma/ERC721PlasmaMintable.json","./testnet/mumbai/artifacts/plasma/ERC721Predicate.json","./testnet/mumbai/artifacts/plasma/ERC721PredicateBurnOnly.json","./testnet/mumbai/artifacts/plasma/ERCProxy.json","./testnet/mumbai/artifacts/plasma/ExitNFT.json","./testnet/mumbai/artifacts/plasma/FallbackManager.json","./testnet/mumbai/artifacts/plasma/GnosisSafe.json","./testnet/mumbai/artifacts/plasma/GnosisSafeProxy.json","./testnet/mumbai/artifacts/plasma/Governable.json","./testnet/mumbai/artifacts/plasma/Governance.json","./testnet/mumbai/artifacts/plasma/GovernanceLockable.json","./testnet/mumbai/artifacts/plasma/GovernanceLockableTest.json","./testnet/mumbai/artifacts/plasma/GovernanceProxy.json","./testnet/mumbai/artifacts/plasma/IDepositManager.json","./testnet/mumbai/artifacts/plasma/IERC165.json","./testnet/mumbai/artifacts/plasma/IERC20.json","./testnet/mumbai/artifacts/plasma/IERC721.json","./testnet/mumbai/artifacts/plasma/IERC721Enumerable.json","./testnet/mumbai/artifacts/plasma/IERC721Metadata.json","./testnet/mumbai/artifacts/plasma/IERC721Receiver.json","./testnet/mumbai/artifacts/plasma/IErcPredicate.json","./testnet/mumbai/artifacts/plasma/IGovernance.json","./testnet/mumbai/artifacts/plasma/IParentToken.json","./testnet/mumbai/artifacts/plasma/IPredicate.json","./testnet/mumbai/artifacts/plasma/IRootChain.json","./testnet/mumbai/artifacts/plasma/ISignatureValidator.json","./testnet/mumbai/artifacts/plasma/ISlashingManager.json","./testnet/mumbai/artifacts/plasma/IStakeManager.json","./testnet/mumbai/artifacts/plasma/IStakeManagerLocal.json","./testnet/mumbai/artifacts/plasma/IValidatorShare.json","./testnet/mumbai/artifacts/plasma/IWithdrawManager.json","./testnet/mumbai/artifacts/plasma/LibEIP712Domain.json","./testnet/mumbai/artifacts/plasma/LibTokenTransferOrder.json","./testnet/mumbai/artifacts/plasma/Lockable.json","./testnet/mumbai/artifacts/plasma/MRC20.json","./testnet/mumbai/artifacts/plasma/Marketplace.json","./testnet/mumbai/artifacts/plasma/MarketplacePredicate.json","./testnet/mumbai/artifacts/plasma/MarketplacePredicateTest.json","./testnet/mumbai/artifacts/plasma/MarketplaceToken.json","./testnet/mumbai/artifacts/plasma/MasterCopy.json","./testnet/mumbai/artifacts/plasma/MaticWETH.json","./testnet/mumbai/artifacts/plasma/Merkle.json","./testnet/mumbai/artifacts/plasma/Migrations.json","./testnet/mumbai/artifacts/plasma/MintableERC721Predicate.json","./testnet/mumbai/artifacts/plasma/MinterRole.json","./testnet/mumbai/artifacts/plasma/Module.json","./testnet/mumbai/artifacts/plasma/ModuleManager.json","./testnet/mumbai/artifacts/plasma/Ownable.json","./testnet/mumbai/artifacts/plasma/OwnableLockable.json","./testnet/mumbai/artifacts/plasma/OwnerManager.json","./testnet/mumbai/artifacts/plasma/ParentTokenMock.json","./testnet/mumbai/artifacts/plasma/PredicateUtils.json","./testnet/mumbai/artifacts/plasma/PriorityQueue.json","./testnet/mumbai/artifacts/plasma/Proxy.json","./testnet/mumbai/artifacts/plasma/ProxyStorage.json","./testnet/mumbai/artifacts/plasma/ProxyTestImpl.json","./testnet/mumbai/artifacts/plasma/ProxyTestImplStorageLayoutChange.json","./testnet/mumbai/artifacts/plasma/Registry.json","./testnet/mumbai/artifacts/plasma/RootChain.json","./testnet/mumbai/artifacts/plasma/RootChainHeader.json","./testnet/mumbai/artifacts/plasma/RootChainProxy.json","./testnet/mumbai/artifacts/plasma/RootChainStorage.json","./testnet/mumbai/artifacts/plasma/RootChainable.json","./testnet/mumbai/artifacts/plasma/RootERC721.json","./testnet/mumbai/artifacts/plasma/SlashingManager.json","./testnet/mumbai/artifacts/plasma/StakeManager.json","./testnet/mumbai/artifacts/plasma/StakeManagerProxy.json","./testnet/mumbai/artifacts/plasma/StakeManagerStorage.json","./testnet/mumbai/artifacts/plasma/StakeManagerTest.json","./testnet/mumbai/artifacts/plasma/StakeManagerTestable.json","./testnet/mumbai/artifacts/plasma/StakingInfo.json","./testnet/mumbai/artifacts/plasma/StakingNFT.json","./testnet/mumbai/artifacts/plasma/StateReceiver.json","./testnet/mumbai/artifacts/plasma/StateSender.json","./testnet/mumbai/artifacts/plasma/StateSyncerVerifier.json","./testnet/mumbai/artifacts/plasma/TestMRC20.json","./testnet/mumbai/artifacts/plasma/TestToken.json","./testnet/mumbai/artifacts/plasma/TransferWithSigPredicate.json","./testnet/mumbai/artifacts/plasma/TransferWithSigUtils.json","./testnet/mumbai/artifacts/plasma/UpgradableProxy.json","./testnet/mumbai/artifacts/plasma/ValidatorShare.json","./testnet/mumbai/artifacts/plasma/ValidatorShareFactory.json","./testnet/mumbai/artifacts/plasma/ValidatorShareProxy.json","./testnet/mumbai/artifacts/plasma/ValidatorShareTest.json","./testnet/mumbai/artifacts/plasma/WETH.json","./testnet/mumbai/artifacts/plasma/WithdrawManager.json","./testnet/mumbai/artifacts/plasma/WithdrawManagerHeader.json","./testnet/mumbai/artifacts/plasma/WithdrawManagerProxy.json","./testnet/mumbai/artifacts/plasma/WithdrawManagerStorage.json","./testnet/mumbai/artifacts/pos/AccessControl.json","./testnet/mumbai/artifacts/pos/AccessControlMixin.json","./testnet/mumbai/artifacts/pos/ChainConstants.json","./testnet/mumbai/artifacts/pos/ChildChainManager.json","./testnet/mumbai/artifacts/pos/ChildChainManagerProxy.json","./testnet/mumbai/artifacts/pos/ChildERC1155.json","./testnet/mumbai/artifacts/pos/ChildERC20.json","./testnet/mumbai/artifacts/pos/ChildERC721.json","./testnet/mumbai/artifacts/pos/ChildMintableERC721.json","./testnet/mumbai/artifacts/pos/ChildTunnel.json","./testnet/mumbai/artifacts/pos/DummyERC1155.json","./testnet/mumbai/artifacts/pos/DummyERC20.json","./testnet/mumbai/artifacts/pos/DummyERC721.json","./testnet/mumbai/artifacts/pos/DummyMintableERC721.json","./testnet/mumbai/artifacts/pos/DummyStateSender.json","./testnet/mumbai/artifacts/pos/EIP712Base.json","./testnet/mumbai/artifacts/pos/ERC1155.json","./testnet/mumbai/artifacts/pos/ERC1155Predicate.json","./testnet/mumbai/artifacts/pos/ERC1155PredicateProxy.json","./testnet/mumbai/artifacts/pos/ERC1155Receiver.json","./testnet/mumbai/artifacts/pos/ERC165.json","./testnet/mumbai/artifacts/pos/ERC20.json","./testnet/mumbai/artifacts/pos/ERC20Predicate.json","./testnet/mumbai/artifacts/pos/ERC20PredicateProxy.json","./testnet/mumbai/artifacts/pos/ERC721.json","./testnet/mumbai/artifacts/pos/ERC721Predicate.json","./testnet/mumbai/artifacts/pos/ERC721PredicateProxy.json","./testnet/mumbai/artifacts/pos/EtherPredicate.json","./testnet/mumbai/artifacts/pos/EtherPredicateProxy.json","./testnet/mumbai/artifacts/pos/ICheckpointManager.json","./testnet/mumbai/artifacts/pos/IChildChainManager.json","./testnet/mumbai/artifacts/pos/IChildToken.json","./testnet/mumbai/artifacts/pos/IERC1155.json","./testnet/mumbai/artifacts/pos/IERC1155MetadataURI.json","./testnet/mumbai/artifacts/pos/IERC1155Receiver.json","./testnet/mumbai/artifacts/pos/IERC165.json","./testnet/mumbai/artifacts/pos/IERC20.json","./testnet/mumbai/artifacts/pos/IERC721.json","./testnet/mumbai/artifacts/pos/IERC721Enumerable.json","./testnet/mumbai/artifacts/pos/IERC721Metadata.json","./testnet/mumbai/artifacts/pos/IERC721Receiver.json","./testnet/mumbai/artifacts/pos/IERCProxy.json","./testnet/mumbai/artifacts/pos/IMintableERC721.json","./testnet/mumbai/artifacts/pos/IRootChainManager.json","./testnet/mumbai/artifacts/pos/IStateSender.json","./testnet/mumbai/artifacts/pos/ITokenPredicate.json","./testnet/mumbai/artifacts/pos/MaticWETH.json","./testnet/mumbai/artifacts/pos/Merkle.json","./testnet/mumbai/artifacts/pos/MerklePatriciaTest.json","./testnet/mumbai/artifacts/pos/Migrations.json","./testnet/mumbai/artifacts/pos/MintableERC1155Predicate.json","./testnet/mumbai/artifacts/pos/MintableERC1155PredicateProxy.json","./testnet/mumbai/artifacts/pos/MintableERC20Predicate.json","./testnet/mumbai/artifacts/pos/MintableERC20PredicateProxy.json","./testnet/mumbai/artifacts/pos/MintableERC721Predicate.json","./testnet/mumbai/artifacts/pos/MintableERC721PredicateProxy.json","./testnet/mumbai/artifacts/pos/MockCheckpointManager.json","./testnet/mumbai/artifacts/pos/NativeMetaTransaction.json","./testnet/mumbai/artifacts/pos/NetworkAgnostic.json","./testnet/mumbai/artifacts/pos/Proxy.json","./testnet/mumbai/artifacts/pos/ProxyTestImpl.json","./testnet/mumbai/artifacts/pos/ProxyTestImplStorageLayoutChange.json","./testnet/mumbai/artifacts/pos/RootChainManager.json","./testnet/mumbai/artifacts/pos/RootChainManagerProxy.json","./testnet/mumbai/artifacts/pos/RootChainManagerStorage.json","./testnet/mumbai/artifacts/pos/RootTunnel.json","./testnet/mumbai/artifacts/pos/UpgradableProxy.json","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_10__","TransactionListFilters","activeFilters","assets","setFilter","applyFilters","toggle","toggleOpened","resetFilter","resetFilters","transition","filters","filterCategory","filterValues","TableCellHeader","filterValue","filterLabel","isChecked","filterName","prevTxs","txsPerPage","totalTxs","totalPages","renderedTxs","lastBlockNumber","txsIndexes","parsedValue","loadTxs","enabledActions","hasActiveFilters","m","src_TransactionListFilters_TransactionListFilters","txHashKey","prevPage","nextPage","oldTokenName","oldIdleTokens","skipMigration","biconomyLimitReached","toggleSkipMigration","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_5__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_4__","executeAction","idleTokenToRedeem","_clientProtocolAmountsRedeem","gasLimitRedeem","callbackRedeem","callbackReceiptRedeem","toggleMetaTransactionsEnabled","checkMigrationContractApproved","migrationContractName","oldIdleTokensConverted","oldContractInfo","oldContractABI","biconomyLimits","disapproveMigration","approveMigration","migrationMethod","callbackMigrate","callbackReceiptMigrate","_skipRebalance","_migrationContract$me","biconomyChanged","usePermitChanged","fastBalanceSelectorChanged","batchMigrationEnabled","SkipMigrationComponent","react__WEBPACK_IMPORTED_MODULE_11___default","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_16__","rimble_ui__WEBPACK_IMPORTED_MODULE_20__","biconomyEnabled","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_13__","migrateTextBefore","migrateText","_TransactionField_TransactionField__WEBPACK_IMPORTED_MODULE_18__","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_17__","_FastBalanceSelector_FastBalanceSelector__WEBPACK_IMPORTED_MODULE_19__","functionName","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_14__","migrationImage","migrationTextProps","approveText","rowsPerPage","processedRows","processRows","totalRows","_TableHeader_TableHeader__WEBPACK_IMPORTED_MODULE_11__","rowIndex","_TableRow_TableRow__WEBPACK_IMPORTED_MODULE_8__","CustomField","_TableRow_TableRow__WEBPACK_IMPORTED_MODULE_9__","Tos","h1","h2","listStyle","theme_dark","exit","TorusConnector","kwargs","Torus","api","rest","objectWithoutProperties","buttonPosition","init","login","getUserInfo","getPublicAddress","verifier","verifierId","logout","updateNetworkId","Connector","AuthereumConnector","Authereum","getProvider","enable","getAccounts","accounts","disable","constructor","GnosisSafeConnector","SafeAppConnector","safeLoaded","checkSafeApp","activate","getAccount","getSafeInfo","isSafeApp","deactivate","WalletLinkConnector","WalletLink","infuraUrl","appLogoUrl","walletLink","darkMode","makeWeb3Provider","disconnect","close","WalletConnectConnector","WalletConnectProvider","infuraId","InjectedConnector","Connectors","NetworkOnlyConnector","TrezorConnector","LedgerConnector","FortmaticConnector","PortisConnector","manifestEmail","REACT_APP_TREZOR_MANIFEST_EMAIL","manifestAppUrl","REACT_APP_TREZOR_MANIFEST_URL","fortmaticApiKey","REACT_APP_FORTMATIC_KEY_MAINNET","portisDAppId","REACT_APP_PORTIS_DAPP_ID","portisNetwork","REACT_APP_PORTIS_NETWORK","supportedNetworkURLs","Injected","Infura","providerURL","Trezor","TrezorApi","Ledger","WalletConnect","bridge","Fortmatic","FortmaticApi","logoutOnDeactivation","Portis","PortisApi","dAppId","AuthereumApi","TorusApi","buildEnv","enableLogging","host","showTorusButton","WrongNetworkBanner","NetworkUtil","isSupportedNetwork","components_WrongNetworkBanner","NoWeb3BrowserModal","renderContent","RimbleUtil","isMobileDevice","NoWalletModal","icononly","Outline","GeneralUtil","hasMetaMask","isMetaMask","isTrustWallet","isTrust","isCoinbaseWallet","hasDapper","DapperEthereum","isDapper","isOpera","isAndroid","isIos","MSStream","WrongNetworkModal","RimbleUtils","TransactionFeeModal","subtitle2","Web3ConnectionButtons","context","useWeb3Context","setConnector","walletProvider","connectionCallback","unsetConnector","isMetamask","isGnosisSafe","safe","browserWalletDetected","allowedConnectors","registerPage","registerPageByDefault","basicConnectorsName","injectedIndex","splice","gnosisIndex","connectorInfo","walletIcon","buttonStyle","ConnectionModal","showTxFees","currentSection","showInstructions","askCustomAddress","closeRemainingTime","customAddressError","newToEthereumChoice","toggleShowTxFees","setStoredSection","closeCountdown","setWalletChoice","choice","setCurrentSection","connectCustomAddress","updateCustomAddress","renderModalContent","TOSacceptance","react_router_dom","newToEthereum","showConnectionButtons","assertThisInitialized","marginBottom","renderFooter","components_TransactionFeeModal","ConnectionPendingModal","UserRejectedConnectionModal","sendMessageAgain","initAccount","LowFundsModal","showSecondary","toggleQRVisible","alignContent","as","h5","ConnectionModalUtil","components_NoWeb3BrowserModal","closeNoWeb3BrowserModal","noWeb3BrowserModalIsOpen","components_NoWalletModal","closeNoWalletModal","noWalletModalIsOpen","components_WrongNetworkModal","closeWrongNetworkModal","wrongNetworkModalIsOpen","components_ConnectionModal","validateAccount","closeConnectionModal","connectionModalIsOpen","accountValidated","components_ConnectionPendingModal","closeConnectionPendingModal","accountConnectionPending","components_UserRejectedConnectionModal","closeUserRejectedConnectionModal","userRejectedConnect","components_LowFundsModal","closeLowFundsModal","lowFundsModalIsOpen","ConnectionErrorModal","setFirstValidConnector","closeConnectionErrorModal","isLedger","connectionError","TransactionErrorModal","closeTransactionErrorModal","isLedgerError","transactionError","isSlowTxError","RimbleTransactionContext","createContext","currentWeb3","permitClient","web3Providers","accountBalance","initWeb3","maticPlasmaClient","accountBalanceLow","accountBalanceToken","checkPreflight","checkNetwork","accountInizialized","rejectValidation","accountValidationPending","initializeContracts","rejectAccountConnect","enableUnderlyingWithdraw","userRejectedValidation","transactionConnectionModalIsOpen","openLowFundsModal","openWrongNetworkModal","openNoWeb3BrowserModal","openConnectionErrorModal","openTransactionErrorModal","openConnectionPendingModal","openUserRejectedConnectionModal","openUserRejectedValidationModal","closeUserRejectedValidationModal","meta","setConnectorName","biconomyLoginProcessing","RimbleTransaction","handleNetworkChanged","_args2","reload","networkInitialized","connectGnosisSafe","testTransaction","createTransaction","addTransaction","errorMessage","isWalletConnectClosedModalError","customAddressChanged","contextAccountChanged","accountDisconnected","gnosisSafeLoaded","setNetwork","initCurrentWeb3","useWeb3Provider","web3InfuraRpc","connectorNameChanged","web3Host","web3Provider","forceCallback","polygonConfig","web3PolygonRpc","maticProvider","parentProvider","maticPOSClientConfig","maticPlasmaClientConfig","web3Callback","originalWeb3","biconomyWeb3Provider","_args7","netId","providerRpc","library","IFrameEthereumProvider","MaticJs","MaticPOSClient","web3Injected","callbackAfterLogin","setCallbackAfterLogin","isLogin","userContract","Biconomy","onEvent","READY","ERROR","useInfuraProvider","initContractWithoutSet","simpleIDInfo","simpleIDParams","SimpleID","wallets","shownNotifications","isError","race","$crisp","notificationId","content","Sentry","increaseAmount","requiredNetworkId","contractsToInitialize","availableStrategiesNetworks","_ref20","balanceOf","determineAccountLowBalance","openConnectionModal","_args21","getNetworkType","getNetworkId","currentNetworkChanged","requiredNetworkChanged","_args23","contractMethod","_this$state","manualConfirmationTimeoutId","confirmationCallback","manualConfirmation","receiptCallback","isDeniedTx","_args24","confirmationCount","confidenceThreshold","recentEvent","timeout","lastUpdated","updatedTransaction","openNoWalletModal","CrispClient","accountBalanceDAI","subscribedTransactions","connectionErrorModalOpened","transactionErrorModalOpened","Provider","ConnectionModalsUtil","components_TransactionErrorModal","components_ConnectionErrorModal","utilities_NetworkUtil","Consumer","governanceEnabled","offsetTop","ScrollToTop","pathname","useLocation","useEffect","PageNotFound","Header_styles","NetworkOverview","getNetworkCircleColor","circleColor","networkCircle","DebuggerButtons","Web3Debugger","components_NetworkOverview","Web3Debugger_DebuggerButtons","node","IdleCDO","IdleStrategy","IdleCDOTrancheRewards","TransactionToastMessages","started","confirmed","TransactionToastUtil","collectionHasNewObject","prevCollection","currentCollection","getNewObjectFromCollection","objectKey","getUpdatedObjectFromCollection","object","getTransactionFromCollection","identifier","collection","getUpdatedTransaction","currentTx","prevTx","processTransactionUpdates","showTransactionToast","toastMeta","getTransactionToastMeta","closeElem","transactionToastMeta","transactionAction","charAt","newMessage","Landing","lazy","Dashboard","Governance","App","currentEnv","selectedTab","connecting","genericError","selectedTheme","buyModalOpened","toastMessageProps","innerWidth","innerHeight","unsubscribeFromHistory","closeToastMessage","showToastMessage","processCustomParam","storedCachedData","_args","cachedKeyFound","widthChanged","heightChanged","tabIndex","envEnabled","loadAvailableTokens","warn","jQuery","setThemeMode","closeIframe","w","iFrames","getElementsByTagName","iframe","contentWindow","parents","loadCurrentEnvironment","loadCustomAddress","tokenChanged","strategyChanged","networkChanged","_this9","hasMetamask","store","themeDark","_this10","SuspenseLoader","web3_react_dist_default","web3Api","libraryName","web3_react_dist","recreateOnNetworkChange","recreateOnAccountChange","RimbleWeb3","needsPreflight","initContractCustomProvider","react_router","react","fallback","isDashboard","setToken","setStrategy","openBuyModal","handleMenuClick","selectTab","closeBuyModal","isGovernance","components_Header","src_Web3Debugger_Web3Debugger","exact","updateSelectedTab","expires","acceptOnScroll","cookieName","acceptOnScrollPercentage","marginTop","overflowY","src_Tos_Tos","src_PageNotFound_PageNotFound","utilities_TransactionToastUtil","Boolean","hostname","dsn","beforeSend","hint","originalException","ReactDOM","src_App_App","serviceWorker","ready","registration","unregister","footer","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","rimble_ui__WEBPACK_IMPORTED_MODULE_3__","bgLayer","backgroundRepeat","backgroundPosition","backgroundSize","backgroundImage","subtitleProps","BackButton","polished__WEBPACK_IMPORTED_MODULE_0__","darkBlue","blurple","consensysblue","readableColor","VariationNumber","IconDirection","iconPos","loading-dots","loading-dots--dot","dot-keyframes","currYear","getFullYear","columnWidth","_ExtLink_ExtLink__WEBPACK_IMPORTED_MODULE_8__","role","aria-label","react_router_dom__WEBPACK_IMPORTED_MODULE_7__","ColTitle","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_9__","TwitterShareButton","share","parent","escape","customText","react_confetti_default","recycle","src_TwitterShareButton_TwitterShareButton","componentHasChildren","fieldPath","rimble_ui__WEBPACK_IMPORTED_MODULE_10__","customFieldName","customFieldProps","HeadingComponent","fieldName","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","trancheChanged","protocolChanged","fieldChanged","buttonLabel","_CustomField_CustomField__WEBPACK_IMPORTED_MODULE_11__","feesCounter","react_countup__WEBPACK_IMPORTED_MODULE_8___default","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_10__","tooltipProps","formattedValue","_isBigNumber","earningsCurveStart","earningsCurveEnd","tokenAPY2","tokenAPR","allocationChartWidth","allocationChartHeight","resizeAllocationChart","aprChartEndTimestamp","aprChartStartTimestamp","aprChartData","apiResultsAprChart","totalItems","newPoint","aprChartWidth","aprChartHeight","resizeAprChart","aprChartType","aprChartProps","firstTokenPrice","firstIdleBlock","performanceChartWidth","performanceChartHeight","resizePerformanceChart","apr_end_date","apr_start_date","apr_start_timestamp","apiResultsPerformanceChart","idleTokenPerformance","performanceChartData","performanceChartType","performanceChartProps","amountToMigrate","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","earningsPercCurveDirection","earningsPercCurve","earningsPercDirection","oldAPY","tokenAPYNoGov","allocationChartRowElement","$allocationChartRowElement","css","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_9__","random","aprChartRowElement","$aprChartRowElement","lineWidth","defs","linearGradientDef","offset","react__WEBPACK_IMPORTED_MODULE_12___default","_CustomTooltip_CustomTooltip__WEBPACK_IMPORTED_MODULE_17__","protocolEarning","_CustomTooltip_CustomTooltipRow__WEBPACK_IMPORTED_MODULE_20__","PerformanceChartRowElement","$PerformanceChartRowElement","blocknumber","rimble_ui__WEBPACK_IMPORTED_MODULE_21__","icon1","icon2","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_14__","react_countup__WEBPACK_IMPORTED_MODULE_11___default","_VariationNumber_VariationNumber__WEBPACK_IMPORTED_MODULE_18__","earningsCurve","governanceTokenName","tooltipMode","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_16__","_AllocationChart_AllocationChart__WEBPACK_IMPORTED_MODULE_19__"],"mappings":"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","file":"static/js/main.6c890344.chunk.js","sourcesContent":["import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass SmartNumber extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  render() {\n    let formattedNumber = '-';\n    const number = typeof this.props.number !== 'undefined' && !isNaN(this.props.number) && this.props.number !== false && this.props.number !== null ? this.props.number : null;\n\n    if (number){\n      switch (this.props.type){\n        case 'money':\n          formattedNumber = this.functionsUtil.formatMoney(number,this.props.precision);\n        break;\n        default:\n          formattedNumber = this.functionsUtil.abbreviateNumber(number,this.props.decimals,this.props.maxPrecision,this.props.minPrecision);\n        break;\n      }\n    } else {\n      formattedNumber = '-';\n    }\n\n    const flexProps = {\n      width:1,\n      alignItems:'center',\n      flexDirection:'row',\n      justifyContent:'center'\n    };\n\n    // Replace props\n    if (this.props.flexProps && Object.keys(this.props.flexProps).length){\n      Object.keys(this.props.flexProps).forEach(p => {\n        flexProps[p] = this.props.flexProps[p];\n      });\n    }\n\n    const showUnit = this.props.unit && formattedNumber !== '-';\n    const unitPos = this.props.unitPos ? this.props.unitPos : 'right';\n\n    return (\n      <Flex\n        {...flexProps}\n      >\n        {\n          unitPos === 'left' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n        <Text {...this.props}>{formattedNumber}</Text>\n        {\n          unitPos === 'right' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SmartNumber;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"trancheFlash\":\"TrancheWelcome_trancheFlash__2aaz5\",\"mobile\":\"TrancheWelcome_mobile__fIBQP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"PageNotFound_headerContainer__Ly5Tz\",\"headerBgFiller\":\"PageNotFound_headerBgFiller__1NzlO\",\"bgContainer\":\"PageNotFound_bgContainer__1Racj\",\"list\":\"PageNotFound_list__Cnz-b\",\"textContainer\":\"PageNotFound_textContainer__g_kTm\"};","import React, { Component } from 'react';\nimport { Flex, Link, Text } from \"rimble-ui\";\nimport RoundIconButton from '../RoundIconButton/RoundIconButton';\n\nclass Breadcrumb extends Component {\n  render() {\n\n    const showPathMobile = !!this.props.showPathMobile;\n\n    return (\n      <Flex\n        width={1}\n        id={'breadcrumb'}\n        alignItems={'center'}\n      >\n        {\n          this.props.handleClick && \n           <RoundIconButton\n             buttonProps={{\n               border:2,\n               width:'35px',\n               height:'35px'\n             }}\n             iconSize={'1.2em'}\n             iconName={'ArrowBack'}\n             handleClick={this.props.handleClick}\n           />\n        }\n        {\n          this.props.text && this.props.text.length>0 &&\n           <Link\n             ml={[2,3]}\n             fontSize={[1,2]}\n             fontWeight={3}\n             color={'cellText'}\n             hoverColor={'copyColor'}\n             onClick={this.props.handleClick}\n           >\n            {this.props.text}\n           </Link>\n        }\n        {\n          (!this.props.isMobile || showPathMobile) && this.props.path && this.props.path.length>0 &&\n            this.props.path.map((path,index) => {\n              const link = this.props.pathLink ? (this.props.pathLink[index] || null) : null;\n              const Component = link ? Link : Text;\n              return (\n                <Component\n                  pl={[1,3]}\n                  ml={[1,3]}\n                  fontWeight={3}\n                  fontSize={[1,2]}\n                  hoverColor={'copyColor'}\n                  style={ !this.props.isMobile ? {\n                    maxWidth:'30%',\n                    overflow: 'hidden',\n                    whiteSpace: 'nowrap',\n                    textOverflow: 'ellipsis',\n                    borderLeft: `1px solid ${this.props.theme.colors.divider}`\n                  } : null }\n                  key={`breadcrumb_path_${index}`}\n                  color={link ? 'cellText' : 'statValue'}\n                  onClick={link ? e => this.props.goToSection(link) : null}\n                >\n                  {path}\n                </Component>\n              );\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Breadcrumb;","import React, { Component } from 'react';\nimport { Text, Loader } from \"rimble-ui\";\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ShortHash extends Component {\n\n  state = {\n    text:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const hashChanged = prevProps.hash !== this.props.hash;\n    if (hashChanged){\n      this.loadData();\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n    const resolveAddress = this.props.resolveAddress !== false;\n    let text = this.functionsUtil.shortenHash(this.props.hash);\n    const ensName = resolveAddress ? await this.functionsUtil.getENSName(this.props.hash) : null;\n    if (ensName){\n      text = ensName;\n    }\n    this.setStateSafe({\n      text\n    });\n  }\n\n  render() {\n    const loader = (<Loader size=\"20px\" />);\n    return this.state.text ? <Text display={'inline'} {...this.props}>{this.state.text}</Text> : loader;\n  }\n}\n\nexport default ShortHash;","import React, { Component } from 'react';\nimport {\n  Flex, Box\n} from \"rimble-ui\";\nimport styles from './LoadingSpinner.module.scss';\n\nclass LoadingSpinner extends Component {\n  render() {\n    return (\n      <Flex\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        <Box className={[styles[\"loading-dots\"]]}>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n        </Box>\n      </Flex>\n    );\n  }\n}\n\nexport default LoadingSpinner;\n","import React, { Component } from \"react\";\nimport { Flex, Button } from \"rimble-ui\";\nimport LoadingSpinner from \"../LoadingSpinner/LoadingSpinner.js\";\n\nclass ButtonLoader extends Component {\n  render() {\n    return (\n      <Button onClick={this.props.handleClick} {...this.props.buttonProps}>\n        <Flex\n          flexDirection={\"column\"}\n          alignItems={\"center\"}\n          justifyContent={\"center\"}\n        >\n          <Flex width={1} display={this.props.isLoading ? \"flex\" : \"none\"}>\n            <LoadingSpinner />\n          </Flex>\n          <Flex width={1} display={this.props.isLoading ? \"none\" : \"flex\"}>\n            {this.props.buttonText}\n          </Flex>\n        </Flex>\n      </Button>\n    );\n  }\n}\n\nexport default ButtonLoader;\n","import { Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\n\nclass RoundIconButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      p:0,\n      border:1,\n      width:'40px',\n      height:'40px',\n      borderRadius:'50%',\n      mainColor:'backButtonBg',\n      disabled:this.props.disabled\n    },this.props.buttonProps);\n\n    buttonProps.minWidth = buttonProps.width;\n\n    return (\n       <RoundButton\n         buttonProps={buttonProps}\n         handleClick={this.props.handleClick}\n       >\n         <Icon\n           color={'copyColor'}\n           name={this.props.iconName}\n           size={ this.props.iconSize ? this.props.iconSize : '1.3em'}\n         />\n       </RoundButton>\n    );\n  }\n}\n\nexport default RoundIconButton;","import React, { Component } from \"react\";\nimport { Flex, Text, Icon, Image } from \"rimble-ui\";\nimport DashboardCard from \"../DashboardCard/DashboardCard\";\n\nclass CardIconButton extends Component {\n  render() {\n    const cardProps = Object.assign(\n      {\n        py: 1,\n        width: \"auto\",\n        px: [\"12px\", 3]\n      },\n      this.props.cardProps\n    );\n\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n        isInteractive={true}\n        isActive={this.props.isActive}\n        isDisabled={this.props.isDisabled}\n        handleClick={this.props.handleClick}\n        backgroundColor={\"blue\"}\n      >\n        <Flex\n          mx={this.props.margin ? this.props.margin : 0}\n          my={1}\n          alignItems={\"center\"}\n          flexDirection={\"row\"}\n          justifyContent={this.props.align ? this.props.align : \"center\"}\n        >\n          {this.props.image ? (\n            <Image\n              align={\"center\"}\n              src={this.props.image}\n              height={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n              width={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n              {...this.props.imageProps}\n            />\n          ) : this.props.useIconOnly ? (\n            <Icon\n              align={\"center\"}\n              name={this.props.icon}\n              size={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n              color={this.props.iconColor ? this.props.iconColor : \"redeem\"}\n              {...this.props.iconProps}\n            />\n          ) : (\n            <Flex\n              mr={this.props.isSidebar ? 0 : 2}\n              p={this.props.isSidebar ? 0 : [\"4px\", \"7px\"]}\n              borderRadius={\"50%\"}\n              alignItems={\"center\"}\n              justifyContent={\"center\"}\n              backgroundColor={\n                this.props.iconBgColor\n                  ? this.props.iconBgColor\n                  : this.props.theme.colors.transactions.actionBg.redeem\n              }\n            >\n              <Icon\n                align={\"center\"}\n                name={this.props.icon}\n                size={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n                color={this.props.iconColor ? this.props.iconColor : \"redeem\"}\n                {...this.props.iconProps}\n              />\n            </Flex>\n          )}\n          <Text fontWeight={3} fontSize={[1, 3]} {...this.props.textProps}>\n            {this.props.text}\n          </Text>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default CardIconButton;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass CustomTooltip extends Component {\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default CustomTooltip;","import { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport globalConfigs from '../configs/globalConfigs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass AllocationChart extends Component {\n  state = {\n    chartData:null,\n    chartProps:null,\n    selectedSlice:null,\n    totalAllocation:null,\n    protocolsAllocations:null,\n    protocolsAllocationsPerc:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged){\n      this.setStateSafe({\n        chartData:null,\n        chartProps:null,\n        selectedSlice:null,\n        totalAllocation:null,\n        protocolsAllocations:null,\n        protocolsAllocationsPerc:null\n      },() => {\n        this.loadData();\n      });\n    } else if (prevProps.isMobile !== this.props.isMobile){\n      this.loadData()\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n    const {\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    } = await this.functionsUtil.getTokenAllocation(this.props.tokenConfig);\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => d.value+'%',\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {\n            background: this.props.theme.colors.cardBg\n          } : {\n            display: 'none',\n          }\n        },\n        labels:{\n          text:{\n            fontWeight:600,\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n      margin: this.props.inline ? {top:0,right:15,bottom:0,left:1} : (this.props.isMobile ? { top: 10, right: 15, bottom: 0, left: 15 } : { top: 10, right: 35, bottom: 0, left: 35 }),\n    };\n\n    const chartData = [];\n\n    this.props.tokenConfig.protocols.forEach((protocolInfo,i)=>{\n      const protocolName = protocolInfo.name;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n      if (protocolsAllocationsPerc[protocolAddr]){\n        const protocolAllocationPercParsed = parseFloat(protocolsAllocationsPerc[protocolAddr].times(100).toFixed(2));\n        chartData.push({\n          id:protocolAddr,\n          name:protocolName,\n          value:protocolAllocationPercParsed,\n          color:'hsl('+globalConfigs.stats.protocols[protocolName].color.hsl.join(',')+')',\n          label: globalConfigs.stats.protocols[protocolName].label ? globalConfigs.stats.protocols[protocolName].label : this.functionsUtil.capitalize(protocolName)\n        });\n      }\n    });\n\n    this.setStateSafe({\n      chartData,\n      chartProps,\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    });\n  }\n\n  render() {\n    \n    const selectedSlice = this.state.selectedSlice !== null && this.state.protocolsAllocations[this.state.selectedSlice.id] ? this.state.protocolsAllocations[this.state.selectedSlice.id] : false;\n    const protocolIcon = this.state.selectedSlice !== null ? (globalConfigs.stats.protocols[this.state.selectedSlice.name] && globalConfigs.stats.protocols[this.state.selectedSlice.name].icon ? globalConfigs.stats.protocols[this.state.selectedSlice.name].icon : `${this.state.selectedSlice.name}.svg`) : null;\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n      >\n        {\n          this.state.totalAllocation && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/protocols/${protocolIcon}`}\n                    />\n                    <SmartNumber\n                      fontSize={[3,4]}\n                      decimals={3}\n                      fontWeight={4}\n                      maxPrecision={5}\n                      number={selectedSlice}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      Funds in {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/idle-mark.png`}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontWeight:3,\n                        fontSize:[3,4]\n                      }}\n                      decimals={3}\n                      fontWeight={4}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      number={this.state.totalAllocation}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.state.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default AllocationChart;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass CustomTooltipRow extends Component {\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              whiteSpace:'nowrap',\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CustomTooltipRow;","import React, { Component } from 'react';\nimport { Box, Flex, Icon, Text, Heading } from 'rimble-ui'\n// import styles from './Faquestion.module.scss';\n\nclass Faquestion extends Component {\n  state = {\n    isShowingAnswer: false\n  };\n  toggleAnswer(e) {\n    e.preventDefault();\n    this.setState(state => ({...state, isShowingAnswer: !state.isShowingAnswer}));\n  };\n  render() {\n    return (\n      <Flex\n        my={[3,3]}\n        py={[3,3]}\n        px={[4,4]}\n        flexDirection={'column'}\n        alignItems={'baseline'}\n        justifyContent={'center'}\n        backgroundColor={'cardBg'}\n        borderRadius={ this.props.isOpened ? '30px' : '50px' }\n        boxShadow={1}\n      >\n        <Flex flexDirection={'row'} alignItems={'center'} width={1} onClick={this.props.handleClick} style={{cursor: 'pointer'}}>\n          <Box width={4/5}>\n            <Heading.h4\n              my={0}\n              fontWeight={3}\n              fontSize={[1,2]}\n              fontFamily={'sansSerif'}\n              color={this.props.isOpened ? 'link' : 'dark-gray'}\n            >\n              {this.props.question}\n            </Heading.h4>\n          </Box>\n          <Flex\n            width={1/5}\n            justifyContent={'flex-end'}\n          >\n            <Icon\n              size={\"1.5em\"}\n              color={this.props.isOpened ? 'link' : 'copyColor'}\n              name={this.props.isOpened ? 'KeyboardArrowUp' : 'KeyboardArrowDown'}\n            />\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n        >\n          {this.props.isOpened &&\n            <Text.p\n              textAlign={'justify'}\n              fontSize={[1,2]}\n              dangerouslySetInnerHTML={{ __html: this.props.answer }}\n            >\n            </Text.p>\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Faquestion;\n","import { Flex } from \"rimble-ui\";\nimport Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport CustomList from '../CustomList/CustomList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass Base extends Component {\n\n  state = {\n    loaded:false,\n    activeCoverages:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadCoverages();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    if (accountChanged){\n      this.loadCoverages();\n    }\n  }\n\n  async loadCoverages(){\n    if (!this.props.account){\n      return false;\n    }\n\n    const coverages = await this.functionsUtil.getActiveCoverages(this.props.account);\n    const activeCoverages = [];\n    if (coverages && coverages.length>0){\n      coverages.forEach( c => {\n        if (!this.props.availableTokens || !this.props.availableTokens.length || this.props.availableTokens.includes(c.collateral)){\n          const statusColors = this.props.theme.colors.transactions.status;\n          let statusIcon = 'VerifiedUser';\n          let statusColor = statusColors.completed;\n          switch (c.status){\n            case 'Expired':\n              statusIcon = 'Error';\n              statusColor = statusColors.failed;\n            break;\n            case 'Claimed':\n              statusIcon = 'Error';\n              statusColor = statusColors.pending;\n            break;\n            default:\n            case 'Active':\n              statusIcon = 'VerifiedUser';\n              statusColor = statusColors.completed;\n            break;\n          }\n\n          const statusIconProps = {\n            color:statusColor\n          };\n\n          const portfolioCoverage = c.portfolioCoverage || 'N/A';\n\n          activeCoverages.push(Object.assign(c,{\n            statusIcon,\n            statusIconProps,\n            portfolioCoverage\n          }));\n        }\n      })\n    }\n\n    this.setState({\n      loaded:true,\n      activeCoverages\n    });\n  }\n\n  render() {\n\n    if (!this.state.loaded){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          this.props.title && ((this.state.activeCoverages && this.state.activeCoverages.length>0) || this.props.children) && (\n            <Title\n              {...this.props.titleProps}\n            >\n              {this.props.title}\n            </Title>\n          )\n        }\n        {\n          this.state.activeCoverages && this.state.activeCoverages.length>0 ? (\n            <CustomList\n              rows={this.state.activeCoverages}\n              handleClick={ this.props.isMobile ? (props) => props.row.status!=='Expired' && props.row.fileClaimUrl && this.functionsUtil.openWindow(props.row.fileClaimUrl) : null }\n              cols={[\n                {\n                  title:'PROTOCOL',\n                  props:{\n                    width:[0.28,0.14]\n                  },\n                  fields:[\n                    {\n                      type:'image',\n                      props:{\n                        mr:[1,2],\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      },\n                      path:[this.props.themeMode === 'dark' ? 'protocolImageDark' : 'protocolImage']\n                    },\n                    {\n                      type:'text',\n                      path:['protocolName'],\n                    }\n                  ]\n                },\n                {\n                  title:'TOKEN',\n                  props:{\n                    width:[0.33,0.14]\n                  },\n                  fields:[\n                    {\n                      type:'image',\n                      props:{\n                        mr:[1,2],\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      },\n                      path:['collateralIcon']\n                    },\n                    {\n                      type:'text',\n                      path:['collateral'],\n                    }\n                  ]\n                },\n                {\n                  title:'AMOUNT',\n                  props:{\n                    width:[0.24, 0.12],\n                  },\n                  fields:[\n                    {\n                      type:'number',\n                      path:['balance'],\n                      props:{\n                        decimals: this.props.isMobile ? 2 :  4,\n                      }\n                    },\n                    {\n                      type:'text',\n                      path:['token'],\n                      props:{\n                        ml:[1,2],\n                        style:{\n                          textTransform:'uppercase'\n                        }\n                      }\n                    }\n                  ]\n                },\n                {\n                  mobile:false,\n                  title:'EXPIRATION DATE',\n                  props:{\n                    width:0.19,\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['expirationDate'],\n                      props:{\n                        \n                      }\n                    },\n                  ]\n                },\n                {\n                  mobile:false,\n                  title:'COVERED FUNDS',\n                  props:{\n                    width:0.14,\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['portfolioCoverage'],\n                      props:{\n                        \n                      }\n                    },\n                  ]\n                },\n                {\n                  title:'STATUS',\n                  props:{\n                    width:[0.15,0.12],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'icon',\n                      name:'custom',\n                      path:['statusIcon'],\n                      props:{\n                        mr:[1,2],\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      }\n                    },\n                    {\n                      mobile:false,\n                      name:'custom',\n                      path:['status'],\n                      props:{\n                        style:{\n                          textTransform:'capitalize'\n                        }\n                      }\n                    }\n                  ]\n                },\n                {\n                  title:'',\n                  mobile:false,\n                  props:{\n                    width:0.17,\n                  },\n                  parentProps:{\n                    width:1\n                  },\n                  fields:[\n                    {\n                      type:'button',\n                      name:'custom',\n                      funcProps:{\n                        label:(props) => (props.row.actionLabel),\n                        disabled:(props) => (props.row.actionDisabled)\n                      },\n                      props:{\n                        width:1,\n                        fontSize:3,\n                        fontWeight:3,\n                        height:'45px',\n                        borderRadius:4,\n                        boxShadow:null,\n                        mainColor:'redeem',\n                        size: this.props.isMobile ? 'small' : 'medium',\n                        handleClick:(props) => props.row.status!=='Expired' && props.row.actionUrl && this.functionsUtil.openWindow(props.row.actionUrl)\n                      }\n                    }\n                  ]\n                }\n              ]}\n              {...this.props}\n            />\n          ) : this.props.children\n        }\n      </Flex>\n    )\n  }\n}\n\nexport default Base;\n","import { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquity extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    if (mobileChanged || themeModeChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const etherscanTxs = await this.functionsUtil.getEtherscanTxs(this.props.account,0,'latest',enabledTokens);\n\n    // console.log('etherscanTxs',etherscanTxs);\n\n    const chartData = [];\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || !tx.action || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n          \n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.functionsUtil.BNify(0);\n          }\n\n          const balance = amountLent;\n          const action = tx.action;\n          const timeStamp = parseInt(tx.timeStamp);\n          const tokenPrice = this.functionsUtil.BNify(tx.tokenPrice);\n          const idleTokens = this.functionsUtil.BNify(tx.idleTokens);\n\n          if (!tokenPrice.isNaN() && !tokenPrice.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              timeStamp,\n              tokenPrice,\n              idleTokens,\n              tokenAmount\n            });\n          }\n        });\n      }\n    });\n\n    // console.log('tokensBalance',tokensBalance);\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    const currTimestamp = parseInt(new Date().getTime()/1000)+86400;\n\n    const tokensData = {};\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      const tokenAddress = this.functionsUtil.getAvailableTokenAddress(token,this.props.selectedStrategy);\n      tokensData[token] = await this.functionsUtil.getTokenApiData(tokenAddress,isRisk,firstTxTimestamp,null,false,3600);\n    });\n\n    const idleTokenBalance = {};\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds){\n\n      const foundBalances = {};\n      const tokensBalances = {};\n      timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach(token => {\n\n        let lastTokenData = null;\n        const lastTokenDataUnfiltered = Object.values(tokensData[token]).pop();\n        const filteredTokenData = tokensData[token].filter(tx => (tx.timestamp>=prevTimestamp && tx.timestamp<=timeStamp));\n        if (filteredTokenData && filteredTokenData.length){\n          lastTokenData = filteredTokenData.pop();\n        }\n\n        if (!idleTokenBalance[token]){\n          idleTokenBalance[token] = this.functionsUtil.BNify(0);\n        }\n\n        const tokenConfig = this.props.availableTokens[token];\n        const tokenDecimals = tokenConfig.decimals;\n        let filteredBalances = tokensBalance[token].filter(tx => (tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n        \n        if (!filteredBalances.length){\n          if (prevBalances && prevBalances[token]){\n            filteredBalances = prevBalances[token];\n            const lastFilteredTx = Object.assign([],filteredBalances).pop();\n            const currentBalance = parseFloat(lastFilteredTx.balance);\n\n            // Take idleToken price from API and calculate new balance\n            if (currentBalance>0 && timeStamp>firstTxTimestamp && lastTokenData){\n              const idleTokens = idleTokenBalance[token];\n              const idlePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.idlePrice,tokenDecimals);\n              let newBalance = idleTokens.times(idlePrice);\n\n              // Set new balance and tokenPrice\n              lastFilteredTx.balance = newBalance;\n              lastFilteredTx.tokenPrice = idlePrice;\n              filteredBalances = [lastFilteredTx];\n            }\n          } else {\n            filteredBalances = [{\n              balance:this.functionsUtil.BNify(0),\n              tokenPrice:this.functionsUtil.BNify(0)\n            }];\n          }\n        } else {\n          filteredBalances.forEach(tx => {\n            switch (tx.action){\n              case 'Swap':\n              case 'Deposit':\n              case 'Migrate':\n              case 'Receive':\n              case 'CurveOut':\n                idleTokenBalance[token] = idleTokenBalance[token].plus(tx.idleTokens);\n              break;\n              default:\n                idleTokenBalance[token] = idleTokenBalance[token].minus(tx.idleTokens);\n                if (idleTokenBalance[token].lt(0)){\n                  idleTokenBalance[token] = this.functionsUtil.BNify(0);\n                }\n              break;\n            }\n          });\n        }\n\n        const lastTx = Object.assign([],filteredBalances).pop();\n        // let lastTxBalance = this.functionsUtil.BNify(lastTx.balance);\n        let lastTxBalance = idleTokenBalance[token].times(lastTx.tokenPrice);\n\n        if (lastTxBalance.gt(0)){\n          // Convert token balance to USD\n          let tokenUsdConversionRate = null;\n          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n          if (!this.props.chartToken && conversionRateField){\n            const conversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : (lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null);\n            if (conversionRate){\n              tokenUsdConversionRate = this.functionsUtil.fixTokenDecimals(conversionRate,18);\n              if (tokenUsdConversionRate.gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n          }\n          \n          tokensBalances[token] = lastTxBalance;\n\n          aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n        }\n\n        foundBalances[token] = filteredBalances;\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || (momentDate.isSameOrAfter(startDate) && momentDate.isSameOrBefore(new Date(),'day'))){\n        \n        // if (momentDate.isAfter(new Date(),'day')){\n        //   momentDate = this.functionsUtil.strToMoment(new Date());\n        // }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n\n        // console.log(formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    // debugger;\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken,'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    let axisBottomIndex = 0;\n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        tickValues:'every day',\n        legendPosition: 'middle',\n        format: (value) => {\n          if (axisBottomIndex++ % daysFrequency === 0){\n            return this.functionsUtil.strToMoment(value,'YYYY/MM/DD HH:mm').format('MMM DD')\n          }\n        },\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      areaOpacity:this.props.themeMode === 'light' ? 0.1 : 0.5,\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:this.props.theme.colors.legend,\n              fontFamily:this.props.theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            (typeof point.data.balances === 'object' && Object.keys(point.data.balances).length>0) &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquity;","import Select from 'react-select';\nimport React, { Component } from 'react';\nimport { Flex, Text, Input } from \"rimble-ui\";\nimport styles from './GenericSelector.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass GenericSelector extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadComponents();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const optionsChanged = JSON.stringify(prevProps.options) !== JSON.stringify(this.props.options);\n    const defaultValueChanged = JSON.stringify(prevProps.defaultValue) !== JSON.stringify(this.props.defaultValue);\n    const componentsChanged = prevProps.CustomOptionValue !== this.props.CustomOptionValue || prevProps.CustomValueContainer !== this.props.CustomValueContainer;\n\n    if (optionsChanged || selectedTokenChanged || defaultValueChanged || componentsChanged){\n      this.loadComponents();\n    }\n  }\n\n  async loadComponents(){\n    \n    const ControlComponent = props => {\n      const cardProps = Object.assign(\n        props.innerProps,\n        {\n          p:2,\n          width:1,\n          style:{cursor:'pointer'}\n        },\n        (this.props.innerProps ? this.props.innerProps : {})\n      );\n\n      if (props.menuIsOpen){\n        cardProps.boxShadow = 4;\n      }\n      return (\n        <DashboardCard\n          isInteractive={true}\n          cardProps={cardProps}\n        >\n          <Flex\n            width={1}\n            height={'100%'}\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            {props.children}\n          </Flex>\n        </DashboardCard>\n      );\n    };\n\n    const CustomIndicatorSeparator = props => null;\n\n    const CustomMenu = props => {\n      const cardProps = Object.assign(props.innerProps,{\n        mt:2,\n        zIndex:1,\n        boxShadow:null,\n        position:'absolute'\n      });\n      return (\n        <DashboardCard\n          cardProps={cardProps}\n        >\n          {props.children}\n        </DashboardCard>\n      );\n    }\n\n    const CustomValueContainer = this.props.CustomValueContainer ? this.props.CustomValueContainer : props => {\n      return (\n        <Flex\n          {...props.innerProps}\n        >\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text\n              fontWeight={3}\n            >\n              {props.selectProps.value.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomOptionValue = this.props.CustomOptionValue ? this.props.CustomOptionValue : (props) => {\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n        >\n          <Text>\n            {props.label}\n          </Text>\n        </Flex>\n      );\n    };\n\n    const CustomInputContainer = this.props.CustomInputContainer ? this.props.CustomInputContainer : (props) => {\n\n      if (!props.selectProps.isSearchable){\n        return null;\n      }\n\n      return (\n        <Input\n          {...props}\n          fontSize={this.props.theme.fontSizes[2]}\n          color={this.props.theme.colors.copyColor}\n          fontWeight={this.props.theme.fontWeights[3]}\n          fontFamily={this.props.theme.fonts.sansSerif}\n          backgroundColor={this.props.theme.colors.cardBg}\n          className={[styles.searchInput,this.props.themeMode==='dark' ? styles.dark : null,!props.selectProps.menuIsOpen ? styles.searchInputHidden : null]}\n        />\n      );\n    };\n\n    const CustomOption = (props) => {\n\n      const options = props.selectProps.options;\n      let selectedValue = props.selectProps && props.selectProps.value && props.selectProps.value.value;\n\n      // Check if the selectedValue is included in options\n      if (selectedValue && options.map( o => o.value ).indexOf(selectedValue) === -1 && this.props.defaultValue){\n        selectedValue = this.props.defaultValue.value;\n      }\n\n      // Don't show selected value\n      if (selectedValue && selectedValue === props.value){\n        return null;\n      }\n\n      // console.log('CustomOption',this.props.customOptionProps);\n\n      return (\n        <Flex\n          px={3}\n          py={2}\n          width={1}\n          {...props.innerProps}\n          alignItems={'center'}\n          flexDirection={'row'}\n          style={{cursor:'pointer'}}\n          justifyContent={'flex-start'}\n          className={styles.genericSelector}\n          backgroundColor={ props.isFocused ? 'selectBgFocused' : 'selectBg' }\n        >\n          <CustomOptionValue\n            {...props}\n          />\n        </Flex>\n      );\n    }\n\n    await this.setState({\n      CustomMenu,\n      CustomOption,\n      ControlComponent,\n      CustomValueContainer,\n      CustomInputContainer,\n      CustomIndicatorSeparator\n    });\n  }\n\n  render() {\n    const isSearchable = typeof this.props.isSearchable !== 'undefined' ? this.props.isSearchable : false;\n    return (\n      <Select\n        name={this.props.name}\n        isSearchable={isSearchable}\n        options={this.props.options}\n        defaultValue={this.props.defaultValue}\n        onChange={ v => this.props.onChange(v.value) }\n        components={{\n            Menu: this.state.CustomMenu,\n            Option: this.state.CustomOption,\n            Control: this.state.ControlComponent,\n            Input: this.state.CustomInputContainer,\n            SingleValue: this.state.CustomValueContainer,\n            IndicatorSeparator: this.state.CustomIndicatorSeparator\n        }}\n      />\n    );\n  }\n}\n\nexport default GenericSelector;\n","import axios from 'axios';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Progress, Icon, Link } from 'rimble-ui'\n\nclass TxProgressBar extends Component {\n  state = {\n    txCount:0,\n    error:null,\n    ended:false,\n    percentage:0,\n    processing:true,\n    txTimestamp:null,\n    initialized:false,\n    estimatedTime:null,\n    remainingTime:null\n  };\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n\n    this.componentUnmounted = true;\n\n    var id = window.setTimeout(function() {}, 0);\n\n    while (id--) {\n        window.clearTimeout(id); // will do nothing if no timeout with id is present\n    }\n\n    window.initProgressBar = this.initProgressBar;\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps){\n    this.loadUtils();\n\n    if (!this.state.initialized && this.props.web3){\n      this.initProgressBar();\n    }\n  }\n\n  componentDidMount = async () => {\n    this.initProgressBar();\n  }\n\n  getTransaction = async () => {\n    const transaction = await (new Promise( async (resolve, reject) => {\n      // console.log('getTransaction',this.props.hash);\n      this.props.web3.eth.getTransaction(this.props.hash,(err,transaction) => {\n        resolve(transaction);\n      });\n    }));\n\n    // console.log('getTransaction',transaction);\n\n    const newState = {};\n    if (transaction){\n      newState.transaction = transaction;\n    } else {\n      newState.processing = false;\n      newState.error = 'Unable to find the transaction';\n    }\n\n    this.setState(newState);\n    return transaction;\n  }\n\n  /*\n  Taken from https://ethgasstation.info/calculatorTxV.php\n  */\n  _estimateWait (prediction, gasoffered) {\n    var minedProb;\n    var expectedWait;\n    var sum1, sum2;\n    var intercept = 4.2794;\n    var hpa = .0329;\n    var hgo = -3.2836;\n    var tx = -0.0004;\n    var intercept2 = 7.5375;\n    var hpa_coef = -0.0801;\n    var txatabove_coef= 0.0003;\n    var high_gas_coef = .3532;\n\n    if (gasoffered > 1000000) {    \n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + hgo  + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['hashpower_accepting'] * hpa_coef) + (prediction['tx_atabove'] * txatabove_coef) + high_gas_coef;\n    } else {\n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['tx_atabove'] * txatabove_coef) + (prediction['hashpower_accepting'] * hpa_coef);\n    }\n\n    var factor = Math.exp(- 1 * sum1);\n    const prob = 1 / (1 + factor);\n\n    if (prob > .95) {\n      minedProb = 'Very High';\n    } else if (prob > .9 && prob <= .95) {\n      minedProb = 'Medium'\n    } else {\n      minedProb = 'Low';\n    }\n\n    expectedWait = Math.exp(sum2);\n    if (expectedWait < 2) {\n      expectedWait = 2;\n    }\n\n    if (gasoffered > 2000000) {\n      expectedWait += 100;\n    }\n\n    return [expectedWait, prediction['hashpower_accepting'], prediction['tx_atabove'], minedProb];\n  }\n\n  getBlockTime = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/ethgasAPI.json');\n    if (pt){\n      const blockTime = pt.data;\n      this.setState({\n        blockTime\n      });\n      return blockTime;\n    }\n    return null;\n  }\n\n  getPredictionTable = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/predictTable.json');\n    if (pt){\n      const predictTable = pt.data;\n      this.setState({\n        predictTable\n      });\n      return predictTable;\n    }\n    return null;\n  }\n\n  getTxEstimatedTime = (gasPrice) => {\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    if (currentNetwork.provider === 'polygon'){\n      return 30;\n    } else {\n      let prediction = null;\n      if (this.state.predictTable){\n        this.state.predictTable.forEach((p,i) => {\n          if (!prediction && parseFloat(p.gasprice)>=parseFloat(gasPrice)){\n            prediction = p;\n            return true;\n          }\n        });\n      }\n\n      if (this.state.blockTime && prediction){\n        const pdValues = this._estimateWait(prediction,this.state.transaction.gas);\n        const blocksWait = pdValues[0];\n        const blockInterval = this.state.blockTime.block_time;\n        let txMeanSecs = blocksWait * blockInterval;\n        txMeanSecs = parseInt(txMeanSecs.toFixed(0));\n        this.functionsUtil.customLog('getTxEstimatedTime',prediction,this.state.transaction.gas,pdValues,txMeanSecs);\n        return txMeanSecs; // Customized\n      }\n    }\n\n    return null;\n  }\n\n  calculateRemainingTime = async () => {\n    let remainingTime = 0;\n    let estimatedTime = 0;\n\n    if (!this.state.transaction || this.componentUnmounted){\n      return false;\n    }\n\n    if (!this.state.transaction.blockNumber){\n      const gasPrice = parseFloat(this.functionsUtil.BNify(this.state.transaction.gasPrice).div(1e9).toString());\n      remainingTime = this.getTxEstimatedTime(gasPrice);\n    }\n\n    estimatedTime = remainingTime ? remainingTime : 0;\n\n    if (this.state.txTimestamp){\n      const currTimestamp = new Date().getTime();\n      const secondsPassed = parseInt((currTimestamp-parseInt(this.state.txTimestamp))/1000);\n      \n      // Calculate new remaining time\n      remainingTime -= secondsPassed;\n      remainingTime = Math.max(remainingTime,0);\n\n      this.functionsUtil.customLog('Estimated time',estimatedTime,'secondsPassed',secondsPassed,'New remaining time',remainingTime);\n    }\n\n    const timePassed = estimatedTime-remainingTime;\n    const percentage = estimatedTime>0 ? parseFloat(timePassed/estimatedTime) : 1;\n\n    this.setState({\n      estimatedTime,\n      remainingTime,\n      percentage\n    });\n\n    setTimeout(()=>{this.updateProgressBar()},1000);\n  }\n\n  updateProgressBar = () => {\n\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    let remainingTime = this.state.remainingTime;\n    if (remainingTime){\n      remainingTime--;\n      if (!remainingTime){\n        this.setState({\n          percentage:1,\n          ended:true\n        });\n      } else {\n        const timePassed = this.state.estimatedTime-remainingTime;\n        const percentage = parseFloat(timePassed/this.state.estimatedTime);\n        this.setState({\n          percentage,\n          remainingTime\n        });\n        setTimeout(()=>{this.updateProgressBar()},1000);\n      }\n    } else {\n      this.setState({\n        percentage:1,\n        ended:true\n      });\n    }\n  }\n\n  getTxInfo = async () => {\n\n    // Get tx timestamp\n    const txProgressBarKey = `txProgressBarData`;\n    const txHash = this.props.hash.toLowerCase();\n\n    let txProgressBarData = null;\n    let txTimestamp = null;\n    let newState = {};\n\n    if (localStorage){\n      txProgressBarData = localStorage.getItem(txProgressBarKey);\n      if (txProgressBarData){\n        txProgressBarData = JSON.parse(txProgressBarData);\n      }\n    }\n\n    if (!txProgressBarData || !txProgressBarData[txHash]){\n      txTimestamp = new Date().getTime();\n\n      const [predictTable,blockTime] = await Promise.all([\n        this.getPredictionTable(),\n        this.getBlockTime()\n      ]);\n\n      txProgressBarData = {};\n      txProgressBarData[txHash] = {\n        txTimestamp,\n        blockTime,\n        predictTable\n      };\n\n      // Save progress bar status in localStorage\n      this.functionsUtil.setLocalStorage(txProgressBarKey,JSON.stringify(txProgressBarData));\n\n      newState = txProgressBarData[txHash];\n\n      if (!predictTable || !blockTime){\n        newState.error = 'Processing transaction';\n      }\n    }\n\n    this.setState(newState);\n  }\n\n  initProgressBar = async () => {\n\n    if (!this.props.hash || !this.props.web3){\n      return false;\n    }\n\n    const newState = {\n      initialized:true\n    };\n    this.setState(newState);\n\n    // console.log('initProgressBar',this.state.txCount,this.props.hash);\n\n    const transaction = await this.getTransaction();\n\n    if (transaction){\n      await this.getTxInfo();\n      try{\n        this.calculateRemainingTime();\n      } catch (err) {\n        newState.error = 'Processing transaction';\n        // const errStringified = JSON.stringify(err);\n      }\n\n      this.setState(newState);\n    } else {\n      const txCount = this.state.txCount++;\n      if (txCount<5){\n        this.setState({\n          txCount\n        },() => {\n          window.setTimeout(() => {\n            this.initProgressBar();\n          },1000);\n        });\n      }\n    }\n  }\n\n  renderRemainingTime(){\n    // More than 60 seconds\n    if (this.state.remainingTime>60){\n      const minutes = Math.floor(this.state.remainingTime/60);\n      const seconds = this.state.remainingTime-(minutes*60);\n      return ('0'+minutes).substr(-2)+':'+('0'+seconds).substr(-2)+' min';\n    } else {\n      return this.state.remainingTime+'s';\n    }\n  }\n\n  render() {\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    return (\n      <Flex flexDirection={'column'} alignItems={'center'}>\n        {\n          this.state.remainingTime !== null ? (\n            this.state.ended ? (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={this.props.endMessage ? this.props.endMessage : 'Finalizing transaction...'}\n              />\n            ) : (\n              <Flex\n                mb={2}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Text mb={2} color={ this.props.textColor ? this.props.textColor : 'copyColor'}>{ this.props.waitText ? this.props.waitText : 'Remaining time:' } <Text.span color={ this.props.textColor ? this.props.textColor : 'copyColor'} fontWeight={3}>{ this.renderRemainingTime() }</Text.span></Text>\n                <Progress value={ this.state.percentage } />\n              </Flex>\n            )\n          ) : (\n            this.state.error !== null && !this.state.processing ? (\n              <Flex\n                alignItems={'center'}\n                flexDirection={'column'}\n              >\n                <Icon\n                  size={'2em'}\n                  name={'Warning'}\n                  color={'cellText'}\n                />\n                <Text\n                  mt={0}\n                  fontSize={2}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  {this.state.error}\n                </Text>\n              </Flex>\n            ) : (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={ this.state.error ? this.state.error : (this.props.hash ? (this.props.loadingMessage ? this.props.loadingMessage : 'Calculating estimated time...') : (this.props.sendingMessage ? this.props.sendingMessage : 'Sending transaction...') ) }\n              />\n            )\n          )\n        }\n        {\n          this.props.hash ? (\n            <Link\n              mt={0}\n              target={'_blank'}\n              hoverColor={'dark-gray'}\n              rel={\"nofollow noopener noreferrer\"}\n              color={this.props.textColor ? this.props.textColor : 'cellText'}\n              href={this.functionsUtil.getEtherscanTransactionUrl(this.props.hash)}\n            >\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <Text\n                  fontSize={0}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  View in {this.functionsUtil.capitalize(currentNetwork.explorer)}\n                </Text>\n                <Icon\n                  ml={1}\n                  size={'0.75em'}\n                  name={'OpenInNew'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                />\n              </Flex>\n            </Link>\n          ) : typeof this.props.cancelTransaction === 'function' ? (\n              <Link\n                mt={0}\n                href={`javascript:void(0)`}\n                onClick={ e => this.props.cancelTransaction() }\n                color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                hoverColor={this.props.cancelTextHoverColor ? this.props.cancelTextHoverColor : 'dark-gray'}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'center'}\n                >\n                  <Text\n                    fontSize={0}\n                    textAlign={'center'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  >\n                    Cancel transaction\n                  </Text>\n                  <Icon\n                    ml={1}\n                    size={'0.85em'}\n                    name={'Cancel'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  />\n                </Flex>\n              </Link>\n          ) : null\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TxProgressBar;","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from \"polished\";\n\n// theme.js\nexport default {\n  breakpoints: [\"52em\", \"64em\"],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: [\"0\", \"4px\", \"8px\", \"16px\", \"2rem\"],\n  widths: [0, 16, 32, 64, 128, 256, 550],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, \"1px solid #eee\", \"1px solid #b6c2ff\"],\n  borderWidths: [\"0\", \"1px\", \"2px\", \"4px\"],\n  shadows: [\n    \"0\",\n    \"0px 2px 4px rgba(0, 0, 0, 0.1)\",\n    \"0 7px 14px rgba(50,50,93,.1)\",\n    \"1px 1px 0px rgba(0,0,0,0.2)\",\n    \"0px 0px 16px 2px rgba(0,54,255,0.3)\"\n  ],\n  opacity: {\n    disabled: 0.4\n  },\n  colors: {\n    primary: blue.base,\n    \"gradient-bg\": \"linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)\",\n    \"primary-light\": blue.light[1],\n    \"primary-dark\": blue.dark[1],\n    bgBlue: \"#0030e0\",\n    blue: \"#0036ff\",\n    tick: \"#00b84a\",\n    \"dark-blue\": \"#00219a\",\n    skyBlue: \"#00abfe\",\n    lightBlue: \"#79f4e1\",\n    copyColor: \"#3F3D4B\",\n    subColor: \"#a7a7a7\",\n    black: baseColors.black,\n    'near-black': '#111',\n    'dark-gray': '#4e4e4e',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#f4f4f4',\n    white: '#fff',\n    transparent: 'transparent',\n    green:'#00b84a',\n    /*\n    NEW COLORS\n    */\n    connect: \"#0042F5\",\n    newblue: \"#2B65D9\",\n    alert: \"#ff9900\",\n    arrowActive: \"#4f4f4f\",\n    arrowInactive: \"#d8d8d8\",\n    selectBgFocused: \"#fbfbfb\",\n    selectBg: \"#ffffff\",\n    backButtonBg: \"#ffffff\",\n    lineChartStroke: \"#dbdbdb\",\n    wrongNetworkBannerBg: \"#ffffff\",\n    dashboardBg: \"#f9fafd\",\n    statValue: \"#959595\",\n    boxBorder: \"#eeeeee\",\n    cellTitle: \"#a3a4a5\",\n    cellText: \"#a6a6a6\",\n    divider: \"#d8d8d8\",\n    divider2: \"#EBEBEB\",\n    counter: \"#5d5d5d\",\n    redeem: \"#00a9fe\",\n    link: \"#0036ff\",\n    deposit: \"#0239ff\",\n    migrate: \"#00a9fe\",\n    legend: \"#c9c9c9\",\n    menuBg: \"#fff\",\n    menuHover: \"#f3f6ff\",\n    cardBg: \"#fff\",\n    flashColor: \"#3f4e9a\",\n    menuRightBorder: \"#eee\",\n    menuIconActive:'#2a65d9',\n    cardBgContrast: \"#fafafa\",\n    cardHoverShadow: \"0px 0px 0px 1px rgba(0, 54, 255, 0.3)\",\n    cardBgHover: \"#f7f8ff\",\n    cardBorder: \"#eee\",\n    pageActive: \"#4f4f4f\",\n    pageInactive: \"#d8d8d8\",\n    transactions: {\n      action: {\n        send: \"#10a0dd\",\n        swap: \"#3d53c0\",\n        boost: \"#ffff00\",\n        redeem: \"#10a0dd\",\n        swapout: \"#10a0dd\",\n        deposit: \"#3d53c0\",\n        curvein: \"#10a0dd\",\n        receive: \"#3d53c0\",\n        migrate: \"#3d53c0\",\n        default: \"#4f4f4f\",\n        curveout: \"#3d53c0\",\n        withdraw: \"#10a0dd\",\n        curvedepositin: \"#10a0dd\",\n        curvedepositout: \"#3d53c0\"\n      },\n      actionBg: {\n        send: \"#ceeff6\",\n        swap: \"#ced6ff\",\n        boost: \"#ff7979\",\n        redeem: \"#ceeff6\",\n        swapout: \"#ceeff6\",\n        deposit: \"#ced6ff\",\n        curvein: \"#ceeff6\",\n        default: \"#dadada\",\n        receive: \"#ced6ff\",\n        migrate: \"#ced6ff\",\n        withdraw: \"#ceeff6\",\n        curveout: \"#ced6ff\",\n        curvedepositin: \"#ceeff6\",\n        curvedepositout: \"#ced6ff\"\n      },\n      status: {\n        completed: \"#00b84a\",\n        pending: \"#a5a5a5\",\n        failed: \"#fa0000\"\n      }\n    },\n    blacks: [\n      \"rgba(0,0,0,.0125)\",\n      \"rgba(0,0,0,.025)\",\n      \"rgba(0,0,0,.05)\",\n      \"rgba(0,0,0,.1)\",\n      \"rgba(0,0,0,.2)\",\n      \"rgba(0,0,0,.3)\",\n      \"rgba(0,0,0,.4)\",\n      \"rgba(0,0,0,.5)\",\n      \"rgba(0,0,0,.6)\",\n      \"rgba(0,0,0,.7)\",\n      \"rgba(0,0,0,.8)\",\n      \"rgba(0,0,0,.9)\"\n    ],\n    whites: [\n      \"rgba(255,255,255,.0125)\",\n      \"rgba(255,255,255,.025)\",\n      \"rgba(255,255,255,.05)\",\n      \"rgba(255,255,255,.1)\",\n      \"rgba(255,255,255,.2)\",\n      \"rgba(255,255,255,.3)\",\n      \"rgba(255,255,255,.4)\",\n      \"rgba(255,255,255,.5)\",\n      \"rgba(255,255,255,.6)\",\n      \"rgba(255,255,255,.7)\",\n      \"rgba(255,255,255,.8)\",\n      \"rgba(255,255,255,.9)\"\n    ]\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: shade(0.4, \"#AAA\"),\n      backgroundColor: tint(0.9, \"#AAA\"),\n      borderColor: \"#AAA\"\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base\n    },\n    info: {\n      color: shade(0.4, blue.base),\n      backgroundColor: \"#f3f6ff\",\n      borderColor: \"#b6c2ff\"\n    }\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      \"--main-color\": blue.base,\n      \"--contrast-color\": blue.text\n    },\n    normal: {\n      color: baseColors.black,\n      \"--contrast-color\": baseColors.black\n    },\n    success: {\n      \"--main-color\": green.base,\n      \"--contrast-color\": green.text\n    },\n    danger: {\n      \"--main-color\": red.base,\n      \"--contrast-color\": red.text\n    }\n  },\n  buttonSizes: {\n    small: {\n      fontSize: \"0.75rem\",\n      height: \"2rem\",\n      minWidth: \"2rem\",\n      padding: \"0 1rem\"\n    },\n    medium: {\n      fontSize: \"1rem\",\n      height: \"3rem\",\n      minWidth: \"3rem\"\n    },\n    large: {\n      fontSize: \"1.5rem\",\n      height: \"4rem\",\n      minWidth: \"4rem\",\n      borderRadius: \"2rem\"\n    }\n  }\n};\n","import React, { Component } from 'react';\nimport { Icon, Text, Flex } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass IconBox extends Component {\n\n  render() {\n    const cardProps = Object.assign({\n      p:3\n    },this.props.cardProps);\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n        isVisible={this.props.isVisible}\n        isInteractive={this.props.isInteractive}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={this.props.icon ? this.props.icon : 'InfoOutline'}\n            {...this.props.iconProps}\n          />\n          {\n            this.props.text && \n              <Text\n                mt={1}\n                fontSize={2}\n                color={'cellText'}\n                textAlign={'center'}\n                dangerouslySetInnerHTML={{\n                  __html:this.props.text\n                }}\n                {...this.props.textProps}\n              />\n          }\n          {\n            this.props.children\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default IconBox;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass AssetSelector extends Component {\n\n  state = {\n    options:null,\n    defaultValue:null,\n    CustomOptionValue:null,\n    CustomValueContainer:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadComponents(){\n    const options = Object.keys(this.props.availableTokens).map(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      return {\n        value:token,\n        label:token,\n        tokenConfig\n      };\n    });\n\n    const defaultValue = this.props.selectedToken ? options.find(v => (v.value.toUpperCase() === this.props.selectedToken.toUpperCase())) : null;\n\n    const CustomOptionValue = props => {\n      const token = props.value;\n      const tokenConfig = props.data.tokenConfig;\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n          {\n            this.state.props.showCustomField ? (\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:this.state.props.showCustomField,\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n            ) : this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : defaultValue;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const token = selectProps.value;\n      const tokenConfig = selectProps.tokenConfig;\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n\n          {\n            this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    this.setState({\n      options,\n      defaultValue,\n      CustomOptionValue,\n      CustomValueContainer\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadComponents();\n\n    this.setState({\n      props:this.props\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const availableTokensChanged = JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n    if (availableTokensChanged || selectedTokenChanged){\n      this.loadComponents();\n    }\n  }\n\n  render() {\n    if (!this.state.options || !this.state.defaultValue || !this.state.CustomOptionValue || !this.state.CustomValueContainer || !this.props.availableTokens || !Object.keys(this.props.availableTokens).length){\n      return null;\n    }\n\n    return (\n      <GenericSelector\n        {...this.props}\n        name={'assets'}\n        options={this.state.options}\n        innerProps={this.props.innerProps}\n        isSearchable={this.props.isSearchable}\n        defaultValue={this.state.defaultValue}\n        selectedToken={this.props.selectedToken}\n        CustomOptionValue={this.state.CustomOptionValue}\n        CustomValueContainer={this.state.CustomValueContainer}\n        onChange={ this.props.onChange ? this.props.onChange : this.props.changeToken}\n      />\n    );\n  }\n}\n\nexport default AssetSelector;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bg\":\"ModalCard_bg__3ocwQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"twitterIcon\":\"TwitterShareButton_twitterIcon__2QCmn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tooltip\":\"TableCellHeader_tooltip__3xM3k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radioBtn\":\"TransactionListFilters_radioBtn__1vgHa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Web3ConnectionButtons_button__1Wov0\"};","/*\nTheming: https://github.com/plouc/nivo/issues/308\n*/\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n\nclass GenericChart extends Component {\n  state = {\n    width:null,\n    height:null\n  };\n\n  componentUnmounted = false;\n\n  componentWillMount() {\n    window.addEventListener('resize', this.handleWindowSizeChange.bind(this));\n  }\n\n  componentWillUnmount() {\n    this.componentUnmounted = true;\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidMount(){\n    this.handleWindowSizeChange();\n  }\n\n  componentDidUpdate(prevProps){\n    if (prevProps.isMobile !== this.props.isMobile){\n      this.handleWindowSizeChange();\n    }\n  }\n\n  handleWindowSizeChange(){\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    const newState = {...this.state};\n\n    if (this.props.parentId){\n      const chartContainer = document.getElementById(this.props.parentId);\n      if (chartContainer){\n        const chartWidth = parseFloat(chartContainer.offsetWidth)>0 ? chartContainer.offsetWidth : 0;\n\n        if (chartWidth && chartWidth !== newState.width){\n          newState.width = chartWidth;\n        }\n      }\n    }\n\n    if (!newState.width && this.props.width && this.props.width !== newState.width) {\n      newState.width = this.props.width;\n    }\n\n    if (this.props.parentIdHeight){\n      const chartContainerH = document.getElementById(this.props.parentIdHeight);\n      if (chartContainerH){\n        const chartHeight = parseFloat(chartContainerH.offsetWidth)>0 ? chartContainerH.offsetWidth : 0;\n        if (chartHeight && chartHeight !== newState.height){\n          newState.height = chartHeight;\n          if (!newState.width){\n            newState.width = chartHeight;\n          }\n        }\n      }\n    }\n\n    if (!newState.height && this.props.height && this.props.height !== newState.height) {\n      newState.height = this.props.height;\n    }\n\n    newState.height = newState.height || newState.width;\n\n    if (Object.keys(newState).length>0){\n      this.setState(newState);\n    }\n  };\n\n  render() {\n    const ChartType = this.props.type;\n\n    const height = this.state.height && !isNaN(this.state.height) ? parseInt(this.state.height) : 350;\n    const width = this.state.width && !isNaN(this.state.width) ? parseInt(this.state.width) : 0;\n\n    let chartProps = Object.assign({},this.props);\n    chartProps = {\n      ...chartProps,\n      height,\n      width\n    }\n\n    return chartProps.showLoader && (!chartProps.data || !width || !height) ? (\n      <FlexLoader\n        flexProps={{\n          flexDirection:'row',\n          minHeight:height\n        }}\n        loaderProps={ this.props.loaderProps ? this.props.loaderProps : {\n          size:'30px'\n        }}\n        textProps={{\n          ml:2\n        }}\n        text={ this.props.loaderText !== undefined ? this.props.loaderText : 'Loading graph data...'}\n      />\n    ) : this.props.data && (\n      <ChartType\n        {...chartProps}\n      />\n    )\n  }\n}\n\nexport default GenericChart;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gradientButton\":\"Header_gradientButton__2mrQl\",\"empty\":\"Header_empty__3fhiX\",\"select\":\"Header_select__27Xyx\",\"selectDark\":\"Header_selectDark__EHAAP\",\"input\":\"Header_input__3dr8P\"};","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\n\nclass ExecuteTransaction extends Component {\n\n  state = {\n    txStatus:null,\n    processing:{\n      txHash:null,\n      loading:false\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async execute(){\n\n    const callback = (tx,error) => {\n\n      // console.log('callback',tx,error);\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Transaction',\n        eventLabel: this.props.methodName,\n        eventAction: this.props.contractName\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      const txSucceeded = tx && tx.status === 'success';\n      if (txSucceeded){\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx);\n        }\n      }\n\n      this.setState({\n        processing: {\n          txHash:null,\n          loading:false\n        },\n        txStatus:tx ? tx.status : null\n      });\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        txStatus:'processing',\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.setState((prevState) => ({\n      txStatus:'loading',\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    let params = this.props.params;\n    if (typeof this.props.getTransactionParams === 'function'){\n      params = this.props.getTransactionParams();\n    } else if (typeof this.props.getTransactionParamsAsync === 'function'){\n      params = await this.props.getTransactionParamsAsync();\n    } else if (typeof this.props.transactionParams === 'object'){\n      params = this.props.transactionParams;\n    }\n\n    if (!params){\n      this.setState((prevState) => ({\n        txStatus:null,\n        processing: {\n          ...prevState.processing,\n          loading:false\n        }\n      }));\n      return false;\n    }\n\n    if (this.props.sendRawTransaction){\n      this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,params,callback,callbackReceipt,null,true,params);\n    } else {\n      this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,params,callback,callbackReceipt);\n    }\n  }\n\n  render() {\n    const ExecuteComponent = this.props.Component;\n    return (\n      <Flex\n        {...this.props.parentProps}\n      >\n        {\n          this.state.txStatus === 'success' && this.props.children ?\n            this.props.children\n          : this.state.processing && this.state.processing.loading ? (\n            <TxProgressBar\n              web3={this.props.web3}\n              network={this.props.network}\n              {...this.props.progressBarProps}\n              hash={this.state.processing.txHash}\n              cancelTransaction={this.cancelTransaction.bind(this)}\n              endMessage={`Finalizing ${this.props.action} request...`}\n              waitText={`${this.functionsUtil.capitalize(this.props.action)} estimated in`}\n            />\n          ) : (\n            <ExecuteComponent\n              onClick={this.execute.bind(this)}\n              {...this.props.componentProps}\n            >\n              {this.props.componentProps.value}\n            </ExecuteComponent>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default ExecuteTransaction;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"Tos_headerContainer__23W_f\",\"headerBgFiller\":\"Tos_headerBgFiller__36Nfk\",\"bgContainer\":\"Tos_bgContainer__rX7uJ\",\"list\":\"Tos_list__3bMLG\",\"textContainer\":\"Tos_textContainer__3hUuq\"};","import theme from '../theme';\nimport React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ShortHash from \"../utilities/components/ShortHash\";\nimport { Flex, Text, Icon, Link, Image } from \"rimble-ui\";\n\nclass TransactionField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const hashChanged = prevProps.hash !== this.props.hash;\n    const accountChanged = prevProps.account !== this.props.account;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    if (fieldChanged || hashChanged || accountChanged){\n      this.loadField();\n    }\n  }\n\n  async loadField(){\n    const fieldInfo = this.props.fieldInfo;\n    if (this.props.hash && this.props.account){\n      switch (fieldInfo.name){\n        case 'icon':\n        break;\n        case 'hash':\n          \n        break;\n        case 'action':\n          \n        break;\n        case 'date':\n        break;\n        case 'status':\n        break;\n        case 'amount':\n        break;\n        case 'asset':\n        break;\n        case 'custom':\n        break;\n        default:\n        break;\n      }\n    }\n  }\n\n  render(){\n    let icon = null;\n    let color = null;\n    let output = null;\n    const fieldInfo = this.props.fieldInfo;\n    const transaction = this.props.transaction;\n    let bgColor = theme.colors.transactions.actionBg.default;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      style:{\n        maxWidth:'100%',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis'\n      },\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    switch (fieldInfo.name){\n      case 'icon':\n        if (transaction.action){\n          color = theme.colors.transactions.action[transaction.action.toLowerCase()] ? theme.colors.transactions.action[transaction.action.toLowerCase()] : color;\n          bgColor = theme.colors.transactions.actionBg[transaction.action.toLowerCase()] ? theme.colors.transactions.actionBg[transaction.action.toLowerCase()] : bgColor;\n        }\n        switch (transaction.action.toLowerCase()) {\n          case 'deposit':\n          case 'curveout':\n          case 'curvezapout':\n          case 'curvedepositout':\n            icon = \"ArrowDownward\";\n          break;\n          case 'boost':\n            icon = \"TrendingUp\";\n          break;\n          case 'redeem':\n          case 'curvein':\n          case 'curvezapin':\n          case 'curvedepositin':\n            icon = \"ArrowUpward\";\n          break;\n          case 'send':\n            icon = \"Send\";\n          break;\n          case 'receive':\n            icon = \"Redo\";\n          break;\n          case 'migrate':\n            // icon = \"Sync\";\n            icon = \"Repeat\";\n          break;\n          case 'swap':\n            icon = \"SwapHoriz\";\n          break;\n          case 'swapout':\n            icon = \"SwapHoriz\";\n          break;\n          case 'withdraw':\n            icon = \"ArrowUpward\";\n          break;\n          default:\n            icon = \"Refresh\";\n          break;\n        }\n        output = (\n          <Flex\n            p={'5px'}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            backgroundColor={bgColor}\n            justifyContent={'center'}\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={this.props.isMobile ? '1em' : '1.4em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'hash':\n        if (transaction.hash){\n          output = (\n            <Link\n              target={'_blank'}\n              rel={'nofollow noopener noreferrer'}\n              href={`https://etherscan.io/tx/${transaction.hash}`}\n            >\n              <ShortHash\n                fontSize={1}\n                color={'white'}\n                {...fieldProps}\n                resolveAddress={false}\n                hash={transaction.hash}\n              />\n            </Link>\n          );\n        }\n      break;\n      case 'action':\n        let action = transaction.action;\n        switch (transaction.action) {\n          case 'Swap':\n            action = \"Swap In\";\n          break;\n          case 'SwapOut':\n            action = \"Swap Out\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Text {...fieldProps}>{action.toUpperCase()}</Text>\n        );\n      break;\n      case 'date':\n        const formattedDate = transaction.momentDate.format('DD MMM, YYYY');\n        output = (\n          <Text {...fieldProps}>{formattedDate}</Text>\n        );\n      break;\n      case 'statusIcon':\n        color = theme.colors.transactions.status[transaction.status.toLowerCase()];\n        switch (transaction.status) {\n          case 'Completed':\n            icon = \"Done\";\n          break;\n          case 'Pending':\n            icon = \"Timelapse\";\n          break;\n          case 'Failed':\n            icon = \"ErrorOutline\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Flex\n            p={[0,'1px']}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            width={['24px','26px']}\n            height={['24px','26px']}\n            justifyContent={'center'}\n            border={ this.props.isMobile ? `1px solid ${color}` : `2px solid ${color}` }\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={ this.props.isMobile ? '1em' : '1.2em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'status':\n        output = (\n          <Text {...fieldProps}>{transaction.status}</Text>\n        );\n      break;\n      case 'amount':\n        output = (\n          <SmartNumber {...fieldProps} number={transaction.amount} />\n        );\n      break;\n      case 'tokenIcon':\n        const tokenSymbol = transaction.tokenSymbol.toUpperCase();\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',tokenSymbol]);\n        const iconSrc = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${tokenSymbol}.svg`;\n        output = (\n          <Image src={iconSrc} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        output = (\n          <Text {...fieldProps}>{transaction.tokenSymbol.toUpperCase()}</Text>\n        );\n      break;\n      case 'custom':\n        let CustomComponent = null;\n        let customValue = this.functionsUtil.getArrayPath(fieldInfo.path,this.props.transaction);\n        switch (fieldInfo.type){\n          case 'number':\n            customValue = this.functionsUtil.BNify(customValue).toString();\n            CustomComponent = SmartNumber;\n            fieldProps.number = customValue;\n            customValue = null;\n          break;\n          case 'image':\n            CustomComponent = Image;\n            fieldProps.src = customValue;\n            customValue = null;\n          break;\n          case 'icon':\n            CustomComponent = Icon;\n            fieldProps.name = customValue;\n            customValue = null;\n          break;\n          default:\n            CustomComponent = Text;\n          break;\n        }\n        output = customValue ? (\n          <CustomComponent {...fieldProps}>{customValue}</CustomComponent>\n        ) : <CustomComponent {...fieldProps} />\n      break;\n      default:\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TransactionField;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Box,\n  Button,\n  Flex,\n  Image\n} from \"rimble-ui\";\nimport Select from 'react-select';\nimport ModalCard from './ModalCard';\nimport ImageButton from '../../ImageButton/ImageButton';\nimport styles from './Header.module.scss';\nimport globalConfigs from '../../configs/globalConfigs';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass BuyModal extends React.Component {\n\n  state = {\n    selectedMethod:null,\n    availableMethods:[],\n    selectedCountry:null,\n    selectedProvider:null,\n    availableProviders:null,\n    selectedToken:this.props.buyToken,\n  }\n\n  async loadRemoteResources() {\n\n    if (!this.state.selectedToken){\n      return false;\n    }\n\n    // Load payments providers external remote resources\n    Object.keys(globalConfigs.payments.providers).forEach((provider,i) => {\n\n      const providerInfo = globalConfigs.payments.providers[provider];\n      if (providerInfo.enabled && providerInfo.remoteResources && (providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1)){\n        \n        const remoteResources = providerInfo.remoteResources;\n\n        Object.keys(remoteResources).forEach((url,j) => {\n\n          const resourceType = url.split('.').pop().toLowerCase();\n\n          switch (resourceType){\n            case 'js':\n              const scriptID = `script_${provider}_${j}_${this.state.selectedToken}`;\n\n              if (!document.getElementById(scriptID)){\n                const script = document.createElement(\"script\");\n                const remoteResourceParams = remoteResources[url];\n                const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n                const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n                if (precall && typeof precall === 'function'){\n                  precall(this.state,globalConfigs,providerInfo);\n                }\n\n                if (callback && typeof callback === 'function'){\n                  if (script.readyState) {  // only required for IE <9\n                    script.onreadystatechange = function() {\n                      if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                        script.onreadystatechange = null;\n                        callback();\n                      }\n                    };\n                  } else {  //Others\n                    script.onload = callback;\n                  }\n                }\n\n                script.id = scriptID;\n                script.className = `script_${provider}`;\n                script.src = url;\n                script.async = true;\n\n                if (remoteResourceParams && remoteResourceParams.parentElement){\n                  remoteResourceParams.parentElement.appendChild(script)\n                } else {\n                  document.head.appendChild(script);\n                }\n              }\n            break;\n            case 'css':\n              const stylesheetId = `stylesheet_${provider}_${j}`;\n\n              if (!document.getElementById(stylesheetId)){\n                const style = document.createElement(\"link\");\n\n                style.id = stylesheetId;\n                style.rel = 'stylesheet';\n                style.href = url;\n\n                document.head.appendChild(style);\n              }\n            break;\n            default:\n            break;\n          }\n        });\n      }\n    });\n  }\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadAvailableMethods(){\n    const availableMethods = {};\n    const availableMethodsKeys = this.props.availableMethods && this.props.availableMethods.length ? this.props.availableMethods : Object.keys(globalConfigs.payments.methods);\n\n    availableMethodsKeys.forEach(method => {\n      const availableProviders = this.getAvailablePaymentProviders(method,this.state.selectedToken);\n      if (availableProviders && availableProviders.length>0){\n        const methodInfo = globalConfigs.payments.methods[method];\n        methodInfo.availableProviders = availableProviders;\n        availableMethods[method] = methodInfo;\n      }\n    });\n\n    this.setState({\n      availableMethods\n    });\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n\n    this.loadAvailableMethods();\n    this.loadRemoteResources();\n  }\n\n  async componentDidMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps) {\n\n    this.loadUtils();\n\n    if ( this.props.buyToken && prevProps.buyToken !== this.props.buyToken){\n      this.selectToken(null,this.props.buyToken);\n    }\n  }\n\n  renderPaymentMethod = async (e,provider,buyParams) => {\n\n    const onSuccess = async (tx) => {\n      // Toast message\n      window.toastProvider.addMessage(`Deposit completed`, {\n        secondaryMessage: `Your ${this.state.selectedToken} have been deposited`,\n        colorTheme: 'light',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"success\",\n      });\n\n      this.props.getAccountBalance();\n    };\n\n    const onClose = async (e) => {\n      return true;\n    }\n\n    const paymentProvider = globalConfigs.payments.providers[provider];\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(this.props,globalConfigs,buyParams,onSuccess,onClose) : null;\n\n    // Render the Payment Provider\n    switch (provider){\n      default:\n        if (typeof paymentProvider.render === 'function'){\n          const currentState = Object.assign({},this.state);\n          paymentProvider.render(initParams,null,currentState,globalConfigs);\n        }\n      break;\n    }\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_provider',\n        eventLabel: provider\n      });\n\n      this.closeModal(e);\n    } else {\n      this.closeModal(e);\n    }\n  }\n\n  goBack = (e) => {\n    e.preventDefault();\n\n    if (this.state.selectedProvider){\n      this.setState({\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedMethod){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedToken){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n        selectedToken:this.props.buyToken,\n      });\n    } else {\n      this.resetModal();\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      selectedMethod:null,\n      selectedCountry:null,\n      selectedProvider:null,\n      availableProviders:null,\n      selectedToken:this.props.buyToken\n    });\n\n    this.componentWillMount();\n  }\n\n  closeModal = (e) => {\n    this.resetModal();\n    if (!this.props.showInline && typeof this.props.closeModal === 'function'){\n      this.props.closeModal();\n    }\n  }\n\n  getProviderInfo = (provider) => {\n    if (!globalConfigs.payments.providers[provider]){\n      return false;\n    }\n    let providerInfo = globalConfigs.payments.providers[provider];\n    if (typeof providerInfo.getInfo === 'function'){\n      const newProviderInfo = providerInfo.getInfo(this.state);\n      if (newProviderInfo && Object.keys(newProviderInfo).length){\n        providerInfo = Object.assign(providerInfo,newProviderInfo);\n      }\n    }\n    return providerInfo;\n  }\n\n  getDefaultPaymentProvider = (selectedMethod) => {\n    const paymentMethod = this.state.availableMethods[selectedMethod];\n    if (paymentMethod && paymentMethod.defaultProvider){\n      return paymentMethod.defaultProvider;\n    }\n    return null;\n  }\n\n  getAvailablePaymentProviders = (selectedMethod,selectedToken) => {\n    const availableProviders = [];\n\n    Object.keys(globalConfigs.payments.providers).map((provider,i) => {\n      const providerInfo = globalConfigs.payments.providers[provider];\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(selectedMethod) !== -1;\n      const providerSupportToken = selectedToken ? providerInfo.supportedTokens.indexOf(selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n      if (providerInfo.enabled && providerSupportMethod && providerSupportToken ){\n        availableProviders.push(provider);\n      }\n      return provider;\n    });\n\n    const defaultPaymentProvider = this.getDefaultPaymentProvider(selectedMethod);\n\n    if (defaultPaymentProvider && this.state.availableMethods[selectedMethod].showDefaultOnly && availableProviders.indexOf(defaultPaymentProvider) !== -1){\n      return [defaultPaymentProvider];\n    }\n\n    return availableProviders;\n  }\n\n  selectProvider = (e,selectedProvider) => {\n    if (e){\n      e.preventDefault();\n    }\n    \n    if (!selectedProvider || !globalConfigs.payments.providers[selectedProvider]){\n      return this.setState({\n        selectedProvider:null\n      });\n    }\n\n    const providerInfo = globalConfigs.payments.providers[selectedProvider];\n    if (providerInfo){\n\n      if (this.state.selectedToken){\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      const ethAvailable = providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1;\n      const tokenAvailable = providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1;\n\n      // Show tokens to buy if more are available or if the selected one is not\n      const availableTokens = [];\n      if ( (ethAvailable && tokenAvailable) || !tokenAvailable ){\n        if (ethAvailable){\n          availableTokens.push(globalConfigs.baseToken);\n        }\n        if (tokenAvailable){\n          availableTokens.push(this.props.selectedToken);\n        }\n      } else {\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      this.setState({\n        availableTokens,\n        selectedProvider\n      });\n    }\n  }\n\n  selectMethod = (e,selectedMethod) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    if (Object.keys(this.state.availableMethods).indexOf(selectedMethod) !== -1){\n      const availableProviders = this.getAvailablePaymentProviders(selectedMethod,this.state.selectedToken);\n\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_method',\n        eventLabel: selectedMethod\n      });\n\n      this.setState({\n        availableProviders,\n        selectedMethod\n      });\n    }\n  }\n\n  selectToken = (e,selectedToken) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Buy',\n      eventAction: 'select_token',\n      eventLabel: selectedToken\n    });\n\n    this.setState({ selectedToken }, async () => {\n      if (this.state.selectedProvider){\n        return this.renderPaymentMethod(e,this.state.selectedProvider,this.state);\n      } else {\n        this.loadRemoteResources();\n      }\n    });\n  }\n\n  handleCountryChange = selectedCountry => {\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled && selectedCountry){\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_country',\n        eventLabel: selectedCountry.value\n      });\n    }\n\n    this.setState({\n      selectedCountry\n    });\n  }\n\n  getAvailableCountries = () => {\n    const availableCountries = {};\n    this.state.availableProviders.forEach((provider,i) => {\n      const providerInfo = this.getProviderInfo(provider);\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(this.state.selectedMethod) !== -1;\n      const providerSupportToken = this.state.selectedToken ? providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n\n      // Skip disabled provider, not supported selected method or not supported token\n      if (!providerInfo.enabled || !providerSupportMethod || !providerSupportToken ){\n        return;\n      }\n\n      // Get available providers and countries\n      providerInfo.supportedCountries.forEach((countryCode,j) => {\n        if (!availableCountries[countryCode]){\n          availableCountries[countryCode] = {\n            providers:[],\n            label:globalConfigs.countries[countryCode],\n            value:countryCode\n          };\n        }\n        availableCountries[countryCode].providers.push(provider);\n      });\n    });\n\n    return Object.values(availableCountries);\n  }\n\n  render() {\n\n    let title = null;\n    if (this.state.selectedToken === null){\n      title = 'BUY TOKEN';\n    } else {\n      title = 'BUY '+this.state.selectedToken;\n      if (this.state.selectedMethod !== null){\n        title += ' - '+this.state.availableMethods[this.state.selectedMethod].props.caption;\n      }\n    }\n\n    let availableTokens = this.props.availableTokens && Object.keys(this.props.availableTokens).length>0 ? [globalConfigs.baseToken,...Object.keys(this.props.availableTokens)] : [globalConfigs.baseToken];\n\n    // Show all tokens\n    if (this.props.showAllTokens){\n      availableTokens = [];\n      Object.keys(globalConfigs.payments.providers).forEach( provider => {\n        const providerInfo = globalConfigs.payments.providers[provider];\n        if (providerInfo.supportedTokens){\n          providerInfo.supportedTokens.forEach(token => {\n            if (!availableTokens.includes(token)){\n              availableTokens.push(token);\n            }\n          })\n        }\n      });\n    }\n\n    const InnerComponent = props => (\n      <Box minWidth={ this.props.showInline ? 'auto' : ['auto','35em'] }>\n      {\n        this.state.selectedToken === null ? (\n          <Box mb={2}>\n            <Text\n              mb={[2,3]}\n              fontWeight={2}\n              textAlign={'center'}\n              fontSize={[2, this.props.showInline ? 2 : 3]}\n            >\n              Which token do you want to buy?\n            </Text>\n            <Flex\n              mb={4}\n              style={{\n                flexWrap:'wrap'\n              }}\n              alignItems={'center'}\n              justifyContent={'center'}\n              flexDirection={['column','row']}\n            >\n            {\n              availableTokens.map((token,i) => {\n                const imageSrc = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'icon']) || `images/tokens/${token}.svg`;\n                return (\n                  <ImageButton\n                    caption={token}\n                    imageSrc={imageSrc}\n                    key={`token_${token}`}\n                    isMobile={this.props.isMobile}\n                    handleClick={ e => { this.selectToken(e,token); } }\n                    imageProps={ this.props.isMobile ? {height:'42px'} : {p:[2,3],height:'80px'}}\n                    buttonProps={ !this.props.isMobile ? {\n                      style:{\n                        'flex':'0 0 170px'\n                      }\n                    } : null}\n                  />\n                );\n              })\n            }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === null ? (\n          <Box>\n            <Flex mb={3} flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n              {\n                !this.props.showInline &&\n                  <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n              }\n              <Text textAlign={'center'} fontWeight={500} fontSize={[2, this.props.showInline ? 2 : 3]} my={0}>\n                {\n                  this.props.showInline && this.props.buyToken ? `Ops... you don't have any ${this.props.buyToken} in your wallet, how do you prefer do buy some?` : `How do you prefer to buy ${this.state.selectedToken}?`\n                }\n              </Text>\n            </Flex>\n            <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n              {\n                Object.keys(this.state.availableMethods).map((method,i) => {\n                  const methodInfo = this.state.availableMethods[method];\n                  let imageProps = methodInfo.props && methodInfo.props.imageProps ? methodInfo.props.imageProps : {};\n                  const imagePropsExtended = this.props.isMobile ? {height:'42px'} : {height:'70px'};\n                  imageProps = Object.assign(imageProps,imagePropsExtended);\n\n                  return (\n                    <ImageButton\n                      {...methodInfo.props}\n                      buttonProps={{\n                        border:2\n                      }}\n                      key={`method_${method}`}\n                      imageProps={ imageProps }\n                      isMobile={ this.props.isMobile }\n                      handleClick={ e => this.selectMethod(e,method) }\n                    />\n                  );\n                })\n              }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === 'wallet' ? (\n              <Box mt={2} mb={3}>\n                <Text textAlign={'center'} fontWeight={3} fontSize={2} my={0}>\n                  <Box width={'100%'}>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableProviders.length > 0 ?\n                          (\n                            <Box>\n                              <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                                Choose your preferred payment provider:\n                              </Text>\n                              {\n                                this.state.availableProviders.map((provider,i) => {\n                                  const providerInfo = this.getProviderInfo(provider);\n                                  return (\n                                    <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => { this.renderPaymentMethod(e,provider,this.state); } } />\n                                  );\n                                })\n                              }\n                            </Box>\n                          )\n                        : (\n                          <Text textAlign={'center'} fontWeight={3} fontSize={2} my={2}>\n                            Sorry, there are no providers available for the selected method.\n                          </Text>\n                        )\n                      }\n                      </Flex>\n                    </Box>\n                </Text>\n              </Box>\n            ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              {\n                !this.state.selectedProvider &&\n                <Box\n                  mb={3}\n                  width={1}\n                  maxWidth={this.props.showInline ? '31em' : 'initial'}\n                >\n                  {\n                    !this.props.showInline &&\n                      <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n                        <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n                      </Flex>\n                  }\n                  <Text textAlign={'center'} fontWeight={ this.props.showInline ? 2 : 3 } fontSize={2} mb={2}>\n                    Select your country:\n                  </Text>\n                  <Select\n                    bg={'#162e4d'}\n                    backgroundColor={'#162e4d'}\n                    value={this.state.selectedCountry}\n                    placeholder={'Select your country'}\n                    onChange={this.handleCountryChange}\n                    options={this.getAvailableCountries()}\n                    maxWidth={ this.props.showInline && !this.props.isMobile ? '25em' : 'auto' }\n                    noOptionsMessage={ (inputValue) => 'For European countries select Europe' }\n                    className={this.props.themeMode === 'light' ? styles.select : styles.selectDark}\n                  />\n                </Box>\n              }\n              <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'} minHeight={'200px'}>\n                {\n                  !this.state.selectedProvider ?\n                    this.state.selectedCountry !== null ? (\n                      <Box width={'100%'}>\n                        <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                          Choose your preferred payment provider:\n                        </Text>\n                        <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                        {\n                          this.state.selectedCountry.providers.length > 0 ?\n                            this.state.selectedCountry.providers.map((provider,i) => {\n                              const providerInfo = this.getProviderInfo(provider);\n                              return (\n                                <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => {this.selectProvider(e,provider) } } />\n                              );\n                            })\n                          : (\n                            <Text textAlign={'center'} fontWeight={3} fontSize={2} mb={2}>\n                              Sorry, there are no providers available for the selected method.\n                            </Text>\n                          )\n                        }\n                        </Flex>\n                      </Box>\n                    ) : (\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={2}>\n                        Select the country to load the payment providers.\n                      </Text>\n                    )\n                  : false && this.state.availableTokens && this.state.availableTokens.length > 0 && (\n                    <Box mb={2}>\n                      <Flex justifyContent={'center'} my={2}>\n                        <Image src={ globalConfigs.payments.providers[this.state.selectedProvider].imageSrc } height={'35px'} />\n                      </Flex>\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                        Choose which token do you want to buy:\n                      </Text>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableTokens.map((token,i) => {\n                          const imageSrc = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'icon']) || `images/tokens/${token}.svg`;\n                          return (\n                            <ImageButton key={`token_${token}`} imageSrc={imageSrc} caption={token} imageProps={{p:[2,3],height:'80px'}} handleClick={ e => { this.selectToken(e,token); } } />\n                          );\n                        })\n                      }\n                      </Flex>\n                    </Box>\n                  )\n                }\n              </Flex>\n            </Flex>\n          )\n      }\n        {\n          this.props.showInline && this.state.selectedToken !== null  && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n            <Flex\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Button\n                my={2}\n                mx={[0, 2]}\n                size={'medium'}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.goBack(e) }\n              >\n                GO BACK\n              </Button>\n            </Flex>\n          )\n        }\n      </Box>\n    );\n\n    if (this.props.showInline){\n      return (\n        <InnerComponent\n          {...this.props}\n        />\n      );\n    }\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          <ModalCard.Header title={title}>\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <InnerComponent/>\n          </ModalCard.Body>\n          <ModalCard.Footer>\n            <Flex px={[2,0]} flexDirection={['column', 'row']} width={1} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.closeModal(e) }\n                size={this.props.isMobile ? 'small' : 'medium'}\n              >\n              CLOSE\n              </Button>\n              {\n                this.state.selectedToken !== null && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n                  <Button\n                    my={2}\n                    mx={[0, 2]}\n                    borderRadius={4}\n                    onClick={ e => this.goBack(e) }\n                    className={styles.gradientButton}\n                    size={this.props.isMobile ? 'small' : 'medium'}\n                  >\n                    GO BACK\n                  </Button>\n                )\n              }\n            </Flex>\n          </ModalCard.Footer>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default BuyModal;","import FunctionsUtil from './FunctionsUtil';\n\nclass IdleGovToken{\n  // Attributes\n  props = {};\n  tokenName = null;\n  tokenConfig = null;\n  functionsUtil = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.tokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n    this.tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n  }\n\n  getBalance = async () => {\n    let balance = await this.functionsUtil.getTokenBalance(this.tokenName,this.props.account);\n    if (!balance || this.functionsUtil.BNify(balance).isNaN()){\n      balance = this.functionsUtil.BNify(0);\n    }\n    return balance;\n  }\n\n  claimRewards = async (callback,callbackReceipt) => {\n    return this.functionsUtil.contractMethodSendWrapper('EarlyRewards', 'claim', [], callback, callbackReceipt);\n  }\n\n  getPriorVotes = async (account=null) => {\n    account = account ? account : this.props.account;\n    let priorVotes = await this.functionsUtil.genericContractCall(this.tokenName,'getPriorVotes',[account]);\n    if (priorVotes){\n      return this.functionsUtil.BNify(priorVotes);\n    }\n    return null;\n  }\n\n  refreshIdleSpeed = async () => {\n    return this.functionsUtil.genericContractCall('IdleController','refreshIdleSpeeds');\n  }\n\n  getUnclaimedTokens = async () => {\n    /*\n    let rewards =  await this.functionsUtil.genericContractCall('EarlyRewards','rewards',[this.props.account]);\n    if (rewards){\n      return this.functionsUtil.fixTokenDecimals(rewards,this.tokenConfig.decimals);\n    }\n    */\n    return this.functionsUtil.BNify(0);\n  }\n\n  getAPR = async (token,tokenConfig,conversionRate=null) => {\n    const IDLETokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n    if (!IDLETokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getIdleAPR_${tokenConfig.idle.token}_${conversionRate}`;\n    /*\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n    */\n\n    let APR = this.functionsUtil.BNify(0);\n\n    const [\n      idleDistribution,\n      tokenAllocation\n    ] = await Promise.all([\n      this.getDistribution(tokenConfig),\n      this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    if (idleDistribution && tokenAllocation){\n\n      const DAITokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get IDLE oconversion rate\n      if (!conversionRate){\n        try {\n          conversionRate = await this.functionsUtil.getUniswapConversionRate(DAITokenConfig,IDLETokenConfig);\n        } catch (error) {\n\n        }\n        if (!conversionRate || conversionRate.isNaN()){\n          conversionRate = this.functionsUtil.BNify(0);\n        }\n      }\n\n      if (!conversionRate || this.functionsUtil.BNify(conversionRate).lte(0)){\n        return this.functionsUtil.BNify(0);\n      }\n\n      const tokenPool = await this.functionsUtil.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig);\n\n      const idleDistributedPerYearUSD = this.functionsUtil.BNify(conversionRate).times(idleDistribution);\n      APR = idleDistributedPerYearUSD.div(tokenPool).times(100);\n\n      // console.log(tokenConfig.idle.token,idleDistributedPerYearUSD.toFixed(5),conversionRate.toFixed(5),tokenPool.toFixed(5),APR.toFixed(5));\n\n      return this.functionsUtil.setCachedData(cachedDataKey,APR);\n    }\n\n    return APR;\n  }\n\n  // Get IDLE distribution speed\n  getSpeed = async (idleTokenAddress) => {\n\n    const cachedDataKey = `getIdleSpeed_${idleTokenAddress}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    let idleSpeeds = await this.functionsUtil.genericContractCall('IdleController','idleSpeeds',[idleTokenAddress]);\n\n    if (idleSpeeds && !this.functionsUtil.BNify(idleSpeeds).isNaN()){\n      idleSpeeds = this.functionsUtil.BNify(idleSpeeds);\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,idleSpeeds,1800);\n    }\n    return null;\n  }\n\n  getDistribution = async (tokenConfig) => {\n\n    const cachedDataKey = `getIdleDistribution_${tokenConfig.idle.token}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    // Get IDLE distribution speed and Total Supply\n    const idleSpeeds = await this.getSpeed(tokenConfig.idle.address);\n\n    if (idleSpeeds){\n\n      // Get IDLE distribution for Idle in a Year\n      const blocksPerYear = this.functionsUtil.getGlobalConfig(['network','blocksPerYear']);\n\n      // Take 50% of distrubution for lenders side\n      const distribution = this.functionsUtil.BNify(idleSpeeds).times(this.functionsUtil.BNify(blocksPerYear)).div(1e18);\n\n      if (!this.functionsUtil.BNify(distribution).isNaN()){\n        return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,distribution);\n      }\n    }\n\n    return null;\n  }\n\n  getUserDistribution = async (account=null,availableTokens=null,fixByFrequency=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    const currentNetworkId = this.functionsUtil.getRequiredNetworkId();\n\n    let totalSpeed = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n\n      const disabledTokens = this.functionsUtil.getArrayPath(['disabledTokens',currentNetworkId],this.tokenConfig);\n\n      if (disabledTokens.includes(tokenConfig.idle.token)){\n        return;\n      }\n\n      const [\n        idleSpeed,\n        userPoolShare\n      ] = await Promise.all([\n        this.getSpeed(tokenConfig.idle.address),\n        this.functionsUtil.getUserPoolShare(account,tokenConfig)\n      ]);\n\n      if (idleSpeed && userPoolShare){\n        const tokenSpeed = idleSpeed.times(userPoolShare);\n        totalSpeed = totalSpeed.plus(tokenSpeed);\n      }\n    });\n\n    if (fixByFrequency){\n      totalSpeed = this.functionsUtil.fixTokenDecimals(totalSpeed,this.tokenConfig.decimals);\n      totalSpeed = this.functionsUtil.fixDistributionSpeed(totalSpeed,this.tokenConfig.distributionFrequency)\n    }\n\n    return totalSpeed;\n  }\n\n  getAvgApr = async (availableTokens=null) => {\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.functionsUtil.BNify(0);\n    let totalAllocation = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [idleApr,tokenAllocation] = await Promise.all([\n        this.getAPR(token,tokenConfig),\n        this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (idleApr && tokenAllocation){\n        output = output.plus(idleApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n\n}\n\nexport default IdleGovToken;","import Web3 from \"web3\";\nimport React from \"react\";\nimport axios from 'axios';\nimport moment from 'moment';\nimport { Text } from \"rimble-ui\";\nimport BigNumber from 'bignumber.js';\nimport IdleGovToken from './IdleGovToken';\nimport { toBuffer } from \"ethereumjs-util\";\nimport globalConfigs from '../configs/globalConfigs';\nimport ENS, { getEnsAddress } from '@ensdomains/ensjs';\nimport availableTokens from '../configs/availableTokens';\nimport IAaveIncentivesController from '../abis/aave/IAaveIncentivesController.json';\n\nconst ethereumjsABI = require('ethereumjs-abi');\n\nwindow.profiler = {};\n\nclass FunctionsUtil {\n\n  // Attributes\n  props = {};\n  idleGovToken = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n  }\n  trimEth = eth => {\n    return this.BNify(eth).toFixed(6);\n  }\n  toBN = n => new this.props.web3.utils.BN(n)\n  toEth = wei => {\n    if (!this.props.web3){\n      return null;\n    }\n    return this.props.web3.utils.fromWei(\n      (wei || 0).toString(),\n      \"ether\"\n    );\n  }\n  toWei = eth => {\n    if (!this.props.web3){\n      return null;\n    }\n    return this.props.web3.utils.toWei(\n      (eth || 0).toString(),\n      \"ether\"\n    );\n  }\n  htmlDecode = input => {\n    var e = document.createElement('textarea');\n    e.innerHTML = input;\n    return e.childNodes.length === 0 ? '' : e.childNodes[0].nodeValue;\n  }\n  BNify_obj = s => new BigNumber(s)\n  BNify = s => new BigNumber( typeof s === 'object' ? s : String(s) )\n  customLog = (...props) => { if (globalConfigs.logs.messagesEnabled) this.customLog(moment().format('HH:mm:ss'),...props); }\n  customLogError = (...props) => { if (globalConfigs.logs.errorsEnabled) console.error(moment().format('HH:mm:ss'),...props); }\n  getContractByName = (contractName,networkId=null) => {\n    networkId = networkId || this.props.network.required.id;\n    let contract = this.props.contracts.find(c => c && c.name && c.name === contractName);\n    if (this.props.network && this.props.network.required && this.props.network.current && (!this.props.network.isCorrectNetwork || networkId !== this.props.network.current.id) && this.props.contractsNetworks && this.props.contractsNetworks[networkId]){\n      contract = this.props.contractsNetworks[networkId].find(c => c && c.name && c.name === contractName);\n    } else {\n      contract = this.props.contracts.find(c => c && c.name && c.name === contractName);\n    }\n    if (!contract) {\n      return false;\n    }\n    return contract.contract;\n  }\n  normalizeSimpleIDNotification = (n) => {\n    return n.replace(/<\\/p><p>/g,\"\\n\")\n            .replace(/<p>/g,\"\")\n            .replace(/<br>/g,\"\")\n            .replace(/&nbsp;/g,\" \")\n            .replace(/<\\/p>/g,\"\");\n  }\n  capitalize = (str) => {\n    return str ? str.substr(0,1).toUpperCase()+str.substr(1) : '';\n  }\n  strToMoment = (date,format=null) => {\n    return moment(date,format);\n  }\n  replaceArrayProps = (arr1,arr2) => {\n    if (arr2 && Object.keys(arr2).length){\n      Object.keys(arr2).forEach(p => {\n        arr1[p] = arr2[p];\n      });\n    }\n\n    return arr1;\n  }\n  replaceArrayPropsRecursive = (arr1,arr2,props=null) => {\n    if (arr2 && Object.keys(arr2).length){\n      Object.keys(arr2).forEach(p => {\n        if (typeof arr2[p]==='function'){\n          arr1[p] = arr2[p](props);\n        } else if (typeof arr2[p]==='object'){\n          arr1[p] = {...arr1[p],...this.replaceArrayPropsRecursive(arr1,arr2[p],props)};\n        } else {\n          arr1[p] = arr2[p];\n        }\n      });\n    }\n    return arr1;\n  }\n  stripHtml = (html) => {\n     var tmp = document.createElement(\"DIV\");\n     tmp.innerHTML = html;\n     return tmp.textContent || tmp.innerText || \"\";\n  }\n  // VanillaJS function for smooth scroll\n  scrollTo = (to, duration) => {\n    const start = window.scrollY;\n    const change = to - start;\n    const increment = 20;\n    let currentTime = 0;\n\n    Math.easeInOutQuad = function (t, b, c, d) {\n      t /= d/2;\n      if (t < 1) return c/2*t*t + b;\n      t--;\n      return -c/2 * (t*(t-2) - 1) + b;\n    };\n\n    const animateScroll = () => {\n        currentTime += increment;\n        var val = Math.easeInOutQuad(currentTime, start, change, duration);\n        window.scrollTo(0,val);\n        if(currentTime < duration) {\n          window.setTimeout(animateScroll, increment);\n        }\n    };\n\n    animateScroll();\n  }\n  getQueryStringParameterByName = (name, url = window.location.href) => {\n    // eslint-disable-next-line\n    name = name.replace(/[\\[\\]]/g, '\\\\$&');\n    var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\n        results = regex.exec(url);\n    if (!results) return null;\n    if (!results[2]) return '';\n    return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n  }\n  getTxAction = (tx,tokenConfig) => {\n\n    if (!tokenConfig.idle){\n      return null;\n    }\n\n    const idleTokenAddress = tokenConfig.idle.address;\n    const depositProxyContractInfo = this.getGlobalConfig(['contract','methods','deposit','proxyContract']);\n    const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n    const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n    const batchMigration = this.getGlobalConfig(['tools','batchMigration','props','availableTokens',tokenConfig.idle.token]);\n    const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n    const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();    \n    const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).indexOf(tx.from.toLowerCase()) !== -1 ) && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase());\n    const isSendTransferTx = !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isReceiveTransferTx = !isMigrationTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isDepositTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && (tx.to.toLowerCase() === idleTokenAddress.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase()));\n    const isRedeemTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && tx.to.toLowerCase() === this.props.account.toLowerCase();\n    const isSwapTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && !isDepositTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n\n    let action = null;\n\n    if (isDepositTx){\n      action = 'Deposit';\n    } else if (isRedeemTx){\n      action = 'Redeem';\n    } else if (isMigrationTx){\n      action = 'Migrate';\n    } else if (isSendTransferTx){\n      action = 'Send';\n    } else if (isReceiveTransferTx){\n      action = 'Receive';\n    } else if (isSwapTx){\n      action = 'Swap';\n    } else if (isSwapTx){\n      action = 'SwapOut';\n    }\n\n    return action;\n  }\n  shortenHash = hash => {\n    let shortHash = hash;\n    const txStart = shortHash.substr(0, 7);\n    const txEnd = shortHash.substr(shortHash.length - 4);\n    shortHash = txStart + \"...\" + txEnd;\n    return shortHash;\n  }\n  addEthereumChain = (chainId) => {\n    const web3 = this.getCurrentWeb3();\n\n    // console.log('addEthereumChain',chainId,web3.utils,typeof web3.currentProvider.request);\n\n    if (!web3 || !web3.utils || !web3.currentProvider || typeof web3.currentProvider.request !== 'function'){\n      return false;\n    }\n\n    chainId = parseInt(chainId);\n    const networkConfig = this.getGlobalConfig(['network','availableNetworks',chainId]);\n\n    // console.log('networkConfig',networkConfig);\n\n    if (!networkConfig){\n      return false;\n    }\n\n    const chainName = networkConfig.chainName || networkConfig.name;\n    const providerConfig = this.getGlobalConfig(['network','providers',networkConfig.provider]);\n    const blockExplorerUrl = this.getGlobalConfig(['network','providers',networkConfig.explorer,'baseUrl',chainId]);\n    const rpcUrl = (providerConfig.publicRpc && providerConfig.publicRpc[chainId]) || (providerConfig.rpc[chainId]+providerConfig.key);\n    const params = [{\n      chainName,\n      rpcUrls:[rpcUrl],\n      chainId: web3.utils.toHex(chainId),\n      nativeCurrency: {\n        decimals: 18,\n        name: networkConfig.baseToken,\n        symbol: networkConfig.baseToken\n      },\n      blockExplorerUrls: [blockExplorerUrl]\n    }];\n\n    // console.log('addEthereumChain',params);\n\n    web3.currentProvider.request({\n      params,\n      method:'wallet_addEthereumChain',\n    })\n  }\n  getENSName = async (address) => {\n\n    const networkId = this.getRequiredNetworkId();\n    const ensConfig = this.getGlobalConfig(['network','providers','ens']);\n\n    if (!ensConfig.enabled || !ensConfig.supportedNetworks.includes(networkId)){\n      return null;\n    }\n\n    if (!this.checkAddress(address) || !this.props.web3){\n      return null;\n    }\n\n    const cachedDataKey = `getENSName_${address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const TTL = 3600;\n    const provider = this.props.web3.currentProvider;\n    if (networkId === 1){\n      const ens = new ENS({ provider, ensAddress: getEnsAddress(networkId.toString()) });\n      const ensName = await ens.getName(address);\n      if (ensName && ensName.name){\n        const addressCheck = await ens.name(ensName.name).getAddress();\n        if (addressCheck && address.toLowerCase() === addressCheck.toLowerCase()){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,ensName.name,TTL);\n        }\n      }\n    }\n\n    return null;\n  }\n  getAccountPortfolioTranches = async (availableTranches=null,account=null) => {\n    const portfolio = {\n      transactions:[],\n      tranchesBalance:[],\n      avgAPY:this.BNify(0),\n      totalBalance:this.BNify(0),\n      totalEarnings:this.BNify(0),\n      totalAmountLent:this.BNify(0),\n      totalEarningsPerc:this.BNify(0),\n    };\n\n    availableTranches = availableTranches ? availableTranches : this.props.availableTranches;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTranches){\n      return portfolio;\n    }\n\n    const tranches = this.getGlobalConfig(['tranches']);\n\n    await this.asyncForEach(Object.keys(availableTranches),async (protocol) => {\n      const protocolConfig = availableTranches[protocol];\n      await this.asyncForEach(Object.keys(protocolConfig),async (token) => {\n        const tokenConfig = protocolConfig[token];\n        await this.asyncForEach(Object.keys(tranches),async (tranche) => {\n          const trancheConfig = tokenConfig[tranche];\n          const trancheTokenBalance = await this.loadTrancheFieldRaw('trancheDeposited',{},protocol,token,tranche,tokenConfig,trancheConfig,account);\n\n          // console.log('trancheTokenBalance',protocol,token,tranche,trancheTokenBalance);\n\n          if (trancheTokenBalance){\n            const [\n              tranchePool,\n              tranchePrice,\n            ] = await Promise.all([\n              this.loadTrancheFieldRaw('tranchePool',{},protocol,token,tranche,tokenConfig,trancheConfig,account),\n              this.loadTrancheFieldRaw('tranchePrice',{},protocol,token,tranche,tokenConfig,trancheConfig,account)\n            ]);\n            const tokenBalance = trancheTokenBalance.times(tranchePrice);\n\n            if (!this.BNify(tranchePrice).isNaN() && !this.BNify(tokenBalance).isNaN()){\n              const [\n                trancheUserInfo,\n                trancheApy,\n              ] = await Promise.all([\n                this.getTrancheUserInfo(tokenConfig,trancheConfig,account),\n                this.loadTrancheFieldRaw('trancheApy',{},protocol,token,tranche,tokenConfig,trancheConfig,account),\n              ]);\n\n              const poolShare = tokenBalance.div(tranchePool);\n              const amountDeposited = trancheUserInfo.amountDeposited;\n              const trancheEarnings = tokenBalance.minus(amountDeposited);\n\n              // console.log('trancheBalance',protocol,token,tranche,'trancheTokenBalance',trancheTokenBalance.toFixed(),'tranchePrice',tranchePrice.toFixed(),'tokenBalance',tokenBalance.toFixed(),'trancheApy',trancheApy.toFixed(),'amountDeposited',amountDeposited.toFixed());\n              portfolio.transactions = [...portfolio.transactions,...trancheUserInfo.transactions];\n\n              portfolio.tranchesBalance.push({\n                token,\n                tranche,\n                protocol,\n                poolShare,\n                trancheApy,\n                tranchePrice,\n                tokenBalance,\n                trancheEarnings,\n                amountDeposited, \n                trancheTokenBalance\n              });\n\n              // console.log(protocol,token,tranche,amountDeposited.toFixed(),tokenBalance.toFixed(),trancheEarnings.toFixed());\n\n              // Increment total balance\n              portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalance);\n            }\n          }\n        });\n      });\n    });\n\n    let avgAPY = this.BNify(0);\n    let totalEarnings = this.BNify(0);\n    let totalAmountLent = this.BNify(0);\n    let totalEarningsPerc = this.BNify(0);\n\n    // Calculate aggregated data\n    portfolio.tranchesBalance.forEach( trancheInfo => {\n      const trancheApy = this.BNify(trancheInfo.trancheApy);\n      const trancheWeight = trancheInfo.tokenBalance.div(portfolio.totalBalance);\n\n      // Add tranche weight\n      trancheInfo.trancheWeight = trancheWeight;\n\n      if (trancheInfo.trancheEarnings){\n        totalEarnings = totalEarnings.plus(trancheInfo.trancheEarnings);\n      }\n\n      if (trancheApy){\n        avgAPY = avgAPY.plus(trancheApy.times(trancheWeight));\n      }\n\n      if (trancheInfo.amountDeposited){\n        totalAmountLent = totalAmountLent.plus(trancheInfo.amountDeposited);\n      }\n    });\n\n    if (totalAmountLent.gt(0)){\n      totalEarningsPerc = totalEarnings.div(totalAmountLent).times(100);\n    }\n\n    portfolio.avgAPY = avgAPY;\n    portfolio.totalEarnings = totalEarnings;\n    portfolio.totalAmountLent = totalAmountLent;\n    portfolio.totalEarningsPerc = totalEarningsPerc;\n\n    return portfolio;\n  }\n  getAccountPortfolio = async (availableTokens=null,account=null) => {\n    const portfolio = {\n      tokensBalance:{},\n      tokensToMigrate:{},\n      avgAPY:this.BNify(0),\n      totalBalance:this.BNify(0),\n      totalEarnings:this.BNify(0),\n      totalAmountLent:this.BNify(0),\n      totalEarningsPerc:this.BNify(0),\n      totalBalanceConverted:this.BNify(0)\n    };\n\n    availableTokens = availableTokens ? availableTokens : this.props.availableTokens;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTokens){\n      return portfolio;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [\n        {\n          migrationEnabled,\n          oldContractBalanceFormatted\n        },\n        idleTokenBalance\n      ] = await Promise.all([\n        this.checkMigration(tokenConfig,this.props.account),\n        this.getTokenBalance(tokenConfig.idle.token,account)\n      ]);\n\n      if (migrationEnabled){\n        const tokenKey = this.props.selectedStrategy ? token : tokenConfig.idle.token;\n        portfolio.tokensToMigrate[tokenKey] = {\n          token,\n          tokenConfig,\n          oldContractBalanceFormatted,\n          strategy:this.props.selectedStrategy\n        };\n      }\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = idleTokenBalance.times(tokenPrice);\n        const tokenBalanceConverted = await this.convertTokenBalance(tokenBalance,token,tokenConfig,isRisk);\n\n        if (!tokenPrice.isNaN() && !tokenBalance.isNaN()){\n          portfolio.tokensBalance[token] = {\n            tokenPrice,\n            tokenBalance,\n            idleTokenBalance,\n            tokenBalanceConverted\n          };\n\n          // Increment total balance\n          portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalance);\n          portfolio.totalBalanceConverted = portfolio.totalBalanceConverted.plus(tokenBalanceConverted);\n        }\n      }\n    });\n\n    const orderedTokensBalance = {};\n    Object.keys(availableTokens).forEach( token => {\n      if (portfolio.tokensBalance[token]){\n        orderedTokensBalance[token] = portfolio.tokensBalance[token];\n      }\n    });\n\n    portfolio.tokensBalance = orderedTokensBalance;\n\n    const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n    let avgAPY = this.BNify(0);\n    let totalEarnings = this.BNify(0);\n    let totalAmountLent = this.BNify(0);\n    let totalEarningsPerc = this.BNify(0);\n    // const amountLents = await this.getAmountLent(depositedTokens,this.props.account);\n\n    await this.asyncForEach(depositedTokens,async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [\n        tokenAprs,\n        amountDeposited\n      ] = await Promise.all([\n        this.getTokenAprs(tokenConfig),\n        this.getAmountDeposited(tokenConfig,account)\n      ]);\n\n      const tokenBalanceConverted = portfolio.tokensBalance[token].tokenBalanceConverted;\n\n      const tokenAPY = this.BNify(tokenAprs.avgApy);\n      const tokenWeight = tokenBalanceConverted.div(portfolio.totalBalanceConverted);\n      const amountLentToken = await this.convertTokenBalance(amountDeposited,token,tokenConfig,isRisk);\n      const tokenEarnings = tokenBalanceConverted.minus(amountLentToken);\n\n      if (tokenEarnings){\n        totalEarnings = totalEarnings.plus(tokenEarnings);\n      }\n\n      if (tokenAPY){\n        avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n      }\n\n      if (amountLentToken){\n        totalAmountLent = totalAmountLent.plus(amountLentToken);\n      }\n\n      // console.log(token,amountLentToken.toFixed(),tokenEarnings.toFixed(),tokenBalanceConverted.toFixed());\n    });\n\n    if (totalAmountLent.gt(0)){\n      totalEarningsPerc = totalEarnings.div(totalAmountLent).times(100);\n    }\n\n    portfolio.avgAPY = avgAPY;\n    portfolio.totalEarnings = totalEarnings;\n    portfolio.totalAmountLent = totalAmountLent;\n    portfolio.totalEarningsPerc = totalEarningsPerc;\n\n    // debugger;\n\n    return portfolio;\n  }\n  getCurrentWeb3 = () => {\n    const requiredNetwork = this.getRequiredNetwork();\n    const networkConfig = this.getGlobalConfig(['network','availableNetworks',requiredNetwork.id]);\n    const provider = networkConfig ? networkConfig.provider : 'infura';\n    const web3RpcKey = this.getGlobalConfig(['network','providers',provider,'key']);\n    const web3Rpc = this.getGlobalConfig(['network','providers',provider,'rpc',requiredNetwork.id])+web3RpcKey;\n\n    let currentWeb3 = null;\n    if (window.ethereum) {\n      currentWeb3 = new Web3(window.ethereum);\n    } else if (window.web3) {\n      currentWeb3 = new Web3(window.web3);\n    } else {\n      currentWeb3 = new Web3(new Web3.providers.HttpProvider(web3Rpc));\n    }\n\n    return currentWeb3;\n  }\n  getCurveAvgSlippage = async (enabledTokens=[],account=null,fixDecimals=true) => {\n    account = account ? account : this.props.account;\n\n    if (!account){\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    let processedTxs = {};\n    const processedHashes = {};\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    if (curveTxs && curveTxs.length){\n\n      curveTxs.forEach((tx,index) => {\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice){\n          return false;\n        }\n\n        const tokenAmount = this.BNify(tx.tokenAmount);\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        switch (tx.action){\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn'){\n              if (index>0 && curveTokensBalance.gt(0)){\n                return;\n              }\n            }\n\n            if (!processedTxs[tx.hash]){\n              processedTxs[tx.hash] = {\n                price:null,\n                received:null,\n                slippage:null,\n                deposited:this.BNify(0),\n              };\n            }\n\n            processedTxs[tx.hash].deposited = processedTxs[tx.hash].deposited.plus(tokenAmount);\n            if (processedTxs[tx.hash].received === null){\n              processedTxs[tx.hash].price = curveTokenPrice;\n              processedTxs[tx.hash].received = curveTokens.times(curveTokenPrice);\n            }\n\n            // this.customLog('getCurveAvgSlippage',tx.action,tx.hash,tx.blockNumber,curveTokens.toFixed(6),curveTokenPrice.toFixed(6),processedTxs[tx.hash].deposited.toFixed(6),processedTxs[tx.hash].received.toFixed(6));\n          break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n          break;\n          default:\n          break;\n        }\n\n        // Update curveTokens balance\n        if (!processedHashes[tx.hash]){\n          curveTokensBalance = curveTokensBalance.plus(curveTokens);\n          if (curveTokensBalance.lte(0)){\n            curveTokensBalance = this.BNify(0);\n\n            // Reset processed transactions\n            // processedTxs = {};\n          }\n          processedHashes[tx.hash] = true;\n        }\n      });\n    }\n\n    // this.customLog('processedTxs',processedTxs);\n\n    let avgSlippage = this.BNify(0);\n    let totalDeposited = this.BNify(0);\n    Object.values(processedTxs).forEach( tx => {\n      const slippage = tx.received.div(tx.deposited).minus(1);\n      avgSlippage = avgSlippage.plus(slippage.times(tx.deposited));\n      totalDeposited = totalDeposited.plus(tx.deposited);\n    });\n\n    avgSlippage = avgSlippage.div(totalDeposited).times(-1);\n\n    // debugger;\n    // this.customLog('avgSlippage',avgSlippage.toString());\n\n    return avgSlippage;\n  }\n  getCurveAvgBuyPrice = async (enabledTokens=[],account=null) => {\n    account = account ? account : this.props.account;\n\n    if (!account){\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const processedTxs = {};\n    let avgBuyPrice = this.BNify(0);\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    // this.customLog('curveTxs',curveTxs);\n\n    if (curveTxs && curveTxs.length){\n\n      curveTxs.forEach((tx,index) => {\n\n        if (!processedTxs[tx.hash]){\n          processedTxs[tx.hash] = [];\n        }\n\n        if (processedTxs[tx.hash].includes(tx.action)){\n          return;\n        }\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice){\n          return false;\n        }\n\n        const prevAvgBuyPrice = avgBuyPrice;\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        // Deposited\n        switch (tx.action){\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn'){\n              if (index>0 && curveTokensBalance.gt(0)){\n                return;\n              }\n            }\n            avgBuyPrice = curveTokens.times(curveTokenPrice).plus(prevAvgBuyPrice.times(curveTokensBalance)).div(curveTokensBalance.plus(curveTokens));\n          break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n          // case 'CurveTransferOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n          break;\n          default:\n          break;\n        }\n        \n        // Update curveTokens balance\n        curveTokensBalance = curveTokensBalance.plus(curveTokens);\n        if (curveTokensBalance.lte(0)){\n          avgBuyPrice = this.BNify(0);\n          curveTokensBalance = this.BNify(0);\n        }\n\n        processedTxs[tx.hash].push(tx.action);\n\n        // this.customLog('getCurveAvgBuyPrice',tx.action,tx.hash,tx.blockNumber,curveTokens.toString(),curveTokenPrice.toString(),curveTokensBalance.toString(),avgBuyPrice.toString());\n      });\n    }\n\n    // this.customLog('avgCurveBuyPrice',avgBuyPrice.toString());\n\n    return avgBuyPrice;\n  }\n  getAvgBuyPrice = async (enabledTokens=[],account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const output = {};\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens);\n\n    enabledTokens.forEach( selectedToken => {\n\n      output[selectedToken] = [];\n      let avgBuyPrice = this.BNify(0);\n\n      let idleTokensBalance= this.BNify(0);\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.idleTokens || !tx.tokenPrice){\n            return false;\n          }\n\n          const prevAvgBuyPrice = avgBuyPrice;\n          let idleTokens = this.BNify(tx.idleTokens);\n          const tokenPrice = this.BNify(tx.tokenPrice);\n\n          // Deposited\n          switch (tx.action){\n            case 'Deposit':\n            case 'Receive':\n            case 'Swap':\n            case 'Migrate':\n            case 'CurveOut':\n              avgBuyPrice = idleTokens.times(tokenPrice).plus(prevAvgBuyPrice.times(idleTokensBalance)).div(idleTokensBalance.plus(idleTokens));\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              idleTokens = idleTokens.times(this.BNify(-1));\n            break;\n            default:\n            break;\n          }\n\n          // Update idleTokens balance\n          idleTokensBalance = idleTokensBalance.plus(idleTokens);\n          if (idleTokensBalance.lte(0)){\n            avgBuyPrice = this.BNify(0);\n            idleTokensBalance = this.BNify(0);\n          }\n\n        });\n      }\n\n      // Add token Data\n      output[selectedToken] = avgBuyPrice;\n    });\n\n    return output;\n  }\n  getFirstDepositTx = async (enabledTokens=[],account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens);\n\n    const deposits = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      let firstDepositTx = null;\n      deposits[selectedToken] = firstDepositTx;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount){\n            return false;\n          }\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n              amountLent = amountLent.plus(tx.tokenAmount);\n              if (!firstDepositTx){\n                firstDepositTx = tx;\n              }\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.BNify(0);\n            firstDepositTx = null;\n          }\n        });\n      }\n\n      // Add token Data\n      deposits[selectedToken] = firstDepositTx;\n    });\n\n    return deposits;\n  }\n  getDashboardSectionUrl = (section,env=null) => {\n    const envUrl = this.getGlobalConfig(['environments',env,'url']);\n    const baseUrl = env && envUrl ? envUrl : window.location.origin;\n    return `${baseUrl}/#${this.getGlobalConfig(['dashboard','baseRoute'])}/${section}`;\n  }\n  asyncTimeout = (ms) => {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n  getDepositTimestamp = async (enabledTokens=[],account) => {\n    const firstDepositTxs = await this.getFirstDepositTx(enabledTokens,account);\n    if (firstDepositTxs){\n      return Object.keys(firstDepositTxs).reduce( (acc,token) => {\n        if (firstDepositTxs[token]){\n          acc[token] = firstDepositTxs[token].timeStamp;\n        }\n        return acc;\n      },{});\n    }\n    return null;\n  }\n  getTrancheRewardTokensInfo = async (tokenConfig,trancheConfig) => {\n    const stakingRewards = await this.loadTrancheFieldRaw('stakingRewards',{},tokenConfig.protocol,tokenConfig.token,trancheConfig.tranche,tokenConfig,trancheConfig);\n    const tokensDistribution = {};\n    await this.asyncForEach(Object.keys(stakingRewards),async (token) => {\n      const eventFilters = {\n        from:tokenConfig.CDO.address,\n        to:trancheConfig.CDORewards.address\n      }\n      const transfers = await this.getContractEvents(token,'Transfer',{fromBlock: tokenConfig.blockNumber,toBlock:'latest',filter:eventFilters});\n\n      if (transfers && transfers.length>0){\n        const firstHarvest = transfers.length ? transfers[0] : null;\n        const latestHarvest = transfers[transfers.length-1];\n        const firstBlock = firstHarvest ? firstHarvest.blockNumber : tokenConfig.blockNumber;\n\n        const govTokenConfig = this.getGlobalConfig(['govTokens',token]);\n        const DAITokenConfig = {\n          address:this.getContractByName('DAI')._address\n        };\n        const [\n          prevBlockInfo,\n          lastBlockInfo,\n          conversionRate,\n          lastBlockPoolSize\n        ] = await Promise.all([\n          this.getBlockInfo(firstBlock),\n          this.getBlockInfo(latestHarvest.blockNumber),\n          this.getUniswapConversionRate(DAITokenConfig,govTokenConfig),\n          this.genericContractCallCached(tokenConfig.CDO.name,'getContractValue',[],{},latestHarvest.blockNumber)\n        ]);\n        if (prevBlockInfo && lastBlockInfo){\n          const poolSize = this.fixTokenDecimals(lastBlockPoolSize,tokenConfig.CDO.decimals);\n          const elapsedBlocks = latestHarvest.blockNumber-firstBlock;\n          const elapsedSeconds = lastBlockInfo.timestamp-prevBlockInfo.timestamp;\n\n          const lastAmount = this.fixTokenDecimals(latestHarvest.returnValues.value,govTokenConfig.decimals);\n          const totalAmount = transfers.reduce( (total,t) => {\n            total = total.plus(this.fixTokenDecimals(t.returnValues.value,govTokenConfig.decimals));\n            return total;\n          },this.BNify(0));\n\n          const tokensPerBlock = totalAmount.div(elapsedBlocks);\n          const tokensPerSecond = totalAmount.div(elapsedSeconds);\n          const tokensPerDay = tokensPerSecond.times(86400);\n          const tokensPerYear = tokensPerSecond.times(this.getGlobalConfig(['network','secondsPerYear']));\n          const convertedTokensPerYear = tokensPerYear.times(conversionRate);\n          const tokenApr = convertedTokensPerYear.div(poolSize);\n          const tokenApy = this.apr2apy(tokenApr);\n\n          tokensDistribution[token] = {\n            lastAmount,\n            totalAmount,\n            apr:tokenApr,\n            apy:tokenApy,\n            tokensPerDay,\n            firstHarvest,\n            tokensPerYear,\n            latestHarvest,\n            tokensPerBlock,\n            tokensPerSecond,\n            convertedTokensPerYear\n          };\n        }\n      }\n    });\n\n    // console.log('tokensDistribution',tokensDistribution);\n\n    return tokensDistribution;\n  }\n  getTrancheUserInfo = async (tokenConfig,trancheConfig,account) => {\n    account = account || this.props.account;\n    const cachedDataKey = `amountDepositedTranche_${tokenConfig.token}_${trancheConfig.token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const defaultEventsConfig = {to:'to',from:'from',value:'value'};\n    const underlyingEventsConfig = this.getGlobalConfig(['events',tokenConfig.token,'fields']) || defaultEventsConfig;\n\n    const underlyingEventsFilters = {};\n    underlyingEventsFilters[underlyingEventsConfig.to] = [this.props.account,tokenConfig.CDO.address];\n    underlyingEventsFilters[underlyingEventsConfig.from] = [this.props.account,tokenConfig.CDO.address];\n\n    const [\n      underlying_transfers,\n      trancheToken_transfers\n    ] = await Promise.all([\n      this.getContractEvents(tokenConfig.token,'Transfer',{fromBlock: trancheConfig.blockNumber, toBlock:'latest',filter:underlyingEventsFilters}),\n      this.getContractEvents(trancheConfig.name,'Transfer',{fromBlock: trancheConfig.blockNumber, toBlock:'latest',filter:{from:['0x0000000000000000000000000000000000000000',this.props.account],to:['0x0000000000000000000000000000000000000000',this.props.account]}})\n    ]);\n\n    // console.log('getAmountDepositedTranche',trancheConfig.name,'underlying_transfers',underlying_transfers,'trancheToken_transfers',trancheToken_transfers);\n\n    const transactions = [];\n    let firstDepositTx = null;\n    let avgBuyPrice = this.BNify(0);\n    let amountDeposited = this.BNify(0);\n    let totalAmountDeposited = this.BNify(0);\n\n    await this.asyncForEach(trancheToken_transfers, async (trancheTokenTransferEvent) => {\n      const tokenTransferEvent = underlying_transfers.find( t => t.transactionHash.toLowerCase() === trancheTokenTransferEvent.transactionHash.toLowerCase() );\n\n      // Skip if no tranche token transfer event found\n      if (!tokenTransferEvent){\n        return;\n      }\n\n      const tokenAmount = this.fixTokenDecimals(tokenTransferEvent.returnValues[underlyingEventsConfig.value],tokenConfig.decimals);\n      const trancheTokenAmount = this.fixTokenDecimals(trancheTokenTransferEvent.returnValues.value,trancheConfig.decimals);\n\n      // console.log('tranchePrice',trancheConfig.token,tokenAmount.toFixed(),trancheTokenAmount.toFixed(),tranchePrice.toFixed());\n      const tranchePrice = tokenAmount.div(trancheTokenAmount);\n      const blockInfo = await this.getBlockInfo(tokenTransferEvent.blockNumber);\n      const hashKey = `${trancheConfig.token}_${tokenTransferEvent.transactionHash}`;\n      const protocolConfig = this.getGlobalConfig(['stats','protocols',tokenConfig.protocol]);\n      const protocolIcon = `images/protocols/${protocolConfig.icon || `${tokenConfig.protocol}.svg`}`;\n\n      const tx = {\n        hashKey,\n        action:null,\n        tokenAmount,\n        tranchePrice,\n        protocolIcon,\n        value:tokenAmount,\n        status:'Completed',\n        token:tokenConfig.token,\n        tranche:trancheConfig.tranche,\n        protocol:protocolConfig.label,\n        tokenSymbol:tokenConfig.token,\n        trancheTokens:trancheTokenAmount,\n        hash:tokenTransferEvent.transactionHash,\n        blockNumber:tokenTransferEvent.blockNumber,\n        timeStamp:blockInfo ? blockInfo.timestamp : null,\n      };\n\n      // Deposit\n      if (trancheTokenTransferEvent.returnValues.from.toLowerCase() === '0x0000000000000000000000000000000000000000'){\n        // Set first deposit tx\n        if (!firstDepositTx){\n          firstDepositTx = tx;\n        }\n        avgBuyPrice = avgBuyPrice.plus(tranchePrice.times(tokenAmount));\n        amountDeposited = amountDeposited.plus(tokenAmount);\n        totalAmountDeposited = totalAmountDeposited.plus(tokenAmount);\n\n        tx.action = 'Deposit';\n        // console.log('Deposit',trancheConfig.token,tokenAmount.toFixed(),amountDeposited.toFixed(),tranchePrice.toFixed(),avgBuyPrice.toFixed());\n      // Withdraw\n      } else if (trancheTokenTransferEvent.returnValues.to.toLowerCase() === '0x0000000000000000000000000000000000000000'){\n        tx.action = 'Withdraw';\n        amountDeposited = amountDeposited.minus(tokenAmount);\n        if (amountDeposited.lt(0)){\n          firstDepositTx = null;\n          avgBuyPrice = this.BNify(0);\n          amountDeposited = this.BNify(0);\n          totalAmountDeposited = this.BNify(0);\n        }\n        // console.log('Redeem',trancheConfig.token,tokenAmount.toFixed(),amountDeposited.toFixed(),avgBuyPrice.toFixed());\n      }\n\n      transactions.push(tx);\n    });\n\n    avgBuyPrice = avgBuyPrice.div(totalAmountDeposited);\n\n    // console.log(trancheConfig.token,'amountDeposited',amountDeposited.toFixed(),'avgBuyPrice',avgBuyPrice.toFixed(),'transactions',transactions);\n\n    return {\n      avgBuyPrice,\n      transactions,\n      firstDepositTx,\n      amountDeposited\n    }\n  }\n  getTrancheUserTransactions = async (tokenConfig,trancheConfig,account) => {\n    const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig,trancheConfig,account);\n    if (trancheUserInfo){\n      return trancheUserInfo.transactions;\n    }\n    return null;\n  }\n  getTrancheFirstDepositTx = async (tokenConfig,trancheConfig,account) => {\n      const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig,trancheConfig,account);\n      if (trancheUserInfo){\n        return trancheUserInfo.firstDepositTx;\n      }\n      return null;\n  }\n  getAmountDepositedTranche = async (tokenConfig,trancheConfig,account) => {\n    const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig,trancheConfig,account);\n    if (trancheUserInfo){\n      return trancheUserInfo.amountDeposited;\n    }\n    return null;\n  }\n  getAmountDeposited = async (tokenConfig,account) => {\n    const cachedDataKey = `amountDeposited_${tokenConfig.idle.token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let [tokenBalance,userAvgPrice] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token,account),\n      this.genericContractCallCached(tokenConfig.idle.token, 'userAvgPrices', [account])\n    ]);\n\n    if (tokenBalance && userAvgPrice){\n      userAvgPrice = this.fixTokenDecimals(userAvgPrice,tokenConfig.decimals);\n      const amountDeposited = tokenBalance.times(userAvgPrice);\n      return this.setCachedDataWithLocalStorage(cachedDataKey,amountDeposited);\n    }\n\n    return null;\n  }\n  getAmountLent = async (enabledTokens=[],account) => {\n\n    account = account || this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens,false);\n\n    const amountLents = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      amountLents[selectedToken] = amountLent;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount){\n            return false;\n          }\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tx.tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.BNify(0);\n          }\n        });\n      }\n\n      // Add token Data\n      amountLents[selectedToken] = amountLent;\n    });\n\n    // debugger;\n\n    return amountLents;\n  }\n  getBaseToken = () => {\n    const networkConfig = this.getCurrentNetwork();\n    return networkConfig ? networkConfig.baseToken : this.getGlobalConfig(['baseToken']);\n  }\n  getCurrentNetwork = () => {\n    const networkId = this.getCurrentNetworkId();\n    const network = this.getGlobalConfig(['network','availableNetworks',networkId]);\n    network.id = networkId;\n    return network;\n  }\n  getRequiredNetwork = () => {\n    const networkId = this.getRequiredNetworkId();\n    const network = this.getGlobalConfig(['network','availableNetworks',networkId]);\n    network.id = networkId;\n    return network;\n  }\n  getRequiredNetworkId = () => {\n    const defaultNetwork = this.getGlobalConfig(['network','requiredNetwork']);\n    return this.props.network && this.props.network.required ? this.props.network.required.id || defaultNetwork : defaultNetwork;\n  }\n  getCurrentNetworkId = () => {\n    const defaultNetwork = this.getGlobalConfig(['network','requiredNetwork']);\n    return this.props.network && this.props.network.current ? this.props.network.current.id || defaultNetwork : defaultNetwork;\n  }\n  getPolygonBridgeTxs = async (account=false,enabledTokens=[]) => {\n\n    account = account ? account : this.props.account;\n\n    if (!account || !this.props.web3){\n      return [];\n    }\n\n    const cachedDataKey = `polygonBridgeTxs_${account}_${JSON.stringify(enabledTokens)}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    account = account.toLowerCase();\n\n    let txs = [];\n    const currentNetwork = this.getRequiredNetwork();\n    const currentNetworkId = this.getRequiredNetworkId();\n    const covalentInfo = this.getGlobalConfig(['network','providers','covalent']);\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n    const stateSenderConfig = this.getGlobalConfig(['tools','polygonBridge','props','contracts','StateSender']);\n    const erc20PredicateConfig = this.getGlobalConfig(['tools','polygonBridge','props','contracts','ERC20Predicate']);\n    const etherPredicateConfig = this.getGlobalConfig(['tools','polygonBridge','props','contracts','EtherPredicate']);\n    const depositManagerConfig = this.getGlobalConfig(['tools','polygonBridge','props','contracts','DepositManager']);\n    const rootChainManagerConfig = this.getGlobalConfig(['tools','polygonBridge','props','contracts','RootChainManager']);\n\n    const polygonNetworkId = currentNetwork.provider === 'polygon' ? currentNetworkId : this.getGlobalConfig(['network','providers','polygon','networkPairs',currentNetworkId]);\n    // Check if covalent is enabled for the required network\n    if (covalentInfo.enabled && covalentInfo.endpoints[polygonNetworkId]){\n      const covalentApiUrl = covalentInfo.endpoints[polygonNetworkId];\n      const polygonAvailableTokens = this.getGlobalConfig(['tools','polygonBridge','props','availableTokens']);\n      const polygonEndpoint = `${covalentApiUrl}address/${account}/transactions_v2/?block-signed-at-asc=true&skip=0&key=${covalentInfo.key}`;\n\n      const ethereumNetworkId = this.getGlobalConfig(['network','providers','polygon','networkPairs',polygonNetworkId]);\n      const etherscanApiUrl = etherscanInfo.endpoints[ethereumNetworkId];\n      const etherscanEndpoint = `${etherscanApiUrl}?module=account&action=tokentx&address=${this.props.account}&sort=desc`;\n      const etherscanTxlistEndpoint =`${etherscanApiUrl}?module=account&action=txlist&address=${this.props.account}&sort=desc`;\n      const etherscanTxlistInternalEndpoint =`${etherscanApiUrl}?module=account&action=txlistinternal&address=${this.props.account}&sort=desc`;\n\n      const [\n        last_state_id,\n        polygonTxs,\n        etherscanTxs,\n        etherscanTxlist,\n        etherscanTxlistInternal\n      ] = await Promise.all([\n        this.getPolygonCurrentLastStateId(),\n        this.makeCachedRequest(polygonEndpoint,120),\n        this.makeEtherscanApiRequest(etherscanEndpoint,etherscanInfo.keys,120),\n        this.makeEtherscanApiRequest(etherscanTxlistEndpoint,etherscanInfo.keys,120),\n        this.makeEtherscanApiRequest(etherscanTxlistInternalEndpoint,etherscanInfo.keys,120),\n      ]);\n\n      // console.log('polygonTxs',polygonTxs);\n      // console.log('etherscanTxs',etherscanTxs);\n      // console.log('etherscanTxlist',etherscanTxlist);\n      // console.log('etherscanTxlistInternal',etherscanTxlistInternal);\n\n      const rootTokensAddresses = [];\n      const childTokensAddresses = [];\n      Object.values(polygonAvailableTokens).forEach( tokenConfig => {\n        if (tokenConfig.childToken){\n          childTokensAddresses.push(tokenConfig.childToken.address.toLowerCase())\n        }\n        if (tokenConfig.rootToken){\n          rootTokensAddresses.push(tokenConfig.rootToken.address.toLowerCase())\n        }\n      });\n\n      let depositTxs = [];\n\n      if (etherscanTxs && etherscanTxs.data && etherscanTxs.data.result && typeof etherscanTxs.data.result.filter === 'function'){\n        depositTxs = etherscanTxs.data.result.filter( tx => rootTokensAddresses.includes(tx.contractAddress.toLowerCase()) &&  [erc20PredicateConfig.address.toLowerCase(),depositManagerConfig.address.toLowerCase()].includes(tx.to.toLowerCase())  && tx.from.toLowerCase() === this.props.account.toLowerCase() );\n        await this.asyncForEach(depositTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find( t => t.name === tx.tokenSymbol );\n          const ethereumTx = {...tx};\n          ethereumTx.action = 'Deposit';\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value,tokenConfig.decimals);\n          const txReceipt = await this.getTxReceipt(ethereumTx.hash,this.props.web3Infura);\n          const stateSenderLog = txReceipt ? txReceipt.logs.find( log => log.address.toLowerCase() === stateSenderConfig.address.toLowerCase() ) : null;\n          const tx_state_id = stateSenderLog && this.props.web3.utils ? parseInt(this.props.web3.utils.hexToNumberString(stateSenderLog.topics[1])) : null;\n          ethereumTx.included = last_state_id && tx_state_id ? last_state_id>=tx_state_id : false;\n          txs.push(ethereumTx);\n        });\n        const exitTxs = etherscanTxs.data.result.filter( tx => rootTokensAddresses.includes(tx.contractAddress.toLowerCase()) && [erc20PredicateConfig.address.toLowerCase(),depositManagerConfig.address.toLowerCase()].includes(tx.from.toLowerCase()) && tx.to.toLowerCase() === this.props.account.toLowerCase() );\n        await this.asyncForEach(exitTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find( t => t.name === tx.tokenSymbol );\n          const ethereumTx = {...tx};\n          ethereumTx.action = 'Exit';\n          ethereumTx.included = true;\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value,tokenConfig.decimals);\n          txs.push(ethereumTx);\n        });\n      }\n\n      const depositTxsHashes = depositTxs.map( tx => tx.hash.toLowerCase() );\n      const depositETHInputRexExp = new RegExp(this.props.account.replace('0x','').toLowerCase()+'$');\n      if (etherscanTxlist && etherscanTxlist.data && etherscanTxlist.data.result && typeof etherscanTxlist.data.result.filter === 'function'){\n        const depositETHTxs = etherscanTxlist.data.result.filter( tx => !depositTxsHashes.includes(tx.hash.toLowerCase()) && tx.to.toLowerCase() === rootChainManagerConfig.address.toLowerCase() && tx.input.toLowerCase().match(depositETHInputRexExp) && tx.from.toLowerCase() === this.props.account.toLowerCase() );\n        await this.asyncForEach(depositETHTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find( t => t.name === 'WETH' );\n          const ethereumTx = {...tx};\n          ethereumTx.action = 'Deposit';\n          ethereumTx.tokenSymbol = 'WETH';\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value,tokenConfig.decimals);\n          const txReceipt = await this.getTxReceipt(ethereumTx.hash,this.props.web3Infura);\n          const stateSenderLog = txReceipt ? txReceipt.logs.find( log => log.address.toLowerCase() === stateSenderConfig.address.toLowerCase() ) : null;\n          const tx_state_id = stateSenderLog && this.props.web3.utils ? parseInt(this.props.web3.utils.hexToNumberString(stateSenderLog.topics[1])) : null;\n          ethereumTx.included = last_state_id && tx_state_id ? last_state_id>=tx_state_id : false;\n          txs.push(ethereumTx);\n        });\n      }\n\n      if (etherscanTxlistInternal && etherscanTxlistInternal.data && etherscanTxlistInternal.data.result && typeof etherscanTxlistInternal.data.result.filter === 'function'){\n        const exitETHTxs = etherscanTxlistInternal.data.result.filter( tx => !depositTxsHashes.includes(tx.hash.toLowerCase()) && tx.from.toLowerCase() === etherPredicateConfig.address.toLowerCase() && !tx.input.toLowerCase().match(depositETHInputRexExp) && tx.to.toLowerCase() === this.props.account.toLowerCase() );\n        await this.asyncForEach(exitETHTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find( t => t.name === 'WETH' );\n          const ethereumTx = {...tx};\n          ethereumTx.action = 'Exit';\n          ethereumTx.included = true;\n          ethereumTx.tokenSymbol = 'WETH';\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.timeStamp = parseInt(tx.timeStamp);\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value,tokenConfig.decimals);\n          txs.push(ethereumTx);\n        });\n      }\n\n      if (polygonTxs && polygonTxs.data && polygonTxs.data.data && polygonTxs.data.data.items && Object.values(polygonTxs.data.data.items).length){\n        const filteredTxs = polygonTxs.data.data.items.filter( tx => tx.to_address && childTokensAddresses.includes(tx.to_address.toLowerCase()) );\n        // console.log('polygonTxs',polygonTxs,filteredTxs);\n        await this.asyncForEach(filteredTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find( tokenConfig => (tokenConfig.childToken && tx.to_address && tokenConfig.childToken.address.toLowerCase() === tx.to_address.toLowerCase()) );\n          if (!tokenConfig || !tokenConfig.childToken){\n            return;\n          }\n          tokenConfig.address = tokenConfig.childToken.address;\n          if (!enabledTokens || !enabledTokens.length || enabledTokens.includes(tokenConfig.token)){\n            const polygonTx = this.normalizePolygonTx(tx,tokenConfig);\n            // console.log('polygonTx',polygonTx);\n            if (polygonTx.action === 'Withdraw'){\n              const tx_state_id = this.props.web3.utils ? parseInt(this.props.web3.utils.hexToNumberString(polygonTx.logs[polygonTx.logs.length-1].topics[1])) : 0;\n              polygonTx.exited = false;\n              polygonTx.networkId = polygonNetworkId;\n              polygonTx.bridgeType = tokenConfig.bridgeType;\n              polygonTx.included = last_state_id && tx_state_id ? last_state_id>=tx_state_id : false;\n              try {\n                await this.props.maticPOSClient.exitERC20(polygonTx.hash, {from: this.props.account, encodeAbi:true});\n              } catch (error){\n                if (error.toString().match('EXIT_ALREADY_PROCESSED')){\n                  polygonTx.exited = true;\n                }\n              }\n              txs.push(polygonTx);\n            }\n          }\n        });\n        // debugger;\n      }\n    }\n\n    txs = txs.sort((a,b) => (parseInt(a.timeStamp) < parseInt(b.timeStamp) ? 1 : -1));\n\n    // console.log('getPolygonBridgeTxs',cachedDataKey,txs);\n\n    return this.setCachedData(cachedDataKey,txs,120);\n  }\n  getPolygonBaseTxs = async (account=false,enabledTokens=[],debug=false) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length){\n      return [];\n    }\n\n    account = account.toLowerCase();\n\n    let results = [];\n    let baseTxs = null;\n    let baseEndpoint = null;\n    const requiredNetwork = this.getRequiredNetworkId();\n    // const selectedStrategy = this.props.selectedStrategy;\n    const covalentInfo = this.getGlobalConfig(['network','providers','covalent']);\n\n    // Check if covalent is enabled for the required network\n    if (covalentInfo.enabled && covalentInfo.endpoints[requiredNetwork]){\n      const covalentApiUrl = covalentInfo.endpoints[requiredNetwork];\n\n      // Get base endpoint cached transactions\n      baseEndpoint = `${covalentApiUrl}address/${account}/transactions_v2/?block-signed-at-asc=true&key=${covalentInfo.key}`;\n      baseTxs = this.getCachedRequest(baseEndpoint);\n\n      // Check if the latest blockNumber is actually the latest one\n      if (baseTxs && baseTxs.data && baseTxs.data.data && baseTxs.data.data.items && Object.values(baseTxs.data.data.items).length){\n\n        const cachedRows = Object.values(baseTxs.data.data.items).length;\n        const lastCachedTx = Object.values(baseTxs.data.data.items).pop();\n        const lastCachedBlockNumber = lastCachedTx && lastCachedTx.block_height ? parseInt(lastCachedTx.block_height)+1 : 0;\n\n        const covalentEndpointLastBlock = `${covalentApiUrl}address/${account}/transactions_v2/?block-signed-at-asc=true&skip=${cachedRows}`;\n        let latestTxs = await this.makeCachedRequest(covalentEndpointLastBlock,15);\n\n        if (latestTxs && latestTxs.data.data.items && latestTxs.data.data.items.length){\n          latestTxs = await this.filterPolygonTxs(latestTxs.data.data.items,enabledTokens);\n          // latestTxs = await this.filterEthereumTxs(latestTxs,enabledTokens,true,false);\n\n          if (latestTxs && Object.values(latestTxs).length){\n\n            const latestBlockNumbers = Object.values(latestTxs).map( lastTx => (parseInt(lastTx.block_height)) );\n            const lastRealBlockNumber = Math.max(...latestBlockNumbers);\n\n            // If real tx blockNumber differs from last blockNumber\n            if (lastRealBlockNumber>=lastCachedBlockNumber){\n              // Merge latest Txs with baseTxs\n              Object.values(latestTxs).forEach((tx) => {\n                const txFound = Object.keys(baseTxs.data.data.items).includes(tx.tx_hash);\n                if (!txFound){\n                  baseTxs.data.data.items[tx.tx_hash] = tx;\n                }\n              });\n\n              // Save covalent txs\n              this.saveFetchedTransactions(baseEndpoint,baseTxs.data.data.items);\n            }\n          }\n        }\n      } else {\n        baseTxs = null;\n      }\n\n      let txs = baseTxs;\n\n      if (debug){\n        console.log('DEBUG - txs',txs);\n      }\n\n      if (!txs){\n        // Make request\n        txs = await this.makeRequest(baseEndpoint);\n\n        // console.log('makeRequest 1',account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n\n        if (!txs || !txs.data || parseInt(txs.data.status)===0){\n          let requestCount = 0;\n          let requestStatus = false;\n          do {\n            await this.asyncTimeout(500);\n            txs = await this.makeRequest(baseEndpoint);\n            requestCount++;\n            requestStatus = txs && txs.data ? parseInt(txs.data.status) : false;\n            // console.log('makeRequest '+(requestCount+1),account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n          } while (requestCount<5 && !requestStatus);\n        }\n\n        // Cache request\n        if (txs && txs.data && parseInt(txs.data.status)>0){\n          const timestamp = parseInt(Date.now()/1000);\n          // const cachedRequests_polygon = this.getCachedDataWithLocalStorage('cachedRequests_polygon',{});\n          const dataToCache = {\n            data:txs,\n            timestamp\n          };\n          this.addKeyToCachedDataWithLocalStorage('cachedRequests_polygon',baseEndpoint,dataToCache);\n          // this.setCachedDataWithLocalStorage('cachedRequests_polygon',cachedRequests_polygon);\n        }\n      }\n\n      if (txs && txs.data && txs.data.data && txs.data.data.items){\n        results = txs.data.data.items;\n      } else {\n        return [];\n      }\n    }\n\n    return {\n      results,\n      baseTxs,\n      baseEndpoint\n    };\n  }\n  getEtherscanBaseTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[],debug=false) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length){\n      return [];\n    }\n\n    account = account.toLowerCase();\n\n    const selectedStrategy = this.props.selectedStrategy;\n\n    // Check if firstBlockNumber is less that firstIdleBlockNumber\n    const firstIdleBlockNumber = this.getGlobalConfig(['network','firstBlockNumber']);\n    firstBlockNumber = Math.max(firstIdleBlockNumber,firstBlockNumber);\n\n    const requiredNetwork = this.getRequiredNetworkId();\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n\n    let results = [];\n    let baseTxs = null;\n    let baseEndpoint = null;\n\n    // Check if etherscan is enabled for the required network\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]){\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n\n      // Get base endpoint cached transactions\n      baseEndpoint = `${etherscanApiUrl}?strategy=${selectedStrategy}&apikey=${etherscanInfo.keys[0]}&module=account&action=tokentx&address=${account}&startblock=${firstIdleBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n      baseTxs = this.getCachedRequest(baseEndpoint);\n\n      if (debug){\n        console.log('DEBUG - CACHED - baseTxs',baseTxs);\n      }\n\n      // Check if the latest blockNumber is actually the latest one\n      if (baseTxs && baseTxs.data.result && Object.values(baseTxs.data.result).length){\n\n        const lastCachedTx = Object.values(baseTxs.data.result).pop();\n        const lastCachedBlockNumber = lastCachedTx && lastCachedTx.blockNumber ? parseInt(lastCachedTx.blockNumber)+1 : firstBlockNumber;\n\n        const etherscanEndpointLastBlock = `${etherscanApiUrl}?strategy=${selectedStrategy}&module=account&action=tokentx&address=${account}&startblock=${lastCachedBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n        // let latestTxs = await this.makeCachedRequest(etherscanEndpointLastBlock,15);\n        let latestTxs = await this.makeEtherscanApiRequest(etherscanEndpointLastBlock,etherscanInfo.keys,15);        \n\n        if (latestTxs && latestTxs.data.result && latestTxs.data.result.length){\n          \n          latestTxs = await this.filterEthereumTxs(latestTxs.data.result,enabledTokens,true,false);\n\n          if (latestTxs && Object.values(latestTxs).length){\n\n            const latestBlockNumbers = Object.values(latestTxs).map( lastTx => (parseInt(lastTx.blockNumber)) );\n            const lastRealBlockNumber = Math.max(...latestBlockNumbers);\n\n            // If real tx blockNumber differs from last blockNumber\n            if (lastRealBlockNumber>=lastCachedBlockNumber){\n              // Merge latest Txs with baseTxs\n              Object.values(latestTxs).forEach((tx) => {\n                const txFound = Object.keys(baseTxs.data.result).includes(tx.hashKey);\n                if (!txFound){\n                  baseTxs.data.result[tx.hashKey] = tx;\n                }\n              });\n\n              // Save etherscan txs\n              this.saveFetchedTransactions(baseEndpoint,baseTxs.data.result);\n            }\n          }\n        }\n      } else {\n        baseTxs = null;\n      }\n\n      let txs = baseTxs;\n\n      if (debug){\n        console.log('DEBUG - txs',txs);\n      }\n\n      if (!txs){\n        // Make request\n        txs = await this.makeRequest(baseEndpoint);\n\n        // console.log('makeRequest 1',account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n\n        if (!txs || !txs.data || parseInt(txs.data.status)===0){\n          let requestCount = 0;\n          let requestStatus = false;\n          do {\n            await this.asyncTimeout(500);\n            txs = await this.makeRequest(baseEndpoint);\n            requestCount++;\n            requestStatus = txs && txs.data ? parseInt(txs.data.status) : false;\n            // console.log('makeRequest '+(requestCount+1),account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n          } while (requestCount<5 && !requestStatus);\n        }\n\n        // Cache request\n        if (txs && txs.data && parseInt(txs.data.status)>0){\n          const timestamp = parseInt(Date.now()/1000);\n          // const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n          const dataToCache = {\n            data:txs,\n            timestamp\n          };\n          this.addKeyToCachedDataWithLocalStorage('cachedRequests',baseEndpoint,dataToCache);\n          // this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n        }\n      }\n\n      if (txs && txs.data && txs.data.result){\n        results = txs.data.result;\n      } else {\n        return [];\n      }\n    }\n\n    return {\n      results,\n      baseTxs,\n      baseEndpoint\n    };\n  }\n  getCurveTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[]) => {\n    const results = await this.getEtherscanTxs(account,firstBlockNumber,endBlockNumber,enabledTokens);\n    // results = results ? Object.values(results) : [];\n    return this.filterCurveTxs(results,enabledTokens);\n  }\n  saveFetchedTransactions = (endpoint,txs) => {\n    const txsToStore = {};\n    Object.keys(txs).forEach(txHash => {\n      const tx = txs[txHash];\n      if (tx.blockNumber && (!tx.status || tx.status.toLowerCase() !== 'pending')){\n        txsToStore[txHash] = tx;\n      }\n    });\n\n    // Save new cached data\n    const cachedRequest = {\n      data:{\n        result:txsToStore\n      }\n    };\n    this.saveCachedRequest(endpoint,false,cachedRequest);\n  }\n  getEtherscanTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[],debug=false) => {\n\n    let resultData = null;\n    const currentNetwork = this.getRequiredNetwork();\n\n    switch (currentNetwork.explorer){\n      case 'polygon':\n        resultData = await this.getPolygonBaseTxs(account,enabledTokens,debug);\n      break;\n      case 'etherscan':\n      default:\n        resultData = await this.getEtherscanBaseTxs(account,firstBlockNumber,endBlockNumber,enabledTokens,debug);\n      break;\n    }\n\n    // Initialize prevTxs\n    let txs = {};\n\n    if (resultData){\n      let {\n        results,\n        baseTxs,\n        baseEndpoint\n      } = resultData;\n\n      if (baseTxs){\n        // Filter txs for token\n        txs = await this.processStoredTxs(results,enabledTokens);\n      } else {\n        const allAvailableTokens = Object.keys(this.props.availableTokens);\n        // Save base endpoint with all available tokens\n        switch (currentNetwork.explorer){\n          case 'polygon':\n            txs = await this.filterPolygonTxs(results,allAvailableTokens);\n            // console.log('polygon txs',results,allAvailableTokens,txs);\n          break;\n          case 'etherscan':\n          default:\n            txs = await this.filterEthereumTxs(results,allAvailableTokens);\n          break;\n        }\n\n        // Store filtered txs\n        if (txs && Object.keys(txs).length){\n          this.saveFetchedTransactions(baseEndpoint,txs);\n        }\n      }\n    }\n\n    // console.log('DEBUG - TXS -',txs);\n\n    return Object\n            .values(txs)\n            .filter(tx => (tx.token && enabledTokens.includes(tx.token.toUpperCase())))\n            .sort((a,b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n  }\n  getPolygonCurrentLastStateId = async () => {\n    const contractInstance = new this.props.web3Polygon.eth.Contract(\n      [\n        {\n          constant: true,\n          inputs: [],\n          name: \"lastStateId\",\n          outputs: [\n            {\n              internalType: \"uint256\",\n              name: \"\",\n              type: \"uint256\",\n            },\n          ],\n          payable: false,\n          stateMutability: \"view\",\n          type: \"function\",\n        },\n      ],\n      \"0x0000000000000000000000000000000000001001\"\n    );\n\n    return parseInt(await contractInstance.methods.lastStateId().call());\n  }\n  checkPolygonTransactionIncluded = async (txHash) => {\n    const [\n      last_state_id,\n      tx,\n    ] = await Promise.all([\n      this.getPolygonCurrentLastStateId(),\n      this.props.web3Polygon.eth.getTransactionReceipt(txHash)\n    ]);\n\n    const tx_state_id = tx && tx.logs && tx.logs.length && this.props.web3.utils ? this.props.web3.utils.hexToNumberString(tx.logs[tx.logs.length-1].topics[1]) : null;\n\n    return tx_state_id ? parseInt(last_state_id) >= parseInt(tx_state_id) : null;\n  }\n  filterCurveTxs = async (results,enabledTokens=[]) => {\n\n    if (!results || !results.length || typeof results.forEach !== 'function'){\n      return [];\n    }\n\n    const availableTokens = this.props.availableTokens ? this.props.availableTokens : this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const curveTxs = results.filter( tx => (enabledTokens.includes(tx.token) && ['CurveIn','CurveOut','CurveZapIn','CurveZapOut','CurveTransferIn','CurveTransferOut','CurveDepositIn','CurveDepositOut'].includes(tx.action)) );\n\n    if (curveTxs.length){\n      curveTxs.sort((a,b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n    }\n\n    return curveTxs;\n  }\n  normalizePolygonTx = (tx,tokenConfig=null) => {\n    tokenConfig = tokenConfig || Object.values(this.props.availableTokens).find( tokenConfig => tx.to_address && tokenConfig.idle.address.toLowerCase() === tx.to_address.toLowerCase() );\n    \n    const depositLogEvent = tx.log_events && tokenConfig && tokenConfig.idle ? tx.log_events.find( log => log.sender_address.toLowerCase() === tokenConfig.address.toLowerCase() && log.decoded.name === 'Transfer' && log.decoded.params.find(param=>param.name==='from').value.toLowerCase() === this.props.account.toLowerCase() && log.decoded.params.find(param=>param.name==='to').value.toLowerCase() === tokenConfig.idle.address.toLowerCase() ) : null;\n    const redeemLogEvent = tx.log_events && tokenConfig && tokenConfig.idle ? tx.log_events.find( log => log.sender_address.toLowerCase() === tokenConfig.address.toLowerCase() && log.decoded.name === 'Transfer' && log.decoded.params.find(param=>param.name==='to').value.toLowerCase() === this.props.account.toLowerCase() && log.decoded.params.find(param=>param.name==='from').value.toLowerCase() === tokenConfig.idle.address.toLowerCase() ) : null;\n    const withdrawLogEvent = tx.log_events && tokenConfig && tokenConfig.address ? tx.log_events.find( log => log.sender_address.toLowerCase() === tokenConfig.address.toLowerCase() && log.decoded.name === 'Transfer' && log.decoded.params.find(param=>param.name==='from').value.toLowerCase() === this.props.account.toLowerCase() && log.decoded.params.find(param=>param.name==='to').value.toLowerCase() === '0x0000000000000000000000000000000000000000' ) : null;\n\n    const tokenDecimal = tokenConfig.decimals;\n    const tokenSymbol = tokenConfig.name || tokenConfig.token;\n    const hashKey = `${tx.tx_hash}_${tokenSymbol}`;\n    const idleToken = tokenConfig.idle ? tokenConfig.idle.token : null;\n    const action = depositLogEvent ? 'Deposit' : (redeemLogEvent ? 'Redeem' : (withdrawLogEvent ? 'Withdraw' : null));\n    const timeStamp = parseInt(this.strToMoment(tx.block_signed_at)._d.getTime()/1000);\n\n    let logEvent = null;\n    switch (action){\n      case 'Deposit':\n        logEvent = depositLogEvent;\n      break;\n      case 'Redeem':\n        logEvent = redeemLogEvent;\n      break;\n      case 'Withdraw':\n        logEvent = withdrawLogEvent;\n      break;\n      default:\n      break;\n    }\n\n    const logs = tx.log_events ? tx.log_events.map( log => ({\n      topics:log.raw_log_topics\n    })) : [];\n    const value = logEvent ? this.fixTokenDecimals(logEvent.decoded.params.find( param => param.name==='value' ).value,tokenDecimal) : this.fixTokenDecimals(tx.value,tokenDecimal);\n\n    const blockNumber = tx.log_events && tx.log_events.length ? tx.log_events[0].block_height : null;\n\n    return {\n      logs,\n      value,\n      action,\n      hashKey,\n      timeStamp,\n      idleToken,\n      tokenSymbol,\n      blockNumber,\n      tokenDecimal,\n      hash:tx.tx_hash,\n      to:tx.to_address,\n      status:'Completed',\n      from:tx.from_address,\n      gasUsed:tx.gas_spent,\n      gasPrice:tx.gas_price,\n      token:tokenConfig.token,\n      contractAddress:tokenConfig.address,\n    };\n  }\n  filterPolygonTxs = async (txs,enabledTokens,processTransactions=true) => {\n    const idleTokensAddresses = Object.values(this.props.availableTokens).map( tokenConfig => tokenConfig.idle.address.toLowerCase() );\n    const polygonTxs = txs ? txs.filter( tx => tx.to_address && idleTokensAddresses.includes(tx.to_address.toLowerCase()) ).reduce( (output,tx) => {\n      const mappedTx = this.normalizePolygonTx(tx);\n      output[mappedTx.hashKey] = mappedTx;\n      return output;\n    },{}) : {};\n\n    return processTransactions ? await this.processTransactions(polygonTxs,enabledTokens) : polygonTxs;\n  }\n  filterEtherscanTxs = async (results,enabledTokens=[],processTxs=true,processStoredTxs=true) => {\n    return await this.filterEthereumTxs(results,enabledTokens,processTxs,processStoredTxs);\n  }\n  filterEthereumTxs = async (results,enabledTokens=[],processTxs=true,processStoredTxs=true) => {\n    if (!this.props.account || !results || !results.length || typeof results.forEach !== 'function'){\n      return [];\n    }\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let etherscanTxs = {};\n    let curveTransfersTxs = [];\n    let curveTransfersTxsToDelete = [];\n\n    // const idleTokensAddresses = Object.values(this.props.availableTokens).map( tokenConfig => (tokenConfig.idle.address) );\n    const curveZapContract = this.getGlobalConfig(['curve','zapContract']);\n    const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    // this.customLog('filterEtherscanTxs',enabledTokens,results);\n\n    enabledTokens.forEach(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      const depositProxyContractInfo = this.getGlobalConfig(['contract','methods','deposit','proxyContract']);\n      const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n      const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n      const tokenMigrationToolParams = this.getGlobalConfig(['tools','tokenMigration','props','migrationContract']);\n\n      const batchMigration = this.getGlobalConfig(['tools','batchMigration','props','availableTokens',tokenConfig.idle.token]);\n      const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n      // const curveEnabled = this.getGlobalConfig(['curve','enabled']);\n      const curveTokenConfig = this.getGlobalConfig(['curve','availableTokens',tokenConfig.idle.token]);\n\n      results.forEach( tx => {\n        let tokenDecimals = tokenConfig.decimals;\n        const idleToken = tokenConfig.idle.token;\n        const internalTxs = results.filter(r => r.hash === tx.hash);\n        const isRightToken = internalTxs.length>1 && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase()).length>0;\n        const isSendTransferTx = internalTxs.length === 1 && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isReceiveTransferTx = internalTxs.length === 1 && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isDepositInternalTx = isRightToken && internalTxs.find( iTx => iTx.from.toLowerCase() === this.props.account.toLowerCase() && (iTx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && iTx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length>0 )) );\n        const isRedeemInternalTx = isRightToken && internalTxs.find( iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && iTx.to.toLowerCase() === this.props.account.toLowerCase() );\n\n        const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase()) ) && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase());\n        const isConversionTx = tokenMigrationToolParams && (tx.from.toLowerCase() === tokenMigrationToolParams.address.toLowerCase() || tokenMigrationToolParams.oldAddresses.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase())) && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isDepositTx = isRightToken && !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && (tx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length>0 ));\n        const isRedeemTx = isRightToken && !isMigrationTx && !isDepositInternalTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && tx.to.toLowerCase() === this.props.account.toLowerCase();\n        const isWithdrawTx = internalTxs.length>1 && internalTxs.filter(iTx => tokenConfig.protocols.map(p => p.address.toLowerCase()).includes(iTx.contractAddress.toLowerCase()) ).length>0 && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // const curveDepositTx = internalTxs.find( iTx => (iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && iTx.from.toLowerCase() === this.props.account.toLowerCase()) );\n        const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n        // Check Curve\n        const curveTx = internalTxs.find( tx => (tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && (tx.to.toLowerCase() === this.props.account.toLowerCase() || tx.from.toLowerCase() === this.props.account.toLowerCase()) ) );\n        const isCurveTx = curveTx !== undefined;\n\n        const isCurveDepositTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === curveSwapContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveRedeemTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveSwapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveDepositIn = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveDepositOut = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveZapIn = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveZapOut = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveTransferOut = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapOut && !isCurveRedeemTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.from.toLowerCase() === this.props.account.toLowerCase();\n        const isCurveTransferIn = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapIn && !isCurveDepositTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isSwapOutTx = !isCurveTx && !isSendTransferTx && !isWithdrawTx && !isRedeemInternalTx && !etherscanTxs[tx.hash] && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isSwapTx = !isCurveTx && !isReceiveTransferTx && !isConversionTx && !isDepositInternalTx && !etherscanTxs[tx.hash] && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // if (tx.hash.toLowerCase() === '0x599a2e7b0094b0a943ffb1d520cb47598dcf3764145c33824e3b032d91ccc489'.toLowerCase()){\n        //   debugger;\n        // }\n\n        if (isSendTransferTx || isReceiveTransferTx || isMigrationTx || isDepositTx || isRedeemTx || isSwapTx || isSwapOutTx || isWithdrawTx || isConversionTx || isCurveDepositTx || isCurveRedeemTx || isCurveZapIn || isCurveZapOut || isCurveTransferOut || isCurveTransferIn || isCurveDepositIn || isCurveDepositOut){\n\n          let action = null;\n          let hashKey = tx.hash;\n\n          if (isDepositTx){\n            action = 'Deposit';\n          } else if (isRedeemTx){\n            action = 'Redeem';\n          } else if (isMigrationTx || isConversionTx){\n            action = 'Migrate';\n          } else if (isSendTransferTx){\n            action = 'Send';\n          } else if (isReceiveTransferTx){\n            action = 'Receive';\n          } else if (isSwapTx){\n            action = 'Swap';\n          } else if (isSwapOutTx){\n            action = 'SwapOut';\n          } else if (isWithdrawTx){\n            action = 'Withdraw';\n          } else if (isCurveDepositTx){\n            action = 'CurveIn';\n          } else if (isCurveRedeemTx){\n            action = 'CurveOut';\n          } else if (isCurveZapIn){\n            action = 'CurveZapIn';\n          } else if (isCurveZapOut){\n            action = 'CurveZapOut';\n          } else if (isCurveDepositIn){\n            action = 'CurveDepositIn';\n          } else if (isCurveDepositOut){\n            action = 'CurveDepositOut';\n          } else if (isCurveTransferIn){\n            action = 'CurveTransferIn';\n          } else if (isCurveTransferOut){\n            action = 'CurveTransferOut';\n          }\n\n          let curveTokens = null;\n          if (isCurveTx){\n            hashKey += '_'+tx.tokenSymbol;\n            curveTokens = this.fixTokenDecimals(curveTx.value,curvePoolContract.decimals);\n\n            // Add action for curve tokens transfers\n            if ((isCurveTransferIn || isCurveTransferOut)){\n              hashKey+='_'+action;\n            }\n          }\n\n          // this.customLog('SAVE!',action);\n\n          if (tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()){\n            tokenDecimals = 18;\n          } else if (isCurveTx){\n            tokenDecimals = parseInt(tx.tokenDecimal);\n          }\n\n          // Sum the value if already processed\n          if (etherscanTxs[hashKey]){\n            // Prevent second internal tx to sum SwapOut original value\n            switch (etherscanTxs[hashKey].action){\n              case 'SwapOut':\n                if (etherscanTxs[hashKey].action !== action && isRedeemTx){\n                  etherscanTxs[hashKey].tokenValue = this.fixTokenDecimals(tx.value,tokenDecimals);\n                }\n              break;\n              default:\n                if (!curveTx){\n                  const newValue = etherscanTxs[hashKey].value.plus(this.fixTokenDecimals(tx.value,tokenDecimals));\n                  etherscanTxs[hashKey].value = newValue;\n                }\n              break;\n            }\n          } else {\n            // Insert tx in curve transfers buffer\n            if (isCurveTransferIn || isCurveTransferOut){\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n                curveTokens = this.fixTokenDecimals(tx.value,curvePoolContract.decimals);\n                curveTransfersTxs.push({...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value,tokenDecimals)});\n              }\n            } else {\n              etherscanTxs[hashKey] = ({...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value,tokenDecimals)});\n\n              // Delete curveTransfers\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n                curveTransfersTxsToDelete.push(tx.hash.toLowerCase());\n              }\n\n              // Take right tokenSymbol\n              switch (action){\n                case 'Withdraw':\n                  const iTxs = internalTxs.filter(iTx => (iTx !== tx));\n                  if (iTxs.length>0){\n                    const iTx = iTxs[0];\n                    etherscanTxs[hashKey].withdrawnValue = this.fixTokenDecimals(iTx.value,iTx.tokenDecimal);\n                    etherscanTxs[hashKey].tokenSymbol = iTx.tokenSymbol;\n                  }\n                break;\n                case 'CurveIn':\n                case 'CurveOut':\n                case 'CurveZapIn':\n                case 'CurveZapOut':\n                case 'CurveDepositIn':\n                case 'CurveDepositOut':\n                  etherscanTxs[hashKey].tokenSymbol = token;\n                break;\n                default:\n                break;\n              }\n            }   \n          }\n        }\n      });\n    });\n    \n    curveTransfersTxs.forEach( tx => {\n      if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n        etherscanTxs[tx.hashKey] = tx;\n      }\n    });\n  \n    if (processTxs){\n      etherscanTxs = await this.processTransactions(etherscanTxs,enabledTokens,processStoredTxs);\n    }\n\n    // console.log('etherscanTxs',etherscanTxs);\n\n    return etherscanTxs;\n  }\n  addStoredTransaction = (txKey,transaction) => {\n\n    const account = this.props && this.props.account ? this.props.account : null;\n    const selectedToken = this.props && this.props.selectedToken ? this.props.selectedToken : null;\n\n    if (!account || !selectedToken || !this.props.availableTokens || !this.props.availableTokens[selectedToken]){\n      return false;\n    }\n\n    const tokenConfig = this.props.availableTokens[selectedToken];\n    const tokenKey = tokenConfig.idle.token;\n\n    let storedTxs = this.getStoredTransactions();\n    if (!storedTxs[account]){\n      storedTxs[account] = {};\n    }\n\n    if (!storedTxs[account][tokenKey]){\n      storedTxs[account][tokenKey] = {};\n    }\n\n    storedTxs[account][tokenKey][txKey] = transaction;\n    this.updateStoredTransactions(storedTxs);\n  }\n  updateStoredTransactions = transactions => {\n    this.setLocalStorage('transactions',JSON.stringify(transactions));\n  }\n  /*\n  Merge storedTxs with this.props.transactions\n  */\n  getStoredTransactions = (account=null,tokenKey=null,selectedToken=null) => {\n    const storedTxs = this.getStoredItem('transactions',true,{});\n    const transactions = this.props.transactions ? { ...this.props.transactions } : {};\n    let output = storedTxs;\n\n    if (account){\n      if (storedTxs[account]){\n        output = storedTxs[account];\n        if (tokenKey){\n          output = output[tokenKey] ? output[tokenKey] : {};\n\n          if (selectedToken){\n            Object.keys(transactions).forEach(txKey => {\n              const tx = transactions[txKey];\n              if (!output[txKey] && tx.token && tx.token.toUpperCase() === selectedToken.toUpperCase()){\n                output[txKey] = transactions[txKey];\n              }\n            });\n          }\n        }\n      } else {\n        output = {};\n      }\n    }\n\n    return output;\n  }\n  processTransactions = async (etherscanTxs,enabledTokens=[],processStoredTxs=true) => {\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let txReceipts = {};\n    let storedTxs = this.getStoredTransactions();\n\n    // Init storedTxs for pair account-token if empty\n    if (typeof storedTxs[this.props.account] !== 'object'){\n      storedTxs[this.props.account] = {};\n    }\n\n    // Take base tokens addresses and configs\n    const baseTokensConfigs = {};\n    const baseTokensAddresses = [];\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n    Object.keys(curveAvailableTokens).forEach( token => {\n      const curveTokenConfig = curveAvailableTokens[token];\n      const baseTokenConfig = this.getGlobalConfig(['stats','tokens',curveTokenConfig.baseToken]);\n      const baseTokenAddress = baseTokenConfig.address.toLowerCase();\n      baseTokensConfigs[baseTokenAddress] = baseTokenConfig;\n      baseTokensConfigs[baseTokenAddress].token = curveTokenConfig.baseToken;\n      baseTokensAddresses.push(baseTokenAddress);\n    });\n\n    const curveZapContract = this.getGlobalConfig(['curve','zapContract']);\n    // const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    // const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    // const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    await this.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n      const idleToken = tokenConfig.idle.token;\n\n      // Init storedTxs for pair account-token if empty\n      if (typeof storedTxs[this.props.account][tokenKey] !== 'object'){\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      const minedTxs = {...storedTxs[this.props.account][tokenKey]};\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        await this.asyncForEach(filteredTxs,async (tx,index) => {\n          const txKey = `tx${tx.timeStamp}000`;\n          const storedTx = storedTxs[this.props.account][tokenKey][txKey] ? storedTxs[this.props.account][tokenKey][txKey] : tx;\n\n          let tokenPrice = null;\n          \n          if (storedTx.tokenPrice && !this.BNify(storedTx.tokenPrice).isNaN()){\n            tokenPrice = this.BNify(storedTx.tokenPrice);\n          } else {\n            tokenPrice = await this.getIdleTokenPrice(tokenConfig,tx.blockNumber,tx.timeStamp);\n            storedTx.tokenPrice = tokenPrice;\n          }\n\n          let idleTokens = this.BNify(tx.value);\n          let tokensTransfered = tokenPrice.times(idleTokens);\n\n          // Add transactionHash to storedTx\n          if (!storedTx.transactionHash){\n            storedTx.transactionHash = tx.hash;\n          }\n\n          // Deposited\n          switch (tx.action){\n            case 'Send':\n            case 'Receive':\n            case 'Swap':\n            case 'SwapOut':\n            case 'Migrate':\n              if (!storedTx.tokenAmount){\n                storedTx.idleTokens = idleTokens;\n                storedTx.value = tokensTransfered;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.tokenSymbol = selectedToken;\n              }\n            break;\n            case 'Deposit':\n            case 'Redeem':\n              if (!storedTx.tokenAmount){\n                storedTx.value = idleTokens;\n                storedTx.tokenAmount = idleTokens;\n                storedTx.idleTokens = idleTokens.div(tokenPrice);\n              }\n            break;\n            case 'Withdraw':\n              if (!storedTx.tokenAmount){\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.value = storedTx.withdrawnValue;\n              }\n            break;\n            case 'CurveIn':\n            case 'CurveOut':\n              if (!storedTx.tokenAmount){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n            break;\n            case 'CurveTransferIn':\n            case 'CurveTransferOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n                storedTx.tokenAmount = this.BNify(storedTx.curveTokens).times(storedTx.curveTokenPrice);\n              }\n\n              storedTx.idleTokens = this.BNify(0);\n            break;\n            case 'CurveZapIn':\n            case 'CurveZapOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              if (!storedTx.tokenAmount){\n\n                storedTx.tokenAmount = this.BNify(0);\n                storedTx.idleTokens = this.BNify(0);\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise( async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n                    if (err){\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt){\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]){\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter( log => (baseTokensAddresses.includes(log.address.toLowerCase()) && log.topics[log.topics.length-1].toLowerCase() === `0x00000000000000000000000${curveZapContract.address.replace('x','').toLowerCase()}` ) );\n\n                  this.customLog('filteredLogs',filteredLogs);\n\n                  if (filteredLogs && filteredLogs.length){\n                    filteredLogs.forEach( log => {\n                      let tokenAmount = parseInt(log.data,16);\n                      const baseTokensConfig = baseTokensConfigs[log.address.toLowerCase()];\n                      const tokenDecimals = baseTokensConfig.decimals;\n                      tokenAmount = this.fixTokenDecimals(tokenAmount,tokenDecimals);\n                      storedTx.tokenAmount = storedTx.tokenAmount.plus(tokenAmount);\n                      this.customLog('Add tokenAmount ('+tx.hash+')',baseTokensConfig.token,tokenAmount.toFixed(5),storedTx.tokenAmount.toFixed(5));\n                    });\n                  }\n                }\n              }\n            break;\n            case 'CurveDepositIn':\n            case 'CurveDepositOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              storedTx.tokenAmount = this.BNify(storedTx.value);\n\n              if (!storedTx.idleTokens){\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise( async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n                    if (err){\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt){\n                  const curveTokenConfig = this.getGlobalConfig(['curve','availableTokens',idleToken]);\n                  const idleTokenDecimals = curveTokenConfig && curveTokenConfig.decimals ? curveTokenConfig.decimals : 18;\n                  const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]){\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter( log => (log.address.toLowerCase()===idleTokenAddress ) );\n                  if (filteredLogs && filteredLogs.length){\n                    idleTokens = parseInt(filteredLogs[0].data,16);\n                    idleTokens = this.fixTokenDecimals(idleTokens,idleTokenDecimals);\n                    storedTx.idleTokens = idleTokens;\n                  }\n                }\n              }\n            break;\n            default:\n            break;\n          }\n            \n          // Save token for future filtering\n          storedTx.token = selectedToken;\n\n          // Save processed tx\n          etherscanTxs[tx.hashKey] = storedTx;\n\n          // Store processed Tx\n          storedTxs[this.props.account][tokenKey][txKey] = storedTx;\n\n          // Remove from minted Txs\n          delete minedTxs[txKey];\n        });\n      }\n\n      // Process Stored txs\n      if (processStoredTxs){\n        etherscanTxs = await this.processStoredTxs(etherscanTxs,[selectedToken],this.props.transactions);\n      }\n    });\n\n    // Update Stored txs\n    if (storedTxs){\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  processStoredTxs = async (etherscanTxs,enabledTokens=[],txsToProcess=null) => {\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let storedTxs = this.getStoredItem('transactions',true,{})\n\n    // Init storedTxs\n    if (!storedTxs[this.props.account]){\n      storedTxs[this.props.account] = {};\n    }\n\n    etherscanTxs = Object.assign({},etherscanTxs);\n\n    const networkId = this.getRequiredNetworkId();\n\n    // this.customLog('Processing stored txs',enabledTokens);\n\n    await this.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n\n      // Init storedTxs\n      if (!storedTxs[this.props.account][tokenKey]){\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      txsToProcess = txsToProcess && Object.values(txsToProcess).length ? txsToProcess : this.getStoredTransactions(this.props.account,tokenKey,selectedToken);\n      \n      // this.customLog('txsToProcess',selectedToken,txsToProcess);\n\n      // if (!Object.values(txsToProcess).length && selectedToken==='DAI' && Object.values(this.props.transactions).length>0){\n      //   debugger;\n      // }\n\n      // Debug transactions\n      /*\n      txsToProcess['xxxxx'] = {\n        status:'success',\n        created:Date.now(),\n        method:'executeMetaTransaction',\n        token:selectedToken.toUpperCase(),\n        transactionHash:'0x000000000000000000000000000'\n      };\n      */\n\n      await this.asyncForEach(Object.keys(txsToProcess),async (txKey,i) => {\n        const tx = txsToProcess[txKey];\n\n        // Skip wrong token\n        if (!tx || !tx.token || tx.token.toUpperCase() !== selectedToken.toUpperCase() || (tx.networkId && parseInt(tx.networkId) !== parseInt(networkId))){\n          return false;\n        }\n\n        const isStoredTx = storedTxs && storedTxs[this.props.account] && storedTxs[this.props.account][tokenKey] && storedTxs[this.props.account][tokenKey][txKey];\n\n        const allowedMethods = {\n          mintIdleToken:'Deposit',\n          redeemIdleToken:'Redeem',\n          migrateFromToIdle:'Migrate',\n          mintIdleTokensProxy:'Deposit',\n          migrateFromAaveToIdle:'Migrate',\n          migrateFromIearnToIdle:'Migrate',\n          executeMetaTransaction:'Migrate',\n          migrateFromFulcrumToIdle:'Migrate',\n          migrateFromCompoundToIdle:'Migrate',\n        };\n        const pendingStatus = ['pending','started'];\n        const txSucceeded = tx.status === 'success';\n        const txPending = pendingStatus.includes(tx.status);\n        const isMetaTx = tx.method === 'executeMetaTransaction';\n        const txHash = tx.transactionHash ? tx.transactionHash : null;\n        const methodIsAllowed = Object.keys(allowedMethods).includes(tx.method);\n\n        // Skip transaction if already present in etherscanTxs with same status\n        if (txHash && etherscanTxs[txHash] && etherscanTxs[txHash].tokenPrice){\n          return false;\n        }\n\n        if (txPending && txHash && !etherscanTxs[txHash] && methodIsAllowed && tx.params.length){\n          // this.customLog('processStoredTxs',tx.method,tx.status,tx.params);\n          const isMigrationTx = allowedMethods[tx.method] === 'Migrate';\n          const decimals = isMigrationTx ? 18 : tokenConfig.decimals;\n          etherscanTxs[`t${tx.created}`] = {\n            status:'Pending',\n            token:selectedToken,\n            action:allowedMethods[tx.method],\n            timeStamp:parseInt(tx.created/1000),\n            hash:txHash ? tx.transactionHash : null,\n            tokenSymbol:isMigrationTx ? tokenConfig.idle.token : selectedToken,\n            value: tx.value ? tx.value : this.fixTokenDecimals(tx.params[0],decimals).toString()\n          };\n\n          return false;\n        }\n\n        // Skip invalid txs\n        if (!txSucceeded || !txHash || !methodIsAllowed){\n          return false;\n        }\n\n        let realTx = tx.realTx ? tx.realTx : null;\n\n        if (!realTx){\n          // this.customLog('loadTxs - getTransaction',tx.transactionHash);\n          realTx = await (new Promise( async (resolve, reject) => {\n            this.props.web3.eth.getTransaction(tx.transactionHash,(err,txReceipt)=>{\n              if (err){\n                reject(err);\n              }\n              resolve(txReceipt);\n            });\n          }));\n        }\n\n        // this.customLog('realTx (localStorage)',realTx);\n\n        // Skip txs from other wallets if not meta-txs\n        if (!realTx || (!isMetaTx && realTx.from.toLowerCase() !== this.props.account.toLowerCase())){\n          return false;\n        }\n\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig,realTx.blockNumber,realTx.timeStamp);\n\n        realTx.status = 'Completed';\n        realTx.action = allowedMethods[tx.method];\n        realTx.contractAddress = tokenConfig.address;\n        realTx.timeStamp = parseInt(tx.created/1000);\n\n        let txValue = null;\n        switch (tx.method){\n          case 'mintIdleToken':\n          case 'mintIdleTokensProxy':\n            if (!tx.params){\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (realTx.to.toLowerCase() !== tokenConfig.idle.address.toLowerCase()){\n              // Remove wrong contract tx\n              if (isStoredTx){\n                delete storedTxs[this.props.account][tokenKey][txKey];\n              }\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - wrong contract');\n              return false;\n            }\n\n            txValue = tx.params ? this.fixTokenDecimals(tx.params[0],tokenConfig.decimals).toString() : 0;\n            if (!txValue){\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - value is zero ('+txValue+')');\n              return false;\n            }\n\n            realTx.value = txValue;\n            realTx.tokenAmount = txValue;\n          break;\n          case 'redeemIdleToken':\n            if (!tx.params){\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (!realTx.tokenPrice){\n              const redeemedValueFixed = this.fixTokenDecimals(tx.params[0],18).times(tokenPrice);\n              realTx.tokenPrice = tokenPrice;\n              realTx.value = redeemedValueFixed;\n              realTx.tokenAmount = redeemedValueFixed;\n            }\n          break;\n          case 'executeMetaTransaction':\n            let executeMetaTransactionReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!executeMetaTransactionReceipt){\n              executeMetaTransactionReceipt = await (new Promise( async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash,(err,tx)=>{\n                  if (err){\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!executeMetaTransactionReceipt){\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt){\n              tx.txReceipt = executeMetaTransactionReceipt;\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            let action = null;\n            let executeMetaTransactionContractAddr = null;\n            let executeMetaTransactionInternalTransfers = [];\n            const IdleProxyMinterInfo = this.getGlobalConfig(['contract','deposit','proxyContract']);\n\n            // Handle migration tx\n            if (tokenConfig.migration && tokenConfig.migration.oldContract){\n              if (executeMetaTransactionReceipt.logs){\n                executeMetaTransactionContractAddr = tokenConfig.migration.oldContract.address.replace('x','').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n              } else if (executeMetaTransactionReceipt.events){\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length){\n                action = 'Migrate';\n              }\n            }\n\n            // Handle deposit tx\n            if (!executeMetaTransactionInternalTransfers.length){\n              if (executeMetaTransactionReceipt.logs){\n                executeMetaTransactionContractAddr = tokenConfig.idle.address.replace('x','').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n\n                // Handle deposit made with proxy contract\n                if (!executeMetaTransactionInternalTransfers.length && IdleProxyMinterInfo){\n                  executeMetaTransactionContractAddr = IdleProxyMinterInfo.address.replace('x','').toLowerCase();\n                  executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n                }\n              } else if (executeMetaTransactionReceipt.events){\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length){\n                action = 'Deposit';\n              }\n            }\n\n            if (!executeMetaTransactionInternalTransfers.length){\n              return false;\n            }\n\n            const internalTransfer = executeMetaTransactionInternalTransfers[0];\n\n            const metaTxValue = internalTransfer.data ? parseInt(internalTransfer.data,16) : (internalTransfer.raw && internalTransfer.raw.data) ? parseInt(internalTransfer.raw.data,16) : null;\n\n            if (!metaTxValue){\n              return false;\n            }\n\n            const metaTxValueFixed = this.fixTokenDecimals(metaTxValue,tokenConfig.decimals);\n            realTx.action = action;\n            realTx.value = metaTxValueFixed;\n            realTx.tokenAmount = metaTxValueFixed;\n            // this.customLog(metaTxValueFixed.toString());\n          break;\n          case 'migrateFromCompoundToIdle':\n          case 'migrateFromFulcrumToIdle':\n          case 'migrateFromAaveToIdle':\n          case 'migrateFromIearnToIdle':\n          case 'migrateFromToIdle':\n            if (!tokenConfig.migration || !tokenConfig.migration.oldContract){\n              return false;\n            }\n\n            let migrationTxReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!migrationTxReceipt){\n              migrationTxReceipt = await (new Promise( async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash,(err,tx)=>{\n                  if (err){\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!migrationTxReceipt){\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt){\n              tx.txReceipt = migrationTxReceipt;\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            const migrationContractAddr = tokenConfig.migration.migrationContract.address.toLowerCase().replace('x','');\n            const contractAddress = tokenConfig.idle.address.toLowerCase().replace('x','');\n            const migrationTxInternalTransfers = migrationTxReceipt.logs.filter((tx) => { return tx.topics.length>=3 && tx.topics[tx.topics.length-2].toLowerCase() === `0x00000000000000000000000${migrationContractAddr}` && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${contractAddress}`; });\n\n            if (!migrationTxInternalTransfers.length){\n              return false;\n            }\n\n            const migrationInternalTransfer = migrationTxInternalTransfers.pop();\n\n            const decodedLogs = this.props.web3.eth.abi.decodeLog([\n              {\n                internalType: \"uint256\",\n                name: \"_token\",\n                type: \"uint256\"\n              },\n            ],migrationInternalTransfer.data,migrationInternalTransfer.topics);\n\n            if (!decodedLogs || !decodedLogs._token){\n              return false;\n            }\n\n            const migrationValue = decodedLogs._token;\n            const migrationValueFixed = this.fixTokenDecimals(migrationValue,tokenConfig.decimals);\n            realTx.value = migrationValueFixed.toString();\n          break;\n          default:\n          break;\n        }\n\n        realTx.tokenPrice = tokenPrice;\n        realTx.token = selectedToken;\n        realTx.tokenSymbol = selectedToken;\n        realTx.idleTokens = tokenPrice.times(this.BNify(realTx.value));\n\n        // Save processed tx\n        etherscanTxs[txHash] = realTx;\n        // etherscanTxs.push(realTx);\n\n        // Store processed Tx\n        if (!tx.realTx){\n          tx.realTx = realTx;\n          storedTxs[this.props.account][tokenKey][txKey] = tx;\n        }\n      });\n    });\n\n    // Update Stored Txs\n    if (storedTxs){\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  saveCachedRequest = (endpoint,alias=false,data) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now()/1000);\n    const dataToCache = {\n      data,\n      timestamp\n    };\n    return this.addKeyToCachedDataWithLocalStorage('cachedRequests',key,dataToCache);\n    // return this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n  }\n  getCustomAddress = () => {\n    return this.getStoredItem('customAddress',false);\n  }\n  setCustomAddress = (customAddress) => {\n    return this.setLocalStorage('customAddress',customAddress);\n  }\n  getCachedRequest = (endpoint,alias=false) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key]){\n      return cachedRequests[key].data;\n    }\n    return null;\n  }\n  makeRequest = async(endpoint,error_callback=false,config=null) => {\n    const data = await axios\n                  .get(endpoint,config)\n                  .catch(err => {\n                    if (typeof error_callback === 'function'){\n                      error_callback(err);\n                    }\n                  });\n    return data;\n  }\n  makeEtherscanApiRequest = async (endpoint,keys=[],TTL=120,apiKeyIndex=0) => {\n    const timestamp = parseInt(Date.now()/1000);\n    \n    // Check if already exists\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[endpoint] && cachedRequests[endpoint].timestamp && timestamp-cachedRequests[endpoint].timestamp<TTL){\n      return cachedRequests[endpoint].data;\n    }\n\n    const apiKey = keys[apiKeyIndex];\n    const data = await this.makeRequest(endpoint+'&apikey='+apiKey);\n\n    // console.log('makeEtherscanApiRequest',endpoint+'&apikey='+apiKey,apiKeyIndex+'/'+keys.length,data,(data.data ? data.data.message : null),apiKeyIndex<keys.length-1);\n\n    if (data && data.data && data.data.message === 'OK'){\n      const dataToCache = {\n        data,\n        timestamp\n      };\n      // this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n      this.addKeyToCachedDataWithLocalStorage('cachedRequests',endpoint,dataToCache);\n      return data;\n    } else if (apiKeyIndex<keys.length-1) {\n      return await this.makeEtherscanApiRequest(endpoint,keys,TTL,apiKeyIndex+1);\n    }\n    return null;\n  }\n  makeCachedRequest = async (endpoint,TTL=60,return_data=false,alias=false,config=null) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now()/1000);\n    \n    // Check if already exists\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n\n    // console.log('makeCachedRequest',endpoint,TTL,cachedRequests[key],(cachedRequests[key] ? timestamp-cachedRequests[key].timestamp : null));\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key] && cachedRequests[key].timestamp && timestamp-cachedRequests[key].timestamp<TTL){\n      return (cachedRequests[key].data && return_data ? cachedRequests[key].data.data : cachedRequests[key].data);\n    }\n\n    const data = await this.makeRequest(endpoint,false,config);\n\n    const dataToCache = {\n      data,\n      timestamp\n    };\n\n    // console.log('makeCachedRequest - CACHE',key,dataToCache);\n\n    // this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n    this.addKeyToCachedDataWithLocalStorage('cachedRequests',key,dataToCache);\n    return (data && return_data ? data.data : data);\n  }\n  getTransactionError = error => {\n    let output = 'error';\n    if (parseInt(error.code)){\n      const errorCode = parseInt(error.code);\n      switch (errorCode){\n        case 4001:\n          output = 'denied';\n        break;\n        default:\n          output = `error_${errorCode}`;\n        break;\n      }\n    } else if (error.message){\n      output = error.message.split(\"\\n\")[0]; // Take just the first line of the error\n    }\n\n    return output;\n  }\n  getGlobalConfigs = () => {\n    return globalConfigs;\n  }\n  getArrayPath = (path,array) => {\n    if (!array){\n      return null;\n    }\n    path = Object.assign([],path);\n    if (path.length>0){\n      const prop = path.shift();\n      if (!path.length){\n        return array[prop] ? array[prop] : null;\n      } else if (array[prop]) {\n        return this.getArrayPath(path,array[prop]);\n      }\n    }\n    return null;\n  }\n  getGlobalConfig = (path,configs=false) => {\n    configs = configs ? configs : globalConfigs;\n    if (path.length>0){\n      const prop = path.shift();\n      if (!path.length){\n        return configs[prop] !== undefined ? configs[prop] : null;\n      } else if (configs[prop]) {\n        return this.getGlobalConfig(path,configs[prop]);\n      }\n    }\n    return null;\n  }\n  getAppUrl = (path) => {\n    return globalConfigs.baseURL+'/'+path;\n  }\n  getCurrentEnvironment = () => {\n    let environment = Object.keys(globalConfigs.environments).find( env => {\n      const envUrl = globalConfigs.environments[env].url;\n      return envUrl.toLowerCase() === window.location.origin.toLowerCase();\n    });\n    return environment || 'beta';\n  }\n  checkUrlPolygon = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.polygonUrl.toLowerCase());\n  }\n  checkUrlOrigin = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n  }\n  checkUrlBeta = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.betaURL.toLowerCase());\n  }\n  sendGoogleAnalyticsPageview = async (page=null) => {\n    page = page || window.location.hash.substr(1);\n    const googlePageviewInfo = this.getGlobalConfig(['analytics','google','pageView']);\n    const isOrigin = this.checkUrlOrigin();\n    if (googlePageviewInfo.enabled && isOrigin && window.ga){\n      window.ga('set', 'page', page);\n      window.ga('send', 'pageview');\n    }\n  }\n  sendGoogleAnalyticsEvent = async (eventData,callback=null) => {\n\n    const googleEventsInfo = globalConfigs.analytics.google.events;\n    const debugEnabled = googleEventsInfo.debugEnabled;\n    const originOk = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n\n    if (googleEventsInfo.enabled && window.ga && ( debugEnabled || originOk)){\n\n      // Check if testnet postfix required\n      if (googleEventsInfo.addPostfixForTestnet){\n        // Postfix network name if not mainnet\n        if (globalConfigs.network.requiredNetwork !== 1){\n          const currentNetwork = globalConfigs.network.availableNetworks[globalConfigs.network.requiredNetwork];\n          eventData.eventCategory += `_${currentNetwork}`;\n        // Postfix test for debug\n        } else if (debugEnabled && !originOk) {\n          eventData.eventCategory += '_test';\n        }\n      }\n\n      await (new Promise( async (resolve, reject) => {\n        eventData.hitCallback = () => {\n          resolve(true);\n        };\n        eventData.hitCallbackFail = () => {\n          reject();\n        };\n\n        window.ga('send', 'event', eventData);\n      }));\n\n      if (typeof callback === 'function'){\n        callback();\n      }\n    }\n\n    if (typeof callback === 'function'){\n      callback();\n    }\n\n    return false;\n  }\n  createContract = async (name, address, abi) => {\n    try {\n      const contract = new this.props.web3.eth.Contract(abi, address);\n      return {name, contract};\n    } catch (error) {\n      this.customLogError(\"Could not create contract.\",name,address,error);\n    }\n    return null;\n  }\n  getWalletProvider = (defaultProvider=null) => {\n    return this.getStoredItem('walletProvider',false,defaultProvider);\n  }\n  simpleIDPassUserInfo = (userInfo,simpleID) => {\n    if (!userInfo.address && this.props.account){\n      userInfo.address = this.props.account;\n    }\n    if (!userInfo.provider){\n      userInfo.provider = this.getWalletProvider();\n    }\n    if (typeof userInfo.email !== 'undefined' && !userInfo.email){\n      delete userInfo.email;\n    }\n    if (!userInfo.address){\n      return false;\n    }\n    simpleID = simpleID ? simpleID : (this.props.simpleID ? this.props.simpleID : (typeof this.props.initSimpleID === 'function' ? this.props.initSimpleID() : null));\n    if (simpleID){\n      return simpleID.passUserInfo(userInfo);\n    }\n    return false;\n  }\n  getEtherscanTransactionUrl = (txHash,requiredNetwork=null) => {\n    const defaultNetwork = this.getGlobalConfig(['network','requiredNetwork']);\n    requiredNetwork = requiredNetwork || this.getRequiredNetworkId();\n    const explorer = this.getGlobalConfig(['network','availableNetworks',requiredNetwork,'explorer']);\n    const defaultUrl = this.getGlobalConfig(['network','providers','etherscan','baseUrl',defaultNetwork]);\n    const baseurl = this.getGlobalConfig(['network','providers',explorer,'baseUrl',requiredNetwork]) || defaultUrl;\n    return txHash ? `${baseurl}/tx/${txHash}` : null;\n  }\n  getEtherscanAddressUrl = (address,requiredNetwork=null) => {\n    const defaultNetwork = this.getGlobalConfig(['network','requiredNetwork']);\n    requiredNetwork = requiredNetwork || this.getRequiredNetworkId();\n    const explorer = this.getGlobalConfig(['network','availableNetworks',requiredNetwork,'explorer']);\n    const defaultUrl = this.getGlobalConfig(['network','providers','etherscan','baseUrl',defaultNetwork]);\n    const baseurl = this.getGlobalConfig(['network','providers',explorer,'baseUrl',requiredNetwork]) || defaultUrl;\n    return address ? `${baseurl}/address/${address}` : null;\n  }\n  formatMoney = (amount, decimalCount = 2, decimal = \".\", thousands = \",\") => {\n    try {\n      decimalCount = Math.abs(decimalCount);\n      decimalCount = isNaN(decimalCount) ? 2 : decimalCount;\n\n      const negativeSign = amount < 0 ? \"-\" : \"\";\n\n      let i = parseInt(amount = Math.abs(Number(amount) || 0).toFixed(decimalCount)).toString();\n      let j = (i.length > 3) ? i.length % 3 : 0;\n\n      return negativeSign + (j ? i.substr(0, j) + thousands : '') + i.substr(j).replace(/(\\d{3})(?=\\d)/g, \"$1\" + thousands) + (decimalCount ? decimal + Math.abs(amount - i).toFixed(decimalCount).slice(2) : \"\");\n    } catch (e) {\n      return null;\n    }\n  }\n  getSnapshotProposals = async (activeOnly=false) => {\n\n    const cachedDataKey = `snapshotProposals_${activeOnly}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null){\n      return cachedData;\n    }\n\n    const whitelist = this.getGlobalConfig(['network','providers','snapshot','whitelist']).map( addr => addr.toLowerCase() );\n    const endpoint = this.getGlobalConfig(['network','providers','snapshot','endpoints','proposals']);\n    let proposals = await this.makeCachedRequest(endpoint,1440,true);\n\n    // console.log('getSnapshotProposals',proposals);\n\n    if (proposals && !proposals.error){\n      proposals = Object.values(proposals);\n\n      const currTime = parseInt(Date.now()/1000);\n      if (activeOnly){\n        proposals =  proposals.filter( p => (p.msg.payload.start<=currTime && p.msg.payload.end>currTime) );\n      }\n\n      // console.log(proposals);\n\n      const validProposals = [];\n      await this.asyncForEach(proposals, async (p) => {\n        // Add proposal if ended\n        if (p.msg.payload.end<=currTime || whitelist.includes(p.address.toLowerCase())){\n          validProposals.push(p);\n        } else {\n          const blockNumber = p.msg.payload.snapshot;\n\n          let checkedStrategies = false;\n          await this.asyncForEach( p.msg.payload.metadata.strategies, async (s) => {\n            if (checkedStrategies){\n              return;\n            }\n            if (s.name==='erc20-balance-of'){\n              const tokenName = s.params.symbol;\n              const tokenContract = this.getContractByName(tokenName);\n              if (tokenContract){\n                const tokenBalance = await this.getTokenBalance(tokenName,p.address,true,blockNumber);\n                // console.log(p.relayerIpfsHash,p.address,s.name,tokenBalance ? tokenBalance.toFixed() : null);\n                if (tokenBalance && this.BNify(tokenBalance).gt(100)){\n                  checkedStrategies = true;\n                }\n              }\n            } else {\n              // checkedStrategies = true;\n            }\n\n            // console.log(p.relayerIpfsHash,p.address,s.name,checkedStrategies);\n          });\n          \n          // Add proposal is passed token balances check\n          if (checkedStrategies){\n            validProposals.push(p);\n          }\n        }\n      });\n\n      return this.setCachedData(cachedDataKey,validProposals);\n    }\n  }\n  getAprsFromApi = async (networkId=null) => {\n    const config = this.getGlobalConfig(['stats','config']);\n    if (!networkId || !this.getGlobalConfig(['network','enabledNetworks']).includes(networkId)){\n      networkId = this.getRequiredNetworkId();\n    }\n    const endpointInfo = this.getGlobalConfig(['stats','aprs']);\n    const aprs = await this.makeCachedRequest(endpointInfo.endpoint[networkId],endpointInfo.TTL,true,false,config);\n    return aprs;\n  }\n  getTokenApiData = async (address,isRisk=null,startTimestamp=null,endTimestamp=null,forceStartTimestamp=false,frequency=null,order=null,limit=null) => {\n    const networkId = this.getRequiredNetworkId();\n    // const statsConfig = this.getGlobalConfig(['stats']);\n    // const statsEnabled = statsConfig.enabled && statsConfig.availableNetworks.includes(networkId);\n    // if (!statsEnabled){\n    //   return [];\n    // }\n\n    // Check for cached data\n    const cachedDataKey = `tokenApiData_${networkId}_${address}_${isRisk}_${frequency}_${order}_${limit}`;\n    let cachedData = this.getCachedData(cachedDataKey);\n\n    if (cachedData !== null){\n      // Check for fittable start and end time\n      const filteredCachedData = cachedData.filter( c => ( (c.startTimestamp===null || (startTimestamp && c.startTimestamp<=startTimestamp)) && (c.endTimestamp===null || (endTimestamp && c.endTimestamp>=endTimestamp)) ) )\n      if (filteredCachedData && filteredCachedData.length>0){\n        let filteredData = filteredCachedData.pop().data;\n        if (filteredData){\n          filteredData = filteredData.filter( d => ((!startTimestamp || d.timestamp>=startTimestamp) && (!endTimestamp || d.timestamp<=endTimestamp)) );\n          if (filteredData.length>0){\n            return filteredData;\n          }\n        }\n      }\n    // Initialize cachedData\n    } else {\n      cachedData = [];\n    }\n\n    const apiInfo = this.getGlobalConfig(['stats','rates']);\n    let endpoint = `${apiInfo.endpoint[networkId]}${address}`;\n\n    // console.log('getTokenApiData',cachedDataKey,apiInfo,endpoint);\n\n    if (startTimestamp || endTimestamp || isRisk !== null || frequency !== null){\n      const params = [];\n\n      if (startTimestamp && parseInt(startTimestamp)){\n        if (forceStartTimestamp){\n          params.push(`start=${startTimestamp}`);\n        } else {\n          const start = startTimestamp-(60*60*24*2); // Minus 1 day for Volume graph\n          params.push(`start=${start}`);\n        }\n      }\n\n      if (endTimestamp && parseInt(endTimestamp)){\n        params.push(`end=${endTimestamp}`);\n      }\n\n      if (isRisk !== null){\n        params.push(`isRisk=${isRisk}`);\n      }\n\n      if (frequency !== null && parseInt(frequency)){\n        params.push(`frequency=${frequency}`);\n      }\n\n      if (order !== null){\n        params.push(`order=${order}`);\n      }\n\n      if (limit !== null && parseInt(limit)){\n        params.push(`limit=${limit}`);\n      }\n\n      if (params.length){\n        endpoint += '?'+params.join('&');\n      }\n    }\n\n    const config = this.getGlobalConfig(['stats','config']);\n    let output = await this.makeRequest(endpoint,false,config);\n    if (!output){\n      return [];\n    }\n\n    const data = output.data;\n\n    let filteredData = null;\n    if (isRisk !== null){\n      filteredData = data.filter( d => ( d.isRisk === isRisk ) );\n    }\n\n    cachedData.push({\n      isRisk,\n      endTimestamp,\n      startTimestamp,\n      data:filteredData,\n    });\n\n    this.setCachedData(cachedDataKey,cachedData);\n\n    return data;\n  }\n  getTokenExchangeRate = async (contractName,exchangeRateParams) => {\n    const cachedDataKey = `exchangeRate_${contractName}_${exchangeRateParams.name}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const exchangeRate = await this.genericContractCall(contractName,exchangeRateParams.name,exchangeRateParams.params);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,exchangeRate,null);\n  }\n  getTokenDecimals = async (contractName) => {\n    contractName = contractName || this.props.selectedToken;\n\n    if (!contractName){\n      return false;\n    }\n\n    const cachedDataKey = `contractDecimals_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const tokenConfig = this.getGlobalConfig(['stats','tokens',contractName]);\n    const decimals = tokenConfig && tokenConfig.decimals ? tokenConfig.decimals : await this.genericContractCall(contractName,'decimals');\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,decimals,null);\n  }\n  getAvgApr = (aprs,allocations,totalAllocation) => {\n    if (aprs && allocations && totalAllocation){\n      let avgApr = Object.keys(aprs).reduce((aprWeighted,protocolAddr) => {\n        const allocation = this.BNify(allocations[protocolAddr]);\n        const apr = this.BNify(aprs[protocolAddr]);\n        return this.BNify(aprWeighted).plus(allocation.times(apr));\n      },0);\n\n      if (avgApr){\n        return this.BNify(avgApr).div(totalAllocation);\n      }\n    }\n    return null;\n  }\n  getFrequencySeconds = (frequency,quantity=1) => {\n    const frequency_seconds = {\n      hour:3600,\n      day:86400,\n      week:604800\n    };\n    return frequency_seconds[frequency]*quantity;\n  }\n  getIdleStakingRewardsTxs = async () => {\n    const idleTokenConfig = this.getGlobalConfig(['govTokens','IDLE']);\n    const feeDistributorConfig = this.getGlobalConfig(['tools','stake','props','availableTokens','IDLE','feeDistributor']);\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n    const etherscanApiUrl = etherscanInfo.endpoints[1];\n    const etherscanEndpoint = `${etherscanApiUrl}?module=account&action=tokentx&address=${feeDistributorConfig.address}&sort=desc`;\n    const etherscanTxlist = await this.makeEtherscanApiRequest(etherscanEndpoint,etherscanInfo.keys,3600);\n    // console.log('getIdleStakingRewardsTxs',etherscanEndpoint,etherscanTxlist);\n    if (etherscanTxlist && etherscanTxlist.data && etherscanTxlist.data.result && typeof etherscanTxlist.data.result.filter === 'function'){\n      return etherscanTxlist.data.result.filter( tx => (tx.contractAddress.toLowerCase() === idleTokenConfig.address.toLowerCase() && tx.to.toLowerCase() === feeDistributorConfig.address.toLowerCase() && this.BNify(tx.value).gt(0) ));\n    }\n    return [];\n  }\n  getProtocolInfoByAddress = (addr) => {\n    return this.props.tokenConfig.protocols.find(c => c.address.toLowerCase() === addr.toLowerCase());\n  }\n  integerValue = value => {\n    return this.BNify(value).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  normalizeTokenDecimals = tokenDecimals => {\n    return this.BNify(`1e${tokenDecimals}`);\n  }\n  normalizeTokenAmount = (tokenBalance,tokenDecimals,round=true) => {\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    return this.BNify(tokenBalance).times(normalizedTokenDecimals).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  fixTokenDecimals = (tokenBalance,tokenDecimals,exchangeRate=null) => {\n    if (!tokenDecimals){\n      return this.BNify(tokenBalance);\n    }\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    let balance = this.BNify(tokenBalance).div(normalizedTokenDecimals);\n    if (exchangeRate && !exchangeRate.isNaN()){\n      balance = balance.times(exchangeRate);\n    }\n    return balance;\n  }\n  checkContractPaused = async (contractName=null) => {\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const contractPaused = await this.genericContractCallCached(contractName, 'paused').catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n    // this.customLog('checkContractPaused',this.props.tokenConfig.idle.token,contractPaused);\n    return contractPaused;\n  }\n  getStoredItem = (key,parse_json=true,return_default=null) => {\n    let output = return_default;\n    if (window.localStorage){\n      const item = localStorage.getItem(key);\n      if (item){\n        output = item;\n        if (parse_json){\n          output = JSON.parse(item);\n        }\n      }\n    }\n    if (!output){\n      return return_default;\n    }\n    return output;\n  }\n  clearStoredData = (excludeKeys=[]) => {\n    if (window.localStorage){\n\n      if (!excludeKeys || !excludeKeys.length){\n        return window.localStorage.clear();\n      }\n\n      const storedKeysToRemove = [];\n      for (let i=0;i<window.localStorage.length;i++){\n        const storedKey = window.localStorage.key(i);\n        if (!excludeKeys.includes(storedKey)){\n          storedKeysToRemove.push(storedKey);\n        }\n      }\n      storedKeysToRemove.forEach((storedKey) => {\n        this.removeStoredItem(storedKey)\n      });\n    }\n  }\n  removeStoredItem = (key) => {\n    if (window.localStorage){\n      window.localStorage.removeItem(key);\n      return true;\n    }\n    return false;\n  }\n  setLocalStorage = (key,value,stringify=false) => {\n    if (window.localStorage){\n      try {\n        value = stringify ? JSON.stringify(value) : value;\n        window.localStorage.setItem(key,value);\n        return true;\n      } catch (error) {\n        // this.customLog('setLocalStorage',error);\n        window.localStorage.removeItem(key);\n      }\n    }\n    return false;\n  }\n  checkRebalance = async (tokenConfig) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!tokenConfig){\n      return false;\n    }\n\n    const lastAllocationsPromises = [];\n    const allocations = await this.genericContractCall(tokenConfig.idle.token, 'getAllocations');\n\n    if (!allocations || !allocations.length){\n      return false;\n    }\n\n    for (let protocolIndex=0;protocolIndex<allocations.length;protocolIndex++){\n      const lastAllocationsPromise = new Promise( async (resolve, reject) => {\n        try {\n          const lastAllocations = await this.genericContractCall(tokenConfig.idle.token, 'lastAllocations',[protocolIndex]);\n          resolve(lastAllocations);\n        } catch (error) {\n          console.log(error);\n          resolve(null);\n        }\n      });\n      lastAllocationsPromises.push(lastAllocationsPromise);\n    }\n\n    const newAllocations = await Promise.all(lastAllocationsPromises);\n\n    if (!allocations || !newAllocations){\n      return true;\n    }\n\n    const diff = allocations.filter( (alloc,index) => alloc !== newAllocations[index] );\n\n    return diff.length>0;\n  }\n  checkMigration = async (tokenConfig,account) => {\n\n    if (!tokenConfig || !account){\n      return false;\n    }\n\n    let migrationEnabled = false;\n    let oldContractBalance = null;\n    let oldContractTokenDecimals = null;\n    // let migrationContractApproved = false;\n    let oldContractBalanceFormatted = null;\n\n    // Check migration contract enabled and balance\n    if (tokenConfig.migration && tokenConfig.migration.enabled){\n      const oldContractName = tokenConfig.migration.oldContract.name;\n      const oldContract = this.getContractByName(oldContractName);\n      const migrationContract = this.getContractByName(tokenConfig.migration.migrationContract.name);\n\n      // this.customLog(oldContractName,tokenConfig.migration.migrationContract.name);\n\n      if (oldContract && migrationContract){\n        // Get old contract token decimals\n        oldContractTokenDecimals = await this.getTokenDecimals(oldContractName);\n\n        // this.customLog('Migration - token decimals',oldContractTokenDecimals ? oldContractTokenDecimals.toString() : null);\n\n        // Check migration contract approval\n        // migrationContractApproved = await this.checkMigrationContractApproved();\n\n        // this.customLog('Migration - approved',migrationContractApproved ? migrationContractApproved.toString() : null);\n\n        // Check old contractBalance\n        oldContractBalance = await this.getContractBalance(oldContractName,account);\n\n        if (oldContractBalance){\n          oldContractBalanceFormatted = this.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.BNify(oldContractBalance).gt(0);\n        }\n\n        // this.customLog('Migration - oldContractBalance',oldContractName,account,oldContractBalance,oldContractBalanceFormatted);\n      }\n    }\n\n    // Set migration contract balance\n    return {\n      migrationEnabled,\n      oldContractBalance,\n      oldContractTokenDecimals,\n      oldContractBalanceFormatted,\n    };\n  }\n\n  getContractEvents = async (contractName, eventName, params = {}) => {\n    return await this.getContractPastEvents(contractName, eventName, params);\n  }\n\n  estimateMethodGasUsage = async (contractName, methodName, methodParams = [], account = null) => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n    const contract = this.getContractByName(contractName);\n    if (contract && contract.methods[methodName]){\n      const functionCall = contract.methods[methodName](...methodParams);\n\n      let gasPrice = null;\n      let gasLimit = null;\n      \n      try {\n        [\n          gasPrice,\n          gasLimit\n        ] = await Promise.all([\n          this.props.web3.eth.getGasPrice(),\n          functionCall.estimateGas({from: account})\n        ]);\n      } catch (error) {\n\n      }\n\n      if (gasPrice && gasLimit){\n        return this.fixTokenDecimals(this.fixTokenDecimals(gasPrice,9).times(gasLimit),9);\n      }\n    }\n\n    return this.BNify(0);\n  }\n\n  executeMetaTransaction = async (contract, userAddress, signedParameters, callback, callback_receipt) => {\n    try {\n\n      // const gasLimit = await contract.methods\n      //   .executeMetaTransaction(userAddress, ...signedParameters)\n      //   .estimateGas({ from: userAddress });\n\n      // this.customLog(gasLimit);\n\n      const gasPrice = await this.props.web3.eth.getGasPrice();\n\n      const tx = contract.methods\n        .executeMetaTransaction(userAddress, ...signedParameters)\n        .send({\n          from: userAddress,\n          gasPrice\n          // gasLimit\n        });\n\n      tx.on(\"transactionHash\", function(hash) {\n        this.customLog(`Transaction sent by relayer with hash ${hash}`);\n        callback_receipt()\n      }).once(\"confirmation\", function(confirmationNumber, receipt) {\n        this.customLog(\"Transaction confirmed on chain\",receipt);\n        callback_receipt(receipt);\n      });\n    } catch (error) {\n      this.customLog(error);\n      callback(null,error);\n    }\n  }\n\n  getSignatureParameters_v4 = signature => {\n    if (!this.props.web3.utils.isHexStrict(signature)) {\n      throw new Error(\n        'Given value \"'.concat(signature, '\" is not a valid hex string.')\n      );\n    }\n    var r = signature.slice(0, 66);\n    var s = \"0x\".concat(signature.slice(66, 130));\n    var v = \"0x\".concat(signature.slice(130, 132));\n    v = this.props.web3.utils.hexToNumber(v);\n    if (![27, 28].includes(v)) v += 27;\n    return {\n      r: r,\n      s: s,\n      v: v\n    };\n  };\n\n  constructMetaTransactionMessage = (nonce, chainId, functionSignature, contractAddress) => {\n    return ethereumjsABI.soliditySHA3(\n      [\"uint256\",\"address\",\"uint256\",\"bytes\"],\n      [nonce, contractAddress, chainId, toBuffer(functionSignature)]\n    );\n  }\n\n  checkBiconomyLimits = async (userAddress) => {\n    const biconomyInfo = this.getGlobalConfig(['network','providers','biconomy']);\n    const res = await this.makeRequest(`${biconomyInfo.endpoints.limits}?userAddress=${userAddress}&apiId=${biconomyInfo.params.apiId}`,null,{\n      headers:{\n        'x-api-key':biconomyInfo.params.apiKey\n      }\n    });\n\n    if (res && res.data){\n      return res.data;\n    }\n\n    return null;\n  }\n\n  sendTxWithPermit = async (contractName,methodName,methodParams,nonce,callback,callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    if (!contract.methods[methodName]){\n      callback(null,'Method not found');\n      return false;\n    }\n\n    const functionSignature = contract.methods[methodName](...methodParams).encodeABI();\n\n    try{\n      const userAddress = this.props.account;\n      const chainId = this.getRequiredNetworkId();\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, methodName, methodParams.concat([nonce, r, s, v]), callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      callback(null,error);\n      return false;\n    }\n  }\n\n  buildBiconomyErc20ForwarderTx = async (contractName,tokenAddress,permitType,callData,gasLimit) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      return false;\n    }\n\n    // console.log('Build Tx ',contract._address,tokenAddress,Number(gasLimit),callData);\n\n    const buildParams = {\n      permitType,\n      data:callData,\n      token:tokenAddress,\n      to:contract._address,\n      txGas:parseInt(gasLimit)\n    };\n\n    // console.log('buildBiconomyErc20ForwarderTx',buildParams);\n\n    //Create the call data that the recipient contract will receive\n    const tx = await this.props.erc20ForwarderClient.buildTx(buildParams);\n\n    return tx;\n  }\n\n  getTransactionReceipt = async (hash) => {\n    return await (new Promise( async (resolve, reject) => {\n      this.props.web3.eth.getTransactionReceipt(hash,(err,tx)=>{\n        if (err){\n          reject(err);\n        }\n        resolve(tx);\n      });\n    }));\n  }\n\n  sendBiconomyTxWithErc20Forwarder = async (req,metaInfo,callback,callback_receipt) => {\n\n    let transactionHash = null;\n\n    try {\n      const txResponse = await this.props.erc20ForwarderClient.permitAndSendTxEIP712({req,metaInfo});\n      transactionHash = txResponse.txHash;\n      // console.log('permitAndSendTxEIP712',transactionHash);\n    } catch (error) {\n      // console.log('permitAndSendTxEIP712 ERROR',error);\n      callback(null,true);\n      return false;\n    }\n\n    if (!transactionHash){\n      // console.log('!transactionHash ERROR');\n      callback(null,true);\n      return false;\n    }\n    \n    const tx = {\n      method:'mintIdleToken',\n      transactionHash\n    };\n    // console.log('sendBiconomyTxWithErc20Forwarder - TX',tx);\n    callback_receipt(tx);\n\n    // fetch mined transaction receipt \n    const fetchReceiptIntervalId = window.setInterval(()=> {\n      this.props.web3.eth.getTransactionReceipt(transactionHash, (err, receipt)=> {\n        // console.log('sendBiconomyTxWithErc20Forwarder - RECEIPT',transactionHash,err,receipt);\n        if(!err && receipt){\n          window.clearInterval(fetchReceiptIntervalId);\n          tx.txReceipt = receipt;\n          tx.status = !err && receipt.status ? 'success' : 'error';\n\n          callback(tx,err);\n\n          if (typeof window.updateTransaction === 'function'){\n            window.updateTransaction(tx,transactionHash,tx.status,null);\n          }\n        }\n      });\n    }, 3000);\n\n    return true;\n  }\n\n  sendBiconomyTxWithPersonalSign = async (contractName,functionSignature,callback,callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    try{\n      const userAddress = this.props.account;\n      const nonce = await contract.methods.getNonce(userAddress).call();\n      const chainId = this.getRequiredNetworkId();\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      console.error(error);\n      callback(null,error);\n      return false;\n    }\n  }\n\n  signPermitEIP2612 = async (contractAddress, erc20Name, owner, spender, value, nonce, deadline, chainId) => {\n    if (chainId === undefined) {\n      const result = await this.props.web3.eth.getChainId();\n      chainId = parseInt(result);\n    }\n\n    const domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permit = [\n      { name: \"owner\", type: \"address\" },\n      { name: \"spender\", type: \"address\" },\n      { name: \"value\", type: \"uint256\" },\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"deadline\", type: \"uint256\" },\n    ];\n\n    const domainData = {\n      version: \"2\",\n      name: erc20Name,\n      chainId: chainId,\n      verifyingContract: contractAddress\n    };\n\n    const message = {\n      owner,\n      spender,\n      value,\n      nonce,\n      deadline,\n    };\n\n    const data = JSON.stringify({\n      types: {\n        EIP712Domain: domain,\n        Permit: permit,\n      },\n      primaryType: \"Permit\",\n      domain: domainData,\n      message: message\n    });\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        jsonrpc: '2.0',\n        id: Date.now().toString().substring(9),\n        method: \"eth_signTypedData_v4\",\n        params: [owner, data],\n        from: owner\n      }, (error, res) => {\n        if (error) {\n          return reject(error);\n        }\n\n        resolve(res.result);\n      });\n    });\n  }\n\n  signPermit = async (baseContractName, holder, spenderContractName, addToNonce=0, value=null) => {\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract){\n      return false;\n    }\n\n    const result = await this.props.web3.eth.net.getId();\n    let chainId = parseInt(result);\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permitConfig = this.getGlobalConfig(['permit',baseContractName]);\n\n    const expiry = Math.round(new Date().getTime() / 1000 + 3600);\n    let nonce = permitConfig.nonceMethod ? await baseContract.methods[permitConfig.nonceMethod](holder).call() : null;\n    if (addToNonce>0){\n      nonce = parseInt(nonce)+parseInt(addToNonce);\n    }\n    nonce = nonce.toString();\n\n    const Permit = permitConfig.type;\n    const EIPVersion = permitConfig.EIPVersion;\n\n    const spender = spenderContract._address;\n    const verifyingContract = baseContract._address;\n\n    const permitName = permitConfig.name || baseContractName;\n\n    const domain = {\n      chainId,\n      name: permitName,\n      verifyingContract,\n      version: permitConfig.version.toString() || '1',\n    };\n\n    let message = {};\n\n    switch (EIPVersion){\n      case 2612:\n        const owner = holder;\n        const deadline = expiry;\n        // Unlimited allowance\n        value = value || this.integerValue(this.BNify(2).pow(256).minus(1));\n        message = {\n          value,\n          nonce,\n          owner,\n          spender,\n          deadline\n        };\n      break;\n      default:\n        message = {\n          holder,\n          nonce,\n          expiry,\n          spender,\n          allowed: true,\n        };\n      break;\n    }\n\n    const data = JSON.stringify({\n      domain,\n      message,\n      types: {\n        Permit,\n        EIP712Domain\n      },\n      primaryType: 'Permit',\n    });\n\n    // console.log('Permit',JSON.parse(data));\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        from: holder,\n        jsonrpc: '2.0',\n        params: [holder, data],\n        method: 'eth_signTypedData_v4',\n        id: Date.now().toString().substring(9),\n      }, (error, response) => {\n        if (error || (response && response.error)) {\n          return resolve(null);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          signedParameters.nonce = nonce;\n          signedParameters.expiry = expiry;\n          return resolve(signedParameters);\n        }\n      });\n    });\n  }\n\n  sendTxWithPermit = async (baseContractName, holder, spenderContractName, methodName, methodParams, callback, callback_receipt, callback_permit=null) => {\n\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    const signedParameters = await this.signPermit(baseContractName, holder, spenderContractName);\n\n    if (signedParameters){\n      const { expiry, nonce, r, s, v } = signedParameters;\n      const permitParams = [expiry, v, r, s];\n\n      const methodAbi = spenderContract._jsonInterface.find( f => f.name === methodName );\n      const useNonce = methodAbi ? methodAbi.inputs.find( i => i.name === 'nonce' ) : true;\n      if (!isNaN(parseInt(nonce)) && useNonce){\n        permitParams.unshift(nonce);\n      }\n      const params = methodParams.concat(permitParams);\n      this.contractMethodSendWrapper(spenderContractName, methodName, params, callback, callback_receipt);\n    } else {\n      callback(null,'Permit cancelled');\n    }\n  }\n\n  sendSignedTx = async (contractName,contractAddress,functionSignature,callback,callback_receipt) => {\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const MetaTransaction = [\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"from\", type: \"address\" },\n      { name: \"functionSignature\", type: \"bytes\" }\n    ];\n\n    const chainId = await this.props.web3.eth.getChainId();\n\n    const domainData = {\n      chainId,\n      version: '1',\n      name: contractName,\n      verifyingContract: contractAddress\n    };\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false\n    }\n\n    let userAddress = this.props.account;\n    let nonce = await contract.methods.getNonce(userAddress).call();\n    let message = {};\n    message.nonce = nonce;\n    message.from = userAddress;\n    message.functionSignature = functionSignature;\n\n    const dataToSign = JSON.stringify({\n      types: {\n        EIP712Domain,\n        MetaTransaction\n      },\n      domain: domainData,\n      primaryType: \"MetaTransaction\",\n      message\n    });\n\n    // this.customLog('dataToSign',dataToSign);\n\n    this.props.web3.currentProvider.send(\n      {\n        jsonrpc: \"2.0\",\n        id: 999999999999,\n        from: userAddress,\n        method: \"eth_signTypedData_v4\",\n        params: [userAddress, dataToSign]\n      },\n      (error, response) => {\n        if (error || (response && response.error)) {\n          return callback(null,error);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          const { r, s, v } = signedParameters;\n            \n          this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n        }\n      }\n    );\n  }\n\n  checkTokenApproved = async (contractName,contractAddr,walletAddr) => {\n    const [\n      balance,\n      allowance\n    ] = await Promise.all([\n      this.getTokenBalance(contractName,walletAddr,false),\n      this.getAllowance(contractName,contractAddr,walletAddr)\n    ]);\n    this.customLog('checkTokenApproved',contractName,this.BNify(allowance).toFixed(),this.BNify(balance).toFixed(),(allowance && this.BNify(allowance).gte(this.BNify(balance))));\n    return allowance && this.BNify(allowance).gte(this.BNify(balance));\n  }\n  getAllowance = async (contractName,contractAddr,walletAddr) => {\n    if (!contractName || !contractAddr || !walletAddr){\n      return false;\n    }\n    this.customLog('getAllowance',contractName,contractAddr,walletAddr);\n    return await this.genericContractCall(\n      contractName, 'allowance', [walletAddr, contractAddr]\n    );\n  }\n  contractMethodSendWrapperWithValue = (contractName,methodName,params,value,callback,callback_receipt,txData) => {\n    this.props.contractMethodSendWrapper(contractName, methodName, params, value, (tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    }, null, txData);\n  }\n  contractMethodSendWrapper = (contractName,methodName,params,callback,callback_receipt,txData=null,send_raw=false,raw_tx_data=null) => {\n    try{\n      this.props.contractMethodSendWrapper(contractName, methodName, params, null, (tx)=>{\n        if (typeof callback === 'function'){\n          callback(tx);\n        }\n      }, (tx) => {\n        if (typeof callback_receipt === 'function'){\n          callback_receipt(tx);\n        }\n      }, null, txData, send_raw, raw_tx_data);\n    } catch (error) {\n      callback(null,error);\n    }\n  }\n  disableERC20 = (contractName,address,callback,callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('0') // max uint solidity\n    ],null,(tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    });\n  }\n  enableERC20 = (contractName,address,callback,callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('-1') // max uint solidity\n    ],null,(tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    });\n  }\n  getTrancheStakedBalance = async (contractName,walletAddr,decimals=null) => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `trancheStakedBalance_${contractName}_${walletAddr}_${decimals}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let stakedBalance = await this.genericContractCall(contractName,'usersStakes',[walletAddr]);\n    if (stakedBalance){\n      if (decimals){\n        stakedBalance = this.fixTokenDecimals(stakedBalance,decimals);\n      }\n      stakedBalance = this.BNify(stakedBalance);\n\n      if (!stakedBalance.isNaN()){\n        return this.setCachedDataWithLocalStorage(cachedDataKey,stakedBalance,30);\n      }\n    }\n    return this.BNify(0);\n  }\n  getTrancheStakingRewards = async (account,trancheConfig) => {\n    const stakingRewards = {};\n    await this.asyncForEach(trancheConfig.CDORewards.stakingRewards, async (tokenConfig) => {\n      const tokenGlobalConfig = this.getGlobalConfig(['stats','tokens',tokenConfig.token]);\n      tokenConfig = {...tokenConfig,...tokenGlobalConfig};\n      const tokenAmount = await this.genericContractCallCached(trancheConfig.CDORewards.name,'expectedUserReward',[account,tokenConfig.address]);\n      stakingRewards[tokenConfig.token] = this.fixTokenDecimals(tokenAmount,tokenConfig.decimals);\n    });\n\n    // console.log('getTrancheStakingRewards',stakingRewards);\n\n    return stakingRewards;\n  }\n  loadTrancheFieldRaw = async (field,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens=true) => {\n    return await this.loadTrancheField(field,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens,false);\n  }\n  loadTrancheField = async (field,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account=null,addGovTokens=true,formatValue=true,addTokenName=true) => {\n    let output = null;\n    const maxPrecision = (fieldProps && fieldProps.maxPrecision) || 5;\n    const decimals = (fieldProps && fieldProps.decimals) || (this.props.isMobile ? 2 : 3);\n    const minPrecision = (fieldProps && fieldProps.minPrecision) || (this.props.isMobile ? 3 : 4);\n    const tokenName = this.getGlobalConfig(['stats','tokens',token,'label']) || this.capitalize(token);\n\n    const strategyConfig = tokenConfig.Strategy;\n    const idleStrategyAddress = await this.genericContractCallCached(tokenConfig.CDO.name,'strategy'); \n    if (idleStrategyAddress){\n      await this.props.initContract(strategyConfig.name,idleStrategyAddress,strategyConfig.abi);\n    }\n\n    const idleGovTokenConfig = this.getGlobalConfig(['govTokens','IDLE']);\n    switch (field){\n      case 'protocolName':\n        output = (this.getGlobalConfig(['stats','protocols',protocol,'label']) || this.capitalize(protocol)).toUpperCase();\n      break;\n      case 'tokenName':\n        output = tokenName;\n      break;\n      case 'trancheType':\n        output = (this.getGlobalConfig(['tranches',tranche,'baseName']) || '').toUpperCase();\n        // console.log('trancheType',tranche,trancheConfig,output);\n      break;\n      case 'pool':\n        let poolSize = await this.genericContractCallCached(tokenConfig.CDO.name,'getContractValue');\n        if (!this.BNify(poolSize).isNaN()){\n          output = this.fixTokenDecimals(poolSize,tokenConfig.CDO.decimals);\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision);\n          }\n        }\n      break;\n      case 'seniorPool':\n        output = await this.loadTrancheField('tranchePool',fieldProps,protocol,token,tranche,tokenConfig,tokenConfig.AA,account,addGovTokens);\n      break;\n      case 'juniorPool':\n        output = await this.loadTrancheField('tranchePool',fieldProps,protocol,token,tranche,tokenConfig,tokenConfig.BB,account,addGovTokens);\n      break;\n      case 'seniorApy':\n        output = await this.loadTrancheField('trancheApy',fieldProps,protocol,token,tranche,tokenConfig,tokenConfig.AA,account,addGovTokens);\n      break;\n      case 'juniorApy':\n        output = await this.loadTrancheField('trancheApy',fieldProps,protocol,token,tranche,tokenConfig,tokenConfig.BB,account,addGovTokens);\n      break;\n      case 'tranchePool':\n        let [\n          totalSupply,\n          virtualPrice\n        ] = await Promise.all([\n          this.getTokenTotalSupply(trancheConfig.name,'latest',180),\n          this.loadTrancheField('tranchePrice',fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens)\n        ]);\n\n        output = this.BNify(0);\n        if (!this.BNify(virtualPrice).isNaN() && !this.BNify(totalSupply).isNaN()){\n          output = this.fixTokenDecimals(totalSupply,tokenConfig.CDO.decimals).times(virtualPrice);\n        }\n        if (formatValue){\n          output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+(addTokenName ? ` ${tokenName}` : '');\n        }\n      break;\n      case 'trancheDeposited':\n        const deposited = await this.getAmountDepositedTranche(tokenConfig,trancheConfig,account);\n\n        output = output || this.BNify(0);\n\n        output = this.BNify(deposited);\n        if (output.gt(0)){\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+(addTokenName ? ` ${tokenName}` : '');\n          }\n        } else {\n          output = formatValue ? '-' : null;\n        }\n      break;\n      case 'trancheFee':\n        output = await this.genericContractCallCached(tokenConfig.CDO.name,'fee');\n        if (output){\n          output = this.BNify(output).div(this.BNify(100000));\n        }\n      break;\n      case 'tranchePrice':\n        output = await this.genericContractCall(tokenConfig.CDO.name,'virtualPrice',[trancheConfig.address]);\n        if (output){\n          output = this.fixTokenDecimals(output,trancheConfig.decimals);\n        }\n      break;\n      case 'trancheStaked':\n        let [\n          staked1,\n          lastPrice1\n        ] = await Promise.all([\n          this.getTrancheStakedBalance(trancheConfig.CDORewards.name,account,trancheConfig.CDORewards.decimals),\n          this.loadTrancheField(`tranchePrice`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens)\n        ]);\n\n\n        output = formatValue ? '-' : null;\n        if (staked1 && lastPrice1){\n          output = this.BNify(staked1).times(lastPrice1);\n          // console.log('trancheStaked',staked1.toString(),lastPrice1.toString(),output.toString());\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+(addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'trancheRedeemable':\n        let [\n          deposited1,\n          lastPrice\n        ] = await Promise.all([\n          this.getTokenBalance(trancheConfig.name,account),\n          this.loadTrancheFieldRaw(`tranchePrice`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens)\n        ]);\n\n        output = formatValue ? '-' : null;\n        if (deposited1 && lastPrice){\n          output = this.BNify(deposited1).times(lastPrice);\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+(addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'trancheRedeemableWithStaked':\n        let [\n          redeemable1,\n          staked2\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheRedeemable`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n          this.loadTrancheFieldRaw(`trancheStaked`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens)\n        ]);\n\n        output = formatValue ? '-' : null;\n        if (redeemable1 && staked2){\n          output = this.BNify(redeemable1).plus(staked2);\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+(addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'earningsCounter':\n        let [\n          earningsStart,\n          trancheApy2,\n          deposited3\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`earnings`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n          this.loadTrancheFieldRaw(`trancheApy`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n          this.loadTrancheFieldRaw(`trancheDeposited`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n        ]);\n\n\n        if (deposited3 && earningsStart && trancheApy2){\n          const earningsEnd = deposited3.gt(0) ? deposited3.times(trancheApy2.div(100)).plus(earningsStart) : 0;\n\n          output = {\n            earningsEnd,\n            earningsStart\n          };\n        }\n      break;\n      case 'feesCounter':\n        let [\n          trancheFee,\n          earningsCounter\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheFee`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n          this.loadTrancheFieldRaw(`earningsCounter`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n        ]);\n\n        if (trancheFee && earningsCounter){\n          const feesStart = earningsCounter.earningsStart.times(trancheFee);\n          const feesEnd =  earningsCounter.earningsEnd.times(trancheFee);\n\n          // console.log('feesCounter',feesStart.toString(),feesEnd.toString());\n\n          output = {\n            feesEnd,\n            feesStart\n          };\n        }\n      break;\n      case 'earnings':\n        const [\n          deposited4,\n          redeemable3\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheDeposited`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n          this.loadTrancheFieldRaw(`trancheRedeemableWithStaked`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens)\n        ]);\n\n        if (deposited4 && redeemable3){\n          output = this.BNify(redeemable3).minus(deposited4);\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+(addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'earningsPerc':\n        const [\n          deposited2,\n          redeemable2\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheDeposited`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n          this.loadTrancheFieldRaw(`trancheRedeemableWithStaked`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens)\n        ]);\n        output = redeemable2.div(deposited2).minus(1).times(100);\n        if (formatValue){\n          output = output.toFixed(decimals)+'%';\n        }\n      break;\n      case 'trancheApy':\n        let trancheApy = await this.genericContractCallCached(tokenConfig.CDO.name,'getApr',[trancheConfig.address]);\n        // console.log('trancheApy',this.props.network.required,tokenConfig.CDO.name,trancheConfig.address,trancheApy);\n        if (trancheApy){\n          output = this.fixTokenDecimals(trancheApy,tokenConfig.CDO.decimals);\n          output = this.apr2apy(output.div(100)).times(100);\n          if (formatValue){\n            output = output.toFixed(2)+'%';\n          }\n        }\n      break;\n      case 'realizedApy':\n        const [\n          firstDepositTx,\n          earningsPerc\n        ] = await Promise.all([\n          this.getTrancheFirstDepositTx(tokenConfig,trancheConfig,account),\n          this.loadTrancheFieldRaw(`earningsPerc`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens)\n        ]);\n\n        // console.log('realizedApy',earningsPerc.toString(),firstDepositTx);\n\n        if (earningsPerc && firstDepositTx){\n          const secondsFromFirstTx = parseInt(Date.now()/1000)-parseInt(firstDepositTx.timeStamp);\n          output = this.BNify(earningsPerc).times(31536000).div(secondsFromFirstTx);\n\n          // console.log('realizedApy2',firstDepositTx,earningsPerc.toString(),output.toString());\n\n          if (formatValue){\n            output = output.toFixed(2)+'%';\n          }\n        }\n      break;\n      case 'trancheIDLELastHarvest':\n      case 'trancheIDLEDistribution':\n        output = this.BNify(0);\n        const rewardsTokensInfo = await this.getTrancheRewardTokensInfo(tokenConfig,trancheConfig);\n        if (rewardsTokensInfo && rewardsTokensInfo.IDLE){\n          if (field === 'trancheIDLEDistribution'){\n            output = this.fixDistributionSpeed(rewardsTokensInfo.IDLE.tokensPerSecond,idleGovTokenConfig.distributionFrequency);\n            if (formatValue){\n              output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+` IDLE/${idleGovTokenConfig.distributionFrequency}`\n            }\n          } else {\n            output = rewardsTokensInfo.IDLE.lastAmount;\n            if (formatValue){\n              output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+` IDLE <a href=\"${this.getEtherscanTransactionUrl(rewardsTokensInfo.IDLE.latestHarvest.transactionHash)}\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">(last harvest)</a>`\n            }\n          }\n        } else {\n          if (field === 'trancheIDLEDistribution'){\n            if (formatValue){\n              output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+` IDLE/${idleGovTokenConfig.distributionFrequency}`\n            }\n          }\n        }\n      break;\n      case 'AAIDLEDistribution':\n        output = this.abbreviateNumber('1234',decimals,maxPrecision,minPrecision)+` IDLE/day`;\n      break;\n      case 'BBIDLEDistribution':\n        output = this.abbreviateNumber('4321',decimals,maxPrecision,minPrecision)+` IDLE/day`;\n      break;\n      case 'govTokens':\n      case 'autoFarming':\n      case 'stakingRewards':\n        output = {};\n        const [\n          rewardsTokens,\n          incentiveTokens\n        ] = await Promise.all([\n          this.genericContractCall(strategyConfig.name,'getRewardTokens'),\n          this.genericContractCall(tokenConfig.CDO.name,'getIncentiveTokens')\n        ]);\n\n        const govTokens = field === 'govTokens' ? rewardsTokens : (field === 'autoFarming' && rewardsTokens ? rewardsTokens.filter( rewardTokenAddr => incentiveTokens && !incentiveTokens.map( addr => addr.toLowerCase() ).includes(rewardTokenAddr.toLowerCase()) ) : incentiveTokens);\n\n        if (govTokens){\n          govTokens.forEach( govTokenAddress => {\n            const govTokenConfig = this.getGovTokenConfigByAddress(govTokenAddress);\n            // Skip reward token if globally disabled\n            if (govTokenConfig && !govTokenConfig.enabled){\n              return;\n            }\n            // Skip reward token if not enabled for this specific tranche\n            const stakingRewardsTokenConfig = trancheConfig ? trancheConfig.CDORewards.stakingRewards.find( tokenConfig => tokenConfig.address.toLowerCase() === govTokenAddress.toLowerCase() ) : null;\n            if (stakingRewardsTokenConfig && !stakingRewardsTokenConfig.enabled){\n              return;\n            }\n            output[govTokenConfig.token] = govTokenConfig;\n          });\n        }\n      break;\n      default:\n      break;\n    }\n\n    // console.log('loadTrancheField',field,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens,formatValue);\n\n    return output;\n  }\n  loadAssetField = async (field,token,tokenConfig,account,addGovTokens=true,addCurveApy=false) => {\n\n    let output = null;\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    // Remove gov tokens for risk adjusted strategy\n    const strategyInfo = this.getGlobalConfig(['strategies',this.props.selectedStrategy]);\n    if (addGovTokens && strategyInfo && typeof strategyInfo.addGovTokens !== 'undefined'){\n      addGovTokens = strategyInfo.addGovTokens;\n    }\n\n    // Take available tokens for gov tokens fields\n    let govTokenAvailableTokens = null;\n    if (this.props.selectedStrategy && this.props.selectedToken){\n      const newTokenConfig = this.props.availableStrategies[this.props.selectedStrategy][this.props.selectedToken];\n      if (newTokenConfig){\n        govTokenAvailableTokens = {};\n        govTokenAvailableTokens[newTokenConfig.token] = newTokenConfig;\n      }\n    } else if (!Object.keys(govTokens).includes(token)){\n      govTokenAvailableTokens = {};\n      govTokenAvailableTokens[token] = tokenConfig;\n    }\n\n    switch (field){\n      case 'amountLentCurve':\n        const [\n          curveAvgSlippage,\n          curveAvgBuyPrice,\n          curveTokenBalance,\n        ] = await Promise.all([\n          this.getCurveAvgSlippage(),\n          this.getCurveAvgBuyPrice([],account),\n          this.getCurveTokenBalance(account,true),\n        ]);\n\n        if (curveAvgBuyPrice && curveTokenBalance){\n          output = this.BNify(curveTokenBalance).times(curveAvgBuyPrice);\n          if (curveAvgSlippage){\n            output = output.minus(output.times(curveAvgSlippage));\n          }\n          // this.customLog('amountLentCurve',curveTokenBalance.toFixed(6),curveAvgBuyPrice.toFixed(6),curveAvgSlippage.toString(),output.toFixed(6));\n        }\n      break;\n      case 'earningsPercCurve':\n        let [amountLentCurve1,redeemableBalanceCurve] = await Promise.all([\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account)\n        ]);\n\n        if (amountLentCurve1 && redeemableBalanceCurve && amountLentCurve1.gt(0) && redeemableBalanceCurve.gt(0)){\n          output = redeemableBalanceCurve.div(amountLentCurve1).minus(1).times(100);\n          // this.customLog('earningsPercCurve',redeemableBalanceCurve.toFixed(6),amountLentCurve1.toFixed(6),output.toFixed(6));\n        }\n      break;\n      case 'curveApy':\n        output = await this.getCurveAPY();\n      break;\n      case 'curveAvgSlippage':\n        output = await this.getCurveAvgSlippage();\n      break;\n      case 'redeemableBalanceCurve':\n        output = await this.getCurveRedeemableIdleTokens(account);\n        // this.customLog('earningsPercCurve',output.toFixed(6));\n      break;\n      case 'redeemableBalanceCounterCurve':\n        let [\n          curveApy,\n          amountLentCurve,\n          redeemableBalanceCurveStart\n        ] = await Promise.all([\n          this.loadAssetField('curveApy',token,tokenConfig,account),\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account),\n        ]);\n\n        let redeemableBalanceCurveEnd = null;\n\n        if (redeemableBalanceCurveStart && curveApy && amountLentCurve){\n          const earningPerYear = amountLentCurve.times(curveApy.div(100));\n          redeemableBalanceCurveEnd = redeemableBalanceCurveStart.plus(earningPerYear);\n          // this.customLog('redeemableBalanceCounterCurve',amountLentCurve.toFixed(6),redeemableBalanceCurveStart.toFixed(6),redeemableBalanceCurveEnd.toFixed(6));\n        }\n\n        output = {\n          redeemableBalanceCurveEnd,\n          redeemableBalanceCurveStart\n        };\n      break;\n      case 'earningsPerc':\n        let [amountLent1,redeemableBalance1] = await Promise.all([\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false)\n        ]);\n\n        if (amountLent1 && redeemableBalance1 && amountLent1.gt(0)){\n          output = redeemableBalance1.div(amountLent1).minus(1).times(100);\n        }\n      break;\n      case 'daysFirstDeposit':\n        const depositTimestamp = await this.loadAssetField('depositTimestamp',token,tokenConfig,account);\n        if (depositTimestamp){\n          const currTimestamp = parseInt(Date.now()/1000);\n          output = (currTimestamp-depositTimestamp)/86400;\n        }\n      break;\n      case 'pool':\n        if (Object.keys(govTokens).includes(token)){\n          output = await this.getGovTokenPool(token, govTokenAvailableTokens);\n        } else {\n          output = await this.getTokenPool(tokenConfig,addGovTokens);\n        }\n      break;\n      case 'userDistributionSpeed':\n        switch (token){\n          case 'COMP':\n            output = await this.getCompUserDistribution(account,govTokenAvailableTokens);\n          break;\n          case 'WMATIC':\n          case 'stkAAVE':\n            output = await this.getStkAaveUserDistribution(account,govTokenAvailableTokens);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getUserDistribution(account,govTokenAvailableTokens);\n          break;\n          default:\n          break;\n        }\n        if (output && !this.BNify(output).isNaN()){\n          output = this.BNify(output).div(1e18);\n          if (output){\n            output = this.fixDistributionSpeed(output,tokenConfig.distributionFrequency,tokenConfig.distributionMode);\n          }\n        }\n      break;\n      case 'idleDistribution':\n        const idleGovToken = this.getIdleGovToken();\n        const tokenName = this.getGlobalConfig(['governance','props','tokenName']);\n        const govTokenConfig = this.getGlobalConfig(['govTokens',tokenName]);\n        output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n\n        if (output){\n\n          output = this.fixTokenDecimals(output,govTokenConfig.decimals);\n\n          const blocksPerYear = this.BNify(this.getGlobalConfig(['network','blocksPerYear']));\n          switch (govTokenConfig.distributionFrequency){\n            case 'day':\n              const blocksPerDay = blocksPerYear.div(365.242199);\n              output = output.times(blocksPerDay);\n            break;\n            case 'week':\n              const blocksPerWeek = blocksPerYear.div(52.1429);\n              output = output.times(blocksPerWeek);\n            break;\n            case 'month':\n              const blocksPerMonth = blocksPerYear.div(12);\n              output = output.times(blocksPerMonth);\n            break;\n            case 'year':\n              output = output.times(blocksPerYear);\n            break;\n            default:\n            break;\n          }\n        }\n      break;\n      case 'distributionSpeed':\n        const selectedTokenConfig = govTokenAvailableTokens[this.props.selectedToken];\n        switch (token){\n          case 'COMP':\n            output = await this.getCompDistribution(selectedTokenConfig);\n          break;\n          case 'WMATIC':\n          case 'stkAAVE':\n            output = await this.getStkAaveDistribution(selectedTokenConfig);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getSpeed(selectedTokenConfig.idle.address);\n          break;\n          default:\n          break;\n        }\n        if (output && !this.BNify(output).isNaN()){\n          output = this.BNify(output).div(1e18);\n        }\n      break;\n      case 'apr':\n        switch (token){\n          case 'COMP':\n            output = await this.getCompAvgApr(govTokenAvailableTokens);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getAvgApr(govTokenAvailableTokens);\n          break;\n          default:\n            const tokenAprs = await this.getTokenAprs(tokenConfig,false,addGovTokens);\n            if (tokenAprs && tokenAprs.avgApr !== null){\n              output = tokenAprs.avgApr;\n            }\n          break;\n        }\n      break;\n      case 'apy':\n        const tokenApys = await this.getTokenAprs(tokenConfig,false,addGovTokens);\n\n        output = this.BNify(0);\n\n        if (tokenApys && !this.BNify(tokenApys.avgApy).isNaN()){\n          output = this.BNify(tokenApys.avgApy);\n\n          if (addCurveApy){\n            const curveAPY = await this.getCurveAPY();\n            if (curveAPY){\n              output = output.plus(curveAPY);\n            }\n          }\n        } else {\n\n        }\n\n        // console.log('apy - OUTPUT - ',output);\n      break;\n      case 'avgAPY':\n        const [\n          tokenPrice,\n          firstDepositTx,\n          days\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getFirstDepositTx([token],account),\n          this.loadAssetField('daysFirstDeposit',token,tokenConfig,account)\n        ]);\n\n        if (tokenPrice && firstDepositTx && firstDepositTx[token]){\n          const tokenPriceFirstDeposit = await this.getIdleTokenPrice(tokenConfig,firstDepositTx[token].blockNumber);\n          output = this.BNify(tokenPrice).div(tokenPriceFirstDeposit).minus(1).times(365).div(days).times(100);\n        }\n      break;\n      case 'avgAPY_old':\n        const [\n          daysFirstDeposit,\n          earningsPerc\n        ] = await Promise.all([\n          this.loadAssetField('daysFirstDeposit',token,tokenConfig,account),\n          this.loadAssetField('earningsPerc',token,tokenConfig,account), // Take earnings perc instead of earnings\n        ]);\n\n        if (daysFirstDeposit && earningsPerc){\n          output = earningsPerc.times(365).div(daysFirstDeposit);\n        }\n      break;\n      case 'depositTimestamp':\n        const depositTimestamps = account ? await this.getDepositTimestamp([token],account) : false;\n        if (depositTimestamps && depositTimestamps[token]){\n          output = depositTimestamps[token];\n        }\n      break;\n      case 'amountLent':\n        output = account ? await this.getAmountDeposited(tokenConfig,account) : false;\n        // console.log('amountLent - OUTPUT - ',output);\n        // const amountLents = account ? await this.getAmountLent([token],account) : false;\n        // if (amountLents && amountLents[token]){\n        //   output = amountLents[token];\n        // }\n      break;\n      case 'tokenPrice':\n        if (Object.keys(govTokens).includes(token)){\n          const govTokenConfig = govTokens[token];\n          const DAITokenConfig = {\n            address:this.getContractByName('DAI')._address\n          };\n          try {\n            output = await this.getUniswapConversionRate(DAITokenConfig,govTokenConfig);\n          } catch (error) {\n\n          }\n          if (!output || this.BNify(output).isNaN()){\n            output = '-';\n          }\n        } else {\n          output = await this.getTokenPrice(tokenConfig.idle.token);\n        }\n      break;\n      case 'fee':\n        output = await this.getUserTokenFees(tokenConfig,account);\n      break;\n      case 'tokenBalance':\n        if (Object.keys(govTokens).includes(token)){\n          output = await this.getTokenBalance(token,account);\n          if (!output || output.isNaN()){\n            output = '-';\n          }\n        } else {\n          let tokenBalance = account ? await this.getTokenBalance(tokenConfig.token,account) : false;\n          if (!tokenBalance || tokenBalance.isNaN()){\n            tokenBalance = '-';\n          }\n          output = tokenBalance;\n        }\n      break;\n      case 'idleTokenBalance':\n        const idleTokenBalance = account ? await this.getTokenBalance(tokenConfig.idle.token,account) : false;\n        if (idleTokenBalance){\n          output = idleTokenBalance;\n        }\n      break;\n      case 'redeemableBalanceCounter':\n\n        // console.log('redeemableBalanceCounter - BEFORE',token,tokenConfig,account);\n\n        let [tokenAPY1,amountLent2,redeemableBalanceStart] = await Promise.all([\n          this.loadAssetField('apy',token,tokenConfig,account,false),\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false),\n        ]);\n\n        // console.log('redeemableBalanceCounter - CALL - ',tokenAPY1,amountLent2,redeemableBalanceStart);\n\n        // debugger;\n\n        let redeemableBalanceEnd = redeemableBalanceStart;\n\n        if (redeemableBalanceStart && tokenAPY1 && amountLent2){\n          const earningPerYear = amountLent2.times(tokenAPY1.div(100));\n          redeemableBalanceEnd = redeemableBalanceStart.plus(earningPerYear);\n        }\n\n        output = {\n          redeemableBalanceEnd,\n          redeemableBalanceStart\n        };\n\n        // console.log('redeemableBalanceCounter - OUTPUT',token,parseFloat(redeemableBalanceStart),parseFloat(redeemableBalanceEnd),output);\n      break;\n      case 'redeemableBalance':\n        if (Object.keys(govTokens).includes(token)){\n          const govTokenConfig = govTokens[token];\n          output = await this.getGovTokenUserBalance(govTokenConfig,account,govTokenAvailableTokens);\n        } else {\n          let [\n            idleTokenPrice1,\n            idleTokenBalance2,\n            govTokensBalance\n          ] = await Promise.all([\n            this.getIdleTokenPrice(tokenConfig),\n            this.loadAssetField('idleTokenBalance',token,tokenConfig,account),\n            addGovTokens ? this.getGovTokensUserTotalBalance(account,govTokenAvailableTokens,token) : null,\n          ]);\n\n          // console.log('redeemableBalance - BEFORE - ',idleTokenBalance2,idleTokenPrice1);\n\n          if (idleTokenBalance2 && idleTokenPrice1){\n            const tokenBalance = idleTokenBalance2.times(idleTokenPrice1);\n            let redeemableBalance = tokenBalance;\n            if (govTokensBalance && !this.BNify(govTokensBalance).isNaN()){\n              redeemableBalance = redeemableBalance.plus(this.BNify(govTokensBalance));\n            }\n            output = redeemableBalance;\n            // console.log('redeemableBalance',token,idleTokenBalance2.toFixed(4),idleTokenPrice1.toFixed(4),tokenBalance.toFixed(4),govTokensBalance ? govTokensBalance.toFixed(4) : null,output.toFixed(4));\n          }\n          // console.log('redeemableBalance - OUTPUT - ',output);\n        }\n      break;\n      case 'earningsCurve':\n        let [amountLentCurve2,redeemableBalanceCurve1] = await Promise.all([\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account)\n        ]);\n\n        if (!amountLentCurve2){\n          amountLentCurve2 = this.BNify(0);\n        }\n\n        if (!redeemableBalanceCurve1){\n          redeemableBalanceCurve1 = this.BNify(0);\n        }\n\n        output = redeemableBalanceCurve1.minus(amountLentCurve2);\n      break;\n      case 'earnings':\n        let [amountLent,redeemableBalance2] = await Promise.all([\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false)\n        ]);\n\n        if (!amountLent){\n          amountLent = this.BNify(0);\n        }\n        if (!redeemableBalance2){\n          redeemableBalance2 = this.BNify(0);\n        }\n\n        output = redeemableBalance2.minus(amountLent);\n\n        // console.log('earnings',token,amountLent.toFixed(5),redeemableBalance2.toFixed(5),output.toFixed(5));\n\n        if (output.lt(this.BNify(0))){\n          output = this.BNify(0);\n        }\n      break;\n      default:\n      break;\n    }\n\n    return output;\n  }\n  getIdleTokenSupply = async (idleToken,blockNumber='latest') => {\n    const cachedDataKey = `idleTokenSupply_${idleToken}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let idleTokenSupply = await this.getTokenTotalSupply(idleToken,blockNumber);\n    if (idleTokenSupply){\n      return this.BNify(idleTokenSupply);\n    }\n\n    return null;\n  }\n  getIdleTokenPriceWithFee = async (tokenConfig,account,blockNumber='latest') => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n\n    let [\n      fee,\n      tokenPrice,\n      userAvgPrice\n    ] = await Promise.all([\n      this.genericContractCallCached(tokenConfig.idle.token, 'fee', [], {}, blockNumber),\n      this.genericContractCallCached(tokenConfig.idle.token, 'tokenPrice', [], {}, blockNumber),\n      this.genericContractCallCached(tokenConfig.idle.token, 'userAvgPrices', [account], {}, blockNumber)\n    ]);\n    \n    fee = this.BNify(fee);\n    tokenPrice = this.BNify(tokenPrice);\n    userAvgPrice = this.BNify(userAvgPrice);\n\n    if (!tokenPrice.isNaN() && !userAvgPrice.isNaN() && !fee.isNaN() && !this.BNify(userAvgPrice).eq(0) && this.BNify(tokenPrice).gt(this.BNify(userAvgPrice))){\n      const priceWFee = this.integerValue(this.BNify(tokenPrice).minus(parseInt(fee.div(1e5).times(tokenPrice.minus(userAvgPrice)))));\n      return priceWFee;\n    }\n\n    return tokenPrice;\n  }\n  getIdleTokenPrice = async (tokenConfig,blockNumber='latest',timestamp=false) => {\n\n    const cachedDataKey = `idleTokenPrice_${tokenConfig.idle.token}_${blockNumber}`;\n    // if (blockNumber !== 'latest'){\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n    // }\n\n    let decimals = tokenConfig.decimals;\n\n    let tokenPrice = await this.genericContractCallCached(tokenConfig.idle.token,'tokenPrice',[],{},blockNumber);\n\n    // If price is NaN try to take it from APIs\n    if (!tokenPrice && timestamp){\n      const isRisk = this.props.selectedStrategy === 'risk';\n      const startTimestamp = parseInt(timestamp)-(60*60);\n      const endTimestamp = parseInt(timestamp)+(60*60);\n      const tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,startTimestamp,endTimestamp,true);\n\n      let beforePrice = {\n        data:null,\n        timeDiff:null\n      };\n\n      let afterPrice = {\n        data:null,\n        timeDiff:null\n      };\n\n      tokenData.forEach( d => {\n        const timeDiff = Math.abs(parseInt(d.timestamp)-parseInt(timestamp));\n        if (parseInt(d.timestamp)<parseInt(timestamp) && (!beforePrice.timeDiff || timeDiff<beforePrice.timeDiff)){\n          beforePrice.timeDiff = timeDiff;\n          beforePrice.data = d;\n        }\n\n        if (parseInt(d.timestamp)>parseInt(timestamp) && !afterPrice.timeDiff){\n          afterPrice.timeDiff = timeDiff;\n          afterPrice.data = d;\n        }\n      });\n\n      // Take before and after and calculate correct tokenPrice based from price acceleration\n      if (beforePrice.data && afterPrice.data){\n        const tokenPriceBefore = this.BNify(beforePrice.data.idlePrice);\n        const tokenPriceAfter = this.BNify(afterPrice.data.idlePrice);\n        const timeBefore = this.BNify(beforePrice.data.timestamp);\n        const timeAfter = this.BNify(afterPrice.data.timestamp);\n        const timeDiff = timeAfter.minus(timeBefore);\n        const priceDiff = tokenPriceAfter.minus(tokenPriceBefore);\n        const priceAcceleration = priceDiff.div(timeDiff);\n        const timeDiffFromBeforePrice = this.BNify(timestamp).minus(timeBefore);\n        tokenPrice = tokenPriceBefore.plus(priceAcceleration.times(timeDiffFromBeforePrice));\n      }\n    }\n\n    // Fix token price decimals\n    if (tokenPrice && !this.BNify(tokenPrice).isNaN()){\n      tokenPrice = this.fixTokenDecimals(tokenPrice,decimals);\n    }\n\n    // If price is NaN then return 1\n    if (!tokenPrice || this.BNify(tokenPrice).isNaN() || this.BNify(tokenPrice).lt(1)){\n      tokenPrice = this.BNify(1);\n    }\n\n    // if (blockNumber !== 'latest'){\n      this.setCachedDataWithLocalStorage(cachedDataKey,tokenPrice);\n    // }\n\n    // this.customLog('getIdleTokenPrice',tokenPrice.toString());\n\n    return tokenPrice;\n  }\n  clearCachedData = (clear_all=false) => {\n    if (this.props.clearCachedData && typeof this.props.clearCachedData === 'function'){\n      // this.customLog('clearCachedData',this.props.clearCachedData,typeof this.props.clearCachedData === 'function');\n      this.props.clearCachedData(null,clear_all);\n    } else {\n      // this.customLog('clearCachedData - Function not found!');\n    }\n    return false;\n  }\n  /*\n  Cache data locally for 3 minutes\n  */\n  setCachedData = (key,data,TTL=180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function'){\n      this.props.setCachedData(key,data,TTL);\n    }\n    return data;\n  }\n  addKeyToCachedDataWithLocalStorage = (parent_key,key,data,TTL=180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function'){\n      const cachedData = this.getCachedDataWithLocalStorage(parent_key,{});\n      cachedData[key] = data;\n      this.props.setCachedData(parent_key,cachedData,TTL,true);\n    }\n    return data;\n  }\n  setCachedDataWithLocalStorage = (key,data,TTL=180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function'){\n      this.props.setCachedData(key,data,TTL,true);\n    }\n    return data;\n  }\n  getCachedDataWithLocalStorage = (key,defaultValue=null) => {\n    return this.getCachedData(key,defaultValue,true);\n  }\n  getCachedData = (key,defaultValue=null,useLocalStorage=false) => {\n    let cachedData = null;\n    key = key.toLowerCase();\n    // Get cache from current session\n    if (this.props.cachedData && this.props.cachedData[key]){\n      cachedData = this.props.cachedData[key];\n    // Get cache from local storage\n    } else if (useLocalStorage) {\n      cachedData = this.getStoredItem('cachedData');\n      if (cachedData && cachedData[key]){\n        cachedData = cachedData[key];\n      } else {\n        cachedData = null;\n      }\n    }\n\n    const cachedDataValid = cachedData && cachedData.data && (cachedData.expirationDate === null || cachedData.expirationDate>=parseInt(Date.now()/1000));\n\n    // if (!cachedDataValid){\n    //   console.log('getCachedData - NOT VALID - ',key,(cachedData ? cachedData.expirationDate-parseInt(Date.now()/1000) : null));\n    // }\n\n    if (cachedDataValid){\n      return cachedData.data;\n    }\n    return defaultValue;\n  }\n  getUserPoolShare = async (walletAddr,tokenConfig) => {\n    const [\n      idleTokensBalance,\n      idleTokensTotalSupply\n    ] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token,walletAddr,false),\n      this.getTokenTotalSupply(tokenConfig.idle.token)\n    ]);\n\n    let userShare = this.BNify(0);\n    if (this.BNify(idleTokensBalance).gt(0) && this.BNify(idleTokensTotalSupply).gt(0)){\n      userShare = this.BNify(idleTokensBalance).div(this.BNify(idleTokensTotalSupply));\n    }\n\n    return userShare;\n  }\n  openWindow = (url) => {\n    return window.open(url,'_blank','noopener');\n  }\n  getActiveCoverages = async (account=null) => {\n    const activeCoverages = [];\n    account = account || this.props.account;\n\n    if (!account){\n      return activeCoverages;\n    }\n\n    const currTimestamp = parseInt(Date.now()/1000);\n\n    const coverProtocolConfig = this.getGlobalConfig(['tools','coverProtocol']);\n    if (coverProtocolConfig.enabled){\n      await this.asyncForEach(coverProtocolConfig.props.coverages, async (coverage) => {\n        const token = 'Claim';\n        const coverageTokens = coverage.tokens;\n        const tokenConfig = coverageTokens[token];\n        // Initialize coverage contract\n        await this.props.initContract(tokenConfig.name,tokenConfig.address,tokenConfig.abi);\n        // Take balance\n        const balance = await this.getTokenBalance(tokenConfig.name,account);\n        if (balance && balance.gt(0)){\n          const actionLabel = 'File Claim';\n          const collateral = coverage.collateral;\n          const protocolName = coverProtocolConfig.label;\n          const protocolImage = coverProtocolConfig.image;\n          const actionUrl = coverProtocolConfig.fileClaimUrl;\n          const status = coverage.expirationTimestamp<=currTimestamp ? 'Expired' : 'Active';\n          const actionDisabled = status === 'Expired';\n          const expirationDate = moment(coverage.expirationTimestamp*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n          activeCoverages.push({\n            token,\n            status,\n            balance,\n            actionUrl,\n            collateral,\n            actionLabel,\n            protocolName,\n            protocolImage,\n            expirationDate,\n            actionDisabled\n          });\n        }\n      });\n    }\n    const nexusMutualConfig = this.getGlobalConfig(['tools','nexusMutual']);\n    if (nexusMutualConfig.enabled){\n      const nexusMutualCoverages = await this.getNexusMutualCoverages(account);\n      nexusMutualCoverages.forEach( coverage => {\n        const actionLabel = 'Claim';\n        const balance = coverage.sumAssured;\n        const token = coverage.coverAssetConfig.token;\n        const collateral = coverage.yieldTokenConfig.token;\n        const portfolioCoverage = coverage.portfolioCoverage;\n        const collateralIcon = `images/tokens/${collateral}.svg`;\n        const actionDisabled = !coverage.incident && !coverage.claimId;\n        const protocolName = this.getGlobalConfig(['insurance','nexusMutual','label']);\n        const protocolImage = this.getGlobalConfig(['insurance','nexusMutual','image']);\n        const protocolImageDark = this.getGlobalConfig(['insurance','nexusMutual','imageDark']);\n        const expirationDate = moment(coverage.coverDetails.validUntil*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n        const status = coverage.claimId ? 'Claimed' : parseInt(coverage.coverDetails.validUntil)<=currTimestamp ? 'Expired' : 'Active';\n        const actionUrl = `${window.location.origin}/#${this.getGlobalConfig(['dashboard','baseRoute'])}/tools/${nexusMutualConfig.route}/${coverage.yieldTokenConfig.token}/claim`;\n        activeCoverages.push({\n          token,\n          status,\n          balance,\n          actionUrl,\n          collateral,\n          actionLabel,\n          protocolName,\n          protocolImage,\n          expirationDate,\n          actionDisabled,\n          collateralIcon,\n          portfolioCoverage,\n          protocolImageDark\n        });\n      });\n    }\n\n    return activeCoverages;\n  }\n  getNexusMutualCoverages = async (account) => {\n    const nexusMutualConfig = this.getGlobalConfig(['tools','nexusMutual']);\n\n    const fromBlock = nexusMutualConfig.directProps.startBlock;\n    const feeDistributorConfig = nexusMutualConfig.directProps.contractInfo;\n    const incidentsInfo = nexusMutualConfig.directProps.incidentsInfo;\n    \n    await Promise.all([\n      this.props.initContract(incidentsInfo.name,incidentsInfo.address,incidentsInfo.abi),\n      this.props.initContract(feeDistributorConfig.name,feeDistributorConfig.address,feeDistributorConfig.abi),\n    ]);\n\n    const [\n      coverBoughtEvents,\n      claimSubmittedEvents,\n    ] = await Promise.all([\n       this.getContractEvents(feeDistributorConfig.name,'CoverBought',{fromBlock, toBlock:'latest',filter:{buyer:account}}),\n       this.getContractEvents(feeDistributorConfig.name,'ClaimSubmitted',{fromBlock, toBlock:'latest',filter:{buyer:account}})\n    ]);\n\n    const nexusMutualCoverages = [];\n\n    await this.asyncForEach(coverBoughtEvents,async (cover) => {\n    // coverBoughtEvents.forEach( cover => {\n      const coverId = parseInt(cover.returnValues.coverId);\n      const claimSubmittedEvent = claimSubmittedEvents.find( claim => parseInt(claim.returnValues.coverId)===coverId );\n      const [\n        coverDetails,\n        incidentEvents\n      ] = await Promise.all([\n        this.genericContractCall(feeDistributorConfig.name,'getCover',[coverId]),\n        this.getContractEvents(incidentsInfo.name,'IncidentAdded',{fromBlock:cover.blockNumber, toBlock:'latest',filter:{productId:cover.contractAddress}})\n      ]);\n\n      if (!coverDetails){\n        return false;\n      }\n\n      // Check if the cover matches any incidents\n      const matchedIncidents = incidentEvents.filter(incident => {\n        return incident.returnValues.productId === coverDetails.contractAddress &&\n        this.BNify(incident.blockNumber).gt(cover.blockNumber)  &&\n        this.BNify(incident.returnValues.incidentDate).lt(coverDetails.validUntil) &&\n        parseInt(coverDetails.validUntil) + nexusMutualConfig.directProps.yieldTokenCoverGracePeriod >= Date.now() / 1000\n      });\n\n      // If multiple incidents match, return the one with the highest priceBefore\n      const matchedIncident = matchedIncidents.reduce((prev, curr) => {\n        if (!prev) {\n          return curr;\n        }\n\n        if (this.BNify(curr.returnValues.priceBefore).gt(prev.returnValues.priceBefore)) {\n          return curr;\n        }\n        return prev;\n      }, null);\n\n      const yieldTokenConfig = Object.values(nexusMutualConfig.props.availableTokens).find( tokenConfig => tokenConfig.address.toLowerCase() === coverDetails.contractAddress.toLowerCase() );\n      const sumAssured = this.fixTokenDecimals(coverDetails.sumAssured,yieldTokenConfig.decimals);\n      const coverAssetConfig = Object.values(yieldTokenConfig.underlying).find( underlyingConfig => underlyingConfig.address.toLowerCase() === coverDetails.coverAsset.toLowerCase() );\n      const expiryDate = this.strToMoment(coverDetails.validUntil*1000).format('YYYY-MM-DD');\n\n      const claimId = claimSubmittedEvent ? claimSubmittedEvent.returnValues.claimId : null;\n      const payoutOutcome = claimId ? await this.genericContractCall(feeDistributorConfig.name,'getPayoutOutcome',[claimId]) : null;\n      const label = `${yieldTokenConfig.name} - ${sumAssured.toFixed(4)} ${coverAssetConfig.token} - Exp. ${expiryDate}`;\n      const value = coverId;\n\n      let claimedAmount = null;\n      if (claimSubmittedEvent){\n        const claimTxReceipt = await this.getTransactionReceipt(claimSubmittedEvent.transactionHash);\n        const claimedAmountLog = claimTxReceipt ? claimTxReceipt.logs.find( log => log.address.toLowerCase() === coverAssetConfig.address.toLowerCase() ) : null;\n        claimedAmount = claimedAmountLog ? this.fixTokenDecimals(parseInt(claimedAmountLog.data,16),coverAssetConfig.decimals) : this.BNify(0);\n      }\n\n      const claimableAmount = this.fixTokenDecimals(coverDetails.sumAssured,coverAssetConfig.decimals);\n\n      const claimablePrice = matchedIncident ? this.BNify(matchedIncident.returnValues.priceBefore).times(0.9) : this.BNify(0);\n      const maxCoveredAmount = claimablePrice.gt(0) ? this.BNify(coverDetails.sumAssured).div(claimablePrice) : this.BNify(0);\n      const coveredTokenAmount = this.normalizeTokenAmount(maxCoveredAmount,coverAssetConfig.decimals);\n\n      let [\n        tokenPrice,\n        idleTokenBalance\n      ] = await Promise.all([\n        this.getTokenPrice(yieldTokenConfig.token),\n        this.getTokenBalance(yieldTokenConfig.token,account,false)\n      ]);\n\n      tokenPrice = this.fixTokenDecimals(tokenPrice,yieldTokenConfig.decimals);\n      idleTokenBalance = this.fixTokenDecimals(idleTokenBalance,yieldTokenConfig.decimals);\n      const tokenBalance = idleTokenBalance.times(tokenPrice);\n      const portfolioCoverage = tokenBalance.gt(0) ? sumAssured.div(tokenBalance).times(100).toFixed(2)+'%' : 'N/A';\n\n      // console.log('portfolioCoverage',sumAssured.toFixed(),idleTokenBalance.toFixed(),tokenPrice.toFixed(),portfolioCoverage.toFixed());\n\n      nexusMutualCoverages.push({\n        label,\n        value,\n        claimId,\n        sumAssured,\n        coverDetails,\n        claimedAmount,\n        payoutOutcome,\n        claimableAmount,\n        maxCoveredAmount,\n        yieldTokenConfig,\n        coverAssetConfig,\n        portfolioCoverage,\n        coveredTokenAmount,\n        incident: matchedIncident ? {...matchedIncident, id: incidentEvents.findIndex(x => x.date === matchedIncident.date)} : null\n      });\n    });\n\n    return nexusMutualCoverages;\n  }\n  getBatchedDepositExecutions = async (contractAddress) => {\n    const requiredNetwork = this.getRequiredNetworkId();\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]){\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n      const etherscanEndpoint = `${etherscanApiUrl}?&apikey=${etherscanInfo.key}&module=account&action=tokentx&address=${contractAddress}&sort=desc`;\n      const transactions = await this.makeCachedRequest(etherscanEndpoint,1800,true);\n      if (transactions && typeof transactions.result === 'object'){\n        return transactions.result.filter( tx => tx.from === '0x0000000000000000000000000000000000000000' && tx.to.toLowerCase() === contractAddress.toLowerCase() );\n      }\n    }\n    return null;\n  }\n  getBatchedDeposits = async (account=null,filter_by_status=null) => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n\n    const batchDepositConfig = this.getGlobalConfig(['tools','batchDeposit']);\n    if (!batchDepositConfig.enabled){\n      return null;\n    }\n\n    const cachedDataKey = `batchedDeposits_${account}_${filter_by_status}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const batchedDeposits = {};\n    const availableTokens = batchDepositConfig.props.availableTokens;\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const migrationContract = tokenConfig.migrationContract;\n      await this.props.initContract(migrationContract.name,migrationContract.address,migrationContract.abi);\n      const currBatchIndex = await this.genericContractCall(migrationContract.name,'currBatch');\n      for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex) ; batchIndex++){\n        let [\n          batchExecutions,\n          batchTotal,\n          batchRedeem,\n          batchDeposit\n        ] = await Promise.all([\n          this.getBatchedDepositExecutions(migrationContract.address),\n          this.genericContractCall(migrationContract.name,'batchTotals',[batchIndex]),\n          this.genericContractCall(migrationContract.name,'batchRedeemedTotals',[batchIndex]),\n          this.genericContractCall(migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n\n        console.log(`Batch #${batchIndex} - ${batchTotal} - ${batchRedeem} - ${batchDeposit}`);\n\n        let batchTotals = null;\n        let batchRedeems = null;\n        let batchDeposits = null;\n        if (batchTotal && batchTotal !== null){\n          batchTotals = this.fixTokenDecimals(batchTotal,tokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchRedeem = this.fixTokenDecimals(batchRedeem,18);\n          batchDeposit = this.fixTokenDecimals(batchDeposit,tokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n            batchDeposits = batchDeposit;\n\n            // Calculate redeemable idleTokens\n            batchRedeems = batchDeposit.times(batchRedeem).div(batchTotals);\n            if (batchRedeems.gt(batchRedeem)){\n              batchRedeems = batchRedeem;\n            }\n\n            const status = batchIndex < currBatchIndex && batchRedeems.gt(0) ? 'executed' : 'pending';\n\n            if (filter_by_status !== null && filter_by_status.toLowerCase() !== status){\n              return;\n            }\n\n            const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n\n            batchedDeposits[token] = {\n              status,\n              batchTotals,\n              batchRedeems,\n              batchDeposits,\n              lastExecution\n            };\n          }\n        }\n      }\n    });\n\n    return this.setCachedData(cachedDataKey,batchedDeposits);\n  }\n  getETHBalance = async (walletAddr,fixDecimals=true,blockNumber='latest') => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `ethBalance_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()){\n        return this.BNify(cachedData);\n      }\n    }\n\n    let tokenBalance = await this.props.web3.eth.getBalance(walletAddr);\n\n    if (tokenBalance){\n      if (fixDecimals){\n        tokenBalance = this.fixTokenDecimals(tokenBalance,18);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()){\n        if (blockNumber !== 'latest'){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,tokenBalance);\n        } else {\n          return tokenBalance;\n        }\n      }\n    }\n    return null;\n  }\n  getTokenBalance = async (contractName,walletAddr,fixDecimals=true,blockNumber='latest') => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenBalance_${contractName}_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()){\n        return this.BNify(cachedData);\n      }\n    }\n\n    let [\n      tokenDecimals,\n      tokenBalance\n    ] = await Promise.all([\n      this.getTokenDecimals(contractName),\n      this.getContractBalance(contractName,walletAddr,blockNumber)\n    ]);\n\n    if (tokenBalance){\n      if (fixDecimals){\n        tokenBalance = this.fixTokenDecimals(tokenBalance,tokenDecimals);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()){\n        if (blockNumber !== 'latest'){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,tokenBalance,30);\n        } else {\n          return tokenBalance;\n        }\n      }\n    } else {\n      this.customLogError('Error on getting balance for ',contractName);\n    }\n    return null;\n  }\n  copyToClipboard = (copyText) => {\n    if (typeof copyText.select === 'function'){\n      copyText.select();\n      copyText.setSelectionRange(0, 99999); // Select\n      const res = document.execCommand(\"copy\");\n      copyText.setSelectionRange(0, 0); // Deselect\n      return res;\n    }\n    return false;\n  }\n  loadScript = (url,props,callback) => {\n    const script = document.createElement(\"script\");\n    script.src = url;\n\n    // Append props\n    if (props){\n      Object.keys(props).forEach((attr,i) => {\n        script[attr] = props[attr];\n      });\n    }\n\n    if (typeof callback === 'function'){\n      if (script.readyState) {  // only required for IE <9\n        script.onreadystatechange = function() {\n          if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n            script.onreadystatechange = null;\n            callback();\n          }\n        };\n      } else {  //Others\n        script.onload = callback;\n      }\n    }\n\n    if (!script.id || !document.getElementById(script.id)){\n      document.body.appendChild(script);\n    }\n  }\n  isValidJSON = str => {\n    try {\n      JSON.parse(str);\n    } catch (e) {\n      return false;\n    }\n    return true;\n  }\n  checkAddress = (address) => {\n    return address ? address.match(/^0x[a-fA-F0-9]{40}$/) !== null : false;\n  }\n  getTokenTotalSupply = async (contractName,blockNumber='latest') => {\n    const cachedDataKey = `totalSupply_${contractName}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const totalSupply = await this.genericContractCall(contractName, 'totalSupply', [], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,totalSupply);\n  }\n  getTokenPrice = async (contractName,blockNumber='latest') => {\n    const cachedDataKey = `tokenPrice_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const tokenPrice = await this.genericContractCall(contractName,'tokenPrice',[],{},blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,tokenPrice,60);\n  }\n  getContractBalance = async (contractName,address,blockNumber='latest') => {\n    address = address ? address : this.props.tokenConfig.idle.address;\n    const cachedDataKey = `balanceOf_${contractName}_${address}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n    const balance = await this.genericContractCall(contractName, 'balanceOf', [address], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,balance,30);\n  }\n  getProtocolBalance = async (contractName,address) => {\n    return await this.getContractBalance(contractName,address);\n  }\n  getAprs = async (contractName) => {\n    const cachedDataKey = `getAprs_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      // console.log('getAprs - CACHED - ',cachedData);\n      return typeof cachedData === 'object' ? cachedData : JSON.parse(cachedData);\n    }\n\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const aprs = await this.genericContractCall(contractName, 'getAPRs');\n    if (aprs){\n      const result = {\n        aprs:aprs[1],\n        addresses:aprs[0]\n      };\n      return this.setCachedDataWithLocalStorage(cachedDataKey,result);\n    }\n    return null;\n  }\n  genericIdleCall = async (methodName, params = [], callParams = {}) => {\n    return await this.genericContractCall(this.props.tokenConfig.idle.token, methodName, params, callParams).catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n  }\n  estimateGas = async (contractName, methodName, params = [], callParams = {}) => {\n    let contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.methods[methodName](...params).estimateGas(callParams);\n  }\n  getTxReceipt = async (txHash,web3=null) => {\n    web3 = web3 || this.props.web3;\n    if (!web3 || !web3.eth){\n      return null;\n    }\n    return await (new Promise( async (resolve, reject) => {\n      web3.eth.getTransactionReceipt(txHash,(err,tx)=>{\n        if (err){\n          reject(err);\n        }\n        resolve(tx);\n      });\n    }));\n  }\n  getTxDecodedLogs = async (tx,logAddr,decodeLogs,storedTx) => {\n\n    let txReceipt = storedTx && storedTx.txReceipt ? storedTx.txReceipt : null;\n\n    if (!txReceipt){\n      txReceipt = await (new Promise( async (resolve, reject) => {\n        this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n          if (err){\n            reject(err);\n          }\n          resolve(tx);\n        });\n      }));\n\n    }\n\n    if (!txReceipt){\n      return null;\n    }\n\n    const internalTransfers = txReceipt.logs.filter((tx) => { return tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${logAddr}`; });\n\n    if (!internalTransfers.length){\n      return null;\n    }\n\n    try {\n      return [\n        txReceipt,\n        this.props.web3.eth.abi.decodeLog(decodeLogs,internalTransfers[0].data,internalTransfers[0].topics)\n      ];\n    } catch (error) {\n      return null;\n    }\n  }\n  blocksToSeconds = (blocks) => {\n    const blocksPerSeconds = this.BNify(this.getGlobalConfig(['network','blocksPerYear'])).div(365.2422).div(86400);\n    return this.BNify(blocks).div(blocksPerSeconds);\n  }\n  getBlockNumber = async () => {\n    if (!this.props.web3){\n      return false;\n    }\n    return await this.props.web3.eth.getBlockNumber();\n  }\n  getBlockInfo = async (blockNumber) => {\n    const cachedDataKey = `getBlockInfo_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n    const blockInfo = await this.props.web3.eth.getBlock(blockNumber);\n    return blockInfo ? this.setCachedDataWithLocalStorage(cachedDataKey,blockInfo,null) : null;\n  }\n  getContractPastEvents = async (contractName,methodName,params = {}) => {\n    if (!contractName){\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    // console.log('getContractPastEvents',contractName,methodName);\n\n    return await contract.getPastEvents(methodName, params);\n  }\n\n  genericContractCallCached = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', TTL=180) => {\n    const cachedDataKey = `genericContractCall_${contractName}_${methodName}_${JSON.stringify(params)}_${JSON.stringify(callParams)}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    // Store forever for past block\n    if (blockNumber !== 'latest'){\n      TTL = null;\n    }\n\n    const result = await this.genericContractCall(contractName, methodName, params, callParams, blockNumber);\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,result,TTL);\n  }\n\n  cachedContractCall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', TTL=180) => {\n    return await this.genericContractCallCached(contractName, methodName, params, callParams, blockNumber, TTL);\n  }\n\n  genericContractCall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', count=0) => {\n\n    if (!contractName){\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLog('Wrong contract name', contractName);\n      return null;\n    }\n\n    if (!contract.methods[methodName]) {\n      this.customLog('Wrong method name', methodName);\n      return null;\n    }\n\n    blockNumber = blockNumber !== 'latest' && blockNumber && !isNaN(blockNumber) ? parseInt(blockNumber) : blockNumber;\n\n    try{\n      // console.log(`genericContractCall - ${contractName} - ${methodName} - [${params.join(',')}]`);\n      const value = await contract.methods[methodName](...params).call(callParams,blockNumber).catch(error => {\n        this.customLog(`${contractName} contract method ${methodName} error: `, error);\n      });\n      // if (!value){\n      //   console.log('genericContractCall - NULL - ',contractName,methodName,params);\n      // }\n      // console.log(`${moment().format('HH:mm:ss')} - genericContractCall (${blockNumber}) - ${contractName} - ${methodName} (${JSON.stringify(params)}) : ${value}`);\n      return value;\n    } catch (error) {\n      // console.log('genericContractCall ERROR - ',contractName,methodName,params);\n      this.customLog(\"genericContractCall error\", error);\n      // if (count<=3){\n      //   await this.asyncTimeout(1000);\n      //   return await this.genericContractCall(contractName, methodName, params, callParams, blockNumber, count+1);\n      // }\n    }\n  }\n  asyncForEach = async (array, callback, async=true) => {\n    let output = [];\n    if (async){\n      output = await Promise.all(array.map( (c,index) => {\n        return callback(c, index, array);\n      }));\n    } else {\n      for (let index = 0; index < array.length; index++) {\n        output.push(await callback(array[index], index, array));\n      }\n    }\n    return output;\n  }\n  apr2apy = (apr) => {\n    return (this.BNify(1).plus(this.BNify(apr).div(365))).pow(365).minus(1);\n  }\n  getUnlentBalance = async (tokenConfig) => {\n    let unlentBalance = await this.getProtocolBalance(tokenConfig.token,tokenConfig.idle.address);\n    if (unlentBalance){\n      unlentBalance = this.fixTokenDecimals(unlentBalance,tokenConfig.decimals);\n    }\n    return unlentBalance;\n  }\n  getTokenPool = async (tokenConfig,addGovTokens=true) => {\n    // Check for cached data\n    const cachedDataKey = `tokenPool_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN() ) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,addGovTokens);\n    if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent){\n      const tokenPool = tokenAllocation.totalAllocationWithUnlent;\n      if (!this.BNify(tokenPool).isNaN()){\n        return this.setCachedDataWithLocalStorage(cachedDataKey,tokenPool);\n      }\n    }\n\n    return null;\n  }\n  getLastAllocations = async (tokenConfig) => {\n    if (!tokenConfig.idle){\n      return false;\n    }\n\n    const aprs = await this.getAprs(tokenConfig.idle.token);\n    const allAvailableTokens = aprs ? aprs.addresses : null;\n    if (allAvailableTokens){\n      const tokenAllocations = await this.asyncForEach(allAvailableTokens, async (protocolAddr,index) => {\n        return await this.genericContractCall(tokenConfig.idle.token, 'lastAllocations',[index]);\n      });\n      return allAvailableTokens.reduce( (lastAllocations,protocolAddr,index) => {\n        lastAllocations[protocolAddr.toLowerCase()] = tokenAllocations[index];\n        return lastAllocations;\n      },{});\n    }\n\n    return {};\n  }\n  getTokenAllocation = async (tokenConfig,protocolsAprs=false,addGovTokens=true) => {\n    \n    if (!tokenConfig.idle){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAllocation_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const tokenAllocation = {\n      avgApr: null,\n      unlentBalance:null,\n      totalAllocation:null,\n      protocolsAllocations:null,\n      protocolsAllocationsPerc:null,\n      totalAllocationConverted:null,\n      totalAllocationWithUnlent:null,\n      totalAllocationWithUnlentConverted:null,\n    };\n\n    const protocolsAllocations = {};\n    const protocolsAllocationsPerc = {};\n\n    let [\n      unlentBalance,\n      tokenPrice,\n      lastAllocations,\n      tokenUsdConversionRate,\n      totalSupply,\n      govTokensBalances,\n    ] = await Promise.all([\n      this.getUnlentBalance(tokenConfig),\n      this.getIdleTokenPrice(tokenConfig),\n      this.getLastAllocations(tokenConfig),\n      this.getTokenConversionRate(tokenConfig,false),\n      this.getIdleTokenSupply(tokenConfig.idle.token),\n      addGovTokens ? this.getGovTokensBalances(tokenConfig.idle.address) : null,\n    ]);\n\n    const totalAllocation = this.fixTokenDecimals(totalSupply,18).times(tokenPrice).minus(unlentBalance);\n\n    if (lastAllocations){\n      Object.keys(lastAllocations).forEach( (protocolAddr) => {\n        const protocolInfo = tokenConfig.protocols.find( p => p.address.toLowerCase() === protocolAddr.toLowerCase() );\n        if (protocolInfo && protocolInfo.enabled){\n          const protocolAllocationPerc = this.BNify(lastAllocations[protocolAddr]).div(100000);\n          const protocolAllocation = totalAllocation.times(protocolAllocationPerc);\n          protocolsAllocations[protocolAddr.toLowerCase()] = protocolAllocation;\n          protocolsAllocationsPerc[protocolAddr.toLowerCase()] = protocolAllocationPerc;\n        }\n      });\n    }\n\n    tokenAllocation.unlentBalance = this.BNify(0);\n    tokenAllocation.totalAllocationWithUnlent = totalAllocation;\n\n    if (unlentBalance){\n      tokenAllocation.unlentBalance = unlentBalance;\n      tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(unlentBalance);\n    }\n\n    tokenAllocation.totalAllocation = totalAllocation;\n    tokenAllocation.protocolsAllocations = protocolsAllocations;\n    tokenAllocation.protocolsAllocationsPerc = protocolsAllocationsPerc;\n\n    // Sum gov tokens balances\n    if (govTokensBalances && govTokensBalances.total){\n      if (tokenUsdConversionRate){\n        govTokensBalances.total = govTokensBalances.total.div(tokenUsdConversionRate);\n      }\n\n      // add gov token balance to total allocation\n      tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(govTokensBalances.total);\n    }\n\n    tokenAllocation.totalAllocationConverted = tokenAllocation.totalAllocation;\n    tokenAllocation.totalAllocationWithUnlentConverted = tokenAllocation.totalAllocationWithUnlent;\n\n    if (tokenUsdConversionRate){\n      tokenAllocation.totalAllocationConverted = tokenAllocation.totalAllocationConverted.times(tokenUsdConversionRate);\n      tokenAllocation.totalAllocationWithUnlentConverted = tokenAllocation.totalAllocationWithUnlentConverted.times(tokenUsdConversionRate);\n    }\n\n    if (protocolsAprs){\n      tokenAllocation.avgApr = this.getAvgApr(protocolsAprs,protocolsAllocations,totalAllocation);\n    }\n\n    // console.log('getTokenAllocation',tokenConfig.idle.token,totalSupply ? totalSupply.toFixed(8) : null,tokenPrice ? tokenPrice.toFixed(8) : null,unlentBalance ? unlentBalance.toFixed(8) : null,tokenAllocation);\n\n    // console.log('Allocations for '+tokenConfig.idle.token+' loaded in '+((Date.now()-start)/1000).toFixed(2)+'s');\n\n    return this.setCachedData(cachedDataKey,tokenAllocation);\n  }\n  getSushiswapPoolTokenPrice = async (contractName) => {\n    const [\n      token0_address,\n      token1_address,\n      poolReserves,\n      totalSupply\n    ] = await Promise.all([\n      this.genericContractCallCached(contractName,'token0'),\n      this.genericContractCallCached(contractName,'token1'),\n      this.genericContractCallCached(contractName,'getReserves'),\n      this.getTokenTotalSupply(contractName)\n    ]);\n\n    if (token0_address && token1_address && poolReserves && totalSupply){\n      const token0_config = {\n        address:token0_address\n      };\n      const token1_config = {\n        address:token1_address\n      };\n      const DAITokenConfig = {\n        address:this.getContractByName('DAI')._address\n      };\n\n      let [\n        token0_price,\n        token1_price\n      ] = await Promise.all([\n        this.getSushiswapConversionRate(DAITokenConfig,token0_config),\n        this.getSushiswapConversionRate(DAITokenConfig,token1_config)\n      ]);\n\n      if (token0_price && token1_price){\n        // token0_price = this.BNify(1).div(this.BNify(token0_price));\n        // token1_price = this.BNify(1).div(this.BNify(token1_price));\n\n        const token0_pool = token0_price.times(this.fixTokenDecimals(poolReserves[0],18));\n        const token1_pool = token1_price.times(this.fixTokenDecimals(poolReserves[1],18));\n\n        const totalPoolSize = token0_pool.plus(token1_pool);\n        const poolTokenPrice = totalPoolSize.div(this.fixTokenDecimals(totalSupply,18));\n\n        // console.log(parseFloat(token0_price),parseFloat(token1_price),parseFloat(poolTokenPrice));\n\n        return poolTokenPrice;\n      }\n    }\n\n    return null;\n  }\n  getSushiswapConversionRate = async (tokenConfigFrom,tokenConfigDest) => {\n\n    // Check for cached data\n    const cachedDataKey = `sushiswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = this.getContractByName('WETH')._address;\n      const one = this.normalizeTokenDecimals(18);\n\n      const path = [];\n      path.push(tokenConfigFrom.address);\n\n      // Don't pass through weth if i'm converting weth\n      if (WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()){\n        path.push(WETHAddr);\n      }\n      path.push(tokenConfigDest.address);\n\n      const res = await this.genericContractCall('SushiswapRouter','getAmountsIn',[one.toFixed(),path]);\n\n      // console.log('getSushiswapConversionRate',path,res);\n\n      if (res){\n        const price = this.BNify(res[0]).div(one);\n        return this.setCachedDataWithLocalStorage(cachedDataKey,price);\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  getUniswapConversionRate = async (tokenConfigFrom,tokenConfigDest) => {\n\n    if (tokenConfigDest.addressForPrice){\n      tokenConfigDest = Object.assign({},tokenConfigDest);\n      tokenConfigDest.address = tokenConfigDest.addressForPrice;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `uniswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    // console.log('getUniswapConversionRate - CACHED',cachedDataKey,cachedData);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = this.getContractByName('WETH')._address;\n      const one = this.normalizeTokenDecimals(18);\n\n      const path = [];\n      path.push(tokenConfigFrom.address);\n      // Don't pass through weth if i'm converting weth\n      if (WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()){\n        path.push(WETHAddr);\n      }\n      path.push(tokenConfigDest.address);\n\n      const unires = await this.genericContractCall('UniswapRouter','getAmountsIn',[one.toFixed(),path]);\n\n      // console.log('getUniswapConversionRate',path,unires);\n      \n      if (unires){\n        const price = this.BNify(unires[0]).div(one);\n        return this.setCachedDataWithLocalStorage(cachedDataKey,price);\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  /*\n  getUniswapConversionRate_old = async (tokenConfigFrom,tokenConfigDest) => {\n    const cachedDataKey = `compUniswapConverstionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    const tokenFrom = new Token(ChainId.MAINNET, tokenConfigFrom.address, tokenConfigFrom.decimals);\n    const tokenTo = new Token(ChainId.MAINNET, tokenConfigDest.address, tokenConfigDest.decimals);\n\n    const pair = await Fetcher.fetchPairData(tokenFrom, tokenTo);\n    const route = new Route([pair], tokenTo);\n\n    let output = null;\n    if (route && route.midPrice){\n      output = this.BNify(route.midPrice.toSignificant(tokenConfigDest.decimals));\n      this.setCachedData(cachedDataKey,output);\n    }\n    return output;\n  }\n  */\n  getCurveDepositedTokens = async (account,enabledTokens=[]) => {\n    account = account ? account : this.props.account;\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    if (!account || !enabledTokens || !enabledTokens.length){\n      return [];\n    }\n\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    const idleTokensBalances = {};\n    let remainingCurveTokens = this.BNify(0);\n\n    // this.customLog('getCurveDepositedTokens',curveTxs);\n\n    curveTxs.forEach( tx => {\n\n      const idleToken = tx.idleToken;\n      const idleTokens = this.BNify(tx.idleTokens);\n\n      if (!idleTokensBalances[idleToken]){\n        idleTokensBalances[idleToken] = this.BNify(0);\n      }\n\n      switch (tx.action){\n        case 'CurveIn':\n        case 'CurveZapIn':\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].plus(idleTokens);\n        break;\n        case 'CurveOut':\n        case 'CurveZapOut':\n          if (idleTokens.gt(idleTokensBalances[idleToken])){\n            remainingCurveTokens = remainingCurveTokens.plus(idleTokens.minus(idleTokensBalances[idleToken]));\n          }\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].minus(idleTokens);\n          if (idleTokensBalances[idleToken].lt(0)){\n            idleTokensBalances[idleToken] = this.BNify(0);\n          }\n        break;\n        default:\n        break;\n      }\n\n      // this.customLog(this.strToMoment(tx.timeStamp*1000).format('DD-MM-YYYY HH:mm:ss'),tx.blockNumber,idleToken,tx.action,idleTokens.toFixed(6),idleTokensBalances[idleToken].toFixed(6),remainingCurveTokens.toFixed(6));\n\n      // Scalo il remaining tokens\n      if (remainingCurveTokens.gt(0)){\n        Object.keys(idleTokensBalances).forEach( token => {\n          const tokenBalance = idleTokensBalances[token];\n          if (tokenBalance && tokenBalance.gt(0)){\n            if (tokenBalance.gt(remainingCurveTokens)){\n              idleTokensBalances[token] = idleTokensBalances[token].minus(remainingCurveTokens);\n            } else {\n              remainingCurveTokens = remainingCurveTokens.minus(idleTokensBalances[token]);\n              idleTokensBalances[token] = 0;\n            }\n          }\n        });\n      }\n    });\n\n    // this.customLog('idleTokensBalances',idleTokensBalances);\n  }\n  getCurveUnevenTokenAmounts = async (amounts,max_burn_amount) => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract){\n      const unevenAmounts = await this.genericContractCall(curveSwapContract.name, 'remove_liquidity_imbalance', [amounts, max_burn_amount]);\n      // this.customLog('getCurveUnevenTokenAmounts',amounts,max_burn_amount,unevenAmounts);\n      return unevenAmounts;\n    }\n    return null;\n  }\n  getCurveAPY = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getCurveAPY`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const curveRatesInfo = this.getGlobalConfig(['curve','rates']);\n    if (curveRatesInfo){\n      const results = await this.makeRequest(curveRatesInfo.endpoint);\n      if (results && results.data){\n        const path = Object.values(curveRatesInfo.path);\n        let curveApy = this.getArrayPath(path,results.data);\n        if (curveApy){\n          curveApy = this.BNify(curveApy).times(100);\n          if (!this.BNify(curveApy).isNaN()){\n            return this.setCachedDataWithLocalStorage(cachedDataKey,curveApy);\n          }\n        }\n      }\n    }\n    return null;\n  }\n  getCurveAvailableTokens = () => {\n    if (!this.props.availableStrategies){\n      return false;\n    }\n    const curveTokens = this.getGlobalConfig(['curve','availableTokens']);\n    const strategyTokens = this.props.availableStrategies['best'];\n    const availableTokens = Object.keys(strategyTokens).reduce( (availableTokens,token) => {\n      const tokenConfig = strategyTokens[token];\n      if (Object.keys(curveTokens).includes(tokenConfig.idle.token) && curveTokens[tokenConfig.idle.token].enabled){\n        availableTokens[token] = tokenConfig;\n      }\n      return availableTokens;\n    },{});\n\n    return availableTokens;\n  }\n  getCurveAPYContract = async () => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract){\n      const blockNumber = await this.getBlockNumber();\n      if (blockNumber){\n        const blocksForPrevTokenPrice = 10;\n        let [tokenPrice,prevTokenPrice] = await Promise.all([\n          this.genericContractCall(curveSwapContract.name,'get_virtual_price'),\n          this.genericContractCallCached(curveSwapContract.name,'get_virtual_price',[],{},blockNumber-blocksForPrevTokenPrice)\n        ]);\n\n        if (tokenPrice && prevTokenPrice){\n\n          const blocksMultiplier = this.BNify(this.getGlobalConfig(['network','blocksPerYear'])).div(blocksForPrevTokenPrice);\n          const curveAPR = this.BNify(tokenPrice).div(prevTokenPrice).minus(1).times(blocksMultiplier);\n          return this.apr2apy(curveAPR).times(100);\n        }\n      }\n    }\n    return null;\n  }\n  getCurveTokenSupply = async () => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract){\n      return await this.getTokenTotalSupply(curvePoolContract.name);\n    }\n    return null;\n  }\n  getCurveTokenBalance = async (account=null,fixDecimals=true) => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract){\n      account = account ? account : this.props.account;\n      return await this.getTokenBalance(curvePoolContract.name,account,fixDecimals);\n    }\n    return null;\n  }\n  getCurveTokenPrice = async (blockNumber='latest',fixDecimals=true) => {\n    const migrationContract = await this.getCurveDepositContract();\n    let curveTokenPrice = await this.genericContractCallCached(migrationContract.name,'get_virtual_price',[],{},blockNumber);\n    if (curveTokenPrice){\n      curveTokenPrice = this.BNify(curveTokenPrice);\n      if (fixDecimals){\n        const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n        curveTokenPrice = this.fixTokenDecimals(curveTokenPrice,curvePoolContract.decimals);\n      }\n      return curveTokenPrice;\n    }\n    return null;\n  }\n  getCurveRedeemableIdleTokens = async (account) => {\n    let [curveTokenPrice,curveTokenBalance] = await Promise.all([\n      this.getCurveTokenPrice('latest'),\n      this.getCurveTokenBalance(account),\n    ]);\n    if (curveTokenBalance && curveTokenPrice){\n      return this.BNify(curveTokenBalance).times(curveTokenPrice);\n    }\n    return null;\n  }\n  getCurveDepositContract = async () => {\n    const depositContractInfo = this.getGlobalConfig(['curve','depositContract']);\n    if (depositContractInfo){\n      let curveDepositContract = this.getContractByName(depositContractInfo.name);\n      if (!curveDepositContract && depositContractInfo.abi){\n        curveDepositContract = await this.props.initContract(depositContractInfo.name,depositContractInfo.address,depositContractInfo.abi);\n      }\n    }\n    return depositContractInfo;\n  }\n  getCurveZapContract = async () => {\n    const zapContractInfo = this.getGlobalConfig(['curve','zapContract']);\n    if (zapContractInfo){\n      let curveZapContract = this.getContractByName(zapContractInfo.name);\n      if (!curveZapContract && zapContractInfo.abi){\n        curveZapContract = await this.props.initContract(zapContractInfo.name,zapContractInfo.address,zapContractInfo.abi);\n      }\n    }\n    return zapContractInfo;\n  }\n  getCurvePoolContract = async () => {\n    const poolContractInfo = this.getGlobalConfig(['curve','poolContract']);\n    if (poolContractInfo){\n      let curvePoolContract = this.getContractByName(poolContractInfo.name);\n      if (!curvePoolContract && poolContractInfo.abi){\n        curvePoolContract = await this.props.initContract(poolContractInfo.name,poolContractInfo.address,poolContractInfo.abi);\n      }\n    }\n    return poolContractInfo;\n  }\n  getCurveSwapContract = async () => {\n    const migrationContractInfo = this.getGlobalConfig(['curve','migrationContract']);\n    if (migrationContractInfo){\n      let migrationContract = this.getContractByName(migrationContractInfo.name);\n      if (!migrationContract && migrationContractInfo.abi){\n        migrationContract = await this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi);\n      }\n    }\n    return migrationContractInfo;\n  }\n  getCurveIdleTokensAmounts = async (account=null,curveTokenBalance=null,max_slippage=null) => {\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account){\n      return null;\n    }\n\n    const tokensBalances = {};\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance){\n      curveTokenBalance = await this.getCurveTokenBalance(account,false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply){\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n      const n_coins = Object.keys(curveAvailableTokens).length;\n\n      if (max_slippage){\n        max_slippage = this.BNify(max_slippage).div(n_coins);\n      }\n\n      // this.customLog('curveTokenShare',this.BNify(curveTokenBalance).toString(),this.BNify(curveTokenSupply).toString(),curveTokenShare.toString());\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const curveIdleTokens = await this.genericContractCall(curveSwapContract.name,'balances',[coinIndex]);\n        if (curveIdleTokens){\n          let idleTokenBalance = this.BNify(curveIdleTokens).times(curveTokenShare);\n          if (max_slippage){\n            // this.customLog('getCurveIdleTokensAmounts',idleTokenBalance.toFixed());\n            idleTokenBalance = idleTokenBalance.minus(idleTokenBalance.times(max_slippage));\n          }\n          tokensBalances[coinIndex] = this.integerValue(idleTokenBalance);\n        }\n      });\n    }\n\n    return Object.values(tokensBalances);\n  }\n\n  // Get amounts of underlying tokens in the curve pool\n  getCurveTokensAmounts = async (account=null,curveTokenBalance=null,fixDecimals=false,useCoinIndex=false) => {\n\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account){\n      return null;\n    }\n\n    const tokensBalances = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance){\n      curveTokenBalance = await this.getCurveTokenBalance(account,false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply){\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        const [\n          idleTokenPrice,\n          idleTokenBalance\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.genericContractCall(curveSwapContract.name,'balances',[coinIndex]),\n        ]);\n\n        const totalTokenSupply = this.BNify(idleTokenBalance).times(this.BNify(idleTokenPrice));\n        let tokenBalance = totalTokenSupply.times(curveTokenShare);\n        if (fixDecimals){\n          tokenBalance = this.fixTokenDecimals(tokenBalance,18);\n        }\n\n        tokensBalances[curveTokenConfig.baseToken] = useCoinIndex ? this.integerValue(tokenBalance) : tokenBalance;\n      });\n    }\n\n    return useCoinIndex ? Object.values(tokensBalances) : tokensBalances;\n  }\n\n  // Compile amounts array for Curve\n  getCurveAmounts = async (token,amount,deposit=false) => {\n    const amounts = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    await this.asyncForEach(Object.keys(curveAvailableTokens), async (idleToken) => {\n      const curveTokenConfig = curveAvailableTokens[idleToken];\n      const migrationParams = curveTokenConfig.migrationParams;\n      const coinIndex = migrationParams.coinIndex;\n      if (idleToken === token && parseFloat(amount)>0){\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        amount = this.fixTokenDecimals(amount,18);\n        if (!deposit){\n          const idleTokenPrice = await this.getIdleTokenPrice(tokenConfig);\n          amount = amount.div(idleTokenPrice);\n        }\n        amount = this.normalizeTokenAmount(amount,curveTokenConfig.decimals);\n        amounts[coinIndex] = amount;\n      } else {\n        amounts[coinIndex] = 0;\n      }\n    });\n\n    return Object.values(amounts);\n  }\n  getCurveTokenAmount = async (amounts,deposit=true) => {\n    const migrationContract = await this.getCurveSwapContract();\n    if (migrationContract){\n      return await this.genericContractCall(migrationContract.name,'calc_token_amount',[amounts,deposit]);\n    }\n    return null;\n  }\n  getCurveSlippage = async (token,amount,deposit=true,uneven_amounts=null) => {\n    let slippage = null;\n    const depositContract = await this.getCurveDepositContract();\n    if (depositContract){\n\n      const n_coins = this.getGlobalConfig(['curve','params','n_coins']);\n\n      amount = this.BNify(amount)\n      if (!amount || amount.isNaN() || amount.lte(0)){\n        return null;\n      }\n\n      let amounts = uneven_amounts;\n      if (!amounts || amounts.length !== n_coins){\n        amounts = await this.getCurveAmounts(token,amount);\n      }\n\n      let [\n        virtualPrice,\n        tokenAmount\n      ] = await Promise.all([\n        this.genericContractCall(depositContract.name,'get_virtual_price'),\n        this.genericContractCall(depositContract.name,'calc_token_amount',[amounts,deposit]),\n      ]);\n\n      if (virtualPrice && tokenAmount){\n        amount = this.fixTokenDecimals(amount,18);\n        virtualPrice = this.fixTokenDecimals(virtualPrice,18);\n        tokenAmount = this.fixTokenDecimals(tokenAmount,18);\n        const Sv = tokenAmount.times(virtualPrice);\n\n        // Handle redeem in uneven amounts (Slippage 0%)\n        if (uneven_amounts && !deposit){\n          amount = amount.times(virtualPrice);\n        }\n\n        if (deposit){\n          slippage = Sv.div(amount).minus(1).times(-1);\n        } else {\n          slippage = amount.div(Sv).minus(1).times(-1);\n        }\n\n        // console.log('getCurveSlippage',token,deposit,amounts,tokenAmount.toFixed(6),virtualPrice.toFixed(6),Sv.toFixed(6),amount.toFixed(6),slippage.toFixed(6));\n\n        return slippage;\n      }\n    }\n    return null;\n  }\n  getStkAaveDistribution = async (tokenConfig,aTokenIdleSupply=null,annualize=true) => {\n\n    const cachedDataKey = `getStkAaveDistribution_${tokenConfig.idle.token}_${aTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const currentNetworkId = this.getRequiredNetworkId();\n\n    let aaveDistribution = this.BNify(0);\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens','stkAAVE']);\n    const aTokenConfig = tokenConfig.protocols.find( p => p.name === stkAAVETokenConfig.protocol );\n\n    // console.log('getStkAaveDistribution_1',tokenConfig.idle.token,aTokenConfig.token);\n    const disabledTokens = this.getArrayPath(['disabledTokens',currentNetworkId],stkAAVETokenConfig) || [];\n\n    if (!aTokenConfig || disabledTokens.includes(tokenConfig.idle.token)){\n      return aaveDistribution;\n    }\n\n    const aaveIncentivesController_address = await this.genericContractCall(aTokenConfig.token,'getIncentivesController');\n\n    if (!aaveIncentivesController_address){\n      return aaveDistribution;\n    }\n\n    const IAaveIncentivesController_name = `IAaveIncentivesController_${aaveIncentivesController_address}`;\n    await this.props.initContract(IAaveIncentivesController_name,aaveIncentivesController_address,IAaveIncentivesController);\n\n    let [\n      aTokenTotalSupply,\n      tokenAllocation,\n      assetData,\n    ] = await Promise.all([\n      this.getTokenTotalSupply(aTokenConfig.token),\n      this.getTokenAllocation(tokenConfig,false,false),\n      this.genericContractCall(IAaveIncentivesController_name,'assets',[aTokenConfig.address]),\n    ]);\n\n    // console.log('getStkAaveDistribution',IAaveIncentivesController_name,aTokenConfig.address,assetData);\n\n    if (assetData && tokenAllocation){\n\n      const aaveAllocationPerc = tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()];\n\n      if (aaveAllocationPerc && aaveAllocationPerc.gte(0.001)){\n        if (!aTokenIdleSupply){\n          aTokenIdleSupply = await this.genericContractCall(aTokenConfig.token,'balanceOf',[tokenConfig.idle.address]);\n        }\n\n        const aaveSpeed = this.BNify(assetData.emissionPerSecond);\n        aTokenIdleSupply = this.BNify(aTokenIdleSupply);\n        aTokenTotalSupply = this.BNify(aTokenTotalSupply);\n        const secondsPerYear = this.getGlobalConfig(['network','secondsPerYear']);\n\n        const aavePoolShare = aTokenIdleSupply.div(aTokenTotalSupply);\n        aaveDistribution = aaveSpeed.times(aavePoolShare);\n\n        if (annualize){\n          aaveDistribution = aaveDistribution.div(1e18).times(secondsPerYear);\n        }\n\n        if (!this.BNify(aaveDistribution).isNaN()){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,aaveDistribution);\n        }\n      }\n    }\n\n    return aaveDistribution;\n  }\n  getStkAaveUserDistribution = async (account=null,availableTokens=null) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens','stkAAVE']);\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const aTokenInfo = tokenConfig.protocols.find( p => (p.name === stkAAVETokenConfig.protocol) );\n      if (aTokenInfo){\n        const [\n          userPoolShare,\n          aaveDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account,tokenConfig,false),\n          this.getStkAaveDistribution(tokenConfig,null,false),\n        ]);\n\n        if (aaveDistribution && userPoolShare && !this.BNify(aaveDistribution).isNaN() && !this.BNify(userPoolShare).isNaN() ){\n          output = output.plus(aaveDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getWMaticApr = async (token,tokenConfig,maticConversionRate=null) => {\n    const wMaticTokenConfig = this.getGlobalConfig(['govTokens','WMATIC']);\n    if (!wMaticTokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getWMaticApr_${tokenConfig.idle.token}_${maticConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let wMaticApr = this.BNify(0);\n    const distributionSpeed = await this.getStkAaveDistribution(tokenConfig);\n\n    if (distributionSpeed && this.BNify(distributionSpeed).gt(0)){\n\n      // Get COMP conversion rate\n      if (!maticConversionRate){\n        const DAITokenConfig = {\n          address:this.getContractByName('DAI')._address\n        };\n        try {\n          const destTokenConfig = {\n            address:wMaticTokenConfig.addressForPrice || wMaticTokenConfig.address\n          };\n          maticConversionRate = await this.getUniswapConversionRate(DAITokenConfig,destTokenConfig);\n        } catch (error) {\n\n        }\n        if (!maticConversionRate || maticConversionRate.isNaN()){\n          maticConversionRate = this.BNify(1);\n        }\n      }\n\n      const wMaticValue = this.BNify(maticConversionRate).times(distributionSpeed);\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n\n      // console.log('wMaticApr',tokenConfig.idle.token,distributionSpeed.toFixed(),this.BNify(maticConversionRate).toFixed(),tokenAllocation);\n\n      if (tokenAllocation){\n        wMaticApr = wMaticValue.div(tokenAllocation.totalAllocationConverted).times(100);\n\n        // console.log('wMaticApr',tokenConfig.idle.token,distributionSpeed.toFixed(),this.BNify(maticConversionRate).toFixed(),wMaticValue.toFixed(),tokenAllocation.totalAllocationConverted.toFixed(),wMaticApr.toFixed());\n\n        if (!this.BNify(wMaticApr).isNaN()){\n          this.setCachedDataWithLocalStorage(cachedDataKey,wMaticApr);\n        }\n      }\n    }\n\n    return wMaticApr;\n  }\n  getStkAaveApr = async (token,tokenConfig,aaveConversionRate=null) => {\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens','stkAAVE']);\n    if (!stkAAVETokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getStkAaveApr_${tokenConfig.idle.token}_${aaveConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let stkAaveAPR = this.BNify(0);\n    const aaveDistribution = await this.getStkAaveDistribution(tokenConfig);\n\n    if (aaveDistribution && this.BNify(aaveDistribution).gt(0)){\n\n      // Get COMP conversion rate\n      if (!aaveConversionRate){\n        const DAITokenConfig = {\n          address:this.getContractByName('DAI')._address\n        };\n        try {\n          const destTokenConfig = {\n            address:stkAAVETokenConfig.addressForPrice || stkAAVETokenConfig.address\n          };\n          aaveConversionRate = await this.getUniswapConversionRate(DAITokenConfig,destTokenConfig);\n        } catch (error) {\n\n        }\n        if (!aaveConversionRate || aaveConversionRate.isNaN()){\n          aaveConversionRate = this.BNify(1);\n        }\n      }\n\n      const stkAaveValue = this.BNify(aaveConversionRate).times(aaveDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n\n      if (tokenAllocation){\n        stkAaveAPR = stkAaveValue.div(tokenAllocation.totalAllocationConverted).times(100);\n\n        // console.log('getStkAaveApr',tokenConfig.idle.token,aaveDistribution.toFixed(),this.BNify(aaveConversionRate).toFixed(),stkAaveValue.toFixed(),tokenAllocation.totalAllocationConverted.toFixed(),stkAaveAPR.toFixed());\n\n        if (!this.BNify(stkAaveAPR).isNaN()){\n          this.setCachedDataWithLocalStorage(cachedDataKey,stkAaveAPR);\n        }\n      }\n    }\n\n    return stkAaveAPR;\n  }\n  getCompAPR = async (token,tokenConfig,cTokenIdleSupply=null,compConversionRate=null) => {\n    const COMPTokenConfig = this.getGlobalConfig(['govTokens','COMP']);\n    if (!COMPTokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getCompAPR_${tokenConfig.idle.token}_${cTokenIdleSupply}_${compConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let compAPR = this.BNify(0);\n    const compDistribution = await this.getCompDistribution(tokenConfig,cTokenIdleSupply);\n\n    if (compDistribution){\n\n      const DAITokenConfig = {\n        address:this.getContractByName('DAI')._address\n      };\n        \n      // Get COMP conversion rate\n      if (!compConversionRate){\n        try {\n          compConversionRate = await this.getUniswapConversionRate(DAITokenConfig,COMPTokenConfig);\n        } catch (error) {\n\n        }\n        if (!compConversionRate || compConversionRate.isNaN()){\n          compConversionRate = this.BNify(1);\n        }\n      }\n\n      const compValue = this.BNify(compConversionRate).times(compDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n\n      console.log('getCompAPR',tokenConfig.idle.token,compConversionRate.toFixed(5),compDistribution.toFixed(5),compValue.toFixed(5),tokenAllocation.totalAllocationConverted.toFixed(5));\n\n      if (tokenAllocation){\n        compAPR = compValue.div(tokenAllocation.totalAllocationConverted).times(100);\n        if (!this.BNify(compAPR).isNaN()){\n          this.setCachedDataWithLocalStorage(cachedDataKey,compAPR);\n        }\n      }\n    }\n\n    return compAPR;\n  }\n  getCompSpeed = async (cTokenAddress) => {\n    let compSpeed = await this.genericContractCallCached('Comptroller','compSupplySpeeds',[cTokenAddress]);\n    if (compSpeed){\n      return this.BNify(compSpeed);\n    }\n    return null;\n  }\n  getCompDistribution = async (tokenConfig,cTokenIdleSupply=null,annualize=true) => {\n\n    const cachedDataKey = `getCompDistribution_${tokenConfig.idle.token}_${cTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n    if (cTokenInfo){\n\n      // Get IdleToken allocation in compound\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n      const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenInfo.address.toLowerCase()];\n\n      // Calculate distribution if compound allocation >= 0.1%\n      if (compoundAllocationPerc && compoundAllocationPerc.gte(0.001)){\n\n        // Get COMP distribution speed and Total Supply\n        const [\n          compSpeed,\n          cTokenTotalSupply\n        ] = await Promise.all([\n          this.getCompSpeed(cTokenInfo.address),\n          this.getTokenTotalSupply(cTokenInfo.token)\n        ]);\n\n        if (compSpeed && cTokenTotalSupply){\n\n          // Get Idle liquidity supply\n          if (!cTokenIdleSupply){\n            cTokenIdleSupply = await this.getContractBalance(cTokenInfo.token,tokenConfig.idle.address);\n          }\n\n          if (cTokenIdleSupply){\n\n            // Get COMP distribution for Idle in a Year\n            const blocksPerYear = this.getGlobalConfig(['network','blocksPerYear']);\n\n            // Take 50% of distrubution for lenders side\n            const compoundPoolShare = this.BNify(cTokenIdleSupply).div(this.BNify(cTokenTotalSupply));\n            let compDistribution = this.BNify(compSpeed).times(compoundPoolShare);\n\n            if (annualize){\n              compDistribution = this.fixTokenDecimals(compDistribution,18).times(blocksPerYear);\n            }\n\n            if (!this.BNify(compDistribution).isNaN()){\n              return this.setCachedDataWithLocalStorage(cachedDataKey,compDistribution);\n            }\n          }\n        }\n      }\n    }\n\n    return null;\n  }\n  getCompUserDistribution = async (account=null,availableTokens=null) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n      if (cTokenInfo){\n        const [\n          userPoolShare,\n          compDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account,tokenConfig,false),\n          this.getCompDistribution(tokenConfig,null,false),\n        ]);\n\n        if (compDistribution && userPoolShare){\n          output = output.plus(compDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getCompAvgApr = async (availableTokens=null) => {\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.BNify(0);\n    let totalAllocation = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [compApr,tokenAllocation] = await Promise.all([\n        this.getCompAPR(token,tokenConfig),\n        this.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (compApr && tokenAllocation){\n        output = output.plus(compApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n        // this.customLog(token,compApr.toString(),tokenAllocation.totalAllocation.toString(),output.toString(),totalAllocation.toString());\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n  getTokensCsv = async () => {\n\n    // eslint-disable-next-line\n    Array.prototype.sum = function() {\n      return this.reduce(function(pv, cv) { return pv + cv; }, 0);\n    };\n    // eslint-disable-next-line\n    Array.prototype.max = function() {\n      return Math.max.apply(null, this);\n    };\n    // eslint-disable-next-line\n    Array.prototype.avg = function() {\n      return this.sum()/this.length;\n    };\n\n    const csv = [];\n    const availableStrategies = this.props.availableStrategies;\n    await this.asyncForEach(Object.keys(availableStrategies), async (strategy) => {\n      const availableTokens = availableStrategies[strategy];\n      const isRisk = strategy === 'risk';\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n        const tokenConfig = availableTokens[token];\n        const rates = await this.getTokenApiData(tokenConfig.address,isRisk,null,null,false,7200,'ASC');\n        const header = [];\n        let protocols = null;\n        const rows = [];\n        const aprAvg = {};\n        const scoreAvg = {};\n\n        const lastRow = rates[rates.length-1];\n\n        rates.forEach( r => {\n          if (!protocols){\n            header.push('Token');\n            header.push('Date');\n\n            // Get protocols\n            protocols = [];\n            lastRow.protocolsData.forEach( p1 => {\n              const foundProtocol = tokenConfig.protocols.find( p2 => ( p2.address.toLowerCase() === p1.protocolAddr.toLowerCase() ) );\n              if (foundProtocol){\n                protocols.push(foundProtocol);\n              }\n            });\n\n            // Add APR columns\n            header.push('APR Idle');\n            header.push('SCORE Idle');\n\n            aprAvg['idle'] = [];\n            scoreAvg['idle'] = [];\n\n            protocols.forEach( p => {\n              header.push('APR '+p.name);\n              header.push('SCORE '+p.name);\n\n              aprAvg[p.name] = [];\n              scoreAvg[p.name] = [];\n            });\n\n            rows.push(header.join(','));\n          }\n\n          const date = moment(r.timestamp*1000).format('YYYY-MM-DD');\n          const rate = this.BNify(r.idleRate).div(1e18).toFixed(5);\n          const score = parseFloat(r.idleScore);\n\n          const row = [];\n          row.push(`${token}-${strategy}`);\n          row.push(date);\n          row.push(rate);\n          row.push(score);\n\n          if (date>='2020-09-15'/* && date<='2020-11-09'*/){\n            aprAvg['idle'].push(parseFloat(rate));\n            scoreAvg['idle'].push(parseFloat(score));\n          }\n\n          protocols.forEach( pInfo => {\n            const pData = r.protocolsData.find( p => (p.protocolAddr.toLowerCase() === pInfo.address.toLowerCase()) );\n            let pRate = '';\n            let pScore = '';\n            if (pData){\n              pScore = !this.BNify(pData.defiScore).isNaN() ? parseFloat(pData.defiScore) : '0.00000';\n              pRate = !this.BNify(pData.rate).isNaN() ? this.BNify(pData.rate).div(1e18) : '0.00000';\n              if (typeof pData[`${pInfo.name}AdditionalAPR`] !== 'undefined'){\n                const additionalRate = this.BNify(pData[`${pInfo.name}AdditionalAPR`]).div(1e18);\n                if (!additionalRate.isNaN()){\n                  pRate = pRate.plus(additionalRate);\n                }\n              }\n\n              if (date>='2020-09-15'/* && date<='2020-11-09'*/){\n                if (!isNaN(parseFloat(pRate))){\n                  aprAvg[pInfo.name].push(parseFloat(pRate));\n                }\n                if (!isNaN(parseFloat(pScore))){\n                  scoreAvg[pInfo.name].push(parseFloat(pScore));\n                }\n              }\n            }\n\n            row.push(pRate);\n            row.push(pScore);\n          });\n\n          rows.push(row.join(','));\n        });\n\n        Object.keys(aprAvg).forEach( p => {\n          const avgRate = aprAvg[p].sum()/aprAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Rate: ${avgRate}`);\n        });\n\n        Object.keys(scoreAvg).forEach( p => {\n          const avgScore = scoreAvg[p].sum()/scoreAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Score: ${avgScore}`);\n        });\n\n        // if (token==='DAI' && isRisk){\n        //   debugger;\n        // }\n\n        csv.push(rows.join('\\n'));\n      });\n    });\n\n    this.customLog(csv.join('\\n'));\n  }\n  getGovTokenPool = async (govToken=null,availableTokens=null,convertToken=null) => {\n    let output = this.BNify(0);\n\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const enabledTokens = govToken ? [govToken] : null;\n      const compTokenBalance = await this.getGovTokensBalances(tokenConfig.idle.address,convertToken,enabledTokens);\n      if (compTokenBalance && compTokenBalance.total){\n        output = output.plus(compTokenBalance.total);\n      }\n    });\n    return output;\n  }\n  getIdleGovToken = () => {\n    if (!this.idleGovToken){\n      this.idleGovToken = new IdleGovToken(this.props);\n    } else {\n      this.idleGovToken.setProps(this.props);\n    }\n    return this.idleGovToken;\n  }\n  getGovTokensFarming = () => {\n    const output = {};\n    const availableTokens = this.props.availableTokens;\n\n    Object.keys(availableTokens).forEach( token => {\n      const tokenGovTokens = this.getTokenGovTokens(availableTokens[token]);\n      Object.keys(tokenGovTokens).forEach( govToken => {\n        output[govToken] = tokenGovTokens[govToken];\n      });\n    });\n\n    return output;\n  }\n  getTokenGovTokens = (tokenConfig) => {\n    const output = {};\n    const currentNetworkId = this.getRequiredNetworkId();\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    Object.keys(govTokens).forEach( govToken => {\n      const govTokenConfig = govTokens[govToken];\n      const disabledTokens = this.getArrayPath(['disabledTokens',currentNetworkId],govTokenConfig) || [];\n      if (!govTokenConfig.enabled || disabledTokens.includes(tokenConfig.idle.token) || (govTokenConfig.availableNetworks && !govTokenConfig.availableNetworks.includes(currentNetworkId))){\n        return;\n      }\n\n      if (govTokenConfig.protocol === 'idle'){\n        output[govToken] = govTokenConfig;\n      } else {\n        const foundProtocol = tokenConfig.protocols.find( p => (p.enabled && p.name.toLowerCase() === govTokenConfig.protocol.toLowerCase()) )\n        if (foundProtocol){\n          output[govToken] = govTokenConfig;\n        }\n      }\n    });\n    return output;\n  }\n  fixDistributionSpeed = (speed,frequency='day',mode='block') => {\n    const blocksPerYear = this.BNify(this.getGlobalConfig(['network','blocksPerYear']));\n    const secondsPerYear = this.BNify(this.getGlobalConfig(['network','secondsPerYear']));\n    const multipliers = {\n      'day':{\n        'block':blocksPerYear.div(365.242199),\n        'second':secondsPerYear.div(365.242199)\n      },\n      'week':{\n        'block':blocksPerYear.div(52.1429),\n        'second':secondsPerYear.div(52.1429)\n      },\n      'month':{\n        'block':blocksPerYear.div(12),\n        'second':secondsPerYear.div(12)\n      },\n      'year':{\n        'block':blocksPerYear.div(1),\n        'second':secondsPerYear.div(1)\n      }\n    };\n    speed = this.BNify(speed);\n    if (speed && !speed.isNaN()){\n      return speed.times(multipliers[frequency][mode]);\n    }\n    return null;\n  }\n  getGovTokensUserDistributionSpeed = async (account,tokenConfig=null,enabledTokens=null) => {\n    const govTokensUserDistribution = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      const availableTokens = {};\n      availableTokens[tokenConfig.token] = tokenConfig;\n\n      let output = null;\n      switch (govToken){\n        case 'COMP':\n          output = await this.getCompUserDistribution(account,availableTokens);\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          output = await idleGovToken.getUserDistribution(account,availableTokens);\n        break;\n        default:\n        break;\n      }\n\n      if (output){\n        output = output.div(1e18);\n        if (govTokenConfig.distributionFrequency){\n          output = this.fixDistributionSpeed(output,govTokenConfig.distributionFrequency,govTokenConfig.distributionMode);\n        }\n        govTokensUserDistribution[govToken] = output;\n      }\n    });\n\n    return govTokensUserDistribution;\n  }\n  getGovTokensDistributionSpeed = async (tokenConfig,enabledTokens=null) => {\n    const govTokensDistribution = {};\n    const tokenGovTokens = this.getTokenGovTokens(tokenConfig);\n    \n    await this.asyncForEach(Object.keys(tokenGovTokens), async (govToken) => {\n      let govSpeed = null;\n      const govTokenConfig = tokenGovTokens[govToken];\n\n      switch (govToken){\n        case 'COMP':\n          govSpeed = await this.getCompDistribution(tokenConfig,null,false);\n        break;\n        case 'WMATIC':\n        case 'stkAAVE':\n          govSpeed = await this.getStkAaveDistribution(tokenConfig,null,false);\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          govSpeed = await idleGovToken.getSpeed(tokenConfig.idle.address);\n        break;\n        default:\n        break;\n      }\n\n      if (govSpeed){\n        govSpeed = govSpeed.div(1e18);\n        if (govTokenConfig.distributionFrequency && govTokenConfig.distributionMode){\n          govSpeed = this.fixDistributionSpeed(govSpeed,govTokenConfig.distributionFrequency,govTokenConfig.distributionMode);\n        }\n        govTokensDistribution[govToken] = govSpeed;\n      }\n    });\n\n    return govTokensDistribution;\n  }\n  getGovTokensAprs = async (token,tokenConfig,enabledTokens=null) => {\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensAprs = {}\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled || govTokenConfig.aprTooltipMode === false){\n        return;\n      }\n\n      let output = null;\n      let tokenAllocation = null;\n\n      switch (govToken){\n        case 'WMATIC':\n        case 'stkAAVE':\n          switch (govTokenConfig.aprTooltipMode){\n            default:\n            case 'apr':\n              [output,tokenAllocation] = await Promise.all([\n                this.getStkAaveApr(token,tokenConfig),\n                this.getTokenAllocation(tokenConfig,false,false)\n              ]);\n\n              // Cut the AAVE token proportionally on Idle funds allocation in aave\n              if (tokenAllocation){\n                const aTokenConfig = tokenConfig.protocols.find( p => (p.name === govTokenConfig.protocol) );\n                if (aTokenConfig){\n                  if (tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()]){\n                    const aaveAllocationPerc = tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()];\n                    output = output.times(aaveAllocationPerc);\n                  }\n                }\n              }\n            break;\n          }\n        break;\n        case 'COMP':\n          switch (govTokenConfig.aprTooltipMode){\n            default:\n            case 'apr':\n              [output,tokenAllocation] = await Promise.all([\n                this.getCompAPR(token,tokenConfig),\n                this.getTokenAllocation(tokenConfig,false,false)\n              ]);\n\n              // Cut the COMP token proportionally on Idle funds allocation in compound\n              if (tokenAllocation){\n                const cTokenConfig = tokenConfig.protocols.find( p => (p.name === 'compound') );\n                if (cTokenConfig){\n                  if (tokenAllocation.protocolsAllocationsPerc[cTokenConfig.address.toLowerCase()]){\n                    const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenConfig.address.toLowerCase()];\n                    output = output.times(compoundAllocationPerc);\n                  }\n                }\n              }\n            break;\n          }\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          switch (govTokenConfig.aprTooltipMode){\n            case 'apr':\n              output = await idleGovToken.getAPR(token,tokenConfig);\n            break;\n            case 'distribution':\n              output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n              if (output){\n                output = this.fixTokenDecimals(output,18);\n                output = this.fixDistributionSpeed(output,govTokenConfig.distributionFrequency,govTokenConfig.distributionMode);\n              }\n            break;\n            case 'userDistribution':\n              output = await idleGovToken.getUserDistribution(tokenConfig);\n            break;\n            default:\n            break;\n          }\n        break;\n        default:\n        break;\n      }\n\n      if (output !== null && this.BNify(output).gt(0)){\n        govTokensAprs[govToken] = output;\n      }\n    });\n\n    return govTokensAprs;\n  }\n  getGovTokensBalances = async (address=null,convertToken='DAI',enabledTokens=null) => {\n    if (!address){\n      address = this.props.tokenConfig.idle.address;\n    }\n\n    const cachedDataKey = `getGovTokensBalances_${address}_${convertToken}_${JSON.stringify(enabledTokens)}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null){\n      return cachedData;\n    }\n\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensBalances = {}\n\n    await this.asyncForEach(Object.keys(govTokens),async (token) => {\n\n      if (enabledTokens && !enabledTokens.includes(token)){\n        return;\n      }\n      \n      const govTokenConfig = govTokens[token];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      const destTokenConfig = {\n        address:govTokenConfig.addressForPrice || govTokenConfig.address\n      };\n\n      // Get gov token balance\n      let govTokenBalance = await this.getProtocolBalance(token,address);\n\n      if (govTokenBalance){\n        // Get gov token conversion rate\n        let tokenConversionRate = null;\n        if (convertToken){\n          const fromTokenConfig = this.getGlobalConfig(['stats','tokens',convertToken]);\n          try {\n            tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig,destTokenConfig);\n          } catch (error) {\n            tokenConversionRate = this.BNify(0);\n          }\n        }\n\n        const tokenBalance = this.fixTokenDecimals(govTokenBalance,govTokens[token].decimals,tokenConversionRate);\n\n        // Fix token decimals and convert\n        govTokensBalances[token] = tokenBalance;\n\n        // Initialize Total gov Tokens\n        if (!govTokensBalances.total){\n          govTokensBalances.total = this.BNify(0);\n        }\n\n        // Sum Total gov Tokens\n        govTokensBalances.total = govTokensBalances.total.plus(govTokensBalances[token]);\n      }\n    });\n\n    return this.setCachedData(cachedDataKey,govTokensBalances);\n  }\n  getGovTokenConfigByAddress = (address) => {\n    if (!address){\n      return false;\n    }\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    return Object.values(govTokens).find( tokenConfig => (tokenConfig.enabled && tokenConfig.address.toLowerCase() === address.toLowerCase()) );\n  }\n  getGovTokensUserTotalBalance = async (account=null,availableTokens=null,convertToken=null,checkShowBalance=true) => {\n\n    // Check for cached data\n    const cachedDataKey = `govTokensUserTotalBalance_${account}_${availableTokens ? JSON.stringify(Object.keys(availableTokens)) : 'null'}_${convertToken}_${checkShowBalance}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account,availableTokens,convertToken,null,checkShowBalance);\n    if (govTokensUserBalances){\n      const govTokensEarnings = Object.values(govTokensUserBalances).reduce( (acc, govTokenAmount) => {\n        acc = acc.plus(this.BNify(govTokenAmount));\n        return acc;\n      }, this.BNify(0));\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey,govTokensEarnings);\n    }\n    return this.BNify(0);\n  }\n  getGovTokensIndexes = async (account,tokenConfig) => {\n    if (!account){\n      account = this.props.account;\n    }\n    const output = {};\n    const govTokensAmounts = await this.getGovTokensUserAmounts(tokenConfig.idle.token,account);\n    if (govTokensAmounts){\n      await this.asyncForEach(govTokensAmounts, async (govTokenAmount,govTokenIndex) => {\n        // Get gov Token config by index\n        const govTokenAddress = await this.getGovTokenAddessByIndex(tokenConfig.idle.token,govTokenIndex);\n\n        if (govTokenAddress){\n          const govTokenConfig = this.getGovTokenConfigByAddress(govTokenAddress);\n          if (govTokenConfig){\n            output[govTokenConfig.token] = govTokenIndex;\n          }\n        }\n      });\n    }\n\n    return output;\n  }\n  getGovTokenAddessByIndex = async (token,govTokenIndex) => {\n    const cachedDataKey = `govTokenAddressByIndex_${token}_${govTokenIndex}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    // console.log(cachedDataKey,cachedData);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const govTokenAddress = await this.genericContractCall(token,'govTokens',[govTokenIndex]);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,govTokenAddress,null);\n  }\n  getGovTokensUserAmounts = async (token,account) => {\n    const cachedDataKey = `govTokenUserAmount_${token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const govTokenAddress = await this.genericContractCall(token,'getGovTokensAmounts',[account]);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,govTokenAddress);\n  }\n  getGovTokensUserBalances = async (account=null,availableTokens=null,convertToken=null,govTokenConfigForced=null,checkShowBalance=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.availableStrategies && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    const output = {};\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const idleTokenConfig = availableTokens[token].idle;\n\n      // Get govTokens amounts\n      const govTokensAmounts = await this.getGovTokensUserAmounts(idleTokenConfig.token,account);\n\n      // console.log('getGovTokensUserBalances_1',idleTokenConfig.token,govTokensAmounts);\n\n      if (govTokensAmounts){\n        await this.asyncForEach(govTokensAmounts, async (govTokenAmount,govTokenIndex) => {\n          govTokenAmount = this.BNify(govTokenAmount);\n          // Get gov Token config by index\n          const govTokenAddress = await this.getGovTokenAddessByIndex(idleTokenConfig.token,govTokenIndex);\n\n          // console.log('getGovTokensUserBalances_2',idleTokenConfig.token,govTokenIndex,govTokenAddress);\n\n          if (govTokenAddress){\n            const govTokenConfig = govTokenConfigForced ? govTokenConfigForced : this.getGovTokenConfigByAddress(govTokenAddress);\n\n            if (govTokenConfig && (!checkShowBalance || govTokenConfig.showBalance) && govTokenConfig.address && govTokenConfig.address.toLowerCase() === govTokenAddress.toLowerCase()){\n\n              // Get gov token conversion rate\n              let tokenConversionRate = null;\n              if (convertToken){\n                const fromTokenConfig = this.getGlobalConfig(['stats','tokens',convertToken]);\n                if (fromTokenConfig){\n                  try {\n                    tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig,govTokenConfig);\n                  } catch (error) {\n                    \n                  }\n                }\n              }\n\n              govTokenAmount = this.fixTokenDecimals(govTokenAmount,govTokenConfig.decimals,tokenConversionRate);\n\n              // console.log('getGovTokensUserBalances',idleTokenConfig.token,govTokenIndex,govTokenConfig.token,govTokenAddress,parseFloat(tokenConversionRate),parseFloat(govTokenAmount));\n\n              // Initialize govToken balance\n              if (!output[govTokenConfig.token]){\n                output[govTokenConfig.token] = this.BNify(0); // this.BNify(1) for testing\n              }\n\n              // Add govTokens balance\n              output[govTokenConfig.token] = output[govTokenConfig.token].plus(govTokenAmount);\n            }\n          }\n        });\n      }\n    });\n\n    return output;\n  }\n  getTokenFees = async (tokenConfig=null) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    const fee = await this.genericContractCallCached(tokenConfig.idle.token, 'fee', [], {}, 'latest', null);\n    if (fee){\n      return this.BNify(fee).div(this.BNify(100000));\n    }\n    return null;\n  }\n  getUserTokenFees = async (tokenConfig=null,account=null) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account || !tokenConfig){\n      return null;\n    }\n\n    let [\n      feePercentage,\n      amountLent,\n      redeemableBalance\n    ] = await Promise.all([\n      this.getTokenFees(tokenConfig),\n      this.loadAssetField('amountLent',tokenConfig.token,tokenConfig,account),\n      this.loadAssetField('redeemableBalance',tokenConfig.token,tokenConfig,account)\n    ]);\n\n    if (feePercentage && amountLent && redeemableBalance){\n      const gain = redeemableBalance.minus(amountLent);\n      const fees = gain.times(feePercentage);\n\n      // this.customLog('fees',tokenConfig.token,amountLent.toString(),redeemableBalance.toString(),gain.toString(),fees.toString());\n\n      return fees;\n    }\n\n    return null;\n  }\n  getGovTokenUserBalance = async (govTokenConfig,account=null,availableTokens=null,convertToken=null) => {\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account,availableTokens,convertToken,govTokenConfig);\n    return govTokensUserBalances && govTokensUserBalances[govTokenConfig.token] ? govTokensUserBalances[govTokenConfig.token] : this.BNify(0);\n  }\n  getTotalTVL = async () => {\n    const tokensTVL = await this.getTokensTVL();\n    return Object.values(tokensTVL).reduce( (totalTVL,tokenInfo) => {\n      const tokenTVL = this.BNify(tokenInfo.totalTVL);\n      if (tokenTVL && !tokenTVL.isNaN()){\n        totalTVL = totalTVL.plus(tokenTVL);\n      }\n      return totalTVL;\n    },this.BNify(0));\n  }\n  getTokensTVL = async () => {\n    const output = {};\n    const DAITokenConfig = {\n      address:this.getContractByName('DAI')._address\n    };\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n\n        let tokenTVL = this.BNify(0);\n        let totalTVL = this.BNify(0);\n        let oldTokenTVL = this.BNify(0);\n        const tokenConfig = availableTokens[token];\n        const idleTokenName = tokenConfig.idle.token;\n\n        output[idleTokenName] = {\n          tokenTVL,\n          totalTVL,\n          oldTokenTVL,\n          govTokens:{},\n        };\n\n        const [\n          tokenPrice,\n          totalSupply\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getIdleTokenSupply(idleTokenName)\n        ]);\n\n        tokenTVL = this.fixTokenDecimals(totalSupply,18).times(tokenPrice);\n        tokenTVL = await this.convertTokenBalance(tokenTVL,token,tokenConfig,isRisk);\n\n        output[idleTokenName].tokenTVL = tokenTVL;\n        totalTVL = totalTVL.plus(tokenTVL);\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens){\n          await this.asyncForEach(Object.keys(govTokens).filter( govToken => (govTokens[govToken].showAUM) ), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              govTokenBalance,\n              govTokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken,tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig,govTokenConfig)\n            ]);\n            \n            if (govTokenBalance && govTokenConversionRate){\n              const govTokenBalanceConverted = this.fixTokenDecimals(govTokenBalance,govTokenConfig.decimals).times(this.BNify(govTokenConversionRate));\n              if (govTokenBalanceConverted && !govTokenBalanceConverted.isNaN()){\n                totalTVL = totalTVL.plus(govTokenBalanceConverted);\n                output[idleTokenName].govTokens[govToken] = govTokenBalanceConverted;\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract){\n          const oldTokenConfig = Object.assign({},tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({},tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols){\n            oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n              if (foundProtocol){\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const [\n            oldTokenPrice,\n            oldTotalSupply\n          ] = await Promise.all([\n            this.getIdleTokenPrice(oldTokenConfig),\n            this.getIdleTokenSupply(oldTokenConfig.idle.name)\n          ]);\n\n          if (oldTokenPrice && oldTotalSupply){\n            oldTokenTVL = this.fixTokenDecimals(oldTotalSupply,18).times(oldTokenPrice);\n            oldTokenTVL = await this.convertTokenBalance(oldTokenTVL,token,oldTokenConfig,isRisk);\n            if (oldTokenTVL && !oldTokenTVL.isNaN()){\n              output[idleTokenName].oldTokenTVL = oldTokenTVL;\n              totalTVL = totalTVL.plus(oldTokenTVL);\n            }\n          }\n        }\n\n        output[idleTokenName].totalTVL = totalTVL;\n      });\n    });\n\n    return output;\n  }\n  getSubstackLatestFeed = async () => {\n    const cachedDataKey = `substackLatestFeed`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const networkId = this.getRequiredNetworkId();\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpointInfo = this.getGlobalConfig(['stats','substack']);\n    const idleSubstackFeed = await this.makeRequest(endpointInfo.endpoint[networkId],false,config);\n\n    if (idleSubstackFeed && idleSubstackFeed.data && idleSubstackFeed.data.items && idleSubstackFeed.data.items.length>0){\n      const latestFeed = idleSubstackFeed.data.items[0];\n      return this.setCachedDataWithLocalStorage(cachedDataKey,latestFeed,endpointInfo.TTL);\n    }\n\n    return null;\n  }\n  getAvailableTokenAddress = (token,strategy) => {\n    const networkId = this.getRequiredNetworkId();\n    const tokenConfig = this.getArrayPath([networkId,strategy,token],availableTokens);\n    return tokenConfig ? tokenConfig.address : null;\n  }\n  getAggregatedStats = async (addGovTokens=true,allNetworks=false) => {\n    const networkId = this.getRequiredNetworkId();\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpointInfo = this.getGlobalConfig(['stats','tvls']);\n    let networkIds = [networkId];\n    if (allNetworks){\n      networkIds = Object.keys(endpointInfo.endpoint);\n    }\n\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n\n    await this.asyncForEach(networkIds, async (networkId) => {\n      let tvls = await this.makeCachedRequest(endpointInfo.endpoint[networkId],endpointInfo.TTL,true,false,config);\n      if (!tvls){\n        tvls = await this.getAggregatedStats_chain();\n      }\n\n      if (tvls){\n        avgAPY = avgAPY.plus(this.BNify(tvls.avgAPY).times(this.BNify(tvls.totalTVL)));\n        totalAUM = totalAUM.plus(this.BNify(tvls.totalTVL));\n      }\n    });\n\n    avgAPY = avgAPY.div(totalAUM);\n\n    return {\n      avgAPY,\n      totalAUM\n    };\n  }\n  getAggregatedStats_chain = async (addGovTokens=true) => {\n\n    // Check for cached data\n    const cachedDataKey = `getAggregatedStats_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && (cachedData.avgAPR && !this.BNify(cachedData.avgAPR).isNaN()) && (cachedData.avgAPY && !this.BNify(cachedData.avgAPY).isNaN()) && (cachedData.totalAUM && !this.BNify(cachedData.totalAUM).isNaN())){\n      return {\n        avgAPR:this.BNify(cachedData.avgAPR),\n        avgAPY:this.BNify(cachedData.avgAPY),\n        totalAUM:this.BNify(cachedData.totalAUM)\n      };\n    }\n\n    let avgAPR = this.BNify(0);\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n    const DAITokenConfig = {\n      address:this.getContractByName('DAI')._address\n    };\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,addGovTokens);\n        const tokenAprs = await this.getTokenAprs(tokenConfig,tokenAllocation,addGovTokens);\n        if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent && !tokenAllocation.totalAllocationWithUnlent.isNaN()){\n          const tokenAUM = await this.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig,isRisk);\n          totalAUM = totalAUM.plus(tokenAUM);\n          // console.log(tokenConfig.idle.token+'V4',tokenAUM.toFixed());\n          if (tokenAprs && tokenAprs.avgApr && !tokenAprs.avgApr.isNaN()){\n            avgAPR = avgAPR.plus(tokenAUM.times(tokenAprs.avgApr));\n            avgAPY = avgAPY.plus(tokenAUM.times(tokenAprs.avgApy));\n          }\n        }\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens){\n          await this.asyncForEach(Object.keys(govTokens).filter( govToken => (govTokens[govToken].showAUM) ), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              tokenBalance,\n              tokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken,tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig,govTokenConfig)\n            ]);\n            \n            if (tokenBalance && tokenConversionRate){\n              const tokenBalanceConverted = this.fixTokenDecimals(tokenBalance,govTokenConfig.decimals).times(this.BNify(tokenConversionRate));\n              if (tokenBalanceConverted && !tokenBalanceConverted.isNaN()){\n                // console.log(tokenConfig.idle.token+'V4 - COMP',tokenBalanceConverted.toFixed());\n                totalAUM = totalAUM.plus(tokenBalanceConverted);\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract){\n          const oldTokenConfig = Object.assign({},tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({},tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols){\n            oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n              if (foundProtocol){\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const oldTokenAllocation = await this.getTokenAllocation(oldTokenConfig,false,false);\n          if (oldTokenAllocation && oldTokenAllocation.totalAllocation && !oldTokenAllocation.totalAllocation.isNaN()){\n            const oldTokenTotalAllocation = await this.convertTokenBalance(oldTokenAllocation.totalAllocation,token,oldTokenConfig,isRisk);\n            totalAUM = totalAUM.plus(oldTokenTotalAllocation);\n            // console.log(oldTokenConfig.idle.name,oldTokenTotalAllocation.toFixed(5));\n          }\n        }\n      });\n    });\n\n    avgAPR = avgAPR.div(totalAUM);\n    avgAPY = avgAPY.div(totalAUM);\n\n    const output = {\n      avgAPR,\n      avgAPY,\n      totalAUM\n    };\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,output);\n  }\n  getTokenApy = async (tokenConfig) => {\n    const tokenAprs = await this.getTokenAprs(tokenConfig);\n    if (tokenAprs && tokenAprs.avgApy !== null){\n      return tokenAprs.avgApy;\n    }\n    return null;\n  }\n  getTokensToMigrate = async (selectedStrategy=null) => {\n\n    if (!this.props.availableStrategies || !this.props.account){\n      return false;\n    }\n\n    const tokensToMigrate = {};\n\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      if (selectedStrategy && selectedStrategy !== strategy){\n        return;\n      }\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const {\n          migrationEnabled,\n          oldContractBalanceFormatted\n        } = await this.checkMigration(tokenConfig,this.props.account);\n        \n        if (migrationEnabled){\n          const tokenKey = selectedStrategy ? token : tokenConfig.idle.token;\n          tokensToMigrate[tokenKey] = {\n            token,\n            strategy,\n            tokenConfig,\n            oldContractBalanceFormatted\n          }\n        }\n      });\n    });\n\n    return tokensToMigrate;\n  }\n  /*\n  Get protocols tokens balances\n  */\n  getProtocolsTokensBalances = async (protocol=null) => {\n    if (!this.props.account){\n      return false;\n    }\n    const tokenBalances = {};\n    const minTokenBalance = this.BNify(1).div(1e4);\n    const protocolsTokens = this.getGlobalConfig(['tools','tokenMigration','props','availableTokens']);\n    if (protocolsTokens){\n      await this.asyncForEach(Object.keys(protocolsTokens),async (token) => {\n        const tokenConfig = protocolsTokens[token];\n        if (protocol !== null && tokenConfig.protocol.toLowerCase() !== protocol.toLowerCase() ){\n          return;\n        }\n        let tokenContract = this.getContractByName(tokenConfig.token);\n        if (!tokenContract && tokenConfig.abi){\n          tokenContract = await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n        }\n        if (tokenContract){\n          const tokenBalance = await this.getTokenBalance(tokenConfig.token,this.props.account);\n          if (tokenBalance && tokenBalance.gte(minTokenBalance)){\n            tokenBalances[token] = {\n              tokenConfig,\n              balance:tokenBalance,\n            };\n          }\n        }\n      });\n    }\n\n    return tokenBalances;\n  }\n  /*\n  Convert token Balance\n  */\n  convertTokenBalance = async (tokenBalance,token,tokenConfig,isRisk=false) => {\n    // Check for USD conversion rate\n    tokenBalance = this.BNify(tokenBalance);\n    if (tokenBalance.gt(0)){\n      const tokenUsdConversionRate = await this.getTokenConversionRate(tokenConfig,isRisk);\n      // console.log('convertTokenBalance',token,isRisk,tokenUsdConversionRate);\n      if (tokenUsdConversionRate){\n        tokenBalance = tokenBalance.times(tokenUsdConversionRate);\n      }\n    }\n    return tokenBalance;\n  }\n\n  getAvgAPYStats = async (address,isRisk,startTimestamp=null,endTimestamp=null) => {\n\n    const apiResults = await this.getTokenApiData(address,isRisk,startTimestamp,endTimestamp,true,7200);\n\n    if (apiResults && apiResults.length){\n      const apr = apiResults.reduce( (sum,r) => {\n        const idleRate = this.fixTokenDecimals(r.idleRate,18);\n        return sum.plus(idleRate);\n      },this.BNify(0));\n\n      // Calculate average\n      return apr.div(apiResults.length);\n    }\n\n    return this.BNify(0);\n  }\n\n  /*\n  Get idleToken conversion rate\n  */\n  getTokenConversionRate = async (tokenConfig,isRisk,conversionRateField=null,count=0) => {\n\n    if (!conversionRateField){\n      conversionRateField = this.getGlobalConfig(['stats','tokens',tokenConfig.token,'conversionRateField']);\n      if (!conversionRateField){\n        return null;\n      }\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenConversionRate_${tokenConfig.address}_${isRisk}_${conversionRateField}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,null,null,false,null,'desc',1);\n    if (tokenData && tokenData.length){\n      tokenData = tokenData.pop();\n      if (tokenData && !this.BNify(tokenData[conversionRateField]).isNaN()){\n        const conversionRate = this.fixTokenDecimals(tokenData[conversionRateField],18);\n        if (!this.BNify(conversionRate).isNaN()){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,conversionRate);\n        }\n      }\n    }\n\n    const DAITokenConfig = {\n      address:this.getContractByName('DAI')._address\n    };\n    const ToTokenConfig = tokenConfig.token ? this.getGlobalConfig(['stats','tokens',tokenConfig.token]) : tokenConfig;\n    const conversionRate = await this.getUniswapConversionRate(DAITokenConfig,ToTokenConfig);\n    if (!this.BNify(conversionRate).isNaN()){\n      return this.setCachedDataWithLocalStorage(cachedDataKey,conversionRate);\n    }\n\n    if (count<3){\n      return await this.getTokenConversionRate(tokenConfig,isRisk,conversionRateField,count+1); \n    }\n\n    return null;\n  }\n\n  getTokenScore = async (tokenConfig,isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScore_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const networkId = this.getRequiredNetworkId();\n    const apiInfo = this.getGlobalConfig(['stats','rates']);\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpoint = `${apiInfo.endpoint[networkId]}${tokenConfig.address}?isRisk=${isRisk}&limit=1&order=DESC`;\n    const [\n      tokenData,\n      tokenAllocation\n    ] = await Promise.all([\n      this.makeCachedRequest(endpoint,apiInfo.TTL,true,false,config),\n      this.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    let tokenScore = this.BNify(0);\n\n    if (tokenAllocation){\n      Object.keys(tokenAllocation.protocolsAllocationsPerc).forEach( protocolAddr => {\n        const protocolAllocationPerc = this.BNify(tokenAllocation.protocolsAllocationsPerc[protocolAddr]);\n        if (protocolAllocationPerc.gt(0.001)){\n          let protocolScore = null;\n\n          const protocolInfo = tokenData && tokenData.length>0 ? tokenData[0].protocolsData.find( p => (p.protocolAddr.toLowerCase() === protocolAddr.toLowerCase()) ) : null;\n          if (protocolInfo){\n            protocolScore = this.BNify(protocolInfo.defiScore);\n          }\n\n          // Take protocol score from tokenConfig\n          if (!protocolScore || this.BNify(protocolScore).isNaN() || this.BNify(protocolScore).lte(0)){\n            const protocolConfig = tokenConfig.protocols.find(p => p.address.toLowerCase() === protocolAddr.toLowerCase());\n            if (protocolConfig){\n              protocolScore = this.BNify(protocolConfig.defiScore);\n            }\n          }\n\n          if (!protocolScore.isNaN()){\n            tokenScore = tokenScore.plus(protocolScore.times(protocolAllocationPerc));\n          }\n        }\n      });\n    }\n\n    // Fallback\n    if (!tokenScore || tokenScore.isNaN() || tokenScore.lte(0)){\n      tokenScore = await this.getTokenScoreApi(tokenConfig,isRisk);\n    }\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,tokenScore);\n  }\n\n  /*\n  Get idleToken score\n  */\n  getTokenScoreApi = async (tokenConfig,isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScoreApi_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const networkId = this.getRequiredNetworkId();\n    const apiInfo = this.getGlobalConfig(['stats','scores']);\n\n    if (!apiInfo.endpoint[networkId]){\n      return this.BNify(0);\n    }\n\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpoint = `${apiInfo.endpoint[networkId]}${tokenConfig.address}?isRisk=${isRisk}`;\n    let scores = await this.makeCachedRequest(endpoint,apiInfo.TTL,true,false,config);\n\n    if (scores && scores.length>0){\n      let tokenData = scores.find( s => s.address.toLowerCase() === tokenConfig.address.toLowerCase() );\n      if (tokenData){\n        let tokenScore = this.BNify(tokenData.idleScore);\n        if (tokenScore && tokenScore.gt(0)){\n          // Set cached data\n          return this.setCachedData(cachedDataKey,tokenScore);\n        // Take latest historical valid score\n        } else {\n          const timestamp = parseInt(Date.now()/1000);\n          const startTimestamp = parseInt(timestamp)-(60*60*24);\n          tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,startTimestamp,null,true,null,'DESC');\n\n          const filteredTokenData = tokenData.filter( d => (this.BNify(d.idleScore).gt(0)) );\n          if (filteredTokenData.length){\n            tokenScore = this.BNify(filteredTokenData[0].idleScore);\n            if (!this.BNify(tokenScore).isNaN()){\n              return this.setCachedDataWithLocalStorage(cachedDataKey,tokenScore);\n            }\n          }\n        }\n      }\n    }\n\n    return this.BNify(0);\n  }\n  /*\n  Get idleTokens aggregated APR\n  */\n  getTokenAprs = async (tokenConfig,tokenAllocation=false,addGovTokens=true) => {\n\n    const tokenAprs = {\n      avgApr: this.BNify(0),\n      avgApy: this.BNify(0)\n    };\n\n    if (!tokenConfig.idle){\n      return tokenAprs;\n    }\n\n    const networkId = this.getRequiredNetworkId();\n\n    // Check for cached data\n    const cachedDataKey = `tokenAprs_${networkId}_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n\n    // console.log('getTokenAprs-1',tokenConfig.idle.token,networkId,cachedDataKey,cachedData);\n\n    if (cachedData && (cachedData.avgApr && this.BNify(cachedData.avgApr).gt(0)) && (cachedData.avgApy && this.BNify(cachedData.avgApy).gt(0)) ){\n      return {\n        avgApr:this.BNify(cachedData.avgApr),\n        avgApy:this.BNify(cachedData.avgApy)\n      };\n    }\n\n    tokenAprs.avgApr = await this.genericContractCall(tokenConfig.idle.token,'getAvgAPR');\n    if (tokenAprs.avgApr){\n      tokenAprs.avgApr = this.fixTokenDecimals(tokenAprs.avgApr,18);\n    }\n\n    // console.log('getTokenAprs-2',tokenConfig.idle.token,networkId,this.getContractByName(tokenConfig.idle.token)._address,tokenAprs);\n\n    if (tokenAprs.avgApr){\n\n      tokenAprs.avgApy = this.apr2apy(tokenAprs.avgApr.div(100)).times(100);\n\n      // Add $IDLE token APR\n      const idleGovTokenShowAPR = this.getGlobalConfig(['govTokens','IDLE','showAPR']);\n      const idleGovTokenEnabled = this.getGlobalConfig(['govTokens','IDLE','enabled']);\n      if (idleGovTokenEnabled && idleGovTokenShowAPR){\n        const idleGovToken = this.getIdleGovToken();\n        const idleAPR = await idleGovToken.getAPR(tokenConfig.token,tokenConfig);\n        if (idleAPR){\n          tokenAprs.avgApr = tokenAprs.avgApr.plus(idleAPR);\n          tokenAprs.avgApy = tokenAprs.avgApy.plus(idleAPR);\n        }\n      }\n\n      // console.log('getTokenAprs-3',tokenConfig.idle.token,networkId,tokenAprs.avgApr.toFixed(8),tokenAprs.avgApy.toFixed(8));\n\n      if (this.BNify(tokenAprs.avgApy).isNaN()){\n        tokenAprs.avgApy = this.BNify(0);\n      }\n      if (this.BNify(tokenAprs.avgApr).isNaN()){\n        tokenAprs.avgApr = this.BNify(0);\n      }\n\n      // console.log('Aprs for '+tokenConfig.idle.token+' loaded in '+((Date.now()-start)/1000).toFixed(2)+'s');\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey,tokenAprs);\n    }\n\n    return tokenAprs;\n  }\n  abbreviateNumber = (value,decimals=3,maxPrecision=5,minPrecision=0) => {\n\n    const isNegative = parseFloat(value)<0;\n    let newValue = this.BNify(value).abs();\n    const suffixes = [\"\", \"K\", \"M\", \"B\",\"T\"];\n    let suffixNum = 0;\n    while (newValue.gte(1000)) {\n      newValue = newValue.div(1000);\n      suffixNum++;\n    }\n\n    maxPrecision = Math.max(1,maxPrecision);\n\n    // Prevent decimals on integer number\n    if (value>=1000){\n      const decimalPart = decimals ? newValue.mod(1).toFixed(maxPrecision).substr(2,decimals) : null;\n      newValue = parseInt(newValue).toString()+( decimalPart ? '.'+decimalPart : '' );\n    } else {\n      newValue = newValue.toFixed(decimals);\n    }\n\n    // Adjust number precision\n    if (newValue>=1 && (newValue.length-1)>maxPrecision){\n      newValue = parseFloat(newValue).toPrecision(maxPrecision);\n    } else if ((newValue.length-1)<minPrecision) {\n      const difference = minPrecision-(newValue.length-1);\n      const append = this.BNify(value).abs().toString().replace('.','').substr((newValue.length-1),difference);\n      newValue += append;\n    }\n\n    // Add minus if number is negative\n    if (isNegative){\n      newValue = '-'+newValue;\n    }\n\n    newValue += suffixes[suffixNum];\n\n    return newValue;\n  }\n  getFormattedBalance(balance,label,decimals,maxLen,highlightedDecimals){\n    const defaultValue = '-';\n    decimals = !isNaN(decimals) ? decimals : 6;\n    maxLen = !isNaN(maxLen) ? maxLen : 10;\n    highlightedDecimals = !isNaN(highlightedDecimals) ? highlightedDecimals : 0;\n    balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n\n    const numLen = balance.toString().replace('.','').length;\n    if (numLen>maxLen){\n      decimals = Math.max(0,decimals-(numLen-maxLen));\n      balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n    }\n\n    const intPart = Math.floor(balance);\n    let decPart = (balance%1).toPrecision(decimals).substr(2,decimals);;\n    decPart = (decPart+(\"0\".repeat(decimals))).substr(0,decimals);\n\n    if (highlightedDecimals){\n      const highlightedDec = decPart.substr(0,highlightedDecimals);\n      decPart = decPart.substr(highlightedDecimals);\n      const highlightedIntPart = (<Text.span fontSize={'100%'} color={'blue'} fontWeight={'inerith'}>{intPart}.{highlightedDec}</Text.span>);\n      return !isNaN(this.trimEth(balance)) ? ( <>{highlightedIntPart}<small style={{fontSize:'70%'}}>{decPart}</small> <Text.span fontSize={[1,2]}>{label}</Text.span></> ) : defaultValue;\n    } else {\n      return !isNaN(this.trimEth(balance)) ? ( <>{intPart}<small>.{decPart}</small>{ label !== '%' ? ' ' : null }{ label ? <Text.span fontSize={[1,2]}>{label}</Text.span> : null }</> ) : defaultValue;\n    }\n  }\n};\n\nexport default FunctionsUtil;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"defaultOpacity\":\"DashboardCard_defaultOpacity__1B1rs\",\"hidden\":\"DashboardCard_hidden__8pO5t\",\"interactive\":\"DashboardCard_interactive__2adxr\",\"rainbow\":\"DashboardCard_rainbow__3HCI7\",\"disabled\":\"DashboardCard_disabled__uqHO2\"};","import React, { Component } from 'react';\nimport styles from './DashboardCard.module.scss';\nimport { Flex, Icon, Heading, Card, Tooltip } from \"rimble-ui\";\n\nclass DashboardCard extends Component {\n\n  state = {\n    mouseOver:false\n  }\n\n  setMouseOver(mouseOver){\n    this.setState({\n      mouseOver\n    });\n  }\n\n  render() {\n    const isDisabled = this.props.isDisabled;\n    const isActive = this.props.isActive && !isDisabled;\n    const isInteractive = this.props.isInteractive && !isDisabled;\n    const isVisible = typeof this.props.isVisible !== 'undefined' ? this.props.isVisible : true;\n    const isRainbow = typeof this.props.isRainbow !== 'undefined' ? this.props.isRainbow : false;\n\n    const cardProps = {\n      p:0,\n      border:1,\n      boxShadow:1,\n      borderRadius:2,\n      borderColor:null,\n      position:'relative',\n      minHeight:'initial',\n      backgroundColor:'cardBg'\n    };\n\n    if (isActive || (isInteractive && this.state.mouseOver)){\n      cardProps.border = 2;\n      cardProps.boxShadow = null;\n      cardProps.backgroundColor = 'cardBgHover';\n    }\n\n    // Replace props\n    if (this.props.cardProps && Object.keys(this.props.cardProps).length){\n      Object.keys(this.props.cardProps).forEach(p => {\n        cardProps[p] = this.props.cardProps[p];\n      });\n    }\n\n    const className = [\n      styles.defaultOpacity,\n      isActive ? styles.active : null,\n      !isVisible ? styles.hidden : null,\n      isRainbow ? styles.rainbow : null,\n      isDisabled ? styles.disabled : null,\n      isInteractive ? styles.interactive : null,\n    ];\n\n    if (this.props.className && styles[this.props.className]){\n      className.push(styles[this.props.className]);\n    }\n\n    return (\n      <Card\n        {...cardProps}\n        className={className}\n        onClick={this.props.handleClick}\n        onMouseOut={(e) => this.setMouseOver(false)}\n        onMouseOver={(e) => this.setMouseOver(true)}\n      >\n        {\n          this.props.title && this.props.title.length>0 &&\n            <Flex\n              mt={[3,4]}\n              ml={[3,4]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              {...this.props.titleParentProps}\n            >\n              <Heading.h4\n                fontWeight={4}\n                fontSize={[2,3]}\n                textAlign={'left'}\n                color={'dark-gray'}\n                lineHeight={'initial'}\n                {...this.props.titleProps}\n              >\n                {this.props.title}\n              </Heading.h4>\n              {\n                this.props.description && this.props.description.length>0 &&\n                  <Tooltip\n                    placement={'top'}\n                    message={this.props.description}\n                  >\n                    <Icon\n                      ml={2}\n                      name={\"Info\"}\n                      size={'1em'}\n                      color={'cellTitle'}\n                    />\n                  </Tooltip>\n              }\n            </Flex>\n        }\n        {this.props.children}\n      </Card>\n    );\n  }\n}\n\nexport default DashboardCard;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TableRow extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const FieldComponent = this.props.fieldComponent;\n    const isInteractive = typeof this.props.handleClick === 'function';\n    return (\n      <DashboardCard\n        cardProps={{\n          mb:2,\n          width:1,\n          px:[2,4],\n          py:[2,'12px']\n        }}\n        id={this.props.cardId}\n        {...this.props.rowProps}\n        className={this.props.token}\n        isInteractive={isInteractive}\n        handleClick={ isInteractive ? e => this.props.handleClick(this.props) : null }\n      >\n        <Flex\n          flexDirection={'row'}\n          id={this.props.rowId}\n        >\n          {\n            this.props.cols.map((colInfo,colIndex) => {\n              const visibleOnDesktop = colInfo.visibleOnDesktop || false;\n              if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile) || (colInfo.mobile === true && !visibleOnDesktop && !this.props.isMobile)){\n                return null;\n              }\n              return (\n                <Flex\n                  key={`col-${colIndex}`}\n                  {...colInfo.props}\n                >\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    {...colInfo.parentProps}\n                  >\n                    {\n                      colInfo.fields.map((fieldInfo,fieldIndex) => {\n                        if (fieldInfo.visible === false || (fieldInfo.mobile === false && this.props.isMobile)){\n                          return null;\n                        }\n                        const CustomComponent = fieldInfo.fieldComponent;\n\n                        let fieldProps = fieldInfo.props;\n\n                        // Merge with funcProps\n                        if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length>0){\n                          fieldProps = this.functionsUtil.replaceArrayPropsRecursive(fieldProps,fieldInfo.funcProps,this.props);\n                        }\n\n                        return (\n                          <Flex\n                            height={'100%'}\n                            flexDirection={'column'}\n                            alignItems={'flex-start'}\n                            justifyContent={'center'}\n                            {...fieldInfo.parentProps}\n                            style={fieldInfo.style || {\n                              overflow:'hidden'\n                            }}\n                            width={colInfo.fields.length>1 ? 'auto' : 1}\n                            id={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                            key={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                          >\n                            {\n                              CustomComponent ? (\n                                <CustomComponent\n                                  {...this.props}\n                                  {...fieldProps}\n                                />\n                              ) : (\n                                <FieldComponent\n                                  {...this.props}\n                                  fieldInfo={fieldInfo}\n                                  colProps={colInfo.props}\n                                  parentId={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                                />\n                              )\n                            }\n                          </Flex>\n                        );\n                      })\n                    }\n                  </Flex>\n                </Flex>\n              )\n            })\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default TableRow;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\n\nclass TableHeader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        px={[2,4]}\n        pb={[2,3]}\n        flexDirection={'row'}\n      >\n        {\n          this.props.cols.map((colInfo,colIndex) => {\n            // Skip non-mobile columns\n            const visibleOnDesktop = colInfo.visibleOnDesktop || false;\n            if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile) || (colInfo.mobile === true && !visibleOnDesktop && !this.props.isMobile)){\n              return null;\n            }\n\n            return (colInfo.title && colInfo.title.length) ? (\n              <TableCellHeader\n                {...this.props}\n                {...colInfo.props}\n                desc={colInfo.desc}\n                title={colInfo.title}\n                key={`col-header-${colIndex}`}\n              >\n                {colInfo.title}\n              </TableCellHeader>\n            ) : (\n              <Flex key={`col-header-${colIndex}`} {...colInfo.props}></Flex>\n            )\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableHeader;\n","import { Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass FastBalanceSelector extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n\n    let cardProps = {\n      p:2,\n      width:0.23,\n      onMouseDown:this.props.onMouseDown\n    };\n\n    let textProps = {\n      fontSize:2,\n      fontWeight:3,\n      textAlign:'center',\n      color:this.props.isActive ? 'copyColor' : 'cellText'\n    }\n\n    cardProps = this.functionsUtil.replaceArrayProps(cardProps,this.props.cardProps);\n    textProps = this.functionsUtil.replaceArrayProps(textProps,this.props.textProps);\n\n    return (\n      <DashboardCard\n        isInteractive={true}\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n      >\n        <Text \n          {...textProps}\n        >\n          {this.props.percentage}%\n        </Text>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default FastBalanceSelector;","const address = '0xf5dce57282a584d2746faf1593d3121fcac444dc'; // mainnet\nconst abi = [\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"name\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x06fdde03\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"approve\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x095ea7b3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"reserveFactorMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x173b9904\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x17bfdfbc\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalSupply\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x18160ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"exchangeRateStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x182df0f5\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"src\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transferFrom\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x23b872dd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"pendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x26782247\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"decimals\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x313ce567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOfUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3af9e669\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"getCash\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3b1d21a2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setComptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x4576b5db\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalBorrows\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x47bd3718\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"comptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x5fe3b567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_reduceReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x601a0bf1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"initialExchangeRateMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x675d972c\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"accrualBlockNumber\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6c540baf\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"underlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6f307dc3\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x70a08231\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"totalBorrowsCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x73acee98\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x8f840ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"symbol\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95d89b41\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95dd9193\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"accrueInterest\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa6afed95\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transfer\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa9059cbb\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowIndex\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xaa5af0fd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"supplyRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xae9d70b0\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"seize\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb2a02ff1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setPendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb71d1a0c\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"exchangeRateCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xbd6d894d\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"getAccountSnapshot\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc37f68e2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"allowance\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdd62ed3e\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"_acceptAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xe9c714f2\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setInterestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf2b3abbd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"interestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf3fdb15a\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"admin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf851a440\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf8f9da28\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_setReserveFactor\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfca7820b\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"isCToken\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfe9c44ae\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"name\": \"underlying_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"comptroller_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"interestRateModel_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"initialExchangeRateMantissa_\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"name_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"symbol_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"decimals_\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"constructor\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"interestAccumulated\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowIndex\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"AccrueInterest\",\n    \"signature\": \"0x875352fb3fadeb8c0be7cbbe8ff761b308fa7033470cd0287f02f3436fd76cb9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"minter\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Mint\",\n    \"signature\": \"0x4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"redeemer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Redeem\",\n    \"signature\": \"0xe5b754fb1abb7f01b499791d0b820ae3b6af3424ac1c59768edb53f4ec31a929\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Borrow\",\n    \"signature\": \"0x13ed6866d4e1ee6da46f845c46d7e54120883d75c5ea9a2dacc1c4ca8984ab80\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"payer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"RepayBorrow\",\n    \"signature\": \"0x1a2a22cb034d26d1854bdc6666a5b91fe25efbbb5dcad3b0355478d6f5c362a1\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"LiquidateBorrow\",\n    \"signature\": \"0x298637f684da70674f26509b10f07ec2fbc77a335ab1e7d6215a4b2484d8bb52\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldPendingAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewPendingAdmin\",\n    \"signature\": \"0xca4f2f25d0898edd99413412fb94012f9e54ec8142f9b093e7720646a95b16a9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewAdmin\",\n    \"signature\": \"0xf9ffabca9c8276e99321725bcb43fb076a6c66a54b7f21c4e8146d8519b417dc\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldComptroller\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewComptroller\",\n    \"signature\": \"0x7ac369dbd14fa5ea3f473ed67cc9d598964a77501540ba6751eb0b3decf5870d\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldInterestRateModel\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewMarketInterestRateModel\",\n    \"signature\": \"0xedffc32e068c7c95dfd4bdfd5c4d939a084d6b11c4199eac8436ed234d72f926\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"NewReserveFactor\",\n    \"signature\": \"0xaaa68312e2ea9d50e16af5068410ab56e1a1fd06037b1a35664812c30f821460\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"admin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newTotalReserves\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"ReservesReduced\",\n    \"signature\": \"0x3bad0c59cf2f06e7314077049f48a93578cd16f5ef92329f1dab1420a99c177e\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"error\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"info\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"detail\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Failure\",\n    \"signature\": \"0x45b96fe442630264581b197e84bbada861235052c5a1aadfff9ea4e40a969aa0\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Transfer\",\n    \"signature\": \"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Approval\",\n    \"signature\": \"0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\",\n    \"type\": \"event\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"mint\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa0712d68\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeem\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdb006a75\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeemUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x852a12e3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"borrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc5ebeaec\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x0e752702\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrowBehalf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x2608f818\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"liquidateBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf5e3c462\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }\n];\nexport default { address, abi };\n","const address = '0x5592EC0cfb4dbc12D3aB100b257153436a1f0FEa'; // rinkeby\nconst abi = [{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"stop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"name_\",\"type\":\"bytes32\"}],\"name\":\"setName\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stopped\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"authority_\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"push\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"move\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"start\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"pull\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"symbol_\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"LogSetAuthority\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"LogSetOwner\",\"type\":\"event\"},{\"anonymous\":true,\"inputs\":[{\"indexed\":true,\"name\":\"sig\",\"type\":\"bytes4\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"foo\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"bar\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"fax\",\"type\":\"bytes\"}],\"name\":\"LogNote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}];\nexport default { address, abi };\n","import DAI from '../abis/tokens/DAI.json';\nimport CHAI from '../abis/chai/CHAI.json';\nimport cToken from '../abis/compound/cDAI';\nimport WETH from '../abis/tokens/WETH.json';\nimport USDC from '../abis/tokens/USDC.json';\nimport ERC20 from '../abis/tokens/ERC20.js';\nimport fToken from '../abis/fuse/fToken.json';\nimport aToken from '../abis/aave/AToken.json';\nimport yToken from '../abis/dydx/yToken.json';\nimport iToken from '../abis/fulcrum/iToken.json';\nimport crToken from '../abis/cream/crToken.json';\nimport IdleTokenV3 from '../contracts/IdleTokenV3.json';\nimport IdleTokenV4 from '../contracts/IdleTokenV4.json';\nimport IdleConverterPersonalSignV4 from '../contracts/IdleConverterPersonalSignV4.json';\n\nconst availableTokens = {\n  // Goerli\n  5:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x001B3B4d0F3714Ca98ba10F6042DaEbF0B1B7b6F',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x45a3598Ac8aDb2c6233979f710DC6a3D006238E0',\n        },\n        protocols:[\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            token:'amDAI',\n            address:'0x639cB7b21ee2161DF9c882483C9D55c90c20Ca3e',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n    },\n    risk:{\n\n    }\n  },\n  80001:{ // Mumbai-Testnet\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x001B3B4d0F3714Ca98ba10F6042DaEbF0B1B7b6F',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x45a3598Ac8aDb2c6233979f710DC6a3D006238E0',\n        },\n        protocols:[\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            token:'amDAI',\n            address:'0x639cB7b21ee2161DF9c882483C9D55c90c20Ca3e',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      /*\n      USDC:{\n        abi:USDC,\n        token:'USDC',\n        decimals:6,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xb7a4f3e9097c08da09517b5ab877f7a917224ede',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        ramp:{\n          swapAsset:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x0de23D3bc385a74E2196cfE827C8a640B8774B9f',\n        },\n        protocols:[\n          {\n            decimals:16,\n            enabled:true,\n            token:'cUSDC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4a92e71227d294f041bd82dd8f78591b75140d63',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n      */\n    },\n    risk:{\n      \n    }\n  },\n  137:{ // Matic Mainnet\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x8f3Cf7ad23Cd3CaDbD9735AFf958023239c6A063',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x8a999F5A3546F8243205b2c0eCb0627cC10003ab',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            name:'cream',\n            enabled:true,\n            token:'crDAI',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x4eCEDdF62277eD78623f9A94995c680f8fd6C00e',\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            token:'amDAI',\n            address:'0x27F8D03b3a2196956ED754baDc28D73be8830A6e',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        ramp:{\n          swapAsset:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x1ee6470CD75D5686d0b2b90C0305Fa46fb0C89A1',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:16,\n            name:'cream',\n            enabled:true,\n            token:'crUSDC',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x73CF8c5D14Aa0EbC89f18272A568319F5BAB6cBD',\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            token:'amUSDC',\n            address:'0x1a13F4Ca1d028320A707D99520AbFefca3998b7F',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      WETH:{\n        abi:WETH,\n        token:'WETH',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WETH'\n        },\n        ramp:{\n          swapAsset:'WETH'\n        },\n        defiPrime:{\n          token:'weth'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWETHYield',\n          address:'0xfdA25D931258Df948ffecb66b5518299Df6527C4',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            name:'cream',\n            enabled:true,\n            token:'crWETH',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x7ef18d0a9C3Fb1A716FF6c3ED0Edf52a2427F716',\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            enabled:true,\n            token:'aWETH',\n            name:'aavev2',\n            address:'0x28424507fefb6f7f8E9D3860F56504E4e5f5f390',\n            functions:{\n\n            }\n          },\n        ]\n      },\n    },\n    risk:{\n      \n    }\n  },\n  // Ethereum\n  42:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x4f96fe3b7a6cf9725f59d353f723c1bdb64ca6aa',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x295CA5bC5153698162dDbcE5dF50E436a58BA21e',\n        },\n        protocols:[\n          {\n            decimals:28,\n            token:'cDAI',\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xf0d0eb522cfa50b716b3b1604c4f0fa6f04376ad',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        token: 'USDC',\n        decimals: 6,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0xb7a4f3e9097c08da09517b5ab877f7a917224ede',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        ramp: {\n          swapAsset: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCYield',\n          address: '0x0de23D3bc385a74E2196cfE827C8a640B8774B9f',\n        },\n        protocols: [\n          {\n            decimals: 16,\n            enabled: true,\n            token: 'cUSDC',\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x4a92e71227d294f041bd82dd8f78591b75140d63',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          }\n        ]\n      },\n    },\n    risk: {\n\n    }\n  },\n  1337: {\n    best: {\n      DAI: {\n        abi: DAI,\n        token: 'DAI',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAIYield',\n          address: '0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAIYieldV3',\n            address: '0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            token: 'idleDAI',\n            abi: IdleConverterPersonalSignV4,\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            enabled: false,\n            name: 'fulcrum',\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token: 'aDAIv2',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: CHAI,\n            name: 'dsr',\n            enabled: true,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: yToken,\n            name: 'dydx',\n            enabled: true,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCYield',\n          address: '0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCYieldV3',\n            address: '0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols: [\n            {\n              abi: yToken,\n              name: 'dydx',\n              enabled: true,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aUSDCv2',\n            address: '0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions: {\n\n            }\n          },\n          {\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTYield',\n          address: '0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTYieldV3',\n            address: '0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDT',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            name: 'aavev2',\n            enabled: true,\n            token: 'aUSDTv2',\n            address: '0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions: {\n\n            }\n          }\n        ]\n      },\n      SUSD: {\n        decimals: 18,\n        token: 'SUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address: '0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre: {\n          destCurrency: 'SUSD'\n        },\n        defiPrime: {\n          token: 'susd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleSUSDYield',\n          address: '0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleSUSD',\n            name: 'idleSUSDYieldV3',\n            address: '0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleSUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x625aE63000f46200499120B906716420bd059240',\n            token: 'aSUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'aavev2',\n            enabled: true,\n            abi: aToken,\n            address: '0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token: 'aSUSDv2',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      TUSD: {\n        decimals: 18,\n        token: 'TUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(217, 100%, 20%)',\n        address: '0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre: {\n          destCurrency: 'TUSD'\n        },\n        defiPrime: {\n          token: 'tusd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleTUSDYield',\n          address: '0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleTUSD',\n            name: 'idleTUSDYieldV3',\n            address: '0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleTUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token: 'aTUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aTUSDv2',\n            address: '0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      WETH: {\n        abi: WETH,\n        token: 'WETH',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WETH'\n        },\n        ramp: {\n          swapAsset: 'WETH'\n        },\n        defiPrime: {\n          token: 'weth'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWETHYield',\n          address: '0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols: [\n          {\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token: 'cETH',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token: 'aWETH',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n        ]\n      },\n      WBTC: {\n        decimals: 8,\n        token: 'WBTC',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(29, 81%, 59%)',\n        address: '0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WBTC'\n        },\n        defiPrime: {\n          token: 'wbtc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWBTCYield',\n          address: '0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleWBTC',\n            name: 'idleWBTCYieldV3',\n            address: '0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleWBTC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            enabled: true,\n            token: 'cWBTC',\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0xccF4429DB6322D5C611ee964527D42E5d685DD6a',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            decimals: 18,\n            token: 'iWBTC',\n            enabled: false,\n            name: 'fulcrum',\n            address: '0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            token: 'aWBTC',\n            address: '0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aWBTCv2',\n            address: '0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      RAI: {\n        deposit: {},\n        token: 'RAI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        govTokensDisabled: false,\n        color: 'hsl(169,42%,37%)',\n        icon: 'images/tokens/RAI.png',\n        address: '0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleRAIYield',\n          address: '0x5C960a3DCC01BE8a0f49c02A8ceBCAcf5D07fABe',\n        },\n        protocols: [\n          {\n            abi: crToken,\n            decimals: 28,\n            enabled: true,\n            name: 'cream',\n            token: 'crRAI',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0xf8445c529d363ce114148662387eba5e62016e20',\n          },\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fRAI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x752F119bD4Ee2342CE35E2351648d21962c7CAfE',\n          }\n        ]\n      },\n      FEI: {\n        deposit: {},\n        token: 'FEI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        govTokensDisabled: false,\n        color: 'hsl(158, 64%, 37%)',\n        address: '0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleFEIYield',\n          address: '0xb2d5CB72A621493fe83C6885E4A776279be595bC',\n        },\n        protocols: [\n          {\n            abi: crToken,\n            decimals: 28,\n            enabled: true,\n            name: 'cream',\n            token: 'crFEI',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x8C3B7a4320ba70f8239F83770c4015B5bc4e6F91',\n          },\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fFEI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0xd8553552f8868C1Ef160eEdf031cF0BCf9686945',\n          }\n        ]\n      },\n    },\n    risk: {\n      DAI: {\n        abi: DAI,\n        decimals: 18,\n        token: 'DAI',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAISafe',\n          address: '0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAISafeV3',\n            address: '0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dsr',\n            enabled: true,\n            abi: CHAI,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCSafe',\n          address: '0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCSafeV3',\n            address: '0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTSafe',\n          address: '0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTSafeV3',\n            address: '0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      }\n    }\n  },\n  1: { // Mainnet\n    best: {\n      DAI: {\n        abi: DAI,\n        token: 'DAI',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAIYield',\n          address: '0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAIYieldV3',\n            address: '0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            token: 'idleDAI',\n            abi: IdleConverterPersonalSignV4,\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            enabled: false,\n            name: 'fulcrum',\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.4,\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token: 'aDAIv2',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: CHAI,\n            name: 'dsr',\n            enabled: true,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.7,\n            abi: yToken,\n            name: 'dydx',\n            enabled: true,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCYield',\n          address: '0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCYieldV3',\n            address: '0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols: [\n            {\n              abi: yToken,\n              name: 'dydx',\n              enabled: true,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 8.0,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.4,\n            abi: aToken,\n            decimals: 18,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aUSDCv2',\n            address: '0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.8,\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTYield',\n          address: '0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTYieldV3',\n            address: '0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDT',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.2,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.2,\n            abi: aToken,\n            decimals: 18,\n            name: 'aavev2',\n            enabled: true,\n            token: 'aUSDTv2',\n            address: '0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions: {\n\n            }\n          }\n        ]\n      },\n      SUSD: {\n        decimals: 18,\n        token: 'SUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address: '0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre: {\n          destCurrency: 'SUSD'\n        },\n        defiPrime: {\n          token: 'susd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleSUSDYield',\n          address: '0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleSUSD',\n            name: 'idleSUSDYieldV3',\n            address: '0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleSUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.2,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x625aE63000f46200499120B906716420bd059240',\n            token: 'aSUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.2,\n            name: 'aavev2',\n            enabled: true,\n            abi: aToken,\n            address: '0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token: 'aSUSDv2',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      TUSD: {\n        decimals: 18,\n        token: 'TUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(217, 100%, 20%)',\n        address: '0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre: {\n          destCurrency: 'TUSD'\n        },\n        defiPrime: {\n          token: 'tusd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleTUSDYield',\n          address: '0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleTUSD',\n            name: 'idleTUSDYieldV3',\n            address: '0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleTUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.8,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token: 'aTUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.8,\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aTUSDv2',\n            address: '0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      WETH: {\n        abi: WETH,\n        token: 'WETH',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WETH'\n        },\n        ramp: {\n          swapAsset: 'WETH'\n        },\n        defiPrime: {\n          token: 'weth'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWETHYield',\n          address: '0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols: [\n          {\n            defiScore: 8.8,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token: 'cETH',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 8.3,\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token: 'aWETH',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n        ]\n      },\n      WBTC: {\n        decimals: 8,\n        token: 'WBTC',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(29, 81%, 59%)',\n        address: '0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WBTC'\n        },\n        defiPrime: {\n          token: 'wbtc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWBTCYield',\n          address: '0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleWBTC',\n            name: 'idleWBTCYieldV3',\n            address: '0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleWBTC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 8.9,\n            enabled: true,\n            token: 'cWBTC',\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0xccF4429DB6322D5C611ee964527D42E5d685DD6a',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            decimals: 18,\n            token: 'iWBTC',\n            enabled: false,\n            name: 'fulcrum',\n            address: '0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 8.3,\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            token: 'aWBTC',\n            address: '0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 8.3,\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aWBTCv2',\n            address: '0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      RAI: {\n        deposit: {},\n        token: 'RAI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        defiScoreDisabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(169,42%,37%)',\n        icon: 'images/tokens/RAI.png',\n        address: '0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleRAIYield',\n          address: '0x5C960a3DCC01BE8a0f49c02A8ceBCAcf5D07fABe',\n        },\n        protocols: [\n          /*\n          {\n            abi:crToken,\n            decimals:28,\n            name:'cream',\n            token:'crRAI',\n            enabled:false,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0xf8445c529d363ce114148662387eba5e62016e20',\n          },\n          */\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fRAI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x752F119bD4Ee2342CE35E2351648d21962c7CAfE',\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            token: 'aRAI',\n            enabled: true,\n            name: 'aavev2',\n            functions: {\n            },\n            address: '0xc9bc48c72154ef3e5425641a3c747242112a46af',\n          }\n        ]\n      },\n      FEI: {\n        deposit: {},\n        token: 'FEI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        defiScoreDisabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(158, 64%, 37%)',\n        address: '0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleFEIYield',\n          address: '0xb2d5CB72A621493fe83C6885E4A776279be595bC',\n        },\n        protocols: [\n          {\n            abi: crToken,\n            decimals: 28,\n            enabled: true,\n            name: 'cream',\n            token: 'crFEI',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x8C3B7a4320ba70f8239F83770c4015B5bc4e6F91',\n          },\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fFEI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0xd8553552f8868C1Ef160eEdf031cF0BCf9686945',\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            token: 'aFEI',\n            enabled: true,\n            functions: {},\n            name: 'aavev2',\n            address: '0x683923dB55Fead99A79Fa01A27EeC3cB19679cC3',\n          }\n        ]\n      },\n    },\n    risk: {\n      DAI: {\n        abi: DAI,\n        decimals: 18,\n        token: 'DAI',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAISafe',\n          address: '0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        canDeposit: {\n          enabled: false,\n          disabledMessageRedeemKey: 'riskAdjustedDisabledMessageRedeem',\n          disabledMessageDepositKey: 'riskAdjustedDisabledMessageDeposit'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAISafeV3',\n            address: '0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dsr',\n            enabled: true,\n            abi: CHAI,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.7,\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCSafe',\n          address: '0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        canDeposit: {\n          enabled: false,\n          disabledMessageRedeemKey: 'riskAdjustedDisabledMessageRedeem',\n          disabledMessageDepositKey: 'riskAdjustedDisabledMessageDeposit'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCSafeV3',\n            address: '0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 8.0,\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.8,\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTSafe',\n          address: '0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        canDeposit: {\n          enabled: false,\n          disabledMessageRedeemKey: 'riskAdjustedDisabledMessageRedeem',\n          disabledMessageDepositKey: 'riskAdjustedDisabledMessageDeposit'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTSafeV3',\n            address: '0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.2,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      }\n    }\n  }\n};\n\nexport default availableTokens;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n// import TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass Staking extends Component {\n\n  state = {\n    tokenConfig:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedOption:null,\n    availableTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      const tokenConfig = this.props.toolProps.availableTokens[this.state.selectedToken];\n      const contractInfo = tokenConfig.contract;\n\n      // Init contracts\n      await Promise.all([\n        this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi),\n        this.props.initContract(this.state.selectedToken,tokenConfig.address,tokenConfig.abi)\n      ]);\n\n      this.setState({\n        tokenConfig,\n        contractInfo\n      });\n    }\n  }\n\n  async loadData(){\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens).reduce( (output,token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      if (tokenConfig.enabled){\n        output.push({\n          value:token,\n          ...tokenConfig\n        });\n      }\n      return output;\n    },[]);\n\n    const selectedOption = availableTokens[0];\n    const selectedToken = selectedOption.value;\n\n    this.setState({\n      selectedToken,\n      selectedOption,\n      availableTokens\n    });\n  }\n\n  selectToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  render() {\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const SelectedComponent = this.state.tokenConfig ? this.state.tokenConfig.component : null;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTokens ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tokens...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.availableTokens.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active tokens.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text\n                        mb={1}\n                      >\n                        Select Token:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'tokens'}\n                        isSearchable={false}\n                        options={this.state.availableTokens}\n                        CustomOptionValue={CustomOptionValue}\n                        onChange={this.selectToken.bind(this)}\n                        defaultValue={this.state.selectedOption}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      SelectedComponent && (\n                        <SelectedComponent\n                          {...this.props}\n                          tokenConfig={this.state.tokenConfig}\n                          contractInfo={this.state.contractInfo}\n                          selectedToken={this.state.selectedToken}\n                        />\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Staking;","import React, { Component } from 'react';\nimport { Box, Flex, Text } from 'rimble-ui'\nimport Faquestion from '../Faquestion/Faquestion';\n\nclass GenericFaqs extends Component {\n  state = {\n    openedAnswer:null,\n    selectedSection:null\n  };\n  componentWillMount(){\n    const selectedSection = Object.keys(this.props.questions)[0];\n    this.setSection(selectedSection);\n  }\n  setSection(section) {\n    this.setState(state => ({...state, selectedSection: section, openedAnswer: null}));\n  }\n  toggleAnswer(e,i) {\n    e.preventDefault();\n    this.setState(state => ({...state, openedAnswer: state.openedAnswer===i ? null : i }));\n  };\n\n  render() {\n    const showSections = this.props.showSections === undefined || this.props.showSections;\n    return (\n      <Flex\n        width={1}\n        flexDirection={'column'}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={\"center\"}\n        >\n          {\n            showSections && (\n              <Flex\n                mb={[3,4]}\n                px={[2,0]}\n                width={[1,3/5]}\n                flexDirection={'row'}\n                justifyContent={'space-between'}\n              >\n                {\n                  Object.keys(this.props.questions).map( (section,i) => {\n                    const isSelected = section === this.state.selectedSection;\n                    return (\n                      <Flex\n                        key={`section_${i}`}\n                        textAlign={'center'}\n                        justifyContent={'center'}\n                        width={1/Object.keys(this.props.questions).length}\n                        borderBottom={ isSelected ? '3px solid #0036ff' : 'none'}\n                      >\n                        <Text\n                          mb={1}\n                          fontWeight={3}\n                          fontSize={[2, 3]}\n                          textAlign={'center'}\n                          onClick={() => this.setSection(section)}\n                          color={isSelected ? 'blue' : 'copyColor'}\n                          className={['pointer', isSelected ? 'selected' : '']}\n                        >\n                          {section}\n                        </Text>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n            )\n          }\n          <Box\n            width={1}\n          >\n            {\n              this.props.questions[this.state.selectedSection].map( (question,i) => (\n                <Faquestion\n                  key={`answer_${i}`}\n                  answer={question.a}\n                  pt={i === 0 ? 0 : ''}\n                  question={question.q}\n                  isOpened={this.state.openedAnswer === i}\n                  handleClick={ e => this.toggleAnswer(e,i) }\n                />\n              ))\n            }\n          </Box>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default GenericFaqs;","import React, { Component } from 'react';\nimport IconBox from '../IconBox/IconBox';\nimport ExtLink from '../ExtLink/ExtLink';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Box, Text, Icon, Link, Input, Checkbox } from \"rimble-ui\";\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\n\nclass SendTxWithBalance extends Component {\n\n  state = {\n    processing:{\n      txHash:null,\n      loading:false\n    },\n    inputValue:null,\n    txSucceeded:false,\n    permitEnabled:true,\n    showPermitBox:false,\n    approveEnabled:true,\n    buttonDisabled:true,\n    contractApproved:false,\n    fastBalanceSelector:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    await this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = prevProps.action !== this.props.action;\n    const accountChanged = prevProps.account !== this.props.account;\n    const tokenBalanceChanged = prevProps.tokenBalance !== this.props.tokenBalance;\n    const permitEnabledChanged = prevState.permitEnabled !== this.state.permitEnabled;\n    const approveEnabledChanged = prevProps.approveEnabled !== this.props.approveEnabled;\n    const contractChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    if (actionChanged || accountChanged || tokenBalanceChanged || contractChanged || approveEnabledChanged || tokenConfigChanged || permitEnabledChanged){\n      await this.loadData();\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    if (contractApprovedChanged){\n      if (typeof this.props.contractApproved === 'function'){\n        this.props.contractApproved(this.state.contractApproved);\n      }\n    }\n\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector !== prevState.fastBalanceSelector;\n    if (fastBalanceSelectorChanged || actionChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n  }\n\n  changeInputValue = (e,call_callback=true) => {\n    const fastBalanceSelector = null;\n    const inputValue = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n    if (this.state.inputValue !== inputValue){\n      this.setState((prevState) => ({\n        inputValue,\n        fastBalanceSelector\n      }),() => {\n        if (call_callback && typeof this.props.changeInputCallback === 'function'){\n          this.props.changeInputCallback(this.state.inputValue);\n        }\n      });\n    }\n  }\n\n  setInputValue = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n    const inputValue = this.props.tokenBalance && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() ? this.functionsUtil.BNify(this.props.tokenBalance).times(selectedPercentage) : null;\n\n    this.setState((prevState) => ({\n      inputValue\n    }),() => {\n      if (typeof this.props.changeInputCallback === 'function'){\n        this.props.changeInputCallback(this.state.inputValue);\n      }\n    });\n  }\n\n  getFastBalanceSelector = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    return this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  setFastBalanceSelector = (fastBalanceSelector) => {\n    this.setState({\n      fastBalanceSelector\n    });\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!amount){\n      amount = this.state.inputValue;\n    }\n    amount = this.functionsUtil.BNify(amount);\n    const buttonDisabled = amount.isNaN() || amount.lte(0) || amount.gt(this.props.tokenBalance);\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  approve = async () => {\n    // Check if the migration contract is approved\n    const contractApproved = await this.checkContractApproved();\n\n    if (!contractApproved){\n\n      const callbackApprove = (tx,error) => {\n        // Send Google Analytics event\n        const eventData = {\n          eventAction: 'approve',\n          eventCategory: 'CurveDeposit',\n          eventLabel: tx ? tx.status : null\n        };\n\n        const txSucceeded = tx && tx.status === 'success';\n\n        if (error){\n          eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n        }\n\n        // Send Google Analytics event\n        if (error || eventData.status !== 'error'){\n          this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n        }\n\n        this.setState((prevState) => ({\n          contractApproved: txSucceeded, // True\n          processing: {\n            ...prevState.processing,\n            txHash:null,\n            loading:false\n          }\n        }));\n\n        if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n          this.props.callbackApprove(tx);\n        }\n      };\n\n      const callbackReceiptApprove = (tx) => {\n        const txHash = tx.transactionHash;\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            txHash\n          }\n        }));\n      };\n\n      // console.log('Approve',this.props.tokenConfig.token,this.props.contractInfo.address);\n\n      this.functionsUtil.enableERC20(this.props.tokenConfig.token,this.props.contractInfo.address,callbackApprove,callbackReceiptApprove);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash:null,\n          loading:true\n        },\n        contractApproved:false\n      }));\n    } else {\n      this.setState({\n        contractApproved:true\n      });\n    }\n  }\n\n  executeTx = async () => {\n\n    const inputValue = this.state.inputValue ? this.functionsUtil.BNify(this.state.inputValue) : null;\n    if (!inputValue){\n      return false;\n    }\n\n    if (typeof this.props.checkLimit === 'function'){\n      const limitCheck = await this.props.checkLimit(inputValue);\n      if (!limitCheck){\n        return false;\n      }\n    }\n\n    const _amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n\n    // console.log('executeTx',params);\n\n    const callback = (tx,error) => {\n\n      const txSucceeded = tx && tx.status === 'success';\n\n      // Send Google Analytics event\n      if (tx){\n        const eventData = {\n          eventLabel: tx.status,\n          eventCategory: `CurveDeposit`,\n          eventValue: inputValue.toFixed(),\n          eventAction: this.props.tokenConfig.token,\n        };\n\n        if (error){\n          eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n        }\n\n        // Send Google Analytics event\n        if (error || eventData.status !== 'error'){\n          this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n        }\n      }\n\n      this.setState({\n        txSucceeded,\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      });\n\n      if (txSucceeded){\n        // Reset input\n        this.changeInputValue({\n          target:{\n            value:0\n          }\n        },false);\n        this.setState({\n          showPermitBox:false\n        });\n        // Call upper component callback\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx,_amount,params);\n        }\n      }\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    let params = null;\n\n    // Check contract approved without permit\n    let contractName = this.props.contractInfo.name;\n    const contractApproved = await this.checkContractApproved(false);\n\n    const permitEnabled = this.props.permitEnabled && this.state.permitEnabled && !contractApproved;\n    if (permitEnabled){\n      const signedParameters = await this.functionsUtil.signPermit(this.props.tokenConfig.token, this.props.account, contractName);\n      // console.log('signedParameters',signedParameters);\n      if (signedParameters){\n        params = this.props.getPermitTransactionParams(_amount,signedParameters);\n      }\n    } else {\n      params = this.props.getTransactionParams(_amount,this.state.fastBalanceSelector);\n    }\n\n    if (params){\n      let {\n        methodName,\n        methodParams\n      } = params;\n\n      const value = params.value || null;\n      contractName = params.contractName || this.props.contractInfo.name;\n\n      // console.log('SendTxWithBalance',contractName, methodName, methodParams, value);\n\n      this.props.contractMethodSendWrapper(contractName, methodName, methodParams, value, callback, callbackReceipt);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:true\n        }\n      }));\n    } else {\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:false\n        }\n      }));\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async checkContractApproved(checkPermit=true){\n\n    if (checkPermit && this.props.permitEnabled && this.state.permitEnabled){\n      return true;\n    }\n\n    if (this.props.approveEnabled !== undefined && !this.props.approveEnabled){\n      return true;\n    }\n    \n    const contractApproved = await this.functionsUtil.checkTokenApproved(this.props.tokenConfig.token,this.props.contractInfo.address,this.props.account);\n    return contractApproved;\n  }\n\n  async loadData(){\n    const inputValue = null;\n    const fastBalanceSelector = null;\n    const approveEnabled = this.props.approveEnabled !== false;\n\n    if (this.props.contractInfo){\n      await this.props.initContract(this.props.contractInfo.name,this.props.contractInfo.address,this.props.contractInfo.abi);\n    }\n    // console.log('initContract',this.props.contractInfo);\n\n    const contractApproved = await this.checkContractApproved();\n\n    this.setState({\n      inputValue,\n      approveEnabled,\n      contractApproved,\n      fastBalanceSelector\n    });\n  }\n\n  approveCallback = () => {\n    this.loadData();\n  }\n\n  render() {\n\n    const viewOnly = this.props.connectorName === 'custom';\n    const action = this.props.action ? this.props.action : 'Deposit';\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'stretch'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          viewOnly ? (\n            <IconBox\n              cardProps={{\n                mt:3\n              }}\n              icon={'Visibility'}\n              text={'You are using Idle in \"Read-Only\" mode.<br />Logout and connect with your wallet to interact.'}\n            />\n          ) : !this.props.account ? (\n            <ConnectBox\n              {...this.props}\n            />\n          ) : this.props.tokenConfig && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && this.functionsUtil.BNify(this.props.tokenBalance).gt(0) ? (\n            <Box\n              width={1}\n            >\n              {\n                this.props.infoBox && (\n                  <IconBox\n                    cardProps={{\n                      mb:3\n                    }}\n                    {...this.props.infoBox}\n                  />\n                )\n              }\n              {\n                this.props.steps && this.props.steps.length>0 && (\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                      px:[2,4]\n                    }}\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    > \n                      {\n                        this.props.steps.map( (step,stepIndex) => (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            key={`step_${stepIndex}`}\n                          >\n                            <Icon\n                              size={'1.5em'}\n                              name={ step.completed ? 'CheckBox' : step.icon}\n                              color={ step.completed ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                            />\n                            {\n                              step.link ? (\n                                <ExtLink\n                                  ml={2}\n                                  fontSize={2}\n                                  color={'blue'}\n                                  fontWeight={1}\n                                  href={step.link}\n                                  textAlign={'left'}\n                                  hoverColor={'blue'}\n                                >\n                                  {step.description}\n                                </ExtLink>\n                              ) : (\n                                <Text\n                                  ml={2}\n                                  fontSize={2}\n                                  fontWeight={1}\n                                  color={'cellText'}\n                                  textAlign={'left'}\n                                >\n                                  {step.description}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        ) )\n                      }\n                    </Flex>\n                  </DashboardCard>\n                )\n              }\n              <Box\n                mt={2}\n                width={1}\n              >\n                {\n                  this.state.showPermitBox && this.props.permitEnabled ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:3,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          name={'Warning'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Approve and Deposit in a single transaction is supported for this transaction, disable this feature and try again if you can't deposit.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.props.permitEnabled && (\n                    <Flex\n                      p={2}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                      backgroundColor={'DashboardCard'}\n                      border={`1px solid ${this.props.theme.colors.primary}`}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Permit signature?\n                      </Link>\n                      <Icon\n                        ml={1}\n                        size={'1em'}\n                        name={'Warning'}\n                        color={'primary'}\n                      />\n                    </Flex>\n                  )\n                }\n              </Box>\n              {\n                this.state.approveEnabled && !this.state.contractApproved ?\n                  this.state.processing.loading ? (\n                    <Flex\n                      mt={3}\n                      flexDirection={'column'}\n                    >\n                      <TxProgressBar\n                        {...this.props}\n                        waitText={`Approve estimated in`}\n                        hash={this.state.processing.txHash}\n                        endMessage={`Finalizing approve request...`}\n                        cancelTransaction={this.cancelTransaction.bind(this)}\n                      />\n                    </Flex>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          name={'LockOpen'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                          dangerouslySetInnerHTML={{\n                            __html:this.props.approveDescription\n                          }}\n                        />\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.approve.bind(this)}\n                        >\n                          Approve\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  )\n                : this.state.processing.loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      {...this.props}\n                      hash={this.state.processing.txHash}\n                      endMessage={`Finalizing ${action} request...`}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      waitText={`${this.functionsUtil.capitalize(action)} estimated in`}\n                    />\n                  </Flex>\n                ) : (\n                  <Box\n                    mt={2}\n                    width={1}\n                  >\n                    <Flex\n                      mt={2}\n                      mb={3}\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        mb={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                      >\n                        {\n                          this.props.balanceSelectorInfo && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                textAlign={'left'}\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                                color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                              >\n                                {this.props.balanceSelectorInfo.text}\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                        {\n                          !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'flex-end'}\n                            >\n                              <Link\n                                fontSize={1}\n                                fontWeight={3}\n                                color={'dark-gray'}\n                                textAlign={'right'}\n                                hoverColor={'copyColor'}\n                                onClick={ (e) => this.setFastBalanceSelector(100) }\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                              >\n                                Balance: {this.functionsUtil.BNify(this.props.tokenBalance).toFixed(this.props.isMobile ? 2 : 4)} {this.props.tokenConfig.token}\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                      <Input\n                        min={0}\n                        type={\"number\"}\n                        required={true}\n                        height={'3.4em'}\n                        borderRadius={2}\n                        fontWeight={500}\n                        borderColor={'cardBorder'}\n                        backgroundColor={'cardBg'}\n                        boxShadow={'none !important'}\n                        placeholder={`Insert amount`}\n                        onChange={this.changeInputValue.bind(this)}\n                        border={`1px solid ${this.props.theme.colors.divider}`}\n                        value={this.state.inputValue !== null ? this.functionsUtil.BNify(this.state.inputValue).toFixed() : ''}\n                      />\n                      <Flex\n                        mt={2}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        {\n                          [25,50,75,100].map( percentage => (\n                            <FastBalanceSelector\n                              percentage={percentage}\n                              key={`selector_${percentage}`}\n                              onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                              isActive={this.state.fastBalanceSelector === parseInt(percentage)}\n                            />\n                          ))\n                        }\n                      </Flex>\n                      <Flex\n                        mt={2}\n                        justifyContent={'center'}\n                      >\n                        <RoundButton\n                          handleClick={this.executeTx.bind(this)}\n                          buttonProps={Object.assign({\n                            mt:2,\n                            width:[1,1/2],\n                            style:{\n                              textTransform:'capitalize'\n                            },\n                            disabled:this.state.buttonDisabled||this.props.buttonDisabled\n                          },this.props.buttonProps)}\n                        >\n                          {this.props.action}\n                        </RoundButton>\n                      </Flex>\n                    </Flex>\n                  </Box>\n                )\n              }\n            </Box>\n          ) : this.props.children\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SendTxWithBalance;","import React from \"react\";\nimport ModalCard from './ModalCard';\nimport { Text, Modal, Flex } from \"rimble-ui\";\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport RoundButton from '../../RoundButton/RoundButton.js';\n\nclass LimitReachedModal extends React.Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.loadUtils();\n  }\n\n  componentDidUpdate = async () => {\n    this.loadUtils();\n  }\n\n  closeModal = async () => {\n    this.props.closeModal();\n  }\n\n  render() {\n\n    return (\n      <Modal\n        isOpen={this.props.isOpen}\n      >\n        <ModalCard\n          maxWidth={['960px','650px']}\n          closeFunc={this.props.closeModal}\n        >\n          <ModalCard.Header\n            pt={3}\n            iconHeight={'40px'}\n            title={'Limit Reached'}\n            icon={'images/warning.svg'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              flexDirection={'column'}\n            >\n              <Text\n                fontSize={2}\n                textAlign={'left'}\n                color={'dark-gray'}\n              >\n                The pool has reached the limit size of {this.props.limit}! Please wait for the limit to be increased before trying to deposit again!\n              </Text>\n            </Flex>\n            <Flex\n              my={3}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <RoundButton\n                handleClick={this.closeModal}\n                buttonProps={{\n                  width:['100%','40%']\n                }}\n              >\n                Got it\n              </RoundButton>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default LimitReachedModal;","import IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport { Flex, Text, Image, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport TrancheField from '../TrancheField/TrancheField';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport ShareModal from '../utilities/components/ShareModal';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport LimitReachedModal from '../utilities/components/LimitReachedModal';\n\nclass TrancheDetails extends Component {\n\n  state = {\n    infoText:null,\n    canUnstake:null,\n    canWithdraw:null,\n    activeModal:null,\n    balanceProp:null,\n    tokenConfig:null,\n    contractInfo:null,\n    tranchePrice:null,\n    tokenBalance:null,\n    stakedBalance:null,\n    trancheBalance:null,\n    approveEnabled:null,\n    buttonDisabled:false,\n    approveDescription:null,\n    selectedAction:'deposit',\n    userHasAvailableFunds:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = this.props.account !== prevProps.account;\n    if (accountChanged){\n      this.loadData();\n    }\n\n    const selectedActionChange = prevState.selectedAction !== this.state.selectedAction;\n    if (selectedActionChange){\n      this.loadActionData();\n    }\n  }\n\n  async loadData(){\n\n    if (!this.props.account){\n      return null;\n    }\n\n    const [\n      // blockNumber,\n      tokenBalance,\n      trancheBalance,\n      // cdoCoolingPeriod,\n      // latestHarvestBlock,\n      // stakeCoolingPeriod,\n      // rewardsTokensInfo,\n      // userStakeBlock,\n      stakedBalance,\n      trancheAPY,\n      tranchePrice\n    ] = await Promise.all([\n      // this.functionsUtil.getBlockNumber(),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.getTokenBalance(this.props.trancheConfig.name,this.props.account),\n      // this.functionsUtil.genericContractCall(this.props.tokenConfig.CDO.name,'coolingPeriod'),\n      // this.functionsUtil.genericContractCall(this.props.tokenConfig.CDO.name,'latestHarvestBlock'),\n      // this.functionsUtil.genericContractCall(this.props.trancheConfig.CDORewards.name,'coolingPeriod'),\n      // this.functionsUtil.getTrancheRewardTokensInfo(this.props.tokenConfig,this.props.trancheConfig),\n      // this.functionsUtil.genericContractCall(this.props.trancheConfig.CDORewards.name,'usersStakeBlock',[this.props.account]),\n      this.functionsUtil.getTrancheStakedBalance(this.props.trancheConfig.CDORewards.name,this.props.account,this.props.trancheConfig.CDORewards.decimals),\n      this.functionsUtil.loadTrancheFieldRaw('trancheApy',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account),\n      this.functionsUtil.loadTrancheFieldRaw('lastTranchePrice',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account)\n    ]);\n\n    const userHasAvailableFunds = trancheBalance && trancheBalance.gt(0);\n\n\n    const canUnstake = true; // !stakeCoolingPeriod || this.functionsUtil.BNify(userStakeBlock).plus(stakeCoolingPeriod).lt(blockNumber);\n    const canWithdraw = true; // !cdoCoolingPeriod || !latestHarvestBlock || this.functionsUtil.BNify(latestHarvestBlock).plus(cdoCoolingPeriod).lt(blockNumber);\n    \n    // console.log('loadData',this.props.trancheConfig.tranche,blockNumber,cdoCoolingPeriod,latestHarvestBlock,stakeCoolingPeriod,userStakeBlock,canUnstake,canWithdraw);\n\n    this.setState({\n      trancheAPY,\n      canUnstake,\n      canWithdraw,\n      tokenBalance,\n      tranchePrice,\n      stakedBalance,\n      trancheBalance,\n      userHasAvailableFunds\n    }, () => {\n      this.loadActionData();\n    });\n  }\n\n  loadActionData(){\n    let infoBox = null;\n    let balanceProp = null;\n    let tokenConfig = null;\n    let contractInfo = null;\n    let approveEnabled = null;\n    let buttonDisabled = false;\n\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    let infoText = trancheDetails.description[this.state.selectedAction];\n\n    switch (this.state.selectedAction){\n      case 'deposit':\n        approveEnabled = true;\n        contractInfo = this.props.cdoConfig;\n        tokenConfig = this.props.tokenConfig;\n        balanceProp = this.state.tokenBalance;\n      break;\n      case 'stake':\n        approveEnabled = true;\n        tokenConfig = this.props.trancheConfig;\n        balanceProp = this.state.trancheBalance;\n        contractInfo = this.props.trancheConfig.CDORewards;\n      break;\n      case 'unstake':\n        approveEnabled = false;\n        tokenConfig = this.props.trancheConfig;\n        contractInfo = this.props.trancheConfig.CDORewards;\n        balanceProp = this.state.stakedBalance;\n        if (!this.state.canUnstake){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantUnstake;\n        }\n      break;\n      case 'withdraw':\n        approveEnabled = false;\n        contractInfo = this.props.cdoConfig;\n        // tokenConfig = this.props.tokenConfig;\n        tokenConfig = this.props.trancheConfig;\n        balanceProp = this.state.trancheBalance;\n        // balanceProp = this.state.trancheBalance.times(this.state.tranchePrice);\n        // console.log('balanceProp',this.state.trancheBalance.toFixed(),this.state.tranchePrice.toFixed(),balanceProp.toFixed());\n        if (!this.state.canWithdraw){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantWithdraw;\n          // infoBox = {\n          //   text:'You need to wait 1 block from the last ',\n          //   icon:'Warning',\n          //   iconProps:{\n          //     color:'cellText'\n          //   },\n          // };\n        }\n      break;\n      default:\n      break;\n    }\n\n    const approveDescription = `To ${this.state.selectedAction} your <strong>${tokenConfig.token}</strong> you need to approve the Smart-Contract first.`;\n\n    // console.log('loadActionData',approveEnabled);\n\n    this.setState({\n      infoBox,\n      infoText,\n      tokenConfig,\n      balanceProp,\n      contractInfo,\n      buttonDisabled,\n      approveEnabled,\n      approveDescription\n    })\n  }\n\n  changeInputCallback(){\n\n  }\n\n  contractApprovedCallback(){\n\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n\n    if (this.props.trancheConfig.functions[this.state.selectedAction]){\n      methodName = this.props.trancheConfig.functions[this.state.selectedAction];\n\n      // if (this.state.selectedAction === 'withdraw'){\n\n      // }\n\n      methodParams = [amount];\n    }\n\n    console.log('getTransactionParams',methodName,methodParams);\n\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async checkLimit(amount){\n    const trancheLimit = this.functionsUtil.BNify(this.props.tokenConfig.limit);\n    const poolSize = await this.functionsUtil.loadTrancheFieldRaw(`pool`,{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account);\n    if (poolSize.plus(amount).gt(trancheLimit)){\n      this.setState({\n        activeModal:'limit'\n      })\n      return false;\n    }\n    return true;\n  }\n\n  transactionSucceeded(){\n    this.loadData();\n    switch (this.state.selectedAction){\n      case 'stake':\n      case 'deposit':\n        this.setState({\n          activeModal:'share'\n        })\n      break;\n      default:\n      break;\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    const otherTrancheType = this.props.selectedTranche === 'AA' ? 'BB' : 'AA';\n    const otherTrancheDetails = this.functionsUtil.getGlobalConfig(['tranches',otherTrancheType]);\n    const trancheLimit = this.functionsUtil.formatMoney(this.functionsUtil.BNify(this.props.tokenConfig.limit),0)+' '+this.props.selectedToken;\n    const stakingRewards = this.props.trancheConfig.CDORewards.stakingRewards.filter( t => t.enabled );\n    const stakingEnabled = this.state.userHasAvailableFunds && stakingRewards.length>0;\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        maxWidth={['100%','45em']}\n      >\n        {\n          !this.props.showSelectButton && (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'flex-end'}\n            >\n              <Button\n                mb={2}\n                size={'small'}\n                width={'auto'}\n                contrastColor={'cardBg'}\n                icon={otherTrancheDetails.icon}\n                mainColor={otherTrancheDetails.color.hex}\n                onClick={e => this.props.selectTrancheType(otherTrancheDetails.route)}\n              >\n                Switch to {otherTrancheDetails.name}\n              </Button>\n            </Flex>\n          )\n        }\n        <DashboardCard\n          cardProps={{\n            py:3,\n            px:3,\n            border:null,\n            // style:{\n            //   border:`1px solid ${trancheDetails.color.hex}`\n            // }\n          }}\n        >\n          <Flex\n            pb={2}\n            mb={2}\n            alignItems={'center'}\n            flexDirection={'row'}\n            borderBottom={`1px solid ${trancheDetails.color.hex}`}\n          > \n            <Image\n              mr={2}\n              src={trancheDetails.image}\n              size={this.props.isMobile ? '1.6em' : '1.8em'}\n            />\n            <Text\n              fontWeight={4}\n              fontSize={[3,4]}\n              color={'copyColor'}\n            >\n              {trancheDetails.name}\n            </Text>\n          </Flex>\n          <Flex\n            style={{\n              flexBasis:'0',\n              flex:'1 1 0px',\n              flexWrap:'wrap',\n              borderBottom:`1px solid ${this.props.theme.colors.divider}`\n            }}\n            alignItems={'flex-start'}\n            justifyContent={'flex-start'}\n          >\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Protocol\n              </Text>\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'protocolIcon',\n                    props:{\n                      mr:2,\n                      height:['1.4em','2em']\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'protocolName',\n                    props:{\n                      fontSize:[2,3],\n                      color:'copyColor'\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Token\n              </Text>\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'tokenIcon',\n                    props:{\n                      mr:2,\n                      height:['1.4em','2em']\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'tokenName',\n                    props:{\n                      fontSize:[2,3],\n                      color:'copyColor'\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Pool Size\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'tranchePool',\n                  props:{\n                    decimals:2,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n              alignItems={'flex-start'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Auto-Farming\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'autoFarming',\n                  parentProps:{\n                    justifyContent:'flex-start'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Staking Rewards\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'stakingRewards',\n                  props:{\n                    decimals:2,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                APY\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'trancheApy',\n                  props:{\n                    decimals:2,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n              {\n                stakingRewards.length>0 && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Text\n                      fontSize={1}\n                      fontWeight={2}\n                      lineHeight={'1'}\n                      color={'cellText'}\n                    >\n                      +\n                    </Text>\n                    <TrancheField\n                      {...this.props}\n                      fieldInfo={{\n                        name:'trancheIDLELastHarvest',\n                        props:{\n                          decimals:4,\n                          fontSize:1,\n                          fontWeight:2,\n                          lineHeight:'1',\n                          color:'cellText'\n                        }\n                      }}\n                      token={this.props.selectedToken}\n                      tranche={this.props.selectedTranche}\n                      tokenConfig={this.props.tokenConfig}\n                      protocol={this.props.selectedProtocol}\n                      trancheConfig={this.props.trancheConfig}\n                    />\n                  </Flex>\n                )\n              }\n            </Flex>\n          </Flex>\n          {\n            /*\n            (this.functionsUtil.BNify(this.state.stakedBalance).gt(0) || this.functionsUtil.BNify(this.state.trancheBalance).gt(0)) && (\n              <Flex\n                py={2}\n                style={{\n                  flexBasis:'0',\n                  flex:'1 1 0px',\n                  flexWrap:'wrap',\n                  borderBottom:`1px solid ${this.props.theme.colors.divider}`\n                }}\n                alignItems={'flex-start'}\n                justifyContent={'flex-start'}\n              >\n                <Flex\n                  width={0.33}\n                  flexDirection={'column'}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={[1,2]}\n                    color={'cellText'}\n                  >\n                    Deposited\n                  </Text>\n                  <TrancheField\n                    {...this.props}\n                    fieldInfo={{\n                      name:'trancheDeposited',\n                      props:{\n                        decimals:4,\n                        fontWeight:2,\n                        fontSize:[2,4],\n                        color:'copyColor'\n                      }\n                    }}\n                    token={this.props.selectedToken}\n                    tranche={this.props.selectedTranche}\n                    tokenConfig={this.props.tokenConfig}\n                    protocol={this.props.selectedProtocol}\n                    trancheConfig={this.props.trancheConfig}\n                  />\n                </Flex>\n                <Flex\n                  width={0.33}\n                  flexDirection={'column'}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={[1,2]}\n                    color={'cellText'}\n                  >\n                    Staked\n                  </Text>\n                  <TrancheField\n                    {...this.props}\n                    fieldInfo={{\n                      name:'trancheStaked',\n                      props:{\n                        decimals:4,\n                        fontWeight:2,\n                        fontSize:[2,4],\n                        color:'copyColor'\n                      }\n                    }}\n                    token={this.props.selectedToken}\n                    tranche={this.props.selectedTranche}\n                    tokenConfig={this.props.tokenConfig}\n                    protocol={this.props.selectedProtocol}\n                    trancheConfig={this.props.trancheConfig}\n                  />\n                </Flex>\n                <Flex\n                  width={0.33}\n                  flexDirection={'column'}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={[1,2]}\n                    color={'cellText'}\n                  >\n                    Redeemable\n                  </Text>\n                  <TrancheField\n                    {...this.props}\n                    fieldInfo={{\n                      name:'trancheRedeemable',\n                      props:{\n                        decimals:4,\n                        fontWeight:2,\n                        fontSize:[2,4],\n                        color:'copyColor'\n                      }\n                    }}\n                    token={this.props.selectedToken}\n                    tranche={this.props.selectedTranche}\n                    tokenConfig={this.props.tokenConfig}\n                    protocol={this.props.selectedProtocol}\n                    trancheConfig={this.props.trancheConfig}\n                  />\n                </Flex>\n              </Flex>\n            )\n            */\n          }\n          {\n            this.props.showSelectButton ? (\n                <Button\n                  mt={3}\n                  width={1}\n                  contrastColor={'cardBg'}\n                  icon={trancheDetails.icon}\n                  mainColor={trancheDetails.color.hex}\n                  onClick={e => this.props.selectTrancheType(trancheDetails.route)}\n                >\n                  {\n                    this.props.tokenConfig ? `Go to ${trancheDetails.name}` : `Start with ${trancheDetails.name}`\n                  }\n                </Button>\n            ) : this.state.balanceProp && this.state.tokenConfig ? (\n              <Flex\n                width={1}\n                flexDirection={'column'}\n              >\n                <Flex\n                  mt={3}\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  <CardIconButton\n                    {...this.props}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    cardProps={{\n                      px:3,\n                      py:2,\n                      width:0.32\n                    }}\n                    text={'Deposit'}\n                    iconColor={'deposit'}\n                    icon={'ArrowDownward'}\n                    iconBgColor={'#ced6ff'}\n                    isActive={ this.state.selectedAction === 'deposit' }\n                    handleClick={ e => this.setSelectedAction('deposit') }\n                  />\n                  {\n                    this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) ? (\n                      <CardIconButton\n                        {...this.props}\n                        textProps={{\n                          fontSize:[1,2]\n                        }}\n                        cardProps={{\n                          px:3,\n                          py:2,\n                          width:0.32\n                        }}\n                        text={'Unstake'}\n                        icon={'LayersClear'}\n                        iconColor={'redeem'}\n                        iconBgColor={'#ceeff6'}\n                        isActive={ this.state.selectedAction === 'unstake' }\n                        handleClick={ e => this.setSelectedAction('unstake') }\n                      />\n                    ) : (\n                      <CardIconButton\n                        {...this.props}\n                        textProps={{\n                          fontSize:[1,2]\n                        }}\n                        cardProps={{\n                          px:3,\n                          py:2,\n                          width:0.32\n                        }}\n                        text={'Stake'}\n                        icon={'Layers'}\n                        iconColor={'deposit'}\n                        iconBgColor={'#ced6ff'}\n                        isDisabled={ !stakingEnabled }\n                        isActive={ this.state.selectedAction === 'stake' }\n                        handleClick={ e => this.state.userHasAvailableFunds ? this.setSelectedAction('stake') : null }\n                      />\n                    )\n                  }\n                  <CardIconButton\n                    {...this.props}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    cardProps={{\n                      px:3,\n                      py:2,\n                      width:0.32\n                    }}\n                    text={'Withdraw'}\n                    icon={'ArrowUpward'}\n                    iconColor={'redeem'}\n                    iconBgColor={'#ceeff6'}\n                    isDisabled={ !this.state.userHasAvailableFunds }\n                    isActive={ this.state.selectedAction === 'withdraw' }\n                    handleClick={ e => this.state.userHasAvailableFunds ? this.setSelectedAction('withdraw') : null }\n                  />\n                </Flex>\n                {\n                  this.state.infoText && (\n                    <IconBox\n                      cardProps={{\n                        p:2,\n                        mt:3,\n                        width:1,\n                      }}\n                      isActive={true}\n                      isInteractive={false}\n                      iconProps={{\n                        size:'1.2em',\n                        color:'flashColor'\n                      }}\n                      textProps={{\n                        fontWeight:500,\n                        color:'flashColor',\n                        textAlign:'center',\n                        fontSize:['13px','15px']\n                      }}\n                      icon={'LightbulbOutline'}\n                      text={this.state.infoText}\n                    />\n                  )\n                }\n                <Flex\n                  mt={2}\n                >\n                  <SendTxWithBalance\n                    error={null}\n                    {...this.props}\n                    buttonProps={{\n                      width:[1,0.45]\n                    }}\n                    permitEnabled={false}\n                    tokenConfig={this.state.tokenConfig}\n                    tokenBalance={this.state.balanceProp}\n                    contractInfo={this.state.contractInfo}\n                    checkLimit={this.checkLimit.bind(this)}\n                    approveEnabled={this.state.approveEnabled}\n                    buttonDisabled={this.state.buttonDisabled}\n                    callback={this.transactionSucceeded.bind(this)}\n                    approveDescription={this.state.approveDescription}\n                    changeInputCallback={this.changeInputCallback.bind(this)}\n                    contractApproved={this.contractApprovedCallback.bind(this)}\n                    getTransactionParams={this.getTransactionParams.bind(this)}\n                    action={this.functionsUtil.capitalize(this.state.selectedAction)}\n                  >\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <BuyModal\n                        {...this.props}\n                        showInline={true}\n                        availableMethods={[]}\n                        buyToken={this.props.selectedToken}\n                      />\n                    </Flex>\n                  </SendTxWithBalance>\n                </Flex>\n              </Flex>\n            ) : !this.props.account ? (\n              <ConnectBox\n                {...this.props}\n              />\n            ) : (\n              <FlexLoader\n                flexProps={{\n                  mt:3,\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading Tranche Data...'}\n              />\n            )\n          }\n        </DashboardCard>\n        <LimitReachedModal\n          {...this.props}\n          limit={trancheLimit}\n          closeModal={this.resetModal}\n          isOpen={this.state.activeModal === 'limit'}\n        />\n        <ShareModal\n          confettiEnabled={true}\n          icon={`images/medal.svg`}\n          title={`Congratulations!`}\n          account={this.props.account}\n          closeModal={this.resetModal}\n          tokenName={this.props.selectedToken}\n          isOpen={this.state.activeModal === 'share'}\n          text={`You have successfully deposited in Idle!<br />Enjoy <strong>${this.state.trancheAPY ? this.state.trancheAPY.toFixed(2) : '0.00'}% APY</strong> on your <strong>${this.props.selectedToken}</strong>!`}\n          tweet={`I'm earning ${this.state.trancheAPY ? this.state.trancheAPY.toFixed(2) : '0.00'}% APY on my ${this.props.selectedToken} with @idlefinance tranches! Go to ${this.functionsUtil.getGlobalConfig(['baseURL'])}${this.props.selectedSection.route} and start earning now from your idle tokens!`}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default TrancheDetails;\n","import IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport TrancheField from '../TrancheField/TrancheField';\nimport { Flex, Text, Image, Box, Icon } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport ShareModal from '../utilities/components/ShareModal';\n// import StatsCardSmall from '../StatsCardSmall/StatsCardSmall';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport LimitReachedModal from '../utilities/components/LimitReachedModal';\n\nclass TrancheDetails extends Component {\n\n  state = {\n    infoText:null,\n    canUnstake:null,\n    canWithdraw:null,\n    activeModal:null,\n    actionLabel:null,\n    balanceProp:null,\n    tokenConfig:null,\n    contractInfo:null,\n    tranchePrice:null,\n    tokenBalance:null,\n    stakeEnabled:true,\n    stakedBalance:null,\n    unstakeEnabled:true,\n    trancheBalance:null,\n    stakingEnabled:true,\n    approveEnabled:null,\n    buttonDisabled:false,\n    selectedTranche:null,\n    availableTranches:null,\n    approveDescription:null,\n    selectedAction:'deposit',\n    selectedTrancheOption:null,\n    selectedStakeAction:'stake',\n    userHasAvailableFunds:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = this.props.account !== prevProps.account;\n    if (accountChanged){\n      this.loadData();\n    }\n\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const selectedStakeActionChanged = prevState.selectedStakeAction !== this.state.selectedStakeAction;\n    if (selectedActionChanged || selectedStakeActionChanged){\n      this.loadActionData();\n    }\n  }\n\n  async loadData(){\n\n    const [\n      // blockNumber,\n      tokenBalance,\n      trancheBalance,\n      // cdoCoolingPeriod,\n      // latestHarvestBlock,\n      // stakeCoolingPeriod,\n      // rewardsTokensInfo,\n      // userStakeBlock,\n      stakedBalance,\n      trancheAPY,\n      tranchePrice\n    ] = await Promise.all([\n      // this.functionsUtil.getBlockNumber(),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.getTokenBalance(this.props.trancheConfig.name,this.props.account),\n      // this.functionsUtil.genericContractCall(this.props.tokenConfig.CDO.name,'coolingPeriod'),\n      // this.functionsUtil.genericContractCall(this.props.tokenConfig.CDO.name,'latestHarvestBlock'),\n      // this.functionsUtil.genericContractCall(this.props.trancheConfig.CDORewards.name,'coolingPeriod'),\n      // this.functionsUtil.getTrancheRewardTokensInfo(this.props.tokenConfig,this.props.trancheConfig),\n      // this.functionsUtil.genericContractCall(this.props.trancheConfig.CDORewards.name,'usersStakeBlock',[this.props.account]),\n      this.functionsUtil.getTrancheStakedBalance(this.props.trancheConfig.CDORewards.name,this.props.account,this.props.trancheConfig.CDORewards.decimals),\n      this.functionsUtil.loadTrancheFieldRaw('trancheApy',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account),\n      this.functionsUtil.loadTrancheFieldRaw('lastTranchePrice',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account)\n    ]);\n\n    const userHasAvailableFunds = trancheBalance && trancheBalance.gt(0);\n\n\n    const canUnstake = true; // !stakeCoolingPeriod || this.functionsUtil.BNify(userStakeBlock).plus(stakeCoolingPeriod).lt(blockNumber);\n    const canWithdraw = true; // !cdoCoolingPeriod || !latestHarvestBlock || this.functionsUtil.BNify(latestHarvestBlock).plus(cdoCoolingPeriod).lt(blockNumber);\n    \n    // console.log('loadData',this.props.trancheConfig.tranche,blockNumber,cdoCoolingPeriod,latestHarvestBlock,stakeCoolingPeriod,userStakeBlock,canUnstake,canWithdraw);\n\n    const availableTranches = Object.values(this.functionsUtil.getGlobalConfig(['tranches'])).map( trancheInfo => ({\n      value:trancheInfo.type,\n      icon:trancheInfo.image,\n      label:trancheInfo.name,\n      tranche:trancheInfo.type,\n      trancheConfig:this.props.tokenConfig[trancheInfo.type]\n    }));\n\n    const selectedTrancheOption = availableTranches.find( trancheInfo => trancheInfo.value === this.props.selectedTranche );\n    const selectedTranche = selectedTrancheOption.value;\n\n    const stakingRewards = this.props.trancheConfig.CDORewards.stakingRewards.filter( t => t.enabled );\n    let stakingEnabled = stakingRewards.length>0;\n    const stakeEnabled = stakingEnabled && userHasAvailableFunds;\n    const unstakeEnabled = stakedBalance && this.functionsUtil.BNify(stakedBalance).gt(0);\n\n    if (!stakingEnabled && unstakeEnabled){\n      stakingEnabled = true;\n    }\n\n    let selectedStakeAction = 'stake';\n    if (!stakeEnabled && unstakeEnabled){\n      selectedStakeAction = 'unstake';\n    }\n\n    this.setState({\n      trancheAPY,\n      canUnstake,\n      canWithdraw,\n      tokenBalance,\n      stakeEnabled,\n      tranchePrice,\n      stakedBalance,\n      stakingEnabled,\n      trancheBalance,\n      unstakeEnabled,\n      selectedTranche,\n      availableTranches,\n      selectedStakeAction,\n      selectedTrancheOption,\n      userHasAvailableFunds\n    }, () => {\n      this.loadActionData();\n    });\n  }\n\n  loadActionData(){\n    let infoBox = null;\n    let balanceProp = null;\n    let tokenConfig = null;\n    let contractInfo = null;\n    let approveEnabled = null;\n    let buttonDisabled = false;\n\n    let actionLabel = this.state.selectedAction;\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    let infoText = trancheDetails.description[this.state.selectedAction];\n\n    switch (this.state.selectedAction){\n      case 'deposit':\n        approveEnabled = true;\n        contractInfo = this.props.cdoConfig;\n        tokenConfig = this.props.tokenConfig;\n        balanceProp = this.state.tokenBalance;\n      break;\n      case 'stake':\n        actionLabel = this.state.selectedStakeAction;\n        switch (this.state.selectedStakeAction){\n          case 'stake':\n            approveEnabled = true;\n            tokenConfig = this.props.trancheConfig;\n            balanceProp = this.state.trancheBalance;\n            contractInfo = this.props.trancheConfig.CDORewards;\n          break;\n          case 'unstake':\n            approveEnabled = false;\n            tokenConfig = this.props.trancheConfig;\n            contractInfo = this.props.trancheConfig.CDORewards;\n            balanceProp = this.state.stakedBalance;\n            if (!this.state.canUnstake){\n              buttonDisabled = true;\n              infoText = trancheDetails.description.cantUnstake;\n            }\n          break;\n          default:\n          break;\n        }\n        if (this.state.stakingEnabled){\n          infoText = trancheDetails.description[this.state.selectedStakeAction];\n        } else {\n          infoText = null;\n        }\n      break;\n      case 'withdraw':\n        approveEnabled = false;\n        contractInfo = this.props.cdoConfig;\n        // tokenConfig = this.props.tokenConfig;\n        tokenConfig = this.props.trancheConfig;\n        balanceProp = this.state.trancheBalance;\n        // balanceProp = this.state.trancheBalance.times(this.state.tranchePrice);\n        // console.log('balanceProp',this.state.trancheBalance.toFixed(),this.state.tranchePrice.toFixed(),balanceProp.toFixed());\n        if (!this.state.canWithdraw){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantWithdraw;\n          // infoBox = {\n          //   text:'You need to wait 1 block from the last ',\n          //   icon:'Warning',\n          //   iconProps:{\n          //     color:'cellText'\n          //   },\n          // };\n        }\n      break;\n      default:\n      break;\n    }\n\n    const approveDescription = tokenConfig ? `To ${this.state.selectedAction} your <strong>${tokenConfig.token}</strong> you need to approve the Smart-Contract first.` : null;\n\n    // console.log('loadActionData',approveEnabled);\n\n    this.setState({\n      infoBox,\n      infoText,\n      actionLabel,\n      tokenConfig,\n      balanceProp,\n      contractInfo,\n      buttonDisabled,\n      approveEnabled,\n      approveDescription\n    })\n  }\n\n  changeInputCallback(){\n\n  }\n\n  contractApprovedCallback(){\n\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n\n    if (this.props.trancheConfig.functions[this.state.selectedAction]){\n      methodName = this.props.trancheConfig.functions[this.state.selectedAction];\n\n      if (this.state.selectedAction === 'stake'){\n        methodName = this.props.trancheConfig.functions[this.state.selectedStakeAction];\n      }\n\n      methodParams = [amount];\n    }\n\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async checkLimit(amount){\n    const trancheLimit = this.functionsUtil.BNify(this.props.tokenConfig.limit);\n    const poolSize = await this.functionsUtil.loadTrancheFieldRaw(`pool`,{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account);\n    if (poolSize.plus(amount).gt(trancheLimit)){\n      this.setState({\n        activeModal:'limit'\n      })\n      return false;\n    }\n    return true;\n  }\n\n  transactionSucceeded(){\n    this.loadData();\n    switch (this.state.selectedAction){\n      case 'stake':\n      case 'deposit':\n        this.setState({\n          activeModal:'share'\n        })\n      break;\n      default:\n      break;\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  setStakeAction(selectedStakeAction){\n    this.setState({\n      selectedStakeAction\n    });\n  }\n\n  selectTranche(trancheType){\n    // console.log('selectTranche',trancheType);\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',trancheType]);\n    if (trancheDetails){\n      this.props.selectTrancheType(trancheDetails.route);\n    }\n  }\n\n  render() {\n\n    const isStake = this.state.selectedAction === 'stake';\n    const isDeposit = this.state.selectedAction === 'deposit';\n    const isWithdraw = this.state.selectedAction === 'withdraw';\n\n    const stakingRewards = this.props.trancheConfig.CDORewards.stakingRewards.filter( t => t.enabled );\n    const trancheLimit = this.functionsUtil.formatMoney(this.functionsUtil.BNify(this.props.tokenConfig.limit),0)+' '+this.props.selectedToken;\n\n    const CustomOptionValue = props => {\n      const selectedOption = props.options.find( option => option.value === props.value );\n      if (!selectedOption){\n        return null;\n      }\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <Image\n              mr={2}\n              src={selectedOption.icon}\n              size={this.props.isMobile ? '1.6em' : '1.8em'}\n            />\n            <Text\n              fontWeight={3}\n            >\n              {props.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n      const selectProps = props.selectProps.options.find( option => option.value === props.selectProps.value.value );\n      // console.log('CustomValueContainer',props.selectProps.options,props.selectProps.value,selectProps);\n      if (!selectProps){\n        return null;\n      }\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <Image\n              mr={2}\n              src={selectProps.icon}\n              size={this.props.isMobile ? '1.6em' : '1.8em'}\n            />\n            <Text\n              fontWeight={3}\n            >\n              {selectProps.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTranches ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tranches...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n              maxWidth={['100%','42em']}\n            >\n              <Box\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select Tranche:\n                </Text>\n                <GenericSelector\n                  {...this.props}\n                  name={'tranches'}\n                  isSearchable={false}\n                  CustomOptionValue={CustomOptionValue}\n                  options={this.state.availableTranches}\n                  onChange={this.selectTranche.bind(this)}\n                  CustomValueContainer={CustomValueContainer}\n                  defaultValue={this.state.selectedTrancheOption}\n                />\n              </Box>\n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Tranche details:\n                </Text>\n                <DashboardCard\n                  cardProps={{\n                    py:1,\n                    px:3,\n                    mb:2\n                  }}\n                  isActive={false}\n                >\n                  <Flex\n                    mt={1}\n                    mb={1}\n                    width={1}\n                    style={{\n                      flexBasis:'0',\n                      flex:'1 1 0px',\n                      flexWrap:'wrap'\n                    }}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <Flex\n                      mb={[2,3]}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        fontWeight={[2,3]}\n                      >\n                        Protocol\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'protocolIcon',\n                            props:{\n                              mr:2,\n                              height:['1.4em','2em']\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'protocolName',\n                            props:{\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={[2,3]}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        fontWeight={[2,3]}\n                      >\n                        Token\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'tokenIcon',\n                            props:{\n                              mr:2,\n                              height:['1.4em','2em']\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'tokenName',\n                            props:{\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={[2,3]}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        fontWeight={[2,3]}\n                      >\n                        Pool Size\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'tranchePool',\n                            props:{\n                              decimals:2,\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        fontWeight={[2,3]}\n                      >\n                        Auto-Farming\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'autoFarming',\n                            props:{\n                              decimals:2,\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        fontWeight={[2,3]}\n                      >\n                        Staking Rewards\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'stakingRewards',\n                            props:{\n                              decimals:2,\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        fontWeight={[2,3]}\n                      >\n                        APY\n                      </Text>\n                      <Flex\n                        flexDirection={'column'}\n                        alignItems={'flex-start'}\n                        justifyContent={'flex-start'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'trancheApy',\n                            props:{\n                              decimals:2,\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                        {\n                          stakingRewards.length>0 && (\n                            <Flex\n                              width={1}\n                              flexDirection={'row'}\n                              alignItems={'flex-start'}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={2}\n                                lineHeight={'1'}\n                                color={'cellText'}\n                              >\n                                +\n                              </Text>\n                              <TrancheField\n                                {...this.props}\n                                fieldInfo={{\n                                  name:'trancheIDLELastHarvest',\n                                  props:{\n                                    decimals:4,\n                                    fontSize:1,\n                                    fontWeight:2,\n                                    lineHeight:'1',\n                                    color:'cellText'\n                                  }\n                                }}\n                                token={this.props.selectedToken}\n                                tranche={this.props.selectedTranche}\n                                tokenConfig={this.props.tokenConfig}\n                                protocol={this.props.selectedProtocol}\n                                trancheConfig={this.props.trancheConfig}\n                              />\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                </DashboardCard>\n              </Box>\n              <Box\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select Action:\n                </Text>\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={['column','row']}\n                  justifyContent={'space-between'}\n                >\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isDeposit ? 2 : 0\n                    }}\n                    caption={'Deposit'}\n                    width={[1,'32%']}\n                    imageSrc={'images/deposit.png'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'stake LP Tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isDeposit}\n                    handleClick={ e => this.setSelectedAction('deposit') }\n                  />\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isStake ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    caption={'Stake / Unstake'}\n                    imageSrc={'images/mint.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'withdraw LP tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isStake}\n                    handleClick={ e => this.setSelectedAction('stake') }\n                  />\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isWithdraw ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    caption={'Withdraw'}\n                    imageSrc={'images/upload.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'withdraw LP tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isWithdraw}\n                    handleClick={ e => this.setSelectedAction('withdraw') }\n                  />\n                </Flex>\n              </Box>\n              {\n                isStake && this.state.stakingEnabled && (\n                  <Box\n                    mb={2}\n                    width={1}\n                  >\n                    <Text mb={1}>\n                      Choose stake action:\n                    </Text>\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'space-between'}\n                    >\n                      <CardIconButton\n                        {...this.props}\n                        textProps={{\n                          fontSize:[1,2]\n                        }}\n                        cardProps={{\n                          px:3,\n                          py:2,\n                          width:0.49\n                        }}\n                        text={'Stake'}\n                        icon={'Layers'}\n                        iconColor={'deposit'}\n                        iconBgColor={'#ced6ff'}\n                        handleClick={ e => this.setStakeAction('stake') }\n                        isActive={ this.state.selectedStakeAction === 'stake' }\n                      />\n                      <CardIconButton\n                        {...this.props}\n                        textProps={{\n                          fontSize:[1,2]\n                        }}\n                        cardProps={{\n                          px:3,\n                          py:2,\n                          width:0.49\n                        }}\n                        text={'Unstake'}\n                        icon={'LayersClear'}\n                        iconColor={'redeem'}\n                        iconBgColor={'#ceeff6'}\n                        isDisabled={ !this.state.unstakeEnabled }\n                        isActive={ this.state.selectedStakeAction === 'unstake' }\n                        handleClick={ e => this.state.unstakeEnabled ? this.setStakeAction('unstake') : null }\n                      />\n                    </Flex>\n                  </Box>\n                )\n              }\n              {\n                this.state.infoText && this.props.account && (\n                  <IconBox\n                    cardProps={{\n                      p:2,\n                      mt:3,\n                      mb:2,\n                      width:1,\n                    }}\n                    isActive={true}\n                    isInteractive={false}\n                    iconProps={{\n                      size:'1.2em',\n                      color:'flashColor'\n                    }}\n                    textProps={{\n                      fontWeight:500,\n                      color:'flashColor',\n                      textAlign:'center',\n                      fontSize:['13px','15px']\n                    }}\n                    icon={'LightbulbOutline'}\n                    text={this.state.infoText}\n                  />\n                )\n              }\n              <Flex\n                width={1}\n                alignItems={'stretch'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                {\n                  isStake && !this.state.stakingEnabled ? (\n                    <DashboardCard\n                      cardProps={{\n                        p: 2,\n                        mt: 3\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          color={'cellText'}\n                          name={'DoNotDisturb'}\n                        />\n                        <Text\n                          mt={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Staking is not enabled for this Tranche.\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  ) : (\n                    <SendTxWithBalance\n                      error={null}\n                      {...this.props}\n                      buttonProps={{\n                        width:[1,0.45]\n                      }}\n                      permitEnabled={false}\n                      tokenConfig={this.state.tokenConfig}\n                      tokenBalance={this.state.balanceProp}\n                      contractInfo={this.state.contractInfo}\n                      checkLimit={this.checkLimit.bind(this)}\n                      approveEnabled={this.state.approveEnabled}\n                      buttonDisabled={this.state.buttonDisabled}\n                      callback={this.transactionSucceeded.bind(this)}\n                      approveDescription={this.state.approveDescription}\n                      changeInputCallback={this.changeInputCallback.bind(this)}\n                      contractApproved={this.contractApprovedCallback.bind(this)}\n                      getTransactionParams={this.getTransactionParams.bind(this)}\n                      action={this.functionsUtil.capitalize(this.state.actionLabel)}\n                    >\n                      {\n                        isDeposit ? (\n                          <Flex\n                            width={1}\n                            alignItems={'stretch'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <BuyModal\n                              {...this.props}\n                              showInline={true}\n                              availableMethods={[]}\n                              buyToken={this.props.selectedToken}\n                            />\n                          </Flex>\n                        ) : isStake ? (\n                          <DashboardCard\n                            cardProps={{\n                              p: 2,\n                              my: 2\n                            }}\n                          >\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Icon\n                                size={'1.8em'}\n                                name={'MoneyOff'}\n                                color={'cellText'}\n                              />\n                              <Text\n                                mt={1}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                You don't have any <strong>{this.state.tokenConfig.label}</strong> token to {this.state.selectedStakeAction}.\n                              </Text>\n                            </Flex>\n                          </DashboardCard>\n                        ) : isWithdraw && (\n                          <DashboardCard\n                            cardProps={{\n                              p: 2,\n                              my: 2\n                            }}\n                          >\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Icon\n                                size={'1.8em'}\n                                name={'MoneyOff'}\n                                color={'cellText'}\n                              />\n                              <Text\n                                mt={1}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                You don't have any {this.props.selectedToken} to withdraw.<br />If you have staked your <strong>{this.state.tokenConfig.label}</strong> tokens please unstake them to be able to withdraw your {this.props.selectedToken}.\n                            </Text>\n                            </Flex>\n                          </DashboardCard>\n                        )\n                      }\n                    </SendTxWithBalance>\n                  )\n                }\n              </Flex>\n              <LimitReachedModal\n                {...this.props}\n                limit={trancheLimit}\n                closeModal={this.resetModal}\n                isOpen={this.state.activeModal === 'limit'}\n              />\n              <ShareModal\n                confettiEnabled={true}\n                icon={`images/medal.svg`}\n                title={`Congratulations!`}\n                account={this.props.account}\n                closeModal={this.resetModal}\n                tokenName={this.props.selectedToken}\n                isOpen={this.state.activeModal === 'share'}\n                text={`You have successfully deposited in Idle!<br />Enjoy <strong>${this.state.trancheAPY ? this.state.trancheAPY.toFixed(2) : '0.00'}% APY</strong> on your <strong>${this.props.selectedToken}</strong>!`}\n                tweet={`I'm earning ${this.state.trancheAPY ? this.state.trancheAPY.toFixed(2) : '0.00'}% APY on my ${this.props.selectedToken} with @idlefinance tranches! Go to ${this.functionsUtil.getGlobalConfig(['baseURL'])}${this.props.selectedSection.route} and start earning now from your idle tokens!`}\n              />\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TrancheDetails;\n","import { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquityTranches extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    if (mobileChanged || themeModeChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n    let enabledTokens = this.props.enabledTokens;\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTranches).reduce( (enabledTokens,protocol) => {\n        const tokens = Object.keys(this.props.availableTranches[protocol]);\n        tokens.forEach( token => {\n          if (!enabledTokens.includes(token)){\n            enabledTokens.push(token);\n          }\n        });\n        return enabledTokens;\n      },[]);\n    }\n\n    const transactions = this.props.transactionsList;\n\n    const chartData = [];\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(transactions).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n          \n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Deposit':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.functionsUtil.BNify(0);\n          }\n\n          const action = tx.action;\n          const balance = amountLent;\n          const timeStamp = parseInt(tx.timeStamp);\n          const tranchePrice = this.functionsUtil.BNify(tx.tranchePrice);\n          const trancheTokens = this.functionsUtil.BNify(tx.trancheTokens);\n\n          if (!tranchePrice.isNaN() && !tranchePrice.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              timeStamp,\n              tokenAmount,\n              tranchePrice,\n              trancheTokens\n            });\n          }\n        });\n      }\n    });\n\n    // console.log('tokensBalance',tokensBalance);\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    const currTimestamp = parseInt(Date.now()/1000)+86400;\n\n    const tokensData = {};\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // tokensData[token] = await this.functionsUtil.getTokenApiData(this.props.availableTokens[token].address,isRisk,firstTxTimestamp,null,false,3600);\n      tokensData[token] = [];\n    });\n\n    const trancheTokenBalance = {};\n\n    if (!firstTxTimestamp){\n      firstTxTimestamp = currTimestamp;\n    }\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds){\n\n      const foundBalances = {};\n      const tokensBalances = {};\n      if (timeStamp > currTimestamp){\n        timeStamp = currTimestamp;\n      }\n      // timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach(token => {\n\n        let lastTokenData = null;\n        const lastTokenDataUnfiltered = Object.values(tokensData[token]).pop();\n        const filteredTokenData = tokensData[token].filter(tx => (tx.timestamp>=prevTimestamp && tx.timestamp<=timeStamp));\n        if (filteredTokenData && filteredTokenData.length){\n          lastTokenData = filteredTokenData.pop();\n        }\n\n        if (!trancheTokenBalance[token]){\n          trancheTokenBalance[token] = this.functionsUtil.BNify(0);\n        }\n\n        const tokenDecimals = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'decimals']);\n        let filteredBalances = tokensBalance[token].filter(tx => (tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n        \n        if (!filteredBalances.length){\n          if (prevBalances && prevBalances[token]){\n            filteredBalances = prevBalances[token];\n            const lastFilteredTx = Object.assign([],filteredBalances).pop();\n            const currentBalance = parseFloat(lastFilteredTx.balance);\n\n            // Take idleToken price from API and calculate new balance\n            if (currentBalance>0 && timeStamp>firstTxTimestamp && lastTokenData){\n              const trancheTokens = trancheTokenBalance[token];\n              const tranchePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.tranchePrice,tokenDecimals);\n              let newBalance = trancheTokens.times(tranchePrice);\n\n              // Set new balance and tranchePrice\n              lastFilteredTx.balance = newBalance;\n              lastFilteredTx.tranchePrice = tranchePrice;\n              filteredBalances = [lastFilteredTx];\n            }\n          } else {\n            filteredBalances = [{\n              balance:this.functionsUtil.BNify(0),\n              tranchePrice:this.functionsUtil.BNify(0)\n            }];\n          }\n        } else {\n          filteredBalances.forEach(tx => {\n            switch (tx.action){\n              case 'Deposit':\n                trancheTokenBalance[token] = trancheTokenBalance[token].plus(tx.trancheTokens);\n              break;\n              default:\n                trancheTokenBalance[token] = trancheTokenBalance[token].minus(tx.trancheTokens);\n                if (trancheTokenBalance[token].lt(0)){\n                  trancheTokenBalance[token] = this.functionsUtil.BNify(0);\n                }\n              break;\n            }\n          });\n        }\n\n        const lastTx = Object.assign([],filteredBalances).pop();\n        // let lastTxBalance = this.functionsUtil.BNify(lastTx.balance);\n        let lastTxBalance = trancheTokenBalance[token].times(lastTx.tranchePrice);\n\n        if (lastTxBalance.gt(0)){\n          // Convert token balance to USD\n          let tokenUsdConversionRate = null;\n          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n          if (!this.props.chartToken && conversionRateField){\n            const conversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : (lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null);\n            if (conversionRate){\n              tokenUsdConversionRate = this.functionsUtil.fixTokenDecimals(conversionRate,18);\n              if (tokenUsdConversionRate.gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n          }\n          \n          tokensBalances[token] = lastTxBalance;\n          aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n        }\n\n        foundBalances[token] = filteredBalances;\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || (momentDate.isSameOrAfter(startDate) && momentDate.isSameOrBefore(new Date(),'day'))){\n        \n        // if (momentDate.isAfter(new Date(),'day')){\n        //   momentDate = this.functionsUtil.strToMoment(new Date());\n        // }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n\n        // console.log(timeStamp,formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken,'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    // console.log('PortfolioEquityTranches',chartData);\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        format: '%b %d',\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        legendPosition: 'middle',\n        tickValues:'every '+daysFrequency+' days'\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      areaOpacity:this.props.themeMode === 'light' ? 0.1 : 0.5,\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:this.props.theme.colors.legend,\n              fontFamily:this.props.theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            (typeof point.data.balances === 'object' && Object.keys(point.data.balances).length>0) &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquityTranches;","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheField from '../TrancheField/TrancheField';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Heading, Text, Tooltip, Icon } from \"rimble-ui\";\nimport PortfolioEquityTranches from '../PortfolioEquityTranches/PortfolioEquityTranches';\n\nclass FundsOverviewTranche extends Component {\n\n  state = {\n    // govTokensAprs:null,\n    aggregatedValues:[],\n    govTokensTotalApr:null,\n    govTokensUserBalance:null,\n    govTokensDistribution:null,\n    govTokensTotalBalance:null,\n    govTokensTotalAprTooltip:null,\n    idleTokenUserDistribution:null,\n    govTokensDistributionTooltip:null,\n    govTokensTotalBalanceTooltip:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  idleGovToken = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.idleGovToken = this.functionsUtil.getIdleGovToken();\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n\n    /*\n    const govTokenAvailableTokens = {};\n    govTokenAvailableTokens[this.props.selectedToken] = this.props.tokenConfig;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const [\n      // govTokensAprs,\n      idleTokenUserDistribution,\n      govTokensUserBalance,\n      apy,\n      depositTimestamp,\n      days\n    ] = await Promise.all([\n      // this.functionsUtil.getGovTokensAprs(this.props.selectedToken,this.props.tokenConfig),\n      this.idleGovToken.getUserDistribution(this.props.account,govTokenAvailableTokens,true),\n      this.functionsUtil.getGovTokensUserBalances(this.props.account,govTokenAvailableTokens,null),\n      this.functionsUtil.loadTrancheField('apy',this.props.selectedToken,this.props.tokenConfig,this.props.account,false),\n      this.functionsUtil.loadTrancheField('depositTimestamp',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n      this.functionsUtil.loadTrancheField('daysFirstDeposit',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n    ]);\n\n    let avgAPY = await this.functionsUtil.getAvgAPYStats(this.props.tokenConfig.address,isRisk,depositTimestamp);\n\n    if (!avgAPY || this.functionsUtil.BNify(avgAPY).lte(0)){\n      avgAPY = apy;\n    }\n\n    const govTokensTotalBalance = govTokensUserBalance ? Object.values(govTokensUserBalance).reduce( (totBalance,govTokenBalance) => {\n      return totBalance.plus(this.functionsUtil.BNify(govTokenBalance));\n    },this.functionsUtil.BNify(0)) : null;\n\n    const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n      const balance = govTokensUserBalance[govToken];\n      if (balance.gt(0)){\n        return `+${balance.toFixed(2)} ${govToken}`;\n      } else {\n        return null;\n      }\n    }).filter(v => (v !== null)) : null;\n\n    const aggregatedValues = [\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Avg APY',\n          desc:this.functionsUtil.getGlobalConfig(['messages','apyLong']),\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (avgAPY ? avgAPY.toFixed(2)+'%' : '0.00%') }}\n              />\n            </Flex>\n          )\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Current Allocation',\n          children:(\n            <Flex\n              width={1}\n              id={'allocationChart'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n            >\n              <TrancheField\n                {...this.props}\n                showLoader={true}\n                fieldInfo={{\n                  name:'allocationChart'\n                }}\n                parentId={'allocationChart'}\n                token={this.props.selectedToken}\n                tokenConfig={this.props.tokenConfig}\n              />\n            </Flex>\n          ),\n          label:'',\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Days since first deposit',\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (days ? parseInt(days) : '-') }}\n              />\n            </Flex>\n          )\n        }\n      }\n    ];\n\n    this.setState({\n      // govTokensAprs,\n      aggregatedValues,\n      // govTokensTotalApr,\n      govTokensUserBalance,\n      govTokensTotalBalance,\n      // govTokensTotalAprTooltip,\n      idleTokenUserDistribution,\n      govTokensTotalBalanceTooltip\n    });\n    */\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        flexDirection={'column'}\n      >\n        {\n          this.state.aggregatedValues.length>0 && \n            <Flex\n              width={1}\n              mb={[0,3]}\n              mt={[2,0]}\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.aggregatedValues.map((v,i) => (\n                  <Flex\n                    {...v.flexProps}\n                    flexDirection={'column'}\n                    key={`aggregatedValue_${i}`}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        py:[2,3],\n                        mb:[3,0]\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        {\n                          v.props.children ? v.props.children : (\n                            <Text\n                              lineHeight={1}\n                              fontWeight={[3,4]}\n                              color={'copyColor'}\n                              fontFamily={'counter'}\n                              fontSize={[4,'1.7em']}\n                              dangerouslySetInnerHTML={{ __html: v.props.value }}\n                            >\n                            </Text>\n                          )\n                        }\n                        <Flex\n                          mt={2}\n                          width={1}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <Text\n                            fontWeight={2}\n                            fontSize={[1,2]}\n                            color={'cellText'}\n                          >\n                            {v.props.title}\n                          </Text>\n                          {\n                            v.props.desc && \n                              <Tooltip\n                                placement={'bottom'}\n                                message={v.props.desc}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                          }\n                        </Flex>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                ))\n              }\n            </Flex>\n        }\n        <DashboardCard\n          cardProps={{\n            px:2,\n            py:3\n          }}\n        >\n          {\n            this.props.transactionsList && this.props.transactionsList.length>0 && (\n              <Flex\n                width={1}\n                ml={[0,3]}\n                id={\"funds-overview\"}\n              >\n                <PortfolioEquityTranches\n                  {...this.props}\n                  chartHeight={350}\n                  parentId={'funds-overview'}\n                  chartToken={this.props.selectedToken}\n                  enabledTokens={[this.props.selectedToken]}\n                  frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                />\n              </Flex>\n            )\n          }\n          <Flex\n            width={1}\n            flexDirection={['column','row']}\n          >\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Deposited\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'trancheDeposited',\n                  props:{\n                    decimals:7,\n                    fontWeight:300,\n                    maxPrecision:8,\n                    fontSize:['1.8em','1.9em'],\n                    color:this.props.theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Staked Amount\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'trancheStaked',\n                  props:{\n                    decimals:7,\n                    fontWeight:300,\n                    maxPrecision:8,\n                    fontSize:['1.8em','1.9em'],\n                    color:this.props.theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Redeemable\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'trancheRedeemableWithStaked',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      color:this.props.theme.colors.counter,\n                      fontSize: this.props.isMobile ? '1.8em' : '1.9em',\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              <Flex\n                width={1}\n                mt={'-8px'}\n                justifyContent={'center'}\n              >\n                <TrancheField\n                  {...this.props}\n                  addTokenName={false}\n                  fieldInfo={{\n                    name:'earningsPerc',\n                    props:{\n                      fontSize:1,\n                      fontWeight:2,\n                      color:'cellText',\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    }\n                  }}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Earnings\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'earningsCounter',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                      color:this.props.theme.colors.counter\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              {\n                this.state.govTokensTotalBalanceTooltip && this.state.govTokensTotalBalanceTooltip.length>0 && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      this.state.govTokensTotalBalanceTooltip.map((govTokenBalance,govTokenIndex) => (\n                        <Text\n                          fontSize={1}\n                          lineHeight={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                          mt={govTokenIndex ? 1 : 0}\n                          key={`govToken_${govTokenIndex}`}\n                        >\n                          {govTokenBalance}\n                        </Text>\n                      ))\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Fees\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'feesCounter',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                      color:this.props.theme.colors.counter\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Realized APY\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'realizedApy',\n                  props:{\n                    decimals:2,\n                    fontWeight:300,\n                    fontSize:['1.8em','1.9em'],\n                    color:this.props.theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              {\n                this.state.idleTokenUserDistribution && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      mt={1}\n                      fontSize={1}\n                      lineHeight={1}\n                      fontWeight={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      {this.state.idleTokenUserDistribution.toFixed(4)} {this.idleGovToken.tokenName}/{this.idleGovToken.tokenConfig.distributionFrequency}\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n          </Flex>\n        </DashboardCard>\n      </Flex>\n    );\n  }\n}\n\nexport default FundsOverviewTranche;","import Title from '../Title/Title';\nimport { Button, Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport CustomList from '../CustomList/CustomList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass StakingRewardsTranche extends Component {\n\n  state = {\n    stakingRewards:null,\n    stakingRewardsRows:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadUserRewards();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const portfolioChanged = JSON.stringify(prevProps.portfolio) !== JSON.stringify(this.props.portfolio);\n    const trancheConfigChanged = JSON.stringify(prevProps.trancheConfig) !== JSON.stringify(this.props.trancheConfig);\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (accountChanged || trancheConfigChanged || portfolioChanged || transactionsChanged){\n      this.loadUserRewards();\n    }\n  }\n\n  async loadUserRewards(){\n    if (!this.props.account || !this.props.trancheConfig || !this.props.portfolio){\n      return false;\n    }\n\n    const [\n      stakingRewards,\n      trancheBalance,\n      rewardTokensInfo,\n      trancheStakedAmount\n    ] = await Promise.all([\n      this.functionsUtil.getTrancheStakingRewards(this.props.account,this.props.trancheConfig),\n      this.functionsUtil.getTokenBalance(this.props.trancheConfig.name,this.props.account,false),\n      this.functionsUtil.getTrancheRewardTokensInfo(this.props.tokenConfig,this.props.trancheConfig),\n      this.functionsUtil.getTrancheStakedBalance(this.props.trancheConfig.CDORewards.name,this.props.account,this.props.trancheConfig.CDORewards.decimals)\n    ]);\n\n    const trancheBalanceInfo = this.props.portfolio.tranchesBalance.find( p => p.token === this.props.token && p.protocol === this.props.protocol && p.tranche === this.props.tranche );\n    \n    const stakingRewardsRows = [];\n    await this.functionsUtil.asyncForEach(Object.keys(stakingRewards), async (rewardToken) => {\n      const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',rewardToken]);\n      const rewardTokenInfo = rewardTokensInfo[rewardToken];\n      const tokenBalance = await this.functionsUtil.getTokenBalance(rewardToken,this.props.account);\n      let distributionSpeed = rewardTokenInfo ? rewardTokenInfo.lastAmount : null;\n      const tokenAmount = !this.functionsUtil.BNify(stakingRewards[rewardToken]).isNaN() ? this.functionsUtil.BNify(stakingRewards[rewardToken]) : this.functionsUtil.BNify(0);\n      if (trancheBalanceInfo && distributionSpeed){\n        distributionSpeed = distributionSpeed.times(trancheBalanceInfo.poolShare);\n      }\n      stakingRewardsRows.push({\n        token:rewardToken,\n        staked:trancheStakedAmount,\n        balance:tokenBalance.toFixed(8),\n        reedemable:tokenAmount.toFixed(8),\n        trancheBalance:this.functionsUtil.integerValue(trancheBalance),\n        tokenIcon:tokenConfig.icon || `images/tokens/${rewardToken}.svg`,\n        distributionSpeed:distributionSpeed ? distributionSpeed.toFixed(8)+` ${rewardToken} (last harvest)` : this.functionsUtil.BNify(0).toFixed(8)\n      });\n    });\n\n    this.setState({\n      stakingRewardsRows\n    });\n  }\n\n  claimCallback(tx){\n    this.loadUserRewards();\n  }\n\n  stakeCallback(tx){\n    this.loadUserRewards();\n  }\n\n  render() {\n    return (\n      this.state.stakingRewardsRows ?\n        <Flex\n          mb={[0,4]}\n          width={1}\n          flexDirection={'column'}\n          id={'funds-overview-container'}\n        >\n          <Title my={[3,4]}>Staking Rewards</Title>\n          <CustomList\n            rows={this.state.stakingRewardsRows}\n            cols={[\n              {\n                title:'TOKEN',\n                props:{\n                  width:[0.18,0.16]\n                },\n                fields:[\n                  {\n                    type:'image',\n                    props:{\n                      mr:2,\n                      size:this.props.isMobile ? '1.2em' : '1.8em'\n                    },\n                    path:['tokenIcon']\n                  },\n                  {\n                    type:'text',\n                    path:['token'],\n                  }\n                ]\n              },\n              {\n                mobile:false,\n                title:'BALANCE',\n                props:{\n                  width:[0.27,0.24],\n                  justifyContent:['center','flex-start']\n                },\n                fields:[\n                  {\n                    type:'text',\n                    path:['balance'],\n                    props:{\n                      decimals: this.props.isMobile ? 4 : 8\n                    }\n                  },\n                ]\n              },\n              {\n                title:'REDEEMABLE',\n                desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                props:{\n                  width:[0.29,0.24],\n                  justifyContent:['center','flex-start']\n                },\n                fields:[\n                  {\n                    type:'text',\n                    path:['reedemable'],\n                    props:{\n                      decimals: this.props.isMobile ? 4 : 8\n                    }\n                  },\n                ]\n              },\n              {\n                title:'DISTRIBUTION',\n                desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                props:{\n                  width:[0.29,0.24],\n                },\n                fields:[\n                  {\n                    type:'text',\n                    path:['distributionSpeed'],\n                    props:{\n                      decimals: this.props.isMobile ? 4 : 8\n                    }\n                  }\n                ]\n              },\n              {\n                title:'',\n                props:{\n                  width:[0.26,0.16],\n                },\n                parentProps:{\n                  width:1\n                },\n                fields:[\n                  {\n                    funcProps:{\n                      componentProps:{\n                        disabled:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? true : false ),\n                      },\n                      // value:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? 'stake' : 'claim') : 'claim'),\n                      // action:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? 'Stake' : 'Claim') : 'Claim'),\n                      // methodName:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? 'stake' : 'claim') : 'claim'),\n                      // transactionParams:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? [this.functionsUtil.BNify(props.row.trancheBalance).toFixed()] : []) : []),\n                      // callback:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? this.stakeCallback.bind(this) : this.claimCallback.bind(this)) : this.claimCallback.bind(this))\n                    },\n                    fieldComponent:ExecuteTransaction,\n                    props:{\n                      params:[],\n                      parentProps:{\n                        width:1\n                      },\n                      Component:Button,\n                      componentProps:{\n                        style:{\n                          width:'100%'\n                        },\n                        value:'Claim',\n                        borderRadius:4,\n                        mainColor:'redeem',\n                        size:this.props.isMobile ? 'small' : 'medium'\n                      },\n                      value:'Claim',\n                      action:'claim',\n                      methodName:'claim',\n                      callback:this.claimCallback.bind(this),\n                      contractName:this.props.trancheConfig.CDORewards.name\n                    }\n                  }\n                ]\n              }\n            ]}\n            {...this.props}\n          />\n        </Flex>\n      : this.props.children || null\n    );\n  }\n}\n\nexport default StakingRewardsTranche;\n","import Title from '../Title/Title';\nimport { Box, Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport GenericFaqs from '../GenericFaqs/GenericFaqs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheDetails from '../TrancheDetails/TrancheDetails';\n// import TrancheWelcome from '../TrancheWelcome/TrancheWelcome';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport TrancheDepositRedeem from '../TrancheDepositRedeem/TrancheDepositRedeem';\nimport FundsOverviewTranche from '../FundsOverviewTranche/FundsOverviewTranche';\nimport StakingRewardsTranche from '../StakingRewardsTranche/StakingRewardsTranche';\n\nclass TranchePage extends Component {\n\n  state = {\n    transactions:[],\n    userHasFunds:false,\n    componentLoaded:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTransactions();\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const portfolioChanged = (this.props.portfolio && !prevProps.portfolio) || JSON.stringify(this.props.portfolio) !== JSON.stringify(prevProps.portfolio);\n    if (portfolioChanged){\n      this.loadTransactions();\n    }\n  }\n\n  loadTransactions(){\n    const transactions = this.props.portfolio ? this.props.portfolio.transactions.filter( t => t.protocol.toLowerCase() === this.props.selectedProtocol.toLowerCase() && t.token.toLowerCase() === this.props.selectedToken.toLowerCase() && (!this.props.trancheType || t.tranche === this.props.trancheType) ) : [];\n\n    // console.log('loadTransactions',this.props.selectedProtocol,this.props.selectedToken,this.props.trancheType,transactions);\n    const componentLoaded = true;\n\n    // console.log('portfolio',this.props.portfolio);\n    const userHasFunds = this.props.portfolio && this.props.portfolio.tranchesBalance.find( balanceInfo => balanceInfo.protocol.toLowerCase() === this.props.selectedProtocol.toLowerCase() && balanceInfo.token.toLowerCase() === this.props.selectedToken.toLowerCase() && (!this.props.trancheType || balanceInfo.tranche.toLowerCase() === this.props.trancheType.toLowerCase()) ) ? true : false;\n\n    this.setState({\n      transactions,\n      userHasFunds,\n      componentLoaded\n    });\n  }\n\n  render() {\n    const tranchesDetails = this.functionsUtil.getGlobalConfig(['tranches']);\n    const filteredTranchesTypes = Object.keys(tranchesDetails).filter( trancheType => !this.props.trancheType || this.props.trancheType === trancheType );\n    return (\n      <Box\n        mb={4}\n        width={1}\n      >\n        <Title\n          mb={3}\n        >\n          {this.functionsUtil.capitalize(this.props.selectedProtocol)} - {this.props.selectedToken} - {this.props.trancheDetails ? this.props.trancheDetails.name : 'Tranches'} \n        </Title>\n        {\n          /*\n          !this.props.trancheType ? (\n            <TrancheWelcome\n              {...this.props}\n              tokenConfig={this.props.tokenConfig}\n              selectTrancheType={this.props.selectTrancheType}\n            />\n          ) : (\n          */\n            <Flex\n              mt={2}\n              width={1}\n              flexDirection={['column','row']}\n              justifyContent={this.props.trancheType ? 'center' : 'space-between'}\n            >\n              {\n                filteredTranchesTypes.map( trancheType => (\n                  <Flex\n                    mb={[3,0]}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    key={`tranche_${trancheType}`}\n                    width={[1,(1/filteredTranchesTypes.length)-0.02]}\n                  >\n                    {\n                      this.props.trancheType ? (\n                        <TrancheDepositRedeem\n                          {...this.props}\n                          selectedTranche={trancheType}\n                          cdoConfig={this.props.tokenConfig.CDO}\n                          showSelectButton={!this.props.trancheType}\n                          selectTrancheType={this.props.selectTrancheType}\n                          trancheConfig={this.props.tokenConfig[trancheType]}\n                        />\n                      ) : (\n                        <TrancheDetails\n                          {...this.props}\n                          selectedTranche={trancheType}\n                          cdoConfig={this.props.tokenConfig.CDO}\n                          showSelectButton={!this.props.trancheType}\n                          selectTrancheType={this.props.selectTrancheType}\n                          trancheConfig={this.props.tokenConfig[trancheType]}\n                        />\n                      )\n                    }\n                  </Flex>\n                ))\n              }\n            </Flex>\n            /*\n          )\n        */\n        }\n        {\n          this.state.componentLoaded && this.props.account && this.state.userHasFunds && this.props.trancheType &&\n            <Flex\n              width={1}\n              mb={[0,4]}\n              flexDirection={'column'}\n              id={'funds-overview-container'}\n            >\n              <Title my={[3,4]}>Funds Overview</Title>\n              <FundsOverviewTranche\n                {...this.props}\n                token={this.props.selectedToken}\n                tranche={this.props.trancheType}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                transactionsList={this.state.transactions}\n                trancheConfig={this.props.tokenConfig[this.props.trancheType]}\n              />\n            </Flex>\n        }\n        {\n          this.state.componentLoaded && this.props.account && this.state.userHasFunds && this.props.trancheType &&\n            <StakingRewardsTranche\n              {...this.props}\n              token={this.props.selectedToken}\n              tranche={this.props.trancheType}\n              tokenConfig={this.props.tokenConfig}\n              protocol={this.props.selectedProtocol}\n              transactionsList={this.state.transactions}\n              trancheConfig={this.props.tokenConfig[this.props.trancheType]}\n            />\n        }\n        {\n          this.props.account && this.state.transactions && this.state.transactions.length>0 && \n            <Flex\n              width={1}\n              mb={[3,4]}\n              id={'transactions'}\n              flexDirection={'column'}\n            >\n              <Title my={[3,4]}>Transactions</Title>\n              <TransactionsList\n                {...this.props}\n                enabledTokens={[this.props.selectedToken]}\n                transactionsList={this.state.transactions}\n                availableActions={this.state.transactions.reduce( (availableActions,t) => {\n                  availableActions[t.action.toLowerCase()] = t.action;\n                  return availableActions;\n                },{})}\n                cols={[\n                  {\n                    title: this.props.isMobile ? '' : 'HASH',\n                    props:{\n                      width:[0.13,0.18]\n                    },\n                    fields:[\n                      {\n                        name:'icon',\n                        props:{\n                          mr:[0,2]\n                        }\n                      },\n                      {\n                        name:'hash',\n                        mobile:false\n                      }\n                    ]\n                  },\n                  {\n                    title:'ACTION',\n                    mobile:false,\n                    props:{\n                      width:0.12,\n                    },\n                    fields:[\n                      {\n                        name:'action'\n                      }\n                    ]\n                  },\n                  {\n                    title:'DATE',\n                    props:{\n                      width:[0.27,0.15],\n                    },\n                    fields:[\n                      {\n                        name:'date'\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'STATUS',\n                    props:{\n                      width:[0.18,0.16],\n                      justifyContent:['center','flex-start']\n                    },\n                    fields:[\n                      {\n                        name:'statusIcon',\n                        props:{\n                          mr:[0,2]\n                        }\n                      },\n                      {\n                        mobile:false,\n                        name:'status'\n                      }\n                    ]\n                  },\n                  {\n                    title:'AMOUNT',\n                    props:{\n                      width:[0.23,0.11],\n                    },\n                    fields:[\n                      {\n                        name:'amount'\n                      },\n                    ]\n                  },\n                  {\n                    title:'PROTOCOL',\n                    props:{\n                      width:[0.21, 0.14],\n                    },\n                    fields:[\n                      {\n                        type:'image',\n                        name:'custom',\n                        path:['protocolIcon'],\n                        props:{\n                          mr:2,\n                          height:['1.4em','2em']\n                        }\n                      },\n                      {\n                        type:'text',\n                        mobile:false,\n                        name:'custom',\n                        path:['protocol']\n                      }\n                    ]\n                  },\n                  {\n                    title:'ASSET',\n                    props:{\n                      width:[0.16,0.14],\n                      justifyContent:['center','flex-start']\n                    },\n                    fields:[\n                      {\n                        name:'tokenIcon',\n                        props:{\n                          mr:[0,2],\n                          height:['1.4em','1.6em']\n                        }\n                      },\n                      {\n                        mobile:false,\n                        name:'tokenName'\n                      },\n                    ]\n                  },\n                ]}\n              />\n            </Flex>\n        }\n        {\n          this.props.trancheType && (\n            <Flex\n              width={1}\n              id={'faqs'}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Title\n                my={3}\n              >\n                Frequently asked questions\n              </Title>\n              <Flex\n                width={[1,0.5]}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <GenericFaqs\n                  showSections={false}\n                  questions={{\n                    '':[\n                      {\n                        q: 'Is there a locking period?',\n                        a: `There are no locking period or epochs and users are free to enter and exit at any time. The interest earned (and governance tokens, after being partially sold in the market) will be split between the two classes according to a predefined ratio called trancheAPRSplitRatio (eg 20% interest to Senior tranche holders and 80% to Junior tranche). Hence, the rate is variable for both classes of tranches.`\n                      },\n                      {\n                        q: 'How the APY is determined?',\n                        a: `The base APY, before being splitted between tranches, is provided by the underlying strategy that takes into account the reinvestment of the accrued governance tokens (except for eventual IDLE rewards). The actual APY of each tranche class is determined by the ratio between the current underlying TVL of Senior and Junior tranches (ie APY = share of yield allocated to senior tranches / Senior TVL). The APY has to be considered net of fees. For more info <a href=\"https://github.com/Idle-Labs/idle-tranches#idle-dynamic-tranches\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.link}\">view the readme</a>`\n                      },\n                      {\n                        q: 'What happens in case of hack?',\n                        a: `In case of hack, an emergency shutdown can be triggered (by both the guardian, which would be a multi-sig wallet, and the owner which will be the Idle governance) in order to pause both deposits and redeems.<br />The redistribution of remaining funds can happens selectively, by allowing only Senior tranche holders to withdraw first directly in the main contract, or through a separate contract for more complex cases and resolutions (managed by the Idle governance).`\n                      },\n                      {\n                        q: 'How are fees collected?',\n                        a: `Fees collected at each harvest event. When the strategy auto-reinvest accrued tokens, Idle protocol charges a 10% performance fee. Renevues get routed to FeeCollector address.`\n                      },\n                      {\n                        q: 'What are staking rewards?',\n                        a: `To keep a good ratio between Senior and Junior tranches and an healthy APY part of farmed governance tokens (eg IDLE) are redistributed to users who stakes their tranche tokens in specific tranche rewards contracts.`\n                      } \n                    ]\n                  }}\n                />\n              </Flex>\n            </Flex>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default TranchePage;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheField from '../TrancheField/TrancheField';\n\nclass TranchesList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledProtocols = this.props.enabledProtocols;\n    if (!enabledProtocols || !enabledProtocols.length){\n      enabledProtocols = Object.keys(this.props.availableTranches);\n    }\n\n    return (\n      <Flex id=\"tranches-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"tranches-list\" flexDirection={'column'}>\n          {\n            enabledProtocols.map(protocol => {\n              const protocolConfig = this.props.availableTranches[protocol];\n              if (!protocolConfig){\n                return null;\n              }\n              const tranche = this.props.trancheType || null;\n              return Object.keys(protocolConfig).map( token => (\n                <TableRow\n                  {...this.props}\n                  token={token}\n                  tranche={tranche}\n                  protocol={protocol}\n                  rowId={`tranche-col-${protocol}`}\n                  tokenConfig={protocolConfig[token]}\n                  cardId={`tranche-card-${protocol}`}\n                  key={`tranche-${protocol}-${token}`}\n                  fieldComponent={this.props.fieldComponent || TrancheField}\n                />\n              ))\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TranchesList;\n","import React, { Component } from \"react\";\nimport RoundButton from \"../RoundButton/RoundButton\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport TrancheField from \"../TrancheField/TrancheField\";\nimport { Box, Flex, Icon, Text, Image } from \"rimble-ui\";\n\n//import DashboardCard from \"../DashboardCard/DashboardCard\";\n\nclass Base extends Component {\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const trancheDetails = this.props.trancheDetails;\n    const strategyInfo = this.functionsUtil.getGlobalConfig([\n      \"strategies\",\n      \"tranches\"\n    ]);\n\n    const tokenConfig =\n      this.props.tokenConfig ||\n      this.props.availableTranches[strategyInfo.protocol][strategyInfo.token];\n\n    return (\n      <Box my={[3, 0]} boxShadow={1} width={[1, 0.49]} borderRadius={2}>\n        <Flex\n          height={\"100%\"}\n          p={0}\n          mx={0}\n          borderColor={\"transparent\"}\n          border={\"0\"}\n          borderRadius={2}\n          overflow={\"hidden\"}\n          flexDirection={\"column\"}\n          backgroundColor={\"cardBg\"}\n          justifyContent={[\n            \"center\",\n            trancheDetails.type === \"AA\" ? \"left\" : \"right\"\n          ]}\n        >\n          <Flex\n            width={1}\n            borderBottom={`1px solid ${this.props.theme.colors.divider2}`}\n          >\n            <Flex pb={2} mx={2} my={3} flexDirection={\"column\"}>\n              <Flex mt={3} alignItems={\"center\"}>\n                <Image\n                  ml={3}\n                  mr={1}\n                  src={trancheDetails.image}\n                  alt={\"random unsplash image\"}\n                  size={this.props.isMobile ? \"2em\" : \"2.4em\"}\n                />\n                <Flex mx={1}>\n                  <Text\n                    ml={[2, 0]}\n                    fontWeight={4}\n                    fontSize={[4, 5]}\n                    lineHeight={1}\n                  >\n                    {trancheDetails.name}\n                  </Text>\n                </Flex>\n              </Flex>\n              <Flex\n                ml={5}\n                mr={3}\n                mt={3}\n                alignItems={\"flex-start\"}\n                flexDirection={\"column\"}\n              >\n                <Flex mr={1} flexDirection={\"row\"} alignItems={\"baseline\"}>\n                  <TrancheField\n                    fieldInfo={{\n                      name: `${trancheDetails.baseName}Apy`,\n                      showTooltip: false,\n                      props: {\n                        decimals: 2,\n                        fontWeight: 4,\n                        lineHeight: \"1\",\n                        fontSize: [3, 4],\n                        textAlign: \"center\",\n                        flexProps: {\n                          justifyItems: \"flex-end\"\n                        },\n                        color: this.props.trancheDetails.color.hex\n                      }\n                    }}\n                    {...this.props}\n                    tokenConfig={tokenConfig}\n                    token={strategyInfo.token}\n                    tranche={strategyInfo.tranche}\n                    protocol={strategyInfo.protocol}\n                  />\n                  <Text\n                    my={1}\n                    ml={[2, 3]}\n                    fontSize={1}\n                    lineHeight={\"1\"}\n                    textAlign={\"left\"}\n                    color={\"cellText\"}\n                  >\n                    Current APY (variable)\n                  </Text>\n                </Flex>\n                {/*\n                <TrancheField\n                  fieldInfo={{\n                    showLoader:false,\n                    name:'trancheIDLEDistribution',\n                    props:{\n                      decimals:2,\n                      fontWeight:2,\n                      fontSize:[0,1],\n                      color:'cellText',\n                      textAlign:'center',\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    },\n                  }}\n                  {...this.props}\n                  tokenConfig={tokenConfig}\n                  token={strategyInfo.token}\n                  trancheConfig={tokenConfig.AA}\n                  tranche={strategyInfo.tranche}\n                  protocol={strategyInfo.protocol}\n                />\n                */}\n                <Text\n                  mt={3}\n                  fontWeight={2}\n                  fontSize={[1, 2]}\n                  textAlign={\"left\"}\n                  lineHeight={\"1.5\"}\n                  color={\"copyColor\"}\n                >\n                  {trancheDetails.description.long}\n                </Text>\n              </Flex>\n            </Flex>\n          </Flex>\n          <Flex bg={\"cardBgContrast\"} height={\"100%\"} flexDirection={\"column\"}>\n            <Flex mt={3} my={3} pl={2} width={1} flexDirection={\"column\"}>\n              {trancheDetails.features.map((feature, index) => (\n                <Flex\n                  mb={2}\n                  my={1}\n                  px={2}\n                  mt={[2, 1]}\n                  alignItems={\"center\"}\n                  flexDirection={\"row\"}\n                  key={`feature_${index}`}\n                >\n                  <Icon\n                    mr={2}\n                    ml={3}\n                    name={\"Done\"}\n                    color={\"tick\"}\n                    size={this.props.isMobile ? \"1.6em\" : \"1.8em\"}\n                  />\n                  <Text ml={[2, 1]} fontSize={[1, 2]} fontWeight={\"500\"}>\n                    {feature}\n                  </Text>\n                </Flex>\n              ))}\n            </Flex>\n            <Flex\n              height={\"100%\"}\n              alignItems={\"flex-end\"}\n              width={1}\n              justifyContent={\"center\"}\n            >\n              <RoundButton\n                buttonProps={{\n                  my: 3,\n                  width: 0.85,\n                  fontSize: 2,\n                  contrastColor: \"white\",\n                  mainColor: trancheDetails.color.hex\n                }}\n                handleClick={e =>\n                  this.props.selectTrancheType(trancheDetails.route)\n                }\n              >\n                {this.props.tokenConfig\n                  ? `Go to ${trancheDetails.name}`\n                  : `Enter the ${trancheDetails.name}`}\n              </RoundButton>\n            </Flex>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default Base;\n","import React, { Component } from \"react\";\nimport { Link, Flex, Text, Image } from \"rimble-ui\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\n\n//import DashboardCard from \"../DashboardCard/DashboardCard\";\n\nclass TrancheFlash extends Component {\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const flashData = this.functionsUtil.getGlobalConfig([\"tranchflash\"]);\n    return (\n      <Flex\n        width={1}\n        mx={4}\n        flexDirection={[\"column\", \"row\"]}\n        justifyContent={\"center\"}\n      >\n        <Flex mx={2} my={[2, 4]} width={[1, 0.4]} flexDirection={\"column\"}>\n          <Flex justifyContent={\"left\"} my={3} width={[1, 0.7]}>\n            <Text\n              bold={\"true\"}\n              fontWeight={4}\n              lineHeight={1}\n              color={\"white\"}\n              fontSize={[5, 6]}\n              textAlign={\"left\"}\n            >\n              {flashData.subtitle}\n            </Text>\n          </Flex>\n          <Flex\n            mt={2}\n            width={1}\n            mb={[2, 3]}\n            justifyContent={\"left\"}\n          >\n            <Text\n              color={\"white\"}\n              textAlign={\"left\"}\n              fontWeight={2}\n              fontSize={2}\n            >\n              {flashData.desc}\n            </Text>\n          </Flex>\n          <Flex\n            mt={2}\n            mb={2}\n            width={1}\n            flexDirection={\"column\"}\n          >\n            {\n              flashData.questions.map( (question,index) => (\n                <Flex\n                  my={2}\n                  key={`question_${index}`}\n                  alignItems={\"flex-start\"}\n                >\n                  <Link\n                    fontSize={2}\n                    fontWeight={2}\n                    opacity={\"50%\"}\n                    color={\"white\"}\n                    textAlign={\"left\"}\n                    onClick={e =>\n                      this.props.openTooltipModal(question.desc, question.msg)\n                    }\n                  >\n                    <Flex\n                      flexDirection={'row'}\n                      alignItems={\"flex-start\"}\n                    >\n                      <Image\n                        mr={2}\n                        src={flashData.helpcircle}\n                      />\n                      {question.desc}\n                    </Flex>\n                  </Link>\n                </Flex>\n              ))\n            }\n          </Flex>\n        </Flex>\n        <Flex\n          mt={6}\n          width={0.2}\n          hidden={this.props.isMobile ? 1 : 0}\n          alignItems={\"flex-start\"}\n        >\n          <Image hidden={this.props.isMobile ? 1 : 0} src={flashData.arrows} />\n        </Flex>\n        <Flex ml={2} my={[3, 5]} width={[1, 0.4]} flexDirection={\"column\"}>\n          <Flex my={[1, 0]} flexDirection={\"row\"} alignItems={\"flex-start\"}>\n            <Image\n              my={[0, 2]}\n              width={[\"2.4em\", \"4.7em\"]}\n              src={this.functionsUtil.getGlobalConfig([\n                \"tranches\",\n                \"AA\",\n                \"bubble\"\n              ])}\n            />\n            <Text\n              mt={[0, 2]}\n              mx={2}\n              mb={[2, 1]}\n              color={\"white\"}\n              textAlign={\"left\"}\n              fontWeight={2}\n              fontSize={2}\n              dangerouslySetInnerHTML={{\n                __html: flashData.seniorinfo\n              }}\n            ></Text>\n          </Flex>\n          <Flex my={[1, 0]} flexDirection={\"row\"} alignItems={\"flex-start\"}>\n            <Image\n              my={[0, 2]}\n              ml={[0, 4]}\n              width={[\"2.4em\", \"4.7em\"]}\n              src={this.functionsUtil.getGlobalConfig([\n                \"tranches\",\n                \"BB\",\n                \"bubble\"\n              ])}\n            />\n            <Text\n              mt={[0, 2]}\n              mx={2}\n              mb={[2, 1]}\n              color={\"white\"}\n              textAlign={\"left\"}\n              fontWeight={2}\n              fontSize={2}\n              dangerouslySetInnerHTML={{\n                __html: flashData.juniorinfo\n              }}\n            ></Text>\n          </Flex>\n        </Flex>\n        {/*<Flex width={0.3}>\n          <Text>ABC</Text>\n        </Flex>*/}\n      </Flex>\n    );\n  }\n}\nexport default TrancheFlash;\n","import Title from \"../Title/Title\";\nimport { Flex, Text } from \"rimble-ui\";\nimport ExtLink from \"../ExtLink/ExtLink\";\nimport React, { Component } from \"react\";\nimport styles from \"./TrancheWelcome.module.scss\";\nimport TrancheBox from \"../TrancheBox/TrancheBox\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport TrancheFlash from \"../TrancheFlash/TrancheFlash\";\n\nclass TrancheWelcome extends Component {\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const tranchesDetails = this.functionsUtil.getGlobalConfig([\"tranches\"]);\n    return (\n      <Flex width={1} aligItems={\"center\"} justifyContent={\"center\"}>\n        <Flex\n          mb={3}\n          width={1}\n          maxWidth={8}\n          aligItems={\"center\"}\n          flexDirection={\"column\"}\n          justifyContent={\"space-between\"}\n        >\n          {!this.props.tokenConfig ? (\n            <>\n              <Title fontSize={[5, 6]}>Perpetual Yield Tranches</Title>\n              <Flex\n                width={1}\n                mb={[3, 4]}\n                mx={\"auto\"}\n                aligItems={\"center\"}\n                justifyContent={\"center\"}\n              ></Flex>\n              <Flex\n                border={1}\n                borderRadius={2}\n                borderColor={\"transparent\"}\n                backgroundColor={\"newblue\"}\n                className={[\n                  styles.trancheFlash,\n                  this.props.isMobile ? styles.mobile : null\n                ]}\n              >\n                <TrancheFlash {...this.props}></TrancheFlash>\n              </Flex>\n            </>\n          ) : (\n            <Title\n              mb={3}\n              fontWeight={2}\n              fontSize={[3, 4]}\n              color={\"copyColor\"}\n              textAlign={\"center\"}\n            >\n              Select your preferred Tranche\n            </Title>\n          )}\n          <Flex my={3} mx={0} justifyContent={\"center\"}>\n            <Flex\n              width={1}\n              flexDirection={[\"column\", \"row\"]}\n              justifyContent={\"space-between\"}\n            >\n              {Object.keys(tranchesDetails).map((trancheType, index) => (\n                <TrancheBox\n                  {...this.props}\n                  key={`tranche_${index}`}\n                  tokenConfig={this.props.tokenConfig}\n                  trancheDetails={tranchesDetails[trancheType]}\n                />\n              ))}\n            </Flex>\n          </Flex>\n          <Flex\n            mt={3}\n            width={1}\n            px={[0,5]}\n            justifyContent={\"center\"}\n          >\n            <Text\n              fontSize={[0,1]}\n              color={'statValue'}\n              textAlign={\"center\"}\n            >\n              If you're still unsure in which Tranche to pick, reach out to us on our <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['forumURL'])}>Forum</ExtLink>, <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['discordURL'])}>Discord</ExtLink>, <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['telegramURL'])}>Telegram</ExtLink> or <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['twitterURL'])}>Twitter</ExtLink>.<br />The team and the community would be happy to help!\n            </Text>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TrancheWelcome;\n","import { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass GenericPieChart extends Component {\n  state = {\n    chartProps:null,\n    selectedSlice:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    if (mobileChanged){\n      this.setStateSafe({\n        chartProps:null,\n        selectedSlice:null,\n      },() => {\n        this.loadData();\n      });\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      tooltipFormat: this.props.tooltipFormat ? this.props.tooltipFormat : (v => v),\n      sliceLabel: this.props.sliceLabel,// ? this.props.sliceLabel : (d => d.value),\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {\n            background: this.props.theme.colors.cardBg\n          } : {\n            display: 'none',\n          }\n        },\n        labels:{\n          text:{\n            fontWeight:600,\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      margin: this.props.margin || {top:0,right:0,bottom:0,left:0},\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n    };\n\n    if (this.props.showLegend){\n      chartProps.legends = [\n        {\n          itemWidth: 60,\n          itemHeight: 18,\n          translateY: this.props.isMobile ? 25 : 50,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          itemTextColor: this.props.theme.colors.legend,\n          symbolShape: 'circle',\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        }\n      ];\n    }\n\n    this.setStateSafe({\n      chartProps\n    });\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        {\n          this.state.chartProps && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                this.state.selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={this.state.selectedSlice.image}\n                    />\n                    <SmartNumber\n                      fontSize={[3,4]}\n                      decimals={3}\n                      fontWeight={4}\n                      maxPrecision={5}\n                      number={this.state.selectedSlice.valueHover || this.state.selectedSlice.value}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={this.props.defaultImage}\n                    />\n                    <Text\n                      fontSize={[3,4]}\n                      fontWeight={[3,4]}\n                    >\n                      {this.props.defaultValue}\n                    </Text>\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.props.defaultLabel}\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.props.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default GenericPieChart;","import CountUp from 'react-countup';\nimport { Box, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalBalanceCounter extends Component {\n\n  state = {\n    counterEnd:null,\n    counterStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        counterEnd:null,\n        counterStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    const counterStart = portfolio.totalAmountLent.plus(portfolio.totalEarnings);\n    const counterEnd = counterStart.plus(counterStart.times(portfolio.avgAPY.div(100)));\n\n    this.setState({\n      counterEnd,\n      counterStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const decimals = this.props.decimals || 8;\n\n    return this.state.counterStart && this.state.counterEnd ? (\n      <Box\n        width={1}\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.counterEnd)}\n          start={parseFloat(this.state.counterStart)}\n          formattingFn={ n => '$ '+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Box>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalBalanceCounter;\n","import CountUp from 'react-countup';\nimport { Flex, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalEarningsCounter extends Component {\n\n  state = {\n    earningsEnd:null,\n    earningsStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        earningsEnd:null,\n        earningsStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    const earningsStart = portfolio.totalEarnings;\n    const earningsEnd = earningsStart.plus(portfolio.totalAmountLent.times(portfolio.avgAPY.div(100)));\n\n    this.setState({\n      earningsEnd,\n      earningsStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const unit = this.props.unit || '$ ';\n    const decimals = this.props.decimals || 8;\n\n    return this.state.earningsStart && this.state.earningsEnd ? (\n      <Flex\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.earningsEnd)}\n          start={parseFloat(this.state.earningsStart)}\n          formattingFn={ n => unit+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Flex>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalEarningsCounter;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TranchePage from '../TranchePage/TranchePage';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TranchesList from '../TranchesList/TranchesList';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TrancheWelcome from '../TrancheWelcome/TrancheWelcome';\nimport GenericPieChart from '../GenericPieChart/GenericPieChart';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport TotalBalanceCounter from '../TotalBalanceCounter/TotalBalanceCounter';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\nimport { Box, Flex, Heading, Loader, Text, Icon, Tooltip, Image } from \"rimble-ui\";\nimport PortfolioEquityTranches from '../PortfolioEquityTranches/PortfolioEquityTranches';\n\nclass Tranches extends Component {\n\n  state = {\n    portfolio:null,\n    transactions:[],\n    tokenConfig:null,\n    trancheType:null,\n    trancheRoute:null,\n    selectedToken:null,\n    userHasFunds:false,\n    depositedTokens:[],\n    trancheDetails:null,\n    useTrancheType:false,\n    portfolioLoaded:false,\n    componentLoaded:false,\n    selectedProtocol:null,\n    allocationChartData:null,\n    portfolioEquityQuickSelection:'week'\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n\n    this.loadPortfolio().then( () => {\n      const componentLoaded = true;\n      const trancheRoute = this.props.urlParams.param1;\n      const tranchesDetails = this.functionsUtil.getGlobalConfig(['tranches']);\n      const trancheDetails = Object.values(tranchesDetails).find( t => t.route === trancheRoute );\n\n      if (trancheDetails !== undefined){\n        const trancheType = trancheDetails.type;\n        const useTrancheType = !this.state.userHasFunds;\n        const selectedToken = this.props.urlParams.param3;\n        const selectedProtocol = this.props.urlParams.param2;\n        const tokenConfig = selectedProtocol ? (this.props.availableTranches[selectedProtocol] && this.props.availableTranches[selectedProtocol][selectedToken] ? this.props.availableTranches[selectedProtocol][selectedToken] : null) : null;\n\n        if (this.state.userHasFunds && !tokenConfig){\n          return this.props.goToSection(this.props.selectedSection.route);\n        }\n\n        this.setState({\n          trancheType,\n          tokenConfig,\n          trancheRoute,\n          selectedToken,\n          trancheDetails,\n          useTrancheType,\n          selectedProtocol\n        });\n      } else {\n        const selectedToken = this.props.urlParams.param2;\n        const selectedProtocol = this.props.urlParams.param1;\n        const tokenConfig = this.props.availableTranches[selectedProtocol] && this.props.availableTranches[selectedProtocol][selectedToken] ? this.props.availableTranches[selectedProtocol][selectedToken] : null;\n        if (tokenConfig){\n          this.setState({\n            tokenConfig,\n            selectedToken,\n            selectedProtocol\n          });\n        }\n      }\n\n      this.setState({\n        componentLoaded\n      });\n    });\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const availableTranchesChanged = JSON.stringify(prevProps.availableTranches) !== JSON.stringify(this.props.availableTranches);\n    if (accountChanged || availableTranchesChanged){\n      this.setState({\n        portfolioLoaded:false\n      },() => {\n        this.loadPortfolio();\n      });\n    }\n  }\n\n  async loadPortfolio(){\n    if (!this.props.account){\n      const userHasFunds = false;\n      const portfolioLoaded = true;\n      this.setState({\n        userHasFunds,\n        portfolioLoaded\n      });\n      return false;\n    }\n\n    const portfolio = await this.functionsUtil.getAccountPortfolioTranches(this.props.availableTranches,this.props.account);\n\n    if (portfolio){\n      const tranchesTokens = [];\n      const tranchesBalances = [];\n      const portfolioLoaded = true;\n      const tranchesConfig = this.functionsUtil.getGlobalConfig(['tranches']);\n\n      portfolio.tranchesBalance.forEach( trancheInfo => {\n        if (!tranchesBalances[trancheInfo.tranche]){\n          tranchesBalances[trancheInfo.tranche] = {\n            weight:this.functionsUtil.BNify(0),\n            balance:this.functionsUtil.BNify(0)\n          };\n        }\n        tranchesBalances[trancheInfo.tranche].weight = tranchesBalances[trancheInfo.tranche].weight.plus(trancheInfo.trancheWeight);\n        tranchesBalances[trancheInfo.tranche].balance = tranchesBalances[trancheInfo.tranche].balance.plus(trancheInfo.tokenBalance);\n\n        if (!tranchesTokens[trancheInfo.token]){\n          tranchesTokens[trancheInfo.token] = this.functionsUtil.BNify(0);\n        }\n        tranchesTokens[trancheInfo.token] = tranchesTokens[trancheInfo.token].plus(trancheInfo.tokenBalance);\n      });\n\n      const depositedTokens = Object.keys(tranchesTokens);\n\n      const portfolioDonutData = Object.keys(tranchesTokens).map( token => {\n        const balanceValue = parseFloat(tranchesTokens[token].toFixed(4));\n        const tokenPercentage = tranchesTokens[token].div(portfolio.totalAmountLent).times(100);\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',token]);\n        return {\n          id:token,\n          name:token,\n          label:token,\n          valueHover:balanceValue,\n          value:Math.round(tokenPercentage),\n          description: `$ ${balanceValue} in ${token}`,\n          color:'hsl('+tokenConfig.color.hsl.join(',')+')',\n          image:tokenConfig.icon || `images/tokens/${token}.svg`,\n        };\n      });\n\n      const allocationChartData = Object.keys(tranchesBalances).map((trancheName,i)=>{\n        const trancheConfig = tranchesConfig[trancheName];\n        const balanceInfo = tranchesBalances[trancheName];\n        const weightValue = parseFloat(balanceInfo.weight.times(100).toFixed(2));\n        return {\n          id:trancheName,\n          name:trancheName,\n          value:weightValue,\n          label: trancheConfig.name,\n          color:'hsl('+trancheConfig.color.hsl.join(',')+')',\n          description: `$ ${balanceInfo.balance.toFixed(2)} in ${trancheConfig.name}`\n        };\n      });\n\n      // console.log('allocationChartData',allocationChartData,'portfolioDonutData',portfolioDonutData);\n      \n      const transactions = portfolio.transactions;\n      const userHasFunds = portfolio && this.functionsUtil.BNify(portfolio.totalBalance).gt(0);\n\n      // console.log('loadPortfolio - userHasFunds',portfolio,userHasFunds);\n\n      this.setState({\n        portfolio,\n        userHasFunds,\n        transactions,\n        portfolioLoaded,\n        depositedTokens,\n        portfolioDonutData,\n        allocationChartData\n      });\n    }\n  }\n\n  selectTrancheType(trancheRoute){\n    let route = `${this.props.selectedSection.route}/${trancheRoute}`;\n    const tokenConfig = this.props.availableTranches[this.state.selectedProtocol] && this.props.availableTranches[this.state.selectedProtocol][this.state.selectedToken] ? this.props.availableTranches[this.state.selectedProtocol][this.state.selectedToken] : null;\n    if (tokenConfig){\n      route += `/${this.state.selectedProtocol}/${this.state.selectedToken}`;\n    }\n    this.props.goToSection(route);\n  }\n\n  selectTranche(protocol,token){\n    const tokenConfig = this.props.availableTranches[protocol] && this.props.availableTranches[protocol][token] ? this.props.availableTranches[protocol][token] : null;\n    if (tokenConfig){\n      let route = `${this.props.selectedSection.route}`;\n      if (this.state.trancheRoute){\n        route += `/${this.state.trancheRoute}`;\n      }\n      route += `/${protocol}/${token}`;\n\n      this.props.goToSection(route);\n    }\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setState({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  goBack(){\n    if (this.state.tokenConfig && this.state.trancheType){\n      if (!this.state.userHasFunds){\n        this.props.goToSection(this.props.selectedSection.route+'/'+this.state.trancheDetails.route);\n      } else {\n        this.props.goToSection(this.props.selectedSection.route+'/'+this.state.selectedProtocol+'/'+this.state.selectedToken);\n      }\n    }/* else if (this.state.trancheType){\n      this.props.goToSection(this.props.selectedSection.route);\n    } */else {\n      this.props.goToSection(this.props.selectedSection.route);\n    }\n  }\n\n  render() {\n\n    const pathLink = [];\n    const breadcrumbPath = [];\n    if (this.state.trancheType){\n      breadcrumbPath.push(this.functionsUtil.capitalize(this.state.trancheDetails.baseName));\n      if (this.state.tokenConfig){\n        if (!this.state.userHasFunds){\n          pathLink.push(this.props.selectedSection.route+'/'+this.state.trancheDetails.route);\n        } else if (this.state.tokenConfig){\n          pathLink.push(this.props.selectedSection.route+'/'+this.state.selectedProtocol+'/'+this.state.selectedToken);\n        }\n      }\n    }\n    if (this.state.selectedProtocol){\n      breadcrumbPath.push(this.functionsUtil.getGlobalConfig(['stats','protocols',this.state.selectedProtocol,'label']));\n    }\n    if (this.state.selectedToken){\n      breadcrumbPath.push(this.state.selectedToken);\n    }\n\n    return (\n      <Box\n        width={1}\n      >\n        {\n          breadcrumbPath.length>0 && (\n            <Flex\n              width={1}\n              mb={[2,0]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'flex-start'}\n            >\n              <Flex\n                width={0.5}\n              >\n                <Breadcrumb\n                  {...this.props}\n                  text={'Tranches'}\n                  pathLink={pathLink}\n                  path={breadcrumbPath}\n                  isMobile={this.props.isMobile}\n                  handleClick={this.goBack.bind(this)}\n                />\n              </Flex>\n              <Flex\n                width={0.5}\n                justifyContent={'flex-end'}\n              >\n                \n              </Flex>\n            </Flex>\n          )\n        }\n        {\n          !this.state.componentLoaded ? (\n            <FlexLoader\n              textProps={{\n                textSize:4,\n                fontWeight:2\n              }}\n              loaderProps={{\n                mb:3,\n                size:'40px'\n              }}\n              flexProps={{\n                my:3,\n                minHeight:'60vh',\n                flexDirection:'column'\n              }}\n              text={'Loading Portfolio...'}\n            />\n          ) : this.state.tokenConfig ? (\n            <TranchePage\n              {...this.props}\n              portfolio={this.state.portfolio}\n              trancheType={this.state.trancheType}\n              tokenConfig={this.state.tokenConfig}\n              userHasFunds={this.state.userHasFunds}\n              selectedToken={this.state.selectedToken}\n              trancheDetails={this.state.trancheDetails}\n              selectedProtocol={this.state.selectedProtocol}\n              availableTranches={this.props.availableTranches}\n              selectTrancheType={this.selectTrancheType.bind(this)}\n            />\n          ) : !this.state.trancheType && !this.state.userHasFunds ? (\n            <TrancheWelcome\n              {...this.props}\n              selectTrancheType={this.selectTrancheType.bind(this)}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              {this.state.useTrancheType ? (\n                <Box\n                  width={1}\n                >\n                  <Flex\n                    mb={3}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  > \n                    {\n                    /*\n                      <Icon\n                        mr={2}\n                        name={this.state.trancheDetails.icon}\n                        color={this.state.trancheDetails.color.hex}\n                        size={this.props.isMobile ? '1.8em' : '2.2em'}\n                      />\n                    */\n                    }\n                    <Image\n                      mr={2}\n                      src={this.state.trancheDetails.image}\n                      size={this.props.isMobile ? '1.8em' : '2.2em'}\n                    />\n                    <Title\n                    >\n                      {this.functionsUtil.capitalize(this.state.trancheDetails.baseName)} Tranches\n                    </Title>\n                  </Flex>\n                  <Flex\n                    mb={3}\n                    mx={'auto'}\n                    width={[1,0.8]}\n                    aligItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontWeight={2}\n                      fontSize={[1,2]}\n                      textAlign={'center'}\n                    >\n                      {this.functionsUtil.getGlobalConfig(['tranches',this.state.trancheType,'description','long'])}\n                    </Text>\n                  </Flex>\n                </Box>\n              ) : (\n                <Title\n                  mb={3}\n                >\n                  Perpetual Yield Tranches\n                </Title>\n              )}\n              {\n                this.state.portfolioLoaded && this.state.userHasFunds && (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio.avgAPY ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.portfolio.avgAPY.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg APY\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <TotalBalanceCounter\n                                    decimals={5}\n                                    {...this.props}\n                                    portfolio={this.state.portfolio}\n                                  />\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-end'}\n                                    >\n                                      <Text\n                                        fontSize={1}\n                                        fontWeight={3}\n                                        fontFamily={this.props.theme.fonts.counter}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        +{this.state.portfolio.totalEarningsPerc.toFixed(2)}%\n                                      </Text>\n                                    </Flex>\n                                    <Text\n                                      mx={1}\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      fontFamily={this.props.theme.fonts.counter}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    >|</Text>\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-start'}\n                                    >\n                                      <TotalEarningsCounter\n                                        {...this.props}\n                                        unit={'+$'}\n                                        decimals={5}\n                                        counterStyle={{\n                                          fontSize:14,\n                                          fontWeight:600,\n                                          color:this.props.theme.colors.transactions.status.completed\n                                        }}\n                                        portfolio={this.state.portfolio}\n                                      />\n                                    </Flex>\n                                  </Flex>\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Balance\n                              </Text>\n                              {\n                                /*\n                                this.state.govTokensTotalBalance && (\n                                  <Tooltip\n                                    placement={'bottom'}\n                                    message={'Total Balance does not include accrued governance tokens: '+(this.state.govTokensTotalBalance && this.state.govTokensTotalBalance.gt(0) ? ` (${this.state.govTokensTotalBalanceTooltip.join(' / ')})` : '')}\n                                  >\n                                    <Icon\n                                      ml={2}\n                                      name={\"Info\"}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                    />\n                                  </Tooltip>\n                                )\n                                */\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.allocationChartData ? (\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  id={'allocationChart'}\n                                  height={['55px','59px']}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <GenericPieChart\n                                    {...this.props}\n                                    inline={true}\n                                    showLoader={false}\n                                    tooltipFormat={v => v+'%'}\n                                    sliceLabel={d => d.value+'%'}\n                                    width={ this.props.isMobile ? 55 : 59 }\n                                    height={ this.props.isMobile ? 55 : 59 }\n                                    chartData={this.state.allocationChartData}\n                                  />\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Portfolio Distribution\n                              </Text>\n                              {\n                                /*\n                                <Tooltip\n                                  placement={'bottom'}\n                                  message={this.functionsUtil.getGlobalConfig(['messages','riskScoreShort'])}\n                                >\n                                  <Icon\n                                    ml={2}\n                                    name={\"Info\"}\n                                    size={'1em'}\n                                    color={'cellTitle'}\n                                  />\n                                </Tooltip>\n                                */\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={3}\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.328]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <GenericPieChart\n                            {...this.props}\n                            showLegend={true}\n                            showLoader={false}\n                            tooltipFormat={v => v+'%'}\n                            defaultLabel={'Total Funds'}\n                            sliceLabel={d => {\n                              if (parseFloat(d.value)>=5){\n                                return d.value+'%';\n                              } else {\n                                return null;\n                              }\n                            }}\n                            parentId={'portfolio-composition'}\n                            chartData={this.state.portfolioDonutData}\n                            defaultImage={this.props.selectedSection.image}\n                            defaultValue={`$ ${this.functionsUtil.formatMoney(parseFloat(this.state.portfolio.totalBalance),4)}`}\n                            margin={this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 }}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.666]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquityTranches\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              transactionsList={this.state.transactions}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                )\n              }\n              <Flex\n                width={1}\n                mb={[3,4]}\n                id={\"migrate-assets\"}\n                flexDirection={'column'}\n              >\n                <Flex\n                  pb={2}\n                  width={1}\n                  mb={[2,3]}\n                  borderColor={'divider'}\n                  borderBottom={'1px solid transparent'}\n                >\n                  <Heading.h4\n                    fontSize={[2,4]}\n                    fontWeight={[3,4]}\n                  >\n                    Available Tranches\n                  </Heading.h4>\n                </Flex>\n                <TranchesList\n                  enabledProtocols={[]}\n                  trancheType={this.state.trancheType}\n                  availableTranches={this.props.availableTranches}\n                  handleClick={(props) => this.selectTranche(props.protocol,props.token)}\n                  cols={[\n                    {\n                      title:'PROTOCOL',\n                      props:{\n                        width:[0.25,0.15]\n                      },\n                      fields:[\n                        {\n                          name:'protocolIcon',\n                          props:{\n                            mr:2,\n                            height:['1.4em','2em']\n                          }\n                        },\n                        {\n                          name:'protocolName'\n                        }\n                      ]\n                    },\n                    {\n                      title:'TOKEN',\n                      props:{\n                        width:[0.16, 0.12],\n                      },\n                      fields:[\n                        {\n                          name:'tokenIcon',\n                          props:{\n                            mr:2,\n                            height:['1.4em','2em']\n                          }\n                        },\n                        {\n                          mobile:false,\n                          name:'tokenName'\n                        }\n                      ]\n                    },\n                    /*\n                    {\n                      title:'TYPE',\n                      props:{\n                        width:[0.29,0.13],\n                      },\n                      fields:[\n                        {\n                          name:'trancheTypeIcon',\n                          props:{\n                            flexProps:{\n                              mr:2\n                            },\n                            size:'1.4em'\n                          }\n                        },\n                        {\n                          name:'trancheType'\n                        }\n                      ],\n                      visible:this.state.useTrancheType\n                    },\n                    */\n                    {\n                      title:'POOL',\n                      props:{\n                        width:[0.21, 0.14],\n                      },\n                      fields:[\n                        {\n                          name:this.state.useTrancheType ? `${this.state.trancheDetails.baseName}Pool` : 'pool',\n                          props:{\n                            decimals:2\n                          }\n                        }\n                      ]\n                    },\n                    {\n                      title:this.state.useTrancheType ? 'APY' : 'SENIOR APY',\n                      visible:!this.state.useTrancheType || this.state.trancheType === 'AA',\n                      props:{\n                        width:[this.state.useTrancheType ? 0.16 : 0.29,this.state.useTrancheType ? 0.12 : 0.15],\n                      },\n                      parentProps:{\n                        flexDirection:'column',\n                        alignItems:'flex-start',\n                      },\n                      fields:[\n                        {\n                          name:'seniorApy',\n                          showTooltip:true\n                        },\n                      ],\n                    },\n                    {\n                      title:this.state.useTrancheType ? 'APY' : 'JUNIOR APY',\n                      visible:!this.state.useTrancheType || this.state.trancheType === 'BB',\n                      props:{\n                        width:[this.state.useTrancheType ? 0.16 : 0.29,this.state.useTrancheType ? 0.12 : 0.15],\n                      },\n                      parentProps:{\n                        flexDirection:'column',\n                        alignItems:'flex-start',\n                      },\n                      fields:[\n                        {\n                          name:'juniorApy',\n                          showTooltip:true\n                        },\n                      ],\n                    },\n                    {\n                      mobile:false,\n                      title:'AUTO-FARMING',\n                      props:{\n                        width:[0.25,this.state.useTrancheType ? 0.18 : 0.15],\n                      },\n                      fields:[\n                        {\n                          name:'autoFarming'\n                        }\n                      ]\n                    },\n                    {\n                      mobile:false,\n                      title:'STAKING REWARDS',\n                      props:{\n                        width:[0.25,this.state.useTrancheType ? 0.18 : 0.13],\n                      },\n                      fields:[\n                        {\n                          name:'stakingRewards'\n                        }\n                      ]\n                    },\n                    {\n                      mobile:true,\n                      title:'TOKENS',\n                      props:{\n                        width:[0.17],\n                      },\n                      fields:[\n                        {\n                          name:'govTokens'\n                        }\n                      ]\n                    },\n                    {\n                      title:'',\n                      mobile:false,\n                      props:{\n                        width:[0.29, 0.16],\n                      },\n                      parentProps:{\n                        width:1\n                      },\n                      fields:[\n                        {\n                          name:'button',\n                          label: 'Deposit',\n                          props:{\n                            width:1,\n                            fontSize:3,\n                            fontWeight:3,\n                            height:'45px',\n                            borderRadius:4,\n                            boxShadow:null,\n                            mainColor:'deposit',\n                            size: this.props.isMobile ? 'small' : 'medium',\n                            handleClick:(props) => this.selectTranche(props.protocol,props.token)\n                          }\n                        }\n                      ]\n                    }\n                  ]}\n                  {...this.props}\n                />\n              </Flex>\n              {\n                this.props.account && this.state.userHasFunds && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title mb={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                      transactionsList={this.state.transactions}\n                      availableActions={this.state.transactions.reduce( (availableActions,t) => {\n                        availableActions[t.action.toLowerCase()] = t.action;\n                        return availableActions;\n                      },{})}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.13,0.18]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.12,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.27,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.16],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:[0.23,0.11],\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'PROTOCOL',\n                          props:{\n                            width:[0.21, 0.14],\n                          },\n                          fields:[\n                            {\n                              type:'image',\n                              name:'custom',\n                              path:['protocolIcon'],\n                              props:{\n                                mr:2,\n                                height:['1.4em','2em']\n                              }\n                            },\n                            {\n                              type:'text',\n                              mobile:false,\n                              name:'custom',\n                              path:['protocol']\n                            }\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.16,0.14],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','1.6em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default Tranches;\n","import React, { Component } from 'react';\nimport { Flex, Box, Text, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\n\nclass TokenSwap extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async loadKyberWidget(){\n\n    if (!this.state.selectedFromToken || !this.state.selectedDestToken){\n      return false;\n    }\n\n    const provider = 'kyberSwap';\n    const providerInfo = this.functionsUtil.getGlobalConfig(['payments','providers',provider]);\n    if (providerInfo.enabled && providerInfo.remoteResources){\n\n      const globalConfigs = this.functionsUtil.getGlobalConfigs();\n      const remoteResources = providerInfo.remoteResources;\n\n      Object.keys(remoteResources).forEach((url,j) => {\n\n        const resourceType = url.split('.').pop().toLowerCase();\n\n        switch (resourceType){\n          case 'js':\n            const scriptID = `script_${provider}_${j}_${this.state.selectedFromToken}_${this.state.selectedDestToken}`;\n\n            if (!document.getElementById(scriptID)){\n              const script = document.createElement(\"script\");\n              const remoteResourceParams = remoteResources[url];\n              const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n              const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n              if (precall && typeof precall === 'function'){\n                const precallProps = {\n                  baseToken:this.state.selectedFromToken,\n                  selectedToken:this.state.selectedDestToken,\n                  buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n                };\n                precall(precallProps,globalConfigs,providerInfo);\n              }\n\n              if (callback && typeof callback === 'function'){\n                if (script.readyState) {  // only required for IE <9\n                  script.onreadystatechange = function() {\n                    if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                      script.onreadystatechange = null;\n                      callback();\n                    }\n                  };\n                } else {  //Others\n                  script.onload = callback;\n                }\n              }\n\n              script.id = scriptID;\n              script.className = `script_${provider}`;\n              script.src = url;\n              script.async = true;\n\n              if (remoteResourceParams && remoteResourceParams.parentElement){\n                remoteResourceParams.parentElement.appendChild(script)\n              } else {\n                document.head.appendChild(script);\n              }\n            }\n          break;\n          case 'css':\n            const stylesheetId = `stylesheet_${provider}_${j}`;\n\n            if (!document.getElementById(stylesheetId)){\n              const style = document.createElement(\"link\");\n\n              style.id = stylesheetId;\n              style.rel = 'stylesheet';\n              style.href = url;\n\n              document.head.appendChild(style);\n            }\n          break;\n          default:\n          break;\n        }\n      });\n    }\n\n    this.setState({\n      providerInfo\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const fromTokenChanged = prevState.selectedFromToken !== this.state.selectedFromToken;\n    const destTokenChanged = prevState.selectedDestToken !== this.state.selectedDestToken;\n    if ((fromTokenChanged ||  destTokenChanged) && this.state.selectedFromToken && this.state.selectedDestToken){\n      this.loadKyberWidget();\n    }\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n    const supportedTokens = this.functionsUtil.getGlobalConfig(['payments','providers','kyberSwap','supportedTokens']);\n\n    supportedTokens.forEach( token => {\n      if (token !== selectedFromToken){\n        if (!selectedDestToken){\n          selectedDestToken = token;\n        }\n        availableDestinationTokens[token] = {\n          token\n        };\n      }\n    });\n\n    const baseToken = this.functionsUtil.getGlobalConfig(['baseToken']);\n    if (baseToken !== selectedFromToken){\n      availableDestinationTokens[baseToken] = {\n        token:baseToken\n      };\n    }\n\n    this.setState({\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n    this.setState({\n      selectedDestToken\n    });\n  }\n\n  swap = () => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    const paymentProvider = this.state.providerInfo;\n    const initProps = {\n      baseToken:this.state.selectedFromToken,\n      selectedToken:this.state.selectedDestToken,\n      buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    };\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(initProps,globalConfigs) : null;\n\n    // Render the Payment Provider\n    if (typeof paymentProvider.render === 'function'){\n      paymentProvider.render(initParams,null,initProps);\n    }\n\n    // Send GA event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Tools',\n      eventAction: 'TokenSwap',\n      eventLabel: `${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to swap:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              showBalance={false}\n              isSearchable={true}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  showBalance={false}\n                  isSearchable={true}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          <Flex\n            mt={2}\n            width={1}\n            justifyContent={'center'}\n          >\n            <Button\n              my={2}\n              mx={[0, 2]}\n              size={'medium'}\n              borderRadius={4}\n              mainColor={'blue'}\n              onClick={ e => this.swap(e) }\n              disabled={ !this.state.selectedFromToken || !this.state.selectedDestToken }\n            >\n              SWAP TOKENS\n            </Button>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenSwap;\n","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass LpStaking extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    infoBox:null,\n    globalStats:[],\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    statsLoaded:false,\n    tokenBalance:null,\n    contractInfo:null,\n    programEnded:false,\n    stakedBalance:null,\n    selectedToken:null,\n    rewardMultiplier:1,\n    accountingData:null,\n    programEndDate:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    poolTokenPrice:null,\n    availableTokens:null,\n    approveEnabled:false,\n    rewardTokenPrice:null,\n    contractApproved:false,\n    tokenWrapperProps:null,\n    distributionSpeed:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false,\n    showTokenWrapperEnabled:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.setState({\n      selectedAction:'Stake'\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const contractInfoChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    if (selectedActionChanged || contractApprovedChanged || tokenConfigChanged){\n      this.setState({\n        tokenWrapperProps:null,\n        showTokenWrapperEnabled:false\n      },() => {\n        this.updateData(selectedActionChanged);\n      });\n    }\n\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async changeInputCallback(inputValue=null){\n\n    let infoBox = null;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      inputValue = this.functionsUtil.BNify(inputValue);\n      switch (this.state.selectedAction){\n        case 'Stake':\n          const userStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.props.tokenConfig.decimals).plus(inputValue);\n          const totalStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.totalStakingShares,this.props.contractInfo.decimals).plus(inputValue);\n          const userTotalStakingShare = userStakedBalance.div(totalStakedBalance);\n          const rewardsPerDay = this.state.distributionSpeed.times(86400).times(userTotalStakingShare);//.times(this.state.distributionSpeedMultiplier);\n\n          const stakedBalanceUSD = userStakedBalance.times(this.state.poolTokenPrice);\n          const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n          const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n          // console.log(parseFloat(userStakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n          infoBox = {\n            icon:'FileDownload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By staking <strong>${inputValue.toFixed(4)} ${this.props.tokenConfig.token}</strong> you will get <strong>${rewardsPerDay.toFixed(4)} ${this.props.contractInfo.rewardToken} / day</strong> with an average APY of <strong>${apy.toFixed(2)}%</strong><br /><small style=\"color:#ff9900\">assuming you have achieved the maximum reward multiplier</small>`\n          };\n        break;\n        case 'Withdraw':\n          const normalizedInputValue = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n          let unstakeRewards = await this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unstakeQuery',[normalizedInputValue],{from:this.props.account});\n          unstakeRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(unstakeRewards,this.props.tokenConfig.decimals));\n          infoBox = {\n            icon:'FileUpload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By unstaking <strong>${inputValue.toFixed(4)} ${this.props.tokenConfig.token}</strong> you will get <strong>${unstakeRewards} ${this.props.contractInfo.rewardToken}</strong>`\n          };\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'wrapAndStake';\n        methodParams = [amount];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  getPermitTransactionParams(amount,signedParameters){\n    let methodName = null;\n    let methodParams = [];\n    const { expiry, r, s, v } = signedParameters;\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'permitWrapAndStakeUnlimited';\n        methodParams = [amount, expiry, v, r, s];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async loadStats(){\n    const stats = [];\n\n    const [\n      totalLocked,\n      totalUnlocked,\n      totalStakingShares,\n      unlockScheduleCount,\n      accountingData,\n      collectedRewards\n    ] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalLocked'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalUnlocked'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalStakingShares'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unlockScheduleCount'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'updateAccounting',[],{from:this.props.account}),\n      this.state.stakedBalance.gt(0) ? this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unstakeQuery',[this.functionsUtil.integerValue(this.state.stakedBalance)],{from:this.props.account}) : this.functionsUtil.BNify(0)\n    ]);\n\n    const unlockSchedulesPromises = [];\n    for (let i = 0; i < unlockScheduleCount ; i++){\n      unlockSchedulesPromises.push(this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unlockSchedules',[i]));\n    }\n\n    const unlockSchedules = await Promise.all(unlockSchedulesPromises);\n\n    const totalRewards = this.functionsUtil.fixTokenDecimals(this.functionsUtil.BNify(totalLocked).plus(this.functionsUtil.BNify(totalUnlocked)),this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Total Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(totalRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const totalDeposits = this.functionsUtil.fixTokenDecimals(totalStakingShares,this.props.contractInfo.decimals);\n    stats.push({\n      title:'Total Deposits',\n      value:this.functionsUtil.formatMoney(parseFloat(totalDeposits))+' '+this.props.tokenConfig.token\n    });\n\n    const lockedRewards = this.functionsUtil.fixTokenDecimals(totalLocked,this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Locked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(lockedRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const unlockedRewards = this.functionsUtil.fixTokenDecimals(totalUnlocked,this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Unlocked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(unlockedRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const programEndTime = unlockSchedules.length>0 ? unlockSchedules.reduce( (endTime,s) => {\n      endTime = Math.max(s.endAtSec,endTime);\n      return endTime;\n    },0) : null;\n\n    const programEndDate = programEndTime ? `${this.functionsUtil.strToMoment(programEndTime*1000).utc().format('DD MMM, YYYY @ HH:mm')} UTC` : 'None';\n    stats.push({\n      title:'Program End-Date',\n      value:programEndDate\n    });\n\n    const programEnded = programEndTime && programEndTime*1000<=Date.now();\n\n    const distributionSpeed = unlockSchedules.reduce( (distributionSpeed,s) => {\n      if (this.functionsUtil.BNify(s.initialLockedShares).gt(0) && this.functionsUtil.BNify(s.durationSec).gt(0)){\n        const tokensPerSecond = this.functionsUtil.fixTokenDecimals(s.initialLockedShares,this.props.contractInfo.decimals).div(s.durationSec);\n        if (!tokensPerSecond.isNaN()){\n          distributionSpeed = distributionSpeed.plus(tokensPerSecond);\n        }\n      }\n      return distributionSpeed;\n    },this.functionsUtil.BNify(0));\n\n    stats.push({\n      title:'Reward unlock rate',\n      value:this.functionsUtil.formatMoney(distributionSpeed.times(86400))+' '+this.props.contractInfo.rewardToken+' / day'\n    });\n\n    const globalStats = [];\n\n    const stakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.props.tokenConfig.decimals);\n    const stakingShare = stakedBalance.div(totalDeposits); // accountingData && accountingData[2] && this.functionsUtil.BNify(accountingData[3]).gt(0) ? this.functionsUtil.BNify(accountingData[2]).div(this.functionsUtil.BNify(accountingData[3])) : this.functionsUtil.BNify(0);\n\n    const rewardMultiplier = accountingData && this.functionsUtil.BNify(accountingData[4]).gt(0) ? this.functionsUtil.BNify(Math.max(1,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.props.contractInfo.maxMultiplier)))) : this.functionsUtil.BNify(1);\n\n    const distributionSpeedMultiplier = this.functionsUtil.BNify(1).div(this.props.contractInfo.maxMultiplier).times(rewardMultiplier);\n    const userDistributionSpeed = distributionSpeed.times(stakingShare).times(distributionSpeedMultiplier);\n    const rewardsPerDay = userDistributionSpeed.times(86400);\n\n    // console.log(parseFloat(this.functionsUtil.BNify(collectedRewards)),parseFloat(this.functionsUtil.BNify(accountingData[4])),this.props.contractInfo.maxMultiplier,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.props.contractInfo.maxMultiplier)),parseFloat(rewardMultiplier));\n\n    // globalStats.push({\n    //   title:'Distribution rate',\n    //   description:'Your daily rewards distribution based on your current multiplier',\n    //   value:this.functionsUtil.formatMoney(rewardsPerDay)+' '+this.props.contractInfo.rewardToken+' / day',\n    // });\n\n    const stakedBalanceUSD = stakedBalance.times(this.state.poolTokenPrice);\n    const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n    const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n    // console.log(parseFloat(this.state.stakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n\n    globalStats.push({\n      title:'APY',\n      value:`${apy.toFixed(2)}%`,\n      description:'Annualized rewards based on your current multiplier',\n    });\n\n    globalStats.push({\n      title:'Share',\n      value:`${stakingShare.times(100).toFixed(2)}%`,\n      description:'Your share of the total deposits',\n    });\n\n    globalStats.push({\n      title:'Multiplier',\n      value:`${rewardMultiplier.toFixed(2)}x`,\n      description:`Deposit liquidity tokens for ${this.props.contractInfo.maxBonusDays} days to achieve a ${this.props.contractInfo.maxMultiplier}x reward multiplier`\n    });\n\n    const currentRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(collectedRewards,this.props.tokenConfig.decimals));\n    globalStats.push({\n      title:'Rewards',\n      value:currentRewards+' '+this.props.contractInfo.rewardToken,\n      description:'Your share of the total unlocked reward pool. Larger your deposit and for longer, higher your share'\n    });\n\n    // console.log('loadStats',stats,globalStats);\n\n    const statsLoaded = true;\n\n    this.setState({\n      stats,\n      statsLoaded,\n      globalStats,\n      stakingShare,\n      programEnded,\n      totalRewards,\n      programEndDate,\n      accountingData,\n      rewardMultiplier,\n      distributionSpeed,\n      totalStakingShares,\n      userDistributionSpeed,\n      distributionSpeedMultiplier\n    });\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    // console.log('transactionSucceeded',tx);\n    let infoBox = null;\n    switch (this.state.selectedAction){\n      case 'Stake':\n        const stakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const stakedTokens = stakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(stakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully staked <strong>${stakedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Withdraw':\n        const unstakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() ) : null;\n        const unstakedTokens = unstakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(unstakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        const rewardTokenConfig = {\n          address:this.functionsUtil.getContractByName(this.props.contractInfo.rewardToken)._address\n        };\n        const receivedRewardsLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => (log.address.toLowerCase() === rewardTokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) )) ) : null;\n        const receivedRewards = receivedRewardsLog ? this.functionsUtil.fixTokenDecimals(parseInt(receivedRewardsLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully withdrawn <strong>${unstakedTokens.toFixed(4)} ${this.props.selectedToken}</strong> and received <strong>${receivedRewards.toFixed(4)} ${this.props.contractInfo.rewardToken}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    const transactionSucceeded = true;\n\n    this.setState({\n      infoBox,\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(selectedActionChanged=false){\n    const newState = {};\n\n    const DAITokenConfig = {\n      address:this.functionsUtil.getContractByName('DAI')._address\n    };\n    const rewardTokenConfig = {\n      address:this.functionsUtil.getContractByName(this.props.contractInfo.rewardToken)._address\n    };\n\n    const [\n      poolTokenPrice,\n      rewardTokenPrice,\n      tokenBalance,\n      stakedBalance,\n    ] = await Promise.all([\n      this.functionsUtil.getSushiswapPoolTokenPrice(this.props.selectedToken),\n      this.functionsUtil.getSushiswapConversionRate(DAITokenConfig,rewardTokenConfig),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalStakedFor',[this.props.account]),\n    ]);\n\n    newState.balanceProp = this.functionsUtil.BNify(0);\n    newState.tokenBalance = !this.functionsUtil.BNify(tokenBalance).isNaN() ? this.functionsUtil.BNify(tokenBalance) : this.functionsUtil.BNify(0);\n    newState.stakedBalance = !this.functionsUtil.BNify(stakedBalance).isNaN() ? this.functionsUtil.BNify(stakedBalance) : this.functionsUtil.BNify(0);\n    newState.poolTokenPrice = !this.functionsUtil.BNify(poolTokenPrice).isNaN() ? this.functionsUtil.BNify(poolTokenPrice) : this.functionsUtil.BNify(0);\n    newState.rewardTokenPrice = !this.functionsUtil.BNify(rewardTokenPrice).isNaN() ? this.functionsUtil.BNify(rewardTokenPrice) : this.functionsUtil.BNify(0);\n\n    switch (this.state.selectedAction){\n      case 'Stake':\n        newState.permitEnabled = true;\n        newState.approveEnabled = true;\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveDescription = 'Approve the Staking contract to stake your LP tokens';\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.props.tokenConfig\n          },\n        };\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = this.functionsUtil.fixTokenDecimals(newState.stakedBalance,this.props.tokenConfig.decimals);\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.props.tokenConfig\n          },\n        };\n      break;\n      default:\n      break;\n    }\n\n    if (newState.balanceProp.lte(0)){\n      newState.showTokenWrapperEnabled = true;\n    }\n\n    if (selectedActionChanged){\n      newState.infoBox = null;\n      newState.transactionSucceeded = false;\n    }\n\n    this.setState(newState,() => {\n      this.loadStats();\n    });\n  }\n\n  render() {\n\n    const StatsCard = props => {\n      const cardProps = {\n        p:3,\n        mb:2,\n        width:'49%',\n        ...props.cardProps\n      };\n      return (\n        <DashboardCard\n          title={props.title}\n          cardProps={cardProps}\n          titleProps={{\n            fontSize:1,\n            fontWeight:3,\n          }}\n          titleParentProps={{\n            mt:0,\n            ml:0\n          }}\n          description={props.description}\n        >\n          <Text\n            mt={1}\n            fontSize={[2,3]}\n            color={'statValue'}\n            {...props.textProps}\n          >\n            {props.value}\n          </Text>\n        </DashboardCard>\n      );\n    };\n\n    const isStake = this.state.selectedAction === 'Stake';\n    const isUnstake = this.state.selectedAction === 'Withdraw';\n    const isStats = this.state.selectedAction === 'Stats';\n    const txAction = this.state.selectedAction;\n\n    return (\n      <Box\n        width={1}\n      >\n      {\n        this.props.tokenConfig && this.props.tokenConfig.poolLink && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Pool link:\n            </Text>\n            <ExtLink\n              mt={1}\n              color={'link'}\n              hoverColor={'link'}\n              href={this.props.tokenConfig.poolLink}\n            >\n              <Text\n                color={'link'}\n                style={{\n                  maxWidth:'100%',\n                  overflow:'hidden',\n                  whiteSpace:'nowrap',\n                  textOverflow:'ellipsis'\n                }}\n              >\n                {this.props.tokenConfig.poolLink}\n              </Text>\n            </ExtLink>\n          </Box>\n        )\n      }\n      {\n        this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) && this.state.globalStats.length>0 && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Your Stats:\n            </Text>\n            <Flex\n              mt={1}\n              width={1}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.globalStats.map( (statInfo,index) =>\n                  <StatsCard\n                    key={`globalStats_${index}`}\n                    cardProps={{\n                      mb:[2,0],\n                      mr:[0,index<this.state.globalStats.length-1 ? 1 : 0],\n                      width:[1,'100%']\n                    }}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    {...statInfo}\n                  />\n                )\n              }\n            </Flex>\n          </Box>\n        )\n      }\n      {\n        this.props.selectedToken && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Select Action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStake ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stake'}\n                imageSrc={'images/mint.svg'}\n                isMobile={this.props.isMobile}\n                // subcaption={'stake LP Tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStake}\n                handleClick={ e => this.setAction('Stake') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isUnstake ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Withdraw'}\n                imageSrc={'images/upload.svg'}\n                isMobile={this.props.isMobile}\n                // subcaption={'withdraw LP tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isUnstake}\n                handleClick={ e => this.setAction('Withdraw') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStats ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stats'}\n                imageSrc={'images/stats.svg'}\n                // subcaption={'view some stats'}\n                isMobile={this.props.isMobile}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStats}\n                handleClick={ e => this.setAction('Stats') }\n              />\n            </Flex>\n            {\n              (isStake || isUnstake) ?\n                isStake && this.state.programEnded ? (\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                      mt:1\n                    }}\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    >\n                      <Icon\n                        name={'Warning'}\n                        color={'cellText'}\n                        size={this.props.isMobile ? '1.8em' : '2.3em'}\n                      />\n                      <Text\n                        mt={1}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'center'}\n                      >\n                        The {this.props.selectedToken} staking program ended on {this.state.programEndDate}.\n                      </Text>\n                    </Flex>\n                  </DashboardCard>\n                ) : (this.props.tokenConfig && this.state.balanceProp && this.state.statsLoaded && this.props.contractInfo ? (\n                  <Box\n                    mt={1}\n                    width={1}\n                    mb={[4,3]}\n                  >\n                    <SendTxWithBalance\n                      error={null}\n                      {...this.props}\n                      action={txAction}\n                      steps={this.state.steps}\n                      infoBox={this.state.infoBox}\n                      tokenConfig={this.props.tokenConfig}\n                      tokenBalance={this.state.balanceProp}\n                      contractInfo={this.props.contractInfo}\n                      permitEnabled={this.state.permitEnabled}\n                      approveEnabled={this.state.approveEnabled}\n                      callback={this.transactionSucceeded.bind(this)}\n                      approveDescription={this.state.approveDescription}\n                      contractApproved={this.contractApproved.bind(this)}\n                      balanceSelectorInfo={this.state.balanceSelectorInfo}\n                      changeInputCallback={this.changeInputCallback.bind(this)}\n                      getTransactionParams={this.getTransactionParams.bind(this)}\n                      getPermitTransactionParams={this.getPermitTransactionParams.bind(this)}\n                    >\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'MoneyOff'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.3em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              isStake ? (\n                                `You don't have any ${this.props.selectedToken} in your wallet.`\n                              ) : isUnstake && (\n                                `You don't have any staked ${this.props.selectedToken} to withdraw.`\n                              )\n                            }\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    </SendTxWithBalance>\n                  </Box>\n                ) : (\n                  <Flex\n                    mt={3}\n                    mb={3}\n                    width={1}\n                  >\n                    <FlexLoader\n                      flexProps={{\n                        flexDirection:'row'\n                      }}\n                      loaderProps={{\n                        size:'30px'\n                      }}\n                      textProps={{\n                        ml:2\n                      }}\n                      text={'Loading info...'}\n                    />\n                  </Flex>\n                )\n              ) : isStats && (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  width={1}\n                  style={{\n                    flexWrap:'wrap'\n                  }}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    (!this.state.stats || !this.state.stats.length) ? (\n                      <Flex\n                        mt={3}\n                        mb={3}\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading stats...'}\n                        />\n                      </Flex>\n                    ) : this.state.stats.map( (statInfo,index) =>\n                      <StatsCard\n                        key={`stats_${index}`}\n                        cardProps={{\n                          width:[1,'49%']\n                        }}\n                        {...statInfo}\n                      />\n                    )\n                  }\n                </Flex>\n              )\n            }\n          </Box>\n        )\n      }\n      </Box>\n    );\n  }\n}\n\nexport default LpStaking;","import { Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass Base extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    const cardProps = {\n      p:3,\n      mb:2,\n      width:'49%',\n      ...this.props.cardProps\n    };\n\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n        title={this.props.title}\n        titleProps={{\n          fontSize:1,\n          fontWeight:3,\n        }}\n        titleParentProps={{\n          mt:0,\n          ml:0\n        }}\n        description={this.props.description}\n      >\n        {\n          this.props.value ? (\n            <Text\n              mt={1}\n              fontSize={[2,3]}\n              color={'statValue'}\n              {...this.props.textProps}\n            >\n              {this.props.value}\n            </Text>\n          ) : (this.props.children || null)\n        }\n      </DashboardCard>\n    );\n  }\n}\n\nexport default Base;\n","import ExtLink from '../ExtLink/ExtLink';\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport StatsCardSmall from '../StatsCardSmall/StatsCardSmall';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport { Flex, Box, Text, Icon, Input, Button } from \"rimble-ui\";\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass IdleStaking extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    maxApr:null,\n    infoBox:null,\n    globalStats:[],\n    lockPeriods:[\n      {\n        value:14,\n        type:'day',\n        label:'2 weeks'\n      },\n      {\n        value:1,\n        type:'month',\n        label:'1 month'\n      },\n      {\n        value:1,\n        type:'year',\n        label:'1 year'\n      },\n      {\n        value:4,\n        type:'year',\n        label:'4 years'\n      },\n    ],\n    lockedEnd:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    lockExpired:false,\n    statsLoaded:false,\n    tokenBalance:null,\n    contractInfo:null,\n    stakedBalance:null,\n    selectedToken:null,\n    rewardMultiplier:1,\n    claimedRewards:null,\n    accountingData:null,\n    increaseAction:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    poolTokenPrice:null,\n    lockPeriodInput:null,\n    buttonDisabled:false,\n    internalInfoBox:null,\n    availableTokens:null,\n    approveEnabled:false,\n    rewardTokenPrice:null,\n    contractApproved:false,\n    tokenWrapperProps:null,\n    distributionSpeed:null,\n    distributedRewards:null,\n    selectedLockPeriod:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    lockPeriodTimestamp:null,\n    transactionSucceeded:false,\n    showTokenWrapperEnabled:false,\n    lockEndDateIsMaxEndDate:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.setState({\n      selectedAction:'Lock'\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidMount(){\n    const feeDistributorConfig = this.props.tokenConfig.feeDistributor;\n    await this.props.initContract(feeDistributorConfig.name,feeDistributorConfig.address,feeDistributorConfig.abi);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const contractInfoChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    if (selectedActionChanged || accountChanged || contractApprovedChanged || tokenConfigChanged){\n      const increaseAction = selectedActionChanged ? null : this.state.increaseAction;\n      this.setState({\n        increaseAction,\n        tokenWrapperProps:null,\n        showTokenWrapperEnabled:false,\n      },() => {\n        this.updateData(selectedActionChanged);\n      });\n    }\n\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n\n    const lockPeriodChanged = prevState.lockPeriodTimestamp !== this.state.lockPeriodTimestamp;\n    const increaseActionChanged = prevState.increaseAction !== this.state.increaseAction;\n    if (lockPeriodChanged || increaseActionChanged || selectedActionChanged){\n      if (increaseActionChanged){\n        this.setState({\n          internalInfoBox:null\n        });\n      } else if (lockPeriodChanged){\n        this.calculateStkIDLEAmount();\n      }\n      this.checkButtonDisabled();\n    }\n  }\n\n  checkButtonDisabled(){\n    let buttonDisabled = false;\n    const minLockPeriod = this.state.lockPeriods[0];\n    const maxLockPeriod = Object.assign([],this.state.lockPeriods).pop();\n    const minDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000).add(minLockPeriod.value,minLockPeriod.type) : this.functionsUtil.strToMoment().add(minLockPeriod.value,minLockPeriod.type);\n    const mDate = this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000);\n    const maxDate = this.functionsUtil.strToMoment().add(maxLockPeriod.value,maxLockPeriod.type);\n    switch (this.state.selectedAction){\n      default:\n      case 'Lock':\n        buttonDisabled = mDate.isAfter(maxDate) || mDate.isSameOrBefore(minDate);\n      break;\n      case 'Increase Lock':\n        if (this.state.increaseAction === 'time'){\n          buttonDisabled = mDate.isAfter(maxDate) || mDate.isSameOrBefore(minDate);\n        }\n      break;\n    }\n\n    // console.log('checkButtonDisabled',this.state.selectedAction,this.state.increaseAction,buttonDisabled);\n\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  async changeInputCallback(inputValue=null){\n    inputValue = this.functionsUtil.BNify(inputValue);\n    this.setState({\n      inputValue\n    },() => {\n      this.calculateStkIDLEAmount();\n    });\n  }\n\n  calculateStkIDLEAmount(){\n    let internalInfoBox = null;\n    if (this.state.inputValue && this.functionsUtil.BNify(this.state.inputValue).gt(0) && this.state.lockPeriodTimestamp !== null){\n      switch (this.state.selectedAction){\n        case 'Lock':\n          const currTime = parseInt(Date.now()/1000);\n          const maxDate = this.functionsUtil.strToMoment().add(4,'year');\n          let endDate = this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000);\n          if (endDate.isAfter(maxDate)){\n            endDate = maxDate;\n          }\n          const endDateTime = parseInt(endDate._d.getTime()/1000)-currTime;\n          const maxDateTime = parseInt(maxDate._d.getTime()/1000)-currTime;\n          const stkIDLEAmount = this.state.inputValue.times(endDateTime).div(maxDateTime);\n\n          const percentage = stkIDLEAmount.div(this.state.inputValue).times(100);\n\n          // console.log(this.state.inputValue.toString(),endDate.format('YYYY-MM-DD HH:mm:ss'),maxDate.format('YYYY-MM-DD HH:mm:ss'),endDateTime,maxDateTime,stkIDLEAmount.toFixed());\n\n          let text = `By staking <strong>${this.state.inputValue.toFixed(4)} ${this.props.selectedToken}</strong> until <strong>${endDate.utc().format('YYYY-MM-DD HH:mm')} UTC</strong> you will get back <strong>${stkIDLEAmount.toFixed(4)} ${this.props.tokenConfig.contract.name}</strong> (${Math.ceil(percentage)}% of staking power).`;\n          if (Math.ceil(percentage)<100){\n            text += `<br />Stake your tokens for <strong>4 years</strong> to reach the maximum staking power.`;\n          }\n          text += `<br /><span style=\"color:${this.props.theme.colors.alert};font-size:14px\">Keep in mind that once you lock ${this.props.selectedToken} you cannot reverse the operation until the lock end date has been reached.</span>`;\n          internalInfoBox = {\n            text,\n            icon:'LockOutline',\n            iconProps:{\n              color:'cellText'\n            },\n          };\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      internalInfoBox\n    });\n  }\n\n  getIncreaseTimeParams(){\n    const _unlock_time = parseInt(this.state.lockPeriodTimestamp);\n    // console.log('getIncreaseTimeParams',_unlock_time);\n    return [_unlock_time];\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    const _value = this.functionsUtil.toBN(amount);\n    const _unlock_time = parseInt(this.state.lockPeriodTimestamp);\n    switch (this.state.selectedAction){\n      case 'Lock':\n        methodName = 'create_lock';\n        methodParams = [_value,_unlock_time];\n        // console.log('getTransactionParams',methodName,methodParams);\n      break;\n      case 'Increase Lock':\n        methodName = 'increase_amount';\n        methodParams = [_value];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async loadStats(){\n\n    const stats = [];\n    const globalStats = [];\n    const statsLoaded = true;\n\n    let [\n      etherscanRewardsTxs,\n      totalSupply,\n      tokenTotalSupply,\n      claimableRewards,\n      lockedInfo,\n      tokenUserBalance,\n      claimable,\n      claimEvents,\n      // checkpointEvents,\n      depositEvents\n    ] = await Promise.all([\n      this.functionsUtil.getIdleStakingRewardsTxs(),\n      this.functionsUtil.genericContractCallCached(this.props.contractInfo.name,'supply'),\n      this.functionsUtil.genericContractCallCached(this.props.contractInfo.name, 'totalSupply'),\n      this.functionsUtil.getTokenBalance(this.props.contractInfo.rewardToken,this.props.tokenConfig.feeDistributor.address),\n      this.props.account ? this.functionsUtil.genericContractCall(this.props.contractInfo.name,'locked',[this.props.account]) : null,\n      this.props.account ? this.functionsUtil.getContractBalance(this.props.contractInfo.name,this.props.account) : this.functionsUtil.BNify(0),\n      this.props.account ? this.functionsUtil.genericContractCall(this.props.tokenConfig.feeDistributor.name,'claim',[this.props.account]) : this.functionsUtil.BNify(0),\n      this.functionsUtil.getContractEvents(this.props.tokenConfig.feeDistributor.name,'Claimed',{fromBlock: this.props.tokenConfig.feeDistributor.fromBlock, toBlock:'latest'}),\n      // this.functionsUtil.getContractEvents(this.props.tokenConfig.feeDistributor.name,'CheckpointToken',{fromBlock: this.props.tokenConfig.feeDistributor.fromBlock, toBlock:'latest'}),\n      this.props.account ? this.functionsUtil.getContractEvents(this.props.contractInfo.name,'Deposit',{fromBlock: this.props.contractInfo.fromBlock, toBlock:'latest',filter:{provider:this.props.account}}) : []\n    ]);\n\n    // console.log('etherscanRewardsTxs',etherscanRewardsTxs);\n\n    const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n\n    let distributedRewards = [];\n    let totalRewards = this.functionsUtil.BNify(0);\n    let totalRewardsDays = this.functionsUtil.BNify(0);\n\n    if (etherscanRewardsTxs && etherscanRewardsTxs.length){\n      totalRewardsDays = Math.abs(etherscanRewardsTxs[0].timeStamp-etherscanRewardsTxs[etherscanRewardsTxs.length-1].timeStamp)/86400;\n      distributedRewards = etherscanRewardsTxs.map( tx => {\n        const amount = this.functionsUtil.fixTokenDecimals(tx.value,rewardTokenConfig.decimals);\n        totalRewards = totalRewards.plus(amount);\n        return {\n          amount,\n          hash:tx.hash,\n          timeStamp:tx.timeStamp,\n          tokenName:tx.tokenSymbol,\n          date:this.functionsUtil.strToMoment(parseInt(tx.timeStamp)*1000).utc().format('YYYY-MM-DD HH:mm')+' UTC'\n        };\n      });\n    }\n\n    const claimedRewards = [];\n    let totalClaimedUser = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(claimEvents, async (e) => {\n      if (this.props.account && e.returnValues && e.returnValues.recipient && e.returnValues.recipient.toLowerCase() === this.props.account.toLowerCase()){\n        const blockInfo = await this.functionsUtil.getBlockInfo(e.blockNumber);\n        if (blockInfo){\n          const claimedAmount = this.functionsUtil.fixTokenDecimals(e.returnValues.amount,rewardTokenConfig.decimals);\n          totalClaimedUser = totalClaimedUser.plus(claimedAmount);\n          claimedRewards.push({\n            amount:claimedAmount,\n            hash:e.transactionHash,\n            tokenName:this.props.contractInfo.rewardToken,\n            date:this.functionsUtil.strToMoment(parseInt(blockInfo.timestamp)*1000).utc().format('YYYY-MM-DD HH:mm')+' UTC'\n          });\n        }\n      }\n    });\n\n    tokenUserBalance = this.functionsUtil.fixTokenDecimals(tokenUserBalance,this.props.contractInfo.decimals);\n\n    const totalDeposited = totalSupply ? this.functionsUtil.fixTokenDecimals(totalSupply,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const totalLockedFunds = totalSupply ? this.functionsUtil.formatMoney(totalDeposited,4)+' '+this.props.selectedToken : (this.state.stats.length ? this.state.stats[0] : this.functionsUtil.formatMoney(totalDeposited,4)+' '+this.props.selectedToken);\n    stats.push({\n      title:'Total Locked Funds',\n      value:totalLockedFunds\n    });\n\n    tokenTotalSupply = tokenTotalSupply ? this.functionsUtil.fixTokenDecimals(tokenTotalSupply,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const stkTokenTotalSupply = tokenTotalSupply ? this.functionsUtil.formatMoney(tokenTotalSupply,4)+' '+this.props.contractInfo.name : (this.state.stats.length ? this.state.stats[1] : this.functionsUtil.formatMoney(tokenTotalSupply,4)+' '+this.props.contractInfo.name);\n    stats.push({\n      title:`${this.props.contractInfo.name} Total Supply`,\n      value:stkTokenTotalSupply\n    });\n\n    const claimableRewardsFormatted = claimableRewards ? this.functionsUtil.formatMoney(claimableRewards,4)+' '+this.props.contractInfo.rewardToken : (this.state.stats.length ? this.state.stats[2] : this.functionsUtil.formatMoney(claimableRewards,4)+' '+this.props.contractInfo.rewardToken);\n    stats.push({\n      title:'Claimable Rewards',\n      value:claimableRewardsFormatted\n    });\n\n    // const totalClaimed = claimEvents.reduce( (totalClaimed,event) => {\n    //   const claimedAmount = this.functionsUtil.fixTokenDecimals(event.returnValues.amount,rewardTokenConfig.decimals);\n    //   totalClaimed = totalClaimed.plus(claimedAmount);\n    //   return totalClaimed;\n    // },this.functionsUtil.BNify(0));\n\n    const totalRewardsFormatted = this.functionsUtil.formatMoney(totalRewards,4)+' '+this.props.contractInfo.rewardToken;\n    stats.push({\n      title:'Total Rewards',\n      value:totalRewardsFormatted\n    });\n\n    const maxApr = totalRewards.div(tokenTotalSupply).times(365.2425).div(totalRewardsDays);\n    stats.push({\n      title:'APR (1 year staking)',\n      value:maxApr.div(4).times(100).toFixed(2)+'%'\n    });\n    stats.push({\n      title:'APR (4 years staking)',\n      value:maxApr.times(100).toFixed(2)+'%'\n    });\n\n    const stakedBalance = lockedInfo && lockedInfo.amount ? this.functionsUtil.fixTokenDecimals(lockedInfo.amount,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const userDeposited = this.functionsUtil.formatMoney(stakedBalance,4);\n    globalStats.push({\n      title:'Total Deposited',\n      description:'Your total deposited amount',\n      value:userDeposited+' '+this.props.contractInfo.rewardToken,\n    });\n\n    const stakingShare = tokenUserBalance.div(tokenTotalSupply);\n    globalStats.push({\n      title:'Share',\n      value:`${stakingShare.times(100).toFixed(2)}%`,\n      description:'Your share of the total deposits',\n    });\n\n    globalStats.push({\n      title:`${this.props.contractInfo.name} balance`,\n      value:`${this.functionsUtil.formatMoney(tokenUserBalance,4)} ${this.props.contractInfo.name}`,\n    });\n    \n    claimable = claimable ? this.functionsUtil.fixTokenDecimals(claimable,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const currentRewards = this.functionsUtil.formatMoney(claimable,4);\n    globalStats.push({\n      title:'Claimable Rewards',\n      value:`${currentRewards} ${this.props.contractInfo.rewardToken}`,\n      // description:'Your claimable rewards'\n    });\n\n    const totalCollectedRewards = claimable.plus(totalClaimedUser);\n\n    let stakeStartTime = depositEvents.reduce( (stakedTime,event) => {\n      const depositTimestamp = this.functionsUtil.BNify(event.returnValues.ts);\n      const depositValue = this.functionsUtil.fixTokenDecimals(event.returnValues.value,this.props.tokenConfig.decimals);\n      if (depositValue.gt(0)){\n        stakedTime = stakedTime.plus(depositValue.times(depositTimestamp));\n        // console.log(depositTimestamp.toString(),depositValue.toFixed(),stakedTime.toString());\n      }\n      return stakedTime;\n    },this.functionsUtil.BNify(0));\n\n    // console.log('stakeStartTime',stakeStartTime,stakedBalance.toFixed());\n\n    stakeStartTime = stakedBalance.gt(0) ? Math.ceil(stakeStartTime.div(stakedBalance)) : 0;\n    // const latestCheckpoint = checkpointEvents.length ? checkpointEvents[checkpointEvents.length-1] : null;\n    // const latestDistribution = etherscanRewardsTxs[0];\n    // const latestDistributionTime = latestDistribution ? this.functionsUtil.BNify(latestDistribution.timeStamp) : this.functionsUtil.BNify(parseInt(Date.now()/1000));\n    // const latestDistributionTime = latestCheckpoint ? this.functionsUtil.BNify(latestCheckpoint.returnValues.time) : this.functionsUtil.BNify(parseInt(Date.now()/1000));\n    const currTime = parseInt(Date.now()/1000);\n    const stakePeriod = this.functionsUtil.BNify(currTime).minus(stakeStartTime);\n    const currentProfit = stakedBalance.gt(0) ? totalCollectedRewards.div(stakedBalance) : this.functionsUtil.BNify(0);\n    const weeksPerYear = 52.14;\n    const secondsPerWeek = 604800;\n    const stakePeriodWeeks = Math.max(1,Math.floor(stakePeriod.div(secondsPerWeek)));\n    const apr = stakePeriod.gt(0) ? currentProfit.times(weeksPerYear).div(stakePeriodWeeks).times(100) : this.functionsUtil.BNify(0);\n    \n    // console.log('APR',currTime,stakeStartTime,apr.toFixed(),currentProfit.toFixed(),stakePeriod.toFixed(),stakePeriodWeeks,totalCollectedRewards.toFixed(),stakedBalance.toFixed());\n\n    globalStats.push({\n      title:'APR',\n      value:`${apr.toFixed(2)}%`,\n      description:'APR is based on your Claimable Rewards and Total Deposited'\n    });\n\n    const lockEndDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000).utc().format('YYYY/MM/DD HH:mm') : '';\n    globalStats.push({\n      value:lockEndDate,\n      title:'Lock End Date (UTC)',\n      description:'Ending date of your Lock'\n    });\n\n    this.setState({\n      stats,\n      maxApr,\n      claimable,\n      globalStats,\n      statsLoaded,\n      stakedBalance,\n      claimedRewards,\n      distributedRewards\n    });\n  }\n\n  async contractApprovedCallback(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  setIncreaseAction(increaseAction){\n    this.setState({\n      increaseAction\n    });\n  }\n\n  changelockPeriodInput(e){\n    const selectedLockPeriod = null;\n    const lockPeriodInput = e.target.value;\n    const currDate = this.functionsUtil.strToMoment();\n    const mDate = this.functionsUtil.strToMoment(lockPeriodInput+' '+currDate.format('HH:mm:ss'),'YYYY-MM-DD HH:mm:ss').add(1,'second');\n    if (mDate.isValid()){\n      const lockPeriodTimestamp = parseInt(mDate._d.getTime()/1000);\n      // console.log('changelockPeriodInput',lockPeriodTimestamp);\n      this.setState({\n        lockPeriodInput,\n        selectedLockPeriod,\n        lockPeriodTimestamp\n      });\n    }\n  }\n\n  selectLockPeriod(selectedLockPeriod){\n    const minDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000) : this.functionsUtil.strToMoment();\n    const maxDate = this.functionsUtil.strToMoment().add(4,'year');\n    let mDate = minDate.add(selectedLockPeriod.value,selectedLockPeriod.type).add(1,'second');\n\n    // Check if after 4 years from now\n    if (mDate.isAfter(maxDate)){\n      mDate = maxDate;\n    }\n\n    const lockPeriodInput = mDate.format('YYYY-MM-DD');\n    const lockPeriodTimestamp = parseInt(mDate._d.getTime()/1000);\n\n    // console.log('selectLockPeriod',lockPeriodInput,lockPeriodTimestamp);\n\n    this.setState({\n      lockPeriodInput,\n      selectedLockPeriod,\n      lockPeriodTimestamp\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    // console.log('transactionSucceeded',tx);\n    let infoBox = null;\n    let internalInfoBox = null;\n    switch (this.state.selectedAction){\n      case 'Lock':\n        const lockedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const lockedTokens = lockedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(lockedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully locked <strong>${lockedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Increase Lock':\n        switch (this.state.increaseAction){\n          case 'time':\n            internalInfoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully increased the lock until <strong>${this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000).utc().format('YYYY/MM/DD HH:mm')} UTC</strong>`\n            }\n          break;\n          case 'amount':\n            const increaseAmountTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            const increaseTokens = increaseAmountTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(increaseAmountTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n            internalInfoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully increased the lock by <strong>${increaseTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n            }\n          break;\n          default:\n          break;\n        }\n      break;\n      case 'Withdraw':\n        const unstakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() ) : null;\n        const unstakedTokens = unstakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(unstakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully withdrawn <strong>${unstakedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Claim':\n        const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n        const receivedRewardsLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => (log.address.toLowerCase() === rewardTokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) )) ) : null;\n        const receivedRewards = receivedRewardsLog ? this.functionsUtil.fixTokenDecimals(parseInt(receivedRewardsLog.data,16),rewardTokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully claimed <strong>${receivedRewards.toFixed(4)} ${this.props.contractInfo.rewardToken}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    const transactionSucceeded = true;\n\n    this.setState({\n      infoBox,\n      internalInfoBox,\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(selectedActionChanged=false){\n    const newState = {};\n\n    // const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.contractInfo.rewardToken]);\n\n    const [\n      tokenBalance,\n      lockedEnd,\n    ] = await Promise.all([\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'locked__end',[this.props.account])\n    ]);\n\n    newState.lockedEnd = lockedEnd && parseInt(lockedEnd)>0 ? parseInt(lockedEnd) : null;\n    newState.lockExpired = newState.lockedEnd && newState.lockedEnd<=parseInt(Date.now()/1000);\n    newState.tokenBalance = !this.functionsUtil.BNify(tokenBalance).isNaN() ? this.functionsUtil.BNify(tokenBalance) : this.functionsUtil.BNify(0);\n\n    let selectedAction = this.state.selectedAction;\n\n    if (selectedAction==='Withdraw' && !newState.lockExpired){\n      selectedAction = 'Lock';\n      newState.selectedAction = selectedAction;\n    }\n\n    // Select Increase if already created a lock\n    if (newState.lockedEnd && selectedAction==='Lock'){\n      selectedAction = 'Increase Lock';\n      newState.increaseAction = 'time';\n      newState.selectedAction = selectedAction;\n    } else if (selectedAction==='Increase Lock' && !newState.increaseAction && !this.state.increaseAction){\n      newState.increaseAction = 'time';\n    }\n\n    // Select Withdraw if the lock has expired\n    if (selectedAction==='Increase Lock' && newState.lockExpired){\n      selectedAction = 'Withdraw';\n      newState.selectedAction = selectedAction;\n    }\n\n    switch (selectedAction){\n      case 'Lock':\n        newState.permitEnabled = false;\n        newState.approveEnabled = true;\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveDescription = `Approve the Staking contract to stake your ${this.props.selectedToken} tokens`;\n      break;\n      case 'Increase Lock':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = newState.tokenBalance;\n        newState.lockPeriodInput = this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD');\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = this.functionsUtil.fixTokenDecimals(newState.stakedBalance,this.props.tokenConfig.decimals);\n      break;\n      default:\n      break;\n    }\n\n    if (selectedActionChanged){\n      newState.infoBox = null;\n      newState.internalInfoBox = null;\n      newState.transactionSucceeded = false;\n    }\n\n    const maxDate = this.functionsUtil.strToMoment().add(4,'year').format('YYYY-MM-DD');\n    newState.lockEndDateIsMaxEndDate = newState.lockedEnd ? this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD')===maxDate : false;\n\n    // console.log('lockEndDateIsMaxEndDate',newState.lockEndDateIsMaxEndDate,maxDate,this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD'));\n\n    this.setState(newState,() => {\n      this.loadStats();\n    });\n  }\n\n  render() {\n\n    const isLock = this.state.selectedAction === 'Lock';\n    const isStats = this.state.selectedAction === 'Stats';\n    const isClaim = this.state.selectedAction === 'Claim';\n    const isUnstake = this.state.selectedAction === 'Withdraw';\n    const isIncrease = this.state.selectedAction === 'Increase Lock';\n    const txAction = this.state.selectedAction;\n    const canIncrease = !this.state.lockExpired;\n\n    return (\n      <Box\n        width={1}\n      >\n      {\n        this.props.tokenConfig && this.props.tokenConfig.poolLink && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Token link:\n            </Text>\n            <ExtLink\n              mt={1}\n              color={'link'}\n              hoverColor={'link'}\n              href={this.props.tokenConfig.poolLink}\n            >\n              <Text\n                color={'link'}\n                style={{\n                  maxWidth:'100%',\n                  overflow:'hidden',\n                  whiteSpace:'nowrap',\n                  textOverflow:'ellipsis'\n                }}\n              >\n                {this.props.tokenConfig.poolLink}\n              </Text>\n            </ExtLink>\n          </Box>\n        )\n      }\n      {\n        this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) && this.state.globalStats.length>0 && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Your Stats:\n            </Text>\n            <Flex\n              mt={1}\n              mb={1}\n              width={1}\n              style={{\n                flexBasis:'0',\n                flex:'1 1 0px',\n                flexWrap:'wrap'\n              }}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.globalStats.map( (statInfo,index) =>\n                  <StatsCardSmall\n                    key={`globalStats_${index}`}\n                    cardProps={{\n                      mb:2,\n                      width:['49%','33%'],\n                      // mr:[0,index<this.state.globalStats.length-1 ? 1 : 0]\n                    }}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    {...statInfo}\n                  />\n                )\n              }\n            </Flex>\n          </Box>\n        )\n      }\n      {\n        this.props.selectedToken && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Select Action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.lockedEnd === null ? (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isLock ? 2 : 0\n                    }}\n                    caption={'Lock'}\n                    width={[1,'32%']}\n                    imageSrc={'images/lock.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'stake LP Tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isLock}\n                    handleClick={ e => this.setAction('Lock') }\n                  />\n                ) : !this.state.lockExpired ? (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isIncrease ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    isActive={isIncrease}\n                    caption={'Increase Lock'}\n                    imageSrc={'images/lock.svg'}\n                    isMobile={this.props.isMobile}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '54px'\n                    }}\n                    handleClick={ e => this.setAction('Increase Lock') }\n                  />\n                ) : (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isUnstake ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    caption={'Withdraw'}\n                    imageSrc={'images/upload.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'withdraw LP tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isUnstake}\n                    handleClick={ e => this.setAction('Withdraw') }\n                  />\n                )\n              }\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isClaim ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Claim'}\n                imageSrc={'images/reward.png'}\n                isMobile={this.props.isMobile}\n                // subcaption={'withdraw LP tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isClaim}\n                handleClick={ e => this.setAction('Claim') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStats ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stats'}\n                imageSrc={'images/stats.svg'}\n                isMobile={this.props.isMobile}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStats}\n                handleClick={ e => this.setAction('Stats') }\n              />\n            </Flex>\n            {\n              this.state.internalInfoBox && (\n                <IconBox\n                  cardProps={{\n                    mt:1,\n                    mb:3\n                  }}\n                  {...this.state.internalInfoBox}\n                />\n              )\n            }\n            {\n              isStats ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  width={1}\n                  style={{\n                    flexWrap:'wrap'\n                  }}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    (!this.state.stats || !this.state.stats.length) ? (\n                      <Flex\n                        mt={3}\n                        mb={3}\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading stats...'}\n                        />\n                      </Flex>\n                    ) : this.state.stats.map( (statInfo,index) =>\n                      <StatsCardSmall\n                        key={`stats_${index}`}\n                        cardProps={{\n                          width:[1,'49%']\n                        }}\n                        {...statInfo}\n                      />\n                    )\n                  }\n                  <Text\n                    mb={1}\n                  >\n                    Distributed Rewards:\n                  </Text>\n                  <Flex\n                    mb={3}\n                    width={1}\n                    justifyContent={'center'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        pt:2,\n                        pb:3,\n                        px:3,\n                        width:1,\n                        display:'flex',\n                        justifyContent:'center'\n                      }}\n                      isActive={false}\n                      isInteractive={false}\n                    >\n                      {\n                        this.state.distributedRewards && this.state.distributedRewards.length ? (\n                          <Flex\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              pt={0}\n                              pb={1}\n                              width={1}\n                              flexDirection={'row'}\n                              borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.45 : 0.4}\n                              >\n                                Date\n                              </Text>\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.4 : 0.3}\n                                textAlign={this.props.isMobile ? 'right' : 'left'}\n                              >\n                                Amount\n                              </Text>\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.15 : 0.3}\n                              >\n                                { this.props.isMobile ? '' : 'Hash' }\n                              </Text>\n                            </Flex>\n                            <Flex\n                              flexDirection={'column'}\n                              alignItems={'flex-start'}\n                              overflow={['visible','scroll']}\n                              maxHeight={['initial','500px']}\n                            >\n                              {\n                                this.state.distributedRewards.map( (reward,index) => (\n                                  <Flex\n                                    width={1}\n                                    py={[2,1]}\n                                    flexDirection={'row'}\n                                    key={`rewards_${index}`}\n                                    borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                  >\n                                    <Text\n                                      fontWeight={2}\n                                      color={'statValue'}\n                                      fontSize={this.props.isMobile ? 1 : 2}\n                                      width={this.props.isMobile ? 0.45 : 0.4}\n                                    >\n                                      {reward.date}\n                                    </Text>\n                                    <Text\n                                      fontWeight={2}\n                                      color={'statValue'}\n                                      fontSize={this.props.isMobile ? 1 : 2}\n                                      width={this.props.isMobile ? 0.4 : 0.3}\n                                      textAlign={this.props.isMobile ? 'right' : 'left'}\n                                    >\n                                      {reward.amount.toFixed(4)} {reward.tokenName}\n                                    </Text>\n                                    <Flex\n                                      width={this.props.isMobile ? 0.15 : 0.13}\n                                      justifyContent={this.props.isMobile ? 'flex-end' : 'flex-start'}\n                                    >\n                                      <ExtLink\n                                        color={'link'}\n                                        hoverColor={'link'}\n                                        href={this.functionsUtil.getEtherscanTransactionUrl(reward.hash)}\n                                      >\n                                        <Flex\n                                          alignItems={'center'}\n                                          flexDirection={'row'}\n                                        >\n                                          {\n                                            !this.props.isMobile && (\n                                              <Text\n                                                fontSize={2}\n                                                fontWeight={2}\n                                                color={'link'}\n                                              >\n                                                {this.functionsUtil.shortenHash(reward.hash)}\n                                              </Text>\n                                            )\n                                          }\n                                          <Icon\n                                            ml={1}\n                                            color={'link'}\n                                            name={'OpenInNew'}\n                                            size={this.props.isMobile ? '1.4em' : '1.2em'}\n                                          />\n                                        </Flex>\n                                      </ExtLink>\n                                    </Flex>\n                                  </Flex>\n                                ))\n                              }\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Text\n                            fontSize={2}\n                            color={'statValue'}\n                          >\n                            No reward distributed yet.\n                          </Text>\n                        )\n                      }\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n              ) : (this.props.account && this.props.tokenConfig && this.state.balanceProp && this.state.statsLoaded && this.props.contractInfo) ? (\n                <Box\n                  mt={1}\n                  width={1}\n                  mb={[4,3]}\n                >\n                  {\n                    (isIncrease && canIncrease) && (\n                      <Box\n                        mb={2}\n                        width={1}\n                      >\n                        <Text mb={1}>\n                          Choose increase value:\n                        </Text>\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                        >\n                          <CardIconButton\n                            {...this.props}\n                            textProps={{\n                              fontSize:[1,2]\n                            }}\n                            cardProps={{\n                              px:3,\n                              py:2,\n                              width:0.49\n                            }}\n                            icon={'AccessTime'}\n                            iconColor={'deposit'}\n                            iconBgColor={'#ced6ff'}\n                            isActive={ this.state.increaseAction === 'time' }\n                            handleClick={ e => this.setIncreaseAction('time') }\n                            text={this.props.isMobile ? 'Time' : 'Increase Time'}\n                          />\n                          <CardIconButton\n                            {...this.props}\n                            textProps={{\n                              fontSize:[1,2]\n                            }}\n                            cardProps={{\n                              px:3,\n                              py:2,\n                              width:0.49\n                            }}\n                            icon={'AttachMoney'}\n                            iconColor={'redeem'}\n                            iconBgColor={'#ceeff6'}\n                            isActive={ this.state.increaseAction === 'amount' }\n                            handleClick={ e => this.setIncreaseAction('amount') }\n                            text={this.props.isMobile ? 'Amount' : 'Increase Amount'}\n                          />\n                        </Flex>\n                      </Box>\n                    )\n                  }\n                  {\n                    ((isLock && this.state.balanceProp && this.state.contractApproved && this.state.balanceProp.gt(0)) || (isIncrease && canIncrease)) && (\n                      <Box\n                        width={1}\n                      > \n                        {\n                          (isLock || this.state.increaseAction === 'time') && (\n                            <Box\n                              width={1}\n                            >\n                              <Text mb={1}>\n                                Choose lock period:\n                              </Text>\n                              {\n                                !this.state.lockEndDateIsMaxEndDate ? (\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    justifyContent={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Input\n                                      mb={2}\n                                      width={1}\n                                      type={\"date\"}\n                                      required={true}\n                                      height={'3.4em'}\n                                      borderRadius={2}\n                                      fontWeight={500}\n                                      borderColor={'cardBorder'}\n                                      backgroundColor={'cardBg'}\n                                      boxShadow={'none !important'}\n                                      value={this.state.lockPeriodInput || ''}\n                                      onChange={this.changelockPeriodInput.bind(this)}\n                                      border={`1px solid ${this.props.theme.colors.divider}`}\n                                    />\n                                    <Flex\n                                      mb={3}\n                                      width={1}\n                                      alignItems={'center'}\n                                      flexDirection={'row'}\n                                      justifyContent={'space-between'}\n                                    >\n                                      {\n                                        this.state.lockPeriods.map( (p,index) => {\n                                          const isActive = this.state.selectedLockPeriod ? this.state.selectedLockPeriod.value===p.value && this.state.selectedLockPeriod.type === p.type : false;\n                                          return (\n                                            <DashboardCard\n                                              cardProps={{\n                                                p:2,\n                                                width:0.24,\n                                              }}\n                                              isActive={isActive}\n                                              isInteractive={true}\n                                              key={`lockPeriod_${index}`}\n                                              handleClick={e => this.selectLockPeriod(p)}\n                                            >\n                                              <Text \n                                                fontWeight={3}\n                                                fontSize={[1,2]}\n                                                textAlign={'center'}\n                                                color={isActive ? 'copyColor' : 'cellText'}\n                                              >\n                                                {p.label}\n                                              </Text>\n                                            </DashboardCard>\n                                          );\n                                        })\n                                      }\n                                    </Flex>\n                                    {\n                                      isIncrease && (\n                                        <ExecuteTransaction\n                                          params={[]}\n                                          {...this.props}\n                                          parentProps={{\n                                            width:1,\n                                            alignItems:'center',\n                                            justifyContent:'center'\n                                          }}\n                                          Component={Button}\n                                          componentProps={{\n                                            fontSize:3,\n                                            fontWeight:3,\n                                            size:'medium',\n                                            width:[1,1/2],\n                                            borderRadius:4,\n                                            mainColor:'deposit',\n                                            value:'Increase Time',\n                                            disabled:this.state.buttonDisabled\n                                          }}\n                                          action={'Increase Time'}\n                                          methodName={'increase_unlock_time'}\n                                          contractName={this.props.contractInfo.name}\n                                          callback={this.transactionSucceeded.bind(this)}\n                                          getTransactionParams={this.getIncreaseTimeParams.bind(this)}\n                                        />\n                                      )\n                                    }\n                                  </Flex>\n                                ) : (\n                                  <IconBox\n                                    cardProps={{\n                                      mt:1,\n                                      mb:3\n                                    }}\n                                    icon={'Warning'}\n                                    iconProps={{\n                                      color:'cellText'\n                                    }}\n                                    text={`Your tokens are locked for the maxumum allowed period.`}\n                                  />\n                                )\n                              }\n                            </Box>\n                          )\n                        }\n                      </Box>\n                    )\n                  }\n                  {\n                    (isLock || this.state.increaseAction==='amount') ? (\n                      <SendTxWithBalance\n                        error={null}\n                        {...this.props}\n                        action={txAction}\n                        steps={this.state.steps}\n                        infoBox={this.state.infoBox}\n                        tokenConfig={this.props.tokenConfig}\n                        tokenBalance={this.state.balanceProp}\n                        contractInfo={this.props.contractInfo}\n                        permitEnabled={this.state.permitEnabled}\n                        buttonDisabled={this.state.buttonDisabled}\n                        approveEnabled={this.state.approveEnabled}\n                        callback={this.transactionSucceeded.bind(this)}\n                        approveDescription={this.state.approveDescription}\n                        balanceSelectorInfo={this.state.balanceSelectorInfo}\n                        changeInputCallback={this.changeInputCallback.bind(this)}\n                        contractApproved={this.contractApprovedCallback.bind(this)}\n                        getTransactionParams={this.getTransactionParams.bind(this)}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                (isLock || isIncrease) ? (\n                                  `You don't have any ${this.props.selectedToken} in your wallet.`\n                                ) : isUnstake && (\n                                  `You don't have any staked ${this.props.selectedToken} to withdraw.`\n                                )\n                              }\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </SendTxWithBalance>\n                    ) : (isIncrease && !canIncrease) ? (\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'LockOpen'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.3em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            You cannot increase an expired lock, please Withdraw.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    ) : isUnstake ? (\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        {\n                          this.state.lockExpired ? (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                name={'LockOpen'}\n                                color={'cellText'}\n                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              />\n                              <Text\n                                mt={1}\n                                mb={3}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                The lock has expired, you can withdraw your {this.props.selectedToken}.\n                              </Text>\n                              <ExecuteTransaction\n                                params={[]}\n                                {...this.props}\n                                Component={Button}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                componentProps={{\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  size:'medium',\n                                  width:[1,1/2],\n                                  borderRadius:4,\n                                  mainColor:'redeem',\n                                  value:'Withdraw',\n                                }}\n                                action={'Withdraw'}\n                                methodName={'withdraw'}\n                                contractName={this.props.contractInfo.name}\n                                callback={this.transactionSucceeded.bind(this)}\n                              />\n                            </Flex>\n                          ) : (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                name={'LockOpen'}\n                                color={'cellText'}\n                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              />\n                              <Text\n                                mt={1}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                The lock is not expired yet, please wait until {this.functionsUtil.strToMoment(this.state.lockedEnd*1000).utc().format('YYYY/MM/DD HH:mm')} UTC to withdraw your {this.props.selectedToken}.\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    ) : isClaim && (\n                      <Flex\n                        width={1}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mb:1\n                          }}\n                        >\n                          {\n                            (this.state.claimable && this.state.claimable.gt(0)) ? (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  color={'cellText'}\n                                  name={'MonetizationOn'}\n                                  size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                />\n                                <Text\n                                  mt={1}\n                                  mb={3}\n                                  fontSize={[2,3]}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You can claim <strong>{this.state.claimable.toFixed(8)} {this.props.contractInfo.rewardToken}</strong>.\n                                </Text>\n                                <ExecuteTransaction\n                                  params={[]}\n                                  {...this.props}\n                                  Component={Button}\n                                  parentProps={{\n                                    width:1,\n                                    alignItems:'center',\n                                    justifyContent:'center'\n                                  }}\n                                  componentProps={{\n                                    fontSize:3,\n                                    fontWeight:3,\n                                    size:'medium',\n                                    width:[1,1/3],\n                                    value:'Claim',\n                                    borderRadius:4,\n                                    mainColor:'redeem',\n                                  }}\n                                  action={'Claim'}\n                                  methodName={'claim'}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractName={this.props.tokenConfig.feeDistributor.name}\n                                />\n                              </Flex>\n                            ) : (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                  size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                />\n                                <Text\n                                  mt={1}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You don't have rewards to Claim yet.\n                                </Text>\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                        <Text\n                          mb={1}\n                        >\n                          Claimed Rewards:\n                        </Text>\n                        <Flex\n                          mb={3}\n                          width={1}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <DashboardCard\n                            cardProps={{\n                              pt:2,\n                              pb:3,\n                              px:3,\n                              width:1,\n                              display:'flex',\n                              alignItems:'center',\n                              justifyContent:'center'\n                            }}\n                            isActive={false}\n                            isInteractive={false}\n                          >\n                            {\n                              this.state.claimedRewards && this.state.claimedRewards.length ? (\n                                <Flex\n                                  width={1}\n                                  flexDirection={'column'}\n                                >\n                                  <Flex\n                                    pt={0}\n                                    pb={1}\n                                    width={1}\n                                    flexDirection={'row'}\n                                    borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                  >\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      width={this.props.isMobile ? 0.5 : 0.4}\n                                    >\n                                      Date\n                                    </Text>\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      width={this.props.isMobile ? 0.5 : 0.3}\n                                      textAlign={this.props.isMobile ? 'right' : 'left'}\n                                    >\n                                      Amount\n                                    </Text>\n                                    {\n                                      !this.props.isMobile && (\n                                        <Text\n                                          width={0.3}\n                                          fontSize={1}\n                                          fontWeight={3}\n                                        >\n                                          Hash\n                                        </Text>\n                                      )\n                                    }\n                                  </Flex>\n                                  {\n                                    this.state.claimedRewards.map( (claim,index) => (\n                                      <Flex\n                                        py={1}\n                                        width={1}\n                                        flexDirection={'row'}\n                                        key={`claim_${index}`}\n                                        borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                      >\n                                        <Text\n                                          fontWeight={2}\n                                          color={'statValue'}\n                                          fontSize={this.props.isMobile ? 1 : 2}\n                                          width={this.props.isMobile ? 0.5 : 0.4}\n                                        >\n                                          {claim.date}\n                                        </Text>\n                                        <Text\n                                          fontWeight={2}\n                                          color={'statValue'}\n                                          fontSize={this.props.isMobile ? 1 : 2}\n                                          width={this.props.isMobile ? 0.5 : 0.3}\n                                          textAlign={this.props.isMobile ? 'right' : 'left'}\n                                        >\n                                          {claim.amount.toFixed(4)} {claim.tokenName}\n                                        </Text>\n                                        {\n                                          !this.props.isMobile && (\n                                            <ExtLink\n                                              width={0.3}\n                                              color={'link'}\n                                              hoverColor={'link'}\n                                              href={this.functionsUtil.getEtherscanTransactionUrl(claim.hash)}\n                                            >\n                                              <Flex\n                                                alignItems={'center'}\n                                                flexDirection={'row'}\n                                              >\n                                                <Text\n                                                  fontSize={2}\n                                                  fontWeight={2}\n                                                  color={'link'}\n                                                >\n                                                  {this.functionsUtil.shortenHash(claim.hash)}\n                                                </Text>\n                                                <Icon\n                                                  ml={1}\n                                                  size={'1.2em'}\n                                                  color={'link'}\n                                                  name={'OpenInNew'}\n                                                />\n                                              </Flex>\n                                            </ExtLink>\n                                          )\n                                        }\n                                      </Flex>\n                                    ))\n                                  }\n                                </Flex>\n                              ) : (\n                                <Text\n                                  fontSize={2}\n                                  color={'statValue'}\n                                >\n                                  No reward claimed yet.\n                                </Text>\n                              )\n                            }\n                          </DashboardCard>\n                        </Flex>\n                      </Flex>\n                    )\n                  }\n                </Box>\n              ) : !this.props.account ? (\n                <ConnectBox\n                  cardProps={{\n                    mt:2\n                  }}\n                  {...this.props}\n                />\n              ) : (\n                <Flex\n                  mt={3}\n                  mb={3}\n                  width={1}\n                >\n                  <FlexLoader\n                    flexProps={{\n                      flexDirection:'row'\n                    }}\n                    loaderProps={{\n                      size:'30px'\n                    }}\n                    textProps={{\n                      ml:2\n                    }}\n                    text={'Loading info...'}\n                  />\n                </Flex>\n              )\n            }\n          </Box>\n        )\n      }\n      </Box>\n    );\n  }\n}\n\nexport default IdleStaking;","import ExtLink from '../ExtLink/ExtLink';\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n// import NXMaster from '../abis/nexus/NXMaster.json';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ButtonLoader from '../ButtonLoader/ButtonLoader';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport { Flex, Box, Text, Input, Link, Progress, Button, Icon, Tooltip } from \"rimble-ui\";\n\nclass NexusMutual extends Component {\n\n  state = {\n    step:1,\n    quote:null,\n    steps:{\n      1:'Get Quote',\n      2:'Buy Cover'\n    },\n    periodOptions:{\n      30:{\n        label:'30d'\n      },\n      60:{\n        label:'60d'\n      },\n      90:{\n        label:'90d'\n      },\n      365:{\n        label:'1y'\n      }\n    },\n    coverId:null,\n    claimId:null,\n    capacity:null,\n    loading:false,\n    coverCost:null,\n    amountValue:'',\n    periodValue:'',\n    yearlyCost:null,\n    maxCapacity:null,\n    amountValid:true,\n    periodValid:true,\n    tokenConfig:null,\n    tokenBalance:null,\n    selectedToken:null,\n    claimableCovers:[],\n    tokenApproved:false,\n    selectedPeriod:null,\n    maxPriceWithFee:null,\n    transactionParams:[],\n    transactionValue:null,\n    yieldTokenBalance:null,\n    selectedUnderlying:null,\n    selectedAction:'deposit',\n    yieldTokenApproved:false,\n    claimButtonDisabled:false,\n    selectedCoverToClaim:null,\n    defaultClaimableCover:null,\n    selectedUnderlyingConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadContracts();\n  }\n\n  async loadContracts(){\n    const claimableCovers = [];\n    const nexusMutualCoverages = await this.functionsUtil.getNexusMutualCoverages(this.props.account);\n    nexusMutualCoverages.forEach( coverage => {\n      if (coverage.incident){\n        claimableCovers.push(coverage);\n      }\n    });\n\n    const validClaimableCoverFromParam = this.props.urlParams.param3 ? claimableCovers.find( cover => parseInt(cover.value) === parseInt(this.props.urlParams.param3) ) : null;\n\n    const defaultClaimableCover = claimableCovers.length>0 ? claimableCovers[0] : null;\n    const selectedCoverToClaim = validClaimableCoverFromParam ? validClaimableCoverFromParam : defaultClaimableCover || null;\n\n    this.setState({\n      claimableCovers,\n      selectedCoverToClaim,\n      defaultClaimableCover\n    });\n\n    const selectedAction = ['deposit','claim'].includes(this.props.urlParams.param2) ? this.props.urlParams.param2 : this.state.selectedAction;\n    const paramIsValidToken = this.props.urlParams.param3 && Object.keys(this.props.toolProps.availableTokens).includes(this.props.urlParams.param3);\n    const selectedToken = paramIsValidToken ? this.props.urlParams.param3 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    this.setSelectedAction(selectedAction);\n    this.changeSelectedToken(selectedToken);\n    // console.log('coverBoughtEvents',coverBoughtEvents,'claimSubmittedEvents',claimSubmittedEvents,'claimableCovers',claimableCovers);\n  }\n\n  async getPoolCapacity(selectedUnderlying,tokenConfig){\n    const requiredNetwork = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    const baseEndpoint = this.functionsUtil.getGlobalConfig(['network','providers','nexus','endpoints',requiredNetwork]);\n    const response = await this.functionsUtil.makeRequest(`${baseEndpoint}contracts/${tokenConfig.address}/capacity`);\n    if (response && response.data){\n      const capacity = response.data;\n      // console.log('getPoolCapacity',capacity);\n      const maxCapacity = capacity && capacity[`capacity${selectedUnderlying}`] ? this.functionsUtil.fixTokenDecimals(capacity[`capacity${selectedUnderlying}`],tokenConfig.decimals) : this.functionsUtil.BNify(0);\n      return maxCapacity;\n    }\n    return false;\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const selectedUnderlyingChanged = prevState.selectedUnderlying !== this.state.selectedUnderlying;\n    if (selectedTokenChanged || selectedUnderlyingChanged){\n      this.loadTokenData();\n    }\n  }\n\n  async loadTokenData(){\n\n    const isETH = this.state.selectedToken === 'ETH';\n    const selectedUnderlyingConfig = this.state.tokenConfig.underlying[this.state.selectedUnderlying];\n\n    // Init Underlying Contract\n    await Promise.all([\n      this.props.initContract(this.state.tokenConfig.token, this.state.tokenConfig.realAddress, this.state.tokenConfig.abi),\n      this.props.initContract(selectedUnderlyingConfig.name, selectedUnderlyingConfig.address, selectedUnderlyingConfig.abi)\n    ]);\n\n    let [\n      maxCapacity,\n      yieldTokenBalance,\n      yieldTokenApproved,\n      tokenApproved,\n      tokenBalance\n    ] = await Promise.all([\n      this.getPoolCapacity(this.state.selectedUnderlying,this.state.tokenConfig),\n      this.functionsUtil.getTokenBalance(this.state.tokenConfig.token,this.props.account),\n      this.functionsUtil.checkTokenApproved(this.state.selectedToken,this.props.contractInfo.address,this.props.account),\n      this.functionsUtil.checkTokenApproved(selectedUnderlyingConfig.name,this.props.contractInfo.address,this.props.account),\n      isETH ? this.functionsUtil.getETHBalance(this.props.account,false) : this.functionsUtil.getTokenBalance(selectedUnderlyingConfig.name,this.props.account,false),\n    ]);\n\n    tokenBalance = tokenBalance || this.functionsUtil.BNify(0);\n    yieldTokenBalance = yieldTokenBalance || this.functionsUtil.BNify(0);\n\n    this.setState({\n      maxCapacity,\n      tokenBalance,\n      tokenApproved,\n      yieldTokenBalance,\n      yieldTokenApproved,\n      selectedUnderlyingConfig\n    });\n  }\n\n  async changeSelectedToken(selectedToken){\n    const periodValue = '';\n    const amountValue = '';\n    const tokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const selectedUnderlying = Object.keys(tokenConfig.underlying)[0];\n\n    this.setState({\n      amountValue,\n      periodValue,\n      tokenConfig,\n      selectedToken,\n      selectedUnderlying\n    });\n  }\n\n  changeSelectedUnderlying(selectedUnderlying){\n    this.setState({\n      selectedUnderlying\n    });\n  }\n\n  setMaxCoverAmount(){\n    const amountValue = this.state.maxCapacity.toFixed();\n    this.changeAmount({\n      target:{\n        value:amountValue\n      }\n    });\n  }\n\n  changeAmount = (e) => {\n    const amountValue = e.target.value.length && !isNaN(e.target.value) ? Math.floor(e.target.value) : '';\n    const amountValid = this.functionsUtil.BNify(amountValue).gt(0) && this.functionsUtil.BNify(amountValue).lte(this.state.maxCapacity);\n    this.setState({\n      amountValue,\n      amountValid\n    });\n  }\n\n  changePeriod = (e) => {\n    const periodValue = e.target.value.length && !isNaN(e.target.value) ? e.target.value : '';\n    const periodValid = parseInt(periodValue)>=30 && parseInt(periodValue)<=365;\n    this.setState({\n      periodValue,\n      periodValid,\n      selectedPeriod:null\n    });\n  }\n\n  selectPeriod = (selectedPeriod) => {\n    this.changePeriod({\n      target:{\n        value:selectedPeriod\n      }\n    });\n  }\n\n  async getQuote() {\n\n    this.setState({\n      loading:true\n    });\n\n    // Setup your cover data.\n    const coverData = {\n      period: this.state.periodValue, // days\n      coverAmount: this.state.amountValue, // ETH in units not wei\n      currency: this.state.selectedUnderlying,\n      contractAddress: this.state.tokenConfig.address, // the contract you will be buying cover for\n      asset: this.state.tokenConfig.underlying[this.state.selectedUnderlying].address\n    };\n\n    // URL to request a quote for.\n    // const quoteURL = 'https://api.nexusmutual.io/v1/quote?' +\n    const requiredNetwork = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    const baseEndpoint = this.functionsUtil.getGlobalConfig(['network','providers','nexus','endpoints',requiredNetwork]);\n    const quoteURL = `${baseEndpoint}quote?coverAmount=${coverData.coverAmount}&currency=${coverData.currency}&period=${coverData.period}&contractAddress=${coverData.contractAddress}`;\n\n    const response = await this.functionsUtil.makeRequest(quoteURL);\n\n    const quote = response && response.data ? response.data : null;\n\n    if (!quote){\n      this.setState({\n        loading:false\n      });\n      return false;\n    }\n\n    // encode the signature result in the data field\n    const data = this.props.web3.eth.abi.encodeParameters(\n      ['uint', 'uint', 'uint', 'uint', 'uint8', 'bytes32', 'bytes32'],\n      [quote.price, quote.priceInNXM, quote.expiresAt, quote.generatedAt, quote.v, quote.r, quote.s],\n    );\n\n    const COVER_TYPE = this.functionsUtil.toBN(0);\n    const feePercentage = await this.functionsUtil.genericContractCall(this.props.contractInfo.name,'feePercentage');\n    const basePrice = this.functionsUtil.toBN(quote.price);\n    const priceWithFee = basePrice.mul(this.functionsUtil.toBN(feePercentage)).divn(10000).add(basePrice);\n    const amountInWei = this.functionsUtil.toWei(coverData.coverAmount.toString());\n    const maxPriceWithFee = priceWithFee;\n    const coverCost = this.functionsUtil.fixTokenDecimals(maxPriceWithFee,this.state.tokenConfig.decimals);\n    const yearlyCost = coverCost.div(this.state.amountValue).times(365).div(this.state.periodValue).times(100);\n\n    // console.log('coverCost',maxPriceWithFee,coverCost.toFixed(),this.state.amountValue.toFixed(),this.state.periodValue,yearlyCost.toFixed());\n\n    const transactionParams = [\n      coverData.contractAddress,\n      coverData.asset,\n      amountInWei,\n      coverData.period,\n      COVER_TYPE,\n      maxPriceWithFee,\n      data\n    ];\n\n    const transactionValue = this.state.selectedUnderlying === 'ETH' ? priceWithFee : null;\n\n    // console.log(feePercentage,transactionParams,transactionValue,quote);\n\n    // debugger;\n\n    const step = 2;\n    const loading = false;\n\n    this.setState({\n      step,\n      quote,\n      loading,\n      coverCost,\n      yearlyCost,\n      maxPriceWithFee,\n      transactionValue,\n      transactionParams\n    });\n  }\n\n  approveSucceeded = (tx) => {\n    const tokenApproved = true;\n    this.setState({\n      tokenApproved\n    });\n  }\n\n  yieldTokenApproveSucceeded = (tx) => {\n    const yieldTokenApproved = true;\n    this.setState({\n      yieldTokenApproved\n    });\n  }\n\n  claimInputChange = (amount) => {\n    const normalizedAmount = this.functionsUtil.normalizeTokenAmount(amount,this.state.tokenConfig.decimals);\n    const claimButtonDisabled = this.functionsUtil.BNify(amount).lte(0) || this.functionsUtil.BNify(normalizedAmount).gt(this.state.selectedCoverToClaim.coveredTokenAmount);\n    this.setState({\n      claimButtonDisabled\n    });\n  }\n\n  getClaimTransactionParams = (coveredTokenAmount) => {\n    return {\n      methodName:'claimTokens',\n      methodParams:[this.state.selectedCoverToClaim.value,this.state.selectedCoverToClaim.incident.id,coveredTokenAmount,this.state.tokenConfig.realAddress]\n    };\n  }\n\n  claimTransactionSucceeded = (tx) => {\n    // const claimId = this.functionsUtil.getGlobalConfig(['txReceipt','events','ClaimSubmitted','returnValues','claimId'],tx);\n    // this.setState({\n    //   claimId\n    // });\n    this.loadContracts();\n  }\n\n  buyCoverTransactionSucceeded = (tx) => {\n    const coverId = this.functionsUtil.getGlobalConfig(['txReceipt','events','CoverBought','returnValues','coverId'],tx);\n    this.setState({\n      coverId\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    if (selectedAction !== this.state.selectedAction){\n      this.setState({\n        selectedAction\n      });\n    }\n  }\n\n  selectCoverToClaim(coverId){\n    const selectedCoverToClaim = this.state.selectedCoverToClaim ? this.state.claimableCovers.find( cover => parseInt(cover.value) === coverId ) : null;\n    // console.log('selectCoverToClaim',selectedCoverToClaim);\n    this.setState({\n      selectedCoverToClaim\n    });\n  }\n\n  reset(){\n    const step = 1;\n    const quote = null;\n    const coverId = null;\n    const periodValue = '';\n    const amountValue = '';\n    const transactionParams = [];\n    this.setState({\n      step,\n      quote,\n      coverId,\n      periodValue,\n      amountValue,\n      transactionParams\n    });\n  }\n\n  render() {\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          mb={3}\n          width={[1,0.36]}\n          flexDirection={'column'}\n        >\n          <Box\n            mb={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Choose action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:2,\n                  width:0.49\n                }}\n                textProps={{\n                  fontSize:[1,2]\n                }}\n                icon={'Security'}\n                iconColor={'deposit'}\n                text={'Buy Coverage'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.selectedAction === 'deposit' }\n                handleClick={ e => this.setSelectedAction('deposit') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:2,\n                  width:0.49\n                }}\n                textProps={{\n                  fontSize:[1,2]\n                }}\n                icon={'FileUpload'}\n                iconColor={'redeem'}\n                text={'Claim Tokens'}\n                iconBgColor={'#ceeff6'}\n                isActive={ this.state.selectedAction === 'claim' }\n                handleClick={ e => this.setSelectedAction('claim') }\n              />\n            </Flex>\n          </Box>\n          {\n            this.state.selectedAction === 'deposit' &&\n              <IconBox\n                cardProps={{\n                  py:2,\n                  px:3,\n                  my:2,\n                  width:1,\n                }}\n                isActive={true}\n                isInteractive={false}\n                icon={'LightbulbOutline'}\n                iconProps={{\n                  color:'flashColor'\n                }}\n                textProps={{\n                  color:'flashColor'\n                }}\n                text={`If your yield bearing token de-pegs in value by more than 10%, claim up to 90% of your loss by swapping your yield bearing token for a claim payment.`}\n              >\n                <ExtLink\n                  ml={1}\n                  fontWeight={500}\n                  color={'primary'}\n                  fontSize={'15px'}\n                  hoverColor={'primary'}\n                  href={'https://nexusmutual.io/pages/YieldTokenCoverv1.0.pdf'}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    Read More\n                    <Icon\n                      ml={1}\n                      size={'0.9em'}\n                      color={'primary'}\n                      name={'OpenInNew'}\n                    />\n                    .\n                  </Flex>\n                </ExtLink>\n              </IconBox>\n          }\n          {\n            this.state.selectedAction === 'deposit' ? (\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Flex\n                  mb={1}\n                  width={1}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    Object.keys(this.state.steps).map( stepIndex => (\n                      <Link\n                        style={{\n                          flexBasis:'0',\n                          flex:'1 1 0px',\n                          textDecoration:'none',\n                          cursor:this.state.step>=stepIndex ? 'pointer' : 'default'\n                        }}\n                        fontSize={2}\n                        textAlign={'center'}\n                        key={`step_${stepIndex}`}\n                        color={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                        hoverColor={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                        activeColor={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                      >\n                        {this.state.steps[stepIndex]}\n                      </Link>\n                    ) )\n                  }\n                </Flex>\n                <Flex\n                  mb={2}\n                  width={1}\n                  flexDirection={'column'}\n                >\n                  <Progress\n                    style={{\n                      width:'100%',\n                      height:'15px'\n                    }}\n                    value={(1/Object.keys(this.state.steps).length)*this.state.step}\n                  />\n                </Flex>\n                {\n                  !this.state.selectedToken || !this.state.tokenBalance ? (\n                    <FlexLoader\n                      flexProps={{\n                        mt:2,\n                        flexDirection:'row'\n                      }}\n                      loaderProps={{\n                        size:'25px',\n                      }}\n                      textProps={{\n                        ml:2\n                      }}\n                      text={'Loading assets...'}\n                    />\n                  ) : this.state.coverId ? (\n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <IconBox\n                        cardProps={{\n                          mt:1,\n                        }}\n                        icon={'DoneAll'}\n                        iconProps={{\n                          color:this.props.theme.colors.transactions.status.completed\n                        }}\n                        text={`You have successfully bought your Cover! Your Cover ID is <strong>${this.state.coverId}</strong>`}\n                      />\n                      <Link\n                        mt={2}\n                        color={'link'}\n                        hoverColor={'primary'}\n                        onClick={this.reset.bind(this)}\n                      >\n                        Get New Quote\n                      </Link>\n                    </Flex>\n                  ) : !this.state.quote ? (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Box\n                        width={1}\n                      >\n                        <Text mb={1}>\n                          Select Token to Cover:\n                        </Text>\n                        <AssetSelector\n                          {...this.props}\n                          id={'token-from'}\n                          showBalance={false}\n                          isSearchable={false}\n                          selectedToken={this.state.selectedToken}\n                          onChange={this.changeSelectedToken.bind(this)}\n                          availableTokens={this.props.toolProps.availableTokens}\n                        />\n                      </Box>\n                      <Box\n                        mt={2}\n                        width={1}\n                      >\n                        <Flex\n                          mb={1}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                        >\n                          <Text>\n                            Select Payment Asset:\n                          </Text>\n                          <Tooltip\n                            placement={'top'}\n                            message={`This is the asset that you will use as payment method for the coverage premium`}\n                          >\n                            <Icon\n                              ml={1}\n                              size={'1em'}\n                              name={\"Info\"}\n                              color={'cellTitle'}\n                            />\n                          </Tooltip>\n                        </Flex>\n                        <AssetSelector\n                          {...this.props}\n                          showBalance={false}\n                          selectedToken={this.state.selectedUnderlying}\n                          onChange={this.changeSelectedUnderlying.bind(this)}\n                          availableTokens={this.state.tokenConfig.underlying}\n                        />\n                      </Box>\n                      {\n                        this.functionsUtil.BNify(this.state.maxCapacity).gt(0) ? (\n                          <Box\n                            width={1}\n                          >\n                            <Box\n                              mt={2}\n                              width={1}\n                            >\n                              <Text\n                                mb={1}\n                              >\n                                How much do you want to cover?\n                              </Text>\n                              <Input\n                                min={0}\n                                step={1}\n                                width={'100%'}\n                                type={\"number\"}\n                                required={true}\n                                height={'3.4em'}\n                                borderRadius={2}\n                                fontWeight={500}\n                                borderColor={'cardBorder'}\n                                backgroundColor={'cardBg'}\n                                boxShadow={'none !important'}\n                                value={this.state.amountValue}\n                                onChange={this.changeAmount.bind(this)}\n                                border={`1px solid ${this.props.theme.colors.divider}`}\n                                placeholder={`Insert ${this.state.selectedUnderlying.toUpperCase()} amount`}\n                              />\n                              <Flex\n                                width={1}\n                                maxWidth={'100%'}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'flex-end'}\n                              >\n                                <Link\n                                  mt={1}\n                                  fontSize={1}\n                                  fontWeight={3}\n                                  color={'dark-gray'}\n                                  textAlign={'right'}\n                                  hoverColor={'copyColor'}\n                                  onClick={ (e) => this.setMaxCoverAmount() }\n                                  style={{\n                                    maxWidth:'100%',\n                                    overflow:'hidden',\n                                    whiteSpace:'nowrap',\n                                    textOverflow:'ellipsis'\n                                  }}\n                                >\n                                  Max Available: {this.state.maxCapacity.toFixed(this.props.isMobile ? 2 : 4)} {this.state.selectedUnderlying}\n                                </Link>\n                              </Flex>\n                            </Box>\n                            <Box\n                              mt={2}\n                              width={1}\n                            >\n                              <Text\n                                mb={1}\n                              >\n                                For how many days?\n                              </Text>\n                              <Input\n                                min={0}\n                                width={'100%'}\n                                type={\"number\"}\n                                required={true}\n                                height={'3.4em'}\n                                borderRadius={2}\n                                fontWeight={500}\n                                borderWidth={'1px'}\n                                borderStyle={'solid'}\n                                backgroundColor={'cardBg'}\n                                boxShadow={'none !important'}\n                                value={this.state.periodValue}\n                                placeholder={'Insert days of coverage'}\n                                onChange={this.changePeriod.bind(this)}\n                                borderColor={this.state.periodValid ? 'cardBorder' : 'red'}\n                              />\n                              {\n                                !this.state.periodValid && (\n                                  <Text\n                                    my={1}\n                                    fontSize={2}\n                                    color={'red'}\n                                  >\n                                    Enter a period between 30 and 365 days!\n                                  </Text>\n                                )\n                              }\n                              <Flex\n                                mt={2}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                {\n                                  Object.keys(this.state.periodOptions).map( period => {\n                                    const periodInfo = this.state.periodOptions[period];\n                                    const isActive = this.state.selectedPeriod===period;\n                                    const width = (1/Object.keys(this.state.periodOptions).length)-0.01;\n                                    return (\n                                      <DashboardCard\n                                        cardProps={{\n                                          p:2,\n                                          width:width,\n                                        }}\n                                        isActive={isActive}\n                                        isInteractive={true}\n                                        key={`coverPeriod_${period}`}\n                                        handleClick={e => this.selectPeriod(period)}\n                                      >\n                                        <Text\n                                          fontSize={2}\n                                          fontWeight={3}\n                                          textAlign={'center'}\n                                          color={this.props.isActive ? 'copyColor' : 'legend'}\n                                        >\n                                          {periodInfo.label}\n                                        </Text>\n                                      </DashboardCard>\n                                    );\n                                  })\n                                }\n                              </Flex>\n                            </Box>\n                            <Flex\n                              mt={2}\n                              width={1}\n                              justifyContent={'center'}\n                            >\n                              <ButtonLoader\n                                buttonProps={{\n                                  my:2,\n                                  mx:[0, 2],\n                                  size:'medium',\n                                  borderRadius:4,\n                                  mainColor:'blue',\n                                  disabled:(!this.state.amountValid || !this.state.selectedUnderlying || !this.state.periodValue || !this.state.periodValid)\n                                }}\n                                buttonText={'GET QUOTE'}\n                                isLoading={this.state.loading}\n                                handleClick={ e => this.getQuote(e) }\n                              />\n                            </Flex>\n                          </Box>\n                        ) : (\n                          <IconBox\n                            cardProps={{\n                              mt:3\n                            }}\n                            icon={'MoneyOff'}\n                            iconProps={{\n                              color:'cellText'\n                            }}\n                            text={`Coverage for ${this.state.selectedToken} is not available at the moment.`}\n                          />\n                        )\n                      }\n                    </Flex>\n                  ) : (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Text\n                        mb={2}\n                        fontSize={3}\n                        fontWeight={3}\n                        color={'primary'}\n                      >\n                        Cover Summary:\n                      </Text>\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          mb:2,\n                          px:3\n                        }}\n                        isActive={false}\n                        isInteractive={false}\n                      >\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Protocol:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          Idle Finance\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Yield Token:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.selectedToken}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Amount:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.amountValue} {this.state.selectedUnderlying}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Period:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.periodValue} days\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Price:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.coverCost.toFixed(6)} {this.state.selectedUnderlying}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Yearly Cost:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.yearlyCost.toFixed(2)}%\n                        </Text>\n                      </DashboardCard>\n                      <Flex\n                        mt={2}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        {\n                          this.functionsUtil.BNify(this.state.tokenBalance).lt(this.functionsUtil.BNify(this.state.quote.price)) ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mb:3\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={1}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You don't have enough {this.state.selectedUnderlying} in your wallet.\n                                </Text>\n                                <Link\n                                  mt={1}\n                                  color={'link'}\n                                  hoverColor={'primary'}\n                                  onClick={this.reset.bind(this)}\n                                >\n                                  Get New Quote\n                                </Link>\n                              </Flex>\n                            </DashboardCard>\n                          ) : !this.state.tokenApproved ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mb:3\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mb={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  To buy the coverage you need to approve the Smart-Contract.\n                                </Text>\n                                <ExecuteTransaction\n                                  {...this.props}\n                                  parentProps={{\n                                    width:1,\n                                    alignItems:'center',\n                                    justifyContent:'center'\n                                  }}\n                                  Component={Button}\n                                  componentProps={{\n                                    fontSize:3,\n                                    fontWeight:3,\n                                    size:'medium',\n                                    width:[1,1/2],\n                                    borderRadius:4,\n                                    value:'Approve',\n                                    mainColor:'deposit'\n                                  }}\n                                  action={'Approve'}\n                                  methodName={'approve'}\n                                  callback={this.approveSucceeded.bind(this)}\n                                  contractName={this.state.selectedUnderlyingConfig.name}\n                                  params={[this.props.contractInfo.address,this.props.web3.utils.toTwosComplement('-1')]}\n                                />\n                                <Link\n                                  mt={1}\n                                  color={'link'}\n                                  hoverColor={'primary'}\n                                  onClick={this.reset.bind(this)}\n                                >\n                                  Get New Quote\n                                </Link>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <ExecuteTransaction\n                                {...this.props}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                Component={Button}\n                                componentProps={{\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  size:'medium',\n                                  width:[1,1/2],\n                                  borderRadius:4,\n                                  mainColor:'deposit',\n                                  value:'Buy Coverage',\n                                  disabled:this.state.buttonDisabled\n                                }}\n                                action={'Buy Coverage'}\n                                methodName={'buyCover'}\n                                value={this.state.transactionValue}\n                                params={this.state.transactionParams}\n                                contractName={this.props.contractInfo.name}\n                                callback={this.buyCoverTransactionSucceeded.bind(this)}\n                              />\n                              <Link\n                                mt={1}\n                                color={'link'}\n                                hoverColor={'primary'}\n                                onClick={this.reset.bind(this)}\n                              >\n                                Get New Quote\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                    </Flex>\n                  )\n                }\n              </Flex>\n            ) : this.state.selectedAction === 'claim' && (\n              <Box\n                width={1}\n              >\n                {\n                  this.state.claimableCovers.length>0 ? (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Text mb={1}>\n                        Select Cover:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        isSearchable={false}\n                        name={'claimable_covers'}\n                        options={this.state.claimableCovers}\n                        onChange={this.selectCoverToClaim.bind(this)}\n                        defaultValue={this.state.defaultClaimableCover}\n                      />\n                      {\n                        this.state.selectedCoverToClaim.claimId ? (\n                          <IconBox\n                            cardProps={{\n                              mt:2,\n                            }}\n                            icon={'DoneAll'}\n                            iconProps={{\n                              color:this.props.theme.colors.transactions.status.completed\n                            }}\n                            text={`You've successfully claimed <strong>${this.state.selectedCoverToClaim.claimedAmount.toFixed(4)} ${this.state.selectedCoverToClaim.coverAsset}</strong> for this Cover!`}\n                          />\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3,\n                                mb:1\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  color={'cellText'}\n                                  name={'FileUpload'}\n                                />\n                                <Text\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You can Claim up to <strong>{this.state.selectedCoverToClaim.claimableAmount.toFixed(4)} {this.state.selectedCoverToClaim.coverAsset}</strong> for this Cover!\n                                </Text>\n                                <Text\n                                  fontSize={1}\n                                  color={'alert'}\n                                  textAlign={'center'}\n                                >\n                                  Keep in mind that the cover becomes inactive once any amount of tokens are claimed.\n                                </Text>\n                              </Flex>\n                            </DashboardCard>\n                            <SendTxWithBalance\n                              error={null}\n                              {...this.props}\n                              permitEnabled={false}\n                              approveEnabled={true}\n                              action={'Claim Token'}\n                              tokenConfig={this.state.tokenConfig}\n                              contractInfo={this.props.contractInfo}\n                              buttonDisabled={this.state.claimButtonDisabled}\n                              callback={this.claimTransactionSucceeded.bind(this)}\n                              changeInputCallback={this.claimInputChange.bind(this)}\n                              contractApproved={this.yieldTokenApproveSucceeded.bind(this)}\n                              getTransactionParams={this.getClaimTransactionParams.bind(this)}\n                              approveDescription={'To claim your tokens you need to approve the Smart-Contract.'}\n                              tokenBalance={this.functionsUtil.BNify(this.state.yieldTokenBalance).gt(this.state.selectedCoverToClaim.maxCoveredAmount) ? this.state.selectedCoverToClaim.maxCoveredAmount : this.state.yieldTokenBalance }\n                            >\n                              <DashboardCard\n                                cardProps={{\n                                  p:3,\n                                  mt:2\n                                }}\n                              >\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                >\n                                  <Icon\n                                    name={'MoneyOff'}\n                                    color={'cellText'}\n                                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                  />\n                                  <Text\n                                    mt={1}\n                                    fontSize={2}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    You don't have any {this.state.selectedToken} in your wallet.\n                                  </Text>\n                                </Flex>\n                              </DashboardCard>\n                            </SendTxWithBalance>\n                          </Flex>\n                        )\n                      }\n                    </Flex>\n                  ) : (\n                    <IconBox\n                      cardProps={{\n                        mt:1,\n                      }}\n                      icon={'Warning'}\n                      iconProps={{\n                        color:'cellText'\n                      }}\n                      text={`You cannot submit any Claim for your Covers.`}\n                    />\n                  )\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default NexusMutual;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass TokenWrapper extends Component {\n\n  state = {\n    action:null,\n    infoBox:null,\n    balanceDest:null,\n    tokenConfig:null,\n    balanceStart:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    approveEnabled:true,\n    approveDescription:null,\n    showTokenWrapperEnabled:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = (prevState.action !== this.state.action) || (this.props.action !== prevProps.action);\n    const startContractChanged = JSON.stringify(this.props.startContract) !== JSON.stringify(prevProps.startContract);\n    const destContractChanged = JSON.stringify(this.props.destContract) !== JSON.stringify(prevProps.destContract);\n    if (actionChanged || startContractChanged || destContractChanged){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    const action = this.props.action || this.state.action || 'wrap';\n    this.setState({\n      action\n    },() => {\n      this.loadBalance();\n      this.updateActionData();\n    });\n  }\n\n  async getTokenBalance(contractInfo){\n\n    if (!contractInfo){\n      return false;\n    }\n\n    let tokenBalance = null;\n    switch (contractInfo.name){\n      case 'ETH':\n        tokenBalance = await this.functionsUtil.getETHBalance(this.props.account);\n      break;\n      default:\n        // Init Contract\n        await this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi);\n        tokenBalance = await this.functionsUtil.getTokenBalance(contractInfo.name,this.props.account);\n      break;\n    }\n\n    tokenBalance = tokenBalance || this.functionsUtil.BNify(0);\n\n    return tokenBalance;\n  }\n\n  async loadBalance(){\n\n    if (!this.props.toolProps.startContract || !this.props.toolProps.destContract){\n      return false;\n    }\n\n    // Load Balances\n    const [\n      balanceDest,\n      balanceStart\n    ] = await Promise.all([\n      this.getTokenBalance(this.props.toolProps.destContract),\n      this.getTokenBalance(this.props.toolProps.startContract)\n    ]);\n\n    const tokenBalance = this.state.action === 'wrap' ? balanceStart : balanceDest;\n    // console.log('loadBalance',this.props.toolProps.startContract,parseFloat(balanceStart),this.props.toolProps.destContract,parseFloat(balanceDest));\n\n    this.setState({\n      balanceDest,\n      balanceStart,\n      tokenBalance\n    });\n  }\n\n  updateActionData(){\n    let infoBox = null;\n    let tokenConfig = null;\n    let tokenBalance = null;\n    let selectedToken = null;\n    let approveEnabled = true;\n    let approveDescription = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        approveEnabled = true;\n        tokenBalance = this.state.balanceStart;\n        tokenConfig = this.props.toolProps.startContract;\n        selectedToken = this.props.toolProps.startContract.name;\n        approveDescription = `To Mint new ${this.props.toolProps.destContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileDownload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.deposit\n          // },\n          text:`Wrap your ${this.props.toolProps.startContract.name} and get ${this.props.toolProps.destContract.name}`\n        };\n      break;\n      case 'unwrap':\n        selectedToken = this.props.toolProps.destContract.name;\n        approveEnabled = false;\n        tokenBalance = this.state.balanceDest;\n        tokenConfig = this.props.toolProps.destContract;\n        approveDescription = `To withdraw your ${this.props.toolProps.startContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileUpload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.redeem\n          // },\n          text:`Unwrap your ${this.props.toolProps.destContract.name} and get back ${this.props.toolProps.startContract.name}`\n        };\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      infoBox,\n      tokenConfig,\n      tokenBalance,\n      selectedToken,\n      approveEnabled,\n      approveDescription\n    },() => {\n      this.loadBalance();\n    });\n  }\n\n  setAction(action){\n    this.setState({\n      action\n    });\n  }\n\n  transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        const mintLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let mintedAmount = mintLog ? parseInt(mintLog.data,16) : amount;\n        mintedAmount = this.functionsUtil.fixTokenDecimals(mintedAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${mintedAmount.toFixed(4)} ${this.props.toolProps.destContract.name}</strong>`\n        }\n      break;\n      case 'unwrap':\n        const withdrawLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let withdrawnAmount = withdrawLog ? parseInt(withdrawLog.data,16) : amount;\n        withdrawnAmount = this.functionsUtil.fixTokenDecimals(withdrawnAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${withdrawnAmount.toFixed(4)} ${this.props.toolProps.startContract.name}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Update balances\n    this.loadBalance();\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    const params = {};\n    switch (this.state.action){\n      case 'wrap':\n        params.value = amount;\n        params.methodParams = [];\n        params.methodName = this.props.toolProps.startContract.wrapMethod;\n      break;\n      case 'unwrap':\n        params.value = null;\n        params.methodParams = [amount];\n        params.methodName = this.props.toolProps.destContract.unwrapMethod;\n      break;\n      default:\n      break;\n    }\n    return params;\n  }\n\n  render() {\n\n    const fullWidth = !!this.props.fullWidth;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        mt={[2,fullWidth ? 2 : 3]}\n      >\n        <Flex\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n          width={[1,fullWidth ? 1 : 0.36]}\n        >\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : (\n              <Box\n                width={1}\n              >\n                {\n                  !this.props.action && (\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        mb={2}\n                      >\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Wrap'}\n                          iconColor={'deposit'}\n                          icon={'ArrowDownward'}\n                          iconBgColor={'#ced6ff'}\n                          isActive={ this.state.action === 'wrap' }\n                          handleClick={ e => this.setAction('wrap') }\n                        />\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Unwrap'}\n                          iconColor={'redeem'}\n                          icon={'ArrowUpward'}\n                          iconBgColor={'#ceeff6'}\n                          isActive={ this.state.action === 'unwrap' }\n                          handleClick={ e => this.setAction('unwrap') }\n                        />\n                      </Flex>\n                    </Flex>\n\n                  )\n                }\n                <Box\n                  width={1}\n                  my={fullWidth ? 2 : 3}\n                >\n                  {\n                    this.state.tokenBalance!==null ? (\n                      <SendTxWithBalance\n                        {...this.props}\n                        approveEnabled={false}\n                        action={this.state.action}\n                        infoBox={this.state.infoBox}\n                        tokenConfig={this.state.tokenConfig}\n                        tokenBalance={this.state.tokenBalance}\n                        contractInfo={this.props.toolProps.destContract}\n                        callback={this.transactionSucceeded.bind(this)}\n                        approveDescription={this.state.approveDescription}\n                        // changeInputCallback={this.changeInputCallback.bind(this)}\n                        getTransactionParams={this.getTransactionParams.bind(this)}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} to {this.state.action} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </SendTxWithBalance>\n                    ) : (\n                      <Flex\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading Balance...'}\n                        />\n                      </Flex>\n                    )\n                  }\n                </Box>\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenWrapper;","import theme from '../theme';\nimport { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport AssetField from '../AssetField/AssetField';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass PortfolioDonut extends Component {\n  state = {\n    chartData:null,\n    totalFunds:null,\n    parentWidth:null,\n    selectedToken:null,\n    selectedTokenConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentWillUnmount() {\n    \n  }\n\n  async componentDidMount(){\n    this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  async loadPortfolio() {\n\n    const portfolio = {};\n    let totalFunds = this.functionsUtil.BNify(0);\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.availableTokens),async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const idleTokenBalance = await this.functionsUtil.getTokenBalance(tokenConfig.idle.token,this.props.account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.functionsUtil.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = await this.functionsUtil.convertTokenBalance(idleTokenBalance.times(tokenPrice),token,tokenConfig,isRisk);\n\n        if (tokenBalance.gt(0)){\n          portfolio[token] = tokenBalance;\n\n          // Increment total balance\n          totalFunds = totalFunds.plus(tokenBalance);\n        }\n      }\n    });\n\n    // Add Gov Tokens\n    const govTokensUserBalances = await this.functionsUtil.getGovTokensUserBalances(this.props.account,this.props.availableTokens,'DAI',null,true);\n    if (govTokensUserBalances){\n      Object.keys(govTokensUserBalances).forEach( govToken => {\n        const govTokenBalance = this.functionsUtil.BNify(govTokensUserBalances[govToken]);\n        portfolio[govToken] = govTokenBalance;\n        totalFunds = totalFunds.plus(govTokenBalance);\n      });\n    }\n\n    const chartData = [];\n\n    Object.keys(portfolio).forEach(token => {\n      const tokenBalance = portfolio[token];\n      if (tokenBalance.gt(0)){\n        const tokenPercentage = tokenBalance.div(totalFunds).times(100);\n        let tokenColorHsl = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','hsl']);\n        tokenColorHsl = tokenColorHsl ? tokenColorHsl.join(',') : '0,0%,0%';\n        chartData.push({\n          id:token,\n          color:'hsl('+tokenColorHsl+')',\n          value:Math.round(tokenPercentage),\n          label:token.substr(0,1).toUpperCase()+token.substr(1),\n        });\n      }\n    });\n\n    this.setState({\n      portfolio,\n      chartData,\n      totalFunds\n    });\n  }\n\n  render() {\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth:0,\n      cornerRadius:0,\n      innerRadius:0.65,\n      motionDamping:15,\n      motionStiffness:90,\n      colors:d => d.color,\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => {\n        if (parseFloat(d.value)>=5){\n          return d.value+'%';\n        } else {\n          return null;\n        }\n      },\n      radialLabel: d => {\n        return null;//Object.keys(this.props.availableTokens).indexOf(d.label.toUpperCase());\n      },\n      theme:{\n        tooltip: {\n          container: {\n            display: 'none'\n          },\n        },\n        labels:{\n          text:{\n            fontSize:16,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      radialLabelsLinkColor:{ from: 'color' },\n      radialLabelsLinkOffset:-parseInt(this.state.parentWidth*0.2),\n      margin: this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 },\n      onMouseEnter:(data, e) => {\n        const selectedToken = data.id;\n        const selectedTokenConfig = selectedToken ? this.props.availableTokens[selectedToken] || this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken]) : null;\n        this.setState({\n          selectedToken,\n          selectedTokenConfig\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setState({\n          selectedToken:null,\n          selectedTokenConfig:null\n        });\n      },\n      legends:[\n        {\n          itemWidth: 60,\n          itemHeight: 18,\n          translateY: this.props.isMobile ? 25 : 50,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          itemTextColor: theme.colors.legend,\n          symbolShape: 'circle',\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        }\n      ]\n    };\n\n    const selectedToken = this.state.selectedToken !== null && this.state.portfolio[this.state.selectedToken] ? this.state.portfolio[this.state.selectedToken] : false;\n    const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'icon']);\n    const convertToken = this.state.selectedToken ? this.functionsUtil.getGlobalConfig(['stats','tokens',this.state.selectedToken,'conversionRateField']) : false;\n\n    return (\n      <Flex\n        width={1}\n      >\n        { \n          (this.state.totalFunds || selectedToken) && \n            <Flex\n              zIndex={0}\n              top={['32%','35%']}\n              left={['23%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              width={['55%','46%']}\n              position={'absolute'}\n              height={['40%','35%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedToken ? (\n                  <>\n                    <AssetField\n                      fieldInfo={{\n                        name:'icon',\n                        props:{\n                          mb:1,\n                          height:'2.2em'\n                        }\n                      }}\n                      token={this.state.selectedToken}\n                      tokenConfig={this.state.selectedTokenConfig}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      unit={ convertToken ? '$' : null}\n                      number={this.state.portfolio[this.state.selectedToken]}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedToken}\n                    </Text>\n                  </>\n                ) : (\n                  <>\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={strategyIcon}\n                    />\n                    <SmartNumber\n                      unit={'$'}\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      number={this.state.totalFunds}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          {...chartProps}\n          showLoader={true}\n          data={this.state.chartData}\n          parentId={this.props.parentId}\n          parentIdHeight={this.props.parentId}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default PortfolioDonut;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport { Card, Flex, Image, Text } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\n\nclass EarningsEstimation extends Component {\n  state = {\n    tokensEarnings:null,\n    estimationStepsPerc:null,\n    estimationStepsOptions:null,\n    estimationStepsDefaultOption:null,\n    estimationSteps:{\n      0:{\n        'Month':{\n          perc:1/12,\n          width:1/3\n        },\n        '2 months':{\n          perc:1/6,\n          width:1/3\n        },\n        '3 months':{\n          perc:1/4,\n          width:1/3,\n          optionName:'3M'\n        }\n      },\n      25:{\n        '3 months':{\n          perc:3/12,\n          width:3/12\n        },\n        '8 months':{\n          perc:8/12,\n          width:5/12\n        },\n        'Year':{\n          perc:1,\n          width:4/12,\n          optionName:'1Y'\n        }\n      },\n      90:{\n        'Year':{\n          perc:1,\n          width:1/3,\n        },\n        '2 Years':{\n          perc:2,\n          width:1/3,\n        },\n        '5 Years':{\n          perc:5,\n          width:3/5,\n          optionName:'5Y'\n        }\n      }\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  setEstimationStepsPerc(estimationStepsPerc){\n    this.setState({\n      estimationStepsPerc\n    });\n  }\n\n  async loadEarnings(){\n    let stepsCount = {};\n    let tokensEarnings = {};\n    // let estimationStepsPerc = 0;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const aggregatedEarnings = {\n      earnings:this.functionsUtil.BNify(0),\n      amountLent:this.functionsUtil.BNify(0),\n      earningsYear:this.functionsUtil.BNify(0),\n    };\n\n    await this.functionsUtil.asyncForEach(this.props.enabledTokens,async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const amountDeposited = await this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account);\n\n      const [amountLent,avgBuyPrice,idleTokenPrice] = await Promise.all([\n        this.functionsUtil.convertTokenBalance(amountDeposited,token,tokenConfig,isRisk),\n        this.functionsUtil.getAvgBuyPrice([token],this.props.account),\n        this.functionsUtil.getIdleTokenPrice(tokenConfig)\n      ]);\n\n      const earningsPerc = idleTokenPrice.div(avgBuyPrice[token]).minus(1);\n      const earnings = amountLent.times(earningsPerc);\n\n      let earningsYear = 0;\n      let tokenAPY = 0;\n      const tokenAprs = await this.functionsUtil.getTokenAprs(tokenConfig);\n      if (tokenAprs && tokenAprs.avgApr !== null){\n        tokenAPY = tokenAprs.avgApy;\n        earningsYear = amountLent.times(tokenAPY.div(100));\n      }\n\n      const earningsPercStep = Math.floor(earnings.div(earningsYear).times(100));\n      \n      const possibleSteps = Object.keys(this.state.estimationSteps).filter(perc => perc<=earningsPercStep);\n      const maxPossibleStep = parseInt(possibleSteps.pop());\n\n      stepsCount[maxPossibleStep] = stepsCount[maxPossibleStep] ? stepsCount[maxPossibleStep]+1 : 1;\n\n      if (!this.functionsUtil.BNify(amountLent).isNaN() && !this.functionsUtil.BNify(idleTokenPrice).isNaN() && !this.functionsUtil.BNify(earnings).isNaN() && !this.functionsUtil.BNify(earningsYear).isNaN()){\n        tokensEarnings[token] = {\n          earnings,\n          amountLent,\n          earningsYear,\n          idleTokenPrice\n        };\n\n        // const earningsUSD = await this.functionsUtil.convertTokenBalance(earningsYearings,token,tokenConfig,isRisk);\n        // const amountLentUSD = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n        // const earningsYearUSD = await this.functionsUtil.convertTokenBalance(earningsYear,token,tokenConfig,isRisk);\n\n        aggregatedEarnings.earnings = aggregatedEarnings.earnings.plus(earnings);\n        aggregatedEarnings.amountLent = aggregatedEarnings.amountLent.plus(amountLent);\n        aggregatedEarnings.earningsYear = aggregatedEarnings.earningsYear.plus(earningsYear);\n      }\n    });\n\n    const maxCountStep = Object.keys(stepsCount).reduce( (maxCountStep,step) => {\n      const count = stepsCount[step];\n      if (count>maxCountStep.count){\n        maxCountStep.step = parseInt(step);\n        maxCountStep.count = parseInt(count);\n      }\n      return maxCountStep;\n    },{\n      step:0,\n      count:0\n    });\n\n    const estimationStepsPerc = maxCountStep.step || parseInt(Object.keys(this.state.estimationSteps)[1]);\n\n    const orderedTokensEarnings = {};\n    this.props.enabledTokens.forEach( token => {\n      if (tokensEarnings[token]){\n        orderedTokensEarnings[token] = tokensEarnings[token];\n      }\n    });\n\n    tokensEarnings = orderedTokensEarnings;\n\n    // Add USD aggregated earnings\n    if (Object.keys(tokensEarnings).length>1){\n      tokensEarnings['USD'] = aggregatedEarnings;\n    }\n\n    let estimationStepsDefaultOption = null;\n    const estimationStepsOptions = Object.keys(this.state.estimationSteps).map( step => {\n      const estimationStep = Object.values(this.state.estimationSteps[step]).pop();\n      const label = estimationStep.optionName ? estimationStep.optionName : Object.keys(this.state.estimationSteps[step]).pop();\n      const value = parseInt(step);\n      const option = { value, label };\n\n      if (value === estimationStepsPerc){\n        estimationStepsDefaultOption = option;\n      }\n      return option;\n    });\n\n    this.setState({\n      tokensEarnings,\n      estimationStepsPerc,\n      estimationStepsOptions,\n      estimationStepsDefaultOption,\n    });\n  }\n\n  render() {\n\n    if (!this.state.tokensEarnings){\n      return (\n        <FlexLoader\n          flexProps={{\n            flexDirection:'row',\n            minHeight:this.props.height\n          }}\n          loaderProps={{\n            size:'30px'\n          }}\n          textProps={{\n            ml:2\n          }}\n          text={'Loading estimations...'}\n        />\n      );\n    }\n\n    const estimationSteps = this.state.estimationSteps[this.state.estimationStepsPerc] ? this.state.estimationSteps[this.state.estimationStepsPerc] : this.state.estimationSteps[0];\n\n    return (\n      <Card\n        pr={0}\n        my={1}\n        width={1}\n        px={[3,4]}\n        py={[2,3]}\n        boxShadow={1}\n        borderRadius={2}\n        borderColor={'cardBorder'}\n        backgroundColor={'cardBg'}\n      >\n        <Flex\n          mt={2}\n          mb={3}\n          zIndex={9999}\n          justifyContent={'flex-end'}\n        >\n          <Flex\n            zIndex={9999}\n            width={[1,0.2]}\n            flexDirection={'column'}\n          >\n            <GenericSelector\n              innerProps={{\n                p:0,\n                px:1\n              }}\n              name={'estimation-step'}\n              options={this.state.estimationStepsOptions}\n              onChange={ v => this.setEstimationStepsPerc(v) }\n              defaultValue={this.state.estimationStepsDefaultOption}\n            />\n          </Flex>\n        </Flex>\n        {\n          Object.keys(this.state.tokensEarnings).map((token,tokenIndex) => {\n            const tokenConfig = this.props.availableTokens[token];\n            const tokenEarnings = this.state.tokensEarnings[token];\n            const estimationStepPerc = this.functionsUtil.BNify(Object.values(estimationSteps).pop().perc);\n            const finalEarnings = tokenEarnings.earningsYear.times(estimationStepPerc);\n            const cursorPerc = finalEarnings.gt(0) ? Math.min(1,parseFloat(tokenEarnings.earnings.div(finalEarnings))) : 1;\n            const tokenIcon = tokenConfig && tokenConfig.icon ? tokenConfig.icon :`images/tokens/${token}.svg`;\n            const tokenRGBColor = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','rgb']).join(',');\n            // console.log(tokenEarnings.earnings.toFixed(10),tokenEarnings.earningsYear.toFixed(10),finalEarnings.toFixed(10),cursorPerc.toFixed(10),estimationStepPerc.toFixed(10));\n            return (\n              <Flex\n                id={`asset-${token}`}\n                flexDirection={'row'}\n                key={`asset-${token}`}\n                borderTop={ token === 'USD' ? `1px solid ${this.props.theme.colors.divider}` : null }\n              >\n                <Flex\n                  width={[1,0.93]}\n                  position={'relative'}\n                >\n                  <Flex\n                    width={1}\n                    height={'100%'}\n                    position={'absolute'}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                    >\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      height={'100%'}\n                      flexDirection={'row'}\n                    >\n                      {\n                        Object.keys(estimationSteps).map((label,estimateIndex) => {\n                          const estimationStep = estimationSteps[label];\n                          const estimationStepEarnings = tokenEarnings.earningsYear.times(this.functionsUtil.BNify(estimationStep.perc));\n                          let estimationStepEarningsFormatted = this.functionsUtil.formatMoney(estimationStepEarnings,this.props.isMobile ? 2 : estimationStepEarnings.lt(1) ? 3 : 2);\n                          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n                          if (conversionRateField){\n                            estimationStepEarningsFormatted = '$ '+estimationStepEarningsFormatted;\n                          }\n                          return (\n                            <Flex\n                              pr={2}\n                              justifyContent={'flex-end'}\n                              width={estimationStep.width}\n                              pt={ token === 'USD' ? 2 : null }\n                              key={`asset-estimate-${token}-${estimateIndex}`}\n                              borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              {\n                                (token === 'USD' || (estimateIndex === Object.keys(estimationSteps).length-1)) && \n                                  <Text\n                                    fontWeight={3}\n                                    fontSize={[0,'1em']}\n                                    style={{\n                                      wordBreak:'break-all'\n                                    }}\n                                    color={tokenEarnings.earnings.gte(estimationStepEarnings) ? 'copyColor' : 'legend'}\n                                  >\n                                    {estimationStepEarningsFormatted}\n                                  </Text>\n                              }\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                  <Flex\n                    width={1}\n                    zIndex={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                    pt={ token === 'USD' ? ['2em','2.8em'] : '1.4em' }\n                    pb={ tokenIndex<Object.keys(this.state.tokensEarnings).length-1 ? '1em' : 0 }\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                      justifyContent={['flex-start','flex-end']}\n                    >\n                      <Text\n                        pr={[0,2]}\n                        fontSize={[0,3]}\n                        fontWeight={[3,4]}\n                      >\n                        {token}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      height={['20px','35px']}\n                      justifyContent={'flex-start'}\n                    >\n                      <Flex\n                        height={'100%'}\n                        width={cursorPerc}\n                        backgroundColor={'cardBg'}\n                      >\n                        <Flex\n                          height={'100%'}\n                          width={'100%'}\n                          borderRadius={['0 20px 20px 0','0 35px 35px 0']}\n                          style={{background:`linear-gradient(90deg, rgba(${tokenRGBColor},0) 0%, rgba(${tokenRGBColor},0.1) 30%, rgba(${tokenRGBColor},1) 100%)`}}\n                        ></Flex>\n                      </Flex>\n                      <Flex\n                        pl={2}\n                        width={'auto'}\n                        height={'100%'}\n                        alignItems={'center'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Image src={tokenIcon} height={['1.4em','2.2em']} />\n                      </Flex>\n                      {\n                        <Flex\n                          pl={2}\n                          alignItems={'center'}\n                        >\n                          {\n                            token !== 'USD' ? (\n                              <AssetField\n                                {...this.props}\n                                token={token}\n                                tokenConfig={tokenConfig}\n                                fieldInfo={{\n                                  name:'earningsCounter',\n                                  props:{\n                                    decimals:this.props.isMobile ? 6 : 7,\n                                    maxPrecision:this.props.isMobile ? 9 : 10,\n                                    style:{\n                                      color:this.props.theme.colors.copyColor,\n                                      fontWeight:this.props.isMobile ? 500 : 700,\n                                      fontSize:this.props.isMobile ? '14px' : '22px',\n                                    }\n                                  }\n                                }}\n                              />\n                            ) : (\n                              <TotalEarningsCounter\n                                {...this.props}\n                                decimals={this.props.isMobile ? 6 : 7}\n                                maxPrecision={this.props.isMobile ? 9 : 10}\n                                counterStyle={{\n                                  color:this.props.theme.colors.copyColor,\n                                  fontWeight:this.props.isMobile ? 500 : 700,\n                                  fontFamily:this.props.theme.fonts.sansSerif,\n                                  fontSize:this.props.isMobile ? '14px' : '22px',\n                                }}\n                              />\n                            )\n                          }\n                        </Flex>\n                      }\n                    </Flex>\n                  </Flex>\n                </Flex>\n                {\n                  !this.props.isMobile && \n                    <Flex width={0.07} alignItems={'flex-start'} justifyContent={'flex-end'}>\n                    </Flex>\n                }\n              </Flex>\n            )\n          })\n        }\n        <Flex\n          flexDirection={'row'}\n        >\n          <Flex\n            width={[1,0.93]}\n            position={'relative'}\n          >\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <Flex width={[0.15,0.1]}></Flex>\n              <Flex\n                width={[0.85,0.9]}\n                flexDirection={'row'}\n              >\n                {\n                  Object.keys(estimationSteps).map((estimationLabel,estimateIndex) => {\n                    const estimationStep = estimationSteps[estimationLabel];\n                    return (\n                      <Flex\n                        pt={2}\n                        pr={[1,2]}\n                        justifyContent={'flex-end'}\n                        width={estimationStep.width}\n                        key={`estimate-label-${estimateIndex}`}\n                        borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                      >\n                        <Text\n                          fontWeight={3}\n                          fontSize={[0,2]}\n                          color={'legend'}\n                        >\n                          {estimationLabel}\n                        </Text>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </Flex>\n          {\n            !this.props.isMobile && \n              <Flex width={0.07} alignItems={'flex-start'} justifyContent={'center'}>\n                <Text fontWeight={4} fontSize={3}></Text>\n              </Flex>\n          }\n        </Flex>\n      </Card>\n    );\n  }\n}\n\nexport default EarningsEstimation;\n","import React, { Component } from 'react';\nimport { Flex, Icon, Text, Image } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass DashboardIconButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          pr:2,\n          py:[2,3],\n          pl:[2,3],\n        }}\n        isActive={false}\n        isInteractive={true}\n        handleClick={this.props.handleClick}\n      >\n        <Flex\n          height={'100%'}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'center'}\n        > \n          <Flex\n            px={[1,0]}\n          >\n            {\n              this.props.icon ? (\n                <Icon\n                  name={this.props.icon}\n                  size={this.props.isMobile ? '1.8em' : '3em'}\n                  color={this.props.iconColor ? this.props.iconColor : 'redeem'}\n                />\n              ) : this.props.image && (\n                <Image\n                  src={this.props.image}\n                  width={this.props.isMobile ? '1.8em' : '2.7em'}\n                  height={this.props.isMobile ? '1.8em' : '2.7em'}\n                />\n              )\n            }\n          </Flex>\n          <Flex\n            ml={[2,3]}\n            flexDirection={'column'}\n            alignItems={'flex-start'}\n            justifyContent={'center'}\n          >\n            <Text\n              fontWeight={3}\n              fontSize={[1,3]}\n            >\n              {this.props.title}\n            </Text>\n            <Text\n              fontWeight={2}\n              fontSize={[0,2]}\n              color={'cellText'}\n            >\n              {this.props.text}\n            </Text>\n          </Flex>\n          <Icon\n            align={'center'}\n            color={'cellText'}\n            name={'KeyboardArrowRight'}\n            size={this.props.isMobile ? '1.8em' : '2.5em'}\n          />\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default DashboardIconButton;\n","import { Flex } from \"rimble-ui\";\nimport Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport CustomList from '../CustomList/CustomList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass PolygonBridgeTransactions extends Component {\n\n  state = {\n    loaded:false,\n    bridgeEnabled:false,\n    polygonTransactions:null,\n    polygonTransactionsAvailableTokens:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    if (accountChanged){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    if (!this.props.account){\n      return false;\n    }\n\n    let polygonTransactionsAvailableTokens = null;\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const polygonBridgeConfig = this.functionsUtil.getGlobalConfig(['tools','polygonBridge']);\n    const bridgeEnabled = polygonBridgeConfig.enabled && polygonBridgeConfig.availableNetworks.includes(currentNetwork.id);\n\n    if (!bridgeEnabled){\n      return this.setState({\n        loaded:true,\n        bridgeEnabled\n      });\n    }\n\n    const polygonTransactions = await this.functionsUtil.getPolygonBridgeTxs(this.props.account);\n\n    // console.log('polygonTransactions',this.props.account,this.props.web3,polygonTransactions);\n\n    if (polygonTransactions && polygonTransactions.length>0){\n      polygonTransactionsAvailableTokens = polygonTransactions.map( (tx) => {\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['tools','polygonBridge','props','availableTokens',tx.tokenSymbol]);\n        let actionIcon = null;\n        switch (tx.action){\n          default:\n          case 'Deposit':\n            actionIcon = 'ArrowDownward';\n          break;\n          case 'Withdraw':\n            actionIcon = 'ArrowUpward';\n          break;\n          case 'Exit':\n            actionIcon = 'Undo';\n          break;\n        }\n        const depositInfo = {\n          actionIcon,\n          amount:tx.value,\n          token:tx.tokenSymbol,\n          action:tx.action.toUpperCase(),\n          bridgeType:tx.bridgeType.toUpperCase(),\n          status:tx.included ? 'Completed' : 'pending',\n          hash:this.functionsUtil.shortenHash(tx.hash),\n          statusIcon:tx.included ? 'Done' : 'Timelapse',\n          actionIconProps:{\n            color:this.props.theme.colors.transactions.action[tx.action.toLowerCase()],\n            bgColor:this.props.theme.colors.transactions.actionBg[tx.action.toLowerCase()]\n          },\n          url:this.functionsUtil.getEtherscanTransactionUrl(tx.hash,tx.networkId),\n          date:this.functionsUtil.strToMoment(parseInt(tx.timeStamp)*1000).format('DD MMM, YYYY'),\n          statusIconProps:{\n            color:tx.included ? this.props.theme.colors.transactions.status.completed : this.props.theme.colors.transactions.status.pending\n          },\n          tokenIcon:tokenConfig.icon || this.functionsUtil.getGlobalConfig(['stats','tokens',tx.tokenSymbol,'icon']) || `images/tokens/${tx.tokenSymbol}.svg`\n        };\n        return depositInfo;\n      });\n    }\n\n    // console.log('PolygonBridgeTransactions',polygonTransactions,polygonTransactionsAvailableTokens);\n\n    this.setState({\n      loaded:true,\n      bridgeEnabled,\n      polygonTransactions,\n      polygonTransactionsAvailableTokens\n    });\n  }\n\n  render() {\n\n    if (!this.state.loaded || !this.state.bridgeEnabled){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          this.props.title && ((this.state.polygonTransactionsAvailableTokens && this.state.polygonTransactionsAvailableTokens.length>0) || this.props.children) && (\n            <Title\n              {...this.props.titleProps}\n            >\n              {this.props.title}\n            </Title>\n          )\n        }\n        {\n          this.state.polygonTransactionsAvailableTokens && this.state.polygonTransactionsAvailableTokens.length>0 ? (\n            <CustomList\n              paginationEnabled={true}\n              handleClick={(props) => this.functionsUtil.openWindow(props.row.url)}\n              cols={[\n                {\n                  title:'HASH',\n                  mobile:false,\n                  props:{\n                    width:[0.44,0.18],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'bgIcon',\n                      path:['actionIcon'],\n                    },\n                    {\n                      type:'text',\n                      path:['hash'],\n                      props:{\n                        ml:[0,2]\n                      }\n                    },\n                  ]\n                },\n                {\n                  title:'ACTION',\n                  props:{\n                    width:[0.25,0.14],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['action'],\n                    },\n                  ]\n                },\n                {\n                  title:'DATE',\n                  props:{\n                    width:[0.25,0.15],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['date'],\n                    },\n                  ]\n                },\n                {\n                  title:'BRIDGE',\n                  mobile:false,\n                  props:{\n                    width:[0.44,0.12],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['bridgeType'],\n                    },\n                  ]\n                },\n                {\n                  title:'STATUS',\n                  props:{\n                    width:[0.25,0.15],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'icon',\n                      mobile:false,\n                      path:['statusIcon'],\n                      props:{\n                        mr:2,\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      }\n                    },\n                    {\n                      name:'custom',\n                      path:['status'],\n                      props:{\n                        style:{\n                          textTransform:'capitalize'\n                        }\n                      }\n                    }\n                  ]\n                },\n                {\n                  mobile:false,\n                  title:'AMOUNT',\n                  props:{\n                    width:[0.25, 0.15],\n                  },\n                  fields:[\n                    {\n                      type:'number',\n                      path:['amount'],\n                      props:{\n                        decimals: 4\n                      }\n                    },\n                    {\n                      name:'tokenName',\n                      props:{\n                        ml:2\n                      }\n                    }\n                  ]\n                },\n                {\n                  title:'TOKEN',\n                  props:{\n                    width:[0.25,0.13]\n                  },\n                  fields:[\n                    {\n                      type:'image',\n                      path:['tokenIcon'],\n                      props:{\n                        mr:2,\n                        height:['1.4em','1.6em']\n                      }\n                    },\n                    {\n                      type:'text',\n                      path:['token'],\n                    }\n                  ]\n                },\n              ]}\n              {...this.props}\n              rows={this.state.polygonTransactionsAvailableTokens}\n            />\n          ) : this.props.children\n        }\n      </Flex>\n    )\n  }\n}\n\nexport default PolygonBridgeTransactions;","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetsList from '../AssetsList/AssetsList';\n// import RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport PortfolioDonut from '../PortfolioDonut/PortfolioDonut';\nimport ActiveCoverages from '../ActiveCoverages/ActiveCoverages';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport PortfolioEquity from '../PortfolioEquity/PortfolioEquity';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport EarningsEstimation from '../EarningsEstimation/EarningsEstimation';\nimport { Flex, Box, Heading, Text, Tooltip, Icon, Loader } from \"rimble-ui\";\nimport DashboardIconButton from '../DashboardIconButton/DashboardIconButton';\nimport TotalBalanceCounter from '../TotalBalanceCounter/TotalBalanceCounter';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\nimport PolygonBridgeTransactions from '../PolygonBridgeTransactions/PolygonBridgeTransactions';\n\n// const env = process.env;\n\nclass StrategyPage extends Component {\n\n  state = {\n    portfolio:null,\n    depositedTokens:[],\n    tokensToMigrate:{},\n    aggregatedValues:[],\n    remainingTokens:null,\n    batchedDeposits:null,\n    portfolioLoaded:false,\n    portfolioLoading:false,\n    availableGovTokens:null,\n    portfolioEquityStartDate:null,\n    batchedDepositsAvailableTokens:null,\n    portfolioEquityQuickSelection:'week',\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    await this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const availableTokensChanged = JSON.stringify(prevProps.availableTokens) !== JSON.stringify(this.props.availableTokens);\n    if (accountChanged || availableTokensChanged){\n      this.setStateSafe({\n        portfolioLoaded:false\n      },() => {\n        this.loadPortfolio();\n      });\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return await this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setStateSafe({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  async loadPortfolio(){\n    const availableTokens = this.props.availableTokens || {};\n    // const currentNetwork = this.functionsUtil.getRequiredNetwork();\n\n    if (this.state.portfolioLoaded || this.state.portfolioLoading){\n      return false;\n    }\n\n    await this.setStateSafe({\n      portfolioLoading:true\n    });\n\n    // Load portfolio if account is set\n    if (this.props.account){\n      const newState = {};\n      const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n      // Load and process Etherscan Txs\n      this.functionsUtil.getEtherscanTxs(this.props.account,firstBlockNumber,'latest',Object.keys(availableTokens))\n\n      // Load data\n      const [\n        batchedDeposits,\n        portfolio,\n      ] = await Promise.all([\n        // Load claimable batches\n        [],//this.functionsUtil.getBatchedDeposits(this.props.account),\n        // Load portfolio\n        this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account),\n      ]);\n\n      newState.portfolio = portfolio;\n\n      newState.batchedDeposits = batchedDeposits && Object.keys(batchedDeposits).length>0 ? batchedDeposits : null;\n\n      if (newState.batchedDeposits){\n        newState.batchedDepositsAvailableTokens = Object.keys(newState.batchedDeposits).reduce( (batchedDepositsAvailableTokens,token) => {\n          const batchInfo = newState.batchedDeposits[token];\n          const tokenConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit','props','availableTokens',token]);\n          if (tokenConfig.strategy === this.props.selectedStrategy){\n            switch (batchInfo.status){\n              case 'pending':\n                tokenConfig.statusIcon = 'Timelapse';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.pending\n                };\n              break;\n              case 'executed':\n                tokenConfig.statusIcon = 'Done';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.completed\n                };\n              break;\n              default:\n              break;\n            }\n            tokenConfig.token = token;\n            tokenConfig.status = batchInfo.status;\n            tokenConfig.deposited = batchInfo.batchDeposits;\n            tokenConfig.redeemable = batchInfo.batchRedeems;\n            batchedDepositsAvailableTokens[tokenConfig.baseToken] = tokenConfig;\n          }\n          return batchedDepositsAvailableTokens;\n        },{});\n      }\n\n      newState.depositedTokens = [];\n      newState.tokensToMigrate = [];\n\n      if (portfolio){\n        const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.functionsUtil.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n        newState.depositedTokens = depositedTokens;\n\n        const isRisk = this.props.selectedStrategy === 'risk';\n\n        let avgAPY = this.functionsUtil.BNify(0);\n        // let avgScore = this.functionsUtil.BNify(0);\n        let totalAmountLent = this.functionsUtil.BNify(0);\n        // let totalBalanceWithScore = this.functionsUtil.BNify(0);\n\n        await this.functionsUtil.asyncForEach(depositedTokens,async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          const [\n            tokenAprs,\n            // tokenScore,\n            amountLent,\n          ] = await Promise.all([\n            this.functionsUtil.getTokenAprs(tokenConfig),\n            // this.functionsUtil.getTokenScore(tokenConfig,isRisk),\n            this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account)\n          ]);\n\n          const amountLentToken = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n\n          const tokenBalance = portfolio.tokensBalance[token].tokenBalance;\n          const tokenWeight = tokenBalance.div(portfolio.totalBalance);\n          const tokenAPY = tokenAprs.avgApy && !this.functionsUtil.BNify(tokenAprs.avgApy).isNaN() ? this.functionsUtil.BNify(tokenAprs.avgApy) : this.functionsUtil.BNify(0);\n\n          if (!tokenAPY.isNaN()){\n            avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n          }\n\n          // if (!tokenScore.isNaN() && tokenScore.gt(0)){\n          //   avgScore = avgScore.plus(tokenScore.times(tokenBalance));\n          //   totalBalanceWithScore = totalBalanceWithScore.plus(tokenBalance);\n          // }\n\n          if (amountLentToken){\n            totalAmountLent = totalAmountLent.plus(amountLentToken);\n          }\n        });\n\n        // if (!totalBalanceWithScore.isNaN() && totalBalanceWithScore.gt(0)){\n        //   avgScore = avgScore.div(totalBalanceWithScore);\n        // }\n\n        // console.log('avgAPY',avgAPY.toFixed());\n\n        // Add gov tokens to earnings\n        const govTokensTotalBalance = await this.functionsUtil.getGovTokensUserTotalBalance(this.props.account,availableTokens,'DAI');\n        const govTokensUserBalance = await this.functionsUtil.getGovTokensUserBalances(this.props.account,availableTokens,null);\n        const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n          const balance = govTokensUserBalance[govToken];\n          if (balance.gt(0)){\n            return `+${balance.toFixed(2)} ${govToken}`;\n          } else {\n            return null;\n          }\n        }).filter(v => (v !== null)) : null;\n\n        newState.avgAPY = avgAPY;\n        // newState.avgScore = avgScore;\n        newState.tokensToMigrate = portfolio.tokensToMigrate;\n        newState.govTokensTotalBalance = govTokensTotalBalance;\n        newState.govTokensTotalBalanceTooltip = govTokensTotalBalanceTooltip;\n      }\n\n      newState.portfolioLoaded = true;\n      newState.portfolioLoading = false;\n      \n      const remainingTokens = Object.keys(availableTokens).filter(token => (!newState.depositedTokens.includes(token) && !Object.keys(newState.tokensToMigrate).includes(token)) );\n      newState.remainingTokens = remainingTokens;\n\n      // Portfolio loaded\n      this.setStateSafe(newState);\n    // Show available assets for not logged users\n    } else {\n      this.setStateSafe({\n        tokensToMigrate:{},\n        depositedTokens:[],\n        portfolioLoaded:true,\n        portfolioLoading:false,\n        remainingTokens:Object.keys(availableTokens),\n      });\n    }\n  }\n\n  render(){\n    const viewOnly = this.props.connectorName === 'custom';\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    const apyLong = this.functionsUtil.getGlobalConfig(['messages','apyLong']);\n    const yieldFarming = this.functionsUtil.getGlobalConfig(['messages','yieldFarming']);\n    const nexusMutualConfig = this.functionsUtil.getGlobalConfig(['tools','nexusMutual']);\n    const batchDepositConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    const polygonBridgeConfig = this.functionsUtil.getGlobalConfig(['tools','polygonBridge']);\n    const strategyName = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'title']);\n    const toolsToShow = ['addFunds','nexusMutual','tokenSwap'].filter( toolName => {\n      const toolConfig = this.functionsUtil.getGlobalConfig(['tools',toolName]);\n      return toolConfig.enabled && (!toolConfig.availableNetworks.length || toolConfig.availableNetworks.includes(parseInt(currentNetwork.id)));\n    })\n\n    return (\n      <Box\n        width={1}\n      >\n        <Title\n          mb={3}\n        >\n          {strategyName} strategy\n        </Title>\n        {\n          /*\n          currentNetwork.id === 137 ? (\n            <Flex\n              width={1}\n              minHeight={'45vh'}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  width:[1,0.5],\n                }}\n              >\n                <Flex\n                  aligItems={'center'}\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={'2.3em'}\n                    color={'cellText'}\n                    name={'AccessTime'}\n                  />\n                  <Text\n                    mt={2}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Hang on, please!<br />The {strategyName} strategy has not yet been activated in Polygon.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:3,\n                      width:[1,1/2]\n                    }}\n                    handleClick={e => this.props.goToSection(`stake`)}\n                  >\n                    Go to Staking\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            </Flex>\n          ) :\n          */\n          !this.state.portfolioLoaded ? (\n            <FlexLoader\n              textProps={{\n                textSize:4,\n                fontWeight:2\n              }}\n              loaderProps={{\n                mb:3,\n                size:'40px'\n              }}\n              flexProps={{\n                minHeight:'50vh',\n                flexDirection:'column'\n              }}\n              text={'Loading portfolio...'}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              {\n                this.props.account && this.state.depositedTokens.length>0 ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.avgAPY ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.avgAPY.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg APY\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <TotalBalanceCounter\n                                    decimals={5}\n                                    {...this.props}\n                                    portfolio={this.state.portfolio}\n                                  />\n                                  <Flex\n                                    mt={1}\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    {\n                                      /*\n                                      <Flex\n                                        width={0.45}\n                                        alignItems={'center'}\n                                        justifyContent={'flex-end'}\n                                      >\n                                        <Text\n                                          fontSize={1}\n                                          fontWeight={3}\n                                          fontFamily={this.props.theme.fonts.counter}\n                                          color={this.props.theme.colors.transactions.status.completed}\n                                        >\n                                          +{this.state.portfolio.totalEarningsPerc.toFixed(2)}%\n                                        </Text>\n                                      </Flex>\n                                      <Text\n                                        mx={1}\n                                        fontSize={1}\n                                        fontWeight={3}\n                                        fontFamily={this.props.theme.fonts.counter}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >|</Text>\n                                      */\n                                    }\n                                    <TotalEarningsCounter\n                                      {...this.props}\n                                      unit={'+$'}\n                                      decimals={4}\n                                      counterStyle={{\n                                        fontSize:14,\n                                        fontWeight:600,\n                                        color:this.props.theme.colors.transactions.status.completed\n                                      }}\n                                      portfolio={this.state.portfolio}\n                                    />\n                                  </Flex>\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Balance\n                              </Text>\n                              {\n                                this.state.govTokensTotalBalance && (\n                                  <Tooltip\n                                    placement={'bottom'}\n                                    message={'Total Balance does not include accrued governance tokens: '+(this.state.govTokensTotalBalance && this.state.govTokensTotalBalance.gt(0) ? ` (${this.state.govTokensTotalBalanceTooltip.join(' / ')})` : '')}\n                                  >\n                                    <Icon\n                                      ml={2}\n                                      name={\"Info\"}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                    />\n                                  </Tooltip>\n                                )\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: '<small>+</small>'+this.state.portfolio.totalEarningsPerc.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Profit\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','totalProfitPerc'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.328]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <PortfolioDonut\n                            {...this.props}\n                            parentId={'portfolio-composition'}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.666]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquity\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mb={3}\n                    mx={'auto'}\n                    width={[1,0.8]}\n                    aligItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontWeight={2}\n                      fontSize={[1,2]}\n                      textAlign={'center'}\n                    >\n                      {\n                        this.props.isMobile ?\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descShort'])\n                        :\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descLong'])\n                      }\n                    </Text>\n                  </Flex>\n                )\n              }\n              {\n                !viewOnly && this.state.depositedTokens.length>0 && this.props.account && toolsToShow.length>=2 && (\n                  <Flex\n                    mt={3}\n                    width={1}\n                    id={\"tools\"}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      pb={2}\n                      width={1}\n                      mb={[2,3]}\n                      borderColor={'divider'}\n                      borderBottom={'1px solid transparent'}\n                    >\n                      <Heading.h4\n                        fontSize={[2,4]}\n                        fontWeight={[3,4]}\n                      >\n                        Tools\n                      </Heading.h4>\n                    </Flex>\n                    <Flex\n                      flexDirection={['column','row']}\n                    >\n                      {\n                        ['addFunds','nexusMutual','tokenSwap'].map( (toolName,toolIndex) => {\n                          const toolConfig = this.functionsUtil.getGlobalConfig(['tools',toolName]);\n                          return (\n                            <Flex\n                              key={`tool_${toolIndex}`}\n                              mb={toolIndex<2 ? [2,0] : 0}\n                              pr={toolIndex<2 ? [0,3] : 0}\n                              width={[1,1/toolsToShow.length]}\n                            >\n                              <DashboardIconButton\n                                {...this.props}  \n                                icon={toolConfig.icon}\n                                text={toolConfig.desc}\n                                image={toolConfig.image}\n                                title={toolConfig.label}\n                                handleClick={ e => this.props.goToSection(`tools/${toolConfig.route}`) }\n                              />\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                )\n              }\n              {\n                nexusMutualConfig.enabled && nexusMutualConfig.availableNetworks.includes(currentNetwork.id) && this.state.portfolio && this.state.portfolio.totalBalance.gt(0) && (\n                  <Flex\n                    width={1}\n                    id={'active-coverages'}\n                    flexDirection={'column'}\n                  >\n                    <ActiveCoverages\n                      {...this.props}\n                      title={'Coverage'}\n                      titleProps={{\n                        my:4\n                      }}\n                    />\n                  </Flex>\n                )\n              }\n              {\n                this.state.batchedDeposits && (\n                  <Flex\n                    width={1}\n                    mb={[0,3]}\n                    id={'batched-deposits'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Batched Deposits</Title>\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.batchedDepositsAvailableTokens)}\n                        cols={[\n                          {\n                            title:'TOKEN',\n                            props:{\n                              width:[0.3,0.2]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.33, 0.21],\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['deposited'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                name:'tokenName',\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'REDEEMABLE',\n                            props:{\n                              width:[0.44,0.23],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['redeemable'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                type:'text',\n                                name:'custom',\n                                path:['token'],\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'STATUS',\n                            props:{\n                              width:[0.26,0.19],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'icon',\n                                mobile:false,\n                                name:'custom',\n                                path:['statusIcon'],\n                                props:{\n                                  mr:2,\n                                  size:this.props.isMobile ? '1.2em' : '1.8em'\n                                }\n                              },\n                              {\n                                name:'custom',\n                                path:['status'],\n                                props:{\n                                  style:{\n                                    textTransform:'capitalize'\n                                  }\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[0.35,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Claim',\n                                funcProps:{\n                                  disabled:(props) => (props.tokenConfig.status === 'pending')\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.goToSection(`tools/${batchDepositConfig.route}/${props.tokenConfig.token}`)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                        availableTokens={this.state.batchedDepositsAvailableTokens}\n                      />\n                    </Flex>\n                  </Flex>\n                )\n              }\n              <Flex\n                width={1}\n                id={'available-assets'}\n                flexDirection={'column'}\n                mb={!this.state.depositedTokens.length ? 4 : 0}\n              >\n                {\n                  (this.state.depositedTokens.length>0 || Object.keys(this.state.tokensToMigrate).length>0 || this.state.remainingTokens.length>0 ) &&\n                    <Title my={[3,4]}>Available assets</Title>\n                }\n                <Flex width={1} flexDirection={'column'}>\n                  {\n                    Object.keys(this.state.tokensToMigrate).length>0 &&\n                    <Flex\n                      width={1}\n                      mb={[3,4]}\n                      id={\"migrate-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Assets to migrate\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.tokensToMigrate)}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.15]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.12],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.26,0.15],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                showLoader:false,\n                                name:'idleDistribution',\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                },\n                                visible:currentNetwork.provider==='infura' ? true : false\n                              },\n                            ]\n                          },\n                          {\n                            title:'OLD APY',\n                            props:{\n                              width:[0.26,0.12],\n                            },\n                            fields:[\n                              {\n                                name:'oldApy'\n                              }\n                            ]\n                          },\n                          {\n                            title:'BALANCE',\n                            mobile:false,\n                            props:{\n                              width:[0.16,0.14],\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'amountToMigrate',\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.15],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens'\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.29 : 0 ,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: 'Migrate',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                  this.state.depositedTokens.length>0 &&\n                    <Flex\n                      mb={ this.state.remainingTokens.length>0 ? [3,4] : 0 }\n                      width={1}\n                      id={\"deposited-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Deposited assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.depositedTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            props:{\n                              width:[0.21,0.11],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.30,0.16],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                },\n                                visible:currentNetwork.provider==='infura' ? true : false\n                              },\n                            ]\n                          },\n                          {\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.22,0.15],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'amountLent'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.13],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'EARNINGS',\n                            props:{\n                              width:[0.15,0.15],\n                              textAlign:'center'\n                            },\n                            parentProps:{\n                              alignItems:'center',\n                              flexDirection:'column',\n                            },\n                            fields:[\n                              {\n                                name:'earnings',\n                                props:{\n                                  decimals:3\n                                }\n                              },\n                              {\n                                name:'earningsPerc',\n                                showLoader:false,\n                                showDirection:false,\n                                props:{\n                                  fontSize:0,\n                                  decimals:3\n                                }\n                              }\n                            ]\n                          },\n                          /*\n                          {\n                            title:'EARNINGS %',\n                            props:{\n                              width:[0.27,0.14],\n                            },\n                            fields:[\n                              {\n                                name:'earningsPerc'\n                              }\n                            ]\n                          },\n                          */\n                          {\n                            title:'',\n                            mobile:false,\n                            props:{\n                              width:0.17,\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Manage',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'redeem',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                    this.state.remainingTokens.length>0 &&\n                    <Flex id=\"remaining-assets\" width={1} flexDirection={'column'}>\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Available assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.remainingTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:true,\n                            title:'POOL',\n                            visibleOnDesktop:true,\n                            props:{\n                              width:[0.21, 0.13],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.31,0.16],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                },\n                                visible:currentNetwork.provider==='infura' ? true : false\n                              },\n                            ]\n                          },\n                          {\n                            title:'FARMING',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account !== null,\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.22,0.16],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APR LAST WEEK',\n                            mobile:false,\n                            props:{\n                              width:0.25,\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'aprChart',\n                                style:{\n                                  overflow:'visible',\n                                },\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.26 : 0 , 0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: (props) => {\n                                  return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'Migrate' : 'Deposit';\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                },\n                                funcProps:{\n                                  mainColor: (props) => {\n                                    return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'migrate' : 'deposit'\n                                  }\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                </Flex>\n              </Flex>\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id={\"yield-farming\"}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Yield Farming</Title>\n                    <AssetsList\n                      enabledTokens={Object.keys(this.functionsUtil.getGovTokensFarming())}\n                      cols={[\n                        {\n                          title:'TOKEN',\n                          props:{\n                            width:[0.3,0.15]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:2,\n                                height:['1.4em','2.3em']\n                              }\n                            },\n                            {\n                              name:'tokenName'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'BALANCE',\n                          props:{\n                            width:[0.33, 0.25],\n                          },\n                          fields:[\n                            {\n                              name:'tokenBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            }\n                          ]\n                        },\n                        {\n                          title:'REDEEMABLE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                          props:{\n                            width:[0.35,0.30],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'redeemableBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            },\n                          ]\n                        },\n                        {\n                          title:'DISTRIBUTION',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                          props:{\n                            width:[0.35,0.30],\n                          },\n                          fields:[\n                            {\n                              name:'userDistributionSpeed',\n                              props:{\n                                decimals:6\n                              }\n                            }\n                          ]\n                        },\n                        /*\n                        {\n                          mobile:false,\n                          title:'APR',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenApr']),\n                          props:{\n                            width:[0.2,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'apr',\n                            }\n                          ]\n                        },\n                        {\n                          title:'TOKEN PRICE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','tokenPrice']),\n                          mobile:false,\n                          props:{\n                            width: 0.17,\n                          },\n                          parentProps:{\n                            width:1,\n                            pr:[2,4]\n                          },\n                          fields:[\n                            {\n                              name:'tokenPrice',\n                              props:{\n                                unit:'$',\n                                unitPos:'left',\n                                unitProps:{\n                                  mr:1,\n                                  fontWeight:3,\n                                  fontSize:[0,2],\n                                  color:'cellText'\n                                }\n                              }\n                            }\n                          ]\n                        },\n                        */\n                      ]}\n                      {...this.props}\n                      availableTokens={govTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id=\"earnings-estimation\"\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Estimated earnings</Title>\n                    <EarningsEstimation\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.props.account && polygonBridgeConfig.enabled && polygonBridgeConfig.availableNetworks.includes(currentNetwork.id) && (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                    id={'polygon-transactions'}\n                  >\n                    <PolygonBridgeTransactions\n                      {...this.props}\n                      title={'Polygon Bridge Transactions'}\n                      titleProps={{\n                        my:4\n                      }}\n                    />\n                  </Flex>\n                )\n              }\n              {\n                this.props.account && this.state.depositedTokens.length>0 && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={[]}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.15,0.24]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.15,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.32,0.23],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.22],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:0.19,\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.15,0.20],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','1.6em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default StrategyPage;","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TransactionField from '../TransactionField/TransactionField';\nimport { Flex, Box, Text, Icon, Link, Checkbox, Tooltip } from \"rimble-ui\";\n\nclass BatchDeposit extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      execute:{\n        txHash:null,\n        loading:false\n      },\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    usePermit:false,\n    batchRedeems:{},\n    lastExecution:null,\n    permitEnabled:true,\n    hasDeposited:false,\n    permitSigned:false,\n    selectedToken:null,\n    showPermitBox:false,\n    currBatchIndex:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    availableTokens:null,\n    selectedStrategy:null,\n    componentLoaded:false,\n    executeSucceeded:false,\n    migrationEnabled:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    availableStrategies:null,\n    batchDepositEnabled:false,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadStrategies();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      this.setState({\n        componentLoaded:false\n      },async () => {\n        await this.loadTokens();\n      });\n    }\n\n    const selectedStrategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    if (selectedStrategyChanged){\n      const selectedToken = Object.keys(this.state.availableTokens)[0];\n      this.selectToken(selectedToken);\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const executeSucceededChanged = prevState.executeSucceeded !== this.state.executeSucceeded;\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (selectedTokenChanged || contractApprovedChanged || executeSucceededChanged){\n      this.checkBatchs();\n    }\n\n  }\n\n  async execute () {\n\n    const loading = true;\n\n    const callbackExecute = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Execute',\n        eventCategory: 'BatchDeposit',\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        executeSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          execute:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptExecute = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          execute:{\n            ...prevState.processing.execute,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'executeBatch', [true], null, callbackExecute, callbackReceiptExecute);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        execute:{\n          ...prevState.processing.execute,\n          loading\n        }\n      }\n    }));\n  }\n\n  async checkBatchs(migrationSucceeded=false){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.tokenConfig.name,this.state.tokenConfig.address,this.state.tokenConfig.abi)\n    ]);\n\n    let [\n      batchExecutions,\n      currBatchIndex,\n      migrationContractApproved\n    ] = await Promise.all([\n      this.functionsUtil.getBatchedDepositExecutions(migrationContractInfo.address),\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.tokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    // If use Permit don't ask for Approve\n    let usePermit = false;\n    if (!migrationContractApproved && migrationContractInfo.functions && migrationContractInfo.functions.length === 1){\n      const functionInfo = migrationContractInfo.functions[0];\n      usePermit = typeof functionInfo.usePermit !== 'undefined' ? functionInfo.usePermit : false;\n      const nonceMethod = this.functionsUtil.getGlobalConfig(['permit',this.state.tokenConfig.name,'nonceMethod']);\n      const permitContract = this.functionsUtil.getContractByName(this.state.tokenConfig.name);\n      usePermit = usePermit && permitContract && (!nonceMethod || permitContract.methods[nonceMethod] !== undefined);\n    }\n\n    const newState = {};\n    const batchTotals = {};\n    const batchRedeems = {};\n    const batchDeposits = {};\n    let batchCompleted = false;\n\n    currBatchIndex = currBatchIndex || 0;\n    for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex) ; batchIndex++){\n      let [\n        batchTotal,\n        batchRedeem,\n        batchDeposit\n      ] = await Promise.all([\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchRedeemedTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n      ]);\n      if (batchTotal && batchTotal !== null){\n        batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.tokenConfig.decimals);\n      }\n      if (batchDeposit !== null){\n        batchRedeem = this.functionsUtil.fixTokenDecimals(batchRedeem,18);\n        batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.tokenConfig.decimals);\n        if (batchDeposit.gt(0)){\n          batchDeposits[batchIndex] = batchDeposit;\n          // Calculate redeemable idleTokens\n          batchRedeems[batchIndex] = batchDeposit.times(batchRedeem).div(batchTotals[batchIndex]);\n          if (batchRedeems[batchIndex].gt(batchRedeem)){\n            batchRedeems[batchIndex] = batchRedeem;\n          }\n          // Check claimable\n          if (batchIndex < currBatchIndex){\n            batchCompleted = true;\n          }\n        }\n      }\n    }\n\n    newState.batchDeposits = batchDeposits;\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n    const batchDepositInfo = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    const batchDepositEnabled = batchDepositInfo.depositEnabled;\n\n    newState.usePermit = usePermit;\n    newState.showPermitBox = false;\n    newState.claimSucceeded = false;\n    newState.componentLoaded = true;\n    newState.executeSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.hasDeposited = hasDeposited;\n    newState.batchRedeems = batchRedeems;\n    newState.lastExecution = lastExecution;\n    newState.currBatchIndex = currBatchIndex;\n    newState.batchCompleted = batchCompleted;\n    newState.migrationSucceeded = migrationSucceeded;\n    newState.batchDepositEnabled = batchDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    // Prevent user to deposit if the batch has been completed\n    newState.canDeposit = batchDepositEnabled && !batchCompleted;\n    newState.migrationContractApproved = migrationContractApproved;\n    newState.action = hasDeposited || newState.canClaim ? 'redeem' : 'deposit';\n\n    this.setState(newState);\n  }\n\n  async loadStrategies(){\n\n    // Init tokens contracts\n    const availableStrategiesKeys = {};\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n      availableStrategiesKeys[tokenConfig.strategy] = true;\n    });\n\n    const availableStrategies = Object.keys(availableStrategiesKeys).map( strategy => {\n      const strategyConfig = this.functionsUtil.getGlobalConfig(['strategies',strategy]);\n      return {\n        value:strategy,\n        icon:strategyConfig.icon,\n        label:strategyConfig.title\n      };\n    });\n\n    // console.log('availableStrategies',availableStrategies);\n\n    if (availableStrategies && availableStrategies.length>0){\n      let selectedStrategy = availableStrategies[0].value;\n      let selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n      if (selectedToken){\n        const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n        selectedToken = selectedTokenConfig.baseToken;\n        selectedStrategy = selectedTokenConfig.strategy;\n      }\n\n      this.setState({\n        availableStrategies\n      },() => {\n        this.selectStrategy(selectedStrategy,selectedToken);\n      });\n    }\n  }\n\n  /*\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n    if (selectedToken){\n      this.selectToken(selectedToken);\n    }\n  }\n  */\n\n  async selectStrategy (selectedStrategy,selectedToken=null) {\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens)\n      .filter(key => this.props.toolProps.availableTokens[key].strategy === selectedStrategy )\n      .reduce((obj, key) => {\n        const tokenConfig = this.props.toolProps.availableTokens[key];\n        const baseTokenConfig = this.props.availableStrategies[selectedStrategy][tokenConfig.baseToken];\n\n        tokenConfig.abi = baseTokenConfig.abi;\n        tokenConfig.token = baseTokenConfig.token;\n        tokenConfig.address = baseTokenConfig.address;\n        tokenConfig.decimals = baseTokenConfig.decimals;\n        obj[tokenConfig.baseToken] = tokenConfig;\n        return obj;\n      }, {});\n\n    this.setState({\n      availableTokens,\n      selectedStrategy\n    },() => {\n      if (selectedToken){\n        this.selectToken(selectedToken);\n      }\n    });\n  }\n\n  async selectToken (selectedToken) {\n    const selectedTokenConfig = this.state.availableTokens[selectedToken];\n    const strategyAvailableTokens = this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.token];\n\n    const tokenConfig = {\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address,\n      decimals:baseTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:baseTokenConfig.abi,\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.token);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    },() => {\n      // Select strategy and available tokens\n      if (selectedTokenConfig.strategy !== this.state.selectedStrategy){\n        const selectedStrategy = selectedTokenConfig.strategy;\n        this.selectStrategy(selectedStrategy);\n      }\n    });\n  }\n\n  async claim () {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Claim',\n        eventCategory: `BatchDeposit`,\n        eventValue: parseInt(claimableValue),\n        eventLabel: this.props.selectedToken,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  async callbackPermit(){\n    this.setState({\n      permitSigned:true\n    });\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  async callbackApprove(migrationContractApproved){\n    // console.log('callbackApprove',this.state.migrationContractApproved,migrationContractApproved);\n    if (migrationContractApproved !== this.state.migrationContractApproved){\n      this.setState({\n        migrationContractApproved\n      });\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      const migrationSucceeded = false;\n      this.setState({\n        action,\n        migrationSucceeded\n      });\n    }\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  migrationEnabledCallback = (migrationEnabled) => {\n    this.setState({\n      migrationEnabled\n    });\n  }\n\n  migrationCallback = (tx) => {\n    this.checkBatchs(true);\n  }\n\n  render() {\n\n    if (!this.state.selectedStrategy){\n      return null;\n    }\n\n    const usePermit = this.state.permitEnabled && this.state.usePermit;\n    // const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchRedeem = this.state.batchRedeems && Object.values(this.state.batchRedeems).length>0 ? Object.values(this.state.batchRedeems)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n    const contractApproved = (usePermit && this.state.permitSigned) || (!usePermit && this.state.migrationContractApproved);\n    const canExecuteBatch = this.state.batchTotals && this.state.batchTotals[this.state.currBatchIndex] && this.state.batchTotals[this.state.currBatchIndex].gt(0);\n    const strategyDefaultValue = this.state.selectedStrategy ? this.state.availableStrategies.find( s => s.value === this.state.selectedStrategy ) : this.state.availableStrategies[0];\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Choose the strategy:\n            </Text>\n            <GenericSelector\n              {...this.props}\n              name={'strategy'}\n              isSearchable={false}\n              defaultValue={strategyDefaultValue}\n              CustomOptionValue={CustomOptionValue}\n              options={this.state.availableStrategies}\n              onChange={this.selectStrategy.bind(this)}\n              CustomValueContainer={CustomValueContainer}\n            />\n          </Box>\n          {\n            this.state.availableTokens && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select asset to deposit:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-from'}\n                  showBalance={true}\n                  isSearchable={false}\n                  onChange={this.selectToken.bind(this)}\n                  selectedToken={this.state.selectedToken}\n                  availableTokens={this.state.availableTokens}\n                />\n              </Box>\n          }\n          {\n            !this.state.componentLoaded && (\n              <Flex\n                mt={4}\n                flexDirection={'column'}\n              >\n                <FlexLoader\n                  flexProps={{\n                    flexDirection:'row'\n                  }}\n                  loaderProps={{\n                    size:'30px'\n                  }}\n                  textProps={{\n                    ml:2\n                  }}\n                  text={'Loading asset info...'}\n                />\n              </Flex>\n            )\n          }\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : this.state.componentLoaded &&  this.state.selectedTokenConfig && (this.state.canDeposit || this.state.canClaim) && (\n              <Box\n                width={1}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                    px:4,\n                    mt:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  > \n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ contractApproved ? 'CheckBox' : 'LooksOne'}\n                        color={ contractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        {\n                          usePermit ? 'Sign Approve message' : 'Approve the batch deposit contract'\n                        }\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ (this.state.hasDeposited || this.state.batchCompleted) ? 'CheckBox' : 'LooksTwo'}\n                        color={ (this.state.hasDeposited || this.state.batchCompleted) ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Deposit your {this.state.selectedToken}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                        color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Wait for batch execution\n                        <Link\n                          ml={1}\n                          fontWeight={2}\n                          color={'primary'}\n                          display={'inline'}\n                          hoverColor={'primary'}\n                          onClick={ e => this.props.openTooltipModal('Batch Execution Schedule',this.functionsUtil.getGlobalConfig(['messages','batchDepositExecutionSchedule'])) }\n                        >\n                          (Read More)\n                        </Link>\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                        color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Text\n                          ml={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'left'}\n                        >\n                          Claim your {this.state.tokenConfig.idle.token}\n                        </Text>\n                        <Tooltip\n                          placement={'top'}\n                          message={`You will start earning gov tokens after the batch is executed and you claim your ${this.state.tokenConfig.idle.token}`}\n                        >\n                          <Icon\n                            ml={1}\n                            size={'1.2em'}\n                            name={'Warning'}\n                            color={'#ffe000'}\n                            style={{\n                              cursor:'pointer'\n                            }}\n                          />\n                        </Tooltip>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                </DashboardCard>\n              </Box>\n            )\n          }\n          {\n            this.state.componentLoaded && this.props.account && this.state.availableTokens && this.state.selectedToken && (\n              <Box width={1}>\n                {\n                  (contractApproved || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:2,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          color={'cellText'}\n                          name={'LightbulbOutline'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          {this.state.selectedToken} supports Approve and Deposit in a single transaction, disable this feature and try again if you can't deposit in the batch.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded && (\n                    <Flex\n                      p={0}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Batch Deposit?\n                      </Link>\n                    </Flex>\n                  )\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    this.state.batchDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        useMetaTx={false}\n                        showActions={false}\n                        usePermit={usePermit}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        showBalanceSelector={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        migrationParams={toMigrate => [toMigrate]}\n                        selectedStrategy={this.props.selectedStrategy}\n                        callbackPermit={this.callbackPermit.bind(this)}\n                        callbackApprove={this.callbackApprove.bind(this)}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationEnabledCallback={this.migrationEnabledCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedToken} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch Deposit is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar {...this.props} web3={this.props.web3} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.tokenConfig.idle.token}!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!<br />You can now claim your {batchRedeem.toFixed(4)} {this.state.tokenConfig.idle.token}\n                            </Text>\n                            <Text\n                              fontSize={1}\n                              color={'#ff9900'}\n                              textAlign={'center'}\n                            >\n                              (You need to claim your {this.state.tokenConfig.idle.token} to start earning Gov Tokens)\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:2,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'1.8em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited <strong>{batchDeposit.toFixed(4)} {this.state.selectedToken}</strong>, please wait until the batch is executed to claim your {this.state.tokenConfig.idle.token}.\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n                {\n                  this.state.batchTotals[this.state.currBatchIndex] && \n                    <DashboardCard\n                      cardProps={{\n                        p:2,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.execute.loading ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <TxProgressBar {...this.props} waitText={`Batch execution estimated in`} endMessage={`Finalizing batch execution request...`} hash={this.state.processing.execute.txHash} />\n                          </Flex>\n                        ) : this.state.executeSucceeded ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Text\n                              fontWeight={500}\n                              color={'copyColor'}\n                              textAlign={'center'}\n                            >\n                              Batch Pool: {this.state.batchTotals[this.state.currBatchIndex].toFixed(4)} {this.state.selectedToken}\n                            </Text>\n                            {\n                              canExecuteBatch && \n                                <Link\n                                  textAlign={'center'}\n                                  hoverColor={'primary'}\n                                  onClick={this.execute.bind(this)}\n                                >\n                                  Execute Batch\n                                </Link>\n                            }\n                            {\n                              this.state.batchTotals[this.state.currBatchIndex].lt(this.state.selectedTokenConfig.minPoolSize) && (\n                                <Text\n                                  mb={1}\n                                  fontSize={1}\n                                  color={'alert'}\n                                  textAlign={'center'}\n                                >\n                                  (The pool size has to reach at least {this.functionsUtil.formatMoney(this.state.selectedTokenConfig.minPoolSize,0)} {this.state.selectedToken} to be executed)\n                                </Text>\n                              )\n                            }\n                            {\n                              this.state.lastExecution && (\n                                <Text\n                                  fontSize={0}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Last Batch Execution: {this.functionsUtil.strToMoment(this.state.lastExecution.timeStamp*1000).utc().format('YYYY-MM-DD HH:mm UTC')}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchDeposit;","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\n// import TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass PolygonBridge extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    txsToExit:[],\n    infoBox:null,\n    polygonTxs:[],\n    inputValue:null,\n    dataLoaded:false,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    availableTokens:null,\n    availableNetworks:[],\n    approveEnabled:false,\n    contractApproved:false,\n    defaultTransaction:null,\n    approveDescription:null,\n    selectedTransaction:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentDidMount(){\n    this.loadData();\n  }\n\n  async loadPolygonTxs(){\n    const polygonTxs = await this.functionsUtil.getPolygonBridgeTxs();\n    this.setState({\n      polygonTxs,\n      dataLoaded:true\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      const tokenConfig = this.props.toolProps.availableTokens[this.state.selectedToken];\n      const rootTokenConfig = tokenConfig.rootToken;\n      const childTokenConfig = tokenConfig.childToken;\n\n      // Init contracts\n      await Promise.all([\n        rootTokenConfig ? this.props.initContract(rootTokenConfig.name,rootTokenConfig.address,rootTokenConfig.abi) : null,\n        childTokenConfig ? this.props.initContract(childTokenConfig.name,childTokenConfig.address,childTokenConfig.abi) : null\n      ]);\n\n      this.setState({\n        tokenConfig\n      },() => {\n        this.updateData();\n      });\n    } else {\n      const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n      const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n      if (selectedActionChanged || contractApprovedChanged){\n        this.updateData();\n      }\n    }\n\n    const contractInfoChanged = JSON.stringify(prevState.contractInfo) !== JSON.stringify(this.state.contractInfo);\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async changeInputCallback(inputValue=null){\n\n  }\n\n  getTransactionParams(amount){\n    let value = null;\n    let methodName = null;\n    let methodParams = [];\n    let contractName = null;\n    amount = this.functionsUtil.toBN(amount);\n    const bridgeType = this.state.tokenConfig.bridgeType;\n    switch (this.state.selectedAction){\n      case 'Deposit':\n        switch (this.state.selectedToken){\n          case 'WETH':\n            methodName = 'depositEtherFor';\n            contractName = 'RootChainManager';\n            value = this.props.web3.eth.abi.encodeParameter('uint256', amount);\n            methodParams = [this.props.account];\n          break;\n          default:\n            const depositData = this.props.web3.eth.abi.encodeParameter('uint256', amount);\n            switch (bridgeType){\n              case 'plasma':\n                contractName = 'DepositManager';\n                methodName = 'depositERC20ForUser';\n                methodParams = [this.state.tokenConfig.rootToken.address,this.props.account,depositData];\n              break;\n              default:\n              case 'pos':\n                methodName = 'depositFor';\n                contractName = 'RootChainManager';\n                methodParams = [this.props.account,this.state.tokenConfig.rootToken.address,depositData];\n              break;\n            }\n          break;\n        }\n      break;\n      case 'Withdraw':\n        methodName = 'withdraw';\n        methodParams = [amount];\n        contractName = this.state.tokenConfig.childToken.name;\n        if (this.state.tokenConfig.sendValue){\n          value = this.props.web3.eth.abi.encodeParameter('uint256', amount);\n        }\n      break;\n      default:\n      break;\n    }\n\n    // console.log('getTransactionParams',{\n    //   value,\n    //   methodName,\n    //   methodParams,\n    //   contractName\n    // });\n\n    return {\n      value,\n      methodName,\n      methodParams,\n      contractName\n    };\n  }\n\n  exitCallback(){\n\n  }\n\n  async getExitTransactionParams(){\n    const txHash = this.state.selectedTransaction;\n    const exitCalldata = await this.props.maticPOSClient.exitERC20(txHash, { from:this.props.account, encodeAbi: true })\n    if (exitCalldata && exitCalldata.data){\n      return exitCalldata.data;\n    }\n    return null;\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  async selectTransaction(selectedTransaction){\n    this.setState({\n      selectedTransaction\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    /*\n    switch (this.state.selectedAction){\n      case 'Deposit':\n        const depositedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const depositedTokens = depositedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(depositedTokensLog.data,16),this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n      break;\n      case 'Withdraw':\n        const withdrawnTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const withdrawnTokens = withdrawnTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(withdrawnTokensLog.data,16),this.state.tokenConfig.decimals) : (tx.txReceipt && tx.txReceipt.events && tx.txReceipt.events.Transfer ? this.functionsUtil.fixTokenDecimals(tx.txReceipt.events.Transfer.returnValues.value,this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0));\n      break;\n      default:\n      break;\n    }\n    */\n    const transactionSucceeded = tx;\n    this.setState({\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(){\n    const newState = {};\n    const isETH = this.state.selectedToken==='WETH';\n    const bridgeType = this.state.tokenConfig.bridgeType;\n    switch (this.state.selectedAction){\n      case 'Deposit':\n        newState.steps = [];\n        newState.permitEnabled = false;\n        newState.availableNetworks = [1,5];\n        newState.approveEnabled = !isETH;\n        newState.approveDescription = `Approve the contract to deposit your ${this.state.selectedToken}`;\n        newState.contractInfo = bridgeType === 'pos' ? this.props.toolProps.contracts.ERC20Predicate : this.props.toolProps.contracts.DepositManager;\n        newState.balanceProp = isETH ? await this.functionsUtil.getETHBalance(this.props.account) : await this.functionsUtil.getTokenBalance(this.state.tokenConfig.rootToken.name,this.props.account);\n        if (this.state.transactionSucceeded){\n          let depositedTokensLog = null;\n          let depositedTokensEvent = null;\n          if (!isETH){\n            depositedTokensEvent = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events ? Object.values(this.state.transactionSucceeded.txReceipt.events).find( event => event.address.toLowerCase() === this.state.tokenConfig.rootToken.address.toLowerCase() && event.raw.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && event.raw.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && event.raw.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            depositedTokensLog = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.logs ? this.state.transactionSucceeded.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.rootToken.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          } else {\n            depositedTokensEvent = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events ? Object.values(this.state.transactionSucceeded.txReceipt.events).find( event => event.address.toLowerCase() === this.props.toolProps.contracts.EtherPredicate.address.toLowerCase() && event.raw.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && event.raw.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            depositedTokensLog = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.logs ? this.state.transactionSucceeded.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.contracts.EtherPredicate.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          }\n          const depositedTokens = depositedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(depositedTokensLog.data,16),this.state.tokenConfig.decimals) : ( depositedTokensEvent ? this.functionsUtil.fixTokenDecimals(parseInt(depositedTokensEvent.raw.data,16),this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0));\n          newState.infoBox = {\n            icon:'DoneAll',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`You have successfully deposited <strong>${depositedTokens.toFixed(4)} ${this.state.selectedToken}</strong> in the Polygon chain. Please wait ~7-8 minutes for your balance to be accounted in the Polygon chain.`\n          }\n        } else {\n          newState.infoBox = {\n            icon:'InfoOutline',\n            iconProps:{\n              color:'cellText'\n            },\n            text:`Please note that deposit of funds takes ~7-8 minutes to be accounted in the Polygon chain.`\n          }\n        }\n        // console.log('updateData',newState);\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.availableNetworks = [137,80001];\n        newState.contractInfo = this.state.tokenConfig.childToken;\n        newState.balanceProp = await this.functionsUtil.getTokenBalance(this.state.tokenConfig.childToken.name,this.props.account);\n\n        const currentNetwork = this.functionsUtil.getRequiredNetwork();\n        const maticNetwork = currentNetwork.name;\n        const mainNetworkId = this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',currentNetwork.id]);\n        const mainNetworkName = this.functionsUtil.getGlobalConfig(['network','availableNetworks',mainNetworkId,'name']);\n        newState.steps = [\n          {\n            icon:'LooksOne',\n            completed:false,\n            description:`Withdraw ${this.state.selectedToken} from ${maticNetwork} network`\n          },\n          {\n            icon:'LooksTwo',\n            completed:false,\n            description:`Wait for the checkpoint to be submitted`\n          },\n          {\n            icon:'Looks3',\n            completed:false,\n            description:`Exit ${this.state.selectedToken} from ${mainNetworkName} network`\n          },\n        ];\n        if (this.state.transactionSucceeded){\n          const withdrawnTokensEvent = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events ? Object.values(this.state.transactionSucceeded.txReceipt.events).find( event => event.address.toLowerCase() === this.state.tokenConfig.childToken.address.toLowerCase() && event.raw.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && event.raw.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && event.raw.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          const withdrawnTokensLog = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.logs ? this.state.transactionSucceeded.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.childToken.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          const withdrawnTokens = withdrawnTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(withdrawnTokensLog.data,16),this.state.tokenConfig.decimals) : (this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events && this.state.transactionSucceeded.txReceipt.events.Transfer ? this.functionsUtil.fixTokenDecimals(this.state.transactionSucceeded.txReceipt.events.Transfer.returnValues.value,this.state.tokenConfig.decimals) : ( withdrawnTokensEvent ? this.functionsUtil.fixTokenDecimals(parseInt(withdrawnTokensEvent.raw.data,16),this.state.tokenConfig.decimals)  : this.functionsUtil.BNify(0)));\n          newState.infoBox = {\n            icon:'DoneAll',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`You have successfully withdrawn <strong>${withdrawnTokens.toFixed(4)} ${this.state.selectedToken}</strong> from the Polygon chain. Please wait up to 2-3 hours to be able to complete the withdrawal.`\n          }\n        } else {\n          let text = '';\n          switch (bridgeType){\n            case 'plasma':\n              text = `Please note that withdraw of funds takes ~7 days in Plasma.`;\n            break;\n            default:\n            case 'pos':\n              text = `Please note that withdraw of funds takes ~45 mins to 1 hour in PoS.`;\n            break;\n          }\n          newState.infoBox = {\n            text,\n            icon:'InfoOutline',\n            iconProps:{\n              color:'cellText'\n            },\n          }\n        }\n      break;\n      case 'Exit':\n        newState.availableNetworks = [1,5];\n        newState.txsToExit = this.state.polygonTxs.filter( tx => tx.included && tx.action === 'Withdraw' && !tx.exited && tx.tokenSymbol === this.state.selectedToken ).map( tx => {\n          const label = this.functionsUtil.strToMoment(tx.timeStamp*1000).format('DD-MM-YYYY HH:mm')+' - '+tx.value.toFixed(6)+' '+tx.token;\n          return {\n            label,\n            data:tx,\n            value:tx.hash\n          }\n        });\n\n        newState.defaultTransaction = newState.txsToExit.length>0 ? newState.txsToExit[0] : null;\n        newState.selectedTransaction = newState.defaultTransaction ? newState.defaultTransaction.data.hash : null;\n      break;\n      default:\n      break;\n    }\n\n    if (!newState.balanceProp){\n      newState.balanceProp = this.functionsUtil.BNify(0);\n    }\n\n    // console.log('updateData',newState);\n\n    this.setState(newState);\n  }\n\n  async loadData(){\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens).reduce( (output,token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      if (tokenConfig.enabled){\n        output.push({\n          value:token,\n          label:token,\n          ...tokenConfig\n        });\n      }\n      return output;\n    },[]);\n\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const paramIsToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2];\n    const selectedToken = paramIsToken ? this.props.urlParams.param2 : (this.props.selectedToken || this.state.selectedToken || availableTokens[0].value);\n    const selectedOption = availableTokens.find( t => t.value === selectedToken );\n    const defaultAction = !paramIsToken ? (currentNetwork.provider === 'infura' ? 'Deposit' : 'Withdraw') : 'Deposit';\n    const selectedAction = this.props.action || this.state.action || defaultAction;\n    const tokenConfig = this.props.toolProps.availableTokens[selectedToken];\n\n    // console.log('loadData',this.props.urlParams);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedOption,\n      selectedAction,\n      availableTokens\n    },() => {\n      this.loadPolygonTxs();\n    });\n  }\n\n  async exitSelectedTransaction(){\n\n  }\n\n  selectToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n    const fullWidth = !!this.props.fullWidth;\n    const isExit = this.state.selectedAction === 'Exit';\n    const isDeposit = this.state.selectedAction === 'Deposit';\n    const isWithdraw = this.state.selectedAction === 'Withdraw';\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const currentNetworkId = currentNetwork.id;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTokens ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tokens...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.availableTokens.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active tokens.\n                  </Text>\n                ) : (\n                  <Flex\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                    width={[1,fullWidth ? 1 : '33em']}\n                  >\n                    {\n                      !this.props.selectedToken && (\n                        <Box\n                          width={1}\n                        >\n                          <Text\n                            mb={1}\n                          >\n                            Select Token:\n                          </Text>\n                          <AssetSelector\n                            id={'tokens'}\n                            {...this.props}\n                            showBalance={false}\n                            isSearchable={false}\n                            onChange={this.selectToken.bind(this)}\n                            selectedToken={this.state.selectedToken}\n                            availableTokens={this.props.toolProps.availableTokens}\n                          />\n                        </Box>\n                      )\n                    }\n                    {\n                      this.state.selectedToken && (\n                        <Box\n                          mt={2}\n                          width={1}\n                        >\n                          {\n                            !this.props.action && (\n                              <Box\n                                width={1}\n                              >\n                                <Text\n                                  mb={2}\n                                >\n                                  Choose the action:\n                                </Text>\n                                <Flex\n                                  mb={3}\n                                  alignItems={'center'}\n                                  flexDirection={'row'}\n                                  justifyContent={'space-between'}\n                                >\n                                  <CardIconButton\n                                    {...this.props}\n                                    cardProps={{\n                                      px:3,\n                                      py:2,\n                                      width:0.325\n                                    }}\n                                    textProps={{\n                                      fontWeight:2,\n                                      fontSize:[1,2]\n                                    }}\n                                    text={'Deposit'}\n                                    iconColor={'deposit'}\n                                    icon={'ArrowDownward'}\n                                    iconBgColor={'#ced6ff'}\n                                    handleClick={ e => this.setAction('Deposit') }\n                                    isActive={ this.state.selectedAction === 'Deposit' }\n                                  />\n                                  <CardIconButton\n                                    {...this.props}\n                                    cardProps={{\n                                      px:3,\n                                      py:2,\n                                      width:0.325\n                                    }}\n                                    textProps={{\n                                      fontWeight:2,\n                                      fontSize:[1,2]\n                                    }}\n                                    text={'Withdraw'}\n                                    iconColor={'redeem'}\n                                    icon={'ArrowUpward'}\n                                    iconBgColor={'#ceeff6'}\n                                    handleClick={ e => this.setAction('Withdraw') }\n                                    isActive={ this.state.selectedAction === 'Withdraw' }\n                                  />\n                                  <CardIconButton\n                                    {...this.props}\n                                    cardProps={{\n                                      px:3,\n                                      py:2,\n                                      width:0.325\n                                    }}\n                                    textProps={{\n                                      fontWeight:2,\n                                      fontSize:[1,2]\n                                    }}\n                                    text={'Exit'}\n                                    icon={'SwapHoriz'}\n                                    iconColor={'redeem'}\n                                    iconBgColor={'#ceeff6'}\n                                    handleClick={ e => this.setAction('Exit') }\n                                    isActive={ this.state.selectedAction === 'Exit' }\n                                  />\n                                </Flex>\n                              </Box>\n                            )\n                          }\n                          {\n                            !this.state.availableNetworks.includes(currentNetworkId) ? (\n                              <DashboardCard\n                                cardProps={{\n                                  p:3,\n                                  mb:3,\n                                  width:1\n                                }}\n                              >\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                >\n                                  <Icon\n                                    size={'1.8em'}\n                                    name={'Warning'}\n                                    color={'cellText'}\n                                  />\n                                  <Text\n                                    mt={1}\n                                    fontSize={2}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    The <strong>{this.functionsUtil.capitalize(currentNetwork.name)} network</strong> is not supported for this function, please switch to <strong>{this.functionsUtil.getGlobalConfig(['network','availableNetworks',this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',currentNetworkId]),'name'])} network</strong>.\n                                  </Text>\n                                  <RoundButton\n                                    buttonProps={{\n                                      mt:3,\n                                      width:[1,1/2],\n                                      fontSize:[1,2]\n                                    }}\n                                    handleClick={e => this.props.setRequiredNetwork(this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',currentNetworkId]))}\n                                  >\n                                    Switch Network\n                                  </RoundButton>\n                                </Flex>\n                              </DashboardCard>\n                            ) : (this.state.tokenConfig && this.state.balanceProp && this.state.contractInfo) ? (\n                              <Box\n                                mt={1}\n                                width={1}\n                                mb={[4,3]}\n                              >\n                                {\n                                  (isDeposit || isWithdraw) ? (\n                                    <SendTxWithBalance\n                                      {...this.props}\n                                      error={this.state.error}\n                                      steps={this.state.steps}\n                                      infoBox={this.state.infoBox}\n                                      action={this.state.selectedAction}\n                                      tokenConfig={this.state.tokenConfig}\n                                      tokenBalance={this.state.balanceProp}\n                                      contractInfo={this.state.contractInfo}\n                                      permitEnabled={this.state.permitEnabled}\n                                      approveEnabled={this.state.approveEnabled}\n                                      callback={this.transactionSucceeded.bind(this)}\n                                      approveDescription={this.state.approveDescription}\n                                      contractApproved={this.contractApproved.bind(this)}\n                                      balanceSelectorInfo={this.state.balanceSelectorInfo}\n                                      changeInputCallback={this.changeInputCallback.bind(this)}\n                                      getTransactionParams={this.getTransactionParams.bind(this)}\n                                    >\n                                      {\n                                        isDeposit ? (\n                                          <Flex\n                                            width={1}\n                                            alignItems={'stretch'}\n                                            flexDirection={'column'}\n                                            justifyContent={'center'}\n                                          >\n                                            <BuyModal\n                                              {...this.props}\n                                              showInline={true}\n                                              availableMethods={[]}\n                                              buyToken={this.state.selectedToken}\n                                            />\n                                          </Flex>\n                                          // `You don't have any ${this.state.selectedToken} in your wallet.`\n                                        ) : isWithdraw && (\n                                          <DashboardCard\n                                            cardProps={{\n                                              p:3\n                                            }}\n                                          >\n                                            <Flex\n                                              alignItems={'center'}\n                                              flexDirection={'column'}\n                                            >\n                                              <Icon\n                                                name={'MoneyOff'}\n                                                color={'cellText'}\n                                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                              />\n                                              <Text\n                                                mt={1}\n                                                fontSize={2}\n                                                color={'cellText'}\n                                                textAlign={'center'}\n                                              >\n                                                You don't have any {this.state.selectedToken} to withdraw.\n                                              </Text>\n                                            </Flex>\n                                          </DashboardCard>\n                                        )\n                                      }\n                                    </SendTxWithBalance>\n                                  ) : isExit && (\n                                    <Box\n                                      width={1}\n                                    >\n                                      {\n                                        !this.state.dataLoaded ? (\n                                          <Flex\n                                            mt={4}\n                                            flexDirection={'column'}\n                                          >\n                                            <FlexLoader\n                                              flexProps={{\n                                                flexDirection:'row'\n                                              }}\n                                              loaderProps={{\n                                                size:'30px'\n                                              }}\n                                              textProps={{\n                                                ml:2\n                                              }}\n                                              text={'Loading transactions...'}\n                                            />\n                                          </Flex>\n                                        ) : this.state.txsToExit.length ? (\n                                          <Box\n                                            width={1}\n                                          >\n                                            <Text mb={1}>\n                                              Select Transaction:\n                                            </Text>\n                                            <GenericSelector\n                                              {...this.props}\n                                              isSearchable={false}\n                                              name={'transactions'}\n                                              options={this.state.txsToExit}\n                                              onChange={this.selectTransaction.bind(this)}\n                                              defaultValue={this.state.defaultTransaction}\n                                            />\n                                            {\n                                              this.state.selectedTransaction && (\n                                                <ExecuteTransaction\n                                                  action={'Exit'}\n                                                  Component={RoundButton}\n                                                  parentProps={{\n                                                    mt:3,\n                                                    alignItems:'center',\n                                                    justifyContent:'center'\n                                                  }}\n                                                  componentProps={{\n                                                    buttonProps:{\n                                                      value:'Exit',\n                                                      width:[1,1/3],\n                                                      size:'medium',\n                                                      mainColor:'redeem'\n                                                    },\n                                                    value:'Exit Transaction',\n                                                  }}\n                                                  params={[]}\n                                                  methodName={'exit'}\n                                                  sendRawTransaction={true}\n                                                  contractName={'RootChainManager'}\n                                                  callback={this.exitCallback.bind(this)}\n                                                  getTransactionParamsAsync={this.getExitTransactionParams.bind(this)}\n                                                  {...this.props}\n                                                >\n                                                  <Flex\n                                                    flexDirection={'row'}\n                                                    alignItems={'center'}\n                                                    justifyContent={'center'}\n                                                  >\n                                                    <Icon\n                                                      mr={1}\n                                                      name={'Done'}\n                                                      size={'1.4em'}\n                                                      color={this.props.theme.colors.transactions.status.completed}\n                                                    />\n                                                    <Text\n                                                      fontWeight={500}\n                                                      fontSize={'15px'}\n                                                      color={'copyColor'}\n                                                      textAlign={'center'}\n                                                    >\n                                                      Transaction successfully exited!\n                                                    </Text>\n                                                  </Flex>\n                                                </ExecuteTransaction>\n                                              )\n                                            }\n                                          </Box>\n                                        ) : (\n                                          <DashboardCard\n                                            cardProps={{\n                                              p:3,\n                                              width:1\n                                            }}\n                                          >\n                                            <Flex\n                                              alignItems={'center'}\n                                              flexDirection={'column'}\n                                            >\n                                              <Icon\n                                                size={'1.8em'}\n                                                name={'Warning'}\n                                                color={'cellText'}\n                                              />\n                                              <Text\n                                                mt={1}\n                                                fontSize={2}\n                                                color={'cellText'}\n                                                textAlign={'center'}\n                                              >\n                                                You cannot exit any transaction yet.\n                                              </Text>\n                                            </Flex>\n                                          </DashboardCard>\n                                        )\n                                      }\n                                    </Box>\n                                  )\n                                }\n                              </Box>\n                            ) : (\n                              <Flex\n                                mt={3}\n                                mb={3}\n                                width={1}\n                              >\n                                <FlexLoader\n                                  flexProps={{\n                                    flexDirection:'row'\n                                  }}\n                                  loaderProps={{\n                                    size:'30px'\n                                  }}\n                                  textProps={{\n                                    ml:2\n                                  }}\n                                  text={'Loading info...'}\n                                />\n                              </Flex>\n                            )\n                          }\n                        </Box>\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default PolygonBridge;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass CoverProtocol extends Component {\n\n  state = {\n    steps:null,\n    infoBox:null,\n    swapInfo:null,\n    portfolio:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedAction:null,\n    successMessage:null,\n    activeCoverages:null,\n    defaultCoverage:null,\n    selectedCoverage:null,\n    contractApproved:false,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n    // window.transactionSucceeded = this.transactionSucceeded.bind(this);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedCoverageChanged = prevState.selectedCoverage !== this.state.selectedCoverage;\n    if (selectedCoverageChanged){\n      const selectedToken = this.state.selectedCoverage.collateral;\n      const tokenConfig = Object.values(this.props.availableStrategies)[0][selectedToken];\n      const tokenBalance = await this.functionsUtil.getTokenBalance(selectedToken,this.props.account);\n      const selectedAction = !this.state.selectedAction ? (this.props.urlParams.param2 || 'Claim') : this.state.selectedAction;\n      this.setState({\n        tokenConfig,\n        tokenBalance,\n        selectedToken,\n        selectedAction\n      });\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue && this.state.inputValue.gt(0);\n    const swapInfoChanged = JSON.stringify(prevState.swapInfo) !== JSON.stringify(this.state.swapInfo) && this.state.inputValue && this.state.inputValue.gt(0);\n    if (selectedActionChanged || inputValueChanged || swapInfoChanged || contractApprovedChanged){\n      this.updateData();\n    }\n\n    const contractInfoChanged = JSON.stringify(prevState.contractInfo) !== JSON.stringify(this.state.contractInfo);\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async getSwapInfo(amount){\n    amount = this.functionsUtil.BNify(amount);\n    if (!amount.isNaN() && amount.gt(0)){\n      // console.log('getSwapInfo',this.state.contractInfo.name,this.state.tokenConfig.address,balancerTokenConfig.address,swapFee,covTokens,tokenPrice);\n\n      if (this.state.tokenPrice && this.state.swapFee && this.state.covTokens){\n\n        const swapFee = this.state.swapFee;\n        const tokenPrice = this.state.tokenPrice;\n        let tokenAmountOut = amount.div(tokenPrice);\n        tokenAmountOut = tokenAmountOut.minus(tokenAmountOut.times(swapFee));\n\n        return {\n          amount,\n          tokenAmountOut\n        };\n      }\n    }\n\n    return null;\n  }\n\n  async changeInputCallback(inputValue=null){\n    let swapInfo = null;\n    let balanceSelectorInfo = null;\n    inputValue = inputValue || this.state.inputValue;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      switch (this.state.selectedAction){\n        case 'Mint':\n          balanceSelectorInfo = {\n            color:this.props.theme.colors.transactions.status.completed,\n            text:`You will Mint: ${inputValue.toFixed(4)} CLAIM and NOCLAIM`\n          };\n        break;\n        case 'Claim':\n        case 'NoClaim':\n          const amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.state.tokenConfig.decimals);\n          swapInfo = await this.getSwapInfo(amount);\n          if (swapInfo){\n            if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n              balanceSelectorInfo = {\n                color:this.props.theme.colors.transactions.status.completed,\n                text:`You will Buy: ~${this.functionsUtil.fixTokenDecimals(swapInfo.tokenAmountOut,18).toFixed(4)} ${this.state.selectedAction}`\n              };\n            } else {\n              balanceSelectorInfo = {\n                text:`Not enough liquidity`,\n                color:this.props.theme.colors.transactions.status.failed,\n              };\n            }\n          }\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      swapInfo,\n      inputValue,\n      balanceSelectorInfo\n    });\n  }\n\n  async getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n    amount = this.functionsUtil.BNify(amount);\n    const MAX_UINT256 = this.functionsUtil.BNify(2).pow(256).minus(1).toFixed(0);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        methodName = 'addCover';\n        methodParams = [this.state.tokenConfig.address,parseInt(this.state.selectedCoverage.expirationTimestamp),this.functionsUtil.integerValue(amount)];\n      break;\n      case 'Claim':\n      case 'NoClaim':\n        methodName = 'swapExactAmountOut';\n        const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const swapInfo = await this.getSwapInfo(amount);\n        if (swapInfo){\n          if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n            methodParams = [this.state.tokenConfig.address,this.functionsUtil.integerValue(amount),balancerTokenConfig.address, this.functionsUtil.integerValue(swapInfo.tokenAmountOut), MAX_UINT256];\n          } else {\n            return null;\n          }\n        }\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n    const dashboardUrl = `#${this.functionsUtil.getGlobalConfig(['dashboard','baseRoute'])}/best`;\n    const fixedAmount = this.functionsUtil.fixTokenDecimals(amount,this.state.tokenConfig.decimals);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        const mintedClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['Claim'].address ) : null;\n        const mintedNoClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['NoClaim'].address ) : null;\n        const mintedClaimAmount = mintedClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        const mintedNoClaimAmount = mintedNoClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedNoClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully minted <strong>${mintedClaimAmount.toFixed(4)} CLAIM</strong> and <strong>${mintedNoClaimAmount.toFixed(4)} NOCLAIM</strong> tokens<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'Claim':\n        const claimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const claimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === claimTokenConfig.address ) : null;\n        const receivedClaimAmount = claimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(claimTokensLog.data,16),claimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],claimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you are now covered in the event that there is a successful attack on the protocol<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'NoClaim':\n        debugger;\n        const noClaimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const noClaimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === noClaimTokenConfig.address ) : null;\n        const receivedNoClaimAmount = noClaimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(noClaimTokensLog.data,16),noClaimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],noClaimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedNoClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you will be rewarded if there is no successful attack on the protocol by the expiry date<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Set second step completed\n    let steps = this.state.steps;\n    steps[1].completed = true;\n\n    const transactionSucceeded = true;\n    const tokenBalance = await this.functionsUtil.getTokenBalance(this.state.selectedToken,this.props.account);\n\n    // console.log('transactionSucceeded',infoBox);\n\n    this.setState({\n      steps,\n      infoBox,\n      tokenBalance,\n      transactionSucceeded\n    });\n  }\n\n  async updateData(){\n    let apy = null;\n    const steps = [];\n    let infoBox = null;\n    let swapFee = null;\n    let covTokens = null;\n    let tokenPrice = null;\n    let tokenAmount = null;\n    let contractInfo = null;\n    let collateralAmount = null;\n    let approveDescription = null;\n\n    const claimTokenConfig = this.state.selectedCoverage.tokens['Claim'];\n    const noClaimTokenConfig = this.state.selectedCoverage.tokens['NoClaim'];\n    const balancerClaimConfig = claimTokenConfig.balancerPool;\n    const balancerNoClaimConfig = noClaimTokenConfig.balancerPool;\n\n    await Promise.all([\n      this.props.initContract(claimTokenConfig.name,claimTokenConfig.address,claimTokenConfig.abi),\n      this.props.initContract(noClaimTokenConfig.name,noClaimTokenConfig.address,noClaimTokenConfig.abi),\n      this.props.initContract(balancerClaimConfig.name,balancerClaimConfig.address,balancerClaimConfig.abi),\n      this.props.initContract(balancerNoClaimConfig.name,balancerNoClaimConfig.address,balancerNoClaimConfig.abi)\n    ]);\n\n    const [\n      claimTokenBalance,\n      noClaimTokenBalance,\n      balancerPoolClaimBalance,\n      balancerPoolNoClaimBalance\n    ] = await Promise.all([\n      // Get Claim token balance\n      this.functionsUtil.getTokenBalance(claimTokenConfig.name,this.props.account),\n      // Get NOCLAIM token balance\n      this.functionsUtil.getTokenBalance(noClaimTokenConfig.name,this.props.account),\n      // Get Balancer Claim token Pool balance\n      this.functionsUtil.getTokenBalance(balancerClaimConfig.name,this.props.account),\n      // Get Balancer NOCLAIM token Pool balance\n      this.functionsUtil.getTokenBalance(balancerNoClaimConfig.name,this.props.account)\n    ]);\n\n    // Check if user has both Claim and NOCLAIM tokens\n    const hasMintedTokens = claimTokenBalance && noClaimTokenBalance && claimTokenBalance.gt(0) && noClaimTokenBalance.gt(0);\n\n    // Set Contract Info\n    switch (this.state.selectedAction){\n      case 'Mint':\n        contractInfo = this.props.toolProps.contract;\n      break;\n      case 'NoClaim':\n        contractInfo = noClaimTokenConfig.balancerPool;\n      break;\n      case 'Claim':\n        contractInfo = claimTokenConfig.balancerPool;\n      break;\n      default:\n      break;\n    }\n\n    const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n\n    if (contractInfo){\n      if (balancerTokenConfig){\n        [\n          swapFee,\n          covTokens,\n          tokenPrice\n        ] = await Promise.all([\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSwapFee'),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getBalance',[balancerTokenConfig.address]),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSpotPrice',[this.state.tokenConfig.address,balancerTokenConfig.address])\n        ]);\n\n        // Calculate yearly returns\n        if (tokenPrice){\n          const isClaim = this.state.selectedAction === 'Claim';\n          const expirationTimestamp = this.state.selectedCoverage.expirationTimestamp;\n          const days =  (expirationTimestamp*1000 - Date.now())/(60 * 60 * 24 * 1000);\n          tokenPrice = this.functionsUtil.fixTokenDecimals(tokenPrice,this.state.tokenConfig.decimals);\n          const apyPrice = isClaim ? tokenPrice : this.functionsUtil.BNify(1).minus(tokenPrice).div(tokenPrice);\n          apy = this.functionsUtil.BNify(100).times(apyPrice).times(365).div(days);\n        }\n\n        // Fix swap Fees\n        if (swapFee){\n          swapFee = this.functionsUtil.fixTokenDecimals(swapFee,18);\n        }\n      }\n\n      switch (this.state.selectedAction){\n        case 'Mint':\n          approveDescription = `Approve the Cover Protocol contract`;\n          infoBox = {\n            icon:'MonetizationOn',\n            text:`Stake ${this.state.selectedToken} to mint both CLAIM and NOCLAIM tokens in a 1:1 ratio then add them to the respective Balancer Pool to earn trading fees.<br /><small>Prior to expiry or an accepted claim, users can redeem back their collateral with both their CLAIM and NOCLAIM tokens. <a href=\"https://docs.coverprotocol.com/user-guide/redemption\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a></small>`\n          };\n          // Add Approve Step\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:hasMintedTokens,\n            description:`Mint CLAIM and NOCLAIM tokens`\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks3',\n            description:`Add your CLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolClaimBalance && balancerPoolClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['Claim'].balancerPool.address}/`,\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks4',\n            description:`Add your NOCLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolNoClaimBalance && balancerPoolNoClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['NoClaim'].balancerPool.address}/`,\n          });\n        break;\n        case 'NoClaim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your NOCLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong> if there is no successful attack on the protocol by the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`NOCLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold if there is no successful attack on the protocol by the expiry date.`\n            };\n          }\n\n          // Add Yearly cost and read more\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly return of buying and holding NOCLAIM until expiration is <strong>${apy.toFixed(2)}%</strong>` : null}</span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the NOCLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:noClaimTokenBalance && noClaimTokenBalance.gt(0),\n            description:`Buy NOCLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        case 'Claim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            const portfolioCoveredPerc = 32;//this.state.portfolio && this.state.portfolio.totalBalance.gt(0) ? tokenAmount.div(this.state.portfolio.totalBalance).times(100) : null;\n            infoBox = {\n              icon:'BeachAccess',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your CLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong>${ portfolioCoveredPerc ? ` <strong>(${portfolioCoveredPerc}% of your portfolio)</strong>` : '' } in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'BeachAccess',\n              text:`CLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          }\n\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly cost of buying and holding CLAIM until expiration is <strong>${apy.toFixed(2)}%` : null}</strong></span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the CLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:claimTokenBalance && claimTokenBalance.gt(0),\n            description:`Buy CLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        default:\n        break;\n      }\n\n      const transactionSucceeded = false;\n      this.setState({\n        apy,\n        steps,\n        infoBox,\n        swapFee,\n        covTokens,\n        tokenPrice,\n        contractInfo,\n        approveDescription,\n        transactionSucceeded\n      });\n    }\n  }\n\n  async loadData(){\n    const currTime = parseInt(Date.now()/1000);\n    const activeCoverages = this.props.toolProps.coverages.reduce( (output,c,index) => {\n      if (c.expirationTimestamp>currTime){\n        const expirationDate = this.functionsUtil.strToMoment(c.expirationTimestamp*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n        const icon = `images/tokens/${c.collateral}.svg`;\n        const label = `Collateral: ${c.collateral} - Expiration: ${expirationDate}`;\n        output.push({\n          icon,\n          label,\n          data:c,\n          value:expirationDate,\n        });\n      }\n      return output;\n    },[]);\n\n    const portfolio = await this.functionsUtil.getAccountPortfolio();\n    const defaultCoverage = activeCoverages.length ? activeCoverages[0] : null;\n\n    this.setState({\n      portfolio,\n      defaultCoverage,\n      activeCoverages\n    },() => {\n      if (defaultCoverage){\n        this.selectCoverage(defaultCoverage);\n      }\n    });\n  }\n\n  async selectCoverage(coverage){\n    const selectedCoverage = coverage.data;\n    this.setState({\n      selectedCoverage\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n\n    const isMint = this.state.selectedAction === 'Mint';\n    const isBuyClaim = this.state.selectedAction === 'Claim';\n    const isBuyNoClaim = this.state.selectedAction === 'NoClaim';\n    const txAction = isMint ? this.state.selectedAction : `Buy ${this.state.selectedAction}`;\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.activeCoverages ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading active coverages...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.activeCoverages.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active coverages.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text mb={1}>\n                        Select Coverage:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'strategy'}\n                        isSearchable={false}\n                        options={this.state.activeCoverages}\n                        CustomOptionValue={CustomOptionValue}\n                        defaultValue={this.state.defaultCoverage}\n                        onChange={this.selectCoverage.bind(this)}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      this.state.selectedCoverage && (\n                        <Box\n                          mt={3}\n                          width={1}\n                        >\n                          <Text mb={1}>\n                            Select Action:\n                          </Text>\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={['column','row']}\n                            justifyContent={'space-between'}\n                          >\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isMint ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Add Liquidity'}\n                              imageSrc={'images/mint.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'mint CLAIM and NOCLAIM\\nand stake in Balancer Pool'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isMint}\n                              handleClick={ e => this.setAction('Mint') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy CLAIM'}\n                              imageSrc={'images/claim.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'protect in case of attacks\\nagainst the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyClaim}\n                              handleClick={ e => this.setAction('Claim') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyNoClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy NOCLAIM'}\n                              isMobile={this.props.isMobile}\n                              imageSrc={'images/noclaim.svg'}\n                              subcaption={'get rewarded if no attack\\noccurs on the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyNoClaim}\n                              handleClick={ e => this.setAction('NoClaim') }\n                            />\n                          </Flex>\n                          {\n                            this.state.tokenConfig && this.state.tokenBalance && this.state.contractInfo &&\n                              <Box\n                                mt={2}\n                                mb={3}\n                                width={1}\n                              >\n                                <SendTxWithBalance\n                                  {...this.props}\n                                  action={txAction}\n                                  error={this.state.error}\n                                  steps={this.state.steps}\n                                  infoBox={this.state.infoBox}\n                                  tokenConfig={this.state.tokenConfig}\n                                  tokenBalance={this.state.tokenBalance}\n                                  contractInfo={this.state.contractInfo}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractApproved={this.contractApproved.bind(this)}\n                                  approveDescription={this.state.approveDescription}\n                                  balanceSelectorInfo={this.state.balanceSelectorInfo}\n                                  changeInputCallback={this.changeInputCallback.bind(this)}\n                                  getTransactionParams={this.getTransactionParams.bind(this)}\n                                >\n                                  <BuyModal\n                                    {...this.props}\n                                    showInline={true}\n                                    availableMethods={[]}\n                                    buyToken={this.state.selectedToken}\n                                  />\n                                </SendTxWithBalance>\n                              </Box>\n                          }\n                        </Box>\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default CoverProtocol;\n","import Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TokenMigration extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    migrationSucceeded:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    if (selectedFromToken && selectedFromToken !== this.props.urlParams.param2){\n      this.changeFromToken(selectedFromToken);\n    }\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n  }\n\n  changeFromToken = (selectedToken) => {\n    const convertTool = this.functionsUtil.getGlobalConfig(['tools','tokenMigration']);\n    this.props.goToSection(`tools/${convertTool.route}/${selectedToken}`);\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    const tokenInfo = this.props.toolProps.availableTokens[selectedFromToken];\n\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n\n    const availableStrategies = typeof this.props.toolProps.availableStrategies !== 'undefined' ? this.props.toolProps.availableStrategies : Object.keys(this.props.availableStrategies);\n\n    availableStrategies.forEach( strategy => {\n      const strategyAvailableTokens =  this.props.availableStrategies[strategy];\n      const baseTokenConfig = strategyAvailableTokens[tokenInfo.baseToken];\n      if (!baseTokenConfig){\n        return false;\n      }\n\n      // Remove icon\n      delete baseTokenConfig.icon;\n\n      if (!selectedDestToken){\n        selectedDestToken = baseTokenConfig.idle.token;\n      }\n      baseTokenConfig.strategy = strategy;\n      baseTokenConfig.baseToken = tokenInfo.baseToken;\n      availableDestinationTokens[baseTokenConfig.idle.token] = baseTokenConfig;\n    });\n\n    this.setState({\n      tokenConfig:null,\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n\n    const destTokenConfig = this.state.availableDestinationTokens[selectedDestToken];\n    const tokenInfo = this.props.toolProps.availableTokens[this.state.selectedFromToken];\n\n    const tokenConfig = {\n      token:destTokenConfig.baseToken,\n      address:destTokenConfig.address,\n      decimals:destTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = destTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:tokenInfo.abi,\n      name:tokenInfo.token,\n      token:tokenInfo.token,\n      address:tokenInfo.address\n    };\n    \n    const migrationContract = this.props.toolProps.migrationContract;\n\n    // Add migration function\n    if (tokenInfo.migrateFunction){\n      migrationContract.functions[0].name = tokenInfo.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(destTokenConfig.strategy,tokenInfo.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedDestToken\n    });\n  }\n\n  migrationCallback = () => {\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={true}\n              onChange={this.changeFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-dest'}\n                  showBalance={false}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          {\n            this.state.selectedFromToken && this.state.selectedDestToken ? (\n              <Migrate\n                {...this.props}\n                showActions={false}\n                getTokenPrice={false}\n                isMigrationTool={true}\n                tokenConfig={this.state.tokenConfig}\n                migrationCallback={this.migrationCallback}\n                selectedToken={this.state.selectedFromToken}\n                selectedStrategy={this.props.selectedStrategy}\n              >\n                {\n                  !this.props.account ? (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'Input'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={2}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Please connect with your wallet interact with Idle.\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.props.connectAndValidateAccount}\n                        >\n                          Connect\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.migrationSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              Your {this.state.selectedFromToken} have been successfully migrated!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedFromToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Migrate>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenMigration;\n","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Box, Text, Icon, Link } from \"rimble-ui\";\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\n\nclass BatchMigration extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    hasDeposited:false,\n    selectedToken:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async checkBatchs(){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.selectedTokenConfig.name,this.state.selectedTokenConfig.address,this.state.selectedTokenConfig.abi)\n    ]);\n\n    const [currBatchIndex,migrationContractApproved] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.selectedTokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    const newState = {};\n    const batchDeposits = {};\n    const batchTotals = {};\n    let batchCompleted = false;\n\n    if (currBatchIndex !== null){\n      for (let batchIndex = 0; batchIndex <= currBatchIndex ; batchIndex++){\n        let [batchTotal,batchDeposit] = await Promise.all([\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n        if (batchTotal && batchTotal !== null){\n          batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.selectedTokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.selectedTokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n\n            batchDeposits[batchIndex] = batchDeposit;\n            // Check claimable\n            if (batchIndex < currBatchIndex){\n              batchCompleted = true;\n            }\n          }\n        }\n      }\n\n      newState.batchDeposits = batchDeposits;\n    }\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    newState.claimSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.batchCompleted = batchCompleted;\n    newState.hasDeposited = hasDeposited;\n    newState.canDeposit = !hasDeposited && batchMigrationDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    newState.action = hasDeposited ? 'redeem' : 'deposit';\n    newState.migrationContractApproved = migrationContractApproved;\n\n    this.setState(newState);\n  }\n\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      this.checkBatchs();\n    }\n  }\n\n  selectFromToken = async (selectedToken) => {\n\n    const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const strategyAvailableTokens =  this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.baseToken];\n\n    const tokenConfig = {\n      token:selectedTokenConfig.baseToken,\n      address:selectedTokenConfig.address,\n      decimals:selectedTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:selectedTokenConfig.abi,\n      name:selectedTokenConfig.name,\n      token:selectedTokenConfig.token,\n      address:selectedTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    });\n  }\n\n  claim = async () => {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: `BatchMigration`,\n        eventAction: 'Claim',\n        eventLabel: this.props.selectedToken,\n        eventValue: parseInt(claimableValue)\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  migrationCallback = () => {\n    this.checkBatchs();\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedToken){\n      return null;\n    }\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={false}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            (this.state.canDeposit || this.state.canClaim) && \n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  px:4,\n                  mt:3,\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                > \n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.migrationContractApproved ? 'CheckBox' : 'LooksOne'}\n                      color={ this.state.migrationContractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Approve the batch migration contract\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.hasDeposited ? 'CheckBox' : 'LooksTwo'}\n                      color={ this.state.hasDeposited ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Deposit your {this.state.selectedTokenConfig.token}\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                      color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Wait for the batch to be migrated\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                      color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Claim your {this.state.selectedToken}V4\n                    </Text>\n                  </Flex>\n                </Flex>\n              </DashboardCard>\n          }\n          {\n            this.state.selectedToken ? (\n              <Box width={1}>\n                {\n                  this.state.migrationContractApproved && (this.state.canDeposit || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    batchMigrationDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        showActions={false}\n                        migrationParams={[]}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        callbackApprove={this.checkBatchs.bind(this)}\n                        selectedStrategy={this.props.selectedStrategy}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedTokenConfig.token} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        {\n                          !this.props.account ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3\n                              }}\n                            >\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  size={'2.3em'}\n                                  name={'Input'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Please connect with your wallet interact with Idle.\n                                </Text>\n                                <RoundButton\n                                  buttonProps={{\n                                    mt:2,\n                                    width:[1,1/2]\n                                  }}\n                                  handleClick={this.props.connectAndValidateAccount}\n                                >\n                                  Connect\n                                </RoundButton>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                my:3\n                              }}\n                            >\n                              {\n                                batchId ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      color={'cellText'}\n                                      name={'HourglassEmpty'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      {\n                                        this.state.batchCompleted ? (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >The batch has been migrated, click on the \"Claim\" button to withdraw your tokens.</Text.span>\n                                        ) : (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >\n                                            You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your tokens.\n                                            {\n                                              typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                              <Text.span\n                                                color={'cellText'}\n                                              >\n                                                <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                              </Text.span>\n                                            }\n                                          </Text.span>\n                                        )\n                                      }\n                                    </Text>\n                                  </Flex>\n                                ) : this.state.migrationSucceeded ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'DoneAll'}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You have successfully deposited your {this.state.selectedTokenConfig.token} into the batch!\n                                    </Text>\n                                  </Flex>\n                                ) : (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'MoneyOff'}\n                                      color={'cellText'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You don't have any {this.state.selectedTokenConfig.token} in your wallet.\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                            </DashboardCard>\n                          )\n                        }\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch migration is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar {...this.props} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.selectedToken} V4!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The batch has been migrated!<br />You can now claim your {this.state.tokenConfig.idle.token} V4.\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:3,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your V4 tokens.\n                                {\n                                  typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                  </Text.span>\n                                }\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Box>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchMigration;","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport { Flex, Text, Heading, Input, Form, Field, Icon, Link, Loader, Button } from \"rimble-ui\";\n\nclass DeployB2BVesting extends Component {\n\n  state = {\n    actions:[],\n    processing: {\n      txHash:null,\n      loading:false,\n      actionIndex:[]\n    },\n    action:'deploy',\n    validated:false,\n    viewAction:null,\n    editAction:null,\n    newAction:false,\n    maxContracts:10,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    actionValid:false,\n    actionInputs:null,\n    claimedTokens:null,\n    deployedContracts:[],\n    contractDeployed:false,\n    inputs:[\n      {\n        name:'owner',\n        type:'address'\n      },\n      {\n        name:'recipient',\n        type:'address'\n      },\n      {\n        name:'vestingPeriod',\n        type:'uint256'\n      }\n    ]\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction(action){\n    this.setState({\n      action,\n      editAction:null,\n      viewAction:null,\n      claimedTokens:null,\n      contractDeployed:null\n    });\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false,\n        actionIndex:[]\n      }\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadContracts();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    this.validateForm();\n    this.checkInputs();\n\n    const contractDeployed = prevState.contractDeployed !== this.state.contractDeployed && this.state.contractDeployed;\n    if (contractDeployed){\n      this.loadContracts();\n    }\n  }\n\n  async loadContracts(){\n    const tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens','IDLE']);\n    const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n    const fromBlock = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n    const proxyCreated = await this.functionsUtil.getContractPastEvents('ProxyFactory', 'ProxyCreated', {fromBlock, toBlock: 'latest'});\n    const deployedContractsAddresses = proxyCreated.filter( p => p.returnValues.implementation.toLowerCase() === vesterImplementation.address.toLowerCase() ).map( p => p.returnValues.proxy );\n    // console.log('proxyCreated',proxyCreated,'deployedContractsAddresses',deployedContractsAddresses);\n\n    const deployedContracts = [];\n    await this.functionsUtil.asyncForEach(deployedContractsAddresses, async (contractAddress) => {\n      const contractName = `b2bVesting_${contractAddress}`;\n      await this.props.initContract(contractName,contractAddress,vesterImplementation.abi);\n      const [\n        // initialized,\n        owner,\n        recipient,\n        vestingPeriod,\n        availableBalance,\n        depositAmounts,\n      ] = await Promise.all([\n          // this.functionsUtil.genericContractCall(contractName,'initialized'),\n          this.functionsUtil.genericContractCall(contractName,'owner'),\n          this.functionsUtil.genericContractCall(contractName,'recipient'),\n          this.functionsUtil.genericContractCall(contractName,'vestingPeriod'),\n          this.functionsUtil.getTokenBalance(tokenConfig.token,contractAddress),\n          this.functionsUtil.genericContractCall(contractName,'getDepositAmounts')\n      ]);\n\n      let totalDeposited = this.functionsUtil.BNify(0);\n      if (depositAmounts) {\n        totalDeposited = depositAmounts.reduce( (total,amount) => {\n          total = total.plus(amount);\n          return total;\n        },this.functionsUtil.BNify(0));\n\n        totalDeposited = this.functionsUtil.fixTokenDecimals(totalDeposited,tokenConfig.decimals);\n      }\n\n      // console.log(contractName,initialized,owner,recipient,vestingPeriod,depositAmounts,parseFloat(totalDeposited));\n\n      deployedContracts.push({\n        owner,\n        recipient,\n        contractName,\n        vestingPeriod,\n        totalDeposited,\n        contractAddress,\n        availableBalance\n      });\n    });\n    const tokenBalance = await this.functionsUtil.getTokenBalance('IDLE',this.props.account);\n\n    // console.log(deployedContracts);\n\n    this.setState({\n      tokenConfig,\n      tokenBalance,\n      deployedContracts\n    });\n  }\n\n  validateForm(){\n    const validated = Object.values(this.state.actions).length>0;\n    if (validated !== this.state.validated){\n      this.setState({\n        validated\n      });\n    }\n  }\n\n  getTransactionParams(amount){\n    const params = {\n      value:null,\n      methodName:'deposit',\n      methodParams:[amount]\n    };\n    return params;\n  }\n\n  claimCallback(tx){\n    // console.log('claimCallback',tx);\n    if (tx.status === 'success'){\n      this.loadContracts();\n\n      const claimedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() ) : null;\n      if (claimedTokensLog){\n        const claimedTokens = this.functionsUtil.fixTokenDecimals(parseInt(claimedTokensLog.data,16),this.state.tokenConfig.decimals);\n        this.setState({\n          claimedTokens\n        });\n      }\n    }\n  }\n\n  depositCallback(tx,amount,params){\n    // console.log('depositCallback',tx,amount,params);\n    if (tx.status === 'success'){\n      this.loadContracts();\n    }\n  }\n\n  getPatternByFieldType(type,returnString=false){\n    let fieldPattern = null;\n    switch (type){\n      case 'address':\n        fieldPattern = '^0x[a-fA-F0-9]{40}$';\n      break;\n      case 'address[]':\n        fieldPattern = '^((0x[a-fA-F0-9]{40})[,]?)+$';\n      break;\n      case 'string':\n        fieldPattern = '[\\\\w]+';\n      break;\n      case 'bool':\n        fieldPattern = '(0|1)';\n      break;\n      case 'uint256':\n      case 'uint8':\n        fieldPattern = '[\\\\d]+';\n      break;\n      default:\n        fieldPattern = null;\n      break;\n    }\n\n    if (!returnString && fieldPattern){\n      fieldPattern = new RegExp(fieldPattern);\n    }\n\n    return fieldPattern;\n  }\n\n  checkInputs(){\n\n    if (!this.state.actionInputs){\n      return false;\n    }\n\n    const inputs = this.state.inputs;\n    let actionValid = Object.values(this.state.actionInputs).length === inputs.length;\n\n    if (actionValid){\n      Object.values(this.state.actionInputs).forEach( (inputValue,inputIndex) => {\n        const inputInfo = inputs[inputIndex];\n        const fieldPattern = this.getPatternByFieldType(inputInfo.type);\n        const inputValid = fieldPattern ? inputValue.match(fieldPattern) !== null : true;\n        actionValid = actionValid && inputValid;\n        // console.log('checkInputs',inputInfo.name,inputInfo.type,inputValue,inputValid,actionValid);\n      });\n    }\n\n    if (actionValid !== this.state.actionValid){\n      this.setState({\n        actionValid\n      });\n    }\n  }\n\n  valueChange(e,inputIndex){\n    let actionValue = e.target.value;\n    this.setState({\n      actionValue\n    });\n  }\n\n  inputChange(e,inputIndex){\n    let inputValue = e.target.value;\n\n    this.setState((prevState) => ({\n      actionInputs:{\n        ...prevState.actionInputs,\n        [inputIndex]:inputValue\n      }\n    }));\n  }\n\n  deleteAction(){\n    if (this.state.editAction !== null){\n      let actions = this.state.actions;\n      if (actions[this.state.editAction]){\n        delete actions[this.state.editAction];\n        actions = Object.values(actions);\n        const editAction = null;\n        const actionInputs = null;\n\n        this.setState({\n          actions,\n          editAction,\n          actionInputs\n        });\n      }\n    }\n  }\n\n  addAction(){\n\n    // Check inputs number\n    const inputs = Object\n                    .values(this.state.actionInputs).filter( v => v.length>0 )\n                    .map( (inputValue,inputIndex) => {\n                      const inputInfo = this.state.inputs[inputIndex];\n                      switch (inputInfo.type){\n                        case 'address[]':\n                          inputValue = inputValue.split(',');\n                        break;\n                        case 'uint256[]':\n                          inputValue = inputValue.split(',').map( n => this.functionsUtil.toBN(n) );\n                        break;\n                        case 'uint256':\n                          inputValue = this.functionsUtil.toBN(inputValue);\n                        break;\n                        default:\n                          if (inputInfo.type.substr(-2) === '[]'){\n                            inputValue = inputValue.split(',');\n                          }\n                        break;\n                      }\n\n                      return inputValue;\n                    });\n\n    if (inputs.length<this.state.inputs.length){\n      return false;\n    }\n\n    const action = {\n      txError:null,\n      contractAddress:null,\n      inputs:this.state.actionInputs,\n    };\n\n    const newAction = false;\n    const actions = Object.values(this.state.actions);\n\n    if (this.state.editAction === null){\n      actions.push(action);\n    } else {\n      actions[this.state.editAction] = action;\n    }\n\n    const editAction = null;\n    const actionInputs = null;\n\n    this.setState({\n      actions,\n      newAction,\n      editAction,\n      actionInputs\n    });\n  }\n\n  setEditAction(editAction){\n\n    if (!this.state.actions[editAction]){\n      return false;\n    }\n\n    if (editAction === this.state.editAction){\n      return false;\n    }\n\n    const action = this.state.actions[editAction];\n\n    const newAction = false;\n    const actionInputs = action.inputs;\n\n    this.setState({\n      newAction,\n      editAction,\n      actionInputs\n    });\n  }\n\n  setViewAction(viewAction){\n\n    if (viewAction !== this.state.viewAction){\n      const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n      const deployedContract = this.state.deployedContracts[viewAction];\n      const contractInfo = {\n        abi:vesterImplementation.abi,\n        name:deployedContract.contractName,\n        address:deployedContract.contractAddress\n      };\n      this.setState({\n        viewAction,\n        contractInfo,\n        claimedTokens:null\n      });\n    }\n  }\n\n  setNewAction(newAction){\n    if (newAction === this.state.newAction){\n      return false;\n    }\n\n    const editAction = null;\n\n    this.setState({\n      newAction,\n      editAction,\n    });\n  }\n\n  async handleSubmit(e){\n    e.preventDefault();\n\n    const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n    const idleAddress = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','address']);\n\n    const callback = (tx,error,actionIndex) => {\n      const txSucceeded = tx.status === 'success';\n      const actions = Object.values(this.state.actions);\n      const isLastAction = parseInt(actionIndex)===parseInt(this.state.actions.length)-1;\n      const contractDeployed = txSucceeded && isLastAction;\n      // console.log('callback_1 -',actionIndex,txSucceeded,contractDeployed,tx);\n      if (txSucceeded){\n        const clonedVesterAddress = tx.txReceipt.events && tx.txReceipt.events.ProxyCreated ? tx.txReceipt.events.ProxyCreated.returnValues[1] : `0x${tx.txReceipt.logs[0].data.substr(-40)}`;\n        actions[actionIndex].contractAddress = clonedVesterAddress;\n        // console.log('callback_2 -',actionIndex,actions[actionIndex].contractAddress);\n      } else {\n        actions[actionIndex].txError = true;\n      }\n\n      // console.log('callback_3 -',actionIndex,actions);\n\n      this.setState({\n        actions,\n        contractDeployed\n      },()=>{\n        if (isLastAction){\n          this.cancelTransaction();\n        }\n      });\n    };\n\n    const callbackReceipt = (tx,actionIndex) => {\n      const txHash = tx.transactionHash;\n      // console.log('callbackReceipt',actionIndex,tx);\n      const processing = Object.assign({},this.state.processing);\n      processing.txHash = txHash;\n      processing.actionIndex.push(actionIndex);\n      this.setState({\n        processing\n      });\n    };\n\n    this.state.actions.forEach((action,actionIndex) => {\n      const ownerAddress = action.inputs[0];\n      const recipientAddress = action.inputs[1];\n      const vestingPeriod = action.inputs[2];\n      const initSig = \"initialize(address,address,address,uint256)\";\n      const initData = this.props.web3.eth.abi.encodeParameters(\n        ['address','address','address','uint256'],\n        [ownerAddress,idleAddress,recipientAddress,vestingPeriod]\n      );\n      const methodParams = [vesterImplementation.address,initSig,initData];\n      this.functionsUtil.contractMethodSendWrapper('ProxyFactory', 'createAndCall', methodParams, (tx,error) => callback(tx,error,actionIndex), (tx) => callbackReceipt(tx,actionIndex) );\n    });\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    return false;\n  }\n\n  render() {\n\n    const depositContracts = this.props.account ? this.state.deployedContracts.filter( c => c.owner.toLowerCase() === this.props.account.toLowerCase() ) : [];\n    const claimContracts = this.props.account ? this.state.deployedContracts.filter( c => c.recipient.toLowerCase() === this.props.account.toLowerCase() ) : [];\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.42]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            flexDirection={'column'}\n          >\n            <Text\n              mb={2}\n            >\n              Choose the action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Deploy'}\n                icon={'CloudUpload'}\n                iconColor={'deposit'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.action === 'deploy' }\n                handleClick={ e => this.setAction('deploy') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Deposit'}\n                iconColor={'deposit'}\n                icon={'ArrowDownward'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.action === 'deposit' }\n                handleClick={ e => this.setAction('deposit') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Claim'}\n                iconColor={'redeem'}\n                icon={'ArrowUpward'}\n                iconBgColor={'#ceeff6'}\n                isActive={ this.state.action === 'claim' }\n                handleClick={ e => this.setAction('claim') }\n              />\n            </Flex>\n          </Flex>\n          <Flex\n            pb={2}\n            width={1}\n            my={[2,3]}\n            borderColor={'divider'}\n            borderBottom={'1px solid transparent'}\n          >\n            <Heading.h4\n              fontSize={[2,3]}\n              fontWeight={[2,3]}\n              style={{\n                textTransform:'capitalize'\n              }}\n            >\n              {this.state.action}\n            </Heading.h4>\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n          >\n            {\n              this.state.action === 'deploy' ? (\n                <Form\n                  width={1}\n                  validated={this.state.validated}\n                  onSubmit={this.handleSubmit.bind(this)}\n                >\n                  {\n                    Object.values(this.state.actions).map( (action,actionIndex) => {\n                      return (\n                        <DashboardCard\n                          cardProps={{\n                            py:2,\n                            px:3,\n                            mb:3,\n                            width:1\n                          }}\n                          titleParentProps={{\n                            ml:0,\n                            my:1,\n                            justifyContent:'center'\n                          }}\n                          titleProps={{\n                            fontSize:2,\n                            fontWeight:3\n                          }}\n                          isInteractive={true}\n                          key={`action_${actionIndex}`}\n                          title={ this.state.editAction === actionIndex ? 'Edit Contract' : null }\n                          handleClick={ e => /*action.contractAddress ? this.functionsUtil.openWindow(this.functionsUtil.getEtherscanAddressUrl(action.contractAddress)) : */this.setEditAction(actionIndex) }\n                        >\n                          {\n                            this.state.editAction === actionIndex ? (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                {\n                                  this.state.inputs.map( (input,inputIndex) => {\n                                    const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                    const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                    return (\n                                      <Field\n                                        style={{\n                                          width:'100%',\n                                          display:'flex',\n                                          alignItems:'stretch',\n                                          flexDirection:'column'\n                                        }}\n                                        key={`input_${inputIndex}`}\n                                        label={`${input.name} (${input.type})`}\n                                      >\n                                        <Input\n                                          required\n                                          width={1}\n                                          type={fieldType}\n                                          pattern={fieldPattern}\n                                          borderColor={'cardBorder'}\n                                          backgroundColor={'cardBg'}\n                                          placeholder={`${input.name} (${input.type})`}\n                                          onChange={ e => this.inputChange(e,inputIndex) }\n                                          value={this.state.actionInputs && this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                        />\n                                      </Field>\n                                    )\n                                  })\n                                }\n                                <Flex\n                                  mb={2}\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  {\n                                    action.contractAddress ? (\n                                      <ExtLink\n                                        fontSize={1}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                        hoverColor={this.props.theme.colors.transactions.status.completed}\n                                        href={this.functionsUtil.getEtherscanAddressUrl(action.contractAddress)}\n                                      >\n                                        Deployed at {action.contractAddress}\n                                      </ExtLink>\n                                    ) : !this.state.processing.loading && (\n                                      <Flex\n                                        width={1}\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                        justifyContent={'center'}\n                                      >\n                                        <RoundButton\n                                          buttonProps={{\n                                            px:[0,4],\n                                            type:'button',\n                                            width:[1,'auto'],\n                                            disabled:!this.state.actionValid\n                                          }}\n                                          handleClick={this.addAction.bind(this)}\n                                        >\n                                          Save Contract\n                                        </RoundButton>\n                                        <Link\n                                          mt={2}\n                                          color={'red'}\n                                          hoverColor={'red'}\n                                          onClick={this.deleteAction.bind(this)}\n                                        >\n                                          Delete Contract\n                                        </Link>\n                                      </Flex>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            ) : (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                <Text>\n                                  {this.functionsUtil.shortenHash(action.inputs[0])} - {this.functionsUtil.shortenHash(action.inputs[1])} - {action.inputs[2]} { action.contractAddress ? '- DEPLOYED' : '' }\n                                </Text>\n                                { \n                                  action.contractAddress ? (\n                                    <Flex\n                                      p={'3px'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        name={'Done'}\n                                        align={'center'}\n                                        size={this.props.isMobile ? '1.2em' : '1.8em'}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      />\n                                    </Flex>\n                                  ) : this.state.processing.loading && this.state.processing.actionIndex && this.state.processing.actionIndex.includes(parseInt(actionIndex)) ? (\n                                    <Loader size=\"28px\" />\n                                  ) : action.txError ? (\n                                    <Flex\n                                      p={'3px'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        color={'red'}\n                                        name={'Error'}\n                                        align={'center'}\n                                        size={ this.props.isMobile ? '1.2em' : '1.8em' }\n                                      />\n                                    </Flex>\n                                  ) : (\n                                    <Flex\n                                      p={['4px','7px']}\n                                      borderRadius={'50%'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                      backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                                    >\n                                      <Icon\n                                        name={'Edit'}\n                                        align={'center'}\n                                        color={'redeem'}\n                                        size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                      />\n                                    </Flex>\n                                  )\n                                }\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                      );\n                    })\n                  }\n                  {\n                    (!this.state.contractDeployed && !this.state.processing.loading && (!this.state.actions || Object.values(this.state.actions).length<this.state.maxContracts)) && (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        handleClick={ e => this.setNewAction(true) }\n                        title={ this.state.newAction ? 'Add Contract' : null }\n                      >\n                        {\n                          this.state.newAction ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        width={1}\n                                        type={fieldType}\n                                        pattern={fieldPattern}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        placeholder={`${input.name} (${input.type})`}\n                                        onChange={ e => this.inputChange(e,inputIndex) }\n                                        value={this.state.actionInputs && this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                              >\n                                <RoundButton\n                                  buttonProps={{\n                                    px:[0,4],\n                                    type:'button',\n                                    width:[1,'auto'],\n                                    disabled:!this.state.actionValid\n                                  }}\n                                  handleClick={this.addAction.bind(this)}\n                                >\n                                  Add Contract\n                                </RoundButton>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                Add Contract\n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'Add'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    )\n                  }\n                  <Flex\n                    mb={3}\n                    width={1}\n                    alignItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      this.state.contractDeployed ? (\n                        <DashboardCard\n                          cardProps={{\n                            py:3,\n                            px:4,\n                            width:[1,'100%']\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              align={'center'}\n                              size={ this.props.isMobile ? '1.4em' : '2.2em' }\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={1}\n                              fontWeight={3}\n                              fontSize={[2,3]}\n                              color={'dark-gray'}\n                              textAlign={'center'}\n                            >\n                              B2B Vesting contracts have been deployed\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      ) : this.state.processing && this.state.processing.loading ? (\n                        <TxProgressBar\n                          {...this.props}\n                          hash={this.state.processing.txHash}\n                          waitText={`Deployment estimated in`}\n                          endMessage={`Finalizing deployment request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      ) : (\n                        <RoundButton\n                          buttonProps={{\n                            type:'submit',\n                            width:[1,'15em'],\n                            disabled:!this.state.validated\n                          }}\n                        >\n                          Deploy Contracts\n                        </RoundButton>\n                      )\n                    }\n                  </Flex>\n                </Form>\n              ) : this.state.action === 'deposit' ?\n                depositContracts.length>0 ?\n                  depositContracts.map( (contractInfo,actionIndex) => {\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        key={`action_${actionIndex}`}\n                        handleClick={ e => this.setViewAction(actionIndex) }\n                        title={ this.state.viewAction === actionIndex ? 'View Contract' : null }\n                      >\n                        {\n                          this.state.viewAction === actionIndex ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Contract Address`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.contractAddress}\n                                />\n                              </Field>\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        readOnly\n                                        width={1}\n                                        type={fieldType}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        value={contractInfo[input.name]}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Total Deposited`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.totalDeposited.toFixed(6)}\n                                />\n                              </Field>\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Available Balance`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.availableBalance.toFixed(6)}\n                                />\n                              </Field>\n                              <Flex\n                                mb={2}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                borderTop={'1px solid transparent'}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <SendTxWithBalance\n                                    {...this.props}\n                                    action={this.state.action}\n                                    tokenConfig={this.state.tokenConfig}\n                                    tokenBalance={this.state.tokenBalance}\n                                    contractInfo={this.state.contractInfo}\n                                    callback={this.depositCallback.bind(this)}\n                                    getTransactionParams={this.getTransactionParams.bind(this)}\n                                    approveDescription={'You need to approve the Smart-Contract first'}\n                                  >\n                                    <DashboardCard\n                                      cardProps={{\n                                        p:3,\n                                      }}\n                                    >\n                                      <Flex\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                      >\n                                        <Icon\n                                          size={'2.3em'}\n                                          name={'MoneyOff'}\n                                          color={'cellText'}\n                                        />\n                                        <Text\n                                          mt={2}\n                                          fontSize={2}\n                                          color={'cellText'}\n                                          textAlign={'center'}\n                                        >\n                                          You don't have any $IDLE in your wallet.\n                                        </Text>\n                                      </Flex>\n                                    </DashboardCard>\n                                  </SendTxWithBalance>\n                                </Flex>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                {this.functionsUtil.shortenHash(contractInfo.owner)} - {this.functionsUtil.shortenHash(contractInfo.recipient)} - {contractInfo.vestingPeriod} \n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'ZoomIn'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    );\n                  })\n                : (\n                  <Text\n                    textAlign={'center'}\n                  >\n                    You can't deposit in any contract yet.\n                  </Text>\n                )\n              : this.state.action === 'claim' &&\n                claimContracts.length>0 ?\n                  claimContracts.map( (contractInfo,actionIndex) => {\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        key={`action_${actionIndex}`}\n                        handleClick={ e => this.setViewAction(actionIndex) }\n                        title={ this.state.viewAction === actionIndex ? 'View Contract' : null }\n                      >\n                        {\n                          this.state.viewAction === actionIndex ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Contract Address`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.contractAddress}\n                                />\n                              </Field>\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        readOnly\n                                        width={1}\n                                        type={fieldType}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        value={contractInfo[input.name]}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Total Deposited`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.totalDeposited.toFixed(6)}\n                                />\n                              </Field>\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Available Balance`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.availableBalance.toFixed(6)}\n                                />\n                              </Field>\n                              <Flex\n                                mb={2}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                borderTop={'1px solid transparent'}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  {\n                                    this.state.claimedTokens && (\n                                      <Text\n                                        mb={2}\n                                        fontSize={2}\n                                        fontWeight={3}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        You have successfully claimed {this.state.claimedTokens.toFixed(4)} {this.state.tokenConfig.token}\n                                      </Text>\n                                    )\n                                  }\n                                  {\n                                    contractInfo.availableBalance && contractInfo.availableBalance.gt(0.00000001) ? (\n                                      <ExecuteTransaction\n                                        params={[]}\n                                        {...this.props}\n                                        Component={Button}\n                                        componentProps={{\n                                          size:'medium',\n                                          value:'Claim',\n                                          mainColor:'redeem',\n                                        }}\n                                        methodName={'claim'}\n                                        action={this.state.action}\n                                        callback={this.claimCallback.bind(this)}\n                                        contractName={contractInfo.contractName}\n                                      />\n                                    ) : (\n                                      <Text\n                                        mb={2}\n                                        fontSize={2}\n                                        fontWeight={3}\n                                        color={'cellText'}\n                                      >\n                                        No balance available.\n                                      </Text>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                {this.functionsUtil.shortenHash(contractInfo.owner)} - {this.functionsUtil.shortenHash(contractInfo.recipient)} - {contractInfo.vestingPeriod} \n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'ZoomIn'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    );\n                  })\n                : (\n                  <Text\n                    textAlign={'center'}\n                  >\n                    You can't claim from any contract yet.\n                  </Text>\n                )\n            }\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default DeployB2BVesting;\n","import Staking from \"../Staking/Staking\";\nimport DAI from '../abis/tokens/DAI.json';\nimport IDLE from '../contracts/IDLE.json';\nimport Tranches from '../Tranches/Tranches';\nimport USDC from '../abis/tokens/USDC.json';\nimport WETH from '../abis/tokens/WETH.json';\nimport COMP from '../abis/compound/COMP.json';\nimport aToken from '../abis/aave/AToken.json';\nimport ERC20 from '../abis/tokens/ERC20.json';\nimport TokenSwap from '../TokenSwap/TokenSwap';\nimport yDAIv3 from '../abis/iearn/yDAIv3.json';\nimport LpStaking from '../LpStaking/LpStaking';\nimport stkIDLE from '../contracts/stkIDLE.json';\nimport yUSDCv3 from '../abis/iearn/yUSDCv3.json';\nimport yUSDTv3 from '../abis/iearn/yUSDTv3.json';\nimport ySUSDv3 from '../abis/iearn/ySUSDv3.json';\nimport yTUSDv3 from '../abis/iearn/yTUSDv3.json';\nimport Timelock from '../contracts/Timelock.json';\nimport CurveZap from '../abis/curve/CurveZap.json';\nimport CovToken from '../abis/cover/CovToken.json';\nimport B2BVester from '../contracts/B2BVester.json';\nimport IdleStaking from '../IdleStaking/IdleStaking';\n// import CurveSwap from '../abis/curve/CurveSwap.json';\nimport CurvePool from \"../abis/curve/CurvePool.json\";\nimport NexusMutual from \"../NexusMutual/NexusMutual\";\nimport CoverMint from \"../abis/cover/CoverMint.json\";\nimport LockedIDLE from \"../contracts/LockedIDLE.json\";\nimport LpStakingAbi from \"../contracts/LpStaking.json\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport TokenWrapper from \"../TokenWrapper/TokenWrapper\";\nimport PriceOracle from \"../contracts/PriceOracle.json\";\nimport FeeTreasury from \"../contracts/FeeTreasury.json\";\nimport IdleTokenV2 from \"../contracts/IdleTokenV2.json\";\nimport StrategyPage from \"../StrategyPage/StrategyPage\";\nimport BuyModal from \"../utilities/components/BuyModal\";\nimport IdleTokenV3 from \"../contracts/IdleTokenV3.json\";\nimport IdleTokenV4 from \"../contracts/IdleTokenV4.json\";\nimport BatchDeposit from \"../BatchDeposit/BatchDeposit\";\nimport ChildERC20 from '../abis/polygon/ChildERC20.json';\nimport EarlyRewards from '../contracts/EarlyRewards.json';\nimport PolygonBridge from '../PolygonBridge/PolygonBridge';\nimport CoverProtocol from '../CoverProtocol/CoverProtocol';\nimport CurveDeposit from '../abis/curve/CurveDeposit.json';\nimport VesterFactory from '../contracts/VesterFactory.json';\nimport GovernorAlpha from '../contracts/GovernorAlpha.json';\nimport EcosystemFund from '../contracts/EcosystemFund.json';\nimport Comptroller from '../abis/compound/Comptroller.json';\nimport erc20Forwarder from '../contracts/erc20Forwarder.json';\nimport BalancerPool from '../abis/balancer/BalancerPool.json';\nimport IdleController from '../contracts/IdleController.json';\nimport TokenMigration from '../TokenMigration/TokenMigration';\nimport BatchMigration from '../BatchMigration/BatchMigration';\nimport IdleBatchedMint from '../contracts/IdleBatchedMint.json';\nimport { RampInstantSDK } from '@ramp-network/ramp-instant-sdk';\nimport IdleProxyMinter from '../contracts/IdleProxyMinter.json';\nimport ERC20Predicate from '../abis/polygon/ERC20Predicate.json';\nimport EtherPredicate from '../abis/polygon/EtherPredicate.json';\nimport DepositManager from '../abis/polygon/DepositManager.json';\nimport IdleRebalancerV3 from '../contracts/IdleRebalancerV3.json';\nimport LiquidityGaugeV2 from '../abis/curve/LiquidityGaugeV2.json';\nimport DeployB2BVesting from '../DeployB2BVesting/DeployB2BVesting';\nimport RootChainManager from '../abis/polygon/RootChainManager.json';\nimport SushiV2Router02 from \"../abis/sushiswap/SushiV2Router02.json\";\nimport IdleBatchConverter from \"../contracts/IdleBatchConverter.json\";\nimport UniswapV2Router02 from \"../abis/uniswap/UniswapV2Router02.json\";\nimport ChildChainManager from '../abis/polygon/ChildChainManager.json';\nimport IdleDepositForwarder from \"../contracts/IdleDepositForwarder.json\";\nimport ProtocolDataProvider from '../abis/aave/ProtocolDataProvider.json';\nimport SushiLiquidityPool from \"../abis/sushiswap/SushiLiquidityPool.json\";\nimport NexusMutualIncidents from \"../abis/nexus/NexusMutualIncidents.json\";\nimport StakingFeeDistributor from \"../contracts/StakingFeeDistributor.json\";\nimport NexusMutualDistributor from \"../abis/nexus/NexusMutualDistributor.json\";\nimport BalancerExchangeProxy from \"../abis/balancer/BalancerExchangeProxy.json\";\nimport IdleConverterPersonalSignV4 from \"../contracts/IdleConverterPersonalSignV4.json\";\nimport MinimalInitializableProxyFactory from \"../contracts/MinimalInitializableProxyFactory.json\";\n\nconst env = process.env;\n\nconst globalConfigs = {\n  appName: \"Idle\",\n  version: \"v6.1\",\n  baseToken: \"ETH\",\n  baseURL: \"https://idle.finance\",\n  forumURL: \"https://gov.idle.finance\",\n  telegramURL: \"https://t.me/idlefinance\",\n  discordURL: \"https://discord.gg/mpySAJp\",\n  twitterURL: \"https://twitter.com/idlefinance\",\n  theme: {\n    darkModeEnabled: true\n  },\n  environments:{\n    live:{\n      requiredNetwork:1,\n      url:\"https://idle.finance\"\n    },\n    beta:{\n      requiredNetwork:1,\n      url:\"https://beta.idle.finance\"\n    },\n    polygon:{\n      requiredNetwork:137,\n      url:\"https://polygon.idle.finance\"\n    }\n  },\n  betaURL: \"https://beta.idle.finance\",\n  countries: {\n    USA: \"United States of America\",\n    GBR: \"United Kingdom\",\n    AUS: \"Australia\",\n    BRA: \"Brazil\",\n    CHN: \"China\",\n    CAN: \"Canada\",\n    EUR: \"Europe\",\n    HKG: \"Hong Kong\",\n    IND: \"India\",\n    MEX: \"Mexico\",\n    RUS: \"Russia\",\n    ZAF: \"South Africa\",\n    KOR: \"South Korea\"\n  },\n  logs: {\n    // Enable logs levels\n    errorsEnabled: false,\n    messagesEnabled: false\n  },\n  connectors: {\n    // Connectors props\n    metamask: {\n      enabled: true,\n      subcaption: \"Browser extension\"\n    },\n    opera: {\n      enabled: true,\n      subcaption: \"Opera injected wallet\"\n    },\n    dapper: {\n      enabled: true,\n      icon: \"dapper.png\",\n      subcaption: \"Browser extension\"\n    },\n    coinbase: {\n      enabled: true,\n      icon: \"coinbase.png\",\n      subcaption: \"Connect with Coinbase wallet\"\n    },\n    trustwallet: {\n      enabled: true,\n      subcaption: \"Connect with Trust Wallet\"\n    },\n    walletconnect: {\n      enabled: true,\n      iconModal: \"walletconnect.png\",\n      subcaption: \"Connect with QR code\"\n    },\n    walletlink: {\n      enabled: true,\n      icon: \"coinbase.png\",\n      name: \"Coinbase Wallet\",\n      subcaption: \"Connect with QR code\"\n    },\n    gnosis: {\n      enabled: true,\n      // icon:'coinbase.png',\n      name: \"Gnosis Safe App\",\n      subcaption: \"Connect with Gnosis Safe App\"\n    },\n    fortmatic: {\n      enabled: true,\n      subcaption: \"Login with phone-number\"\n    },\n    portis: {\n      enabled: true,\n      subcaption: \"Login with e-mail\"\n    },\n    authereum: {\n      enabled: true,\n      subcaption: \"Cross-device wallet\"\n    },\n    torus: {\n      enabled: true,\n      icon: \"torus.png\",\n      subcaption: \"One-Click login for Web 3.0\"\n    },\n    trezor: {\n      enabled: true,\n      subcaption: \"Hardware wallet\"\n    },\n    ledger: {\n      enabled: true,\n      subcaption: \"Hardware wallet\"\n    },\n    ledgerlive: {\n      enabled: true,\n      subcaption: \"Ledger Live Browser\"\n    },\n    custom: {\n      enabled: true,\n      subcaption: \"Custom address\"\n    }\n  },\n  newsletterSubscription: {\n    endpoint: \"https://dev.lapisgroup.it/idle/newsletter.php\"\n  },\n  messages: {\n    scoreShort: \"Protocol Risk Score\",\n    apyShort: \"Annual Percentage Yield\",\n    totalProfitPerc: \"Total percentage profit generated on your balance\",\n    tokenPrice: \"The token price is calculated using Uniswap spot prices.\",\n    cheapRedeem: \"Amount of unlent funds available for low gas fees redeem\",\n    curveBonusSlippage: \"Slippage or bonus depending on if the coin is low or high in the Curve Pool\",\n    distributionSpeed: \"The distribution indicates the amount of tokens distributed for the entire pool.\",\n    directMint: \"Pay an additional gas fee to rebalance the pool and help all users gain an additional APR\",\n    performanceFee: \"This fee is charged on positive returns generated by Idle including accrued gov tokens except IDLE\",\n    userDistributionSpeed: \"The distribution indicates the amount of tokens distributed for your account based on your current pool share.\",\n    govTokenApr: \"Governance Token APR is calculated using the spot price from Uniswap and the current distribution speed for the specific pool.\",\n    govTokenRedeemableBalance: \"The redeemable balance is re-calculated on every interaction with the smart-contract so, the shown balance may be lower than the real one.\",\n    riskScoreShort: \"It's a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.\",\n    redeemSkipGov: \"This feature allows you to save some gas by skipping the redeem of all or some of your accrued governance tokens, the skipped governance tokens will be given away to the entire pool\",\n    batchDepositExecutionSchedule: \"Batches are executed twice a week, usually on Sunday and Wednesday, and only when the pool size reaches at least 20,000$. The time of each execution will vary depending on the gas price of the Ethereum network.\",\n    riskAdjustedDisabledMessageDeposit: `The Risk Adjusted strategy is no longer available.<br />Please consider to deposit in the <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://beta.idle.finance/#/dashboard/tranches/senior/idle\" class=\"link\">Senior Tranche</a> to have a similar risk profile.`,\n    apyLong: \"APY is based on (I) the current yield advertised by the underlying protocol, (II) the current distribution rate of governance tokens provided by underlying lending protocols (III) the current estimated price of governance tokens from Uniswap spot prices. (IV) IDLE token distribution is referred to the entire pool.\",\n    riskScore: `It's a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.<br /><br />The model outputs a 0-10 score, where <strong>0 is the most risky and 10 is the most safe.</strong> Visit <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://defiscore.io/overview\">https://defiscore.io/overview</a> for further information.`,\n    curveInstructions: `<strong>Depositing into the pool:</strong><br />By depositing your funds into the Curve Pool you may incur in slippage or bonus depending on if the coin is low or high in the pool.<br /><br /><strong>Withdrawing share from the pool:</strong><br />When you redeem your tokens previously deposited in the Curve Pool you get back an uneven amounts of tokens, that can give slippage or bonus depending on if the coin is low or high in the pool.`,\n    yieldFarming: 'Strategies in Idle now will be able to support and distribute a vast range of yield opportunities across multiple protocols. Users will be able to receive their equivalent share of governance token that the protocol is receiving while allocating liquidity to yield farming opportunities. <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://idlefinance.medium.com/idle-yield-farming-upgrade-18e4bc483c8f\" class=\"link\">Read more here</a>.',\n    riskAdjustedDisabledMessageRedeem: `The Risk Adjusted strategy is no longer available, please redeem your funds from this strategy. You can deposit in the <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://beta.idle.finance/#/dashboard/tranches/senior/idle\" class=\"link\">Senior Tranche</a> to maintain a similar risk profile and receive an incentive. <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://gov.idle.finance/t/risk-adjusted-removal-for-tranches-migration/673\" class=\"link\">Read more here</a>.`,\n  },\n  analytics: {\n    google: {\n      events: {\n        enabled: true, // Enable Google Analytics events\n        debugEnabled: false, // Enable sending for test environments\n        addPostfixForTestnet: true // Append testnet to eventCategory\n      },\n      pageView: {\n        enabled: true\n      }\n    }\n  },\n  modals: {\n    // Enable modals\n    first_deposit_referral: false, // Referral share modal\n    first_deposit_share: true, // First deposit share modal\n    migrate: {\n      enabled: true,\n      availableNetworks: [1]\n    },\n    welcome: {\n      // Welcome modal\n      enabled: true,\n      frequency: 604800 // One week\n    }\n  },\n  dashboard: {\n    baseRoute: \"/dashboard\",\n    theme: {\n      mode: \"light\",\n      darkModeEnabled: true\n    }\n  },\n  governance:{\n    test:false,\n    enabled:true,\n    startBlock:11333729,\n    availableNetworks:[1],\n    baseRoute:'/governance',\n    props:{\n      tokenName:'IDLE',\n      availableContracts:{\n        IDLE,\n        FeeTreasury,\n        PriceOracle,\n        GovernorAlpha,\n        EcosystemFund,\n        IdleController\n      }\n    },\n    proposals: {\n      12: {\n        description: 'Details in the gov forum post: <a class=\"link\" href=\"https://gov.idle.finance/t/iip-12-enable-idle-lm-on-idlerai-and-fund-leagues-mandate/620\">https://gov.idle.finance/t/iip-12-enable-idle-lm-on-idlerai-and-fund-leagues-mandate/620</a>'\n      },\n      7: {\n        description: `Upgrade of IdleTokenGovernance contract to include the following changes:<br />\n        <ul>\n          <li>support for EIP 3165 flashLoans (fee is set to 0.08% of the flash loaned amount redistributed to LP)</li>\n          <li>support for stkAAVE distribution</li>\n          <li>support for new cWBCT distribution</li>\n          <li>other minor updates for gas and redeems</li>\n        </ul>\n        See more in the gov forum post: <a class=\"link\" href=\"https://gov.idle.finance/t/iip-7-idletoken-upgrade-stkaave-distribution/466\">https://gov.idle.finance/t/iip-7-idletoken-upgrade-stkaave-distribution/466</a>`\n      }\n    },\n    contracts: {\n      delegates: \"IDLE\",\n      governance: \"GovernorAlpha\"\n    }\n  },\n  curve: {\n    enabled: false,\n    params: {\n      n_coins: 3,\n      label: \"Curve\",\n      route: \"/dashboard/curve\",\n      image: \"images/protocols/curve.svg\",\n      imageInactive: \"images/protocols/curve-off.svg\"\n    },\n    rates: {\n      path: [\"apy\", \"day\", \"idle\"],\n      endpoint: \"https://www.curve.fi/raw-stats/apys.json\"\n    },\n\n    poolContract: {\n      decimals: 18,\n      abi: CurvePool,\n      name: \"idleDAI+idleUSDC+idleUSDT\",\n      token: \"idleDAI+idleUSDC+idleUSDT\",\n      address: \"0x09f4b84a87fc81fc84220fd7287b613b8a9d4c05\"\n    },\n    depositContract: {\n      abi: CurveDeposit,\n      name: \"idleCurveDeposit\",\n      address: \"0x83f252f036761a1e3d10daca8e16d7b21e3744d7\"\n    },\n    gaugeContract: {\n      abi: LiquidityGaugeV2,\n      name: \"LiquidityGaugeV2\",\n      address: \"0xd69ac8d9D25e99446171B5D0B3E4234dAd294890\"\n    },\n    zapContract: {\n      abi: CurveZap,\n      name: \"idleCurveZap\",\n      address: \"0x456974df1042ba7a46fd49512a8778ac3b840a21\"\n    },\n    migrationContract: {\n      abi: CurveDeposit,\n      name: \"idleCurveDeposit\",\n      address: \"0x83f252f036761a1e3d10daca8e16d7b21e3744d7\",\n      functions: [\n        {\n          label: \"Deposit\",\n          name: \"add_liquidity\"\n        }\n      ]\n    },\n    availableTokens: {\n      idleDAIYield: {\n        decimals: 18,\n        enabled: true,\n        baseToken: \"DAI\",\n        token: \"idleDAIYield\",\n        address: \"0x3fe7940616e5bc47b0775a0dccf6237893353bb4\",\n        migrationParams: {\n          n_coins: 3,\n          coinIndex: 0\n        }\n      },\n      idleUSDCYield: {\n        decimals: 18,\n        enabled: true,\n        baseToken: \"USDC\",\n        token: \"idleUSDCYield\",\n        address: \"0x5274891bEC421B39D23760c04A6755eCB444797C\",\n        migrationParams: {\n          n_coins: 3,\n          coinIndex: 1\n        }\n      },\n      idleUSDTYield: {\n        decimals: 18,\n        enabled: true,\n        baseToken: \"USDT\",\n        token: \"idleUSDTYield\",\n        address: \"0xF34842d05A1c888Ca02769A633DF37177415C2f8\",\n        migrationParams: {\n          n_coins: 3,\n          coinIndex: 2\n        }\n      }\n    }\n  },\n  permit: {\n    DAI: {\n      version: 1,\n      EIPVersion: null,\n      nonceMethod: \"nonces\",\n      name: \"Dai Stablecoin\",\n      type: [\n        { name: \"holder\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"expiry\", type: \"uint256\" },\n        { name: \"allowed\", type: \"bool\" }\n      ]\n    },\n    USDC: {\n      version: 2,\n      name: \"USD Coin\",\n      EIPVersion: 2612,\n      nonceMethod: \"nonces\",\n      type: [\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" }\n      ]\n    },\n    SLP: {\n      version: 1,\n      EIPVersion: 2612,\n      nonceMethod: \"nonces\",\n      name: \"SushiSwap LP Token\",\n      type: [\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" }\n      ]\n    }\n  },\n  govTokens:{\n    IDLE: {\n      abi: IDLE,\n      decimals: 18,\n      token: \"IDLE\",\n      enabled: true,\n      showAUM: false, // Include IDLE balance in AUM\n      showAPR: false, // Include IDLE Apr\n      protocol: \"idle\",\n      showPrice: false, // Show price in Yield Farming section\n      showBalance: false, // Include IDLE balance in Portfolio Donut\n      aprTooltipMode: false,\n      availableNetworks:[1,137],\n      distributionMode: \"block\",\n      distributionFrequency: \"day\", // Multiply distribution per block\n      color: \"hsl(162, 100%, 41%)\",\n      icon: \"images/tokens/IDLE.svg\",\n      addresses:{\n        1:\"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\",\n        137:\"0xc25351811983818c9fe6d8c580531819c8ade90f\"\n      },\n      address: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\", // MAIN\n      disabledTokens:{\n        1:[\"idleDAISafe\",\"idleUSDCSafe\",\"idleUSDTSafe\"],\n        137:[\"idleDAIYield\",\"idleUSDCYield\",\"idleWETHYield\"],\n      }\n    },\n    COMP: {\n      abi: COMP,\n      decimals: 18,\n      token: \"COMP\",\n      enabled: true,\n      showAUM: true, // Include IDLE balance in AUM\n      showAPR: true, // Include COMP Apr\n      showPrice: true,\n      showBalance: true, // Include COMP balance in Portfolio Donut\n      disabledTokens: [],\n      protocol: \"compound\",\n      aprTooltipMode: false,\n      availableNetworks:[1],\n      distributionMode: \"block\",\n      distributionFrequency: \"day\",\n      color: \"hsl(162, 100%, 41%)\",\n      address: \"0xc00e94cb662c3520282e6f5717214004a7f26888\" // MAIN\n      // address:'0x61460874a7196d6a22d1ee4922473664b3e95270' // KOVAN\n    },\n    stkAAVE:{\n      abi:aToken,\n      decimals:18,\n      showAUM:true, // Include stkAAVE balance in AUM\n      showAPR:true, // Include stkAAVE Apr\n      enabled:true,\n      showPrice:true,\n      token:'stkAAVE',\n      showBalance:true, // Include stkAAVE balance in Portfolio Donut\n      protocol:'aavev2',\n      aprTooltipMode:false,\n      availableNetworks:[1],\n      distributionMode:'second',\n      color:'hsl(314, 41%, 51%)',\n      distributionFrequency:'day',\n      address:'0x4da27a545c0c5b758a6ba100e3a049001de870f5', // MAIN\n      addressForPrice:'0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9', // MAIN\n      disabledTokens:{\n        1:[\"idleTUSDYield\", \"idleSUSDYield\", \"idleFEIYield\"]\n      }\n    },\n    WMATIC:{\n      abi:ERC20,\n      decimals:18,\n      showAUM:true, // Include stkAAVE balance in AUM\n      showAPR:true, // Include stkAAVE Apr\n      enabled:true,\n      token:'WMATIC',\n      showPrice:true,\n      showBalance:true, // Include stkAAVE balance in Portfolio Donut\n      protocol:'aavev2',\n      disabledTokens:[],\n      aprTooltipMode:false,\n      distributionMode:'second',\n      color:'hsl(314, 41%, 51%)',\n      distributionFrequency:'day',\n      availableNetworks:[137,80001],\n      // address:'0x9c3C9283D3e44854697Cd22D3Faa240Cfb032889', // Mumbai\n      address:'0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270', // Polygon\n      addressForPrice:'0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0' // Mainnet\n    }\n  },\n  contracts:{\n    137:{\n      ProtocolDataProvider:{\n        abi:ProtocolDataProvider,\n        address:'0x7551b5D2763519d4e37e8B81929D336De671d46d'\n      },\n      ChildChainManager:{\n        abi:ChildChainManager,\n        // address:'0x2e5e27d50EFa501D90Ad3638ff8441a0C0C0d75e' // Mumbai\n        address:'0xA6FA4fB5f76172d178d61B04b0ecd319C5d1C0aa' // Matic\n      },\n      UniswapRouter:{\n        networkId:1,\n        abi:UniswapV2Router02,\n        address:'0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\n      },\n      SushiswapRouter:{\n        abi:SushiV2Router02,\n        address:'0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506'\n      },\n    },\n    1:{\n      DepositManager:{\n        abi:DepositManager,\n        address:'0x401f6c983ea34274ec46f84d70b31c151321188b'\n      },\n      RootChainManager:{\n        abi:RootChainManager,\n        // address:'0xBbD7cBFA79faee899Eaf900F13C9065bF03B1A74' // Goerli\n        address:'0xA0c68C638235ee32657e8f720a23ceC1bFc77C77' // Mainnet\n      },\n      ProxyFactory: {\n        abi: MinimalInitializableProxyFactory,\n        address: \"0x91baced76e3e327ba7850ef82a7a8251f6e43fb8\"\n      },\n      LockedIDLE:{\n        abi:LockedIDLE,\n        address:'0xF241a0151841AE2E6ea750D50C5794b5EDC31D99'\n      },\n      FeeTreasury:{\n        abi:FeeTreasury,\n        address:'0x69a62c24f16d4914a48919613e8ee330641bcb94' // MAIN\n      },\n      PriceOracle:{\n        abi:PriceOracle,\n        address:'0x972A64d108e250dF98dbeac8170678501f5EF181' // MAIN\n        // address:'0xCab5760688db837Bb453FE1DFBC5eDeE6fa8F0FF' // KOVAN\n      },\n      Timelock:{\n        abi:Timelock,\n        address:'0xD6dABBc2b275114a2366555d6C481EF08FDC2556' // MAIN\n        // address:'0xfD88D7E737a06Aa9c62B950C1cB5eE63DA379AFd' // KOVAN\n      },\n      EcosystemFund:{\n        abi:EcosystemFund,\n        address:'0xb0aA1f98523Ec15932dd5fAAC5d86e57115571C7' // MAIN\n        // address:'0x125d3D6A8e546BD13802c309429CBB4db5737d57' // KOVAN\n      },\n      VesterFactory:{\n        abi:VesterFactory,\n        address:'0xbF875f2C6e4Cc1688dfe4ECf79583193B6089972' // MAIN\n        // address:'0x9b52f91578c8AfA8e2DF07d4D7726bB6b73Ec1FE' // KOVAN\n      },\n      IdleController:{\n        abi:IdleController,\n        address:'0x275DA8e61ea8E02d51EDd8d0DC5c0E62b4CDB0BE' // MAIN\n        // address:'0x8Ad5F0644b17208c81bA5BDBe689c9bcc7143d87' // KOVAN\n      },\n      EarlyRewards:{\n          abi:EarlyRewards,\n          address:'0xa1F71ED24ABA6c8Da8ca8C046bBc9804625d88Fc' // MAIN\n          // address:'0x07A94A60B54c6b2Da19e23D6E9123180Bf92ED40' // KOVAN\n      },\n      GovernorAlpha:{\n        abi:GovernorAlpha,\n        address:'0x2256b25CFC8E35c3135664FD03E77595042fe31B' // MAIN\n        // address:'0x782cB1dbd0bD4df95c2497819be3984EeA5c2c25' // KOVAN\n      },\n      Comptroller:{\n        abi:Comptroller,\n        address:'0x3d9819210a31b4961b30ef54be2aed79b9c9cd3b', // Main\n        // address:'0x5eae89dc1c671724a672ff0630122ee834098657' // Kovan\n      },\n      SushiswapRouter:{\n        abi:SushiV2Router02,\n        address:'0xd9e1cE17f2641f24aE83637ab66a2cca9C378B9F'\n      },\n      UniswapRouter:{\n        abi:UniswapV2Router02,\n        address:'0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\n      },\n      BalancerExchangeProxy:{\n        abi:BalancerExchangeProxy,\n        address:'0x3E66B66Fd1d0b02fDa6C811Da9E0547970DB2f21'\n      }\n    }\n  },\n  tokens: {\n    DAI: {\n      zeroExInstant: {\n        orderSource: \"https://api.0x.org/sra/\",\n        assetData:\n          \"0xf47261b00000000000000000000000006b175474e89094c44da98b954eedeac495271d0f\",\n        affiliateInfo: {\n          feeRecipient: \"0x4215606a720477178AdFCd5A59775C63138711e8\",\n          feePercentage: 0.0025\n        }\n      }\n    },\n    USDC: {\n      zeroExInstant: {\n        orderSource: \"https://api.0x.org/sra/\",\n        assetData:\n          \"0xf47261b0000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\",\n        affiliateInfo: {\n          feeRecipient: \"0x4215606a720477178AdFCd5A59775C63138711e8\",\n          feePercentage: 0.0025\n        }\n      }\n    }\n  },\n  tranchflash: {\n    name: \"perpetual yield tranches\",\n    subtitle: \"Make yield your own.\",\n    desc:\"Choose the benefits of high-yield or low-risk, while enjoying the flexibility of Tranches. This comes with auto-compounding for accrued governance tokens and no locking period.\",\n    arrows: \"images/idlearrows.svg\",\n    juniorinfo:\n      \"<b>Junior Tranches</b><br>Higher risk, leveraged for variable rate rewards\",\n    seniorinfo:\n      \"<b>Senior Tranches</b><br>Lower risk, built-in coverage for variable rate rewards\",\n    helpcircle: \"images/help-circle.svg\",\n    questions: [\n      {\n        desc: \"How it Works?\",\n        msg:\"This product aggregates user deposits into underlying markets and allocates the accrued yield on the sum between two different risk profile subsets. You get to choose the strategy according to your risk tolerance. Users are able to deposit funds into either the Junior or Senior Tranches in exchange for a token indicating their claim on their principal and whatever yield is allocated for them. These aggregated holdings are then deposited into the specified originating lending market, in this current version Idle Best-Yield strategy.\"\n      },\n      {\n        desc: \"What happens in a case of a default?\",\n        msg:\"In case of hack, an emergency shutdown can be triggered (by both the guardian, which would be a multi-sig wallet, and the owner which will be the Idle governance) in order to pause both deposits and redeems.<br />The redistribution of remaining funds can happens selectively, by allowing only Senior tranche holders to withdraw first directly in the main contract, or through a separate contract for more complex cases and resolutions (managed by the Idle governance).\"\n      }\n    ]\n  },\n  tranches: {\n    AA: {\n      color: {\n        hex: \"#337de5\",\n        rgb: [51, 125, 229],\n        hsl: [\"215\", \"77%\", \"55%\"]\n      },\n      type: \"AA\",\n      route: \"senior\",\n      icon: \"Security\",\n      image: \"images/SeniorTranche.svg\",\n      bubble: \"images/SeniorBubble.svg\",\n      baseName: \"senior\",\n      name: \"Senior Tranche\",\n      features: [\n        \"Covered by Junior tranches funds\",\n        \"Minimized risk exposure\",\n        \"No locking period or epochs\",\n        \"Auto-Reinvest accrued tokens\",\n        \"Stake to receive $IDLE tokens\"\n      ],\n      description: {\n        withdraw: \"You can withdraw your funds at any time from the tranche.\",\n        stake:\"Stake your tranche tokens to earn additional rewards and boost the APY.\",\n        unstake:\"By unstaking your tranche tokens you will no more get additional rewards.\",\n        cantUnstake:\"To unstake your funds you just need to wait 10 blocks after your last stake transaction.\",\n        cantWithdraw:\"To withdraw your funds you just need to wait at least 1 block from the latest harvest transaction.\",\n        long:\"Senior Tranches provide a shielded access to optimized DeFi yields, thanks to an integrated funds' coverage given by Junior Tranches\",\n        deposit:\"By depositing in the Senior Tranche in case of Smart-Contract breach your funds are covered by the funds deposited in the Junior Tranche.\",\n      }\n    },\n    BB: {\n      color: {\n        hex: \"#FAB325\",\n        rgb: [250, 179, 37],\n        hsl: [\"40\", \"95%\", \"56%\"]\n      },\n      type: \"BB\",\n      route: \"junior\",\n      icon: \"TrendingUp\",\n      image: \"images/JuniorTranche.svg\",\n      bubble: \"images/JuniorBubble.svg\",\n      baseName: \"junior\",\n      name: \"Junior Tranche\",\n      features: [\n        \"Leverage yield using Senior tranches funds\",\n        \"Higher risk exposure by protecting senior tranches\",\n        \"No locking period or epochs\",\n        \"Auto-Reinvest accrued tokens\",\n        \"Stake to receive $IDLE tokens\"\n      ],\n      description: {\n        withdraw: \"You can withdraw your funds at any time from the tranche.\",\n        stake:\"Stake your tranche tokens to earn additional rewards and boost the APY.\",\n        unstake:\"By unstaking your tranche tokens you will no more get additional rewards.\",\n        cantUnstake:\"To unstake your funds you just need to wait 10 blocks after your last stake transaction.\",\n        cantWithdraw:\"To withdraw your funds you just need to wait at least 1 block from the latest harvest transaction.\",\n        long:\"The Junior Tranches provide amplified optimized DeFi yields by carrying a higher grade of risks and protecting Senior Tranches\",\n        deposit:\"By depositing in the Junior Tranche in case of Smart-Contract breach your funds will be used to cover eventual losses on the Senior Tranche.\",\n      }\n    }\n  },\n  extraicons: {\n    best: {\n      icon: \"images/sidebar/best-on.svg\",\n      iconDark: \"images/sidebar/best-on-dark.svg\",\n      iconInactive: \"images/sidebar/best-off.svg\",\n      iconInactiveDark: \"images/sidebar/best-off-dark.svg\",\n    },\n    tranches: {\n      icon: \"images/sidebar/tranches-on.svg\",\n      iconDark: \"images/sidebar/tranches-on-dark.svg\",\n      iconInactive: \"images/strategies/tranches-off.svg\",\n      iconInactiveDark: \"images/strategies/tranches-off-dark.svg\"\n    },\n    risk: {\n      icon: \"images/sidebar/risk-on.svg\",\n      iconDark: \"images/sidebar/risk-on-dark.svg\",\n      iconInactive: \"images/sidebar/risk-off.svg\",\n      iconInactiveDark: \"images/sidebar/risk-off-dark.svg\"\n    },\n    stats: {\n      icon: \"images/sidebar/stats-on.svg\",\n      iconDark: \"images/sidebar/stats-on-dark.svg\",\n      iconInactive: \"images/sidebar/stats-off.svg\",\n      iconInactiveDark: \"images/sidebar/stats-off-dark.svg\"\n    },\n    tools: {\n      icon: \"images/sidebar/tools-on.svg\",\n      iconDark: \"images/sidebar/tools-on-dark.svg\",\n      iconInactive: \"images/sidebar/tools-off.svg\",\n      iconInactiveDark: \"images/sidebar/tools-off-dark.svg\"\n    },\n    forum: {\n      icon: \"images/sidebar/forum-on.svg\",\n      iconDark: \"images/sidebar/forum-on-dark.svg\",\n      iconInactive: \"images/sidebar/forum-off.svg\",\n      iconInactiveDark: \"images/sidebar/forum-off-dark.svg\"\n    },\n    stake: {\n      icon: \"images/sidebar/stake-on.svg\",\n      iconDark: \"images/sidebar/stake-on-dark.svg\",\n      iconInactive: \"images/sidebar/stake-off.svg\",\n      iconInactiveDark: \"images/sidebar/stake-off-dark.svg\"\n    },\n    leaderboard: {\n      icon: \"images/sidebar/leaderboard-on.svg\",\n      iconDark: \"images/sidebar/leaderboard-on-dark.svg\",\n      iconInactive: \"images/sidebar/leaderboard-off.svg\",\n      iconInactiveDark: \"images/sidebar/leaderboard-off-dark.svg\"\n    }, overview: {\n      icon: \"images/sidebar/overview-on.svg\",\n      iconDark: \"images/sidebar/overview-on-dark.svg\",\n      iconInactive: \"images/sidebar/overview-off.svg\",\n      iconInactiveDark: \"images/sidebar/overview-off-dark.svg\"\n    }, proposals: {\n      icon: \"images/sidebar/proposals-on.svg\",\n      iconDark: \"images/sidebar/proposals-on-dark.svg\",\n      iconInactive: \"images/sidebar/proposals-off.svg\",\n      iconInactiveDark: \"images/sidebar/proposals-off-dark.svg\"\n    }, delegate: {\n      icon: \"images/sidebar/delegate-on.svg\",\n      iconDark: \"images/sidebar/delegate-on-dark.svg\",\n      iconInactive: \"images/sidebar/delegate-off.svg\",\n      iconInactiveDark: \"images/sidebar/delegate-off-dark.svg\"\n    },\n  },\n  landingStrategies:{\n    best: {\n      networkId:1,\n      token: \"DAI\",\n      visible: true,\n      strategy:'best',\n      enabledEnvs: [],\n      color: \"#f32121\",\n      type: \"strategy\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      title: \"Best-Yield\",\n      iconName: \"Whatshot\",\n      availableNetworks:[],\n      govTokensEnabled: true,\n      component: StrategyPage,\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/best-on.svg\",\n      iconInactive: \"images/strategies/best-off.svg\",\n      iconInactiveDark: \"images/strategies/best-white.svg\",\n      desc: \"Maximize your returns across DeFi protocols\",\n      descLong:\"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.\",\n      descShort:\"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.\"\n    },\n    polygon: {\n      token: \"DAI\",\n      visible: true,\n      networkId:137,\n      enabledEnvs: [],\n      strategy:'best',\n      color: \"#f32121\",\n      type: \"strategy\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      title: \"Best-Yield\",\n      iconName: \"Whatshot\",\n      availableNetworks:[],\n      govTokensEnabled: true,\n      component: StrategyPage,\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/best-on.svg\",\n      iconInactive: \"images/strategies/best-on.svg\",\n      iconInactiveDark: \"images/strategies/best-on.svg\",\n      desc: \"Maximize your returns on Polygon across DeFi protocols\",\n      descLong:\"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.\",\n      descShort:\"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.\"\n    },\n    tranches: {\n      networkId:1,\n      token: \"DAI\",\n      visible: true,\n      type: \"tranche\",\n      protocol: \"idle\",\n      color: \"#f32121\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      strategy:'tranches',\n      component: Tranches,\n      iconName: \"Whatshot\",\n      enabledEnvs: ['beta'],\n      availableNetworks:[1],\n      govTokensEnabled: true,\n      title: \"Perpetual Tranches\",\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/tranches-on.png\",\n      iconInactive: \"images/strategies/tranches-off.png\",\n      iconInactiveDark: \"images/strategies/tranches-white.png\",\n      desc:\"Diversify your risk profile with dynamic tranched yield derivatives\",\n      descShort:\"Tranches deposit assets (eg DAI) into yield sources (eg Idle Finance) and split the accrued interest between 2 classes of products with different risk profiles.\",\n      descLong:\"Choose the benefits of high-yield or low-risk, while enjoying the flexibility of Tranches. This comes with auto-compounding for accrued governance tokens and no locking period.\"\n    },\n  },\n  strategies: {\n    tranches: {\n      token: \"DAI\",\n      visible: true,\n      type: \"tranche\",\n      protocol: \"idle\",\n      color: \"#f32121\",\n      comingSoon: false,\n      title: \"Tranches\",\n      addGovTokens: true,\n      titlePostfix: null,\n      component: Tranches,\n      iconName: \"Whatshot\",\n      enabledEnvs: ['beta'],\n      availableNetworks:[1],\n      govTokensEnabled: true,\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/tranches-on.png\",\n      iconInactive: \"images/strategies/tranches-off.png\",\n      iconInactiveDark: \"images/strategies/tranches-white.png\",\n      desc:\"Diversify your risk profile with dynamic tranched yield derivatives\",\n      descShort:\"Tranches deposit assets (eg DAI) into yield sources (eg Idle Finance) and split the accrued interest between 2 classes of products with different risk profiles.\",\n      descLong:\"Choose the benefits of high-yield or low-risk, while enjoying the flexibility of Tranches. This comes with auto-compounding for accrued governance tokens and no locking period.\"\n    },\n    best: {\n      token: \"DAI\",\n      visible: true,\n      enabledEnvs: [],\n      color: \"#f32121\",\n      type: \"strategy\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      title: \"Best-Yield\",\n      iconName: \"Whatshot\",\n      govTokensEnabled: true,\n      component: StrategyPage,\n      availableNetworks:[1,137],\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/best-on.svg\",\n      iconInactive: \"images/strategies/best-off.svg\",\n      iconInactiveDark: \"images/strategies/best-white.svg\",\n      desc: \"Maximize your returns across DeFi protocols\",\n      descLong:\"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.\",\n      descShort:\"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.\"\n    },\n    risk: {\n      token: \"DAI\",\n      visible: true,\n      enabledEnvs: [],\n      color: \"#2196F3\",\n      type: \"strategy\",\n      comingSoon: false,\n      titlePostfix: null,\n      addGovTokens: true,\n      iconName: \"Security\",\n      availableNetworks:[1],\n      title: \"Risk-Adjusted\",\n      govTokensEnabled: true,\n      component: StrategyPage,\n      chartColor: \"hsl(211,67%,47%)\",\n      icon: \"images/strategies/risk-on.svg\",\n      iconInactive: \"images/strategies/risk-off.svg\",\n      iconInactiveDark: \"images/strategies/risk-white.svg\",\n      desc: \"Optimize your risk exposure across DeFi protocols\",\n      descLong:\"The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.\",\n      descShort:\"The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.\"\n    }\n    /*\n    new:{\n      token:'DAI',\n      color:'#2196F3',\n      comingSoon:true,\n      addGovTokens:true,\n      iconName:'Adjust',\n      title:'Coming Soon',\n      chartColor:'hsl(211,67%,47%)',\n      icon:'images/strategies/solr-on.svg',\n      desc:'More strategies are coming soon!',\n      iconInactive:'images/strategies/solr-off.svg',\n      descLong:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.',\n      descShort:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.'\n    }\n    */\n  },\n  stats: {\n    enabled: true, // Enable endpoint\n    availableNetworks:[1,137],\n    rates: {\n      TTL: 300, // 5 minutes\n      endpoint:{\n        1:\"https://api.idle.finance/rates/\",\n        137:\"https://api-polygon.idle.finance/rates/\"\n      }\n    },\n    tvls: {\n      TTL: 120,\n      endpoint:{\n        1:\"https://api.idle.finance/tvls/\",\n        137:\"https://api-polygon.idle.finance/tvls/\"\n      }\n    },\n    aprs: {\n      TTL: 120,\n      endpoint:{\n        1:\"https://api.idle.finance/aprs/\",\n        137:\"https://api-polygon.idle.finance/aprs/\"\n      }\n    },\n    substack: {\n      TTL: 1800,\n      endpoint:{\n        1:\"https://api.idle.finance/substack/\",\n        137:\"https://api-polygon.idle.finance/substack/\"\n      }\n    },\n    scores: {\n      TTL: 300, // 5 minutes\n      endpoint:{\n        1:\"https://api.idle.finance/scores/\"\n      }\n    },\n    config: {\n      headers: env.REACT_APP_IDLE_KEY ? { Authorization: `Bearer ${env.REACT_APP_IDLE_KEY}` } : {}\n    },\n    versions: {\n      /*\n      v2:{\n        label:'Idle V2',\n        startTimestamp:null,\n        additionalProtocols:[],\n        endTimestamp:1589752999,\n        enabledStrategies:['best'],\n        showPerformanceTooltip:false,\n        enabledTokens:['DAI','USDC'],\n      },\n      */\n      v3: {\n        label: \"Idle V3\",\n        additionalProtocols: [],\n        endTimestamp: 1597237542,\n        startTimestamp: 1589801874,\n        showPerformanceTooltip: false,\n        strategiesParams: {\n          risk: {\n            endTimestamp: 1597233922\n          }\n        },\n        enabledStrategies: [\"best\", \"risk\"],\n        enabledTokens: [\"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\"]\n      },\n      v4: {\n        label: \"Idle V4\",\n        endTimestamp: null,\n        startTimestamp: 1597442400, // 1598220000\n        enabledStrategies: [\"best\", \"risk\"],\n        showPerformanceTooltip: true,\n        strategiesParams: {\n          risk: {\n            startTimestamp: 1599183170\n          }\n        },\n        enabledTokens: ['DAI', 'USDC', 'USDT', 'TUSD', 'SUSD', 'WBTC', 'WETH', 'RAI', 'FEI'],\n        additionalProtocols: [\n          {\n            decimals: 16,\n            protocol: \"compound\",\n            name: \"compoundWithCOMP\",\n            enabledTokens: [\n              \"DAI\",\n              \"USDC\",\n              \"USDT\",\n              \"TUSD\",\n              \"SUSD\",\n              \"WBTC\",\n              \"WETH\"\n            ]\n          },\n          {\n            decimals: 18,\n            protocol: \"aavev2\",\n            name: \"aavev2WithStkAAVE\",\n            enabledTokens: [\n              \"DAI\",\n              \"USDC\",\n              \"USDT\",\n              \"TUSD\",\n              \"SUSD\",\n              \"WBTC\",\n              \"WETH\",\n              \"RAI\"\n            ]\n          }\n        ]\n      }\n    },\n    tokens:{\n      DAI:{\n        decimals:18,\n        enabled:true,\n        color:{\n          rgb:[250,184,51],\n          hex:'#F7B24A',\n          hsl:['40', '95%', '59%']\n        },\n        chart:{\n          labelTextColorModifiers:['darker', 2]\n        },\n        startTimestamp:'2020-02-11',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      ETH:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#333',\n          rgb:[51, 51, 51],\n          hsl:['0, 0%, 20%']\n        },\n        address:'0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0'\n      },\n      MATIC:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#8247E5',\n          rgb:[130, 71, 229],\n          hsl:['262, 75%, 59%']\n        },\n        address:'0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0'\n      },\n      USD: {\n        enabled: true,\n        color: {\n          hex: \"#85bb65\",\n          rgb: [133, 187, 101],\n          hsl: [\"98\", \"39%\", \"56%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 2]\n        },\n        address: null,\n        startTimestamp: \"2020-02-04\"\n      },\n      USDC: {\n        decimals: 6,\n        enabled: true,\n        color: {\n          hex: \"#2875C8\",\n          rgb: [40, 117, 200],\n          hsl: [\"211\", \"67%\", \"47%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 2]\n        },\n        startTimestamp: \"2020-02-04\",\n        address: \"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      USDT: {\n        decimals: 6,\n        enabled: true,\n        color: {\n          hex: \"#22a079\",\n          rgb: [34, 160, 121],\n          hsl: [\"161\", \"65%\", \"38%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        startTimestamp: \"2020-02-04\",\n        address: \"0xdac17f958d2ee523a2206206994597c13d831ec7\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      TUSD: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"0340a1\",\n          rgb: [3, 64, 161],\n          hsl: [\"217\", \"96%\", \"32%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 5]\n        },\n        startTimestamp: \"2020-06-22\",\n        address: \"0x0000000000085d4780b73119b644ae5ecd22b376\"\n      },\n      SUSD: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#1e1a31\",\n          rgb: [30, 26, 49],\n          hsl: [\"250\", \"31%\", \"15%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 5]\n        },\n        startTimestamp: \"2020-06-22\",\n        address: \"0x57ab1ec28d129707052df4df418d58a2d46d5f51\"\n      },\n      WBTC: {\n        decimals: 8,\n        enabled: true,\n        color: {\n          hex: \"#eb9444\",\n          rgb: [235, 148, 68],\n          hsl: [\"29\", \"81%\", \"59%\"]\n        },\n        startTimestamp: \"2020-06-15\",\n        conversionRateField: \"wbtcDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x2260fac5e5542a773aa44fbcfedf7c193bc2c599\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      WETH: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#ee1f79\",\n          rgb: [238, 31, 121],\n          hsl: [\"334\", \"86%\", \"53%\"]\n        },\n        startTimestamp: \"2021-02-16\",\n        conversionRateField: \"wethDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      COMP: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#00d395\",\n          rgb: [0, 211, 149],\n          hsl: [\"162\", \"100%\", \"41%\"]\n        },\n        startTimestamp: \"2020-06-15\",\n        conversionRateField: \"compDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0xc00e94cb662c3520282e6f5717214004a7f26888\"\n      },\n      stkAAVE: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#B6509E\",\n          rgb: [182, 80, 158],\n          hsl: [\"314\", \"41%\", \"51%\"]\n        },\n        startTimestamp: \"2021-04-30\",\n        conversionRateField: \"aaveDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x4da27a545c0c5b758a6ba100e3a049001de870f5\"\n      },\n      IDLE: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#0d55bb\",\n          rgb: [13, 85, 187],\n          hsl: [\"215\", \"87%\", \"39%\"]\n        },\n        startTimestamp: \"2020-11-10\",\n        conversionRateField: \"idleDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\"\n      },\n      RAI: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#378879\",\n          rgb: [55, 136, 121],\n          hsl: [\"169\", \"42%\", \"37%\"]\n        },\n        disabledCharts: [\"score\"],\n        startTimestamp: \"2021-05-25\",\n        icon: \"images/tokens/RAI.png\",\n        conversionRateField: \"raiDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x03ab458634910aad20ef5f1c8ee96f1d6ac54919\"\n      },\n      FEI: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#229b6e',\n          rgb: [34, 155, 110],\n          hsl: ['158', '64%', '37%']\n        },\n        disabledCharts: ['score'],\n        startTimestamp: '2021-09-24',\n        conversionRateField: 'feiDAIPrice',\n        chart: {\n          labelTextColorModifiers: ['darker', 4]\n        },\n        address: '0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n      },\n      WMATIC:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#2891f8',\n          rgb:[40, 145, 248],\n          hsl:['210', '94%', '56%']\n        },\n        startTimestamp:'2021-05-25',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0',\n      },\n      'idleDAI+idleUSDC+idleUSDT':{\n        decimals:18,\n        enabled:false,\n        name:'Curve.fi',\n        color:{\n          hex:'#ff0000',\n          rgb:[255, 0, 0],\n          hsl:['0', '100%', '50%']\n        },\n        startTimestamp: \"2020-06-15\"\n      }\n    },\n    protocols: {\n      compound: {\n        legend: true,\n        enabled: true,\n        label: \"Compound\",\n        color: {\n          rgb: [0, 209, 146],\n          hsl: [\"162\", \"100%\", \"41%\"]\n        }\n      },\n      aavev2WithStkAAVE: {\n        enabled: true,\n        label: \"Aave V2 + stkAAVE\",\n        startTimestamp: \"2021-05-08 14:30:00\",\n        // tokensProps:{\n        //   WETH:{\n        //     startTimestamp:'2021-05-19 12:20:00',\n        //   }\n        // },\n        color: {\n          hex: \"#B6509E\",\n          rgb: [182, 80, 158],\n          hsl: [\"314\", \"41%\", \"51%\"]\n        },\n        rateField: [\"rate\", \"aaveAdditionalAPR\"]\n      },\n      compoundWithCOMP: {\n        enabled: true,\n        label: \"Compound + COMP\",\n        color: {\n          rgb: [0, 153, 107],\n          hsl: [\"162\", \"100%\", \"30%\"]\n        },\n        rateField: [\"rate\", \"compoundAdditionalAPR\"]\n      },\n      fulcrum: {\n        legend: false,\n        enabled: false,\n        label: \"Fulcrum\",\n        color: {\n          rgb: [2, 138, 192],\n          hsl: [\"197\", \"98%\", \"38%\"]\n        }\n      },\n      dsr: {\n        label: \"DSR\",\n        enabled: false,\n        icon: \"CHAI.png\",\n        color: {\n          rgb: [222, 52, 67],\n          hsl: [\"355\", \"72%\", \"54%\"]\n        }\n      },\n      dydx: {\n        legend: true,\n        label: \"DyDx\",\n        enabled: true,\n        color: {\n          rgb: [87, 87, 90],\n          hsl: [\"240\", \"2%\", \"35%\"]\n        }\n      },\n      iearn: {\n        label: \"Yearn\",\n        enabled: true\n      },\n      aave: {\n        label: \"Aave V1\",\n        legend: false,\n        enabled: false,\n        color: {\n          rgb: [230, 131, 206],\n          hsl: [\"315\", \"66%\", \"71%\"]\n        }\n      },\n      aavev2: {\n        legend: true,\n        enabled: true,\n        icon: \"aave.svg\",\n        label: \"Aave V2\",\n        color: {\n          rgb: [151, 79, 141],\n          hsl: [\"308\", \"31%\", \"45%\"]\n        }\n      },\n      cream: {\n        legend: true,\n        enabled: true,\n        label: \"Cream\",\n        icon: \"cream.svg\",\n        color: {\n          rgb: [105, 226, 220],\n          hsl: [\"177\", \"68%\", \"65%\"]\n        }\n      },\n      fuse: {\n        legend: true,\n        enabled: true,\n        label: \"Fuse\",\n        icon: \"fuse.png\",\n        color: {\n          rgb: [0, 0, 0],\n          hsl: [\"0\", \"0%\", \"0%\"]\n        }\n      },\n      curve: {\n        label: \"\",\n        enabled: true,\n        color: {\n          rgb: [0, 55, 255],\n          hsl: [\"227\", \"100%\", \"50%\"]\n        }\n      },\n      idle: {\n        label: \"Idle\",\n        enabled: true,\n        color: {\n          rgb: [0, 55, 255],\n          hsl: [\"227\", \"100%\", \"50%\"]\n        }\n      }\n    }\n  },\n  contract: {\n    methods: {\n      refreshIdleSpeed:{\n        enabled:true,\n        availableNetworks:[1]\n      },\n      redeem: {\n        skipRebalance: true,\n        metaTransactionsEnabled: false\n      },\n      deposit: {\n        skipMint: true,\n        minAmountForMint: 100000,\n        erc20ForwarderEnabled: true,\n        skipMintCheckboxEnabled: true,\n        metaTransactionsEnabled: false,\n        // Proxy contract for Meta Tx or ERC20 Forwarder\n        erc20ForwarderProxyContract: {\n          forwarder: {\n            enabled: true,\n            abi: erc20Forwarder,\n            name: \"erc20Forwarder\",\n            function: \"emitMessage\",\n            address: \"0xfaadbe5f0a19f0ebf92aeb73534cbc96b96e2bda\" // Main\n            // address:'0xCB3F801C91DEcaaE9b08b1eDb915F9677D8fdB4A' // Kovan\n          },\n          tokens: {\n            DAI: {\n              enabled: true,\n              permitType: \"DAI_Permit\",\n              abi: IdleDepositForwarder,\n              function: \"permitAndDeposit\", // foo\n              name: \"IdleDepositForwarderDAI\",\n              address: \"0xDe3c769cCD1878372864375e9f89956806B86daA\" // Main\n              // address:'0x1E32F1E96B9735E5D31a23e12fe8e6D9845a9072', // Kovan\n            },\n            USDC: {\n              enabled: true,\n              abi: IdleDepositForwarder,\n              permitType: \"EIP2612_Permit\",\n              name: \"IdleDepositForwarderUSDC\",\n              function: \"permitEIP2612AndDeposit\", // 'foo'\n              address: \"0x43bD6a78b37b50E3f52CAcec53F1202dbDe6a761\" // Main\n              // address:'0x8f9048CFAa27b1A1b77c32a0b87D2DcF5D016cb5', // Kovan\n            }\n          }\n        },\n        proxyContract: {\n          enabled: false,\n          abi: IdleProxyMinter,\n          name: \"IdleProxyMinter\",\n          function: \"mintIdleTokensProxy\",\n          address: \"0x7C4414aA6B0c6CB1Bc7e5BFb7433138426AC637a\"\n        }\n      },\n      migrate: {\n        skipRebalance: true,\n        minAmountForRebalance: 10000,\n        minAmountForRebalanceMetaTx: 10000\n      },\n      redeemGovTokens: {\n        enabled: true\n      },\n      redeemSkipGov: {\n        enabled: true,\n        disabledTokens: [\"idleDAISafe\", \"idleUSDCSafe\", \"idleUSDTSafe\"]\n      },\n      rebalance: {\n        enabled: true,\n        abi: IdleRebalancerV3\n      }\n    }\n  },\n  network:{ // Network configurations\n    availableNetworks:{\n      1:{\n        version:'v1',\n        name:'Ethereum',\n        baseToken:'ETH',\n        color:'#4474f1',\n        provider:'infura',\n        network:'mainnet',\n        explorer:'etherscan',\n        chainName:'Ethereum Mainnet',\n      },\n      42:{\n        name:'Kovan',\n        color:'#9064ff',\n        baseToken:'ETH',\n        provider:'infura',\n        explorer:'etherscan',\n        chainName:'Ethereum Testnet Kovan',\n      },\n      3:{\n        name:'Ropsten',\n        color:'#ff4a8d',\n        baseToken:'ETH',\n        provider:'infura',\n        explorer:'etherscan',\n        chainName:'Ethereum Testnet Ropsten',\n      },\n      4:{\n        name:'Rinkeby',\n        color:'#f6c343',\n        baseToken:'ETH',\n        provider:'infura',\n        explorer:'etherscan',\n        chainName:'Ethereum Testnet Rinkeby',\n      },\n      137:{\n        version:'v1',\n        name:'Polygon',\n        color:'#8247E5',\n        network:'mainnet',\n        baseToken:'MATIC',\n        explorer:'polygon',\n        provider:'polygon',\n        chainName:'Matic(Polygon) Mainnet',\n      },\n      5:{\n        name:'Görli',\n        color:'#3099f2',\n        baseToken:'ETH',\n        version:'mumbai',\n        network:'testnet',\n        provider:'infura',\n        explorer:'etherscan',\n        chainName:'Ethereum Testnet Görli',\n      },\n      1337:{\n        name:'Hardhat',\n        baseToken:'ETH',\n        color:'#4474f1',\n        provider:'infura',\n        explorer:'etherscan',\n        chainName:'Ethereum Mainnet',\n      },\n      80001:{\n        name:'Mumbai',\n        color:'#4474f1',\n        version:'mumbai',\n        network:'testnet',\n        baseToken:'MATIC',\n        explorer:'polygon',\n        provider:'polygon',\n        chainName:'Matic Testnet Mumbai',\n      }\n    },\n    isForked: false, // If TRUE the tx confirmation callback is fired on the receipt\n    requiredNetwork: 1, // { 1: Mainnet, 3: Ropsten, 42: Kovan }\n    blocksPerYear: 2371428,\n    secondsPerYear: 31536000,\n    requiredConfirmations: 1,\n    enabledNetworks: [1, 137],\n    firstBlockNumber: 8119247,\n    accountBalanceMinimum: 0, // in ETH for gas fees\n    providers:{\n      infura:{\n        key:env.REACT_APP_INFURA_KEY,\n        rpc:{\n          5: 'https://goerli.infura.io/v3/',\n          42: 'https://kovan.infura.io/v3/',\n          1: 'https://mainnet.infura.io/v3/',\n          1337: 'https://mainnet.infura.io/v3/',\n          137: 'https://mainnet.infura.io/v3/',\n          80001: 'https://goerli.infura.io/v3/'\n        }\n      },\n      polygon:{\n        enabled:true,\n        // key:env.REACT_APP_POLYGON_KEY,\n        key:env.REACT_APP_INFURA_KEY,\n        baseUrl:{\n          137:'https://polygonscan.com',\n          80001:'https://explorer-mumbai.maticvigil.com'\n        },\n        networkPairs:{\n          1:137,\n          137:1,\n          5:80001,\n          80001:5\n        },\n        publicRpc:{\n          137:'https://polygon-rpc.com'\n        },\n        rpc:{\n          // 1:'https://rpc-mainnet.maticvigil.com/v1/',\n          // 5:'https://rpc-mumbai.maticvigil.com/v1/',\n          // 137:'https://rpc-mainnet.maticvigil.com/v1/',\n          // 80001:'https://rpc-mumbai.maticvigil.com/v1/'\n\n          1:'https://polygon-mainnet.infura.io/v3/',\n          5:'https://polygon-mainnet.infura.io/v3/',\n          137:'https://polygon-mainnet.infura.io/v3/',\n          80001:'https://polygon-mainnet.infura.io/v3/'\n\n          // 1:'https://matic-mainnet.chainstacklabs.com/',\n          // 137:'https://matic-mainnet.chainstacklabs.com/',\n          // 5:'https://matic-mumbai.chainstacklabs.com/',\n          // 80001:'https://matic-mumbai.chainstacklabs.com/' \n        }\n      },\n      nexus: {\n        endpoints: {\n          1: \"https://api.nexusmutual.io/v1/\",\n          42: \"https://api.staging.nexusmutual.io/v1/\"\n        }\n      },\n      ens:{\n        enabled:true,\n        supportedNetworks:[1]\n      },\n      covalent:{\n        enabled:true,\n        key:env.REACT_APP_COVALENT_KEY,\n        endpoints:{\n          137:'https://api.covalenthq.com/v1/137/',\n          80001:'https://api.covalenthq.com/v1/80001/'\n        }\n      },\n      etherscan:{\n        enabled:true, // False for empty txs list (try new wallet)\n        keys: [\n          env.REACT_APP_ETHERSCAN_KEY,\n          env.REACT_APP_ETHERSCAN_KEY2,\n          env.REACT_APP_ETHERSCAN_KEY3,\n          env.REACT_APP_ETHERSCAN_KEY4\n        ],\n        endpoints:{\n          1: 'https://api.etherscan.io/api',\n          1337: 'https://api.etherscan.io/api',\n          5: 'https://api-goerli.etherscan.io/api',\n          42: 'https://api-kovan.etherscan.io/api'\n        },\n        baseUrl:{\n          1: 'https://etherscan.io',\n          1337: 'https://etherscan.io',\n          5: 'https://goerli.etherscan.io',\n          42: 'https://kovan.etherscan.io',\n        }\n      },\n      snapshot: {\n        whitelist: [\n          \"0x9993ADB62085AcB05Fc493f7A1D10C11227A78fa\",\n          \"0xf12ce5807e3d3128B876aa1Cec0632D63547E22E\"\n        ],\n        endpoints: {\n          proposals: \"https://hub.snapshot.page/api/idlefinance.eth/proposals\"\n        },\n        urls: {\n          proposals: \"https://signal.idle.finance/#/idlefinance.eth/proposal/\"\n        }\n      },\n      biconomy: {\n        enabled: true,\n        enableLogin: false,\n        supportedNetworks: [1, 42],\n        disabledWallets: [\"authereum\"],\n        endpoints: {\n          limits: \"https://api.biconomy.io/api/v1/dapp/checkLimits\"\n        },\n        params: {\n          debug: false,\n          apiKey: env.REACT_APP_BICONOMY_KEY, // Mainnet\n          dappId: env.REACT_APP_BICONOMY_APPID,\n          apiId: \"36572ec9-ae5c-4c4a-9530-f3ae7c7ac829\"\n          // apiKey: env.REACT_APP_BICONOMY_KEY_KOVAN, // Kovan\n        }\n      },\n      simpleID: {\n        enabled: false,\n        supportedNetworks: [1],\n        getNetwork: (networkId, availableNetworks) => {\n          let networkName = null;\n          switch (networkId) {\n            case 1:\n              networkName = \"mainnet\";\n              break;\n            default:\n              networkName = availableNetworks[networkId]\n                ? availableNetworks[networkId].toLowerCase()\n                : \"mainnet\";\n              break;\n          }\n          return networkName;\n        },\n        params: {\n          appOrigin: window.location.origin,\n          appName: \"Idle\",\n          appId: \"eb4d1754-a76e-4c58-8422-54b5ca2395e7\",\n          renderNotifications: false,\n          network: \"mainnet\"\n        }\n      }\n    }\n  },\n  events: {\n    DAI: {\n      fields: {\n        to: \"dst\",\n        from: \"src\",\n        value: \"wad\"\n      }\n    },\n    FEI: {\n      fields: {\n        to: \"dst\",\n        from: \"src\",\n        value: \"wad\"\n      }\n    }\n  },\n  notifications: [\n    {\n      enabled: false,\n      end: 1612282726374,\n      start: 1611677841027,\n      date: \"Jan 26, 2021 16:18 UTC\",\n      title: \"Cover Protocol Available\",\n      hash: \"/dashboard/tools/cover-protocol\",\n      image: \"/images/protocols/cover-logo.svg\",\n      text: \"Protect your portfolio with Cover Protocol\"\n    }\n  ],\n  tools: {\n    stake: {\n      enabled: true,\n      icon: \"Layers\",\n      label: \"Staking\",\n      route: \"staking\",\n      subComponent: Staking,\n      availableNetworks:[1],\n      desc: \"Stake your IDLE / Sushi Swap LP tokens and earn $IDLE rewards\",\n      props: {\n        availableTokens: {\n          IDLE: {\n            component: IdleStaking,\n            contract: {\n              abi: stkIDLE,\n              decimals: 18,\n              name: \"stkIDLE\",\n              fromBlock: 12561464,\n              rewardToken: \"IDLE\",\n              address: \"0xaac13a116ea7016689993193fce4badc8038136f\" // Mainnet\n            },\n            feeDistributor: {\n              fromBlock: 12649361,\n              abi: StakingFeeDistributor,\n              name: \"StakingFeeDistributor\",\n              address: \"0xbabb82456c013fd7e3f25857e0729de8207f80e2\" // Mainnet\n            },\n            abi: IDLE,\n            name: \"IDLE\",\n            token: \"IDLE\",\n            decimals: 18,\n            enabled: true,\n            label: \"IDLE Token\",\n            icon: \"images/tokens/IDLE.svg\",\n            address: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\", // Mainnet\n            poolLink:\n              \"https://etherscan.com/address/0x875773784Af8135eA0ef43b5a374AaD105c5D39e\"\n          },\n          SLP: {\n            component: LpStaking,\n            contract: {\n              decimals: 24,\n              name: \"LpStaking\",\n              maxMultiplier: 3,\n              abi: LpStakingAbi,\n              maxBonusDays: 120,\n              rewardToken: \"IDLE\",\n              address: \"0xcc0b9f7ed0e6bc7c2e69dbd247e8420f29aeb48d\" // Mainnet\n            },\n            name: \"SLP\",\n            token: \"SLP\",\n            decimals: 18,\n            enabled: true,\n            abi: SushiLiquidityPool,\n            label: \"SushiSwap IDLE/ETH LP Token\",\n            icon: \"images/protocols/sushiswap.png\",\n            address: \"0xa7f11e026a0af768d285360a855f2bded3047530\", // Mainnet\n            poolLink:\n              \"https://analytics.sushi.com/pairs/0xa7f11e026a0af768d285360a855f2bded3047530\"\n          }\n        }\n      }\n    },\n    stakePolygon: {\n      enabled: true,\n      icon: \"Layers\",\n      label: \"Staking\",\n      subComponent: Staking,\n      availableNetworks:[137],\n      route: \"staking-polygon\",\n      desc: \"Stake your Sushi Swap LP tokens and earn $IDLE rewards\",\n      props: {\n        availableTokens: {\n          SLP: {\n            component: LpStaking,\n            contract: {\n              decimals: 24,\n              name: \"LpStaking\",\n              maxMultiplier: 3,\n              abi: LpStakingAbi,\n              maxBonusDays: 60,\n              rewardToken: \"IDLE\",\n              address: \"0x59CDF902b6A964CD5dB04d28f12b774bFB876Be9\" // Polygon\n            },\n            name: \"SLP\",\n            token: \"SLP\",\n            decimals: 18,\n            enabled: true,\n            abi: SushiLiquidityPool,\n            label: \"SushiSwap IDLE/WETH LP Token\",\n            icon: \"images/protocols/sushiswap.png\",\n            address: \"0x5518a3af961eee8771657050c5cb23d2b3e2f6ee\", // Polygon\n            poolLink: \"https://analytics-polygon.sushi.com/pairs/0x5518a3af961eee8771657050c5cb23d2b3e2f6ee\"\n          }\n        }\n      }\n    },\n    nexusMutual: {\n      enabled: true,\n      icon: \"Security\",\n      route: \"coverage\",\n      label: \"Coverage\",\n      availableNetworks:[1],\n      desc: \"Buy Nexus Mutual coverage without KYC for your deposits\",\n      subComponent: NexusMutual,\n      props: {\n        availableTokens: {\n          idleDAIYield: {\n            decimals: 18,\n            abi: IdleTokenV4,\n            name: \"idleDAIYield\",\n            token: \"idleDAIYield\", // Mainnet\n            // token:'idleDAIYieldMock', // Kovan\n            address: \"0x0000000000000000000000000000000000000011\",\n            realAddress: \"0x3fe7940616e5bc47b0775a0dccf6237893353bb4\", // Mainnet\n            // realAddress:'0xbd0b0205408509544815d377214d8f2cbe3e5381', // Kovan\n            underlying: {\n              DAI: {\n                abi: ERC20,\n                name: \"DAI\", // Mainnet\n                token: \"DAI\",\n                decimals: 18,\n                // name:'DAIMock', // Kovan\n                address: \"0x6b175474e89094c44da98b954eedeac495271d0f\" // Mainnet\n                // address:'0x5C422252C6a47CdacF667521566Bf7bD5b0d769B' // Kovan\n              }\n            }\n          },\n          idleUSDTYield: {\n            decimals: 18,\n            abi: IdleTokenV4,\n            name: \"idleUSDTYield\",\n            token: \"idleUSDTYield\", // Mainnet\n            // token:'idleUSDTYieldMock', // Kovan\n            address: \"0x0000000000000000000000000000000000000012\",\n            realAddress: \"0xF34842d05A1c888Ca02769A633DF37177415C2f8\",\n            underlying: {\n              DAI: {\n                abi: ERC20,\n                name: \"DAI\", // Mainnet\n                token: \"DAI\",\n                decimals: 18,\n                // name:'DAIMock', // Kovan\n                address: \"0x6b175474e89094c44da98b954eedeac495271d0f\" // Mainnet\n                // address:'0x5C422252C6a47CdacF667521566Bf7bD5b0d769B' // Kovan\n              }\n            }\n          }\n        }\n      },\n      directProps: {\n        // startBlock:25858186, // Kovan\n        startBlock: 12783137, // Mainnet\n        // Yield token covers have a 14 days grace period\n        yieldTokenCoverGracePeriod: 14 * 24 * 60 * 60 * 1000,\n        contractInfo: {\n          abi: NexusMutualDistributor,\n          name: \"NexusMutualDistributor\",\n          // address:'0xe2d569dc064b3b91f514e775c6026e04d2c887a9' // Kovan\n          address: \"0xf2b36f823eae36e53a5408d8bd452748b24fbf76\" // Mainnet\n        },\n        incidentsInfo: {\n          abi: NexusMutualIncidents,\n          name: \"NexusMutualIncidents\",\n          // address:'0x322f9a880189E3FFFf59b74644e13e5763C5AdB9' // Kovan\n          address: \"0x8ceba69a8e96a4ce71aa65859dbdb180b489a719\" // Mainnet\n        }\n      }\n    },\n    b2bVesting: {\n      enabled: true,\n      visible: true,\n      icon: \"CloudUpload\",\n      label: \"B2B Vesting\",\n      availableNetworks:[1],\n      route: \"b2b-vesting-contract\",\n      subComponent: DeployB2BVesting,\n      desc:'Deploy/Deposit/Claim for B2B Vesting Contracts<br /><small style=\"color:#ff9900\">(only for partners that joined the B2B Affiliate program)</small>',\n      props: {\n        contracts: {\n          vesterImplementation: {\n            abi: B2BVester,\n            address: \"0x3024656ae91d7bf724f613c314bc56030ba2344c\"\n          }\n        }\n      }\n    },\n    polygonBridge:{\n      enabled:true,\n      route:'polygon-bridge',\n      availableNetworks:[1,137],\n      subComponent:PolygonBridge,\n      image:'images/protocols/polygon.svg',\n      label:'Ethereum ⇔ Polygon Bridge',\n      desc:'Transfer your tokens from Ethereum to Polygon and vice versa with Plasma and PoS Bridge.',\n      props:{\n        contracts:{\n          ERC20Predicate:{\n            abi:ERC20Predicate,\n            name:'ERC20Predicate',\n            // address:'0xdD6596F2029e6233DEFfaCa316e6A95217d4Dc34', // Goerli\n            address:'0x40ec5B33f54e0E8A33A975908C5BA1c14e5BbbDf' // Mainnet\n          },\n          EtherPredicate:{\n            abi:EtherPredicate,\n            name:'EtherPredicate',\n            // address:'0xdD6596F2029e6233DEFfaCa316e6A95217d4Dc34', // Goerli\n            address:'0x8484Ef722627bf18ca5Ae6BcF031c23E6e922B30' // Mainnet\n          },\n          DepositManager:{\n            abi:DepositManager,\n            name:'DepositManager',\n            address:'0x401f6c983ea34274ec46f84d70b31c151321188b'\n          },\n          RootChainManager:{\n            name:'RootChainManager',\n            address:'0xA0c68C638235ee32657e8f720a23ceC1bFc77C77' // Mainnet\n          },\n          StateSender:{\n            name:'StateSender',\n            address:'0x28e4F3a7f651294B9564800b2D01f35189A5bFbE'\n          }\n        },\n        availableTokens:{\n          /*\n          DERC20:{\n            decimals:18,\n            enabled:true,\n            name:'DERC20',\n            token:'DERC20',\n            rootToken:{\n              name:'DERC20',\n              abi:DummyERC20,\n              address:'0x655F2166b0709cd575202630952D71E2bB0d61Af' // Goerli\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'DummyERC20',\n              address:'0xfe4F5145f6e09952a5ba9e956ED0C25e3Fa4c7F1' // Mumbai\n            }\n          },\n          */\n          MATIC:{\n            name:'MATIC',\n            token:'MATIC',\n            decimals:18,\n            enabled:true,\n            sendValue:true,\n            bridgeType:'plasma',\n            rootToken:{\n              abi:ERC20,\n              name:'MATIC',\n              address:'0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0', // Mainnet\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'childMATIC',\n              address:'0x0000000000000000000000000000000000001010' // Matic\n            }\n          },\n          WETH:{\n            name:'WETH',\n            token:'ETH',\n            decimals:18,\n            enabled:true,\n            bridgeType:'pos',\n            childToken:{\n              abi:ChildERC20,\n              name:'maticWETH',\n              address:'0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619' // Matic\n            }\n          },\n          /*\n          WETH:{\n            name:'WETH',\n            token:'WETH',\n            decimals:18,\n            enabled:true,\n            sendValue:false,\n            bridgeType:'pos',\n            rootToken:{\n              abi:ERC20,\n              name:'WETH',\n              address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2', // Mainnet\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'childWETH',\n              address:'0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619' // Matic\n            }\n          },\n          */\n          DAI:{\n            name:'DAI',\n            token:'DAI',\n            decimals:18,\n            enabled:true,\n            sendValue:false,\n            bridgeType:'pos',\n            rootToken:{\n              abi:DAI,\n              name:'DAI',\n              // address:'0x6311344B50D2077BF9804d376EA4C2cEDcB75C1f', // Goerli\n              address:'0x6b175474e89094c44da98b954eedeac495271d0f', // Mainnet\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'childDAI',\n              // address:'0x001B3B4d0F3714Ca98ba10F6042DaEbF0B1B7b6F', // Mumbai\n              address:'0x8f3Cf7ad23Cd3CaDbD9735AFf958023239c6A063' // Matic\n            }\n          },\n          USDC:{\n            decimals:6,\n            name:'USDC',\n            token:'USDC',\n            enabled:true,\n            bridgeType:'pos',\n            rootToken:{\n              abi:USDC,\n              name:'USDC',\n              // address:'0x98339D8C260052B7ad81c28c16C0b98420f2B46a' // Goerli\n              address:'0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48', // Mainnet\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'childUSDC',\n              // address:'0x6D4dd09982853F08d9966aC3cA4Eb5885F16f2b2' // Mubai\n              address:'0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174' // Matic\n            }\n          },\n          IDLE:{\n            decimals:18,\n            name:'IDLE',\n            token:'IDLE',\n            enabled:true,\n            bridgeType:'pos',\n            rootToken:{\n              abi:IDLE,\n              name:'IDLE',\n              address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e', // Mainnet\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'childUSDC',\n              address:'0xc25351811983818c9fe6d8c580531819c8ade90f' // Matic\n            }\n          },\n          /*\n          AAVE:{\n            decimals:18,\n            name:'AAVE',\n            token:'AAVE',\n            enabled:true,\n            bridgeType:'pos',\n            rootToken:{\n              abi:ERC20,\n              name:'AAVE',\n              address:'0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9', // Mainnet\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'childAAVE',\n              address:'0xD6DF932A45C0f255f85145f286eA0b292B21C90B' // Matic\n            }\n          }\n          */\n        }\n      }\n    },\n    ethWrapper:{\n      enabled:true,\n      label:'ETH Wrapper',\n      route:'eth-wrapper',\n      availableNetworks:[1,42],\n      subComponent:TokenWrapper,\n      image:'images/tokens/WETH.svg',\n      desc:'Wrap your ETH and get WETH. Unwrap your WETH and get back ETH.',\n      props:{\n        startContract:{\n          name:'ETH',\n          token:'ETH',\n          decimals:18,\n          wrapMethod:'deposit',\n        },\n        destContract:{\n          abi:WETH,\n          name:'WETH',\n          decimals:18,\n          token:'WETH',\n          unwrapMethod:'withdraw',\n          address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2'\n        },\n      }\n    },\n    coverProtocol:{\n      enabled:false,\n      availableNetworks:[1],\n      label:'Cover Protocol',\n      route:'cover-protocol',\n      subComponent:CoverProtocol,\n      image:'images/protocols/cover-logo.svg',\n      desc:'Get your Idle Portfolio covered against Smart Contract risk',\n      fileClaimUrl:'https://app.coverprotocol.com/app/claims/new?protocol=IDLE',\n      props:{\n        contract:{\n          decimals:18,\n          abi:CoverMint,\n          name:'CoverMint',\n          address:'0x46f2f34742c1d9b9b220aabf0ff26bf59ec9f8a0'\n        },\n        coverages:[\n          {\n            collateral: \"DAI\",\n            expirationTimestamp: 1714470400,\n            tokens: {\n              Claim: {\n                abi: CovToken,\n                name: \"COVER_IDLE_2021_02_28_DAI_0_CLAIM\",\n                address: \"0xa7dac6774e5e40f56a0bf06af6cf9b1f3d037bcc\",\n                balancerPool: {\n                  decimals: 18,\n                  abi: BalancerPool,\n                  name: \"BAL_COVER_IDLE_2021_02_28_DAI_0_CLAIM\",\n                  address: \"0xeb2b9959c7943eb3c0bdb69ede25247bab4d1c6c\"\n                }\n              },\n              NoClaim: {\n                abi: CovToken,\n                name: \"COVER_IDLE_2021_02_28_DAI_0_NOCLAIM\",\n                address: \"0x53df0bfa014b7522299c129c5a7b318f02adb469\",\n                balancerPool: {\n                  decimals: 18,\n                  abi: BalancerPool,\n                  name: \"BAL_COVER_IDLE_2021_02_28_DAI_0_NOCLAIM\",\n                  address: \"0xce0e9e7a1163badb7ee79cfe96b5148e178cab73\"\n                }\n              }\n            }\n          }\n        ]\n      }\n    },\n    batchDeposit:{\n      enabled: true,\n      icon: \"Storage\",\n      claimEnabled: true,\n      depositEnabled: true,\n      availableNetworks:[1],\n      route: \"batch-deposit\",\n      label: \"Batch Deposit\",\n      subComponent: BatchDeposit,\n      desc:\"Deposit your tokens in the batch and wait until its execution to claim your Idle Tokens V4\",\n      props: {\n        availableTokens: {\n          idleDAIYield: {\n            decimals: 18,\n            strategy: \"best\",\n            baseToken: \"DAI\",\n            minPoolSize: 20000,\n            migrationContract: {\n              abi: IdleBatchedMint,\n              name: \"IdleBatchedMintDAI\",\n              address: \"0x633fb4d38B24dC890b11Db2AE2B248D13F996A79\", // Main\n              // address:'0x1B7bA0361A15CCF62521cF7d2Cbb2Ba90b1521a7', // Kovan\n              functions: [\n                {\n                  name: \"deposit\",\n                  usePermit: true,\n                  label: \"Deposit\",\n                  permitName: \"permitAndDeposit\"\n                }\n              ]\n            }\n          },\n          idleUSDCYield: {\n            decimals: 6,\n            strategy: \"best\",\n            baseToken: \"USDC\",\n            minPoolSize: 20000,\n            migrationContract: {\n              abi: IdleBatchedMint,\n              name: \"IdleBatchedMintUSDC\",\n              address: \"0x562C4fd96F0652F5Fcfa96b0a33088B5a6eAeE9B\", // Main\n              // address:'0x3F35eB839f91b614195a47A593dB46b14cd7EaF8', // Kovan\n              functions: [\n                {\n                  name: \"deposit\",\n                  label: \"Deposit\",\n                  usePermit: true,\n                  permitName: \"permitEIP2612AndDepositUnlimited\"\n                }\n              ]\n            }\n          }\n        }\n      }\n    },\n    batchMigration: {\n      enabled: true,\n      claimEnabled: true,\n      icon: \"FileDownload\",\n      depositEnabled:false,\n      availableNetworks:[1],\n      route: \"batch-migration\",\n      label: \"Batch Migration\",\n      subComponent: BatchMigration,\n      desc:\"Deposit your Idle Tokens V3 into a batch and wait until its conversion to the Idle Token V4\",\n      props: {\n        availableTokens: {\n          idleDAIYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"DAI\",\n            name: \"idleDAIYieldV3\",\n            token: \"idleDAIYieldV3\",\n            address: \"0x78751b12da02728f467a44eac40f5cbc16bd7934\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterDAI\",\n              address: \"0xe0BfD08dA4DAf8f8BA11d1c3802009E75f963497\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDCYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"USDC\",\n            name: \"idleUSDCYieldV3\",\n            token: \"idleUSDCYieldV3\",\n            address: \"0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDC\",\n              address: \"0x86c8b56d124c2a8e7ea8a9e6a7f8ed99dde5cca8\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDTYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"USDT\",\n            name: \"idleUSDTYieldV3\",\n            token: \"idleUSDTYieldV3\",\n            address: \"0x63D27B3DA94A9E871222CB0A32232674B02D2f2D\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDT\",\n              address: \"0xee5c50c7c49dec47dde2f9b0233b9e14a8f00cf2\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleSUSDYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"SUSD\",\n            name: \"idleSUSDYieldV3\",\n            token: \"idleSUSDYieldV3\",\n            address: \"0xe79e177d2a5c7085027d7c64c8f271c81430fc9b\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterSUSD\",\n              address: \"0xE2eE519399a49f1A2004a25DA61e82867A69b9b1\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleTUSDYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"TUSD\",\n            name: \"idleTUSDYieldV3\",\n            token: \"idleTUSDYieldV3\",\n            address: \"0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterTUSD\",\n              address: \"0x174a273f0ea28e55b6dd13259aa43d262b863a86\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleWBTCYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"WBTC\",\n            name: \"idleWBTCYieldV3\",\n            token: \"idleWBTCYieldV3\",\n            address: \"0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterWBTC\",\n              address: \"0xbfDC7d97559173B52EF2A2f1bC9BeCf97B0D401D\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleDAISafe: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"risk\",\n            baseToken: \"DAI\",\n            name: \"idleDAISafeV3\",\n            token: \"idleDAISafeV3\",\n            address: \"0x1846bdfDB6A0f5c473dEc610144513bd071999fB\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterDAISafe\",\n              address: \"0x08db226d63cE724A6091Ba82D28dFc76ceCa23d8\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDCSafe: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"risk\",\n            baseToken: \"USDC\",\n            name: \"idleUSDCSafeV3\",\n            token: \"idleUSDCSafeV3\",\n            address: \"0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDCSafe\",\n              address: \"0xA6C89A31D59f9C68D9Cba28d690C5E52058fb472\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDTSafe: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"risk\",\n            baseToken: \"USDT\",\n            name: \"idleUSDTSafeV3\",\n            token: \"idleUSDTSafeV3\",\n            address: \"0x42740698959761baf1b06baa51efbd88cb1d862b\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDTSafe\",\n              address: \"0xd47B96Fb33b79a4Dd81a2bfa676eBB669166f619\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          }\n        }\n      }\n    },\n    tokenMigration: {\n      enabled: true,\n      icon: \"SwapHoriz\",\n      route: \"convert\",\n      availableNetworks:[1],\n      label: \"Token Migration\",\n      desc:\"Easily convert your Compound, Fulcrum, Aave and iEarn tokens into Idle\",\n      subComponent: TokenMigration,\n      props: {\n        migrationContract: {\n          name: \"IdleConverterV4\",\n          abi: IdleConverterPersonalSignV4,\n          address: \"0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743\",\n          oldAddresses: [],\n          functions: [\n            {\n              label: \"Migrate\",\n              name: \"migrateFromToIdle\"\n            }\n          ]\n        },\n        availableStrategies: [\"best\", \"risk\"],\n        availableTokens: {\n          idleDAIv2: {\n            decimals: 18,\n            enabled: true,\n            protocol: \"idle\",\n            baseToken: \"DAI\",\n            abi: IdleTokenV2,\n            token: \"idleDAIOld\",\n            icon: \"images/tokens/idleDAI.svg\",\n            migrateFunction: \"migrateFromToIdle\",\n            address: \"0x10eC0D497824e342bCB0EDcE00959142aAa766dD\"\n          },\n          cDAI: {\n            decimals: 8,\n            enabled: true,\n            token: \"cDAI\",\n            baseToken: \"DAI\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643\"\n          },\n          iDAI: {\n            decimals: 18,\n            enabled: false,\n            token: \"iDAI\",\n            baseToken: \"DAI\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0x493c57c4763932315a328269e1adad09653b9081\"\n          },\n          aDAI: {\n            decimals: 18,\n            enabled: true,\n            token: \"aDAI\",\n            protocol: \"aave\",\n            baseToken: \"DAI\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d\"\n          },\n          yDAIv3: {\n            decimals: 18,\n            enabled: true,\n            token: \"yDAIv3\",\n            abi: yDAIv3.abi,\n            baseToken: \"DAI\",\n            protocol: \"iearn\",\n            icon: \"images/tokens/yDAI.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xC2cB1040220768554cf699b0d863A3cd4324ce32\"\n          },\n          yDAIv2: {\n            decimals: 18,\n            enabled: true,\n            token: \"yDAIv2\",\n            baseToken: \"DAI\",\n            abi: yDAIv3.abi,\n            protocol: \"iearn\",\n            icon: \"images/tokens/yDAI.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x16de59092dAE5CcF4A1E6439D611fd0653f0Bd01\"\n          },\n          idleUSDCv2: {\n            decimals: 18,\n            enabled: true,\n            protocol: \"idle\",\n            abi: IdleTokenV2,\n            baseToken: \"USDC\",\n            token: \"idleUSDCOld\",\n            icon: \"images/tokens/idleUSDC.svg\",\n            migrateFunction: \"migrateFromToIdle\",\n            address: \"0xeB66ACc3d011056B00ea521F8203580C2E5d3991\"\n          },\n          cUSDC: {\n            decimals: 8,\n            enabled: true,\n            token: \"cUSDC\",\n            baseToken: \"USDC\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0x39aa39c021dfbae8fac545936693ac917d5e7563\"\n          },\n          iUSDC: {\n            decimals: 6,\n            enabled: false,\n            token: \"iUSDC\",\n            baseToken: \"USDC\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0xf013406a0b1d544238083df0b93ad0d2cbe0f65f\"\n          },\n          aUSDC: {\n            decimals: 6,\n            enabled: true,\n            token: \"aUSDC\",\n            protocol: \"aave\",\n            baseToken: \"USDC\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x9bA00D6856a4eDF4665BcA2C2309936572473B7E\"\n          },\n          yUSDCv3: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDCv3\",\n            protocol: \"iearn\",\n            abi: yUSDCv3.abi,\n            baseToken: \"USDC\",\n            icon: \"images/tokens/yUSDC.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x26EA744E5B887E5205727f55dFBE8685e3b21951\"\n          },\n          yUSDCv2: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDCv2\",\n            protocol: \"iearn\",\n            abi: yUSDCv3.abi,\n            baseToken: \"USDC\",\n            icon: \"images/tokens/yUSDC.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xd6aD7a6750A7593E092a9B218d66C0A814a3436e\"\n          },\n          cUSDT: {\n            decimals: 8,\n            enabled: true,\n            token: \"cUSDT\",\n            baseToken: \"USDT\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9\"\n          },\n          iUSDT: {\n            decimals: 6,\n            enabled: false,\n            token: \"iUSDT\",\n            baseToken: \"USDT\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0x8326645f3aa6de6420102fdb7da9e3a91855045b\"\n          },\n          aUSDT: {\n            decimals: 6,\n            enabled: true,\n            token: \"aUSDT\",\n            protocol: \"aave\",\n            baseToken: \"USDT\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x71fc860F7D3A592A4a98740e39dB31d25db65ae8\"\n          },\n          yUSDTv3: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDTv3\",\n            abi: yUSDTv3.abi,\n            protocol: \"iearn\",\n            baseToken: \"USDT\",\n            icon: \"images/tokens/yUSDT.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xE6354ed5bC4b393a5Aad09f21c46E101e692d447\"\n          },\n          yUSDTv2: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDTv2\",\n            abi: yUSDTv3.abi,\n            protocol: \"iearn\",\n            baseToken: \"USDT\",\n            icon: \"images/tokens/yUSDT.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x83f798e925BcD4017Eb265844FDDAbb448f1707D\"\n          },\n          idleSUSDv2: {\n            decimals: 18,\n            enabled: true,\n            abi: IdleTokenV2,\n            protocol: \"idle\",\n            baseToken: \"SUSD\",\n            token: \"idleSUSDYieldOld\",\n            availableStrategies: [\"best\"],\n            migrateFunction: \"migrateFromToIdle\",\n            icon: \"images/tokens/idleSUSDYield.svg\",\n            address: \"0xb39ca0261a1b2986a6a9Fe38d344B56374963dE5\"\n          },\n          aSUSD: {\n            decimals: 6,\n            enabled: true,\n            token: \"aSUSD\",\n            protocol: \"aave\",\n            baseToken: \"SUSD\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x625aE63000f46200499120B906716420bd059240\"\n          },\n          ySUSDv3: {\n            decimals: 18,\n            enabled: true,\n            token: \"ySUSDv3\",\n            abi: ySUSDv3,\n            baseToken: \"SUSD\",\n            protocol: \"iearn\",\n            availableStrategies: [\"best\"],\n            icon: \"images/tokens/ySUSDv3.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xf61718057901f84c4eec4339ef8f0d86d2b45600\"\n          },\n          idleTUSDv2: {\n            decimals: 18,\n            enabled: true,\n            abi: IdleTokenV2,\n            protocol: \"idle\",\n            baseToken: \"TUSD\",\n            token: \"idleTUSDYieldOld\",\n            availableStrategies: [\"best\"],\n            migrateFunction: \"migrateFromToIdle\",\n            icon: \"images/tokens/idleTUSDYield.svg\",\n            address: \"0x7DB7A4a50b26602E56536189Aa94678C80F8E5b6\"\n          },\n          aTUSD: {\n            decimals: 6,\n            enabled: true,\n            token: \"aTUSD\",\n            protocol: \"aave\",\n            baseToken: \"TUSD\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x4DA9b813057D04BAef4e5800E36083717b4a0341\"\n          },\n          yTUSDv3: {\n            decimals: 18,\n            enabled: true,\n            abi: yTUSDv3,\n            token: \"yTUSDv3\",\n            baseToken: \"TUSD\",\n            protocol: \"iearn\",\n            icon: \"images/tokens/yTUSDv3.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x73a052500105205d34daf004eab301916da8190f\"\n          },\n          cWBTC: {\n            decimals: 8,\n            enabled: true,\n            token: \"cWBTC\",\n            baseToken: \"WBTC\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0xc11b1268c1a384e55c48c2391d8d480264a3a7f4\"\n          },\n          iWBTC: {\n            decimals: 8,\n            enabled: false,\n            token: \"iWBTC\",\n            baseToken: \"WBTC\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0xba9262578efef8b3aff7f60cd629d6cc8859c8b5\"\n          },\n          aWBTC: {\n            decimals: 8,\n            enabled: true,\n            token: \"aWBTC\",\n            protocol: \"aave\",\n            baseToken: \"WBTC\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0xfc4b8ed459e00e5400be803a9bb3954234fd50e3\"\n          }\n        }\n      }\n    },\n    addFunds:{\n      enabled:true,\n      route:'add-funds',\n      label:'Add Funds',\n      availableNetworks:[1],\n      icon:'AddCircleOutline',\n      desc:'Buy tokens with your Bank account, Credit card or Ethereum Wallet',\n      subComponent:BuyModal,\n      directProps:{\n        showInline:true,\n        showAllTokens:true\n      }\n    },\n    tokenSwap: {\n      enabled: true,\n      icon: \"Sync\",\n      route: \"token-swap\",\n      label: \"Token Swap\",\n      availableNetworks:[1],\n      desc: \"Easily swap your tokens using Kyber Swap widget\",\n      subComponent: TokenSwap,\n      props: {\n        availableTokens: {\n          ETH: { token: \"ETH\" },\n          DAI: { token: \"DAI\" },\n          SUSD: { token: \"SUSD\" },\n          TUSD: { token: \"TUSD\" },\n          USDC: { token: \"USDC\" },\n          USDS: { token: \"USDS\" },\n          USDT: { token: \"USDT\" },\n          WBTC: { token: \"WBTC\" },\n          WETH: { token: \"WETH\" },\n          BUSD: { token: \"BUSD\" },\n          EURS: { token: \"EURS\" },\n          \"2KEY\": { token: \"2KEY\" },\n          ABT: { token: \"ABT\" },\n          ABYSS: { token: \"ABYSS\" },\n          AMPL: { token: \"AMPL\" },\n          ANT: { token: \"ANT\" },\n          BAM: { token: \"BAM\" },\n          BAND: { token: \"BAND\" },\n          BAT: { token: \"BAT\" },\n          BLZ: { token: \"BLZ\" },\n          BNT: { token: \"BNT\" },\n          BQX: { token: \"BQX\" },\n          BTU: { token: \"BTU\" },\n          CDT: { token: \"CDT\" },\n          CVC: { token: \"CVC\" },\n          DAT: { token: \"DAT\" },\n          DGX: { token: \"DGX\" },\n          EKG: { token: \"EKG\" },\n          ELF: { token: \"ELF\" },\n          ENJ: { token: \"ENJ\" },\n          EQUAD: { token: \"EQUAD\" },\n          FXC: { token: \"FXC\" },\n          GDC: { token: \"GDC\" },\n          GEN: { token: \"GEN\" },\n          GHT: { token: \"GHT\" },\n          GNO: { token: \"GNO\" },\n          IOST: { token: \"IOST\" },\n          KEY: { token: \"KEY\" },\n          KNC: { token: \"KNC\" },\n          LEND: { token: \"LEND\" },\n          LINK: { token: \"LINK\" },\n          LOOM: { token: \"LOOM\" },\n          LRC: { token: \"LRC\" },\n          MANA: { token: \"MANA\" },\n          MCO: { token: \"MCO\" },\n          MET: { token: \"MET\" },\n          MFG: { token: \"MFG\" },\n          MKR: { token: \"MKR\" },\n          MLN: { token: \"MLN\" },\n          MTL: { token: \"MTL\" },\n          MYB: { token: \"MYB\" },\n          NEXXO: { token: \"NEXXO\" },\n          NPXS: { token: \"NPXS\" },\n          OGN: { token: \"OGN\" },\n          OMG: { token: \"OMG\" },\n          OST: { token: \"OST\" },\n          PAX: { token: \"PAX\" },\n          PBTC: { token: \"PBTC\" },\n          PLR: { token: \"PLR\" },\n          PNK: { token: \"PNK\" },\n          POLY: { token: \"POLY\" },\n          POWR: { token: \"POWR\" },\n          PT: { token: \"PT\" },\n          QKC: { token: \"QKC\" },\n          QNT: { token: \"QNT\" },\n          RAE: { token: \"RAE\" },\n          REN: { token: \"REN\" },\n          REP: { token: \"REP\" },\n          REQ: { token: \"REQ\" },\n          RLC: { token: \"RLC\" },\n          RSR: { token: \"RSR\" },\n          RSV: { token: \"RSV\" },\n          SAN: { token: \"SAN\" },\n          SNT: { token: \"SNT\" },\n          SNX: { token: \"SNX\" },\n          SPIKE: { token: \"SPIKE\" },\n          SPN: { token: \"SPN\" },\n          TKN: { token: \"TKN\" },\n          TKX: { token: \"TKX\" },\n          TRYB: { token: \"TRYB\" },\n          UBT: { token: \"UBT\" },\n          UPP: { token: \"UPP\" },\n          ZRX: { token: \"ZRX\" }\n        }\n      },\n      directProps: {}\n    }\n  },\n  insurance: {\n    nexusMutual: {\n      label: \"Nexus Mutual\",\n      image: \"images/protocols/nexus-mutual.png\",\n      imageDark: \"images/protocols/nexus-mutual-white.png\"\n    },\n    coverProtocol: {\n      label: \"Cover Protocol\",\n      image: \"images/protocols/cover-logo.svg\",\n      imageDark: \"images/protocols/cover-logo.svg\"\n    }\n  },\n  payments: {\n    // Payment methods & providers\n    methods: {\n      bank: {\n        defaultProvider: null,\n        showDefaultOnly: false,\n        props: {\n          imageSrc: \"images/bank.png\",\n          caption: \"Bank Account\"\n        }\n      },\n      card: {\n        defaultProvider: null,\n        showDefaultOnly: false,\n        props: {\n          imageSrc: \"images/debit-card.png\",\n          caption: \"Credit Card\"\n        }\n      },\n      wallet: {\n        defaultProvider: \"zeroExInstant\",\n        showDefaultOnly: false,\n        props: {\n          imageSrc: \"images/ethereum-wallet.svg\",\n          caption: \"Ethereum Wallet\",\n          imageProps: {\n            padding: [\"0\", \"5px\"]\n          }\n        }\n      }\n    },\n    providers: {\n      wyre: {\n        enabled: true,\n        imageSrc: \"images/payments/wyre.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0.75% fee ~\",\n        supportedMethods: [\"card\"],\n        supportedCountries: [\"USA\", \"GBR\", \"AUS\", \"BRA\", \"CHN\", \"MEX\", \"EUR\"],\n        supportedTokens: [\"USDC\", \"DAI\", \"ETH\"],\n        remoteResources: {},\n        env: \"prod\",\n        envParams: {\n          test: {\n            accountId: \"AC_Q2Y4AARC3TP\"\n          },\n          prod: {\n            accountId: \"AC_PQQBX33XVEQ\"\n          }\n        },\n        getInfo: props => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod) {\n            switch (props.selectedMethod) {\n              case \"bank\":\n                info.subcaption = `~ 0.75% fee ~\\nKYC REQUIRED`;\n                break;\n              case \"card\":\n                info.subcaption = `~ 3.2% fee ~\\n$250.00/day`;\n                break;\n              default:\n                break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          const env = globalConfigs.payments.providers.wyre.env;\n          const envParams = globalConfigs.payments.providers.wyre.envParams[env];\n          const referrerAccountId = envParams.accountId;\n          const url = \"https://pay.sendwyre.com/purchase\";\n\n          const params = {\n            dest: `ethereum:${props.account}`,\n            destCurrency: buyParams.selectedToken ? buyParams.selectedToken : props.tokenConfig.wyre && props.tokenConfig.wyre.destCurrency ? props.tokenConfig.wyre.destCurrency : props.selectedToken,\n            referrerAccountId,\n            redirectUrl: globalConfigs.baseURL\n            // failureRedirectUrl:globalConfigs.baseURL\n          };\n\n          return (\n            `${url}?` +\n            Object.keys(params)\n              .map(\n                k => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k])\n              )\n              .join(\"&\")\n          );\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          const wyreWidget = document.getElementById(\"wyre-widget\");\n          if (!wyreWidget) {\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"wyre-widget\" class=\"wyre-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"wyre-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                <a class=\"wyre-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('wyre-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                <div id=\"wyre-widget-container\" style=\"position:relative;z-index:2;width:400px;height:650px\">\n                  <iframe\n                    style=\"position:relative;z-index:2;\"\n                    frameborder=\"0\"\n                    height=\"100%\"\n                    src=\"${initParams}\"\n                    width=\"100%\"\n                  >\n                    <p>Your browser does not support iframes.</p>\n                  </iframe>\n                  <div id=\"wyre-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                    <div style=\"display:flex;flex-direction:row;align-items:center\">\n                      <img src=\"${globalConfigs.payments.providers.wyre.imageSrc}\" style=\"height:50px;\" />\n                      <h3 style=\"font-weight:600;font-style:italic;color:#000;padding-left:10px\">is loading...</h3>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add wyre Widget style (mobile)\n            if (!document.getElementById(\"wyreWidget_style\")) {\n              const wyreStyle = document.createElement(\"style\");\n              wyreStyle.id = \"wyreWidget_style\";\n              wyreStyle.innerHTML = `\n              @media (max-width: 40em){\n                #wyre-widget {\n                  align-items: flex-start !important;\n                }\n                #wyre-widget-overlay{\n                  background:#fff !important;\n                }\n                #wyre-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(wyreStyle);\n            }\n          }\n        }\n      },\n      ramp: {\n        enabled: true,\n        imageSrc: \"images/payments/ramp.png\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: `~ 2.5% fee ~\\nEUR / GBP`,\n        supportedMethods: [\"bank\", \"card\"],\n        badge: {\n          text: \"NO ID REQUIRED\",\n          color: \"#fff\",\n          bgColor: \"#0cade4\"\n        },\n        supportedTokens: [\"ETH\", \"DAI\", \"USDC\"],\n        supportedCountries: [\n          \"USA\",\n          \"GBR\",\n          \"AUS\",\n          \"BRA\",\n          \"CAN\",\n          \"EUR\",\n          \"HKG\",\n          \"IND\",\n          \"MEX\",\n          \"RUS\",\n          \"ZAF\",\n          \"KOR\"\n        ],\n        getInfo: props => {\n          const info = {};\n          switch (props.selectedMethod) {\n            case \"bank\":\n              info.supportedCountries = [\"GBR\", \"EUR\"];\n              info.subcaption = `~ 1.49-1.99% fee ~`;\n              break;\n            case \"card\":\n              info.supportedCountries = [\n                \"USA\",\n                \"GBR\",\n                \"AUS\",\n                \"BRA\",\n                \"CAN\",\n                \"EUR\",\n                \"HKG\",\n                \"IND\",\n                \"MEX\",\n                \"RUS\",\n                \"ZAF\",\n                \"KOR\"\n              ];\n              info.subcaption = `~ 2.90% fee ~`;\n              break;\n            default:\n              break;\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          return {\n            hostAppName: \"Idle\",\n            userAddress: props.account,\n            hostApiKey: env.REACT_APP_RAMP_KEY,\n            variant: props.isMobile ? \"mobile\" : \"desktop\",\n            hostLogoUrl: `${globalConfigs.baseURL}/images/idle-round.png`,\n            swapAsset: buyParams.selectedToken\n              ? buyParams.selectedToken\n              : props.tokenConfig.ramp && props.tokenConfig.ramp.swapAsset\n                ? props.tokenConfig.ramp.swapAsset\n                : props.selectedToken\n          };\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          new RampInstantSDK(initParams)\n            .on(\"*\", async event => {\n              const functionsUtil = new FunctionsUtil(props);\n              let tokenDecimals = null;\n              let tokenAmount = null;\n\n              switch (event.type) {\n                case \"PURCHASE_SUCCESSFUL\":\n                  // Update balance\n                  props.getAccountBalance();\n\n                  tokenDecimals = await props.getTokenDecimals();\n\n                  tokenAmount = event.payload.purchase.tokenAmount;\n                  tokenAmount = functionsUtil\n                    .BNify(tokenAmount.toString())\n                    .div(\n                      functionsUtil.BNify(\n                        Math.pow(10, parseInt(tokenDecimals)).toString()\n                      )\n                    )\n                    .toString();\n\n                  // Toast message\n                  window.toastProvider.addMessage(`Payment completed`, {\n                    secondaryMessage: `${tokenAmount} ${props.selectedToken} are now in your wallet`,\n                    colorTheme: \"light\",\n                    actionHref: \"\",\n                    actionText: \"\",\n                    variant: \"success\"\n                  });\n\n                  break;\n                default:\n                  break;\n              }\n            })\n            .show();\n        }\n      },\n      transak: {\n        enabled: true,\n        imageSrc: \"images/payments/transak.png\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: `~ 1.5% fee ~\\nALL CURRENCIES`,\n        supportedMethods: [\"bank\", \"card\"],\n        supportedCountries: [\n          \"USA\",\n          \"GBR\",\n          \"AUS\",\n          \"BRA\",\n          \"CHN\",\n          \"MEX\",\n          \"EUR\",\n          \"IND\"\n        ],\n        supportedTokens: [\"ETH\", \"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\"],\n        remoteResources: { \"https://global.transak.com/v1/widget.js\": {} },\n        env: \"prod\",\n        badge: {\n          text: \"INSTANT\",\n          bgColor: \"#0069ee\"\n        },\n        envParams: {\n          test: {\n            apiKey: env.REACT_APP_TRANSAK_KEY_TEST,\n            url: \"https://global.transak.com\"\n          },\n          prod: {\n            apiKey: env.REACT_APP_TRANSAK_KEY_PROD,\n            url: \"https://global.transak.com\"\n          }\n        },\n        getInfo: props => {\n          const info = {};\n\n          const selectedMethod = props.selectedMethod && props.selectedMethod;\n          let fee = selectedMethod === \"bank\" ? \"1.5%\" : \"4.5%\";\n\n          if (props.selectedCountry && props.selectedCountry.value) {\n            switch (props.selectedCountry.value.toUpperCase()) {\n              case \"GBR\":\n                info.badge = {\n                  text: \"INSTANT\",\n                  bgColor: \"#0069ee\"\n                };\n                info.subcaption = `~ ${fee} fee ~\\nGBP ONLY`;\n                break;\n              case \"IND\":\n                fee = \"1.0%\";\n                info.badge = {\n                  text: \"INSTANT\",\n                  bgColor: \"#0069ee\"\n                };\n                info.subcaption = `~ ${fee} fee ~\\nINR ONLY`;\n                break;\n              case \"EUR\":\n                if (selectedMethod === \"bank\") {\n                  info.badge = {\n                    text: \"SEPA\",\n                    color: \"#f7cb05 \",\n                    bgColor: \"#10288a\"\n                  };\n                } else {\n                  info.badge = {\n                    text: \"INSTANT\",\n                    bgColor: \"#0069ee\"\n                  };\n                }\n                info.subcaption = `~ ${fee} fee ~\\nEUR ONLY`;\n                break;\n              default:\n                break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          const env = globalConfigs.payments.providers.transak.env;\n          const envParams =\n            globalConfigs.payments.providers.transak.envParams[env];\n\n          let fiatCurrency = null;\n\n          if (buyParams.selectedCountry && buyParams.selectedCountry.value) {\n            switch (buyParams.selectedCountry.value.toUpperCase()) {\n              case \"IND\":\n                fiatCurrency = \"INR\";\n                break;\n              case \"GBR\":\n                fiatCurrency = \"GBP\";\n                break;\n              case \"EUR\":\n                fiatCurrency = \"EUR\";\n                break;\n              case \"USA\":\n                fiatCurrency = \"USD\";\n                break;\n              default:\n                fiatCurrency = \"GBP\";\n                break;\n            }\n          }\n\n          let cryptoCurrencyCode = buyParams.selectedToken\n            ? buyParams.selectedToken.toLowerCase()\n            : props.tokenConfig.transak &&\n              props.tokenConfig.transak.currencyCode\n              ? props.tokenConfig.transak.currencyCode\n              : props.selectedToken;\n          cryptoCurrencyCode = cryptoCurrencyCode.toUpperCase();\n\n          const apiKey = envParams.apiKey;\n          const walletAddress = props.account;\n          const partnerCustomerId = props.account;\n          const disableWalletAddressForm = false;\n\n          return {\n            apiKey,\n            cryptoCurrencyCode,\n            walletAddress,\n            fiatCurrency,\n            partnerCustomerId,\n            disableWalletAddressForm,\n            width: \"100%\",\n            height: \"100%\"\n            // email,\n          };\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          if (window.transakGlobal) {\n            const transakWidget = document.getElementById(\"transak-widget\");\n            if (!transakWidget) {\n              const iframeBox = document.createElement(\"div\");\n              iframeBox.innerHTML = `\n                <div id=\"transak-widget\" class=\"transak-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                  <div id=\"transak-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\" onclick=\"document.getElementById('transak-widget').remove();\"></div>\n                  <a class=\"transak-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('transak-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                  <div class=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\">\n                    <div id=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\"></div>\n                    <div id=\"transak-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:center\">\n                        <img src=\"${globalConfigs.payments.providers.transak.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"font-weight:600;font-style:italic;color:#0040ca\">is loading...</h3>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              `;\n              document.body.appendChild(iframeBox);\n\n              // Add transak Widget style (mobile)\n              if (!document.getElementById(\"transakWidget_style\")) {\n                const transakStyle = document.createElement(\"style\");\n                transakStyle.id = \"transakWidget_style\";\n                transakStyle.innerHTML = `\n                @media (max-width: 40em){\n                  #transak-widget {\n                    align-items: flex-start !important;\n                  }\n                  #transak-widget-overlay{\n                    background:#fff !important;\n                  }\n                  #transak-widget-container{\n                    width:100vw;\n                    min-height: calc( 100vh - 60px ) !important;\n                  }\n                }`;\n                document.body.appendChild(transakStyle);\n              }\n            }\n\n            window.transakGlobal.render(initParams, \"transak-widget-container\");\n          }\n        }\n      },\n      moonpay: {\n        enabled: true,\n        imageSrc: \"images/payments/moonpay.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 4.5% fee ~\",\n        supportedMethods: [\"card\", \"bank\"],\n        supportedCountries: [\n          \"GBR\",\n          \"EUR\",\n          \"AUS\",\n          \"BRA\",\n          \"CHN\",\n          \"MEX\",\n          \"CAN\",\n          \"HKG\",\n          \"RUS\",\n          \"ZAF\",\n          \"KOR\"\n        ],\n        supportedTokens: [\"USDC\", \"DAI\", \"ETH\"],\n        env: \"prod\",\n        envParams: {\n          test: {\n            url: \"https://buy-staging.moonpay.io\",\n            apiKey: env.REACT_APP_MOONPAY_KEY_TEST\n          },\n          prod: {\n            url: \"https://buy.moonpay.io\",\n            apiKey: env.REACT_APP_MOONPAY_KEY_PROD\n          }\n        },\n        getInfo: props => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod) {\n            switch (props.selectedMethod) {\n              case \"bank\":\n                if (props.selectedCountry && props.selectedCountry.value) {\n                  switch (props.selectedCountry.value.toUpperCase()) {\n                    case \"EUR\":\n                      info.badge = {\n                        text: \"SEPA\",\n                        color: \"#f7cb05 \",\n                        bgColor: \"#10288a\"\n                      };\n                      info.subcaption = `~ 1.5% fee ~\\nEUR ONLY`;\n                      break;\n                    case \"GBR\":\n                      info.badge = {\n                        text: \"GBP\"\n                      };\n                      info.subcaption = `~ 1.5% fee ~\\nGBP ONLY`;\n                      break;\n                    default:\n                      info.badge = null;\n                      info.subcaption = `~ 1.5% fee ~\\nEUR/GBP ONLY`;\n                      break;\n                  }\n                }\n                break;\n              case \"card\":\n                info.badge = null;\n                info.subcaption = `~ 5% fee ~`;\n                break;\n              default:\n                break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          const env = globalConfigs.payments.providers.moonpay.env;\n          const envParams =\n            globalConfigs.payments.providers.moonpay.envParams[env];\n          const apiKey = envParams.apiKey;\n          const params = {\n            apiKey,\n            currencyCode: buyParams.selectedToken\n              ? buyParams.selectedToken.toLowerCase()\n              : props.tokenConfig.moonpay &&\n                props.tokenConfig.moonpay.currencyCode\n                ? props.tokenConfig.moonpay.currencyCode\n                : props.selectedToken.toLowerCase(),\n            walletAddress: props.account,\n            baseCurrencyCode: \"USD\",\n            showWalletAddressForm: true\n          };\n\n          const methods = {\n            bank: {\n              GBR: \"gbp_bank_transfer\",\n              EUR: \"sepa_bank_transfer\"\n            },\n            card: \"credit_debit_card\"\n          };\n\n          const selectedCountry =\n            buyParams.selectedCountry && buyParams.selectedCountry.value\n              ? buyParams.selectedCountry.value.toUpperCase()\n              : null;\n\n          // Set payment method\n          if (buyParams.selectedMethod) {\n            switch (buyParams.selectedMethod) {\n              case \"bank\":\n                params.enabledPaymentMethods =\n                  methods[buyParams.selectedMethod][\"EUR\"];\n                switch (selectedCountry) {\n                  case \"GBR\":\n                  case \"EUR\":\n                    params.enabledPaymentMethods =\n                      methods[buyParams.selectedMethod][selectedCountry];\n                    break;\n                  default:\n                    params.enabledPaymentMethods = Object.values(\n                      methods[buyParams.selectedMethod]\n                    ).join(\",\");\n                    break;\n                }\n                break;\n              case \"card\":\n              default:\n                params.enabledPaymentMethods =\n                  methods[buyParams.selectedMethod];\n                break;\n            }\n          }\n\n          // Set baseCurrencyCode\n          switch (selectedCountry) {\n            case \"GBR\":\n              params.baseCurrencyCode = \"GBP\";\n              break;\n            case \"EUR\":\n              params.baseCurrencyCode = \"EUR\";\n              break;\n            default:\n              params.baseCurrencyCode = \"USD\";\n              break;\n          }\n\n          let url = envParams.url;\n\n          // Safari Fix\n          var isSafari = navigator.userAgent.indexOf(\"Safari\") > -1;\n          if (isSafari) {\n            if (\n              !document.cookie.match(\n                /^(.*;)?\\s*moonpay-fixed\\s*=\\s*[^;]+(.*)?$/\n              )\n            ) {\n              document.cookie =\n                \"moonpay-fixed=fixed; expires=Tue, 19 Jan 2038 03:14:07 UTC; path=/\";\n              url += \"/safari_fix\";\n            }\n          }\n\n          return (\n            `${url}?` +\n            Object.keys(params)\n              .map(\n                k => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k])\n              )\n              .join(\"&\")\n          );\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          const moonpayWidget = document.getElementById(\"moonpay-widget\");\n          if (!moonpayWidget) {\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"moonpay-widget\" class=\"moonpay-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"moonpay-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                  <div id=\"moonpay-widget-container\" style=\"position:relative;z-index:2;width:500px;height:490px\">\n                    <iframe\n                      style=\"position:relative;z-index:2;\"\n                      frameborder=\"0\"\n                      height=\"100%\"\n                      src=\"${initParams}\"\n                      width=\"100%\"\n                    >\n                      <p>Your browser does not support iframes.</p>\n                    </iframe>\n                    <div id=\"moonpay-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:end\">\n                        <img src=\"${globalConfigs.payments.providers.moonpay.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"padding-left:5px;font-weight:600;font-style:italic;\">is loading...</h3>\n                      </div>\n                    </div>\n                    <div id=\"moonpay-widget-footer\" style=\"position:relative;display:flex;justify-content:center;align-items:center;padding:8px 16px;width:100%;background:#fff;top:-20px;z-index:3\">\n                      <button style=\"background:#000;color:#fff;text-align:center;border-radius:5px;width:100%;height:51px;line-height:51px;font-weight:500;border:0;cursor:pointer\" onclick=\"document.getElementById('moonpay-widget').remove();\">Close</button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add Moonpay Widget style (mobile)\n            if (!document.getElementById(\"moonpayWidget_style\")) {\n              const moonpayStyle = document.createElement(\"style\");\n              moonpayStyle.id = \"moonpayWidget_style\";\n              moonpayStyle.innerHTML = `\n              @media (max-width: 40em){\n                #moonpay-widget {\n                  align-items: flex-start !important;\n                }\n                #moonpay-widget-overlay{\n                  background:#fff !important;\n                }\n                #moonpay-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(moonpayStyle);\n            }\n          }\n        }\n      },\n      zeroExInstant: {\n        enabled: true,\n        imageSrc: \"images/payments/zeroexinstant.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0.25% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\"USDC\", \"DAI\"],\n        remoteResources: { \"https://instant.0x.org/v3/instant.js\": {} },\n        getInitParams: (\n          props,\n          globalConfigs,\n          buyParams,\n          onSuccess,\n          onClose\n        ) => {\n          const tokenParams = globalConfigs.tokens[buyParams.selectedToken];\n          const connectorName = window.RimbleWeb3_context\n            ? window.RimbleWeb3_context.connectorName\n            : null;\n\n          if (!tokenParams.zeroExInstant) {\n            return null;\n          }\n\n          return {\n            networkId: globalConfigs.network.requiredNetwork,\n            chainId: globalConfigs.network.requiredNetwork,\n            provider:\n              connectorName &&\n                connectorName !== \"Injected\" &&\n                window.RimbleWeb3_context.connector[connectorName.toLowerCase()]\n                ? window.RimbleWeb3_context.connector[\n                  window.RimbleWeb3_context.connectorName.toLowerCase()\n                ].provider\n                : window.ethereum,\n            orderSource: tokenParams.zeroExInstant.orderSource,\n            affiliateInfo: tokenParams.zeroExInstant.affiliateInfo,\n            defaultSelectedAssetData: tokenParams.zeroExInstant.assetData,\n            availableAssetDatas: [tokenParams.zeroExInstant.assetData],\n            shouldDisableAnalyticsTracking: true,\n            onSuccess: onSuccess ? onSuccess : () => { },\n            onClose: onClose ? onClose : () => { }\n          };\n        },\n        render: (initParams, amount) => {\n          if (window.zeroExInstant && initParams) {\n            if (amount) {\n              initParams.defaultAssetBuyAmount = parseFloat(amount);\n            }\n            window.zeroExInstant.render(initParams, \"body\");\n          }\n        }\n      },\n      kyberSwap: {\n        enabled: true,\n        imageSrc: \"images/payments/kyber.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Swap with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0.25% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\n          \"WETH\",\n          \"USDC\",\n          \"DAI\",\n          \"USDT\",\n          \"TUSD\",\n          \"SUSD\",\n          \"WBTC\",\n          \"RAI\",\n          \"FEI\"\n        ],\n        web3Subscription: {\n          // Data for web3 subscription\n          enabled: true,\n          contractAddress: \"0x818e6fecd516ecc3849daf6845e3ec868087b755\",\n          decodeLogsData: [\n            {\n              internalType: \"address\",\n              name: \"_startAddress\",\n              type: \"address\"\n            },\n            {\n              internalType: \"address\",\n              name: \"_tokenAddress\",\n              type: \"address\"\n            },\n            {\n              internalType: \"uint256\",\n              name: \"_startAmount\",\n              type: \"uint256\"\n            },\n            {\n              internalType: \"uint256\",\n              name: \"_tokenAmount\",\n              type: \"uint256\"\n            }\n          ]\n        },\n        remoteResources: {\n          \"https://widget.kyber.network/v0.7.5/widget.css\": {},\n          \"https://widget.kyber.network/v0.7.5/widget.js\": {\n            parentElement: document.body,\n            precall: (props, globalConfigs, providerInfo) => {\n              // Remove previous elements\n              const buttons = document.querySelectorAll(\".kyber-widget-button\");\n              for (let i = 0; i < buttons.length; i++) {\n                buttons[i].remove();\n              }\n\n              // const kyberWidgetScript = document.getElementById('kyber-widget-script');\n              // if (kyberWidgetScript){\n              //   kyberWidgetScript.remove();\n              // }\n\n              const scripts = document.querySelectorAll(\".script_kyberSwap\");\n              for (let i = 0; i < scripts.length; i++) {\n                scripts[i].remove();\n              }\n\n              const buttonId = props.buttonId\n                ? props.buttonId\n                : `kyber-swapper-${props.selectedToken}`;\n              if (!document.getElementById(buttonId)) {\n                const a = document.createElement(\"a\");\n                a.id = buttonId;\n                a.href = providerInfo.getInitParams(props, globalConfigs);\n                a.target = \"_blank\";\n                a.rel = \"nofollow noopener noreferrer\";\n                a.className = \"kyber-widget-button theme-ocean theme-supported\";\n                a.title = \"Swap with Kyber\";\n                a.style = \"display:none;\";\n                document.body.appendChild(a);\n              }\n            }\n          }\n        },\n        getInitParams: (props, globalConfigs, buyParams = null) => {\n          const baseToken = props.baseToken ? props.baseToken : \"ETH\";\n          const params = {\n            lang: \"en\",\n            type: \"swap\",\n            mode: \"iframe\",\n            theme: \"theme-ocean\",\n            paramForwarding: true,\n            // callback:globalConfigs.baseURL,\n            pinnedTokens: `${baseToken}_${props.selectedToken}`,\n            title: `Swap ${baseToken} for ${props.selectedToken}`,\n            defaultPair: `${baseToken}_${props.selectedToken}`,\n            commissionId: \"0x4215606a720477178AdFCd5A59775C63138711e8\",\n            network:\n              globalConfigs.network.requiredNetwork === 1 ? \"mainnet\" : \"test\"\n          };\n\n          const url = \"https://widget.kyber.network/v0.7.5/\";\n\n          return (\n            `${url}?` +\n            Object.keys(params)\n              .map(\n                k => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k])\n              )\n              .join(\"&\")\n          );\n        },\n        render: (initParams, amount, props) => {\n          const buttonId = props.buttonId\n            ? props.buttonId\n            : `kyber-swapper-${props.selectedToken}`;\n          const a = document.getElementById(buttonId);\n          if (a) {\n            a.click();\n\n            // Observe for pending transaction\n            /*\n            if (window.MutationObserver){\n              setTimeout(() => {\n\n                const observer = new window.MutationObserver(function(mutations) {\n                  mutations.forEach((m,i) => {\n                    if (m.addedNodes.length && m.target.className === 'kyber_widget-broadcast'){\n\n                      // Show persistent toast message\n                      window.showToastMessage({\n                        variant:'processing',\n                        message:'Pending deposit',\n                        secondaryMessage:'kyberSwap is processing your request'\n                      });\n\n                      observer.disconnect();\n                    } else if (m.target.id === 'kyber-widget' && m.removedNodes.length && m.removedNodes[0].firstChild.className.includes('kyber_widget-widget-container')) {\n                      observer.disconnect();\n                    }\n                  });\n                });\n                const target = document.querySelector('#kyber-widget');\n                observer.observe(target, { childList: true, subtree: true });\n              },1000);\n            }\n            */\n          }\n        }\n      },\n      airSwap: {\n        enabled: false,\n        imageSrc: \"images/payments/airswap.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\"USDC\", \"DAI\"],\n        env: \"production\",\n        remoteResources: {\n          \"https://cdn.airswap.io/airswap-instant-widget.js\": {}\n        },\n        getInitParams: (\n          props,\n          globalConfigs,\n          buyParams,\n          onComplete,\n          onClose\n        ) => {\n          return {\n            env: \"production\",\n            mode: \"buy\",\n            token: props.tokenConfig.address,\n            baseToken: \"ETH\",\n            onComplete: onComplete ? onComplete : () => { },\n            onClose: onClose ? onClose : () => { }\n          };\n        },\n        render: (initParams, amount, props) => {\n          if (window.AirSwapInstant) {\n            if (amount) {\n              initParams.amount = amount.toString();\n            }\n            window.AirSwapInstant.render(initParams, \"body\");\n          }\n        }\n      },\n      totle: {\n        enabled: false,\n        imageSrc: \"images/payments/totle.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\"USDC\", \"DAI\"],\n        env: \"production\",\n        remoteResources: { \"https://widget.totle.com/latest/dist.js\": {} },\n        getInitParams: (\n          props,\n          globalConfigs,\n          buyParams,\n          onComplete,\n          onClose\n        ) => {\n          return {\n            sourceAssetAddress: null,\n            sourceAmountDecimal: null,\n            destinationAssetAddress: null,\n            destinationAmountDecimal: null,\n            apiKey: null,\n            partnerContractAddress: null\n          };\n        },\n        render: (initParams, amount, props) => {\n          if (window.TotleWidget) {\n            const nodeId = \"totle-widget\";\n            if (!document.getElementById(nodeId)) {\n              const totleWidgetContainer = document.createElement(\"div\");\n              totleWidgetContainer.id = nodeId;\n              document.body.appendChild(totleWidgetContainer);\n            }\n\n            window.TotleWidget.default.run(\n              initParams,\n              document.getElementById(nodeId)\n            );\n          }\n        }\n      }\n    }\n  }\n};\n\nexport default globalConfigs;\n","var map = {\n\t\"./mainnet/v1/index.json\": 1876,\n\t\"./testnet/mumbai/index.json\": 1877\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 4440;","var map = {\n\t\"./mainnet/v1/artifacts/fx-portal/FxChild.json\": 4442,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC1155ChildTunnel.json\": 4443,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC1155RootTunnel.json\": 4444,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC20ChildToken.json\": 4445,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC20ChildTunnel.json\": 4446,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC20RootToken.json\": 4447,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC20RootTunnel.json\": 4448,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC721ChildTunnel.json\": 4449,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC721RootTunnel.json\": 4450,\n\t\"./mainnet/v1/artifacts/fx-portal/FxRoot.json\": 4451,\n\t\"./mainnet/v1/artifacts/genesis/BorValidatorSet.json\": 4452,\n\t\"./mainnet/v1/artifacts/genesis/IStateReceiver.json\": 4453,\n\t\"./mainnet/v1/artifacts/genesis/Migrations.json\": 4454,\n\t\"./mainnet/v1/artifacts/genesis/StateReceiver.json\": 4455,\n\t\"./mainnet/v1/artifacts/genesis/System.json\": 4456,\n\t\"./mainnet/v1/artifacts/genesis/TestBorValidatorSet.json\": 4457,\n\t\"./mainnet/v1/artifacts/genesis/TestCommitState.json\": 4458,\n\t\"./mainnet/v1/artifacts/genesis/TestStateReceiver.json\": 4459,\n\t\"./mainnet/v1/artifacts/genesis/TestSystem.json\": 4460,\n\t\"./mainnet/v1/artifacts/genesis/ValidatorSet.json\": 4461,\n\t\"./mainnet/v1/artifacts/genesis/ValidatorVerifier.json\": 4462,\n\t\"./mainnet/v1/artifacts/plasma/BaseERC20.json\": 4463,\n\t\"./mainnet/v1/artifacts/plasma/ChainIdMixin.json\": 4464,\n\t\"./mainnet/v1/artifacts/plasma/ChildChain.json\": 4465,\n\t\"./mainnet/v1/artifacts/plasma/ChildERC20.json\": 4466,\n\t\"./mainnet/v1/artifacts/plasma/ChildERC20Proxified.json\": 4467,\n\t\"./mainnet/v1/artifacts/plasma/ChildERC721.json\": 4468,\n\t\"./mainnet/v1/artifacts/plasma/ChildERC721Mintable.json\": 4469,\n\t\"./mainnet/v1/artifacts/plasma/ChildERC721Proxified.json\": 4470,\n\t\"./mainnet/v1/artifacts/plasma/ChildToken.json\": 4471,\n\t\"./mainnet/v1/artifacts/plasma/ChildTokenProxy.json\": 4472,\n\t\"./mainnet/v1/artifacts/plasma/Common.json\": 4473,\n\t\"./mainnet/v1/artifacts/plasma/ContractReceiver.json\": 4474,\n\t\"./mainnet/v1/artifacts/plasma/ContractWitRevertingFallback.json\": 4475,\n\t\"./mainnet/v1/artifacts/plasma/ContractWithFallback.json\": 4476,\n\t\"./mainnet/v1/artifacts/plasma/ContractWithoutFallback.json\": 4477,\n\t\"./mainnet/v1/artifacts/plasma/DelegateProxy.json\": 4478,\n\t\"./mainnet/v1/artifacts/plasma/DepositManager.json\": 4479,\n\t\"./mainnet/v1/artifacts/plasma/DepositManagerHeader.json\": 4480,\n\t\"./mainnet/v1/artifacts/plasma/DepositManagerProxy.json\": 4481,\n\t\"./mainnet/v1/artifacts/plasma/DepositManagerStorage.json\": 4482,\n\t\"./mainnet/v1/artifacts/plasma/DrainStakeManager.json\": 4483,\n\t\"./mainnet/v1/artifacts/plasma/Drainable.json\": 4484,\n\t\"./mainnet/v1/artifacts/plasma/ECVerify.json\": 4485,\n\t\"./mainnet/v1/artifacts/plasma/ERC165.json\": 4486,\n\t\"./mainnet/v1/artifacts/plasma/ERC20.json\": 4487,\n\t\"./mainnet/v1/artifacts/plasma/ERC20Detailed.json\": 4488,\n\t\"./mainnet/v1/artifacts/plasma/ERC20Mintable.json\": 4489,\n\t\"./mainnet/v1/artifacts/plasma/ERC20NonTransferable.json\": 4490,\n\t\"./mainnet/v1/artifacts/plasma/ERC20Predicate.json\": 4491,\n\t\"./mainnet/v1/artifacts/plasma/ERC20PredicateBurnOnly.json\": 4492,\n\t\"./mainnet/v1/artifacts/plasma/ERC721.json\": 4493,\n\t\"./mainnet/v1/artifacts/plasma/ERC721Enumerable.json\": 4494,\n\t\"./mainnet/v1/artifacts/plasma/ERC721Full.json\": 4495,\n\t\"./mainnet/v1/artifacts/plasma/ERC721Metadata.json\": 4496,\n\t\"./mainnet/v1/artifacts/plasma/ERC721MetadataMintable.json\": 4497,\n\t\"./mainnet/v1/artifacts/plasma/ERC721Mintable.json\": 4498,\n\t\"./mainnet/v1/artifacts/plasma/ERC721PlasmaMintable.json\": 4499,\n\t\"./mainnet/v1/artifacts/plasma/ERC721Predicate.json\": 4500,\n\t\"./mainnet/v1/artifacts/plasma/ERC721PredicateBurnOnly.json\": 4501,\n\t\"./mainnet/v1/artifacts/plasma/ERCProxy.json\": 4502,\n\t\"./mainnet/v1/artifacts/plasma/ExitNFT.json\": 4503,\n\t\"./mainnet/v1/artifacts/plasma/FallbackManager.json\": 4504,\n\t\"./mainnet/v1/artifacts/plasma/GnosisSafe.json\": 4505,\n\t\"./mainnet/v1/artifacts/plasma/GnosisSafeProxy.json\": 4506,\n\t\"./mainnet/v1/artifacts/plasma/Governable.json\": 4507,\n\t\"./mainnet/v1/artifacts/plasma/Governance.json\": 4508,\n\t\"./mainnet/v1/artifacts/plasma/GovernanceLockable.json\": 4509,\n\t\"./mainnet/v1/artifacts/plasma/GovernanceLockableTest.json\": 4510,\n\t\"./mainnet/v1/artifacts/plasma/GovernanceProxy.json\": 4511,\n\t\"./mainnet/v1/artifacts/plasma/IDepositManager.json\": 4512,\n\t\"./mainnet/v1/artifacts/plasma/IERC165.json\": 4513,\n\t\"./mainnet/v1/artifacts/plasma/IERC20.json\": 4514,\n\t\"./mainnet/v1/artifacts/plasma/IERC721.json\": 4515,\n\t\"./mainnet/v1/artifacts/plasma/IERC721Enumerable.json\": 4516,\n\t\"./mainnet/v1/artifacts/plasma/IERC721Metadata.json\": 4517,\n\t\"./mainnet/v1/artifacts/plasma/IERC721Receiver.json\": 4518,\n\t\"./mainnet/v1/artifacts/plasma/IErcPredicate.json\": 4519,\n\t\"./mainnet/v1/artifacts/plasma/IGovernance.json\": 4520,\n\t\"./mainnet/v1/artifacts/plasma/IParentToken.json\": 4521,\n\t\"./mainnet/v1/artifacts/plasma/IPredicate.json\": 4522,\n\t\"./mainnet/v1/artifacts/plasma/IRootChain.json\": 4523,\n\t\"./mainnet/v1/artifacts/plasma/ISignatureValidator.json\": 4524,\n\t\"./mainnet/v1/artifacts/plasma/ISlashingManager.json\": 4525,\n\t\"./mainnet/v1/artifacts/plasma/IStakeManager.json\": 4526,\n\t\"./mainnet/v1/artifacts/plasma/IStakeManagerLocal.json\": 4527,\n\t\"./mainnet/v1/artifacts/plasma/IValidatorShare.json\": 4528,\n\t\"./mainnet/v1/artifacts/plasma/IWithdrawManager.json\": 4529,\n\t\"./mainnet/v1/artifacts/plasma/LibEIP712Domain.json\": 4530,\n\t\"./mainnet/v1/artifacts/plasma/LibTokenTransferOrder.json\": 4531,\n\t\"./mainnet/v1/artifacts/plasma/Lockable.json\": 4532,\n\t\"./mainnet/v1/artifacts/plasma/MRC20.json\": 4533,\n\t\"./mainnet/v1/artifacts/plasma/Marketplace.json\": 4534,\n\t\"./mainnet/v1/artifacts/plasma/MarketplacePredicate.json\": 4535,\n\t\"./mainnet/v1/artifacts/plasma/MarketplacePredicateTest.json\": 4536,\n\t\"./mainnet/v1/artifacts/plasma/MarketplaceToken.json\": 4537,\n\t\"./mainnet/v1/artifacts/plasma/MasterCopy.json\": 4538,\n\t\"./mainnet/v1/artifacts/plasma/MaticWETH.json\": 4539,\n\t\"./mainnet/v1/artifacts/plasma/Merkle.json\": 4540,\n\t\"./mainnet/v1/artifacts/plasma/Migrations.json\": 4541,\n\t\"./mainnet/v1/artifacts/plasma/MintableERC721Predicate.json\": 4542,\n\t\"./mainnet/v1/artifacts/plasma/MinterRole.json\": 4543,\n\t\"./mainnet/v1/artifacts/plasma/Module.json\": 4544,\n\t\"./mainnet/v1/artifacts/plasma/ModuleManager.json\": 4545,\n\t\"./mainnet/v1/artifacts/plasma/Ownable.json\": 4546,\n\t\"./mainnet/v1/artifacts/plasma/OwnableLockable.json\": 4547,\n\t\"./mainnet/v1/artifacts/plasma/OwnerManager.json\": 4548,\n\t\"./mainnet/v1/artifacts/plasma/ParentTokenMock.json\": 4549,\n\t\"./mainnet/v1/artifacts/plasma/PredicateUtils.json\": 4550,\n\t\"./mainnet/v1/artifacts/plasma/PriorityQueue.json\": 4551,\n\t\"./mainnet/v1/artifacts/plasma/Proxy.json\": 4552,\n\t\"./mainnet/v1/artifacts/plasma/ProxyStorage.json\": 4553,\n\t\"./mainnet/v1/artifacts/plasma/ProxyTestImpl.json\": 4554,\n\t\"./mainnet/v1/artifacts/plasma/ProxyTestImplStorageLayoutChange.json\": 4555,\n\t\"./mainnet/v1/artifacts/plasma/Registry.json\": 4556,\n\t\"./mainnet/v1/artifacts/plasma/RootChain.json\": 4557,\n\t\"./mainnet/v1/artifacts/plasma/RootChainHeader.json\": 4558,\n\t\"./mainnet/v1/artifacts/plasma/RootChainProxy.json\": 4559,\n\t\"./mainnet/v1/artifacts/plasma/RootChainStorage.json\": 4560,\n\t\"./mainnet/v1/artifacts/plasma/RootChainable.json\": 4561,\n\t\"./mainnet/v1/artifacts/plasma/RootERC721.json\": 4562,\n\t\"./mainnet/v1/artifacts/plasma/SlashingManager.json\": 4563,\n\t\"./mainnet/v1/artifacts/plasma/StakeManager.json\": 4564,\n\t\"./mainnet/v1/artifacts/plasma/StakeManagerProxy.json\": 4565,\n\t\"./mainnet/v1/artifacts/plasma/StakeManagerStorage.json\": 4566,\n\t\"./mainnet/v1/artifacts/plasma/StakeManagerTest.json\": 4567,\n\t\"./mainnet/v1/artifacts/plasma/StakeManagerTestable.json\": 4568,\n\t\"./mainnet/v1/artifacts/plasma/StakingInfo.json\": 4569,\n\t\"./mainnet/v1/artifacts/plasma/StakingNFT.json\": 4570,\n\t\"./mainnet/v1/artifacts/plasma/StateReceiver.json\": 4571,\n\t\"./mainnet/v1/artifacts/plasma/StateSender.json\": 4572,\n\t\"./mainnet/v1/artifacts/plasma/StateSyncerVerifier.json\": 4573,\n\t\"./mainnet/v1/artifacts/plasma/TestMRC20.json\": 4574,\n\t\"./mainnet/v1/artifacts/plasma/TestToken.json\": 4575,\n\t\"./mainnet/v1/artifacts/plasma/TransferWithSigPredicate.json\": 4576,\n\t\"./mainnet/v1/artifacts/plasma/TransferWithSigUtils.json\": 4577,\n\t\"./mainnet/v1/artifacts/plasma/UpgradableProxy.json\": 4578,\n\t\"./mainnet/v1/artifacts/plasma/ValidatorShare.json\": 4579,\n\t\"./mainnet/v1/artifacts/plasma/ValidatorShareFactory.json\": 4580,\n\t\"./mainnet/v1/artifacts/plasma/ValidatorShareProxy.json\": 4581,\n\t\"./mainnet/v1/artifacts/plasma/ValidatorShareTest.json\": 4582,\n\t\"./mainnet/v1/artifacts/plasma/WETH.json\": 4583,\n\t\"./mainnet/v1/artifacts/plasma/WithdrawManager.json\": 4584,\n\t\"./mainnet/v1/artifacts/plasma/WithdrawManagerHeader.json\": 4585,\n\t\"./mainnet/v1/artifacts/plasma/WithdrawManagerProxy.json\": 4586,\n\t\"./mainnet/v1/artifacts/plasma/WithdrawManagerStorage.json\": 4587,\n\t\"./mainnet/v1/artifacts/pos/AccessControl.json\": 4588,\n\t\"./mainnet/v1/artifacts/pos/AccessControlMixin.json\": 4589,\n\t\"./mainnet/v1/artifacts/pos/ChainConstants.json\": 4590,\n\t\"./mainnet/v1/artifacts/pos/ChildChainManager.json\": 4591,\n\t\"./mainnet/v1/artifacts/pos/ChildChainManagerProxy.json\": 4592,\n\t\"./mainnet/v1/artifacts/pos/ChildERC1155.json\": 4593,\n\t\"./mainnet/v1/artifacts/pos/ChildERC20.json\": 4594,\n\t\"./mainnet/v1/artifacts/pos/ChildERC721.json\": 4595,\n\t\"./mainnet/v1/artifacts/pos/ChildMintableERC721.json\": 4596,\n\t\"./mainnet/v1/artifacts/pos/ChildTunnel.json\": 4597,\n\t\"./mainnet/v1/artifacts/pos/DummyERC1155.json\": 4598,\n\t\"./mainnet/v1/artifacts/pos/DummyERC20.json\": 4599,\n\t\"./mainnet/v1/artifacts/pos/DummyERC721.json\": 4600,\n\t\"./mainnet/v1/artifacts/pos/DummyMintableERC721.json\": 4601,\n\t\"./mainnet/v1/artifacts/pos/DummyStateSender.json\": 4602,\n\t\"./mainnet/v1/artifacts/pos/EIP712Base.json\": 4603,\n\t\"./mainnet/v1/artifacts/pos/ERC1155.json\": 4604,\n\t\"./mainnet/v1/artifacts/pos/ERC1155Predicate.json\": 4605,\n\t\"./mainnet/v1/artifacts/pos/ERC1155PredicateProxy.json\": 4606,\n\t\"./mainnet/v1/artifacts/pos/ERC1155Receiver.json\": 4607,\n\t\"./mainnet/v1/artifacts/pos/ERC165.json\": 4608,\n\t\"./mainnet/v1/artifacts/pos/ERC20.json\": 4609,\n\t\"./mainnet/v1/artifacts/pos/ERC20Predicate.json\": 4610,\n\t\"./mainnet/v1/artifacts/pos/ERC20PredicateProxy.json\": 4611,\n\t\"./mainnet/v1/artifacts/pos/ERC721.json\": 4612,\n\t\"./mainnet/v1/artifacts/pos/ERC721Predicate.json\": 4613,\n\t\"./mainnet/v1/artifacts/pos/ERC721PredicateProxy.json\": 4614,\n\t\"./mainnet/v1/artifacts/pos/EtherPredicate.json\": 4615,\n\t\"./mainnet/v1/artifacts/pos/EtherPredicateProxy.json\": 4616,\n\t\"./mainnet/v1/artifacts/pos/ICheckpointManager.json\": 4617,\n\t\"./mainnet/v1/artifacts/pos/IChildChainManager.json\": 4618,\n\t\"./mainnet/v1/artifacts/pos/IChildToken.json\": 4619,\n\t\"./mainnet/v1/artifacts/pos/IERC1155.json\": 4620,\n\t\"./mainnet/v1/artifacts/pos/IERC1155MetadataURI.json\": 4621,\n\t\"./mainnet/v1/artifacts/pos/IERC1155Receiver.json\": 4622,\n\t\"./mainnet/v1/artifacts/pos/IERC165.json\": 4623,\n\t\"./mainnet/v1/artifacts/pos/IERC20.json\": 4624,\n\t\"./mainnet/v1/artifacts/pos/IERC721.json\": 4625,\n\t\"./mainnet/v1/artifacts/pos/IERC721Enumerable.json\": 4626,\n\t\"./mainnet/v1/artifacts/pos/IERC721Metadata.json\": 4627,\n\t\"./mainnet/v1/artifacts/pos/IERC721Receiver.json\": 4628,\n\t\"./mainnet/v1/artifacts/pos/IERCProxy.json\": 4629,\n\t\"./mainnet/v1/artifacts/pos/IMintableERC721.json\": 4630,\n\t\"./mainnet/v1/artifacts/pos/IRootChainManager.json\": 4631,\n\t\"./mainnet/v1/artifacts/pos/IStateSender.json\": 4632,\n\t\"./mainnet/v1/artifacts/pos/ITokenPredicate.json\": 4633,\n\t\"./mainnet/v1/artifacts/pos/MaticWETH.json\": 4634,\n\t\"./mainnet/v1/artifacts/pos/Merkle.json\": 4635,\n\t\"./mainnet/v1/artifacts/pos/MerklePatriciaTest.json\": 4636,\n\t\"./mainnet/v1/artifacts/pos/Migrations.json\": 4637,\n\t\"./mainnet/v1/artifacts/pos/MintableERC1155Predicate.json\": 4638,\n\t\"./mainnet/v1/artifacts/pos/MintableERC1155PredicateProxy.json\": 4639,\n\t\"./mainnet/v1/artifacts/pos/MintableERC20Predicate.json\": 4640,\n\t\"./mainnet/v1/artifacts/pos/MintableERC20PredicateProxy.json\": 4641,\n\t\"./mainnet/v1/artifacts/pos/MintableERC721Predicate.json\": 4642,\n\t\"./mainnet/v1/artifacts/pos/MintableERC721PredicateProxy.json\": 4643,\n\t\"./mainnet/v1/artifacts/pos/MockCheckpointManager.json\": 4644,\n\t\"./mainnet/v1/artifacts/pos/NativeMetaTransaction.json\": 4645,\n\t\"./mainnet/v1/artifacts/pos/NetworkAgnostic.json\": 4646,\n\t\"./mainnet/v1/artifacts/pos/Proxy.json\": 4647,\n\t\"./mainnet/v1/artifacts/pos/ProxyTestImpl.json\": 4648,\n\t\"./mainnet/v1/artifacts/pos/ProxyTestImplStorageLayoutChange.json\": 4649,\n\t\"./mainnet/v1/artifacts/pos/RootChainManager.json\": 4650,\n\t\"./mainnet/v1/artifacts/pos/RootChainManagerProxy.json\": 4651,\n\t\"./mainnet/v1/artifacts/pos/RootChainManagerStorage.json\": 4652,\n\t\"./mainnet/v1/artifacts/pos/RootTunnel.json\": 4653,\n\t\"./mainnet/v1/artifacts/pos/UpgradableProxy.json\": 4654,\n\t\"./mainnet/v1/index.json\": 1876,\n\t\"./networks.json\": 1875,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxChild.json\": 4655,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC1155ChildTunnel.json\": 4656,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC1155RootTunnel.json\": 4657,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC20ChildToken.json\": 4658,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC20ChildTunnel.json\": 4659,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC20RootToken.json\": 4660,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC20RootTunnel.json\": 4661,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC721ChildTunnel.json\": 4662,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC721RootTunnel.json\": 4663,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxRoot.json\": 4664,\n\t\"./testnet/mumbai/artifacts/genesis/BorValidatorSet.json\": 4665,\n\t\"./testnet/mumbai/artifacts/genesis/IStateReceiver.json\": 4666,\n\t\"./testnet/mumbai/artifacts/genesis/Migrations.json\": 4667,\n\t\"./testnet/mumbai/artifacts/genesis/StateReceiver.json\": 4668,\n\t\"./testnet/mumbai/artifacts/genesis/System.json\": 4669,\n\t\"./testnet/mumbai/artifacts/genesis/TestBorValidatorSet.json\": 4670,\n\t\"./testnet/mumbai/artifacts/genesis/TestCommitState.json\": 4671,\n\t\"./testnet/mumbai/artifacts/genesis/TestStateReceiver.json\": 4672,\n\t\"./testnet/mumbai/artifacts/genesis/TestSystem.json\": 4673,\n\t\"./testnet/mumbai/artifacts/genesis/ValidatorSet.json\": 4674,\n\t\"./testnet/mumbai/artifacts/genesis/ValidatorVerifier.json\": 4675,\n\t\"./testnet/mumbai/artifacts/plasma/BaseERC20.json\": 4676,\n\t\"./testnet/mumbai/artifacts/plasma/ChainIdMixin.json\": 4677,\n\t\"./testnet/mumbai/artifacts/plasma/ChildChain.json\": 4678,\n\t\"./testnet/mumbai/artifacts/plasma/ChildERC20.json\": 4679,\n\t\"./testnet/mumbai/artifacts/plasma/ChildERC20Proxified.json\": 4680,\n\t\"./testnet/mumbai/artifacts/plasma/ChildERC721.json\": 4681,\n\t\"./testnet/mumbai/artifacts/plasma/ChildERC721Mintable.json\": 4682,\n\t\"./testnet/mumbai/artifacts/plasma/ChildERC721Proxified.json\": 4683,\n\t\"./testnet/mumbai/artifacts/plasma/ChildToken.json\": 4684,\n\t\"./testnet/mumbai/artifacts/plasma/ChildTokenProxy.json\": 4685,\n\t\"./testnet/mumbai/artifacts/plasma/Common.json\": 4686,\n\t\"./testnet/mumbai/artifacts/plasma/ContractReceiver.json\": 4687,\n\t\"./testnet/mumbai/artifacts/plasma/ContractWitRevertingFallback.json\": 4688,\n\t\"./testnet/mumbai/artifacts/plasma/ContractWithFallback.json\": 4689,\n\t\"./testnet/mumbai/artifacts/plasma/ContractWithoutFallback.json\": 4690,\n\t\"./testnet/mumbai/artifacts/plasma/DelegateProxy.json\": 4691,\n\t\"./testnet/mumbai/artifacts/plasma/DepositManager.json\": 4692,\n\t\"./testnet/mumbai/artifacts/plasma/DepositManagerHeader.json\": 4693,\n\t\"./testnet/mumbai/artifacts/plasma/DepositManagerProxy.json\": 4694,\n\t\"./testnet/mumbai/artifacts/plasma/DepositManagerStorage.json\": 4695,\n\t\"./testnet/mumbai/artifacts/plasma/DrainStakeManager.json\": 4696,\n\t\"./testnet/mumbai/artifacts/plasma/Drainable.json\": 4697,\n\t\"./testnet/mumbai/artifacts/plasma/ECVerify.json\": 4698,\n\t\"./testnet/mumbai/artifacts/plasma/ERC165.json\": 4699,\n\t\"./testnet/mumbai/artifacts/plasma/ERC20.json\": 4700,\n\t\"./testnet/mumbai/artifacts/plasma/ERC20Detailed.json\": 4701,\n\t\"./testnet/mumbai/artifacts/plasma/ERC20Mintable.json\": 4702,\n\t\"./testnet/mumbai/artifacts/plasma/ERC20NonTransferable.json\": 4703,\n\t\"./testnet/mumbai/artifacts/plasma/ERC20Predicate.json\": 4704,\n\t\"./testnet/mumbai/artifacts/plasma/ERC20PredicateBurnOnly.json\": 4705,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721.json\": 4706,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721Enumerable.json\": 4707,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721Full.json\": 4708,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721Metadata.json\": 4709,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721MetadataMintable.json\": 4710,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721Mintable.json\": 4711,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721PlasmaMintable.json\": 4712,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721Predicate.json\": 4713,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721PredicateBurnOnly.json\": 4714,\n\t\"./testnet/mumbai/artifacts/plasma/ERCProxy.json\": 4715,\n\t\"./testnet/mumbai/artifacts/plasma/ExitNFT.json\": 4716,\n\t\"./testnet/mumbai/artifacts/plasma/FallbackManager.json\": 4717,\n\t\"./testnet/mumbai/artifacts/plasma/GnosisSafe.json\": 4718,\n\t\"./testnet/mumbai/artifacts/plasma/GnosisSafeProxy.json\": 4719,\n\t\"./testnet/mumbai/artifacts/plasma/Governable.json\": 4720,\n\t\"./testnet/mumbai/artifacts/plasma/Governance.json\": 4721,\n\t\"./testnet/mumbai/artifacts/plasma/GovernanceLockable.json\": 4722,\n\t\"./testnet/mumbai/artifacts/plasma/GovernanceLockableTest.json\": 4723,\n\t\"./testnet/mumbai/artifacts/plasma/GovernanceProxy.json\": 4724,\n\t\"./testnet/mumbai/artifacts/plasma/IDepositManager.json\": 4725,\n\t\"./testnet/mumbai/artifacts/plasma/IERC165.json\": 4726,\n\t\"./testnet/mumbai/artifacts/plasma/IERC20.json\": 4727,\n\t\"./testnet/mumbai/artifacts/plasma/IERC721.json\": 4728,\n\t\"./testnet/mumbai/artifacts/plasma/IERC721Enumerable.json\": 4729,\n\t\"./testnet/mumbai/artifacts/plasma/IERC721Metadata.json\": 4730,\n\t\"./testnet/mumbai/artifacts/plasma/IERC721Receiver.json\": 4731,\n\t\"./testnet/mumbai/artifacts/plasma/IErcPredicate.json\": 4732,\n\t\"./testnet/mumbai/artifacts/plasma/IGovernance.json\": 4733,\n\t\"./testnet/mumbai/artifacts/plasma/IParentToken.json\": 4734,\n\t\"./testnet/mumbai/artifacts/plasma/IPredicate.json\": 4735,\n\t\"./testnet/mumbai/artifacts/plasma/IRootChain.json\": 4736,\n\t\"./testnet/mumbai/artifacts/plasma/ISignatureValidator.json\": 4737,\n\t\"./testnet/mumbai/artifacts/plasma/ISlashingManager.json\": 4738,\n\t\"./testnet/mumbai/artifacts/plasma/IStakeManager.json\": 4739,\n\t\"./testnet/mumbai/artifacts/plasma/IStakeManagerLocal.json\": 4740,\n\t\"./testnet/mumbai/artifacts/plasma/IValidatorShare.json\": 4741,\n\t\"./testnet/mumbai/artifacts/plasma/IWithdrawManager.json\": 4742,\n\t\"./testnet/mumbai/artifacts/plasma/LibEIP712Domain.json\": 4743,\n\t\"./testnet/mumbai/artifacts/plasma/LibTokenTransferOrder.json\": 4744,\n\t\"./testnet/mumbai/artifacts/plasma/Lockable.json\": 4745,\n\t\"./testnet/mumbai/artifacts/plasma/MRC20.json\": 4746,\n\t\"./testnet/mumbai/artifacts/plasma/Marketplace.json\": 4747,\n\t\"./testnet/mumbai/artifacts/plasma/MarketplacePredicate.json\": 4748,\n\t\"./testnet/mumbai/artifacts/plasma/MarketplacePredicateTest.json\": 4749,\n\t\"./testnet/mumbai/artifacts/plasma/MarketplaceToken.json\": 4750,\n\t\"./testnet/mumbai/artifacts/plasma/MasterCopy.json\": 4751,\n\t\"./testnet/mumbai/artifacts/plasma/MaticWETH.json\": 4752,\n\t\"./testnet/mumbai/artifacts/plasma/Merkle.json\": 4753,\n\t\"./testnet/mumbai/artifacts/plasma/Migrations.json\": 4754,\n\t\"./testnet/mumbai/artifacts/plasma/MintableERC721Predicate.json\": 4755,\n\t\"./testnet/mumbai/artifacts/plasma/MinterRole.json\": 4756,\n\t\"./testnet/mumbai/artifacts/plasma/Module.json\": 4757,\n\t\"./testnet/mumbai/artifacts/plasma/ModuleManager.json\": 4758,\n\t\"./testnet/mumbai/artifacts/plasma/Ownable.json\": 4759,\n\t\"./testnet/mumbai/artifacts/plasma/OwnableLockable.json\": 4760,\n\t\"./testnet/mumbai/artifacts/plasma/OwnerManager.json\": 4761,\n\t\"./testnet/mumbai/artifacts/plasma/ParentTokenMock.json\": 4762,\n\t\"./testnet/mumbai/artifacts/plasma/PredicateUtils.json\": 4763,\n\t\"./testnet/mumbai/artifacts/plasma/PriorityQueue.json\": 4764,\n\t\"./testnet/mumbai/artifacts/plasma/Proxy.json\": 4765,\n\t\"./testnet/mumbai/artifacts/plasma/ProxyStorage.json\": 4766,\n\t\"./testnet/mumbai/artifacts/plasma/ProxyTestImpl.json\": 4767,\n\t\"./testnet/mumbai/artifacts/plasma/ProxyTestImplStorageLayoutChange.json\": 4768,\n\t\"./testnet/mumbai/artifacts/plasma/Registry.json\": 4769,\n\t\"./testnet/mumbai/artifacts/plasma/RootChain.json\": 4770,\n\t\"./testnet/mumbai/artifacts/plasma/RootChainHeader.json\": 4771,\n\t\"./testnet/mumbai/artifacts/plasma/RootChainProxy.json\": 4772,\n\t\"./testnet/mumbai/artifacts/plasma/RootChainStorage.json\": 4773,\n\t\"./testnet/mumbai/artifacts/plasma/RootChainable.json\": 4774,\n\t\"./testnet/mumbai/artifacts/plasma/RootERC721.json\": 4775,\n\t\"./testnet/mumbai/artifacts/plasma/SlashingManager.json\": 4776,\n\t\"./testnet/mumbai/artifacts/plasma/StakeManager.json\": 4777,\n\t\"./testnet/mumbai/artifacts/plasma/StakeManagerProxy.json\": 4778,\n\t\"./testnet/mumbai/artifacts/plasma/StakeManagerStorage.json\": 4779,\n\t\"./testnet/mumbai/artifacts/plasma/StakeManagerTest.json\": 4780,\n\t\"./testnet/mumbai/artifacts/plasma/StakeManagerTestable.json\": 4781,\n\t\"./testnet/mumbai/artifacts/plasma/StakingInfo.json\": 4782,\n\t\"./testnet/mumbai/artifacts/plasma/StakingNFT.json\": 4783,\n\t\"./testnet/mumbai/artifacts/plasma/StateReceiver.json\": 4784,\n\t\"./testnet/mumbai/artifacts/plasma/StateSender.json\": 4785,\n\t\"./testnet/mumbai/artifacts/plasma/StateSyncerVerifier.json\": 4786,\n\t\"./testnet/mumbai/artifacts/plasma/TestMRC20.json\": 4787,\n\t\"./testnet/mumbai/artifacts/plasma/TestToken.json\": 4788,\n\t\"./testnet/mumbai/artifacts/plasma/TransferWithSigPredicate.json\": 4789,\n\t\"./testnet/mumbai/artifacts/plasma/TransferWithSigUtils.json\": 4790,\n\t\"./testnet/mumbai/artifacts/plasma/UpgradableProxy.json\": 4791,\n\t\"./testnet/mumbai/artifacts/plasma/ValidatorShare.json\": 4792,\n\t\"./testnet/mumbai/artifacts/plasma/ValidatorShareFactory.json\": 4793,\n\t\"./testnet/mumbai/artifacts/plasma/ValidatorShareProxy.json\": 4794,\n\t\"./testnet/mumbai/artifacts/plasma/ValidatorShareTest.json\": 4795,\n\t\"./testnet/mumbai/artifacts/plasma/WETH.json\": 4796,\n\t\"./testnet/mumbai/artifacts/plasma/WithdrawManager.json\": 4797,\n\t\"./testnet/mumbai/artifacts/plasma/WithdrawManagerHeader.json\": 4798,\n\t\"./testnet/mumbai/artifacts/plasma/WithdrawManagerProxy.json\": 4799,\n\t\"./testnet/mumbai/artifacts/plasma/WithdrawManagerStorage.json\": 4800,\n\t\"./testnet/mumbai/artifacts/pos/AccessControl.json\": 4801,\n\t\"./testnet/mumbai/artifacts/pos/AccessControlMixin.json\": 4802,\n\t\"./testnet/mumbai/artifacts/pos/ChainConstants.json\": 4803,\n\t\"./testnet/mumbai/artifacts/pos/ChildChainManager.json\": 4804,\n\t\"./testnet/mumbai/artifacts/pos/ChildChainManagerProxy.json\": 4805,\n\t\"./testnet/mumbai/artifacts/pos/ChildERC1155.json\": 4806,\n\t\"./testnet/mumbai/artifacts/pos/ChildERC20.json\": 4807,\n\t\"./testnet/mumbai/artifacts/pos/ChildERC721.json\": 4808,\n\t\"./testnet/mumbai/artifacts/pos/ChildMintableERC721.json\": 4809,\n\t\"./testnet/mumbai/artifacts/pos/ChildTunnel.json\": 4810,\n\t\"./testnet/mumbai/artifacts/pos/DummyERC1155.json\": 4811,\n\t\"./testnet/mumbai/artifacts/pos/DummyERC20.json\": 4812,\n\t\"./testnet/mumbai/artifacts/pos/DummyERC721.json\": 4813,\n\t\"./testnet/mumbai/artifacts/pos/DummyMintableERC721.json\": 4814,\n\t\"./testnet/mumbai/artifacts/pos/DummyStateSender.json\": 4815,\n\t\"./testnet/mumbai/artifacts/pos/EIP712Base.json\": 4816,\n\t\"./testnet/mumbai/artifacts/pos/ERC1155.json\": 4817,\n\t\"./testnet/mumbai/artifacts/pos/ERC1155Predicate.json\": 4818,\n\t\"./testnet/mumbai/artifacts/pos/ERC1155PredicateProxy.json\": 4819,\n\t\"./testnet/mumbai/artifacts/pos/ERC1155Receiver.json\": 4820,\n\t\"./testnet/mumbai/artifacts/pos/ERC165.json\": 4821,\n\t\"./testnet/mumbai/artifacts/pos/ERC20.json\": 4822,\n\t\"./testnet/mumbai/artifacts/pos/ERC20Predicate.json\": 4823,\n\t\"./testnet/mumbai/artifacts/pos/ERC20PredicateProxy.json\": 4824,\n\t\"./testnet/mumbai/artifacts/pos/ERC721.json\": 4825,\n\t\"./testnet/mumbai/artifacts/pos/ERC721Predicate.json\": 4826,\n\t\"./testnet/mumbai/artifacts/pos/ERC721PredicateProxy.json\": 4827,\n\t\"./testnet/mumbai/artifacts/pos/EtherPredicate.json\": 4828,\n\t\"./testnet/mumbai/artifacts/pos/EtherPredicateProxy.json\": 4829,\n\t\"./testnet/mumbai/artifacts/pos/ICheckpointManager.json\": 4830,\n\t\"./testnet/mumbai/artifacts/pos/IChildChainManager.json\": 4831,\n\t\"./testnet/mumbai/artifacts/pos/IChildToken.json\": 4832,\n\t\"./testnet/mumbai/artifacts/pos/IERC1155.json\": 4833,\n\t\"./testnet/mumbai/artifacts/pos/IERC1155MetadataURI.json\": 4834,\n\t\"./testnet/mumbai/artifacts/pos/IERC1155Receiver.json\": 4835,\n\t\"./testnet/mumbai/artifacts/pos/IERC165.json\": 4836,\n\t\"./testnet/mumbai/artifacts/pos/IERC20.json\": 4837,\n\t\"./testnet/mumbai/artifacts/pos/IERC721.json\": 4838,\n\t\"./testnet/mumbai/artifacts/pos/IERC721Enumerable.json\": 4839,\n\t\"./testnet/mumbai/artifacts/pos/IERC721Metadata.json\": 4840,\n\t\"./testnet/mumbai/artifacts/pos/IERC721Receiver.json\": 4841,\n\t\"./testnet/mumbai/artifacts/pos/IERCProxy.json\": 4842,\n\t\"./testnet/mumbai/artifacts/pos/IMintableERC721.json\": 4843,\n\t\"./testnet/mumbai/artifacts/pos/IRootChainManager.json\": 4844,\n\t\"./testnet/mumbai/artifacts/pos/IStateSender.json\": 4845,\n\t\"./testnet/mumbai/artifacts/pos/ITokenPredicate.json\": 4846,\n\t\"./testnet/mumbai/artifacts/pos/MaticWETH.json\": 4847,\n\t\"./testnet/mumbai/artifacts/pos/Merkle.json\": 4848,\n\t\"./testnet/mumbai/artifacts/pos/MerklePatriciaTest.json\": 4849,\n\t\"./testnet/mumbai/artifacts/pos/Migrations.json\": 4850,\n\t\"./testnet/mumbai/artifacts/pos/MintableERC1155Predicate.json\": 4851,\n\t\"./testnet/mumbai/artifacts/pos/MintableERC1155PredicateProxy.json\": 4852,\n\t\"./testnet/mumbai/artifacts/pos/MintableERC20Predicate.json\": 4853,\n\t\"./testnet/mumbai/artifacts/pos/MintableERC20PredicateProxy.json\": 4854,\n\t\"./testnet/mumbai/artifacts/pos/MintableERC721Predicate.json\": 4855,\n\t\"./testnet/mumbai/artifacts/pos/MintableERC721PredicateProxy.json\": 4856,\n\t\"./testnet/mumbai/artifacts/pos/MockCheckpointManager.json\": 4857,\n\t\"./testnet/mumbai/artifacts/pos/NativeMetaTransaction.json\": 4858,\n\t\"./testnet/mumbai/artifacts/pos/NetworkAgnostic.json\": 4859,\n\t\"./testnet/mumbai/artifacts/pos/Proxy.json\": 4860,\n\t\"./testnet/mumbai/artifacts/pos/ProxyTestImpl.json\": 4861,\n\t\"./testnet/mumbai/artifacts/pos/ProxyTestImplStorageLayoutChange.json\": 4862,\n\t\"./testnet/mumbai/artifacts/pos/RootChainManager.json\": 4863,\n\t\"./testnet/mumbai/artifacts/pos/RootChainManagerProxy.json\": 4864,\n\t\"./testnet/mumbai/artifacts/pos/RootChainManagerStorage.json\": 4865,\n\t\"./testnet/mumbai/artifacts/pos/RootTunnel.json\": 4866,\n\t\"./testnet/mumbai/artifacts/pos/UpgradableProxy.json\": 4867,\n\t\"./testnet/mumbai/index.json\": 1877\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 4441;","import React, { Component } from 'react';\nimport { Flex, Icon, Text } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ConnectBox extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          p:3,\n          mt:3,\n          ...this.props.cardProps\n        }}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            name={'Input'}\n            color={'cellText'}\n          />\n          <Text\n            mt={2}\n            fontSize={2}\n            color={'cellText'}\n            textAlign={'center'}\n          >\n            Please connect with your wallet interact with Idle.\n          </Text>\n          <RoundButton\n            buttonProps={{\n              mt:2,\n              width:[1,1/2]\n            }}\n            handleClick={this.props.connectAndValidateAccount}\n          >\n            Connect\n          </RoundButton>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ConnectBox;\n","import theme from '../theme';\nimport React, { Component } from 'react';\nimport styles from './TransactionListFilters.module.scss';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\nimport { Flex, Text, Icon, Radio, Button, Link } from \"rimble-ui\";\n\nclass TransactionListFilters extends Component {\n\n  state = {\n    maxWidth:0.4,\n    minWidth:0.18,\n    maxHeight:425,\n    isOpened:false,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null\n    }\n  }\n\n  setFilter = (filter,value) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:value\n      }\n    }));\n  }\n\n  applyFilters = (toggle=true) => {\n    if (typeof this.props.applyFilters === 'function'){\n      this.props.applyFilters(this.state.activeFilters);\n    }\n    if (toggle){\n      this.toggleOpened();\n    }\n  }\n\n  resetFilter = (filter) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:null\n      }\n    }),() => {\n      this.applyFilters(false);\n    });\n  }\n\n  resetFilters = (toggle=true) => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null\n      }\n    },() => {\n      if (typeof this.props.resetFilters === 'function'){\n        this.props.resetFilters();\n      }\n      if (toggle){\n        this.toggleOpened();\n      }\n    })\n  }\n\n  toggleOpened = () => {\n    this.setState((prevState) => ({\n      isOpened: !prevState.isOpened\n    }));\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={3}\n        top={0}\n        width={1}\n        zIndex={1}\n        flexDirection={'column'}\n        alignItems={'flex-start'}\n        justifyContent={'center'}\n        position={['relative','absolute']}\n      >\n        <DashboardCard\n          cardProps={{\n            py:2,\n            px:3,\n            width:[1, this.state.isOpened ? this.state.maxWidth : this.state.minWidth ],\n            style:{\n              transition:'width 0.3s ease-in-out'\n            }\n          }}\n          isInteractive={ !this.state.isOpened }\n          handleClick={ !this.state.isOpened ? this.toggleOpened : null }\n        >\n          <Flex\n            width={1}\n            style={{\n              cursor:'pointer'\n            }}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'space-between'}\n            onClick={ this.state.isOpened ? this.toggleOpened : null }\n          >\n            <Text\n              fontSize={2}\n              fontWeight={500}\n              color={'copyColor'}\n            >\n              Filters\n            </Text>\n            <Icon\n              color={'copyColor'}\n              size={ this.props.isMobile ? '1.3em' : '1.5em'}\n              name={ this.state.isOpened ? 'Close' : 'Tune' }\n            />\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n            style={{\n              overflow:'hidden',\n              transition:'max-height 0.3s ease-in-out',\n              maxHeight:this.state.isOpened ? this.state.maxHeight : 0\n            }}\n          >\n            <Flex\n              mt={2}\n              py={2}\n              width={1}\n              flexDirection={'row'}\n              borderTop={`1px solid ${theme.colors.divider}`}\n            >\n              {\n                Object.keys(this.props.filters).map((filterCategory) => {\n                  const filterValues = this.props.filters[filterCategory];\n                  return (\n                    <Flex\n                      flexDirection={'column'}\n                      key={`filter_${filterCategory}`}\n                      style={{\n                        flexBasis:'0',\n                        flex:'1 1 0px'\n                      }}\n                    >\n                      <TableCellHeader\n                        pb={2}\n                        fontWeight={3}\n                        fontSize={[0,2]}\n                        color={'cellText'}\n                      >\n                        {filterCategory.toUpperCase()}\n                      </TableCellHeader>\n                      {\n                        Object.keys(filterValues).map((filterValue) => {\n                          const filterLabel = filterValues[filterValue];\n                          const isChecked = this.state.activeFilters[filterCategory]===filterValue;\n                          return (\n                            <Radio\n                              my={2}\n                              fontSize={[0,2]}\n                              label={filterLabel}\n                              checked={isChecked}\n                              className={styles.radioBtn}\n                              key={`filter_${filterCategory}_${filterValue}`}\n                              onChange={ e => this.setFilter(filterCategory,filterValue) }\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                  );\n                })\n              }\n            </Flex>\n            <Flex\n              flexDirection={'row'}\n            >\n              <Button.Text\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.applyFilters}\n              >\n                Apply filters\n              </Button.Text>\n              <Button.Text\n                ml={3}\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.resetFilters}\n              >\n                Reset\n              </Button.Text>\n            </Flex>\n          </Flex>\n        </DashboardCard>\n        {\n          !this.state.isOpened && this.props.activeFilters && Object.values(this.props.activeFilters).filter( v => (v !== null) ).length>0 &&\n            <Flex\n              mt={3}\n              width={1}\n              flexDirection={['column','row']}\n              alignItems={['flex-start','flex-end']}\n              justifyContent={['flex-end','flex-start']}\n            >\n              {\n                Object.keys(this.props.activeFilters).map((filterName) => {\n                  const filterValue = this.props.activeFilters[filterName];\n                  if (filterValue !== null){\n                    const filterLabel = this.props.filters[filterName][filterValue];\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:[2,0],\n                          mr:[0,3],\n                          width:[1,this.state.minWidth]\n                        }}\n                        isInteractive={true}\n                        key={`filter_${filterName}`}\n                      >\n                        <Flex\n                          width={1}\n                          style={{\n                            cursor:'pointer'\n                          }}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                          onClick={e => this.resetFilter(filterName)}\n                        >\n                          <Text\n                            fontSize={2}\n                            fontWeight={500}\n                            color={'cellText'}\n                            style={{\n                              textTransform:'capitalize'\n                            }}\n                          >\n                            {filterLabel}\n                          </Text>\n                          <Icon\n                            name={'Close'}\n                            color={'cellText'}\n                            size={ this.props.isMobile ? '1.3em' : '1.5em'}\n                          />\n                        </Flex>\n                      </DashboardCard>\n                    );\n                  }\n                  return null;\n                })\n              }\n              <Link\n                mt={[2,0]}\n                fontSize={[3,2]}\n                fontWeight={[3]}\n                color={'dark-gray'}\n                hoverColor={'copyColor'}\n                textAlign={['center','left']}\n                onClick={ e => this.resetFilters(false) }\n              >\n                Clear all filters\n              </Link>\n            </Flex>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionListFilters;","import React, { Component } from 'react';\n// import style from './TransactionsList.module.scss';\nimport TableRow from '../TableRow/TableRow';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Heading, Text, Link, Icon } from \"rimble-ui\";\nimport TransactionField from '../TransactionField/TransactionField';\nimport TransactionListFilters from '../TransactionListFilters/TransactionListFilters';\n\nclass TransactionsList extends Component {\n\n  state = {\n    page:1,\n    prevTxs:{},\n    txsPerPage:5,\n    loading:false,\n    totalTxs:null,\n    totalPages:null,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null,\n    },\n    filters:{\n      actions:{\n        deposit:'Deposit',\n        redeem:'Redeem',\n        send:'Send',\n        receive:'Receive',\n        migrate:'Migrate',\n        swap:'Swap-In',\n        swapout:'Swap-Out',\n        withdraw:'Withdraw',\n        // curvein:'CurveIn',\n        // curveout:'CurveOut',\n        // curvezapin:'CurveZapIn',\n        // curvezapout:'CurveZapOut',\n      },\n      status:{\n        completed:'Completed',\n        pending:'Pending',\n        failed:'Failed'\n      },\n      assets:{}\n    },\n    renderedTxs:null,\n    processedTxs:null,\n    lastBlockNumber:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);this.processTxs(page);\n    this.setState({\n      page\n    });\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadTxs();\n  }\n\n  applyFilters = activeFilters => {\n    this.setState({\n      activeFilters\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  resetFilters = () => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null,\n      }\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const transactionsChanged = JSON.stringify(prevProps.transactions) !== JSON.stringify(this.props.transactions);\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n\n    if (tokenChanged || transactionsChanged){\n      this.setState({\n        page:1,\n        prevTxs:{}\n      },()=>{\n        this.loadTxs();\n      })\n      return false;\n    }\n    const pageChanged = prevState.page !== this.state.page;\n    if (pageChanged){\n      this.processTxs();\n    }\n  }\n\n  async loadTxs(count,endBlockNumber='latest'){\n    if (!this.props.account){\n      return false;\n    }\n\n    count = count ? count : 0;\n\n    this.setState({\n      loading:true\n    });\n\n    const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n    // Take last block number, is null take first block number\n    let prevTxs = {...this.state.prevTxs};\n    let lastBlockNumber = Math.max(firstBlockNumber,this.state.lastBlockNumber);\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const assets = {...this.state.filters.assets};\n\n    enabledTokens.forEach((token) => {\n      assets[token] = token;\n    });\n\n    let actions = this.props.availableActions || {...this.state.filters.actions};\n    \n    const enabledActions = typeof this.props.enabledActions !== 'undefined' ? this.props.enabledActions : [];\n\n    if (enabledActions.length){\n      actions = {};\n      enabledActions.forEach( action => {\n        actions[action.toLowerCase()] = action;\n      });\n    }\n\n    const etherscanTxs = this.props.transactionsList || await this.functionsUtil.getEtherscanTxs(this.props.account,lastBlockNumber,'latest',enabledTokens);\n\n    // console.log('TransactionsList',etherscanTxs);\n\n    // Merge new txs with previous ones\n    if (etherscanTxs && etherscanTxs.length){\n      etherscanTxs.forEach((tx) => {\n        if (tx.hashKey){\n          prevTxs[tx.hashKey] = tx;\n        } else {\n          prevTxs[`t${tx.timeStamp}`] = tx;\n        }\n      });\n    }\n\n    const lastTx = Object.values(prevTxs).pop();\n\n    // Update last block number\n    if (lastTx && lastTx.blockNumber && (!this.state.lastBlockNumber || lastTx.blockNumber>this.state.lastBlockNumber)){\n      lastBlockNumber = parseInt(lastTx.blockNumber)+1;\n    }\n\n    return this.setState( prevState => ({\n      prevTxs,\n      loading:false,\n      lastBlockNumber,\n      filters:{\n        ...prevState.filters,\n        assets,\n        actions\n      }\n    }), () => {\n      this.processTxs()\n    });\n  };\n\n  processTxs = (page=null) => {\n\n    page = page ? page : this.state.page;\n\n    const availableActions = Object.keys(this.state.filters.actions).map( action => (action.toLowerCase()) );\n\n    // Sort prevTxs by timeStamp\n    const txsIndexes = Object.values(this.state.prevTxs)\n                        .filter(tx => (!!parseFloat(tx.value))) // Filter txs with value\n                        .filter(tx => (\n                          (this.state.activeFilters.status === null || (tx.status && tx.status.toLowerCase() === this.state.activeFilters.status.toLowerCase())) && \n                          (this.state.activeFilters.assets === null || (tx.token && tx.token.toLowerCase() === this.state.activeFilters.assets.toLowerCase())) &&\n                          ( tx.action && availableActions.includes(tx.action.toLowerCase()) && (this.state.activeFilters.actions === null || (tx.action.toLowerCase() === this.state.activeFilters.actions.toLowerCase()) ))\n                        )) // Filter by activeFilters\n                        .sort((a,b) => (a.timeStamp > b.timeStamp) ? -1 : 1 );\n\n    // Calculate max number of pages\n    const totalTxs = txsIndexes.length;\n    const totalPages = Math.ceil(totalTxs/this.state.txsPerPage);\n\n    const processedTxs = [];\n\n    // console.log(this.state.prevTxs,txsIndexes);\n\n    txsIndexes.forEach((tx, i) => {\n      const selectedToken = tx.token;\n      const tokenConfig = this.props.availableTokens && this.props.availableTokens[selectedToken] ? this.props.availableTokens[selectedToken] : this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken]);\n      const decimals = Math.min(tokenConfig.decimals,8);\n      \n      const date = new Date(tx.timeStamp*1000);\n      const action = tx.action ? tx.action : this.functionsUtil.getTxAction(tx,tokenConfig);\n\n      const parsedValue = parseFloat(tx.tokenAmount);\n\n      const amount = parsedValue ? (this.props.isMobile ? parsedValue.toFixed(4) : parsedValue.toFixed(decimals)) : '-';\n      const momentDate = this.functionsUtil.strToMoment(date);\n\n      // Save new params\n      tx.action = action;\n      tx.amount = amount;\n      tx.momentDate = momentDate;\n      tx.status = tx.status ? tx.status : 'Completed';\n\n      if (i>=((page-1)*this.state.txsPerPage) && i<((page-1)*this.state.txsPerPage)+this.state.txsPerPage) {\n        processedTxs.push(tx);\n      }\n    });\n\n    // console.log('processedTxs',this.state.page,txsIndexes,processedTxs);\n\n    const loading = false;\n  \n    this.setState({\n      loading,\n      totalTxs,\n      totalPages,\n      processedTxs\n    });\n  }\n\n  render() {\n\n    const hasActiveFilters = Object.values(this.state.activeFilters).filter( v => (v !== null) ).length>0;\n\n    // console.log('processedTxs',this.state.processedTxs);\n    const processedTxs = this.state.processedTxs ? Object.values(this.state.processedTxs) : null;\n\n    return (\n      <Flex flexDirection={'column'} width={1} m={'0 auto'}>\n        {\n          this.state.loading ? (\n            <FlexLoader\n              flexProps={{\n                flexDirection:'row',\n                minHeight:this.props.height\n              }}\n              loaderProps={{\n                size:'30px'\n              }}\n              textProps={{\n                ml:2\n              }}\n              text={'Loading transactions...'}\n            />\n          ) : (\n            <Flex\n              width={1}\n              position={'relative'}\n              flexDirection={'column'}\n              id={'transactions-list-container'}\n              pt={[0, hasActiveFilters ? '116px' : 5]}\n            >\n              <TransactionListFilters\n                {...this.props}\n                filters={this.state.filters}\n                activeFilters={this.state.activeFilters}\n                resetFilters={this.resetFilters.bind(this)}\n                applyFilters={this.applyFilters.bind(this)}\n              />\n              {\n                processedTxs && processedTxs.length ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <TableHeader\n                      cols={this.props.cols}\n                      isMobile={this.props.isMobile}\n                    />\n                    <Flex\n                      id={'transactions-list'}\n                      flexDirection={'column'}\n                    >\n                      {\n                        processedTxs.map( (tx,index) => {\n                          const txHash = tx.hash;\n                          const txHashKey = tx.hashKey;\n                          const handleClick = (e) => {\n                            return (txHash ? window.open(this.functionsUtil.getEtherscanTransactionUrl(txHash)) : null);\n                          };\n\n                          return (\n                            <TableRow\n                              {...this.props}\n                              rowProps={{\n                                isInteractive:true\n                              }}\n                              hash={txHash}\n                              transaction={tx}\n                              key={`tx-${index}`}\n                              handleClick={handleClick}\n                              rowId={`tx-col-${txHashKey}`}\n                              cardId={`tx-card-${txHashKey}`}\n                              fieldComponent={TransactionField}\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                    <Flex\n                      height={'50px'}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'flex-end'}\n                      id={'transactions-list-pagination'}\n                    >\n                      <Flex mr={3}>\n                        <Link mr={1} onClick={ e => this.prevPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowLeft'}\n                            size={'2em'}\n                            color={ this.state.page>1 ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                        <Link onClick={ e => this.nextPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowRight'}\n                            size={'2em'}\n                            color={ this.state.page<this.state.totalPages ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                      </Flex>\n                      <Flex alignItems={'center'}>\n                        <Text \n                          fontSize={1}\n                          fontWeight={3}\n                          color={'cellText'}\n                        >\n                          Page {this.state.page} of {this.state.totalPages}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontWeight={2} fontSize={[2]} color={'dark-gray'}>\n                    There are no transactions\n                  </Heading.h3>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionsList;\n","import React, { Component } from 'react';\nimport styles from './Migrate.module.scss';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\nimport { Box, Flex, Text, Icon, Checkbox, Input, Link, Image } from \"rimble-ui\";\n\nclass Migrate extends Component {\n\n  state = {\n    nonce:0,\n    loading:true,\n    action:'migrate',\n    processing:{\n      approve:{\n        txHash:null,\n        loading:false\n      },\n      migrate:{\n        txHash:null,\n        loading:false\n      },\n      redeem:{\n        txHash:null,\n        loading:false\n      }\n    },\n    inputValue:{},\n    usePermit:false,\n    oldTokenName:null,\n    oldIdleTokens:null,\n    skipMigration:false,\n    buttonDisabled:true,\n    migrationEnabled:null,\n    fastBalanceSelector:{},\n    oldContractBalance:null,\n    biconomyLimitReached:false,\n    metaTransactionsEnabled:true,\n    oldContractTokenDecimals:null,\n    migrationContractApproved:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  toggleSkipMigration = (skipMigration) => {\n    this.setState({\n      skipMigration\n    });\n\n    if (typeof this.props.toggleSkipMigration === 'function'){\n      this.props.toggleSkipMigration(skipMigration);\n    }\n  }\n\n  changeInputValue = (e) => {\n    if (!this.state.action){\n      return false;\n    }\n    const amount = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: null\n      },\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!this.state.action){\n      return false;\n    }\n    if (!amount){\n      amount = this.state.inputValue[this.state.action];\n    }\n    let buttonDisabled = true;\n    if (amount){\n      buttonDisabled = amount.lte(0);\n      switch (this.state.action){\n        case 'migrate':\n        case 'redeem':\n          buttonDisabled = buttonDisabled || amount.gt(this.state.oldIdleTokens);\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  setInputValue = () => {\n    if (!this.state.action || this.state.fastBalanceSelector[this.state.action] === null){\n      return false;\n    }\n\n    let amount = null;\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n\n    switch(this.state.action){\n      case 'migrate':\n      case 'redeem':\n        amount = this.state.oldIdleTokens ? this.functionsUtil.BNify(this.state.oldIdleTokens).times(selectedPercentage) : null;\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  setFastBalanceSelector = (percentage) => {\n    if (!this.state.action){\n      return false;\n    }\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: percentage\n      }\n    }));\n  }\n\n  executeAction = async () => {\n\n    const inputValue = this.state.inputValue[this.state.action];\n\n    if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)){\n      return false;\n    }\n\n    const loading = true;\n\n    switch (this.state.action){\n      case 'redeem':\n\n        if (!this.props.tokenConfig.migration || !this.props.tokenConfig.migration.oldContract){\n          return false;\n        }\n\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n\n        const idleTokenToRedeem = this.functionsUtil.normalizeTokenAmount(inputValue,18);\n\n        // Get amounts for best allocations\n        const _skipRebalance = true;\n        let paramsForRedeem = null;\n\n        /*\n        if (this.props.account){\n          const callParams = { from: this.props.account, gas: this.props.web3.utils.toBN(5000000) };\n          paramsForRedeem = await this.functionsUtil.genericContractCall(oldContractName,'getParamsForRedeemIdleToken',[idleTokenToRedeem, _skipRebalance],callParams);\n        }\n        */\n\n        const _clientProtocolAmountsRedeem = paramsForRedeem && paramsForRedeem.length ? paramsForRedeem[1] : [];\n        const gasLimitRedeem = _clientProtocolAmountsRedeem.length && _clientProtocolAmountsRedeem.indexOf('0') === -1 ? this.functionsUtil.BNify(1500000) : this.functionsUtil.BNify(1000000);\n\n        const callbackRedeem = (tx,error) => {\n          const txSucceeded = tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: `Redeem_old`,\n            eventAction: this.props.selectedToken,\n            eventLabel: tx.status,\n            eventValue: parseInt(inputValue)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (txSucceeded){\n            this.setState((prevState) => ({\n              inputValue:{\n                ...prevState.inputValue,\n                [this.state.action]: this.functionsUtil.BNify(0)\n              }\n            }));\n          }\n        };\n\n        const callbackReceiptRedeem = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                ...prevState.processing[this.state.action],\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.props.contractMethodSendWrapper(oldContractName, 'redeemIdleToken', [\n          idleTokenToRedeem, _skipRebalance, _clientProtocolAmountsRedeem\n        ], null, callbackRedeem, callbackReceiptRedeem, gasLimitRedeem);\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        [this.state.action]:{\n          ...prevState.processing[this.state.action],\n          loading\n        }\n      }\n    }));\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n    this.checkMigration();\n  }\n\n  componentDidMount(){\n    \n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const biconomyChanged = prevProps.biconomy !== this.props.biconomy;\n    const usePermitChanged = prevProps.usePermit !== this.props.usePermit;\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken || (!prevProps.tokenConfig && this.props.tokenConfig);\n\n    if (tokenChanged || accountChanged || biconomyChanged || usePermitChanged){\n      this.checkMigration();\n    }\n\n    const actionChanged = this.state.action !== prevState.action;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector[this.state.action] !== prevState.fastBalanceSelector[this.state.action];\n    if (actionChanged || fastBalanceSelectorChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (contractApprovedChanged){\n      // console.log(this.props.selectedToken,'contractApprovedChanged',this.state.migrationContractApproved);\n      if (typeof this.props.callbackApprove === 'function'){\n        this.props.callbackApprove(this.state.migrationContractApproved);\n      }\n    }\n  }\n\n  toggleMetaTransactionsEnabled = (metaTransactionsEnabled) => {\n    this.setState({\n      metaTransactionsEnabled\n    });\n  }\n\n  checkMigrationContractApproved = async () => {\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.migrationContract){\n      const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n      const migrationContractName = migrationContractInfo.name;\n      const migrationContract = this.functionsUtil.getContractByName(migrationContractName);\n      if (migrationContract){\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n        const tokenApproved = await this.functionsUtil.checkTokenApproved(oldContractName,migrationContractInfo.address,this.props.account);\n        return tokenApproved;\n      }\n    }\n    return false;\n  }\n\n  checkMigration = async () => {\n\n    if (!this.props.tokenConfig || !this.props.account){\n      return false;\n    }\n\n    let loading = true;\n    this.setState({\n      loading,\n      processing:{\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n\n    let migrationEnabled = false;\n    let oldTokenName = 'idleTokens';\n    let oldIdleTokensConverted = null;\n    let oldContractTokenDecimals = null;\n    let migrationContractApproved = false;\n    let oldTokenPrice = this.functionsUtil.BNify(0);\n    let oldIdleTokens = this.functionsUtil.BNify(0);\n    let oldContractBalance = this.functionsUtil.BNify(0);\n    const getTokenPrice = this.props.getTokenPrice !== undefined ? this.props.getTokenPrice : true;\n\n    // Check migration contract enabled and balance\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.enabled){\n      const oldContractInfo = this.props.tokenConfig.migration.oldContract;\n      const oldContractABI = oldContractInfo.abi;\n      const oldContractName = oldContractInfo.name;\n      let oldContract = this.functionsUtil.getContractByName(oldContractName);\n\n      // Initialize contract\n      if (!oldContract && oldContractABI){\n        oldContract = await this.props.initContract(oldContractName,oldContractInfo.address,oldContractABI);\n      }\n\n      let migrationContract = this.functionsUtil.getContractByName(this.props.tokenConfig.migration.migrationContract.name);\n\n      if (!migrationContract && this.props.tokenConfig.migration.migrationContract.abi){\n        migrationContract = await this.props.initContract(this.props.tokenConfig.migration.migrationContract.name,this.props.tokenConfig.migration.migrationContract.address,this.props.tokenConfig.migration.migrationContract.abi);\n      }\n\n      if (oldContract && migrationContract){\n\n        oldTokenName = this.props.tokenConfig.migration.oldContract.token;\n\n        [\n          oldContractTokenDecimals,\n          migrationContractApproved,\n          oldContractBalance,\n          oldTokenPrice,\n        ] = await Promise.all([\n          // Get old contract token decimals\n          this.functionsUtil.getTokenDecimals(oldContractName),\n          // Check migration contract approval\n          this.checkMigrationContractApproved(),\n          // Check old contractBalance\n          this.functionsUtil.getContractBalance(oldContractName,this.props.account),\n          // Get token price\n          (getTokenPrice ? this.functionsUtil.genericContractCall(oldContractName,'tokenPrice') : null)\n        ]);\n\n        // console.log('Migration',oldContractName,migrationContractApproved,this.props.selectedToken,oldContractBalance ? oldContractBalance.toString() : null,oldTokenPrice ? oldTokenPrice.toString() : null);\n\n        if (oldContractBalance){\n          // Convert old idleTokens\n          oldIdleTokens = this.functionsUtil.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          if (oldTokenPrice){\n            oldTokenPrice = this.functionsUtil.fixTokenDecimals(oldTokenPrice,this.props.tokenConfig.decimals);\n            oldIdleTokensConverted = this.functionsUtil.BNify(oldIdleTokens).times(this.functionsUtil.BNify(oldTokenPrice));\n          }\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.functionsUtil.BNify(oldContractBalance).gt(0);\n        }\n      }\n    }\n    \n    loading = false;\n\n    // If use Permit don't ask for Approve\n    const usePermit = this.props.usePermit;\n\n    const newState = {\n      loading,\n      usePermit,\n      oldTokenName,\n      oldIdleTokens,\n      migrationEnabled,\n      oldContractBalance,\n      oldIdleTokensConverted,\n      oldContractTokenDecimals,\n      migrationContractApproved\n    };\n\n    if (this.props.biconomy){\n      const biconomyLimits = await this.functionsUtil.checkBiconomyLimits(this.props.account);\n      if (biconomyLimits && !biconomyLimits.allowed){\n        newState.biconomyLimitReached = true;\n      }\n    }\n\n    if (typeof this.props.migrationEnabledCallback === 'function'){\n      this.props.migrationEnabledCallback(migrationEnabled);\n    }\n\n    // console.log('checkMigration',this.props.selectedToken,'usePermit',this.props.usePermit,'migrationContractApproved',newState.migrationContractApproved);\n\n    // Set migration contract balance\n    return this.setState(newState);\n  }\n\n  disapproveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n      this.disableERC20(null,this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address);\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n  }\n\n  approveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      if (!migrationContractApproved){\n\n        const callbackApprove = (tx,error) => {\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: 'approve',\n            eventLabel: tx ? tx.status : null\n          };\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // console.log('callbackApprove',tx,error);\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            migrationContractApproved: txSucceeded, // True\n            processing: {\n              ...prevState.processing,\n              approve:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n            this.props.callbackApprove(tx);\n          }\n\n          this.checkMigration();\n        };\n\n        const callbackReceiptApprove = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              approve:{\n                ...prevState.processing.approve,\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.functionsUtil.enableERC20(this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address,callbackApprove,callbackReceiptApprove);\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            approve:{\n              txHash:null,\n              loading:true\n            }\n          },\n          migrationContractApproved:false\n        }));\n      } else {\n        this.setState({\n          migrationContractApproved:true\n        });\n      }\n    }\n  }\n\n  migrate = async (e,migrationMethod) => {\n    e.preventDefault();\n\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      // const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      // if (!migrationContractApproved){\n      //   return this.approveMigration();\n      // } else {\n        const callbackMigrate = (tx,error) => {\n\n          if (!error && tx && tx.status === 'error'){\n            error = {\n              message:'Unknown error'\n            };\n          } else if (!tx && error){\n            tx = {\n              status:'error'\n            };\n          }\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: migrationMethod,\n            eventLabel: tx ? tx.status : null,\n            eventValue: parseInt(oldIdleTokens)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          // console.log('callbackMigrate',tx,tx.status,txSucceeded,error,this.props.migrationCallback);\n\n          if (txSucceeded){\n            // Toast message\n            window.toastProvider.addMessage(`Migration completed`, {\n              secondaryMessage: `Your funds has been migrated`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"success\",\n            });\n\n            if (this.props.migrationCallback && typeof this.props.migrationCallback === 'function'){\n              this.props.migrationCallback(tx);\n            }\n\n          } else { // Show migration error toast only for real error\n            window.toastProvider.addMessage(`Migration error`, {\n              secondaryMessage: `The migration has failed, try again...`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n            });\n\n            // Check migration if failed\n            this.checkMigration();\n          }\n\n          this.setState((prevState) => ({\n            migrationEnabled:txSucceeded ? false : true,\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n        }\n\n        const callbackReceiptMigrate = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                ...prevState.processing.migrate,\n                txHash\n              }\n            }\n          }));\n        };\n\n        const callbackPermit = () => {\n          if (typeof this.props.callbackPermit === 'function'){\n            this.props.callbackPermit();\n          }\n        }\n\n        const useMetaTx = this.props.useMetaTx !== false && this.props.biconomy && this.state.metaTransactionsEnabled && !this.state.biconomyLimitReached;\n\n        // Call migration contract function to migrate funds\n        const oldIdleTokens = this.state.oldIdleTokens;\n        const toMigrate = this.props.showBalanceSelector ? this.functionsUtil.integerValue(this.functionsUtil.normalizeTokenAmount(this.state.inputValue[this.state.action],this.state.oldContractTokenDecimals)) : this.functionsUtil.integerValue(this.state.oldContractBalance);\n        // const toMigrate =  this.functionsUtil.normalizeTokenAmount('1',this.state.oldContractTokenDecimals).toString(); // TEST AMOUNT\n\n        let _skipRebalance = typeof this.props.tokenConfig.skipMintForDeposit !== 'undefined' ? this.props.tokenConfig.skipMintForDeposit : this.functionsUtil.getGlobalConfig(['contract','methods','migrate','skipRebalance']);\n\n        // Mint if someone mint over X amount\n        let minAmountForRebalance = null;\n        \n        if (_skipRebalance){\n\n          // Check if the amount is over a certain amount to rebalance the pool\n          if (useMetaTx){\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalanceMetaTx']);\n          } else {\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalance']);\n          }\n\n          if (minAmountForRebalance){\n            const amountToDeposit = await this.functionsUtil.convertTokenBalance(oldIdleTokens,this.props.selectedToken,this.props.tokenConfig,false);\n            if (amountToDeposit.gte(this.functionsUtil.BNify(minAmountForRebalance))){\n              _skipRebalance = false;\n            }\n          }\n        }\n\n        let migrationParams = this.props.migrationParams ? this.props.migrationParams : [toMigrate,this.props.tokenConfig.migration.oldContract.address,this.props.tokenConfig.idle.address,this.props.tokenConfig.address,_skipRebalance];\n\n        if (typeof migrationParams === 'function'){\n          migrationParams = migrationParams(toMigrate);\n        }\n\n        // Check if Biconomy is enabled\n        if (useMetaTx){\n          const functionSignature = migrationContract.methods[migrationMethod](...migrationParams).encodeABI();\n          this.functionsUtil.sendBiconomyTxWithPersonalSign(migrationContractInfo.name, functionSignature, callbackMigrate, callbackReceiptMigrate);\n          // this.functionsUtil.sendBiconomyTx(migrationContractInfo.name, migrationContractInfo.address, functionSignature, callbackMigrate, callbackReceiptMigrate);\n        } else {\n          const permitContract = this.functionsUtil.getContractByName(this.props.tokenConfig.name);\n          const functionInfo = migrationContractInfo.functions.find( f => f.name === migrationMethod );\n          if (this.props.usePermit && permitContract){\n            this.functionsUtil.sendTxWithPermit(this.props.tokenConfig.name, this.props.account, migrationContractInfo.name, functionInfo.permitName, migrationParams, callbackMigrate, callbackReceiptMigrate, callbackPermit);\n          } else {\n            // Send migration tx\n            this.functionsUtil.contractMethodSendWrapper(migrationContractInfo.name, migrationMethod, migrationParams, callbackMigrate, callbackReceiptMigrate);\n          }\n        }\n\n        // debugger;\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            migrate:{\n              txHash:null,\n              loading:true\n            }\n          }\n        }));\n      // }\n    }\n\n    return false;\n  }\n\n  render() {\n\n    if (!this.props.tokenConfig || !this.props.selectedToken){\n      return null;\n    }\n\n    const contractApproved = this.props.usePermit || this.state.migrationContractApproved;\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationEnabled = batchMigrationInfo.enabled && typeof batchMigrationInfo.props.availableTokens[this.props.tokenConfig.idle.token] !== 'undefined';\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    // console.log('contractApproved',contractApproved,this.props.usePermit,this.state.migrationContractApproved);\n\n    const SkipMigrationComponent = (props) => (\n      <DashboardCard\n        cardProps={{\n          pt:2,\n          pb:3,\n          px:2,\n          mb:2,\n          display:'flex',\n          alignItems:'center',\n          flexDirection:'column',\n          justifyContent:'center',\n          mt:this.state.skipMigration ? 3 : 2,\n        }}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={'FastForward'}\n          />\n        </Flex>\n        <Checkbox\n          required={false}\n          checked={this.state.skipMigration}\n          label={`Skip migration and deposit in Idle v4`}\n          onChange={ e => this.toggleSkipMigration(e.target.checked) }\n        />\n      </DashboardCard>\n    );\n\n    const biconomyEnabled = this.functionsUtil.getGlobalConfig(['network','providers','biconomy','enabled']) && !this.state.biconomyLimitReached;\n\n    return (\n      this.state.loading && this.props.account ? (\n        <DashboardCard\n          cardProps={{\n            p:3,\n            mt:3,\n            minHeight:'195px',\n            style:{\n              display:'flex',\n              alignItems:'center',\n              justifyContent:'center'\n            }\n          }}\n        >\n          <FlexLoader\n            flexProps={{\n              flexDirection:'row'\n            }}\n            loaderProps={{\n              size:'30px'\n            }}\n            textProps={{\n              ml:2\n            }}\n            text={'Checking migration...'}\n          />\n        </DashboardCard>\n      ) : (\n        (this.state.migrationEnabled && !this.state.skipMigration) ? (\n          <Box width={1}>\n            {\n              !this.props.isMigrationTool &&\n              <Flex\n                mt={3}\n                flexDirection={'column'}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  >\n                    <Icon\n                      size={'2.3em'}\n                      color={'cellText'}\n                      name={ this.props.isMigrationTool ? 'SwapHoriz' : 'Warning' }\n                    />\n                    <Text\n                      mt={1}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      { this.props.migrateTextBefore !== null ? this.props.migrateTextBefore : null }\n                      { this.props.migrateTextBefore !== null &&\n                        <br />\n                      }\n                      You { !this.props.isMigrationTool ? 'still' : '' } have <strong>{this.state.oldIdleTokens.toFixed(4)} {this.state.oldTokenName} {this.state.oldIdleTokensConverted ? `(${this.state.oldIdleTokensConverted.toFixed(4)} ${this.props.selectedToken})` : ''}</strong> to migrate.<br />\n                      { this.props.migrateText !== null ? this.props.migrateText : 'Please use the section below to migrate or redeem your old tokens.' }\n                    </Text>\n                  </Flex>\n                </DashboardCard>\n              </Flex>\n            }\n            {\n              (this.props.showActions === undefined || this.props.showActions) && \n                <Flex\n                  mt={2}\n                  flexDirection={'column'}\n                >\n                  {\n                    !this.props.isMigrationTool && \n                      <SkipMigrationComponent />\n                  }\n                  <Text mb={2}>\n                    Choose the action:\n                  </Text>\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('migrate');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'migrate' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'migrate'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Migrate\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('redeem');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'redeem' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'redeem'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Redeem\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n            }\n            {\n              this.state.action === 'migrate' ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  flexDirection={'column'}\n                >\n                  {\n                    (batchMigrationEnabled && batchMigrationDepositEnabled && !this.props.isMigrationTool) &&\n                      <Flex\n                        mb={3}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <Link\n                          textAlign={'center'}\n                          hoverColor={'primary'}\n                          href={`/#/dashboard/tools/${batchMigrationInfo.route}/${this.props.tokenConfig.idle.token}`}\n                        >\n                          Gas fees too high? Save gas with our Batch Migrator!\n                        </Link>\n                        <Icon\n                          ml={1}\n                          size={'1em'}\n                          color={'primary'}\n                          name={'LocalGasStation'}\n                        />\n                      </Flex>\n                  }\n                  {\n                    contractApproved ? (\n                      this.state.processing.migrate.loading ? (\n                        <Flex\n                          mt={3}\n                          flexDirection={'column'}\n                        >\n                          <TxProgressBar\n                            {...this.props}\n                            hash={this.state.processing.migrate.txHash}\n                            endMessage={`Finalizing migration request...`}\n                            cancelTransaction={this.cancelTransaction.bind(this)}\n                            waitText={ this.props.waitText ? this.props.waitText : 'Migration estimated in'}\n                            sendingMessage={ this.props.biconomy && this.state.metaTransactionsEnabled ? 'Sending meta-transaction...' : 'Sending transaction...' }\n                          />\n                        </Flex>\n                      ) : this.props.showBalanceSelector ? (\n                        <Flex\n                          mt={1}\n                          flexDirection={'column'}\n                        >\n                          <Flex\n                            mb={3}\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              mb={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                            >\n                              {\n                                this.props.balanceSelectorInfo && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                  >\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      textAlign={'left'}\n                                      style={{\n                                        maxWidth:'100%',\n                                        overflow:'hidden',\n                                        whiteSpace:'nowrap',\n                                        textOverflow:'ellipsis'\n                                      }}\n                                      color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                                    >\n                                      {this.props.balanceSelectorInfo.text}\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                              {\n                                this.state.oldIdleTokens && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'flex-end'}\n                                  >\n                                    <Link\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      color={'dark-gray'}\n                                      textAlign={'right'}\n                                      hoverColor={'copyColor'}\n                                      onClick={ (e) => this.setFastBalanceSelector(100) }\n                                    >\n                                      Balance: {this.state.oldIdleTokens.toFixed(6)} {this.props.selectedToken}\n                                    </Link>\n                                  </Flex>\n                                )\n                              }\n                            </Flex>\n                            <Input\n                              min={0}\n                              type={\"number\"}\n                              required={true}\n                              height={'3.4em'}\n                              borderRadius={2}\n                              fontWeight={500}\n                              borderColor={'cardBorder'}\n                              backgroundColor={'cardBg'}\n                              boxShadow={'none !important'}\n                              placeholder={'Insert amount'}\n                              onChange={this.changeInputValue.bind(this)}\n                              border={`1px solid ${this.props.theme.colors.divider}`}\n                              value={this.state.inputValue[this.state.action] ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toFixed() : ''}\n                            />\n                            <Flex\n                              mt={2}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              {\n                                [25,50,75,100].map( percentage => (\n                                  <FastBalanceSelector\n                                    percentage={percentage}\n                                    key={`selector_${percentage}`}\n                                    onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                                    isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(percentage)}\n                                  />\n                                ))\n                              }\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            mt={1}\n                            width={1}\n                            alignItems={'center'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      width:[1,0.5],\n                                      disabled:this.state.buttonDisabled,\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                          </Flex>\n                        </Flex>\n                      ) : (\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:2,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            {\n                              this.props.migrationImage ? (\n                                <Image\n                                  {...this.props.migrationImage}\n                                />\n                              ) : (\n                                <Icon\n                                  size={'2.3em'}\n                                  color={'cellText'}\n                                  name={ this.props.migrationIcon ? this.props.migrationIcon : (this.props.isMigrationTool ? 'SwapHoriz' : 'Repeat') }\n                                />\n                              )\n                            }\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                this.props.migrationText ? (\n                                  <Text.span\n                                    migrationTextProps={this.props.migrationTextProps}\n                                    dangerouslySetInnerHTML={{\n                                      __html:this.props.migrationText\n                                    }}\n                                  >\n                                  </Text.span>\n                                ) : (\n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    You are one step away from the migration of your { this.props.isMigrationTool ? this.state.oldIdleTokens.toFixed(4) : 'old' } {this.state.oldTokenName}{ this.props.isMigrationTool ? ` into the Idle ${this.props.tokenConfig.token} ${this.props.selectedStrategy} strategy` : '' }!\n                                  </Text.span>\n                                )\n                              }\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                            {\n                              biconomyEnabled && \n                                <Flex\n                                  py={3}\n                                  px={2}\n                                  mt={2}\n                                  width={1}\n                                  borderRadius={2}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                  backgroundColor={'dashboardBg'}\n                                  border={`1px solid ${this.props.theme.colors.boxBorder}`}\n                                >\n                                  <Text\n                                    mt={1}\n                                    fontSize={1}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    {\n                                      this.props.biconomy ?\n                                        `Meta-Transactions allow you to migrate without spending a dime! But, if you are stuck, please disable it and try again.`\n                                      :\n                                        'Your wallet does not support Meta-transactions, you are still able to migrate with a normal transaction.'\n                                    }\n                                  </Text>\n                                  {\n                                  this.props.biconomy &&\n                                    <Checkbox\n                                      mt={2}\n                                      required={false}\n                                      label={\"Migrate with Meta-Transaction\"}\n                                      checked={this.state.metaTransactionsEnabled}\n                                      onChange={ e => this.toggleMetaTransactionsEnabled(e.target.checked) }\n                                    />\n                                  }\n                                </Flex>\n                            }\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      mt:3,\n                                      width:[1,0.5],\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      )\n                    ) : this.state.processing.approve.loading ? (\n                      <Flex\n                        mt={3}\n                        flexDirection={'column'}\n                      >\n                        <TxProgressBar\n                          {...this.props}\n                          waitText={`Approve estimated in`}\n                          hash={this.state.processing.approve.txHash}\n                          endMessage={`Finalizing approve request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      </Flex>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          mt:2,\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            size={'2.3em'}\n                            name={'LockOpen'}\n                            color={'cellText'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              this.props.approveText ? this.props.approveText : `To migrate your ${ !this.props.isMigrationTool ? 'old' : '' } ${this.state.oldTokenName} you need to approve our Smart-Contract first.`\n                            }\n                          </Text>\n                          <RoundButton\n                            buttonProps={{\n                              mt:3,\n                              width:[1,1/2]\n                            }}\n                            handleClick={this.approveMigration.bind(this)}\n                          >\n                            Approve\n                          </RoundButton>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  }\n                </Flex>\n              ) : (\n                !this.state.processing[this.state.action].loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <Input\n                      min={0}\n                      type={\"number\"}\n                      required={true}\n                      height={'3.4em'}\n                      borderRadius={2}\n                      fontWeight={500}\n                      className={styles.input}\n                      borderColor={'cardBorder'}\n                      backgroundColor={'cardBg'}\n                      boxShadow={'none !important'}\n                      onChange={this.changeInputValue.bind(this)}\n                      border={`1px solid ${this.props.theme.colors.divider}`}\n                      placeholder={`Insert ${this.state.oldTokenName} amount`}\n                      value={this.state.inputValue[this.state.action] !== null ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toString() : ''}\n                    />\n                    <Flex\n                      mt={3}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'space-between'}\n                    >\n                      <FastBalanceSelector\n                        percentage={25}\n                        onMouseDown={()=>this.setFastBalanceSelector(25)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(25)}\n                      />\n                      <FastBalanceSelector\n                        percentage={50}\n                        onMouseDown={()=>this.setFastBalanceSelector(50)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(50)}\n                      />\n                      <FastBalanceSelector\n                        percentage={75}\n                        onMouseDown={()=>this.setFastBalanceSelector(75)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(75)}\n                      />\n                      <FastBalanceSelector\n                        percentage={100}\n                        onMouseDown={()=>this.setFastBalanceSelector(100)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(100)}\n                      />\n                    </Flex>\n                    <Flex\n                      mt={3}\n                      justifyContent={'center'}\n                    >\n                      <RoundButton\n                        buttonProps={{\n                          width:[1,1/2],\n                          disabled:this.state.buttonDisabled,\n                          style:{\n                            textTransform:'capitalize'\n                          }\n                        }}\n                        handleClick={this.state.buttonDisabled ? null : this.executeAction.bind(this) }\n                      >\n                        {this.state.action}\n                      </RoundButton>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mt={4}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      {...this.props}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      hash={this.state.processing[this.state.action].txHash}\n                      endMessage={`Finalizing ${this.state.action} request...`}\n                      waitText={`${this.functionsUtil.capitalize(this.state.action)} estimated in`}\n                    />\n                  </Flex>\n                )\n              )\n            }\n          </Box>\n        ) : (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'column'}\n            justifyContent={'center'}\n          >\n            {\n              (!this.props.isMigrationTool && this.state.migrationEnabled) && \n                <SkipMigrationComponent />\n            }\n            {\n              this.props.children ? this.props.children : null\n            }\n          </Flex>\n        )\n      )\n    )\n  }\n}\n\nexport default Migrate;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass ChartCustomTooltipRow extends Component {\n\n  async componentWillMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps,prevState){\n\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default ChartCustomTooltipRow;\n","import React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport { Flex, Link, Icon, Text } from \"rimble-ui\";\nimport CustomField from '../CustomField/CustomField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass CustomList extends Component {\n\n  state = {\n    page:1,\n    rowsPerPage:5,\n    totalPages:null,\n    processedRows:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.processRows();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const rowsChanged = JSON.stringify(prevProps.rows) !== JSON.stringify(this.props.rows);\n\n    if (rowsChanged){\n      this.setState({\n        page:1,\n      },()=>{\n        this.processRows();\n      })\n      return false;\n    }\n    const pageChanged = prevState.page !== this.state.page;\n    if (pageChanged){\n      this.processRows();\n    }\n  }\n\n  processRows = (page=null) => {\n    page = page ? page : this.state.page;\n\n    const totalRows = this.props.rows.length;\n    const totalPages = Math.ceil(totalRows/this.state.rowsPerPage);\n    \n    let processedRows = [];\n    if (this.props.paginationEnabled){\n      this.props.rows.forEach((row, i) => {\n        if (i>=((page-1)*this.state.rowsPerPage) && i<((page-1)*this.state.rowsPerPage)+this.state.rowsPerPage) {\n          processedRows.push(row);\n        }\n      });\n    } else {\n      processedRows = this.props.rows;\n    }\n\n    this.setState({\n      totalPages,\n      processedRows\n    });\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);this.processRows(page);\n    this.setState({\n      page\n    });\n  }\n\n  render() {\n\n    return (\n      <Flex id=\"custom-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"custom-list\" flexDirection={'column'}>\n          {\n            this.state.processedRows.map( (row,rowIndex) => {\n              return (\n                <TableRow\n                  row={row}\n                  {...this.props}\n                  key={`asset-${rowIndex}`}\n                  fieldComponent={CustomField}\n                  rowId={`asset-col-${rowIndex}`}\n                  cardId={`asset-card-${rowIndex}`}\n                />\n              );\n            })\n          }\n        </Flex>\n        {\n          this.props.paginationEnabled && (\n            <Flex\n              height={'50px'}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'flex-end'}\n              id={'transactions-list-pagination'}\n            >\n              <Flex mr={3}>\n                <Link mr={1} onClick={ e => this.prevPage(e) }>\n                  <Icon\n                    name={'KeyboardArrowLeft'}\n                    size={'2em'}\n                    color={ this.state.page>1 ? 'arrowActive' : 'arrowInactive' }\n                  />\n                </Link>\n                <Link onClick={ e => this.nextPage(e) }>\n                  <Icon\n                    name={'KeyboardArrowRight'}\n                    size={'2em'}\n                    color={ this.state.page<this.state.totalPages ? 'arrowActive' : 'arrowInactive' }\n                  />\n                </Link>\n              </Flex>\n              <Flex alignItems={'center'}>\n                <Text \n                  fontSize={1}\n                  fontWeight={3}\n                  color={'cellText'}\n                >\n                  Page {this.state.page} of {this.state.totalPages}\n                </Text>\n              </Flex>\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default CustomList;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport AssetField from '../AssetField/AssetField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass AssetsList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    return (\n      <Flex id=\"assets-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"assets-list\" flexDirection={'column'}>\n          {\n            enabledTokens.map(token => {\n              const tokenConfig = this.props.availableTokens ? this.props.availableTokens[token] : null;\n              if (!tokenConfig){\n                return null;\n              }\n              return (\n                <TableRow\n                  token={token}\n                  {...this.props}\n                  key={`asset-${token}`}\n                  tokenConfig={tokenConfig}\n                  rowId={`asset-col-${token}`}\n                  cardId={`asset-card-${token}`}\n                  fieldComponent={this.props.fieldComponent || AssetField}\n                />\n              );\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default AssetsList;\n","import Footer from '../Footer/Footer';\nimport styles from './Tos.module.scss';\nimport React, { Component } from 'react';\nimport { Box, Flex, Text, Heading } from 'rimble-ui'\n\nclass Tos extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} pb={[3,5]} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} pb={3} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.2em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                Terms of Service\n              </Heading.h1>\n              <Heading.h2 fontWeight={'400'} lineHeight={['1.4em', '2em']} fontSize={[2,3]} textAlign={'center'} color={'white'}>\n                Updated: November 28, 2019\n              </Heading.h2>\n            </Flex>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"70em\"]} mx={'auto'} textAlign={'center'}>\n              <Box className={styles.textContainer} alignItems={'center'} width={'100%'} minHeight={['auto','20em']} backgroundColor={'white'} color={'dark-gray'} p={[3,4]} boxShadow={'0 0 25px 5px rgba(102, 139, 255, 0.7)'} borderRadius={'15px'} style={{position:'relative'}}>\n                <Box id={'first-paragraph'} pb={3}>\n                  <Text pb={3}>\n                    These terms of service, together with any documents and additional terms they expressly incorporate by reference (collectively, these “Terms”), are entered into between Idle Labs Inc. (“Idle,” “we,” “us” and “our”) and you or the company or other legal entity you represent (“you” or “your”), and constitute a binding legal agreement.\n                  </Text>\n                  <Text pb={3}>\n                    Please read these Terms carefully, as these Terms govern your use of our Portal and our Services, and expressly cover your rights and obligations, and our disclaimers and limitations of legal liability, relating to such use. By accessing or using the Interface, you signify that you have read, understand, and agree to be bound by and to comply with these Terms, including the mandatory arbitration provision in Section 12. If you do not agree to these Terms, you must not access or use our Portal or the Services.\n                  </Text>\n                  <Text pb={3}>\n                    You must be able to form a legally binding contract online either on behalf of a company or as an individual. Accordingly, you represent that: (a) if you are agreeing to these Terms on behalf of a company or other legal entity, you have the legal authority to bind the company or other legal entity to these Terms; and (b) you are at least 18 years old (or the age of majority where you reside, whichever is older), can form a legally binding contract online, and have the full, right, power and authority to enter into and to comply with the obligations under these Terms.\n                  </Text>\n                  <Text pb={3}>\n                    In addition to the foregoing, you also represent and warrant that you are not a citizen or resident of a state, country, territory or other jurisdiction that is embargoed by the United States or where your use of the Portal or the Services would be illegal or otherwise violate any applicable law.  Specifically, you represent that you are not located in, organized in, or a resident of New York, Cuba, Iran, Syria, North Korea, the Crimea region, Venezuela, or any other jurisdiction where Applicable law prohibits you from accessing or using the Services; and you represent that you are not be named on the Office of Foreign Asset Control of the U.S. Department of the Treasury’s Specially Designated and Blocked Persons List.\n                   </Text>\n                  <Text>\n                    Please carefully review the disclosures and disclaimers set forth in Section 9 in their entirety before using any software developed by Idle. The information in Section 9 provides important details about the legal obligations associated with your use of the Idle open-source software. By accessing or using our Portal or our Services, you agree that Idle is a provider of open-source software that optimizes the allocation of your digital assets to third-party decentralized web protocols.  Idle is not affiliated with and has no control over these third-party protocols and is not responsible for any losses that occur as a result of interconnection with these third-party protocols. The Protocol is open-source software deployed on the Ethereum Blockchain.  While Idle developed and deployed the Protocol, the software operates in an autonomous fashion on a decentralized network and, as a result, Idle has no control over user transactions. You accordingly acknowledge that you use the Services at your own risk and agree that Idle will not be responsible for any losses that occur as a result of your use of the Services.\n                  </Text>\n                </Box>\n\n                <Box id={'key-definitions'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    1. KEY DEFINITIONS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    For the purpose of these Terms, the following capitalized terms shall have the following meanings:\n                  </Text>\n\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>1.1. “Affiliate”</strong> means, with respect to a party to these Terms, any legal entity that, directly or indirectly controls, is controlled by, or is under common control with such party.\n                    </li>\n                    <li>\n                      <strong>1.2. “Applicable Law”</strong> means any domestic or foreign law, rule, statute, regulation, by-law, order, protocol, code, decree, or other directive, requirement or guideline, published or in force which applies to or is otherwise intended to govern or regulate any person, property, transaction, activity, event or other matter, including any rule, order, judgment, directive or other requirement or guideline issued by any Governmental Authority having jurisdiction over Idle, you, the Portal or the Services, or as otherwise duly enacted, enforceable by law, the common law or equity.\n                    </li>\n                    <li>\n                      <strong>1.3. “Ether”</strong> means the Ethereum Blockchain utility token that may be used to purchase computational resources to run decentralized applications or perform actions on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.4. “Ethereum Address”</strong> means the unique public key digital asset identifier that points to an Ethereum-compatible wallet to which Ether may be sent or stored.\n                    </li>\n                    <li>\n                      <strong>1.5. “Ethereum Blockchain”</strong> means the underlying blockchain infrastructure which the Portal leverages to perform portions of the Services.\n                    </li>\n                    <li>\n                      <strong>1.6. “Governmental Authority”</strong> includes any domestic or foreign federal, provincial or state, municipal, local or other governmental, regulatory, judicial or administrative authority.\n                    </li>\n                    <li>\n                      <strong>1.7. “Portal”</strong> means the Idle site located at https://idle.finance and all associated sites linked thereto by Idle and its Affiliates, which includes, for certainty, Idle’s decentralized application layer on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.8. “Protocol”</strong> means the Idle decentralized web protocol, which optimizes the allocation of users’ digital assets to third-party decentralized web protocols.\n                    </li>\n                    <li>\n                      <strong>1.9. “Token”</strong> means an “ERC-20” digital asset issued on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.10. “Services”</strong> has the meaning set out in Section 3.1.\n                    </li>\n                    <li>\n                      <strong>1.11. “Third-Parties Services”</strong> means other services (such as fiat-to-token gateway, or token-to-token swap) provided by third parties services running on Ethereum Blockchain.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'modifications-terms'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    2. MODIFICATIONS TO THESE TERMS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    We reserve the right, in our sole discretion, to modify these Terms from time to time. If we make changes, we will provide you with notice of such changes, such as by sending an email, providing a notice through our Services or updating the date at the top of these Terms. Unless we say otherwise in our notice, any and all such modifications are effective immediately, and your continued use of our Services after we provide such notice will confirm your acceptance of the changes. If you do not agree to the amended Terms, you must stop using our Services.\n                  </Text>\n                </Box>\n\n                <Box id={'services'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    3. SERVICES\n                  </Heading.h3>\n                </Box>\n\n                <ul className={styles.list}>\n                  <li>\n                    <strong>3.1. Services</strong><br />\n                    The primary purpose of the Portal and Protocol is to enable users to interact with smart contracts that allocate their digital assets to third-party decentralized web protocols and enable users to receive an optimized allocation of digital assets from these protocols in return (the “Services”).\n                  </li>\n                  <li>\n                    <strong>3.2. Fees</strong><br />\n                    Use of the Services is provided to you at no charge. Fees are charged on-top of Third-Parties.\n                  </li>\n                  <li>\n                    <strong>3.3. Ethereum Gas Charges</strong><br />\n                    Some Services involve the use of the Ethereum Blockchain, which may require that you pay a fee, commonly known as “Ethereum Gas Charges,” for the computational resources required to perform a transaction on the Ethereum Blockchain. You acknowledge and agree that Idle has no control over: (a) any Ethereum Blockchain transactions; (b) the method of payment of any Ethereum Gas Charges; or (c) any actual payments of Ethereum Gas Charges. Accordingly, you must ensure that you have a sufficient balance of Ether stored at your Ethereum Address to complete any transaction on the Ethereum Blockchain before initiating such Ethereum Blockchain transaction. We will make reasonable efforts to notify you of any Ethereum Gas Charges before initiating any Services that require the use of the Ethereum Blockchain.\n                  </li>\n                  <li>\n                    <strong>3.4. Conditions and Restrictions</strong><br />\n                    We may, at any time and in our sole discretion, restrict your access to, or otherwise impose conditions or restrictions upon your use of, the Services or the Portal, with or without prior notice.\n                  </li>\n                  <li>\n                    <strong>3.5. No Broker, Legal or Fiduciary Relationship</strong><br />\n                    Idle is not your broker, lawyer, intermediary, agent, or advisor and has no fiduciary relationship or obligation to you regarding any other decisions or activities that you effect when using the Portal or the Services. Neither our communications nor any information that we provide to you is intended as, or shall be considered or construed as, advice.\n                  </li>\n                  <li>\n                    <strong>3.6. Your Responsibilities</strong><br />\n                    As a condition to accessing or using the Services or the Portal, you shall:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>only use the Services and the Portal for lawful purposes and in accordance with these Terms;</li>\n                      <li>ensure that, at all times, all information that you provide on the Portal is current, complete and accurate; and maintain the security and confidentiality of your Ethereum Address.</li>\n                      <li>shall be responsible for payment of all applicable taxes, if any, to which the Services might be subject and any and all other taxes which may apply to you.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.7. Unacceptable Use or Conduct</strong><br />\n                    As a condition to accessing or using the Portal or the Services, you will not:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>violate any Applicable Law, including, without limitation, any relevant and applicable anti-money laundering and anti-terrorist financing laws, such as the Bank Secrecy Act, each as may be amended;</li>\n                      <li>infringe on or misappropriate any contract, intellectual property or other third-party right, or commit a tort while using the Portal or the Services;</li>\n                      <li>use the Services in any manner that could interfere with, disrupt, negatively affect, or inhibit other users from fully enjoying the Services, or that could damage, disable, overburden, or impair the functioning of the Services in any manner;</li>\n                      <li>attempt to circumvent any content filtering techniques or security measures that Idle employs on the Portal, or attempt to access any service or area of the Portal or the Services that you are not authorized to access;</li>\n                      <li>use the Services to pay for, support, or otherwise engage in any illegal gambling activities, fraud, money-laundering, or terrorist activities, or other illegal activities;</li>\n                      <li>use any robot, spider, crawler, scraper, or other automated means or interface not provided by us, to access the Services or to extract data;</li>\n                      <li>introduce any malware, virus, Trojan horse, worm, logic bomb, drop-dead device, backdoor, shutdown mechanism or other harmful material into the Portal or the Services;</li>\n                      <li>provide false, inaccurate, or misleading information;</li>\n                      <li>post content or communications on the Portal that are, in our sole discretion, libelous, defamatory, profane, obscene, pornographic, sexually explicit, indecent, lewd, vulgar, suggestive, harassing, hateful, threatening, offensive, discriminatory, bigoted, abusive, inflammatory, fraudulent, deceptive or otherwise objectionable;</li>\n                      <li>post content on the Portal containing unsolicited promotions, political campaigning, or commercial messages or any chain messages or user content designed to deceive or trick the user of the Service;</li>\n                      <li>use the Portal or the Services from a jurisdiction that we have, in our sole discretion, or a relevant Governmental Authority has determined is a jurisdiction where the use of the Portal or the Services is prohibited; or</li>\n                      <li>encourage or induce any third party to engage in any of the activities prohibited under this Section 3.7.</li>\n                    </ul>\n                  </li>\n\n                  <li>\n                    <strong>3.8. Your Assumption of Risks</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>have the necessary technical expertise and ability to review and evaluate the security, integrity and operation of any transactions that you engage in through the Protocol;</li>\n                      <li>have the knowledge, experience, understanding, professional advice and information to make your own evaluation of the merits, risks and applicable compliance requirements under Applicable Law of engaging in transactions through the Protocol;</li>\n                      <li>acknowledge and understand that the Protocol allocates your digital assets to third-party decentralized web protocols to facilitate your lending and borrowing through these third-party protocols and that Idle is not responsible or liable for these transactions or the operation of these third-party protocols;</li>\n                      <li>know, understand and accept the risks associated with your Ethereum Address, the Ethereum Blockchain, Ether and Tokens; and</li>\n                      <li>accept the risks associated with lending, borrowing and trading Ether and Tokens, and are responsible for conducting your own independent analysis of the risks specific to any Ether and Tokens lent, borrowed or traded by you and your use of the Services.</li>\n                    </ul>\n                    You hereby assume, and agree that Idle will have no responsibility or liability for, such risks. You hereby irrevocably waive, release and discharge all claims, whether known or unknown to you, against Idle, its affiliates and their respective shareholders, members, directors, officers, employees, agents and representatives related to any of the risks set forth herein.\n                  </li>\n                  <li>\n                    <strong>3.9. Additional Representations</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>are not using the Protocol to engage in the leveraged, margined, or financed purchase of digital assets; and</li>\n                      <li>are using the Protocol for the purpose of accessing third-party decentralized web protocols.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.10. Your Content</strong><br />\n                    You hereby grant to us a royalty-free, fully paid-up, sublicensable, transferable, perpetual, irrevocable, non-exclusive, worldwide license to use, copy, modify, create derivative works of, display, perform, publish and distribute, in any form, medium or manner, any content that is available to other users via the Idle Platform as a result of your use of the Portal (collectively, “Your Content”) through your use of the Services or the Portal, including, without limitation, for promoting Idle (or its Affiliates), the Services or the Portal. You represent and warrant that: (a) you own Your Content or have the right to grant the rights and licenses in these Terms; and (b) Your Content and our use of Your Content, as licensed herein, does not and will not violate, misappropriate or infringe on any third party’s rights.\n                  </li>\n                </ul>\n\n                <Box id={'privacy-policy'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    4. PRIVACY POLICY\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please refer to our privacy policy available at https://idle.finance/privacy-policy for information about how we collect, use, share and otherwise process information about you.\n                  </Text>\n                </Box>\n\n                <Box id={'proprietary-rights'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    5. PROPRIETARY RIGHTS\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>5.1. Ownership of Services; License to Services</strong><br />\n                      Excluding any open source software (as further described in Section 5.2) or third-party software that the Portal or the Services incorporates, as between you and Idle, Idle owns the Portal and the Services, including all technology, content and other materials used, displayed or provided on the Portal or in connection with the Services (including all intellectual property rights subsisting therein), and hereby grants you a limited, revocable, transferable, license to access and use those portions of the Portal and the Services that are proprietary to Idle.\n                    </li>\n                    <li>\n                      <strong>5.2. Idle License; Open Source Software License; Limitations</strong><br />\n                      The Portal and the Services are governed by the most recent version of the open source license commonly known as the Apache 2.0 a copy of which (as it applies to the Portal and the Services) can be found at:  https://apache.org/licenses/LICENSE-2.0 (as of the date these Terms were last updated) and any other applicable licensing terms for the Portal and the Services in these Terms (collectively, the “Idle License”). You acknowledge that the Portal or the Services may use, incorporate or link to certain open-source components and that your use of the Portal or Services is subject to, and you will comply with any, applicable open-source licenses that govern any such open-source components (collectively, “Open-Source Licenses”). Without limiting the generality of the foregoing, you may not: (a) resell, lease, lend, share, distribute or otherwise permit any third party to use the Portal or the Services; (b) use the Portal or the Services for time-sharing or service bureau purposes; or (c) otherwise use the Portal or the Services in a manner that violates the Idle License or any other Open-Source Licenses.\n                    </li>\n                    <li>\n                      <strong>5.3. Trademarks</strong><br />\n                      Any of Idle’s product or service names, logos, and other marks used in the Portal or as a part of the Services, including Idle's name and logo are trademarks owned by Idle, its Affiliates or its applicable licensors. You may not copy, imitate or use them without Idle’s (or the applicable licensor’s) prior written consent.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'changes-suspension-termination'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    6. CHANGES; SUSPENSION; TERMINATION\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>6.1. Changes to Services</strong><br />\n                      We may, at our sole discretion, from time to time and with or without prior notice to you, modify, suspend or disable, temporarily or permanently, the Services, in whole or in part, for any reason whatsoever, including, but not limited to, as a result of a security incident.\n                    </li>\n                    <li>\n                      <strong>6.2. No Liability</strong><br />\n                      We will not be liable for any losses suffered by you resulting from any modification to any Services or from any suspension or termination, for any reason, of your access to all or any portion of the Portal or the Services.\n                    </li>\n                    <li>\n                      <strong>6.3. Survival</strong><br />\n                      The following sections will survive any termination of your access to the Portal or the Services, regardless of the reasons for its expiration or termination, in addition to any other provision which by law or by its nature should survive: Sections 1, 4, 5, 6.3, and 7-14.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'electronic-notices'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    7. ELECTRONIC NOTICES\n                  </Heading.h3>\n                  <Text py={2}>\n                    You consent to receive all communications, agreements, documents, receipts, notices, and disclosures electronically (collectively, our “Communications”) that we provide in connection with these Terms or any Services. You agree that we may provide our Communications to you by posting them on the Portal or by emailing them to you at the email address you provide in connection with using the Services, if any. You should maintain copies of our Communications by printing a paper copy or saving an electronic copy. You may also contact our support team to request additional electronic copies of our Communications by filing a support request at info@idle.finance.\n                  </Text>\n                </Box>\n\n                <Box id={'indemnification'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    8. INDEMNIFICATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    You will defend, indemnify, and hold harmless us, our Affiliates, and our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers and contractors (collectively, “Indemnified Parties”) from any claim, demand, lawsuit, action, proceeding, investigation, liability, damage, loss, cost or expense, including without limitation reasonable attorneys’ fees, arising out of or relating to (a) your use of, or conduct in connection with, the Portal, Services or Margin Tokens; (b) Ethereum Blockchain assets associated with your Ethereum Address; (c) any feedback or user content you provide to the Portal, if any; (d) your violation of these Terms; or (e) your infringement or misappropriation of the rights of any other person or entity. If you are obligated to indemnify any Indemnified Party, Idle (or, at its discretion, the applicable Indemnified Party) will have the right, in its sole discretion, to control any action or proceeding and to determine whether Idle wishes to settle, and if so, on what terms.\n                  </Text>\n                </Box>\n\n                <Box id={'disclosures-disclaimers'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    9. Disclosures; DISCLAIMERS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Idle is a developer of open-source software. Idle does not operate a digital asset exchange platform or execute peer-to-peer transactions through its Protocol and therefore has no oversight, involvement, or control with respect to your transactions, which are executed through third-party protocols and the Ethereum Blockchain.  The Protocol is an autonomous decentralized web protocol deployed to the Ethereum Blockchain that operates in a disintermediated fashion, and, as such, Idle does not participate in any of these transactions.  In each instance, when you interact with the Protocol, you are interacting with a smart contract that transfers your digital assets to a third-party protocol.\n                  </Text>\n                  <Text py={2}>\n                    [Under U.S. federal law, unless you are an “eligible contract participant” as defined in 7 U.S.C. § 1a(18), your transaction must settle within 28 days. Individuals who do not have more than $10 million invested on a discretionary basis (or $5 million if the transaction is for the purpose of managing risk associated with an asset owned or liability incurred, or reasonably likely to be owned or incurred) are not eligible contract participants and may not enter into transactions using the Idle open-source software that do not result in actual delivery of digital assets within 28 days.]\n                  </Text>\n                  <Text py={2}>\n                    You are responsible for complying with all laws and regulations applicable to your transactions, including, but not limited to, the Commodity Exchange Act and the regulations promulgated thereunder by the U.S. Commodity Futures Trading Commission (“CFTC”), and the federal securities laws and the regulations promulgated thereunder by the U.S. Securities and Exchange Commission (“SEC”).\n                  </Text>\n                  <Text py={2}>\n                    You understand that Idle is not registered or licensed by the CFTC, SEC, the Financial Crimes Enforcement Network or any financial regulatory authority. No financial regulatory authority has reviewed or approved the use of the Idle open-source software. This website and the Idle open-source software do not constitute advice or a recommendation concerning any commodity, security or other asset. Idle is not acting as an investment adviser or commodity trading adviser to any person.\n                  </Text>\n                  <Text py={2}>\n                    Idle does not own or control the underlying software protocols that enable the Protocol to function. In general, the underlying protocols are open-source and anyone can use, copy, modify, and distribute them. Idle is not responsible for operation of the underlying protocols, and Idle makes no guarantee of their functionality, security, or availability.\n                  </Text>\n                  <Text py={2}>\n                    To the maximum extent permitted under Applicable Law, the Portal and the Services (and any of their content or functionality) provided by or on behalf of us are provided on an “AS IS” and “AS AVAILABLE” basis, and we expressly disclaim, and you hereby waive, any representations, conditions or warranties of any kind, whether express or implied, legal, statutory or otherwise, or arising from statute, otherwise in law, course of dealing, or usage of trade, including, without limitation, the implied or legal warranties and conditions of merchantability, merchantable quality, quality or fitness for a particular purpose, title, security, availability, reliability, accuracy, quiet enjoyment and non-infringement of third party rights. Without limiting the foregoing, we do not represent or warrant that the Portal or the Services (including any data relating thereto) will be uninterrupted, available at any particular time or error-free. Further, we do not warrant that errors in the Portal or the Service are correctable or will be correctable.\n                  </Text>\n                  <Text py={2}>\n                    You acknowledge that your data on the Portal may become irretrievably lost or corrupted or temporarily unavailable due to a variety of causes, and agree that, to the maximum extent permitted under Applicable Law, we will not be liable for any loss or damage caused by denial-of-service attacks, software failures, viruses or other technologically harmful materials (including those which may infect your computer equipment), protocol changes by third party providers, Internet outages, force majeure events or other disasters, scheduled or unscheduled maintenance, or other causes either within or outside our control.\n                  </Text>\n                  <Text py={2}>\n                    The disclaimer of implied warranties contained herein may not apply if and to the extent such warranties cannot be excluded or limited under the Applicable Law of the jurisdiction in which you reside.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    10. EXCLUSION OF CONSEQUENTIAL AND RELATED DAMAGES\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall we (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) be liable for any incidental, indirect, special, punitive, consequential or similar damages or liabilities whatsoever (including, without limitation, damages for loss of data, information, revenue, goodwill, profits or other business or financial benefit) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any execution or settlement of a transaction, any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability, breach of warranties, or under any other theory of liability, and whether or not we have been advised of, knew of or should have known of the possibility of such damages and notwithstanding any failure of the essential purpose of these Terms or any limited remedy hereunder nor is Idle in any way responsible for the execution or settlement of transactions between users of Idle open-source software.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    11. LIMITATION OF LIABILITY\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall our aggregate liability (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability or other theory of liability exceed the amount of fees paid by you to us under these Terms, if any, in the twelve (12) month period immediately preceding the event giving rise to the claim for liability.\n                  </Text>\n                </Box>\n\n                <Box id={'dispute-resolution-arbitration'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    12. DISPUTE RESOLUTION AND ARBITRATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please read the following section carefully because it requires you to arbitrate certain disputes and claims with Idle and limits the manner in which you can seek relief from us, unless you opt out of arbitration by following the instructions set forth below. In addition, arbitration precludes you from suing in court or having a jury trial.\n                    You and Idle agree that any dispute arising out of or related to these Terms or our Services is personal to you and Idle and that any dispute will be resolved solely through individual action, and will not be brought as a class arbitration, class action or any other type of representative proceeding.\n                  </Text>\n                  <Text py={2}>\n                    Except for small claims disputes in which you or Idle seeks to bring an individual action in small claims court located in the county of your billing address or disputes in which you or Idle seeks injunctive or other equitable relief for the alleged unlawful use of intellectual property, you and Idle waive your rights to a jury trial and to have any dispute arising out of or related to these Terms or our Services resolved in court. Instead, for any dispute or claim that you have against Idle or relating in any way to the Services, you agree to first contact Idle and attempt to resolve the claim informally by sending a written notice of your claim (“Notice”) to Idle by email at info@idle.finance or by certified mail addressed to info@idle.finance. The Notice must (a) include your name, residence address, email address, and telephone number; (b) describe the nature and basis of the claim; (c) set forth the specific relief sought. Our notice to you will be similar in form to that described above. If you and Idle cannot reach an agreement to resolve the claim within thirty (30) days after such Notice is received, then either party may submit the dispute to binding arbitration administered by JAMS or, under the limited circumstances set forth above, in court. All disputes submitted to JAMS will be resolved through confidential, binding arbitration before one arbitrator. Arbitration proceedings will be held in New York City, New York, in accordance with the JAMS Streamlined Arbitration Rules and Procedures (“JAMS Rules”). The most recent version of the JAMS Rules are available on the JAMS website and are hereby incorporated by reference. You either acknowledge and agree that you have read and understand the JAMS Rules or waive your opportunity to read the JAMS Rules and waive any claim that the JAMS Rules are unfair or should not apply for any reason.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that these Terms affect interstate commerce and that the enforceability of this Section 12 will be substantively and procedurally governed by the Federal Arbitration Act, 9 U.S.C. § 1, et seq. (the “FAA”), to the maximum extent permitted by applicable law. As limited by the FAA, these Terms and the JAMS Rules, the arbitrator will have exclusive authority to make all procedural and substantive decisions regarding any dispute and to grant any remedy that would otherwise be available in court, including the power to determine the question of arbitrability. The arbitrator may conduct only an individual arbitration and may not consolidate more than one individual’s claims, preside over any type of class or representative proceeding or preside over any proceeding involving more than one individual.\n                  </Text>\n                  <Text py={2}>\n                    The arbitrator, Idle, and you will maintain the confidentiality of any arbitration proceedings, judgments and awards, including, but not limited to, all information gathered, prepared and presented for purposes of the arbitration or related to the dispute(s) therein. The arbitrator will have the authority to make appropriate rulings to safeguard confidentiality, unless the law provides to the contrary. The duty of confidentiality does not apply to the extent that disclosure is necessary to prepare for or conduct the arbitration hearing on the merits, in connection with a court application for a preliminary remedy or in connection with a judicial challenge to an arbitration award or its enforcement, or to the extent that disclosure is otherwise required by law or judicial decision.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that for any arbitration you initiate, you will pay the filing fee and Idle will pay the remaining JAMS fees and costs. For any arbitration initiated by Idle, Idle will pay all JAMS fees and costs. You and Idle agree that the state or federal courts of the State of New York and the United States sitting in New York City, New York have exclusive jurisdiction over any appeals and the enforcement of an arbitration award.\n                  </Text>\n                  <Text py={2}>\n                    Any claim arising out of or related to these Terms or our Services must be filed within one year after such claim arose; otherwise, the claim is permanently barred, which means that you and Idle will not have the right to assert the claim.\n                  </Text>\n                  <Text py={2}>\n                    You have the right to opt out of binding arbitration within 30 days of the date you first accepted the terms of this Section 12 by emailing us at info@idle.finance. In order to be effective, the opt-out notice must include your full name and address and clearly indicate your intent to opt out of binding arbitration. By opting out of binding arbitration, you are agreeing to resolve disputes in accordance with Section 13.\n                  </Text>\n                  <Text py={2}>\n                    If any portion of this Section 12 is found to be unenforceable or unlawful for any reason, (a) the unenforceable or unlawful provision shall be severed from these Terms; (b) severance of the unenforceable or unlawful provision shall have no impact whatsoever on the remainder of this Section 12 or the parties’ ability to compel arbitration of any remaining claims on an individual basis pursuant to this Section 12; and (c) to the extent that any claims must therefore proceed on a class, collective, consolidated, or representative basis, such claims must be litigated in a civil court of competent jurisdiction and not in arbitration, and the parties agree that litigation of those claims shall be stayed pending the outcome of any individual claims in arbitration. Further, if any part of this Section 12 is found to prohibit an individual claim seeking public injunctive relief, that provision will have no effect to the extent such relief is allowed to be sought out of arbitration, and the remainder of this Section 12 will be enforceable.\n                  </Text>\n                </Box>\n\n                <Box id={'governing-law'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    13. GOVERNING LAW\n                  </Heading.h3>\n                  <Text py={2}>\n                    The interpretation and enforcement of these Terms, and any dispute related to these Terms, the Portal or the Services, will be governed by and construed and enforced in accordance with the laws of the State of Delaware, as applicable, without regard to conflict of law rules or principles (whether of the State of Delaware or any other jurisdiction) that would cause the application of the laws of any other jurisdiction. You agree that we may initiate a proceeding related to the enforcement or validity of our intellectual property rights in any court having jurisdiction. With respect to any other proceeding that is not subject to arbitration under these Terms, the state and federal courts located in Wilmington, Delaware, will have exclusive jurisdiction. You waive any objection to venue in any such courts.\n                  </Text>\n                </Box>\n\n                <Box id={'miscellaneous'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    14. MISCELLANEOUS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Any right or remedy of Idle set forth in these Terms is in addition to, and not in lieu of, any other right or remedy whether described in these Terms, under Applicable Law, at law or in equity. Our failure or delay in exercising any right, power, or privilege under these Terms shall not operate as a waiver thereof. The invalidity or unenforceability of any of these Terms shall not affect the validity or enforceability of any other of these Terms, all of which shall remain in full force and effect. We will have no responsibility or liability for any failure or delay in performance of the Portal or any of the Services, or any loss or damage that you may incur, due to any circumstance or event beyond our control, including without limitation any flood, extraordinary weather conditions, earthquake, or other act of God, fire, war, insurrection, riot, labor dispute, accident, action of government, communications, power failure, or equipment or software malfunction. You may not assign or transfer any right to use the Portal or the Services, or any of your rights or obligations under these Terms, without our express prior written consent, including by operation of law or in connection with any change of control. We may assign or transfer any or all of our rights or obligations under these Terms, in whole or in part, without notice or obtaining your consent or approval. Headings of sections are for convenience only and shall not be used to limit or construe such sections. These Terms contain the entire agreement and supersede all prior and contemporaneous understandings between the parties regarding the Portal and the Services. In the event of any conflict between these Terms and any other agreement you may have with us, these Terms will control unless the other agreement specifically identifies these Terms and declares that the other agreement supersedes these Terms.\n                  </Text>\n                </Box>\n\n              </Box>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default Tos;\n","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from 'polished';\n\n// theme.js\nexport default {\n  breakpoints: ['52em', '64em'],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5,\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: ['0', '4px', '8px', '16px', '2rem'],\n  width: [0, 16, 32, 64, 128, 256],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, '1px solid #0d2034','1px solid #475d7c'],\n  borderWidths: ['0', '1px', '2px', '4px'],\n  shadows: [\n    '0',\n    '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    '0 7px 14px rgba(50,50,93,.1)',\n    '1px 1px 0px rgba(0,0,0,0.2)',\n    '0px 0px 16px 2px rgb(71,93,123,0.6)'\n  ],\n  opacity: {\n    disabled: 0.4,\n  },\n  colors: {\n    primary: '#fcfcfc',\n    'gradient-bg': 'linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)',\n    'primary-light': blue.light[1],\n    'primary-dark': blue.dark[1],\n    bgBlue: '#0030e0',\n    blue: '#0036ff',\n    tick: \"#00b84a\",\n    'dark-blue': '#00219a',\n    skyBlue: '#00abfe',\n    lightBlue: '#79f4e1',\n    copyColor: '#fcfcfc',\n    subColor: '#a7a7a7',\n    black: baseColors.black,\n    'near-black': '#1e3657',\n    'dark-gray': '#fcfcfc',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#a4aec6',\n    white: '#fff',\n    transparent: 'transparent',\n    green:'#00b84a',\n    /*\n    NEW COLORS\n    */\n    newblue: \"#2B65D9\",\n    alert:'#ff9900',\n    arrowActive:'#d8d8d8',\n    arrowInactive:'#4f4f4f',\n    selectBgFocused:'#1e3657',\n    selectBg:'#162e4d',\n    backButtonBg:'#162e4d',\n    lineChartStroke:'#a4aec6',\n    wrongNetworkBannerBg:'#0e2133',\n    dashboardBg: '#13273f',\n    statValue: '#a4aec6',\n    boxBorder: '#eeeeee',\n    cellTitle: '#a4aec6',\n    cellText: '#a4aec6',\n    divider: '#a4aec6',\n    counter: '#a4aec6',\n    redeem: '#00a9fe',\n    link:'#00a9fe',\n    deposit: '#0239ff',\n    migrate: '#00a9fe',\n    legend: '#c9c9c9',\n    cardBg:'#162e4d',\n    menuBg:'#162e4d',\n    menuHover:'#1e3657',\n    flashColor:'#bac5ff',\n    cardBgHover:'#1e3657',\n    cardBorder:'#0d2034',\n    pageActive:'#d8d8d8',\n    pageInactive:'#4f4f4f',\n    menuIconActive:'#2a65d9',\n    cardBgContrast:\"#1e3657\",\n    menuRightBorder:'#0d2034',\n    cardHoverShadow:'0px 0px 0px 1px rgb(45 74 114)',\n    transactions:{\n      action:{\n        send:'#10a0dd',\n        swap:'#3d53c0',\n        exit:'#10a0dd',\n        boost:'#ffff00',\n        redeem:'#10a0dd',\n        swapout:'#10a0dd',\n        deposit:'#3d53c0',\n        curvein:'#10a0dd',\n        receive:'#3d53c0',\n        migrate:'#3d53c0',\n        default:'#4f4f4f',\n        curveout:'#3d53c0',\n        withdraw:'#10a0dd',\n        curvedepositin:'#10a0dd',\n        curvedepositout:'#3d53c0'\n      },\n      actionBg:{\n        send:'#ceeff6',\n        swap:'#ced6ff',\n        exit:'#ceeff6',\n        boost:'#ff7979',\n        redeem:'#ceeff6',\n        swapout:'#ceeff6',\n        deposit:'#ced6ff',\n        curvein:'#ceeff6',\n        default:'#dadada',\n        receive:'#ced6ff',\n        migrate:'#ced6ff',\n        withdraw:'#ceeff6',\n        curveout:'#ced6ff',\n        curvedepositin:'#ceeff6',\n        curvedepositout:'#ced6ff'\n      },\n      status:{\n        completed:'#00b84a',\n        pending:'#a5a5a5',\n        failed:'#fa0000'\n      }\n    },\n    blacks: [\n      'rgba(0,0,0,.0125)',\n      'rgba(0,0,0,.025)',\n      'rgba(0,0,0,.05)',\n      'rgba(0,0,0,.1)',\n      'rgba(0,0,0,.2)',\n      'rgba(0,0,0,.3)',\n      'rgba(0,0,0,.4)',\n      'rgba(0,0,0,.5)',\n      'rgba(0,0,0,.6)',\n      'rgba(0,0,0,.7)',\n      'rgba(0,0,0,.8)',\n      'rgba(0,0,0,.9)',\n    ],\n    whites: [\n      'rgba(255,255,255,.0125)',\n      'rgba(255,255,255,.025)',\n      'rgba(255,255,255,.05)',\n      'rgba(255,255,255,.1)',\n      'rgba(255,255,255,.2)',\n      'rgba(255,255,255,.3)',\n      'rgba(255,255,255,.4)',\n      'rgba(255,255,255,.5)',\n      'rgba(255,255,255,.6)',\n      'rgba(255,255,255,.7)',\n      'rgba(255,255,255,.8)',\n      'rgba(255,255,255,.9)',\n    ],\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base,\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base,\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base,\n    },\n    info: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      '--main-color': blue.base,\n      '--contrast-color': blue.text,\n    },\n    normal: {\n      color: baseColors.black,\n      '--contrast-color': baseColors.black,\n    },\n    success: {\n      '--main-color': green.base,\n      '--contrast-color': green.text,\n    },\n    danger: {\n      '--main-color': red.base,\n      '--contrast-color': red.text,\n    },\n  },\n  buttonSizes: {\n    small: {\n      fontSize: '0.75rem',\n      height: '2rem',\n      minWidth: '2rem',\n      padding: '0 1rem',\n    },\n    medium: {\n      fontSize: '1rem',\n      height: '3rem',\n      minWidth: '3rem',\n    },\n    large: {\n      fontSize: '1.5rem',\n      height: '4rem',\n      minWidth: '4rem',\n      borderRadius: '2rem'\n    },\n  },\n};\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class TorusConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Torus, initParams, ...rest } = kwargs;\n    super(rest);\n\n    this.torus = null;\n    this.Torus = Torus;\n    this.initParams = initParams;\n  }\n\n  async onActivation() {\n    if (!this.torus) {\n      this.torus = new this.Torus({\n        buttonPosition: \"bottom-right\" // default: bottom-left\n      });\n    }\n    await this.torus.init();\n    await this.torus.login();\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.torus.provider);\n    });\n  }\n\n  async getAccount(provider) {\n    const userInfo = await this.torus.getUserInfo();\n    if (userInfo){\n      return await this.torus.getPublicAddress({\n        verifier:userInfo.verifier,\n        verifierId:userInfo.verifierId\n      });\n    }\n    return null;\n  }\n\n  async onDeactivation() {\n    await this.torus.logout();\n  }\n\n  changeNetwork(network) {\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class AuthereumConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Authereum, network, ...rest } = kwargs;\n    super(rest);\n\n    this.authereum = null;\n    this.Authereum = Authereum;\n    this.network = network;\n  }\n\n  async onActivation() {\n    if (!this.authereum) {\n      this.authereum = new this.Authereum(this.network);\n    }\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.authereum.getProvider());\n    });\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      const accounts = await provider.getAccounts();\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.disable();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      api: this.Authereum,\n      network\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class GnosisSafeConnector extends Connector {\n\n  constructor(SafeAppConnector) {\n    super(...arguments);\n    this.safeLoaded = false;\n    this.SafeAppConnector = SafeAppConnector;\n    this.provider = new this.SafeAppConnector();\n    this.checkSafeApp();\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.SafeAppConnector();\n    }\n\n    if (this.provider){\n      await this.provider.activate();\n      return this.provider;\n    }\n  }\n\n  async getAccount() {\n    if (this.provider){\n      return await this.provider.getAccount();\n    }\n  }\n\n  async getProvider(){\n    if (this.provider){\n      return await this.provider.getProvider();\n    }\n  }\n\n  async getSafeInfo() {\n    if (this.provider){\n      return await this.provider.getSafeInfo();\n    }\n  }\n\n  async getChainId() {\n    if (this.provider){\n      return await this.provider.getChainId();\n    }\n  }\n\n  async checkSafeApp() {\n    if (this.provider){\n      const isSafeApp = await this.provider.isSafeApp();\n      this.safeLoaded = true;\n      return isSafeApp;\n    }\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.deactivate();\n      return this.provider;\n    }\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletLinkConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletLink, appName, infuraUrl, chainId, appLogoUrl, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.walletLink = null;\n    this.appName = appName;\n    this.chainId = chainId;\n    this.infuraUrl = infuraUrl;\n    this.appLogoUrl = appLogoUrl;\n    this.WalletLink = WalletLink;\n  }\n\n  async onActivation() {\n    if (!this.walletLink){\n      this.walletLink = new this.WalletLink({\n        darkMode: false,\n        appName: this.appName,\n        infuraUrl: this.infuraUrl,\n        appLogoUrl: this.appLogoUrl,\n      });\n    }\n\n    const provider = this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  getProvider(){\n    if (!this.provider){\n      this.provider = this.walletLink.makeWeb3Provider(this.infuraUrl, this.chainId);\n    }\n    return this.provider;\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      // Use eth_RequestAccounts\n      const accounts = await provider.send('eth_requestAccounts');\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = this.getProvider();\n    if (provider){\n      this.walletLink.disconnect();\n      await provider.close();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      network,\n      api: this.WalletLink,\n      appName: this.appName,\n      chainId: this.chainId,\n      infuraUrl: this.infuraUrl,\n      appLogoUrl: this.appLogoUrl,\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletConnectConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletConnectProvider, defaultNetwork, infuraId, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.WalletConnectProvider = WalletConnectProvider;\n    this.infuraId = infuraId;\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.WalletConnectProvider({\n        infuraId:this.infuraId\n      });\n    }\n\n    if (this.provider){\n      await this.provider.enable();\n      return this.provider;\n    }\n  }\n\n  async getProvider(){\n    return this.provider;\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.close();\n      return this.provider;\n    }\n  }\n}\n","import WalletLink from 'walletlink';\nimport AuthereumApi from 'authereum';\nimport PortisApi from \"@portis/web3\";\nimport FortmaticApi from \"fortmatic\";\nimport TrezorApi from \"trezor-connect\";\nimport { Connectors } from \"web3-react\";\nimport TorusApi from '@toruslabs/torus-embed';\nimport globalConfigs from '../configs/globalConfigs';\nimport TorusConnector from './connectors/TorusConnector';\nimport AuthereumConnector from './connectors/AuthereumConnector';\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport GnosisSafeConnector from './connectors/GnosisSafeConnector';\nimport WalletLinkConnector from './connectors/WalletLinkConnector';\nimport { SafeAppConnector } from '@gnosis.pm/safe-apps-web3-react';\nimport WalletConnectConnector from './connectors/WalletConnectConnector';\n\nconst {\n  InjectedConnector,\n  NetworkOnlyConnector,\n  TrezorConnector,\n  LedgerConnector,\n  FortmaticConnector,\n  PortisConnector\n} = Connectors;\n\nconst env = process.env;\n\nconst manifestEmail = env.REACT_APP_TREZOR_MANIFEST_EMAIL; // trezor\nconst manifestAppUrl = env.REACT_APP_TREZOR_MANIFEST_URL; // trezor\nconst defaultNetwork = globalConfigs.network.requiredNetwork;\nconst fortmaticApiKey = env.REACT_APP_FORTMATIC_KEY_MAINNET;\nconst portisDAppId = env.REACT_APP_PORTIS_DAPP_ID;\nconst portisNetwork = env.REACT_APP_PORTIS_NETWORK;\n\nconst supportedNetworkURLs = {};\n  \nObject.keys(globalConfigs.network.providers.infura.rpc).forEach((networkId,index) => {\n  networkId = parseInt(networkId);\n  supportedNetworkURLs[networkId] = globalConfigs.network.providers.infura.rpc[networkId]+env.REACT_APP_INFURA_KEY;\n});\n\nconst Injected = new InjectedConnector({\n  supportedNetworks: globalConfigs.network.enabledNetworks\n});\n\nconst Infura = new NetworkOnlyConnector({\n  providerURL: supportedNetworkURLs[defaultNetwork]\n});\n\n\nconst Trezor = new TrezorConnector({\n  api: TrezorApi,\n  supportedNetworkURLs,\n  defaultNetwork,\n  manifestEmail,\n  manifestAppUrl\n});\n\nconst Ledger = new LedgerConnector({\n  supportedNetworkURLs,\n  defaultNetwork\n});\n\nconst WalletConnect = new WalletConnectConnector({\n  defaultNetwork,\n  supportedNetworkURLs,\n  api: WalletConnectProvider,\n  infuraId:env.REACT_APP_INFURA_KEY,\n  bridge: \"https://bridge.walletconnect.org\",\n});\n\nconst Fortmatic = new FortmaticConnector({\n  api: FortmaticApi,\n  apiKey: fortmaticApiKey,\n  logoutOnDeactivation: false\n});\n\nconst Portis = new PortisConnector({\n  api: PortisApi,\n  dAppId: portisDAppId,\n  network: portisNetwork\n});\n\nconst Authereum = new AuthereumConnector({\n  api: AuthereumApi,\n  network: globalConfigs.network.availableNetworks[defaultNetwork].name.toLowerCase()\n});\n\nconst walletLink = new WalletLinkConnector({\n  api: WalletLink,\n  darkMode: false,\n  chainId: defaultNetwork,\n  appName: globalConfigs.appName,\n  infuraUrl: supportedNetworkURLs[defaultNetwork],\n  appLogoUrl: 'https://idle.finance/images/idle-mark.png',\n});\n\nconst Torus = new TorusConnector({\n  api: TorusApi,\n  initParams:{\n    buildEnv: 'production', // default: production\n    enableLogging: false, // default: false\n    network: {\n      host: globalConfigs.network.availableNetworks[defaultNetwork].name.toLowerCase(), // default: mainnet\n      chainId: defaultNetwork, // default: 1\n      networkName: globalConfigs.network.availableNetworks[defaultNetwork].name.toLowerCase() // default: Main Ethereum Network\n    },\n    showTorusButton: false // default: true\n  }\n});\n\nconst gnosis = new GnosisSafeConnector(SafeAppConnector);\n\nexport default {\n  Injected,\n  Infura,\n  WalletConnect,\n  gnosis,\n  walletLink,\n  Fortmatic,\n  Portis,\n  Authereum,\n  Torus,\n  Trezor,\n  Ledger,\n};","import React from \"react\";\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\n\nclass WrongNetworkBanner extends React.Component {\n  render() {\n    const bannerStyle = {\n      position: \"fixed\",\n      bottom: 0,\n      left: 0,\n      right: 0,\n      width: \"100%\",\n      zIndex: 9999\n    };\n\n    return (\n      <Box style={bannerStyle} backgroundColor={'wrongNetworkBannerBg'} p={3}>\n        <Flex alignItems={\"center\"}>\n          <Box p={4}>\n            <Icon name=\"Warning\" color=\"gold\" size=\"30\" />\n          </Box>\n          <Flex flexDirection={\"column\"}>\n            <Text fontWeight={\"bold\"}>\n              Looks like you're on the wrong network\n            </Text>\n            <Text>\n              The network you are currently connected{\" \"}\n              <Text.span style={{ textTransform: \"capitalize\" }}>\n                ({this.props.network.current.name})\n              </Text.span>{\" \"}\n              is not supported - please switch to the correct network.\n            </Text>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default WrongNetworkBanner;\n","import React from \"react\";\n\nimport WrongNetworkBanner from \"./components/WrongNetworkBanner\";\n\nclass NetworkUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        { this.props.network.isSupportedNetwork === false && this.props.web3 &&\n          <WrongNetworkBanner\n            network={this.props.network}\n          />\n        }\n      </div>\n    );\n  }\n}\n\nexport default NetworkUtil;\n","import React from \"react\";\nimport { Box, Heading, Text, Modal, Link } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport RimbleUtil from \"@rimble/utils\";\n\nclass NoWeb3BrowserModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2\n          fontSize={4}\n          fontWeight={3}\n          lineHeight={\"1.375em\"}\n          my={3}\n        >\n          Switch browsers to use the Idle App\n        </Heading.h2>\n\n        {RimbleUtil.isMobileDevice() ? (\n          <Text my={4}>\n            You can't use our blockchain features, like increasing the count\n            value, in this browser. We recommend using{\" \"}\n            <Link\n              href=\"https://status.im/\"\n              title=\"status.im website\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Status\n            </Link>\n            ,{\" \"}\n            <Link\n              href=\"https://www.cipherbrowser.com/\"\n              title=\"Cipher Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Cipher\n            </Link>{\" \"}\n            or{\" \"}\n            <Link\n              href=\"https://wallet.coinbase.com/\"\n              title=\"Coinbase Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Coinbase wallet\n            </Link>{\" \"}\n            browsers.\n          </Text>\n        ) : (\n          <Box>\n            <Text my={4}>\n              You can't use our blockchain features, like increasing the\n              count value, in this browser. Switch to{\" \"}\n              <Link\n                href=\"https://brave.com/download/\"\n                title=\"Download Brave browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Brave\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.mozilla.org/\"\n                title=\"Download FireFox browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                FireFox\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.opera.com/download\"\n                title=\"Download Opera Browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Opera\n              </Link>\n              , or{\" \"}\n              <Link\n                href=\"https://www.google.com/chrome/\"\n                title=\"Download Chrome browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Chrome\n              </Link>{\" \"}\n              to continue.\n            </Text>\n\n            <Text>\n              <Text.span bold>Rather use your phone?</Text.span> You can use\n              the Idle App in mobile browser wallets like{\" \"}\n              <Link\n                href=\"https://status.im/\"\n                title=\"status.im website\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Status\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.cipherbrowser.com/\"\n                title=\"Cipher Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Cipher\n              </Link>{\" \"}\n              or{\" \"}\n              <Link\n                href=\"https://wallet.coinbase.com/\"\n                title=\"Coinbase Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Coinbase wallet\n              </Link>\n              .\n            </Text>\n          </Box>\n        )}\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWeb3BrowserModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Flex,\n  Icon,\n  Modal,\n  Link,\n  Button\n} from \"rimble-ui\";\n\nclass NoWalletModal extends React.Component {\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card p={5} maxWidth={\"600px\"}>\n          <Button.Text\n            icononly\n            icon={\"Close\"}\n            color={\"moon-gray\"}\n            position={\"absolute\"}\n            top={0}\n            right={0}\n            mt={3}\n            mr={3}\n            onClick={this.props.closeModal}\n          />\n\n          <Flex flexDirection={\"column\"} justifyContent={\"space-between\"}>\n            <Flex justifyContent={\"center\"} my={4}>\n              <Icon name=\"Warning\" color=\"gold\" size=\"40\" />\n            </Flex>\n\n            <Heading.h2 my={3}>No Wallet Available</Heading.h2>\n\n            <Text my={4}>\n              Your current browser does not have a blockchain connected wallet.\n              Try using MetaMask, Fortmatic, Portis.\n            </Text>\n\n            <Link\n              href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              <Button.Outline size=\"small\">Get MetaMask Extension</Button.Outline>\n            </Link>\n          </Flex>\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWalletModal;\n","// Checks for MetaMask\nconst GeneralUtil = {\n  hasMetaMask: () => {\n    let hasMetaMask = false;\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasMetaMask = typeof window.ethereum.isMetaMask !== \"undefined\";\n    } else if (typeof window.web3 !== 'undefined') {\n      hasMetaMask = typeof window.web3.currentProvider.isMetaMask !== 'undefined' && window.web3.currentProvider.isMetaMask;\n    }\n\n    return hasMetaMask;\n  },\n  isTrustWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isTrust !== 'undefined' && window.web3.currentProvider.isTrust;\n    }\n    return false;\n  },\n  isCoinbaseWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isCoinbaseWallet !== 'undefined' && window.web3.currentProvider.isCoinbaseWallet;\n    }\n    return false;\n  },\n  hasDapper: () => {\n    let hasDapper = typeof window.DapperEthereum !== 'undefined';\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasDapper = typeof window.ethereum.isDapper !== \"undefined\" && window.ethereum.isDapper;\n    }\n\n    return hasDapper;\n  },\n  isOpera: () => {\n    return /Opera|OPR\\//.test(navigator.userAgent);\n  },\n  // Current device is Android\n  isAndroid: () => {\n    const isAndroid = /android/i.test(navigator.userAgent) ? true : false;\n\n    return isAndroid;\n  },\n  // Current device is iOS\n  isIos() {\n    const isIos =\n      /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream\n        ? true\n        : false;\n\n    return isIos;\n  }\n};\n\nexport default GeneralUtil;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Flex,\n  Modal,\n  Button,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\nimport RimbleUtils from \"@rimble/utils\";\n\nclass WrongNetworkModal extends React.Component {\n  renderContent = () => {\n    return (\n      <ModalCard.Body>\n        <Heading.h2 my={3}>\n          Switch to the {this.props.network.required.name} network in{\" \"}\n          {GeneralUtil.hasMetaMask() ? `MetaMask` : `Settings`}\n        </Heading.h2>\n\n        <Text my={4}>\n          The Idle App only works on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {this.props.network.required.name}\n          </Text.span>{\" \"}\n          network. You’re currently on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {\" \"}\n            {this.props.network.current.name}\n          </Text.span>{\" \"}\n          network.\n        </Text>\n\n        {GeneralUtil.hasMetaMask() && !RimbleUtils.isMobileDevice() ? (\n          <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n            <Flex alignItems={\"center\"}>\n              <Box position={\"relative\"} width={\"4em\"}>\n                <Box>\n                  <Loader size={\"3em\"} />\n                </Box>\n              </Box>\n              <Box>\n                <Text fontWeight={4}>Waiting for the right network...</Text>\n                <Text fontWeight={2}>\n                  Go to your Wallet and to switch\n                </Text>\n              </Box>\n            </Flex>\n          </Box>\n        ) : null}\n\n        <Box display={[\"block\", \"none\"]}>\n          <Button onClick={this.props.closeModal} width={1}>\n            OK\n          </Button>\n        </Box>\n      </ModalCard.Body>\n    )\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <React.Fragment>\n            {this.renderContent()}\n          </React.Fragment>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default WrongNetworkModal;\n","import React from \"react\";\nimport { Heading, Text, Box, Flex, Icon } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nfunction TransactionFeeModal(props) {\n  return (\n    <Box>\n      <ModalCard.Header title={'Transaction fees, what are you paying for?'} subtitle={'You need to pay a fee to use the Ethereum blockchain.'} subtitle2={'This pays for someone to process your transaction and store the data.'}></ModalCard.Header>\n      <ModalCard.Body>\n        <Flex flexDirection={['column', 'row']}\n          justifyContent={\"space-between\"}\n          my={[0, 4]}>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"Fingerprint\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Undeniable proof</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You get a public record of any funds you send or receive, a bit like\n              a deed for a house.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"EnhancedEncryption\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unbreakable encryption</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              Your funds can only ever go to your intended recipients.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"AccountBalance\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n              <Icon\n                name=\"NotInterested\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unparalleled control</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You can pay or get paid without using any banks or companies.\n            </Text>\n          </Box>\n        </Flex>\n      </ModalCard.Body>\n    </Box>\n  );\n}\n\nexport default TransactionFeeModal;\n","import React from 'react'\nimport moment from 'moment';\nimport connectors from '../App/connectors';\nimport { useWeb3Context } from 'web3-react';\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport globalConfigs from '../configs/globalConfigs';\nimport styles from './Web3ConnectionButtons.module.scss';\nimport { Button, Box, Text, Flex, Link } from 'rimble-ui';\n\nconst LOG_ENABLED = false;\nconst customLog = (...props) => { if (LOG_ENABLED) console.log(moment().format('HH:mm:ss'),...props); };\n\nexport default function Web3ConnectionButtons(props) {\n  const context = useWeb3Context();\n\n  if (!context.active && !context.error) {\n    customLog('context loading', context);\n  } else if (context.error) {\n    customLog('context error', context);\n  } else {\n    customLog('context success', context);\n  }\n\n  const setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n    if (localStorage) {\n      localStorage.setItem('walletProvider', walletProvider);\n      localStorage.setItem('connectorName', connectorName);\n    }\n\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector(connectorName,walletProvider);\n    }\n    \n    // Close modal\n    if (typeof props.connectionCallback === 'function'){\n      props.connectionCallback();\n    }\n\n    return connectorName;\n    // return await context.setConnector(connectorName);\n  };\n\n  const unsetConnector = async () => {\n    context.unsetConnector();\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector('Infura','Infura');\n    }\n  };\n\n  // Show provider fields to detect in-app browser\n  // alert(JSON.stringify(Object.keys(window.web3.currentProvider)));\n    \n  const isOpera = GeneralUtil.isOpera();\n  const isDapper = GeneralUtil.hasDapper();\n  const isMetamask = GeneralUtil.hasMetaMask();\n  const isTrustWallet = GeneralUtil.isTrustWallet();\n  const isGnosisSafe = !!connectors.gnosis.provider.safe;\n  const isCoinbaseWallet = GeneralUtil.isCoinbaseWallet();\n  const browserWalletDetected = isMetamask || isOpera || isDapper || isCoinbaseWallet || isTrustWallet;\n  \n  const allowedConnectors = props.allowedConnectors;\n  const registerPage = props.registerPage;\n\n  if (connectors.Portis) {\n    if (registerPage) {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = true;\n    } else {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = false;\n    }\n  }\n\n  let basicConnectorsName = Object.keys(connectors).filter(c => c !== 'Infura');\n\n  if (allowedConnectors) {\n    basicConnectorsName = basicConnectorsName.filter(n => allowedConnectors.map((v) => { return v.toLowerCase(); }).indexOf(n.toLowerCase()) !== -1 );\n  }\n\n  // Handle Gnosis Safe connector\n  if (isGnosisSafe){\n    const injectedIndex = basicConnectorsName.indexOf('Injected');\n    // Remove Injected\n    basicConnectorsName.splice(injectedIndex,1);\n    // Remove Gnosis\n    const gnosisIndex = basicConnectorsName.indexOf('gnosis');\n    basicConnectorsName.splice(gnosisIndex,1);\n    // Insert Gnosis in first place\n    basicConnectorsName.unshift('gnosis');\n  } else {\n    const gnosisIndex = basicConnectorsName.indexOf('gnosis');\n    // Remove Gnosis\n    basicConnectorsName.splice(gnosisIndex,1);\n  }\n\n  const buttons = basicConnectorsName.map( (connectorName,index) => {\n    switch (connectorName) {\n      case 'Injected':\n        if (browserWalletDetected) {\n          let name = null;\n          if (isMetamask) {\n            name = 'Metamask';\n          } else if (isOpera) {\n            name = 'Opera';\n          } else if (isDapper){\n            name = 'Dapper';\n          } else if (isCoinbaseWallet){\n            name = 'Coinbase';\n          } else if (isTrustWallet){\n            name = 'TrustWallet';\n          }\n\n          const connectorInfo = globalConfigs.connectors[name.toLowerCase()];\n          if (connectorInfo && connectorInfo.enabled){\n            const walletIcon = connectorInfo.icon ? connectorInfo.icon : `${name.toLowerCase()}.svg`;\n            return (\n              <Flex\n                width={1}\n                key={`wallet_${name}`}\n                justifyContent={'space-between'}\n                style={{\n                  flex:'0 100%',\n                }}\n                flexDirection={['column','row']}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={name}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  imageProps={{width:'auto',height:'42px'}}\n                  imageSrc={`images/connectors/${walletIcon}`}\n                  handleClick={ async () => await setConnector(connectorName,name)}\n                  subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${name}` }\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  caption={'Watch Address'}\n                  imageSrc={`images/tokens/ETH.svg`}\n                  subcaption={'Watch an Ethereum address'}\n                  imageProps={{width:'auto',height:'42px'}}\n                  handleClick={ e => props.setCustomAddress(true) }\n                />\n              </Flex>\n            )\n          }\n          return null;\n        } else {\n          const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={'Browser Wallet'}\n              key={`wallet_${connectorName}`}\n              imageProps={{width:'auto',height:'42px'}}\n              imageSrc={`images/connectors/browser-wallet.png`}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using a browser wallet`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n      default:\n        const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n        if (connectorInfo && connectorInfo.enabled){\n          const walletIcon = connectorInfo.iconModal ? connectorInfo.iconModal : (connectorInfo.icon ? connectorInfo.icon : `${connectorName.toLowerCase()}.svg`);\n\n          let caption = connectorInfo.name ? connectorInfo.name : connectorName;\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={caption}\n              key={`wallet_${connectorName}`}\n              imageSrc={`images/connectors/${walletIcon}`}\n              imageProps={{width:'auto',height:'42px'}}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${connectorName}`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n        return null;\n    }\n  });\n\n  return (\n    <Box width={[1]}>\n      <Flex flexDirection={'column'} alignItems={\"center\"}>\n        {context.error && (\n          <Text.p textAlign=\"center\">\n            An error occurred, are you using an Ethereum browser such as\n            <Link href=\"https://metamask.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Metamask &nbsp;\n            </Link>\n             or\n            <Link href=\"https://www.meetdapper.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Dapper\n            </Link>\n            ?\n            If you do not have an Ethereum wallet follow the\n            \"I'm new to Ethereum\" flow when connecting.\n            If you do have a wallet, click Reset and retry one of the wallet listed below,\n            Generic wallet option is used for Ethereum browsers only.\n          </Text.p>\n        )}\n        {(context.active || (context.error && context.connectorName)) && context.connectorName !== 'Infura' && (\n          <Button.Outline\n            width={[1/2]}\n            className={[styles.button]}\n            mb={[1, 3]}\n            size={'large'}\n            key={'reset'}\n            onClick={async () => await unsetConnector()}\n          >\n            {context.active ? \"Deactivate Connector\" : \"Reset\"}\n          </Button.Outline>\n        )}\n      </Flex>\n      <Flex\n        flexWrap={'wrap'}\n        flexDirection={'row'}\n        justifyContent={'space-between'}\n      >\n        {buttons}\n      </Flex>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport {\n  Box,\n  Text,\n  Link,\n  Icon,\n  Flex,\n  Field,\n  Modal,\n  Input,\n  Loader,\n  Button,\n  Heading\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard.js';\nimport styles from './Header.module.scss';\nimport FunctionsUtil from '../FunctionsUtil.js';\nimport ImageButton from '../../ImageButton/ImageButton.js';\nimport TransactionFeeModal from \"./TransactionFeeModal.js\";\nimport Web3ConnectionButtons from \"../../Web3ConnectionButtons/Web3ConnectionButtons.js\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass ConnectionModal extends React.Component {\n  // TODO save pref in localstorage and do not show 'Before connecting' info every time\n  state = {\n    validated:false,\n    showTxFees:false,\n    customAddress:'',\n    currentSection:null,\n    showInstructions:false,\n    askCustomAddress:false,\n    closeRemainingTime:null,\n    customAddressError:false,\n    newToEthereumChoice:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  toggleShowTxFees = e => {\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  }\n\n  setStoredSection = () => {\n    let currentSection = null;\n    if (localStorage){\n      currentSection = localStorage.getItem('currentSection');\n      if (currentSection){\n        this.setState({\n          currentSection\n        });\n      }\n    }\n    return currentSection;\n  }\n\n  componentDidMount = () => {\n    this.loadUtils();\n    this.setStoredSection();\n  }\n\n  componentDidUpdate = () => {\n    this.loadUtils();\n  }\n\n  resetModal = e => {\n    this.setState({\n      showTxFees: false,\n      currentSection:null,\n      askCustomAddress:false,\n      showInstructions: false,\n      newToEthereumChoice:null,\n    });\n  }\n\n  setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory:'Connect',\n      eventLabel:walletProvider,\n      eventAction:'select_wallet'\n    });\n\n    if (this.props.setConnector && typeof this.props.setConnector === 'function'){\n      this.props.setConnector(connectorName,walletProvider);\n    }\n\n    // Set Wallet choice\n    this.setState({\n      newToEthereumChoice: connectorName\n    });\n\n    this.closeCountdown();\n\n    return connectorName;\n\n    // return await window.RimbleWeb3_context.setConnector(connectorName);\n  }\n\n  closeCountdown = () => {\n    const closeRemainingTime = this.state.closeRemainingTime ? this.state.closeRemainingTime-1 : 5;\n    if (!closeRemainingTime){\n      this.closeModal();\n    } else {\n      setTimeout(() => { this.closeCountdown() },1000);\n    }\n    this.setState({\n      closeRemainingTime\n    });\n  }\n\n  setWalletChoice = (e,choice) => {\n    e.preventDefault();\n    this.setState({\n      newToEthereumChoice: choice\n    });\n  }\n\n  closeModal = () => {\n    // Reset modal\n    this.resetModal();\n    // Set latest stored sections\n    this.setStoredSection();\n    // Close modal\n    this.props.closeModal();\n  }\n\n  setCurrentSection = (e,currentSection) => {\n    e.preventDefault();\n    this.setState({\n      currentSection\n    });\n\n    if (currentSection!=='instructions'){\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Connect',\n        eventAction: 'select_mode',\n        eventLabel: currentSection\n      });\n\n      this.functionsUtil.setLocalStorage('currentSection',currentSection);\n    }\n  }\n\n  connectCustomAddress = () => {\n    const addressValid = this.functionsUtil.checkAddress(this.state.customAddress);\n    if (addressValid){\n      this.setCustomAddress(false);\n      this.functionsUtil.setCustomAddress(this.state.customAddress);\n      this.setConnector('custom','custom');\n      setTimeout(() => { this.closeModal() },1000);\n      return true;\n    } else {\n      return this.setState({\n        customAddressError:true\n      });\n    }\n  }\n\n  updateCustomAddress = (e) => {\n    const customAddressError = false;\n    const customAddress = e.target.value;\n    const validated = this.functionsUtil.checkAddress(customAddress);\n    this.setState({\n      validated,\n      customAddress,\n      customAddressError\n    });\n  }\n\n  setCustomAddress = (askCustomAddress) => {\n    this.setState({\n      askCustomAddress\n    });\n  }\n\n  renderModalContent = () => {\n\n    const TOSacceptance = (\n      <Box>\n        <Text textAlign={'center'} fontSize={1} py={[2,3]}>By connecting, I accept Idle's <RouterLink to=\"/terms-of-service\" color={'primary'} style={{color:this.props.theme.colors.primary,textDecoration:'underline'}} target={'_blank'} rel=\"nofollow noopener noreferrer\">Terms of Service</RouterLink></Text>\n      </Box>\n    );\n\n    const newToEthereum = this.state.currentSection === 'new';\n    const showConnectionButtons = this.state.currentSection === 'wallet';\n    const showInstructions = this.state.currentSection === 'instructions';\n\n    if (showInstructions){\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Before you connect'} subtitle={'Connecting lets you use Idle via your Ethereum account.'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              flexDirection={['column', 'row']}\n              justifyContent={\"space-between\"}\n              my={[0, 3]}\n            >\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"Public\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>The blockchain is public</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  Your Ethereum account activity is public on the\n                  blockchain. Choose an account you don’t mind being\n                  linked with your activity here.\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"AccountBalanceWallet\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have some Ether for fees</Heading>\n                <Text fontSize={1} mb={3} textAlign={'center'}>\n                  You’ll need Ether to pay transaction fees. Buy Ether\n                  from exchanges like Coinbase or directly via enabled wallet\n                  such as Portis or Dapper.<br />\n                  <Link\n                    title=\"Learn about Ethereum transaction fees\"\n                    fontWeight={'0'}\n                    color={'blue'}\n                    textAlign={'center'}\n                    hoverColor={'blue'}\n                    href=\"#\"\n                    onClick={this.toggleShowTxFees}\n                  >\n                    What are transaction fees?\n                  </Link>\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"People\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have the right account ready</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  If you have multiple Ethereum accounts, check that the\n                  one you want to use is active in your browser.\n                </Text>\n              </Box>\n            </Flex>\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    if (this.state.askCustomAddress){\n      return (\n        <Box>\n          <ModalCard.Header\n            title={'Connect ETH wallet'}\n            icon={'images/idle-mark.png'}\n            subtitle={'And get started with Idle.'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              minWidth={[1,'30em']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Field\n                width={1}\n                label={'Ethereum address'}\n              >\n                <Input\n                  required\n                  width={1}\n                  type={'text'}\n                  className={styles.input}\n                  borderColor={'cardBorder'}\n                  backgroundColor={'cardBg'}\n                  pattern={'^0x[a-fA-F0-9]{40}$'}\n                  value={this.state.customAddress}\n                  onChange={ e => this.updateCustomAddress(e) }\n                  placeholder={'Insert a valid Ethereum address'}\n                />\n              </Field>\n              {\n                this.state.customAddressError && (\n                  <Text\n                    mb={2}\n                    fontSize={2}\n                    color={'red'}\n                    fontWeight={3}\n                    textAlign={'center'}\n                  >\n                    Insert a valid Ethereum Address\n                  </Text>\n                )\n              }\n              <Button\n                px={[3,4]}\n                mx={'auto'}\n                fontWeight={3}\n                size={'medium'}\n                fontSize={[2,2]}\n                borderRadius={4}\n                contrastColor={'primary'}\n                className={[styles.gradientButton]}\n                onClick={ e => this.connectCustomAddress() }\n              >\n                CONNECT\n              </Button>\n            </Flex>\n            <Flex\n              pt={3}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Link\n                hoverColor={'blue'}\n                textAlign={'center'}\n                onClick={ e => this.setCustomAddress(false) }\n              >\n                Select another Wallet\n              </Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (showConnectionButtons) {\n      return (\n        <Box>\n          <ModalCard.Header title={'Select your Wallet'} subtitle={'And get started with Idle.'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex width={1} px={[0,5]} flexDirection={'column'} justifyContent={'center'}>\n              <Web3ConnectionButtons\n                width={1/2}\n                isMobile={this.props.isMobile}\n                setConnector={this.setConnector}\n                connectionCallback={this.closeModal}\n                size={this.props.isMobile ? 'medium' : 'large'}\n                setCustomAddress={this.setCustomAddress.bind(this)}\n              />\n            </Flex>\n            <Flex pt={3} alignItems={'center'} justifyContent={'center'}>\n              <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'new') }>I don't have a wallet</Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (newToEthereum) {\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Let\\'s create your first Ethereum wallet'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            {\n              !this.state.newToEthereumChoice ? (\n                <Flex width={1} px={[0,4]} flexDirection={'column'} justifyContent={'center'}>\n                  <Box mb={3}>\n                    <Text fontSize={[2,3]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                      Connect with e-mail or phone number?\n                    </Text>\n                  </Box>\n                  <Flex mb={3} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use e-mail'}\n                      imageSrc={'images/email.svg'}\n                      isMobile={this.props.isMobile}\n                      subcaption={'Powered by Portis'}\n                      handleClick={ e => this.setConnector('Portis','Portis') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use phone number'}\n                      isMobile={this.props.isMobile}\n                      imageSrc={'images/mobile.svg'}\n                      subcaption={'Powered by Fortmatic'}\n                      handleClick={ e => this.setConnector('Fortmatic','Fortmatic') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                  </Flex>\n                  <Flex alignItems={'center'} justifyContent={'center'}>\n                    <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'wallet') }>I already have a wallet</Link>\n                  </Flex>\n                </Flex>\n              ) : (\n                <Box>\n                  <Text fontSize={3} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                    We are connecting you to {this.state.newToEthereumChoice} wallet provider...\n                  </Text>\n                  <Flex\n                    mt={2}\n                    justifyContent={'center'}\n                    alignItems={'center'}\n                    textAlign={'center'}>\n                    <Loader size=\"40px\" /> <Text ml={2} color={'dark-gray'}>Closing in {this.state.closeRemainingTime} seconds...</Text>\n                  </Flex>\n                </Box>\n              )\n            }\n            { TOSacceptance }\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    return (\n      <React.Fragment>\n        <ModalCard.Header title={'Connect to Idle'} icon={'images/idle-mark.png'}></ModalCard.Header>\n        <ModalCard.Body>\n          {\n            <Flex\n              width={1}\n              px={[0,4]}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Box mb={3}>\n                <Text\n                  fontWeight={2}\n                  fontSize={[2,3]}\n                  lineHeight={1.5}\n                  textAlign={'center'}\n                >\n                  How do you want to connect to Idle?\n                </Text>\n              </Box>\n              <Flex\n                mb={[2,3]}\n                alignItems={'center'}\n                justifyContent={'center'}\n                flexDirection={['column','row']}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`Ethereum wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Choose your favourite'}\n                  imageSrc={'images/ethereum-wallet.svg'}\n                  handleClick={ e => this.setCurrentSection(e,'wallet') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`New wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Use email / phone'}\n                  imageSrc={'images/new-wallet.png'}\n                  handleClick={ e => this.setCurrentSection(e,'new') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n              </Flex>\n              <Flex\n                alignItems={'center'}\n                justifyContent={'center'}\n              >\n                <Link\n                  color={'primary'}\n                  hoverColor={'primary'}\n                  onClick={ e => this.setCustomAddress(true) }\n                >\n                  Watch Ethereum Address\n                </Link>\n              </Flex>\n            </Flex>\n          }\n          { TOSacceptance }\n        </ModalCard.Body>\n      </React.Fragment>\n    );\n  }\n\n  renderFooter = () => {\n\n    if (this.state.newToEthereumChoice || (this.state.currentSection && this.state.askCustomAddress)){\n      return null;\n    }\n\n    return (\n      <ModalCard.Footer>\n        { !this.state.currentSection ? (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={ e => this.setCurrentSection(e,'instructions') }\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              READ INSTRUCTIONS\n            </Button>\n          ) : (!this.state.askCustomAddress || this.state.currentSection==='instructions') && (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={this.resetModal}\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              BACK\n            </Button>\n          )\n        }\n      </ModalCard.Footer>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          {this.state.showTxFees === false ? (\n            <React.Fragment>\n              {this.renderModalContent()}\n              {this.renderFooter()}\n            </React.Fragment>\n          ) : (\n            <Box>\n              <TransactionFeeModal />\n              {this.renderFooter()}\n            </Box>\n          )}\n\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionModal;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Modal,\n  Flex,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\n\nclass ConnectionPendingModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>Connect Ethereum account</Heading.h2>\n\n        <Text my={4}>\n          Confirm the request that's just appeared. If you can't see a\n          request, open your{\" \"}\n          {GeneralUtil.hasMetaMask()\n            ? `MetaMask extension`\n            : `eth wallet settings`}\n          .\n        </Text>\n\n        <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n          <Flex alignItems={\"center\"}>\n            <Box position={\"relative\"} width={\"4em\"}>\n              <Box>\n                <Loader size={\"3em\"} />\n              </Box>\n            </Box>\n            <Box>\n              <Text fontWeight={4}>\n                Waiting for connection confirmation...\n              </Text>\n              <Text fontWeight={2}>This won’t cost you any Ether</Text>\n            </Box>\n          </Flex>\n        </Box>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionPendingModal;\n","import React from \"react\";\nimport { Heading, Text, Flex, Button, Modal } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nclass UserRejectedConnectionModal extends React.Component {\n  sendMessageAgain = event => {\n    this.props.closeModal();\n    this.props.initAccount();\n  };\n\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>\n          You can't continue without connecting your account\n        </Heading.h2>\n\n        <Text my={4}>\n          To use our blockchain features you need to confirm the connection\n          request.\n        </Text>\n\n        <Flex flexDirection={['column', 'row']} justifyContent={\"flex-end\"} mt={4}>\n          <Button.Outline onClick={this.props.closeModal} mr={[0, 3]} mb={[3, 0]}>\n            Cancel connection\n          </Button.Outline>\n          <Button onClick={this.sendMessageAgain}>\n            Try again\n          </Button>\n        </Flex>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default UserRejectedConnectionModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Modal,\n  Flex,\n  Box,\n  Button,\n  EthAddress,\n  QR,\n  Link\n} from \"rimble-ui\";\nimport TransactionFeeModal from \"./TransactionFeeModal\";\n\nclass LowFundsModal extends React.Component {\n  state = {\n    showSecondary: false,\n    showTxFees: false\n  };\n\n  toggleQRVisible = () => {\n    this.setState({\n      showSecondary: !this.state.showSecondary\n    });\n  };\n\n  toggleShowTxFees = e => {\n    console.log(\"showTxFees\", this.state.showTxFees);\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  };\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card\n          pr={[0, 5]}\n          pl={[0, 5]}\n          pt={[\"48px\", 5]}\n          pb={[\"97px\", 4]}\n          maxWidth={\"960px\"}\n          overflow={\"hidden\"}\n          position={\"relative\"}\n        >\n          <Box position={\"relative\"}>\n            <Flex\n              justifyContent={\"flex-end\"}\n              mr={[0, -5]}\n              mt={[\"-48px\", -5]}\n              position={\"absolute\"}\n              top={\"0\"}\n              left={\"0\"}\n              right={\"0\"}\n              bg={\"white\"}\n              zIndex={\"1\"}\n            >\n              <Button.Text\n                icononly\n                icon={\"Close\"}\n                color={\"moon-gray\"}\n                onClick={this.props.closeModal}\n              />\n            </Flex>\n          </Box>\n\n          {this.state.showSecondary === false &&\n          this.state.showTxFees === false ? (\n            <Box>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start primary content */}\n\n                  <Box alignContent=\"center\" py={3}>\n                    <Heading.h2>\n                      Not enough Ether for transaction fees\n                    </Heading.h2>\n                  </Box>\n                  <Text mb={4}>\n                    This is a blockchain action so you’ll have to pay a\n                    transaction fee. A few dollars worth of Ether should be\n                    enough but fees do change based on how busy the network is.{\" \"}\n                    <strong>Fund your account and try again.</strong>{\" \"}\n                    <Link\n                      title=\"Learn about Ethereum transaction fees\"\n                      as={\"a\"}\n                      href=\"#\"\n                      onClick={this.toggleShowTxFees}\n                    >\n                      What are transaction fees?\n                    </Link>\n                  </Text>\n\n                  <Heading.h3>How to add funds</Heading.h3>\n\n                  <Flex\n                    alignItems={\"stretch\"}\n                    mx={0}\n                    mb={[4, 5]}\n                    mt={[3, 4]}\n                    flexWrap={[\"wrap\", \"no-wrap\"]}\n                  >\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>Buy ETH from an exchange</Heading.h5>\n                          <Text fontSize=\"1\">\n                            You can buy ETH from exchanges like Coinbase and\n                            send it to your account. If you don’t already have\n                            a Coinbase account, it can take a while to get set\n                            up.\n                          </Text>\n                        </Box>\n\n                        <Button.Outline my={3}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"OpenInNew\" mr={2} />\n                            Go to CoinBase\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>\n                            Send ETH from another account\n                          </Heading.h5>\n                          <Text fontSize=\"1\">\n                            If you have ETH in another Ethereum account, you\n                            can send it to this account using your public\n                            Ethereum address or QR code.\n                          </Text>\n                        </Box>\n                        <Button.Outline my={3} onClick={this.toggleQRVisible}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"FilterCenterFocus\" mr={2} />\n                            Show account QR code\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                  </Flex>\n                  {/* End primary content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex pt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button onClick={this.props.closeModal} width={[1, \"auto\"]}>\n                    Back to Idle\n                  </Button>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showSecondary ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start secondary content */}\n                  <Flex my={3} justifyContent={\"center\"}>\n                    <QR\n                      size={130}\n                      value={\n                        this.props.account ? this.props.account : \"1234512345\"\n                      }\n                    />\n                  </Flex>\n\n                  <EthAddress my={4} address={this.props.account} />\n                  <Flex mb={3} />\n                  {/* End secondary content */}\n                </Box>\n              </Box>\n\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start secondary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex mt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleQRVisible}\n                  >\n                    Go back\n                  </Button.Outline>\n                </Flex>\n                {/* End secondary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showTxFees ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start tx fee content */}\n                  <TransactionFeeModal />\n                  {/* End tx fee content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex\n                  pt={4}\n                  justifyContent={[\"center\", \"flex-end\"]}\n                  borderTop={1}\n                  borderColor={\"#eee\"}\n                >\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleShowTxFees}\n                  >\n                    Go Back\n                  </Button.Outline>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default LowFundsModal;\n","import React from \"react\";\n\nimport NoWeb3BrowserModal from \"./components/NoWeb3BrowserModal\";\nimport NoWalletModal from \"./components/NoWalletModal\";\nimport WrongNetworkModal from \"./components/WrongNetworkModal\";\n\nimport ConnectionModal from \"./components/ConnectionModal\";\nimport ConnectionPendingModal from \"./components/ConnectionPendingModal\";\nimport UserRejectedConnectionModal from \"./components/UserRejectedConnectionModal\";\n\nimport LowFundsModal from \"./components/LowFundsModal\";\n\nclass ConnectionModalUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        <NoWeb3BrowserModal\n          closeModal={this.props.modals.methods.closeNoWeb3BrowserModal}\n          isOpen={this.props.modals.data.noWeb3BrowserModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <NoWalletModal\n          closeModal={this.props.modals.methods.closeNoWalletModal}\n          isOpen={this.props.modals.data.noWalletModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <WrongNetworkModal\n          closeModal={this.props.modals.methods.closeWrongNetworkModal}\n          isOpen={this.props.modals.data.wrongNetworkModalIsOpen}\n          network={this.props.network}\n        />\n\n        <ConnectionModal\n          {...this.props}\n          isMobile={this.props.isMobile}\n          setConnector={this.props.setConnector}\n          currentNetwork={this.props.network.current}\n          validateAccount={this.props.validateAccount}\n          closeModal={this.props.modals.methods.closeConnectionModal}\n          isOpen={ this.props.modals.data.connectionModalIsOpen && !this.props.accountValidated }\n        />\n\n        <ConnectionPendingModal\n          closeModal={this.props.modals.methods.closeConnectionPendingModal}\n          isOpen={this.props.modals.data.accountConnectionPending}\n          currentNetwork={this.props.network.current}\n        />\n        <UserRejectedConnectionModal\n          closeModal={\n            this.props.modals.methods.closeUserRejectedConnectionModal\n          }\n          isOpen={this.props.modals.data.userRejectedConnect}\n          initAccount={this.props.initAccount}\n        />\n\n        <LowFundsModal\n          closeModal={this.props.modals.methods.closeLowFundsModal}\n          isOpen={this.props.modals.data.lowFundsModalIsOpen}\n          currentNetwork={this.props.network.current}\n          account={this.props.account}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ConnectionModalUtil;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ConnectionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    // Disconnect to Infura only if the wallet is not logged\n    if (!this.props.account){\n      // await this.props.context.setFirstValidConnector(['Infura']);\n      // this.props.context.setConnector('Infura');\n      this.props.context.unsetConnector();\n      this.props.setConnector('Infura',null);\n      await this.props.context.setFirstValidConnector(['Infura']);\n    }\n    this.props.modals.methods.closeConnectionErrorModal();\n  }\n\n  render() {\n\n    const walletProvider = this.functionsUtil.getWalletProvider();\n    const isLedger = (walletProvider && walletProvider.toLowerCase() === 'ledger') || (typeof this.props.modals.data.connectionError === 'string' && this.props.modals.data.connectionError.toLowerCase().includes('ledger'));\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ isLedger ? 'Ledger Error' : `Connection Error` } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to connect with your { isLedger ? 'Ledger' : 'account' }:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.connectionError}\"</Text.span><br />\n                {\n                  isLedger ? (\n                    <Text.span>\n                      Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n\n                    </Text.span>\n                  ) : 'Make sure that your wallet is unlocked and try again.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionErrorModal;","import React from \"react\";\nimport {\n  Text,\n  Link,\n  Flex,\n  Modal,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass TransactionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    this.props.modals.methods.closeTransactionErrorModal();\n  }\n\n  render() {\n\n    const isLedgerError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('ledger');\n    const isSlowTxError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('not mined within 50 blocks');\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ 'Transaction Error' } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to send a transaction:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.transactionError}\"</Text.span><br />\n                {\n                  isLedgerError ? (\n                    <Text.span\n                      fontSize={1}\n                    >\n                      <br />Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n                      We also suggest you to connect your Ledger with Metamask, read the <Link fontSize={1} color={'blue'} hoverColor={'blue'} target={'_blank'} rel={\"nofollow noopener noreferrer\"} href={'https://metamask.zendesk.com/hc/en-us/articles/360020394612-How-to-connect-a-Trezor-or-Ledger-Hardware-Wallet'}>instructions here</Link>.\n                    </Text.span>\n                  ) : isSlowTxError ? 'This could happen when the gas price is low, check the transaction status with your Wallet.' : 'Make sure that your have enough funds in your wallet.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default TransactionErrorModal;","import Web3 from \"web3\";\nimport React from 'react';\nimport BigNumber from 'bignumber.js';\nimport SimpleID from 'simpleid-js-sdk';\nimport NetworkUtil from \"./NetworkUtil\";\nimport { Biconomy } from \"@biconomy/mexa\";\nimport * as Sentry from '@sentry/browser';\nimport FunctionsUtil from './FunctionsUtil';\nimport MaticJs from '@maticnetwork/maticjs';\nimport globalConfigs from '../configs/globalConfigs';\nimport ConnectionModalUtil from \"./ConnectionModalsUtil\";\n// import detectEthereumProvider from '@metamask/detect-provider';\nimport { IFrameEthereumProvider } from '@ledgerhq/iframe-provider';\nimport ConnectionErrorModal from './components/ConnectionErrorModal';\nimport TransactionErrorModal from './components/TransactionErrorModal';\n\nrequire('dotenv').config();\n\nconst RimbleTransactionContext = React.createContext({\n  web3: {},\n  account: {},\n  biconomy: {},\n  simpleID: {},\n  contracts: [],\n  web3Infura: {},\n  currentWeb3: {},\n  web3Polygon: {},\n  tokenConfig: {},\n  transactions: {},\n  permitClient: {},\n  web3Providers: {},\n  accountBalance: {},\n  initWeb3: () => {},\n  accountValidated: {},\n  maticPlasmaClient :{},\n  initAccount: () => {},\n  accountBalanceLow: {},\n  contractsNetworks: {},\n  initSimpleID: () => {},\n  initContract: () => {},\n  erc20ForwarderClient: {},\n  accountBalanceToken: {},\n  checkPreflight: () => {},\n  validateAccount: () => {},\n  network: {\n    current: {},\n    required: {},\n    checkNetwork: () => {},\n    isCorrectNetwork: null,\n    isSupportedNetwork: null,\n  },\n  accountInizialized: false,\n  getTokenDecimals: () => {},\n  rejectValidation: () => {},\n  getAccountBalance: () => {},\n  contractsInitialized: false,\n  accountValidationPending: {},\n  initializeContracts: () => {},\n  rejectAccountConnect: () => {},\n  enableUnderlyingWithdraw: false,\n  connectAndValidateAccount: () => {},\n  modals: {\n    data: {\n      connectionError: {},\n      lowFundsModalIsOpen: {},\n      noWalletModalIsOpen: {},\n      userRejectedConnect: {},\n      connectionModalIsOpen: {},\n      userRejectedValidation: {},\n      wrongNetworkModalIsOpen: {},\n      accountValidationPending: {},\n      accountConnectionPending: {},\n      noWeb3BrowserModalIsOpen: {},\n      transactionConnectionModalIsOpen: {},\n    },\n    methods: {\n      openLowFundsModal: () => {},\n      closeLowFundsModal: () => {},\n      openWrongNetworkModal: () => {},\n      closeWrongNetworkModal: () => {},\n      openNoWeb3BrowserModal: () => {},\n      closeNoWeb3BrowserModal: () => {},\n      openConnectionErrorModal: () => {},\n      closeConnectionErrorModal: () => {},\n      openTransactionErrorModal: () => {},\n      closeTransactionErrorModal: () => {},\n      openConnectionPendingModal: () => {},\n      closeConnectionPendingModal: () => {},\n      openUserRejectedConnectionModal: () => {},\n      openUserRejectedValidationModal: () => {},\n      closeUserRejectedConnectionModal: () => {},\n      closeUserRejectedValidationModal: () => {},\n    }\n  },\n  transaction: {\n    data: {\n      transactions: {}\n    },\n    meta: {},\n    methods: {}\n  }\n});\n\nlet setConnectorName = null;\nlet biconomyLoginProcessing = false;\n\nclass RimbleTransaction extends React.Component {\n  static Consumer = RimbleTransactionContext.Consumer;\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    const props = Object.assign({},this.props);\n    props.contracts = this.state.contracts;\n    if (this.functionsUtil){\n      props.account = this.state.account;\n      this.functionsUtil.setProps(props);\n    } else {\n      props.account = this.state.account;\n      this.functionsUtil = new FunctionsUtil(props);\n    }\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.checkNetwork();\n\n    // detect Network account change\n    if (window.ethereum){\n      window.ethereum.on('networkChanged', async (networkId) => {\n        this.handleNetworkChanged(networkId);\n        // window.location.reload();\n      });\n    }\n\n    window.initWeb3 = this.initWeb3;\n    window.initAccount = this.initAccount;\n  }\n\n  handleNetworkChanged = async (networkId=null) => {\n    this.functionsUtil.removeStoredItem('cachedRequests');\n    this.functionsUtil.removeStoredItem('cachedRequests_polygon');\n    this.functionsUtil.removeStoredItem('transactions');\n    await this.props.clearCachedData(async () => {\n      // console.log(networkId,this.state.network);\n      // const network = await this.checkNetwork();\n      // if (network.isCorrectNetwork){\n      //   window.location.reload();\n      // }\n\n      if (this.state.network.required && networkId && parseInt(networkId) === parseInt(this.state.network.required.id)){\n        window.location.reload();\n      } else {\n        this.setState({\n          web3:null,\n          contracts:[],\n          biconomy:null,\n          permitClient:null,\n          contractsNetworks:{},\n          networkInitialized:false,\n          erc20ForwarderClient:null,\n          contractsInitialized:false\n        },() => {\n          this.checkNetwork();\n        });\n      }\n    });\n  }\n\n  componentDidMount = async () => {\n    // this.initSimpleID();\n    // this.initWeb3();\n\n    this.connectGnosisSafe();\n\n    // TEST - Manually triggers transaction error\n    // this.openTransactionErrorModal(null,'Your Ledger device is Ineligible');\n\n    window.testTransaction = (method) => {\n      const transaction = this.createTransaction();\n      transaction.method = method;\n      this.addTransaction(transaction);\n      return transaction;\n    }\n\n    window.updateTransaction = (transaction,hash,status,params) => {\n      // Add meta data to transaction\n      transaction.status = status;\n      transaction.params = params;\n      transaction.type = \"contract\";\n      transaction.created = Date.now();\n      transaction.transactionHash = hash;\n\n      // console.log('window.updateTransaction',transaction);\n\n      this.updateTransaction(transaction);\n      return transaction;\n    }\n  }\n\n  connectGnosisSafe = () => {\n    const gnosisSafeLoaded = this.props.connectors.gnosis.safeLoaded;\n    if (gnosisSafeLoaded){\n      const walletProvider = this.functionsUtil.getWalletProvider();\n      const isGnosisSafe = this.props.connectors.gnosis.safeLoaded && !!this.props.connectors.gnosis.provider.safe;\n      // console.log('isGnosisSafe',this.props.connectors.gnosis.provider.safe,isGnosisSafe);\n      if (isGnosisSafe){\n        this.props.setConnector('gnosis','gnosis');\n      } else if (walletProvider === 'gnosis') {\n        this.props.setConnector('Infura',null);\n      }\n    }\n  }\n\n  componentDidUpdate = async (prevProps, prevState) => {\n\n    this.loadUtils();\n\n    // this.functionsUtil.customLog('componentDidUpdate',prevProps.connectorName,this.props.connectorName,this.props.context.connectorName,this.props.context.active,(this.props.context.error ? this.props.context.error.message : null));\n\n    const gnosisSafeLoaded = !this.state.gnosisSafeLoaded && this.props.connectors.gnosis.safeLoaded;\n    // console.log('gnosisSafeLoaded',this.state.gnosisSafeLoaded,this.props.connectors.gnosis.safeLoaded,gnosisSafeLoaded);\n    if (gnosisSafeLoaded){\n      this.setState({\n        gnosisSafeLoaded:true\n      },() => {\n        this.connectGnosisSafe();\n      });\n    }\n\n    if (prevProps.connectorName !== this.props.connectorName && this.props.connectorName){\n      this.initWeb3();\n    } else if ( prevProps.context !== this.props.context ){\n      if (this.props.context.error instanceof Error && this.props.context.error.message.length){\n        const errorMessage = this.props.context.error.message;\n        const isWalletConnectClosedModalError = (errorMessage === 'User closed WalletConnect modal' || errorMessage === 'User closed modal');\n        // this.functionsUtil.customLog('componentDidUpdate',setConnectorName,errorMessage);\n        if (setConnectorName === 'WalletConnect' && isWalletConnectClosedModalError){\n          // this.functionsUtil.customLog('WalletConnect disconnected! Set Infura connector');\n          this.props.setConnector('Infura',null);\n          // this.functionsUtil.removeStoredItem('walletProvider');\n          // this.functionsUtil.removeStoredItem('connectorName');\n          // this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:'Infura'}));\n          setConnectorName = null;\n          // await this.props.context.setConnector('Infura');\n        } else if (!isWalletConnectClosedModalError) {\n          this.openConnectionErrorModal(null,errorMessage);\n        } else {\n          this.initWeb3();\n        }\n      // WalletConnect double trigger initWeb3\n      } else if (this.props.context.active && this.props.context.connectorName!=='WalletConnect' && this.props.connectorName==='WalletConnect') {\n        this.initWeb3();\n      }\n    } else if ( (this.props.context.connectorName && this.props.context.connectorName !== this.props.connectorName) || prevProps.customAddress !== this.props.customAddress){\n      this.initWeb3();\n    }\n\n\n    const currentNetworkChanged = this.state.networkInitialized && prevState.network.current.id !== this.state.network.current.id;\n    if (currentNetworkChanged){\n      // console.log('requiredNetworkChanged',this.state.networkInitialized,JSON.stringify(prevState.network),JSON.stringify(this.state.network));\n      this.initWeb3();\n    }\n\n    const requiredNetworkChanged = prevState.network.required.id !== this.state.network.required.id;\n    if (requiredNetworkChanged){\n      // console.log('requiredNetworkChanged',this.state.networkInitialized,JSON.stringify(prevState.network),JSON.stringify(this.state.network));\n      this.setState({\n        contracts:[],\n        contractsNetworks:{},\n        contractsInitialized:false\n      }, () => {\n        this.props.setNetwork(this.state.network);\n        this.initWeb3();\n      });\n    }\n\n    const availableStrategiesChanged = (!prevProps.availableStrategies && this.props.availableStrategies) || (prevProps.availableStrategies && this.props.availableStrategies && JSON.stringify(Object.keys(prevProps.availableStrategies)) !== JSON.stringify(Object.keys(this.props.availableStrategies)));\n    // console.log('availableStrategiesChanged',this.props.availableStrategies,availableStrategiesChanged);\n    if (availableStrategiesChanged){\n      await this.initializeContracts();\n    }\n\n    const customAddressChanged = prevProps.customAddress !== this.props.customAddress;\n    const contextAccountChanged = prevProps.context.account !== this.props.context.account;\n    const accountDisconnected = prevProps.connectorName !== this.props.connectorName && this.props.connectorName === 'Infura';\n    if (contextAccountChanged){\n      // console.log('contextAccountChanged',prevProps.context.account,this.props.context.account,contextAccountChanged);\n    }\n\n    if (accountDisconnected){\n      // console.log('accountDisconnected',prevProps.connectorName,this.props.connectorName,accountDisconnected);\n    }\n\n    if (customAddressChanged || contextAccountChanged || accountDisconnected){\n      this.initAccount();\n    }\n\n    // const availableTokensChanged = prevProps.availableTokens && this.props.availableTokens && JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n\n    // Reset tokenDecimals if token is changed\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged){\n      this.setState({\n        tokenDecimals: null\n      });\n    }\n\n    // this.functionsUtil.customLog(prevProps.enableUnderlyingWithdraw,this.props.enableUnderlyingWithdraw,this.state.enableUnderlyingWithdraw);\n    if (prevProps.enableUnderlyingWithdraw !== this.props.enableUnderlyingWithdraw){\n      this.setState({\n        enableUnderlyingWithdraw:this.props.enableUnderlyingWithdraw\n      });\n    }\n\n    if (localStorage){\n      const context = JSON.parse(localStorage.getItem('context'));\n      if (!context || (this.props.context.active !== context.active || this.props.context.connectorName !== context.connectorName)){\n        this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:this.props.context.connectorName}));\n      }\n    }\n\n    const selectedNetworkChanged = prevProps.config.requiredNetwork !== this.props.config.requiredNetwork;\n    if (selectedNetworkChanged){\n      // console.log('selectedNetworkChanged',JSON.stringify(prevProps.config.requiredNetwork),this.props.config.requiredNetwork);\n      this.handleNetworkChanged();\n    }\n  }\n\n  initCurrentWeb3 = async () => {\n\n  }\n\n  // Initialize a web3 provider\n  initWeb3 = async (connectorName=null) => {\n\n    // Detect ethereum provider\n    // const metamaskProvider = await detectEthereumProvider();\n    // if (metamaskProvider && (!window.ethereum || window.ethereum !== metamaskProvider)){\n    //   window.ethereum = metamaskProvider;\n    // }\n    if (!this.state.networkInitialized){\n      return false;\n    }\n\n    const context = this.props.context;\n    const networkId = this.state.network.required.id;\n    const walletProvider = this.functionsUtil.getWalletProvider();\n\n    // console.log(this.functionsUtil.strToMoment().format('HH:mm:ss'),'initWeb3 - START',networkId,walletProvider);\n\n    const availableNetworks = this.functionsUtil.getGlobalConfig(['network','availableNetworks']);\n    const networkConfig = availableNetworks[networkId];\n    const provider = networkConfig ? networkConfig.provider : 'infura';\n    const web3RpcKey = this.functionsUtil.getGlobalConfig(['network','providers',provider,'key']);\n    const web3Rpc = this.functionsUtil.getGlobalConfig(['network','providers',provider,'rpc',networkId])+web3RpcKey;\n\n    const useWeb3Provider = this.state.networkInitialized && this.state.network.isCorrectNetwork;\n    const web3InfuraRpc = this.functionsUtil.getGlobalConfig(['network','providers','infura','rpc',networkId])+this.functionsUtil.getGlobalConfig(['network','providers','infura','key']);\n    \n\n    const enabledNetworks = this.functionsUtil.getGlobalConfig(['network','enabledNetworks']);\n    const web3Providers = Object.keys(availableNetworks).filter( netId => enabledNetworks.includes(parseInt(netId)) ).reduce( (acc,netId) => {\n      const networkConfig = availableNetworks[netId];\n      const providerConfig = this.functionsUtil.getGlobalConfig(['network','providers',networkConfig.provider]);\n      const providerRpc = providerConfig.rpc[netId]+providerConfig.key;\n      acc[netId] = new Web3(new Web3.providers.HttpProvider(providerRpc));\n      return acc;\n    },{});\n\n    const web3Infura = new Web3(new Web3.providers.HttpProvider(web3InfuraRpc));\n\n    let currentWeb3 = context.library;\n    let web3 = useWeb3Provider ? context.library : null;\n\n    // 0x Instant Wallet Provider Injection\n    if (!window.RimbleWeb3_context || context.connectorName !== window.RimbleWeb3_context.connectorName){\n      window.RimbleWeb3_context = context;\n    }\n\n    // Reset setConnectorName if force connectorName\n    if (connectorName){\n      setConnectorName = null;\n    } else {\n      connectorName = this.props.connectorName;\n    }\n\n    // const last_context = localStorage ? JSON.parse(localStorage.getItem('context')) : null;\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorName,context.connectorName,context.connector,(web3 && web3.currentProvider ? web3.currentProvider.disable : null),(context.connector ? context.connector.disable : null));\n    if (context && connectorName === 'Infura' && connectorName !== context.connectorName){\n      if (web3 && typeof web3.currentProvider.disable === 'function'){\n        web3.currentProvider.disable();\n      } else if (context.connector && typeof context.connector.disable === 'function'){\n        context.connector.disable();\n      }\n      web3 = null;\n      currentWeb3 = null;\n      setConnectorName = null;\n    }\n\n    const connectorNameChanged = (context.connectorName && context.connectorName !== connectorName) || (connectorName !== 'Infura' && connectorName !== setConnectorName);\n\n    // console.log('context',context.active,connectorNameChanged,context.connectorName,connectorName,setConnectorName);\n\n    if (connectorName !== 'ledgerLive'){\n      if (!context.active || connectorNameChanged) {\n        // Select preferred web3 provider\n        if (connectorName && connectorNameChanged){\n\n          if (connectorName === 'gnosis' && !this.state.gnosisSafeLoaded){\n            return false;\n          }\n\n          // this.functionsUtil.customLog('initWeb3 set connector',connectorName);\n          setConnectorName = connectorName;\n          await context.setConnector(connectorName);\n          // await context.setFirstValidConnector([connectorName, 'Infura']);\n          return web3;\n        }\n      }\n    }\n\n    let web3Host = web3Rpc;\n    let web3Provider = null;\n\n    if (!web3) { // safety web3 implementation\n      if (window.ethereum) {\n        this.functionsUtil.customLog(\"Using modern web3 provider.\");\n        web3Provider = window.ethereum;\n      } else if (window.web3) {\n        this.functionsUtil.customLog(\"Legacy web3 provider. Try updating.\");\n        web3Provider = window.web3;\n      } else {\n        this.functionsUtil.customLog(\"Non-Ethereum browser detected. Using Infura fallback.\");\n        web3Host = web3InfuraRpc;\n      }\n    } else {\n      web3Provider = web3.currentProvider;\n    }\n\n    let forceCallback = false;\n\n    if ((!connectorName || connectorName === 'Infura') && web3Provider && typeof web3Provider.enable === 'function'){\n      try {\n        await web3Provider.enable();\n      } catch (connectionError){\n        web3Provider = null;\n        web3Host = web3InfuraRpc;\n        forceCallback = true;\n      }\n    }\n\n    // Ledger Live\n    if (connectorName === 'ledgerLive'){\n      web3Provider = new IFrameEthereumProvider();\n    }\n\n    // Injected web3 provider\n    if (web3Provider && useWeb3Provider){\n      web3 = new Web3(web3Provider);\n    // Infura\n    } else if (web3Host) {\n      web3 = web3Providers[networkId];\n    }\n\n    let web3Polygon = null;\n    let maticPOSClient = null;\n    let maticPlasmaClient = null;\n\n    // const infuraConfig = globalConfigs.network.providers.infura;\n    const polygonConfig = globalConfigs.network.providers.polygon;\n\n    const currentNetwork = this.functionsUtil.getGlobalConfig(['network','availableNetworks',networkId]);\n    const polygonNetworkId = currentNetwork.provider === 'polygon' ? networkId : this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',networkId]);\n\n    if (polygonConfig && polygonConfig.enabled && polygonConfig.rpc && Object.keys(polygonConfig.rpc).includes(parseInt(polygonNetworkId).toString())){\n      const web3PolygonRpc = polygonConfig.rpc[polygonNetworkId]+this.functionsUtil.getGlobalConfig(['network','providers','polygon','key']);\n      web3Polygon = new Web3(new Web3.providers.HttpProvider(web3PolygonRpc));\n\n      const maticProvider = new Web3(new Web3.providers.HttpProvider(web3PolygonRpc));\n      const parentProvider = new Web3(new Web3.providers.HttpProvider(web3InfuraRpc));\n      // console.log('maticProvider',web3PolygonRpc);\n      // console.log('parentProvider',web3InfuraRpc);\n\n      const maticPOSClientConfig = {\n        maticProvider,\n        parentProvider,\n        network: networkConfig.network,\n        version: networkConfig.version\n      };\n      maticPOSClient = new MaticJs.MaticPOSClient(maticPOSClientConfig);\n\n      // console.log('maticPOSClientConfig',networkConfig,maticPOSClientConfig);\n\n      const maticPlasmaClientConfig = {\n        maticProvider,\n        parentProvider,\n        network: networkConfig.network,\n        version: networkConfig.version\n      };\n      maticPlasmaClient = new MaticJs(maticPlasmaClientConfig);\n    }\n\n    window.web3Polygon = web3Polygon;\n    window.maticPOSClient = maticPOSClient;\n    window.maticPlasmaClient = maticPlasmaClient;\n\n    if (window.ethereum) {\n      currentWeb3 = new Web3(window.ethereum);\n    } else if (window.web3) {\n      currentWeb3 = new Web3(window.web3);\n    } else {\n      currentWeb3 = web3Providers[networkId];\n    }\n\n    this.setState({\n      web3Infura,\n      currentWeb3,\n      web3Polygon,\n      web3Providers,\n      maticPOSClient,\n      maticPlasmaClient\n    },() => {\n      // this.checkNetwork();\n    });\n\n    const web3Callback = async () => {\n\n      window.web3Injected = this.state.web3;\n      // window.web3InfuraInjected = this.state.web3Infura;\n\n      if (typeof this.props.callbackAfterLogin === 'function'){\n        this.props.callbackAfterLogin();\n        this.props.setCallbackAfterLogin(null);\n      }\n\n      // console.log(this.functionsUtil.strToMoment().format('HH:mm:ss'),'initWeb3 - web3Callback');\n\n      // console.log('web3Callback',context.account,this.state.network.isSupportedNetwork,this.state.contractsInitialized,this.state.networkInitialized);\n\n      // After setting the web3 provider, check network\n      try {\n        // if (!this.state.networkInitialized){\n        //   await this.checkNetwork();\n        // }\n\n        if (this.state.network.isSupportedNetwork){\n\n          if (!this.state.contractsInitialized){\n            await this.initializeContracts();\n          }\n\n          if (context.account){\n            // Login with biconomy\n            if (this.state.biconomy){\n              const biconomy = this.state.biconomy;\n              const biconomyInfo = globalConfigs.network.providers.biconomy;\n              if (biconomyInfo.enableLogin && !biconomy.isLogin && !biconomyLoginProcessing){\n                biconomyLoginProcessing = true;\n                biconomy.login(context.account, (error, response) => {\n                  // this.functionsUtil.customLog('biconomy login',error,response);\n                  // Failed to login with Biconomy\n                  if (error) {\n                    return this.setState({\n                      biconomy:false,\n                    },() => {\n                      this.initAccount(context.account);\n                    });\n                  }\n\n                  biconomyLoginProcessing = false;\n\n                  if (response.transactionHash) {\n                    this.initAccount(context.account);\n                  } else if(response.userContract) {\n                    this.initAccount(context.account);\n                  }\n                });\n                return false;\n              }\n            }\n\n            await this.initAccount(context.account);\n          } else {\n\n            await this.initAccount();\n            // await this.setState({\n            //   accountInizialized: true,\n            //   account: this.props.customAddress\n            // });\n          }\n        }\n      // Initialize Infura Web3 and display error\n      } catch (error) {\n        this.openConnectionErrorModal(null,error.message);\n      }\n    }\n\n    // Save original web3 connector in case Mexa initialization fails\n    const originalWeb3 = web3;\n    const biconomyInfo = globalConfigs.network.providers.biconomy;\n\n    if (connectorName !== 'Infura' && biconomyInfo && biconomyInfo.enabled && biconomyInfo.supportedNetworks.includes(networkId) && (!walletProvider || !biconomyInfo.disabledWallets.includes(walletProvider.toLowerCase()))){\n\n      if (this.state.biconomy === null){\n        const biconomyWeb3Provider = web3Provider ? web3Provider : web3Host;\n\n        // console.log('biconomyWeb3Provider',web3Provider,web3Host,biconomyWeb3Provider===web3Provider);\n\n        const biconomy = new Biconomy(biconomyWeb3Provider,biconomyInfo.params);\n\n        if (biconomy && typeof biconomy.onEvent === 'function'){\n          web3 = new Web3(biconomy);\n          biconomy.onEvent(biconomy.READY, () => {\n            if (this.componentUnmounted || this.state.biconomy === false || this.state.biconomy === biconomy){\n              return false;\n            }\n            \n            const permitClient = biconomy.permitClient;\n            const erc20ForwarderClient = biconomy.erc20ForwarderClient;\n\n            const newState = {\n              web3,\n              biconomy,\n              web3Infura,\n              permitClient,\n              web3Providers,\n              erc20ForwarderClient\n            };\n            // console.log('biconomy',newState);\n\n            if (web3 !== this.state.web3){\n              this.setState(newState, web3Callback);\n            }\n          }).onEvent(biconomy.ERROR, (error, message) => {\n            // console.error('Biconomy error',error,message,this.state.biconomy);\n            web3 = originalWeb3;\n            // Handle error while initializing mexa\n            if (this.state.biconomy !== false){\n              this.setState({\n                web3,\n                biconomy:false\n              }, web3Callback);\n            }\n          });\n        } else {\n          this.setState({\n            web3,\n            biconomy:false\n          }, web3Callback);\n        }\n      }\n    } else {\n      if (web3 !== this.state.web3){\n        this.setState({\n          web3\n        }, web3Callback);\n      } else if (context.account || forceCallback){\n        web3Callback();\n      }\n    }\n\n    return web3;\n  }\n\n  initContract = async (name, address, abi, useInfuraProvider=false) => {\n    // console.log(`initContract: ${name} - addr: ${address}`);\n    return await this.createContract(name, address, abi, useInfuraProvider);\n  }\n\n  initContractWithoutSet = (name, address, abi, networkId=null) => {\n    // Reset networkId is equal to injected\n    if (networkId && parseInt(networkId) === parseInt(this.state.network.required.id) && this.state.network.isCorrectNetwork){\n      networkId = null;\n    }\n    const web3Provider = networkId && this.state.web3Providers[networkId] ? this.state.web3Providers[networkId] : (this.state.network.isCorrectNetwork ? this.state.web3 : this.state.web3Providers[this.state.network.required.id]);\n\n    if (!web3Provider){\n      return null;\n    }\n\n    // Create contract on initialized web3 provider with given abi and address\n    try {\n      const contract = new web3Provider.eth.Contract(abi, address);\n      return {name, contract};\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Could not create contract.\",name,address,error);\n    }\n\n    return null;\n  }\n\n  createContract = async (name, address, abi, useInfuraProvider=false) => {\n\n    const web3Provider = useInfuraProvider && this.state.web3Infura ? this.state.web3Infura : (this.state.network.isCorrectNetwork ? this.state.web3 : this.state.web3Providers[this.state.network.required.id]);\n\n    // if (name==='ERC20Predicate'){\n    //   console.log('createContract',this.state.network,web3Provider);\n    // }\n\n    if (!web3Provider){\n      return null;\n    }\n\n    if (!abi){\n      abi = [];\n    }\n\n    // Create contract on initialized web3 provider with given abi and address\n    try {\n      const contract = new web3Provider.eth.Contract(abi, address);\n      this.setState(state => ({\n        ...state,\n        contracts: [...state.contracts, {name, contract}]\n      }));\n\n      // if (name==='ERC20Predicate'){\n      //   debugger;\n      // }\n\n      return {name, contract};\n    } catch (error) {\n      console.error(\"Could not create contract.\",name,address,abi,error);\n    }\n\n    return null;\n  }\n\n  initSimpleID = () => {\n\n    if (this.state.simpleID){\n      return this.state.simpleID;\n    }\n\n    const simpleIDInfo = globalConfigs.network.providers.simpleID;\n    let simpleID = null;\n    const networkId = this.state.network.current.id || this.state.network.required.id;\n\n    if (simpleIDInfo && simpleIDInfo.enabled && simpleIDInfo.supportedNetworks.indexOf(networkId) !== -1 ){\n      const simpleIDParams = simpleIDInfo.params;\n      simpleIDParams.network = simpleIDInfo.getNetwork(this.state.network.current.id,globalConfigs.network.availableNetworks);\n      simpleID = new SimpleID(simpleIDParams);\n    }\n\n    window.simpleID = simpleID;\n\n    this.setState({\n      simpleID\n    });\n\n    return simpleID;\n  }\n\n  initAccount = async (account=false) => {\n    \n    const customAddress = this.props.customAddress;\n    const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n\n    if (customAddress){\n      // Set custom account\n      return this.setState({\n        account:customAddress,\n        accountInizialized:true,\n      },()=>{\n        this.getAccountBalance();\n      });\n    } else if (this.props.connectorName === 'Infura' || !this.props.connectorName){\n      return this.setState({\n        account:null,\n        accountInizialized:true\n      });\n    }\n\n    try {\n      if (!account){\n        const wallets = await Promise.race([\n            this.state.web3.eth.getAccounts(),\n            new Promise((resolve) => setTimeout(resolve, 300))\n        ]);\n\n        if (wallets && wallets.length){\n          account = wallets[0];\n        }\n      }\n\n      if (!account){\n        account = this.props.context.account;\n      }\n\n      if (!account || this.state.account === account){\n        return this.setState({\n          accountInizialized: true\n        });\n      }\n\n\n      // Request account access if needed\n      if (account){\n\n        // Send address info to SimpleID\n        const simpleID = this.initSimpleID();\n\n        if (simpleID){\n\n          const notifications = await simpleID.notifications();\n\n          if (notifications && notifications.length && window.$crisp){\n\n            let shownNotifications = [];\n            if (localStorage){\n              shownNotifications = localStorage.getItem('shownNotifications') && JSON.parse(localStorage.getItem('shownNotifications')) ? JSON.parse(localStorage.getItem('shownNotifications')) : [];\n            }\n\n            notifications.forEach((n,i) => {\n\n              const notificationId = n.name;\n\n              // Show notification if not shown already\n              if (shownNotifications.indexOf(notificationId) === -1){\n                window.$crisp.push([\"do\", \"message:show\", [\"text\", this.functionsUtil.normalizeSimpleIDNotification(n.content) ]]);\n\n                // Save notification id\n                shownNotifications.push(notificationId);\n              }\n            });\n\n            // Store shown notification\n            if (localStorage){\n              this.functionsUtil.setLocalStorage('shownNotifications',JSON.stringify(shownNotifications));\n            }\n          }\n        }\n\n        // Send Google Analytics connection event\n        this.functionsUtil.sendGoogleAnalyticsEvent({\n          eventCategory: 'Connect',\n          eventAction: 'connected',\n          eventLabel: walletProvider\n        });\n\n        // this.functionsUtil.customLog('initAccount',account);\n\n        // Set custom account\n        this.setState({\n          account,\n          // web3SocketProvider,\n          accountInizialized: true\n        });\n\n        // After account is complete, get the balance\n        this.getAccountBalance();\n\n        // TODO subscribe for account changes, no polling\n        // set a state flag which indicates if the subscribe handler has been\n        // called at least once\n      } else {\n        return this.setState({\n          account:null,\n          accountInizialized: true,\n        });\n      }\n    } catch (error) {\n\n      this.setState({\n        accountInizialized: true\n      });\n\n      // User denied account access...\n      this.functionsUtil.customLog(\"User cancelled connect request. Error:\", error);\n\n      // this.functionsUtil.customLog(error);\n\n      // Catch ledger error\n      if (error && error.message && error.message.includes('MULTIPLE_OPEN_CONNECTIONS_DISALLOWED')) {\n        return;\n      }\n\n      // Send Sentry connection error\n      const isError = error instanceof Error;\n      if (this.functionsUtil.checkUrlOrigin() && isError){\n        Sentry.captureException(error);\n      }\n\n      // Reject Connect\n      // this.rejectAccountConnect(error);\n    }\n  }\n\n  // TODO: Can this be moved/combined?\n  rejectAccountConnect = error => {\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  getAccountBalance = async (increaseAmount) => {\n\n    increaseAmount = increaseAmount ? this.functionsUtil.BNify(increaseAmount) : null;\n\n    try {\n\n      let [accountBalance,accountBalanceToken,tokenDecimals] = await Promise.all([\n        this.state.web3.eth.getBalance(this.state.account), // Get ETH balance\n        this.getTokenBalance(this.state.account), // Get token balance\n        this.getTokenDecimals()\n      ]);\n\n      // console.log('getAccountBalance',parseFloat(accountBalance));\n\n      if (accountBalance) {\n\n        // Convert to wei if decimals found\n        if (accountBalance.toString().includes('.')){\n          accountBalance = this.state.web3.utils.toWei(accountBalance);\n        }\n\n        // Convert to Eth amount\n        accountBalance = this.state.web3.utils.fromWei(\n          accountBalance,\n          'ether'\n        );\n\n        accountBalance = this.functionsUtil.BNify(accountBalance).toString();\n\n        this.setState({\n          accountBalance\n        });\n\n        this.functionsUtil.customLog(\"account balance: \", accountBalance);\n      }\n\n      // this.functionsUtil.customLog('accountBalance',res,(accountBalanceToken ? accountBalanceToken.toString() : null),tokenDecimals,increaseAmount);\n\n      if (accountBalanceToken) {\n\n        accountBalanceToken = this.functionsUtil.BNify(accountBalanceToken);\n\n        // Increase balance amount if passed and balance didn't change\n        if (increaseAmount && this.state.accountBalanceToken && this.functionsUtil.normalizeTokenAmount(this.state.accountBalanceToken,tokenDecimals).toString() === accountBalanceToken.toString()){\n          accountBalanceToken = accountBalanceToken.plus(increaseAmount);\n        }\n        \n        accountBalanceToken = this.functionsUtil.fixTokenDecimals(accountBalanceToken,tokenDecimals).toString();\n\n        // this.functionsUtil.customLog('increaseAmount',(increaseAmount ? increaseAmount.toString() : '0'),(this.state.accountBalanceToken ? this.state.accountBalanceToken.toString() : '0'),(accountBalanceToken ? accountBalanceToken.toString() : 'ERROR'));\n        // this.functionsUtil.customLog(`account balance ${this.props.selectedToken}: `, accountBalanceToken);\n\n        this.setState({\n          accountBalanceToken,\n          [`accountBalance${this.props.selectedToken}`]:accountBalanceToken\n        });\n\n      } else {\n        this.functionsUtil.customLog('accountBalanceToken is not set:',accountBalanceToken);\n      }\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Failed to get account balance.\", error);\n    }\n  }\n\n  initializeContracts = async () => {\n\n    if (!this.state.web3 || !this.props.availableStrategies){\n      return false;\n    }\n\n    // console.log(this.functionsUtil.strToMoment().format('HH:mm:ss'),'initializeContracts - START',this.state.network.required.id,this.props.availableStrategies,this.props.availableStrategiesNetworks);\n\n    const contracts = [];\n    const contractsNetworks = {};\n    const requiredNetworkId = parseInt(this.state.network.required.id);\n    const availableNetworks = this.functionsUtil.getGlobalConfig(['network','enabledNetworks']);\n\n    if (this.props.availableStrategiesNetworks){\n      Object.keys(this.props.availableStrategiesNetworks).forEach( networkId => {\n        contractsNetworks[networkId] = [];\n        const strategies = this.props.availableStrategiesNetworks[networkId];\n        Object.keys(strategies).forEach( strategy => {\n          const availableTokens = this.props.availableStrategiesNetworks[networkId][strategy];\n          Object.keys(availableTokens).forEach( token => {\n            const tokenConfig = availableTokens[token];\n\n            this.functionsUtil.customLog('initializeContracts, init contract',token, tokenConfig.address);\n            contractsNetworks[networkId].push(this.initContractWithoutSet(token, tokenConfig.address, tokenConfig.abi, networkId));\n\n            this.functionsUtil.customLog('initializeContracts, init contract',tokenConfig.idle.token, tokenConfig.idle.address);\n            contractsNetworks[networkId].push(this.initContractWithoutSet(tokenConfig.idle.token, tokenConfig.idle.address, tokenConfig.idle.abi, networkId));\n\n            tokenConfig.protocols.forEach(async (p,i) => {\n              this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n              contractsNetworks[networkId].push(this.initContractWithoutSet(p.token, p.address, p.abi, networkId));\n            });\n          })\n        });\n      });\n    }\n\n    // console.log('initializeContracts',this.state.network,this.state.web3,contracts,this.props.availableStrategies);\n\n    const contractsToInitialize = this.functionsUtil.getGlobalConfig(['contracts',requiredNetworkId]);\n    if (contractsToInitialize){\n      Object.keys(contractsToInitialize).forEach( contractName => {\n        const contractInfo = contractsToInitialize[contractName];\n        if (contractInfo.address !== null && contractInfo.abi !== null){\n          const networkId = contractInfo.networkId ? parseInt(contractInfo.networkId) : requiredNetworkId;\n          // console.log('initializeContracts, init contract', requiredNetworkId, contractName, contractInfo.address);\n          contracts.push(this.initContractWithoutSet(contractName, contractInfo.address, contractInfo.abi, networkId));\n          contractsNetworks[requiredNetworkId].push(this.initContractWithoutSet(contractName, contractInfo.address, contractInfo.abi, networkId));\n        }\n      });\n    }\n\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    if (govTokens){\n      Object.keys(govTokens).forEach( token => {\n        const govTokenConfig = govTokens[token];\n        if (!govTokenConfig.enabled){\n          return;\n        }\n        availableNetworks.forEach( networkId => {\n          // Initialize govToken contracts\n          const contractAddress = govTokenConfig.addresses && govTokenConfig.addresses[networkId] ? govTokenConfig.addresses[networkId] : govTokenConfig.address;\n          this.functionsUtil.customLog('initializeContracts, init contract', token, contractAddress);\n          if (parseInt(networkId) === parseInt(requiredNetworkId)){\n            contracts.push(this.initContractWithoutSet(token, contractAddress, govTokenConfig.abi));\n          }\n          contractsNetworks[networkId].push(this.initContractWithoutSet(token, contractAddress, govTokenConfig.abi, networkId));\n        });\n      });\n    }\n\n    if (this.props.availableStrategies){\n      // Initialize Tokens Contracts\n      Object.keys(this.props.availableStrategies).forEach( strategy => {\n        const availableTokens = this.props.availableStrategies[strategy];\n        Object.keys(availableTokens).forEach( token => {\n          const tokenConfig = availableTokens[token];\n\n          this.functionsUtil.customLog('initializeContracts, init contract',token, tokenConfig.address);\n          contracts.push(this.initContractWithoutSet(token, tokenConfig.address, tokenConfig.abi));\n\n          // Initialize idleTokens contracts\n          this.functionsUtil.customLog('initializeContracts, init contract',tokenConfig.idle.token, tokenConfig.idle.address);\n          contracts.push(this.initContractWithoutSet(tokenConfig.idle.token, tokenConfig.idle.address, tokenConfig.idle.abi));\n\n          // Initialize protocols contracts\n          tokenConfig.protocols.forEach(async (p,i) => {\n            this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n            contracts.push(this.initContractWithoutSet(p.token, p.address, p.abi));\n          });\n\n          // Check migration contract\n          if (tokenConfig.migration){\n\n            if (tokenConfig.migration.oldContract){\n              const oldContract = tokenConfig.migration.oldContract;\n              this.functionsUtil.customLog('initializeContracts, init '+oldContract.name+' contract',oldContract);\n              contracts.push(this.initContractWithoutSet(oldContract.name, oldContract.address, oldContract.abi));\n            }\n\n            // Initialize protocols contracts\n            if (tokenConfig.migration.oldProtocols){\n              tokenConfig.migration.oldProtocols.forEach(async (p,i) => {\n                this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n                contracts.push(this.initContractWithoutSet(p.token, p.address, p.abi));\n              });\n            }\n\n            if (tokenConfig.migration.migrationContract){\n              const migrationContract = tokenConfig.migration.migrationContract;\n              this.functionsUtil.customLog('initializeContracts, init '+migrationContract.name+' contract',migrationContract);\n              contracts.push(this.initContractWithoutSet(migrationContract.name, migrationContract.address, migrationContract.abi));\n            }\n          }\n        })\n      });\n    }\n\n    const tranchesConfig = this.functionsUtil.getGlobalConfig(['strategies','tranches']);\n    if (this.props.availableTranches){\n      Object.keys(this.props.availableTranches).forEach( protocol => {\n        const tokens = this.props.availableTranches[protocol];\n        Object.keys(tokens).forEach( token => {\n          const tokenConfig = tokens[token];\n          if (!tranchesConfig.availableNetworks || tranchesConfig.availableNetworks.includes(requiredNetworkId)){\n            contracts.push(this.initContractWithoutSet(tokenConfig.name,tokenConfig.address,tokenConfig.abi));\n            contracts.push(this.initContractWithoutSet(tokenConfig.AA.name,tokenConfig.AA.address,tokenConfig.AA.abi));\n            contracts.push(this.initContractWithoutSet(tokenConfig.BB.name,tokenConfig.BB.address,tokenConfig.BB.abi));\n            contracts.push(this.initContractWithoutSet(tokenConfig.CDO.name,tokenConfig.CDO.address,tokenConfig.CDO.abi));\n            contracts.push(this.initContractWithoutSet(tokenConfig.AA.CDORewards.name,tokenConfig.AA.CDORewards.address,tokenConfig.AA.CDORewards.abi));\n            contracts.push(this.initContractWithoutSet(tokenConfig.BB.CDORewards.name,tokenConfig.BB.CDORewards.address,tokenConfig.BB.CDORewards.abi));\n          }\n\n          contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.name,tokenConfig.address,tokenConfig.abi,1));\n          contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.AA.name,tokenConfig.AA.address,tokenConfig.AA.abi,1));\n          contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.BB.name,tokenConfig.BB.address,tokenConfig.BB.abi,1));\n          contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.CDO.name,tokenConfig.CDO.address,tokenConfig.CDO.abi,1));\n          contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.AA.CDORewards.name,tokenConfig.AA.CDORewards.address,tokenConfig.AA.CDORewards.abi,1));\n          contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.BB.CDORewards.name,tokenConfig.BB.CDORewards.address,tokenConfig.BB.CDORewards.abi,1));\n        });\n      });\n    }\n\n    const newState = {\n      contractsNetworks,\n      contractsInitialized:true,\n      contracts:contracts.filter( c => !!c )\n    };\n\n    // console.log(this.functionsUtil.strToMoment().format('HH:mm:ss'),'initializeContracts - END',newState.contracts);\n\n    return this.setState(newState);\n  }\n\n  getContractByName = async (contractName) => {\n    let contract = this.state.contracts.find(c => c.name === contractName);\n\n    if (!contract && this.props.tokenConfig) {\n      const tokenConfig = this.props.tokenConfig;\n      contract = await this.initContract(contractName, tokenConfig.address, tokenConfig.abi);\n    }\n\n    return contract ? contract.contract : null;\n  }\n\n  getTokenDecimals = async () => {\n    let tokenDecimals = null;\n\n    if (!this.state.tokenDecimals){\n\n      tokenDecimals = await this.functionsUtil.getTokenDecimals(this.props.selectedToken);\n\n      this.setState({\n        tokenDecimals\n      });\n    } else {\n      tokenDecimals = await (new Promise( async (resolve, reject) => {\n        resolve(this.state.tokenDecimals);\n      }));\n    }\n\n    return tokenDecimals;\n  }\n\n  getTokenBalance = async (account) => {\n    const contract = await this.getContractByName(this.props.selectedToken);\n\n    if (!contract) {\n      this.functionsUtil.customLogError('Wrong contract name', this.props.selectedToken);\n      return null;\n    }\n\n    if (!contract.methods['balanceOf']){\n      this.customLogError('Wrong method name balanceOf');\n      return null;\n    }\n\n    return await contract.methods.balanceOf(account).call().catch(error => {\n      this.functionsUtil.customLog(`Failed to get ${this.props.selectedToken} balance`, error);\n    });\n  }\n\n  determineAccountLowBalance = () => {\n    // If provided a minimum from config then use it, else default to 1\n    const accountBalanceMinimum =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.accountBalanceMinimum !== \"undefined\"\n        ? this.props.config.accountBalanceMinimum\n        : 1;\n    // Determine if the account balance is low\n    const accountBalanceLow =\n      this.state.accountBalance < accountBalanceMinimum;\n\n    this.setState({\n      accountBalanceLow\n    });\n  }\n\n  connectAndValidateAccount = async (callbackAfterLogin) => {\n    // Check for account\n    if (!this.state.account) {\n      this.props.setCallbackAfterLogin(callbackAfterLogin);\n      // Show modal to connect account\n      this.openConnectionModal();\n    }\n  }\n\n  getRequiredNetwork = () => {\n     const networkId = typeof this.props.config !== \"undefined\" && typeof this.props.config.requiredNetwork !== \"undefined\" ? this.props.config.requiredNetwork : globalConfigs.network.requiredNetwork;\n     const networkName = networkId && globalConfigs.network.availableNetworks[networkId] ? globalConfigs.network.availableNetworks[networkId].name : 'unknown';\n     return {\n       id: networkId,\n       name: networkName\n     };\n   }\n\n   getCurrentNetwork = async (networkId=null) => {\n     const currentWeb3 = this.functionsUtil.getCurrentWeb3();\n\n     networkId = parseInt(networkId) || await currentWeb3.eth.net.getId();\n     const networkName = this.functionsUtil.getGlobalConfig(['network','availableNetworks',networkId,'name']) || await currentWeb3.eth.net.getNetworkType();\n\n     return {\n       id:networkId,\n       name:networkName\n     }\n   }\n\n  getNetworkId = async () => {\n    try {\n      return this.state.web3.eth.net.getId((error, networkId) => {\n        let current = { ...this.state.network.current };\n        current.id = networkId;\n        let network = Object.assign({},this.state.network);\n        network.current = current;\n        network.isCorrectNetwork = globalConfigs.network.enabledNetworks.includes(networkId);\n        this.setState({ network });\n      });\n    } catch (error) {\n      this.functionsUtil.customLog(\"Could not get network ID: \", error);\n    }\n  }\n\n  checkNetwork = async (networkId=null) => {\n    const network = {...this.state.network};\n\n    network.required = this.getRequiredNetwork();\n    network.current = await this.getCurrentNetwork(networkId);\n\n    const networkInitialized = !!network.current.id;\n    network.isCorrectNetwork = !networkInitialized || network.current.id === network.required.id;\n    network.isSupportedNetwork = !network.current.id || globalConfigs.network.enabledNetworks.includes(network.current.id);\n\n    const currentNetworkChanged = network.current.id && network.current.id !== this.state.network.current.id;\n    const requiredNetworkChanged = network.required.id && network.required.id !== this.state.network.required.id;\n\n    if (!this.state.network.current.id || currentNetworkChanged || requiredNetworkChanged || !this.state.networkInitialized){\n      this.setState({\n        network,\n        networkInitialized\n      });\n    }\n\n    return network;\n  }\n\n  contractMethodSendWrapper = async (contractName, contractMethod, params = [], value = null, callback = null, callback_receipt = null, gasLimit = null, txData = null) => {\n    // Is it on the correct network?\n    if (!this.state.network.isCorrectNetwork) {\n      // wrong network modal\n      this.state.modals.methods.openWrongNetworkModal();\n      return false;\n    }\n\n    // Is a wallet connected and verified?\n    if (!this.state.account) {\n      this.openConnectionModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_not_connected');\n      }\n      return false;\n    }\n\n    // Are there a minimum amount of funds?\n    if (this.state.accountBalanceLow) {\n      this.openLowFundsModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_balance_low');\n      }\n      return false;\n    }\n\n    // Is the contract loaded?\n\n    // Create new tx and add to collection\n    // Maybe this needs to get moved out of the wrapper?\n    let transaction = this.createTransaction(txData);\n    transaction.method = contractMethod;\n\n    this.addTransaction(transaction);\n\n    // Add meta data to transaction\n    transaction.type = \"contract\";\n    transaction.status = \"started\";\n    transaction.params = params;\n\n    // Show toast for starting transaction\n    this.updateTransaction(transaction);\n\n    const { account, contracts } = this.state;\n    let contract = contracts.find(c => c.name === contractName);\n    if (!contract) {\n      if (typeof callback === 'function') {\n        callback(null,'contract_not_found');\n      }\n      return this.functionsUtil.customLog(`No contract with name ${contractName}`);\n    }\n\n    contract = contract.contract;\n\n    // Does the method exists?\n    // if (typeof contract.methods[contractMethod] === 'undefined'){\n    //   return false;\n    // }\n\n    let manualConfirmationTimeoutId = null;\n\n    try {\n\n      if (!value){\n        value = this.functionsUtil.BNify(0);\n      }\n\n      this.functionsUtil.customLog('contractMethodSendWrapper',contractName,contract._address,account,contractMethod,params,(value ? { from: account, value } : { from: account }));\n\n      // estimate gas price\n      let gas = await contract.methods[contractMethod](...params)\n        .estimateGas(value ? { from: account, value } : { from: account })\n        .catch(e => console.error(e));\n\n      if (gas) {\n\n        gas = this.functionsUtil.BNify(gas);\n        gas = gas.plus(gas.times(this.functionsUtil.BNify('0.2'))); // Increase 20% of enstimation\n\n        // Check if gas is under the gasLimit param\n        if (gasLimit && gas.lt(this.functionsUtil.BNify(gasLimit))){\n          gas = this.functionsUtil.BNify(gasLimit);\n        }\n\n        // Convert gasLimit toBN with web3 utils\n        gas = this.state.web3.utils.toBN(gas.integerValue(BigNumber.ROUND_FLOOR));\n      }\n\n      const confirmationCallback = (confirmationNumber, receipt) => {\n\n        // this.functionsUtil.customLog('confirmationCallback', confirmationNumber, receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // this.functionsUtil.customLog('txOnConfirmation', receipt);\n        // Update confirmation count on each subsequent confirmation that's received\n        transaction.confirmationCount += 1;\n\n        const call_callback = !globalConfigs.network.isForked && typeof callback === 'function' && transaction.confirmationCount===1;\n\n        // How many confirmations should be received before informing the user\n        const confidenceThreshold = this.props.config.requiredConfirmations || 1;\n\n        if (transaction.confirmationCount === 1) {\n          // Initial confirmation receipt\n          transaction.status = \"confirmed\";\n        } else if (transaction.confirmationCount < confidenceThreshold) {\n          // Not enough confirmations to match threshold\n        }\n\n        if (transaction.confirmationCount === confidenceThreshold) {\n          // Confirmations match threshold\n          // Check the status from result since we are confident in the result\n          if (receipt.status) {\n            transaction.status = \"success\";\n          } else if (!receipt.status) {\n            transaction.status = \"error\";\n          }\n        } else if (transaction.confirmationCount > confidenceThreshold) {\n          // Confidence threshold met\n        }\n\n\n        if (call_callback){\n          // Update transaction with receipt details\n          if (receipt){\n            transaction.txReceipt = receipt;\n          }\n          transaction.recentEvent = \"confirmation\";\n          this.updateTransaction(transaction);\n          \n          callback(transaction);\n\n          this.functionsUtil.customLog('Confirmed', confirmationNumber, receipt, transaction);\n        }\n      };\n\n      const manualConfirmation = (transactionHash,timeout) => {\n        if (!transactionHash){\n          return false;\n        }\n        this.state.web3.eth.getTransactionReceipt(transactionHash,(err,txReceipt) => {\n          if (txReceipt && txReceipt.status){\n            this.functionsUtil.customLog('Tx manualConfirmation', txReceipt);\n            confirmationCallback(1,txReceipt);\n          } else {\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(transactionHash,timeout) , timeout);\n          }\n        });\n      };\n\n      const receiptCallback = receipt => {\n\n        // this.functionsUtil.customLog('txOnReceipt', receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // Received receipt, met total number of confirmations\n        if (receipt){\n          transaction.txReceipt = receipt;\n        }\n        transaction.recentEvent = \"receipt\";\n\n        // If the network is forked use the receipt for confirmation\n        if (globalConfigs.network.isForked){\n          transaction.status = \"success\";\n          if (typeof callback === 'function') {\n            callback(transaction);\n          }\n        } else {\n          this.updateTransaction(transaction);\n\n          // Transaction mined, wait for manual confirmation\n          if (receipt.status){\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(receipt.transactionHash,4000), 2000);\n          }\n        }\n      };\n\n      // const networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n      // const common = { customChain:{ chainId: 1337, networkId: 1337 } };\n\n      return contract.methods[contractMethod](...params)\n        .send(value ? { from: account, value, gas/*, common*/ } : { from: account, gas/*, common*/ })\n        .on(\"transactionHash\", hash => {\n          this.functionsUtil.customLog('txOnTransactionHash', hash);\n\n          if (!hash){\n            this.functionsUtil.customLog('Skip transactionHash due to hash empty', hash);\n            return false;\n          }\n\n          transaction.transactionHash = hash;\n          transaction.status = \"pending\";\n          transaction.recentEvent = \"transactionHash\";\n          this.updateTransaction(transaction);\n\n          if (callback_receipt){\n            callback_receipt(transaction);\n          }\n\n          // Wait for manual confirmation only for mobile\n          if (this.props.isMobile){\n            if (manualConfirmationTimeoutId){\n              window.clearTimeout(manualConfirmationTimeoutId);\n            }\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(hash,60000), 20000);\n          }\n        })\n        .on(\"receipt\", receiptCallback)\n        .on(\"confirmation\", confirmationCallback)\n        .on(\"error\", error => {\n\n          console.log('Tx error',error);\n          \n          const isDeniedTx = error && error.message && typeof error.message.includes === 'function' ? error.message.includes('User denied transaction signature') : false;\n          \n          // Set error on transaction\n          transaction.status = \"error\";\n          transaction.recentEvent = \"error\";\n          this.updateTransaction(transaction);\n\n\n          // Show ToastProvider\n          if (!isDeniedTx){\n            window.toastProvider.addMessage(\"Something went wrong\", {\n              icon: 'Block',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n              colorTheme: 'light',\n              secondaryMessage: \"Please retry\",\n            });\n\n            const isError = error instanceof Error;\n\n            if (typeof error.message !== 'undefined'){\n              this.openTransactionErrorModal(null,error.message);\n            } else if (this.functionsUtil.checkUrlOrigin() && isError){\n              Sentry.captureException(error);\n            }\n          }\n\n          if (typeof callback === 'function') {\n            callback(transaction,error);\n          }\n        });\n    } catch (error) {\n\n      console.log('Tx catch error',error);\n\n      transaction.status = \"error\";\n      this.updateTransaction(transaction);\n\n      // TODO: should this be a custom error? What is the error here?\n      // TODO: determine how to handle error messages globally\n      window.toastProvider.addMessage(\"Something went really wrong, we are sorry\", {\n        icon: 'Block',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"failure\",\n        colorTheme: 'light',\n        secondaryMessage: \"Try refreshing the page :(\",\n      });\n\n      const isDeniedTx = error && error.message ? error.message.includes('User denied transaction signature') : false;\n\n      const isError = error instanceof Error;\n      if ( this.functionsUtil.checkUrlOrigin() && isError && !isDeniedTx){\n        Sentry.captureException(error);\n      }\n\n      if (typeof callback === 'function') {\n        // this.functionsUtil.customLog('Tx Failed',error,transaction,typeof callback);\n        callback(transaction,error);\n      }\n\n      return false;\n    }\n  }\n\n  // Create tx\n  createTransaction = (txData=null) => {\n    let transaction = {\n      ...txData\n    };\n    transaction.txReceipt = {};\n    transaction.created = Date.now();\n    transaction.confirmationCount = 0;\n    transaction.status = \"initialized\";\n    transaction.lastUpdated = Date.now();\n    transaction.token = this.props.selectedToken;\n    transaction.strategy = this.props.selectedStrategy;\n    transaction.networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    return transaction;\n  }\n\n  addTransaction = transaction => {\n    const transactions = { ...this.state.transactions };\n    transactions[`tx${transaction.created}`] = transaction;\n    this.setState({ transactions });\n  }\n\n  // Add/update transaction in state\n  updateTransaction = updatedTransaction => {\n    const transactions = { ...this.state.transactions };\n    const transaction = { ...updatedTransaction };\n    transaction.lastUpdated = Date.now();\n    transactions[`tx${updatedTransaction.created}`] = transaction;\n    this.setState({ transactions });\n\n    // Save transactions in localStorage only if pending or succeeded\n    // console.log('updateTransaction',transaction);\n    if (transaction.transactionHash){\n      // Clear cached data\n      this.functionsUtil.clearCachedData();\n\n      // Store transaction\n      this.functionsUtil.addStoredTransaction(`tx${transaction.created}`,transaction);\n    }\n\n    return transaction;\n  }\n\n  // CONNECTION MODAL METHODS\n  closeConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = false;\n    // this.functionsUtil.customLog(\"this.state\", this.state);\n    this.setState({ modals });\n  }\n\n  openConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = true;\n    this.setState({ modals: modals });\n  }\n\n  closeConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    this.setState({ modals });\n  }\n\n  openConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = true;\n    modals.data.transactionConnectionModalIsOpen = false;\n    modals.data.connectionModalIsOpen = false;\n\n    this.setState({ modals });\n  }\n\n  closeTransactionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = false;\n    this.setState({ modals });\n  }\n\n  openTransactionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = error;\n\n    this.setState({ modals });\n  }\n\n  closeConnectionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n\n    if (!this.state.modals.data.connectionError){\n      return false;\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionError = false;\n    this.setState({ modals });\n  }\n\n  openConnectionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n\n    // Handle generic error\n    if (error==='[object Object]'){\n      error = 'Unable to access to the wallet.'\n    }\n    \n    if (this.state.modals.data.connectionError !== error){\n      // console.log('openConnectionErrorModal',typeof error,typeof error === 'object' ? JSON.stringify(error) : error);\n      modals.data.connectionError = error;\n      this.setState({ modals });\n    }\n  }\n\n  closeUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = false;\n    this.setState({ modals });\n  }\n\n  openUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  closeNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  state = {\n    web3: null,\n    context:null,\n    account: null,\n    contracts: [],\n    biconomy: null,\n    simpleID: null,\n    web3Infura:null,\n    transactions: {},\n    web3Providers:{},\n    CrispClient: null,\n    currentWeb3: null,\n    permitClient:null,\n    tokenDecimals:null,\n    accountBalance: null,\n    contractsNetworks: {},\n    web3Subscription: null,\n    accountValidated: null,\n    gnosisSafeLoaded:false,\n    maticPlasmaClient:null,\n    accountBalanceDAI: null,\n    initWeb3: this.initWeb3,\n    accountBalanceLow: null,\n    networkInitialized:false,\n    accountInizialized:false,\n    erc20ForwarderClient:null,\n    subscribedTransactions:{},\n    contractsInitialized:false,\n    initAccount: this.initAccount,\n    accountValidationPending: null,\n    initSimpleID: this.initSimpleID,\n    initContract: this.initContract,\n    checkPreflight: this.checkPreflight,\n    validateAccount: this.validateAccount,\n    rejectValidation: this.rejectValidation,\n    getTokenDecimals: this.getTokenDecimals,\n    getAccountBalance: this.getAccountBalance,\n    initializeContracts: this.initializeContracts,\n    rejectAccountConnect: this.rejectAccountConnect,\n    contractMethodSendWrapper: this.contractMethodSendWrapper,\n    connectAndValidateAccount: this.connectAndValidateAccount,\n    enableUnderlyingWithdraw: this.props.enableUnderlyingWithdraw,\n    network: {\n      current: {},\n      required: {},\n      isCorrectNetwork: null,\n      checkNetwork: this.checkNetwork\n    },\n    modals: {\n      data: {\n        connectionError: null,\n        lowFundsModalIsOpen: null,\n        userRejectedConnect: null,\n        connectionModalIsOpen: null,\n        userRejectedValidation: null,\n        wrongNetworkModalIsOpen: null,\n        accountConnectionPending: null,\n        accountValidationPending: null,\n        transactionConnectionModalIsOpen: null,\n        noWalletModalIsOpen: this.noWalletModalIsOpen,\n        noWeb3BrowserModalIsOpen: this.noWeb3BrowserModalIsOpen,\n      },\n      methods: {\n        openLowFundsModal: this.openLowFundsModal,\n        openNoWalletModal: this.openNoWalletModal,\n        closeNoWalletModal: this.closeNoWalletModal,\n        closeLowFundsModal: this.closeLowFundsModal,\n        openConnectionModal: this.openConnectionModal,\n        closeConnectionModal: this.closeConnectionModal,\n        openWrongNetworkModal: this.openWrongNetworkModal,\n        closeWrongNetworkModal: this.closeWrongNetworkModal,\n        openNoWeb3BrowserModal: this.openNoWeb3BrowserModal,\n        closeNoWeb3BrowserModal: this.closeNoWeb3BrowserModal,\n        openConnectionErrorModal: this.openConnectionErrorModal,\n        closeConnectionErrorModal: this.closeConnectionErrorModal,\n        openTransactionErrorModal: this.openTransactionErrorModal,\n        closeTransactionErrorModal: this.closeTransactionErrorModal,\n        openConnectionPendingModal: this.openConnectionPendingModal,\n        closeConnectionPendingModal: this.closeConnectionPendingModal,\n        openUserRejectedValidationModal: this.openUserRejectedValidationModal,\n        openUserRejectedConnectionModal: this.openUserRejectedConnectionModal,\n        closeUserRejectedValidationModal: this.closeUserRejectedValidationModal,\n        closeUserRejectedConnectionModal: this.closeUserRejectedConnectionModal,\n      }\n    },\n    transaction: {\n      data: {\n        transactions: null\n      },\n      meta: {},\n      methods: {}\n    }\n  }\n\n  render() {\n    const connectionErrorModalOpened = typeof this.state.modals.data.connectionError === 'string' && this.state.modals.data.connectionError.length>0;\n    const transactionErrorModalOpened = typeof this.state.modals.data.transactionError === 'string' && this.state.modals.data.transactionError.length>0;\n    return (\n      <div>\n        <RimbleTransactionContext.Provider\n          {...this.props}\n          value={this.state}\n        />\n        <ConnectionModalUtil\n          {...this.props}\n          modals={this.state.modals}\n          network={this.state.network}\n          account={this.state.account}\n          isMobile={this.props.isMobile}\n          initAccount={this.state.initAccount}\n          setConnector={this.props.setConnector}\n          validateAccount={this.state.validateAccount}\n          accountValidated={this.state.accountValidated}\n          accountConnectionPending={this.state.accountConnectionPending}\n          accountValidationPending={this.state.accountValidationPending}\n        />\n        <TransactionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={transactionErrorModalOpened}\n        />\n        <ConnectionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={connectionErrorModalOpened}\n          setConnector={this.props.setConnector}\n        />\n        <NetworkUtil\n          web3={this.state.web3}\n          theme={this.props.theme}\n          network={this.state.network}\n          currentSection={this.props.currentSection}\n        />\n      </div>\n    );\n  }\n}\n\nexport default RimbleTransaction;\n","import React from \"react\";\nimport ExtLink from '../../ExtLink/ExtLink';\nimport FunctionsUtil from '../FunctionsUtil';\nimport { Box, Flex, Image, Text, Link, Icon } from \"rimble-ui\";\n// import NetworkIndicator from \"../../NetworkIndicator/NetworkIndicator\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass Header extends React.Component {\n  state = {\n\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidMount() {\n\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n\n    this.loadUtils();\n\n    if (this.props.network && !this.props.network.isCorrectNetwork){\n      return false;\n    }\n  }\n\n  render() {\n\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n\n    return (\n      <Box\n        style={{\n          left: '0',\n          right: '0',\n          zIndex: 99,\n          position: 'absolute',\n        }}\n      >\n        <Flex\n          p={2}\n          alignItems={'center'}\n          justifyContent={'center'}\n          backgroundColor={'dark-blue'}\n          flexDirection={['column','row']}\n        >\n          <Text\n            color={'white'}\n            textAlign={'center'}\n          >\n            IDLE Governance Token is now live!\n          </Text>\n          <ExtLink\n            pr={2}\n            py={1}\n            mt={[1,0]}\n            ml={[0,2]}\n            pl={'12px'}\n            color={'white'}\n            style={{\n              display:'flex',\n              borderRadius:'8px',\n              flexDirection:'row',\n              alignItems:'flex-end'\n            }}\n            backgroundColor={'#0037ff'}\n            href={'https://idlefinance.medium.com/idle-governance-is-live-9b55e8f407d7'}\n          >\n            Read More\n            <Icon\n              ml={1}\n              size={'1.3em'}\n              color={'white'}\n              name={'KeyboardArrowRight'}\n            >\n            </Icon>\n          </ExtLink>\n        </Flex>\n        <Flex\n          pt={[3,4]}\n          mx={'auto'}\n          bg={\"transparent\"}\n          width={['98%','100%']}\n          maxWidth={['100%','100em']}\n          alignItems={['center','flex-start']}\n        >\n          <Flex\n            ml={[3, 5]}\n            width={[0.5, 3/12]}\n          >\n            <RouterLink\n              to=\"/\"\n            >\n              <Image\n                position={'relative'}\n                src={'images/logo.svg'}\n                height={['35px','48px']}\n              />\n            </RouterLink>\n          </Flex>\n          <Flex\n            width={[0.5,8/12]}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={\"flex-end\"}\n          >\n            {\n              !this.props.isMobile &&\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                >\n                  {\n                    governanceEnabled && \n                      <Link\n                        mr={4}\n                        fontSize={3}\n                        color={'white'}\n                        hoverColor={'white'}\n                        fontFamily={'sansSerif'}\n                        textAlign={['center','left']}\n                        onClick={ (e) => window.location.hash='#/governance' }\n                      >\n                        Governance\n                      </Link>\n                  }\n                  <Link\n                    mr={4}\n                    fontSize={3}\n                    color={'white'}\n                    hoverColor={'white'}\n                    fontFamily={'sansSerif'}\n                    textAlign={['center','left']}\n                    onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('contacts').offsetTop,300)}}\n                  >\n                    Contact Us\n                  </Link>\n                  <Link\n                    fontSize={3}\n                    color={'white'}\n                    hoverColor={'white'}\n                    fontFamily={'sansSerif'}\n                    textAlign={['center','left']}\n                    onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('faq').offsetTop,300)}}\n                  >\n                    FAQs\n                  </Link>\n                </Flex>\n            }\n            {\n              /*\n              <Flex\n                ml={4}\n              >\n                <NetworkIndicator\n                  {...this.props}\n                />\n              </Flex>\n              */\n            }\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default Header;\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}","import Footer from '../Footer/Footer';\nimport React, { Component } from 'react';\nimport styles from './PageNotFound.module.scss';\nimport { Box, Flex, Heading, Button } from 'rimble-ui'\nimport Header_styles from '../utilities/components/Header.module.scss';\nimport {\n  Link as RouterLink,\n} from \"react-router-dom\";\n\nclass PageNotFound extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.3em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                This page doesn't exist!\n              </Heading.h1>\n              <Heading.h3 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.6em'} fontWeight={2} fontSize={['1.5em',4]} textAlign={'center'} color={'white'}>\n                Sorry, the page you are looking for cannot be found.\n              </Heading.h3>\n              <RouterLink to=\"/\" style={{textDecoration:'none'}}>\n                <Button\n                  className={Header_styles.gradientButton}\n                  borderRadius={4}\n                  size={this.props.isMobile ? 'medium' : 'medium'}\n                  mainColor={'blue'}\n                  contrastColor={'white'}\n                  fontWeight={3}\n                  fontSize={[2,2]}\n                  mx={'auto'}\n                  px={[4,5]}\n                  mt={2}\n                >\n                  GO TO HOMEPAGE\n                </Button>\n              </RouterLink>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default PageNotFound;\n","import React from \"react\";\nimport { Box, Flex, Text } from \"rimble-ui\";\n\nclass NetworkOverview extends React.Component {\n  getNetworkCircleColor = () => {\n    let circleColor = \"#333\";\n    if (this.props.network) {\n      switch (this.props.network.id) {\n        case 1:\n          circleColor = \"#56b3ae\";\n          break;\n        case 2:\n          circleColor = \"#000\";\n          break;\n        case 3:\n          circleColor = \"#ed5a8d\";\n          break;\n        case 4:\n          circleColor = \"#efc35c\";\n          break;\n        case 42:\n          circleColor = \"#6a5ff6\";\n          break;\n        default:\n          circleColor = \"#ccc\";\n      }\n    }\n\n    return circleColor;\n  };\n\n  render() {\n    const networkCircle = {\n      borderRadius: \"50%\",\n      backgroundColor: this.getNetworkCircleColor(),\n      height: \"1em\",\n      width: \"1em\"\n    };\n\n    return (\n      <Flex alignItems={\"center\"}>\n        <Box style={networkCircle} mr={2} />\n        <Text style={{ textTransform: \"capitalize\" }}>\n          {this.props.network.name}\n        </Text>\n      </Flex>\n    );\n  }\n}\n\nexport default NetworkOverview;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Flex,\n  ToastMessage,\n  Box,\n  Button,\n  Link\n} from \"rimble-ui\";\nimport NetworkOverview from \"../utilities/components/NetworkOverview\";\n\nconst DebuggerButtons = props => (\n  <Box mt={4} borderTop={1} borderColor=\"#E8E8E8\" pt={3}>\n    <Heading.h4 textAlign={\"center\"}>Show Modal</Heading.h4>\n    <Button\n      onClick={props.modals.methods.openWrongNetworkModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Blocking Wrong Network\n    </Button>\n\n    <Button\n      onClick={props.modals.methods.openConnectionModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Connection\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openConnectionPendingModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Pending\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openUserRejectedConnectionModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Rejected\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={event => {\n        props.modals.methods.openLowFundsModal(event);\n      }}\n      mr={2}\n      mb={2}\n    >\n      Low Funds\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWeb3BrowserModal}\n      mr={2}\n      mb={2}\n    >\n      Not Web3 Browser\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWalletModal}\n      mr={2}\n      mb={2}\n    >\n      No Wallet\n    </Button>\n  </Box>\n);\n\nclass Web3Debugger extends React.Component {\n  render() {\n    return (\n      <Card width={\"600px\"} mx={\"auto\"} px={4}>\n        <Heading.h3 textAlign={\"center\"}>Get Connected</Heading.h3>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            <Icon name=\"Check\" color={\"green\"} mr={2} />\n            <Text>Modern & Web3 Capable Browser</Text>\n          </Flex>\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.web3 ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Browser-connected Wallet</Text>\n          </Flex>\n\n          {!this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">You do not have a wallet.</Text>\n              </Flex>\n\n              <Link\n                href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                <Button.Outline size=\"small\">\n                  Get MetaMask Extension\n                </Button.Outline>\n              </Link>\n            </Flex>\n          ) : null}\n        </Box>\n\n        {this.props.web3 ? (\n          <Flex\n            py={3}\n            my={3}\n            borderTop={1}\n            borderBottom={1}\n            borderColor={\"#E8E8E8\"}\n            textAlign={\"center\"}\n            justifyContent={\"space-around\"}\n            alignItems={\"center\"}\n          >\n            <Button\n              size=\"small\"\n              onClick={this.props.connectAndValidateAccount}\n              disabled={!this.props.web3}\n            >\n              Connect and verify\n            </Button>\n            <Text>- or -</Text>\n            <Button size=\"small\" disabled>\n              Initiate On-Chain Action\n            </Button>\n          </Flex>\n        ) : null}\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.network.isCorrectNetwork ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Correct Network</Text>\n          </Flex>\n\n          {this.props.web3 && !this.props.network.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Box>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Current network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.current} />\n                  </Flex>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Required network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.required} />\n                  </Flex>\n                </Box>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.checkNetwork}>\n                Check Network\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.web3 && this.props.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <NetworkOverview network={this.props.network.current} />\n            </Flex>\n          ) : null}\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.account && this.props.accountValidated ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Wallet connected and verified</Text>\n          </Flex>\n\n          {!this.props.account &&\n          this.props.web3 &&\n          !this.props.userRejectedConnect ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Not connected to this dApp.</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.account && this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n              <Box>\n                <Text color=\"#999\">Connected wallet {this.props.account}</Text>\n                <Text color={this.props.accountBalanceLow ? \"red\" : \"#999\"}>\n                  Account balance {this.props.accountBalance}\n                </Text>\n              </Box>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedConnect ? (\n            <Flex ml={4} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">User rejected Connect request</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {(this.props.accountValidated === null ||\n            this.props.accountValidated === false) &&\n          this.props.web3 ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.accountValidated === false ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedValidation === false ? (\n            <Flex ml={4}>\n              <Icon name=\"Error\" mr={2} color=\"red\" />\n              <Text color=\"red\">Account not verified</Text>\n            </Flex>\n          ) : null}\n        </Box>\n\n        <DebuggerButtons {...this.props} />\n\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </Card>\n    );\n  }\n}\n\nexport default Web3Debugger;\n","import ERC20 from '../contracts/ERC20.json';\nimport IdleCDO from '../contracts/IdleCDO.json';\nimport IdleStrategy from '../contracts/IdleStrategy.json';\nimport IdleCDOTrancheRewards from '../contracts/IdleCDOTrancheRewards.json';\nconst availableTranches = {\n  idle:{\n    DAI:{\n      token:'DAI',\n      decimals:18,\n      limit:500000,\n      protocol:'idle',\n      blockNumber:13054628,\n      address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_idleDAIYield',\n        address:'0xd0DbcD556cA22d3f3c142e9a3220053FD7a247BC'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_idleDAIYield'\n      },\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA'\n        },\n        CDORewards:{\n          decimals:18,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_idleDAIYield_AA',\n          address:'0x9c3bC87693c65E740d8B2d5F0820E04A61D8375B',\n          stakingRewards:[\n            {\n              token:'IDLE',\n              enabled:true,\n              address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e'\n            }\n          ]\n        },\n        label:'idleDAI AA',\n        blockNumber:13054628,\n        name:'AA_idleDAIYield',\n        token:'AA_idleDAIYield',\n        address:'0xE9ada97bDB86d827ecbaACCa63eBcD8201D8b12E'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB'\n        },\n        CDORewards:{\n          decimals:18,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_idleDAIYield_BB',\n          address:'0x4473bc90118b18be890af42d793b5252c4dc382d',\n          stakingRewards:[\n            {\n              token:'IDLE',\n              enabled:false,\n              address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e'\n            }\n          ]\n        },\n        label:'idleDAI BB',\n        blockNumber:13054628,\n        name:'BB_idleDAIYield',\n        token:'BB_idleDAIYield',\n        address:'0x730348a54bA58F64295154F0662A08Cbde1225c2'\n      }\n    },\n    FEI:{\n      token:'FEI',\n      decimals:18,\n      limit:500000,\n      protocol:'idle',\n      blockNumber:13575397,\n      address:'0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_idleFEIYield',\n        address:'0x77648a2661687ef3b05214d824503f6717311596'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_idleFEIYield'\n      },\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA'\n        },\n        CDORewards:{\n          decimals:18,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_idleFEIYield_AA',\n          address:'0x8fcD21253AaA7E228531291cC6f644d13B3cF0Ba',\n          stakingRewards:[\n            {\n              token:'IDLE',\n              enabled:true,\n              address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e'\n            }\n          ]\n        },\n        label:'idleFEI AA',\n        blockNumber:13575397,\n        name:'AA_idleFEIYield',\n        token:'AA_idleFEIYield',\n        address:'0x9cE3a740Df498646939BcBb213A66BBFa1440af6'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB'\n        },\n        CDORewards:{\n          decimals:18,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_idleFEIYield_BB',\n          address:'0x0000000000000000000000000000000000000000',\n          stakingRewards:[\n            {\n              token:'IDLE',\n              enabled:false,\n              address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e'\n            }\n          ]\n        },\n        label:'idleFEI BB',\n        blockNumber:13575397,\n        name:'BB_idleFEIYield',\n        token:'BB_idleFEIYield',\n        address:'0x2490D810BF6429264397Ba721A488b0C439aA745'\n      }\n    }\n  }\n  /*\n  yearn:{\n  \tDAI:{\n  \t  junior:{\n  \t    address:'0x000000000000000000000000000000000000'\n  \t  },\n  \t  senior:{\n  \t    address:'0x000000000000000000000000000000000000'\n  \t  }\n  \t}\n  }\n  */\n};\nexport default availableTranches;","const TransactionToastMessages = {\n    initialized: {\n      message: \"{action} request initialized\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    started: {\n      message: \"{action} request submitted\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    pending: {\n      message: \"Processing {action} request...\",\n      secondaryMessage: \"This may take a few minutes\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: \"InfoOutline\"\n    },\n    confirmed: {\n      message: \"First block confirmed\",\n      secondaryMessage: \"Your {action} request is in progress\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: 'CheckCircle'\n    },\n    success: {\n      message: \"{action} request completed\",\n      variant: \"success\",\n      icon: 'CheckCircle'\n    },\n    error: {\n      message: \"{action} request failed\",\n      secondaryMessage: \"Could not complete transaction.\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"failure\",\n      icon: \"Block\"\n    }\n  };\n\n  export default TransactionToastMessages;\n","import React from \"react\";\nimport { ToastMessage } from \"rimble-ui\";\nimport TransactionToastMessages from \"./TransactionToastMessages\";\n\nclass TransactionToastUtil extends React.Component {\n  // Determines if collections are same size\n  collectionHasNewObject = (prevCollection, currentCollection) => {\n    return (\n      typeof prevCollection === \"undefined\" ||\n      Object.keys(prevCollection).length !==\n        Object.keys(currentCollection).length\n    );\n  };\n\n  // Returns object from currentCollection that doesn't exist in prevCollection\n  getNewObjectFromCollection = (prevCollection, currentCollection) => {\n    if (typeof prevCollection !== \"undefined\") {\n      const objectKey = Object.keys(currentCollection).filter(key => {\n        return !Object.keys(prevCollection).includes(key);\n      });\n      return currentCollection[objectKey];\n    } else {\n      return Object.keys(currentCollection).map(key => {\n        return currentCollection[key];\n      });\n    }\n  };\n\n  // Compare two collections of objects, return single object from current collection that differs from prev collection\n  getUpdatedObjectFromCollection = (prevCollection, currentCollection) => {\n    const updatedTransaction = Object.keys(prevCollection)\n      .map(key => {\n        if (\n          prevCollection[key].lastUpdated !== currentCollection[key].lastUpdated\n        ) {\n          return currentCollection[key];\n        } else {\n          return null;\n        }\n      })\n      .filter(object => object !== null);\n    return updatedTransaction[0];\n  };\n\n  // Returns an transaction from a collection based on a given identifier\n  getTransactionFromCollection = (identifier, collection) => {\n    const object = collection[`tx${identifier}`];\n    return object;\n  };\n\n  // Returns either a new object or finds an updated object in a collection against a previous collection\n  getUpdatedTransaction = (prevCollection, currentCollection) => {\n    let tx = null;\n    let currentTx = {};\n    let prevTx = {};\n\n    if (this.collectionHasNewObject(prevCollection, currentCollection)) {\n      tx = this.getNewObjectFromCollection(prevCollection, currentCollection);\n    } else {\n      currentTx = this.getUpdatedObjectFromCollection(\n        prevCollection,\n        currentCollection\n      );\n      if (currentTx) {\n        prevTx = this.getTransactionFromCollection(\n          currentTx.created,\n          prevCollection\n        );\n      } else {\n        return false;\n      }\n\n      if (currentTx.status !== prevTx.status) {\n        tx = currentTx;\n      }\n    }\n    return tx;\n  };\n\n  // Check for updates to the transactions collection\n  processTransactionUpdates = prevProps => {\n    let tx = null;\n    if (Object.keys(this.props.transactions).length) {\n      tx = this.getUpdatedTransaction(\n        prevProps.transactions,\n        this.props.transactions\n      );\n    }\n\n    if (tx) {\n      this.showTransactionToast(tx);\n    }\n  };\n\n  showTransactionToast = transaction => {\n    // console.log(\"showTransactionToast: \", { ...transaction });\n    // Get text info for toast\n    let toastMeta = this.getTransactionToastMeta(transaction);\n    toastMeta.colorTheme = this.props.themeMode;\n    toastMeta.closeElem = true;\n    // console.log('toastMeta',toastMeta);\n\n    // Show toast\n    window.toastProvider.addMessage(\".\", toastMeta);\n  };\n\n  getTransactionToastMeta = transaction => {\n    let transactionToastMeta = {};\n    let status = transaction.status;\n\n    switch (status) {\n      case \"initialized\":\n        transactionToastMeta = TransactionToastMessages.initialized;\n        break;\n      case \"started\":\n        transactionToastMeta = TransactionToastMessages.started;\n        break;\n      case \"pending\":\n        transactionToastMeta = TransactionToastMessages.pending;\n        break;\n      case \"confirmed\":\n        transactionToastMeta = TransactionToastMessages.confirmed;\n        break;\n      case \"success\":\n        transactionToastMeta = TransactionToastMessages.success;\n        break;\n      case \"error\":\n        transactionToastMeta = TransactionToastMessages.error;\n        break;\n      default:\n        // do nothing\n        break;\n    }\n\n    let transactionAction = '';\n    switch (transaction.method){\n      case 'redeemIdleToken':\n        transactionAction = 'Redeem';\n      break;\n      case 'redeemGovTokens':\n        transactionAction = 'Redeem (Gov Tokens)';\n      break;\n      case 'mintIdleToken':\n      case 'mintIdleTokensProxy':\n        transactionAction = 'Lending';\n      break;\n      case 'migrateFromToIdle':\n      case 'migrateFromCompoundToIdle':\n      case 'migrateFromFulcrumToIdle':\n      case 'migrateFromAaveToIdle':\n      case 'migrateFromIearnToIdle':\n      case 'bridgeIdleV1ToIdleV2':\n        transactionAction = 'Migration';\n      break;\n      case 'executeMetaTransaction':\n        transactionAction = 'Meta-Tx';\n      break;\n      case 'approve':\n        transactionAction = 'Approve';\n      break;\n      case 'rebalance':\n        transactionAction = 'Rebalance';\n      break;\n      default:\n        transactionAction = transaction.method.charAt(0).toUpperCase() + transaction.method.substr(1);\n      break;\n    }\n\n    transactionToastMeta = JSON.parse(JSON.stringify(transactionToastMeta));\n\n    let newMessage = transactionToastMeta.message.replace('{action}',transactionAction);\n    newMessage = newMessage.charAt(0).toUpperCase() + newMessage.slice(1);\n    transactionToastMeta.message = newMessage;\n    transactionToastMeta.closeElem = true;\n    transactionToastMeta.colorTheme = this.props.themeMode;\n\n    return transactionToastMeta;\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    this.processTransactionUpdates(prevProps);\n  }\n\n  render() {\n    return (\n      <div>\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </div>\n    );\n  }\n}\n\nexport default TransactionToastUtil;\n","import Web3 from \"web3\";\nimport jQuery from 'jquery';\nimport theme from \"../theme\";\nimport Tos from \"../Tos/Tos\";\nimport themeDark from \"../theme-dark\";\nimport connectors from './connectors';\nimport Web3Provider from 'web3-react';\nimport { Web3Consumer } from 'web3-react';\nimport CookieConsent from \"react-cookie-consent\";\nimport RimbleWeb3 from \"../utilities/RimbleWeb3\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport React, { Component, Suspense } from \"react\";\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport Header from \"../utilities/components/Header\";\nimport globalConfigs from '../configs/globalConfigs';\nimport ScrollToTop from \"../ScrollToTop/ScrollToTop\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport PageNotFound from \"../PageNotFound/PageNotFound\";\nimport Web3Debugger from \"../Web3Debugger/Web3Debugger\";\nimport availableTokens from '../configs/availableTokens';\nimport availableTranches from '../configs/availableTranches';\nimport TransactionToastUtil from \"../utilities/TransactionToastUtil\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { ThemeProvider, Box, Text, Link, Image, Flex } from 'rimble-ui';\n\n// Lazy Loading\nconst Landing = React.lazy(() => import(\"../Landing/Landing\"));\nconst Dashboard = React.lazy(() => import('../Dashboard/Dashboard'));\nconst Governance = React.lazy(() => import('../Governance/Governance'));\n\nclass App extends Component {\n  state = {\n    network: null,\n    cachedData: {},\n    buyToken: null,\n    currentEnv: null,\n    selectedTab: '1',\n    route: \"default\", // or 'onboarding'\n    themeMode: 'light',\n    connecting: false,\n    tokenConfig: null,\n    genericError: null,\n    customAddress: null,\n    connectorName: null,\n    selectedToken: null,\n    selectedTheme: theme,\n    currentSection: null,\n    walletProvider: null,\n    availableTokens: null,\n    buyModalOpened: false,\n    selectedStrategy: null,\n    toastMessageProps: null,\n    callbackAfterLogin: null,\n    width: window.innerWidth,\n    availableStrategies: null,\n    height: window.innerHeight,\n    config:globalConfigs.network,\n    unsubscribeFromHistory: null,\n    enableUnderlyingWithdraw: false,\n    availableStrategiesNetworks: null\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n    // window.functionsUtil = this.functionsUtil;\n  }\n\n  closeToastMessage = (e) => {\n    if (e) {\n      e.preventDefault();\n    }\n    this.setState({\n      toastMessageProps: null\n    });\n  }\n\n  showToastMessage = (props) => {\n    this.setState({\n      toastMessageProps: props\n    });\n  }\n\n  processCustomParam = (props, prevProps) => {\n    // const params = props ? props.match.params : null;\n    // const prevParams = prevProps ? prevProps.match.params : null;\n\n    // Reset params\n    /*\n    if ( prevParams && params && prevParams.customParam !== params.customParam && (!params || !params.customParam || params.customParam === undefined)){\n      this.setState({\n        customAddress:null,\n        enableUnderlyingWithdraw:false\n      });\n    } else if (params && typeof params.customParam === 'string') {\n      // Check if custom address\n      if (params.customParam.toLowerCase().match(/0x[\\w]{40}/) && this.state.customAddress !== params.customParam){\n        this.setCustomAddress(params.customParam);\n      } else if (params && params.customParam === 'withdraw' && !this.state.enableUnderlyingWithdraw){\n        this.setState({\n          customAddress:null,\n          enableUnderlyingWithdraw:true\n        });\n      }\n    }\n    */\n  }\n\n  clearCachedData = async (callback = null, clear_all = false) => {\n\n    if (!this.state.network){\n      return false;\n    }\n\n    const requiredNetworkId = this.state.network.required.id;\n\n    const cachedData = { ...this.state.cachedData };\n    Object.keys(cachedData[requiredNetworkId]).forEach(key => {\n      const data = cachedData[requiredNetworkId][key];\n      if (data.expirationDate !== null) {\n        delete cachedData[requiredNetworkId][key];\n      }\n    });\n\n    const storedCachedData = clear_all ? {} : this.functionsUtil.getStoredItem('cachedData');\n    if (storedCachedData && storedCachedData[requiredNetworkId]){\n      Object.keys(storedCachedData[requiredNetworkId]).forEach( key => {\n        const storedData = storedCachedData[requiredNetworkId][key];\n        if (storedData.expirationDate !== null){\n          delete storedCachedData[requiredNetworkId][key];\n        }\n      });\n    }\n\n    this.functionsUtil.setLocalStorage('cachedData', storedCachedData, true);\n\n    await this.setState({\n      cachedData\n    }, () => {\n      if (typeof callback === 'function') {\n        callback();\n      }\n    });\n\n    return true;\n  }\n\n  setCachedData = (key, data, TTL = null, useLocalStorage = false) => {\n\n    if (!this.state.network){\n      return false;\n    }\n\n    key = key.toLowerCase();\n    const currentTime = parseInt(Date.now() / 1000);\n    const requiredNetworkId = this.state.network.required.id;\n    const cachedKeyFound = this.state.cachedData[requiredNetworkId] ? this.state.cachedData[requiredNetworkId][key] : null;\n\n    const update_key = !cachedKeyFound || ((cachedKeyFound.expirationDate !== null && cachedKeyFound.expirationDate >= currentTime) || JSON.stringify(cachedKeyFound.data) !== JSON.stringify(data));\n\n    let output = false;\n\n    if (update_key) {\n      const expirationDate = TTL ? currentTime + (TTL) : null;\n\n      // Save cached data in local storage\n      if (useLocalStorage) {\n        let storedCachedData = this.functionsUtil.getStoredItem('cachedData');\n        if (!storedCachedData) {\n          storedCachedData = {};\n          storedCachedData[requiredNetworkId] = {};\n        }\n\n        // const storedData = typeof data === 'object' ? JSON.stringify(data) : data;\n\n        storedCachedData = {\n          ...storedCachedData,\n          [requiredNetworkId]:{\n            ...storedCachedData[requiredNetworkId],\n            [key]: {\n              data,\n              expirationDate\n            }\n          }\n        };\n        \n        this.functionsUtil.setLocalStorage('cachedData',storedCachedData,true);\n      }\n\n      // Set new cached data state\n      this.setState((prevState) => ({\n        cachedData: {\n          ...prevState.cachedData,\n          [requiredNetworkId]:{\n            ...prevState.cachedData[requiredNetworkId],\n            [key]: {\n              data,\n              expirationDate\n            }\n          }\n        }\n      }), () => {\n        window.cachedData = this.state.cachedData;\n      });\n\n      output = true;\n    }\n\n    return output;\n  }\n\n  setCallbackAfterLogin = (callbackAfterLogin) => {\n    this.setState({\n      callbackAfterLogin\n    });\n  }\n\n  setCustomAddress = (customAddress) => {\n    // Reset customAddress if not well formatted\n    if (customAddress && !customAddress.toLowerCase().match(/0x[\\w]{40}/)) {\n      customAddress = null;\n    }\n\n    if (customAddress !== this.state.customAddress) {\n      this.setState({\n        customAddress,\n        enableUnderlyingWithdraw: false\n      });\n    }\n  }\n\n  async selectTab(e, tabIndex) {\n    return this.setState(state => ({ ...state, selectedTab: tabIndex }));\n  }\n\n  async loadAvailableTokens() {\n    const newState = {};\n    const availableStrategies = {};\n    const availableStrategiesNetworks = {};\n    const requiredNetwork = this.state.network && this.state.network.isCorrectNetwork ? (this.state.network.current.id || this.state.network.required.id) : this.state.config.requiredNetwork;\n\n    // console.log('loadAvailableTokens_1',this.state.network,requiredNetwork,availableTokens);\n\n    // Load available strategies\n    Object.keys(availableTokens).filter( networkId => this.functionsUtil.getGlobalConfig(['network','enabledNetworks']).includes(parseInt(networkId)) ).forEach (networkId => {\n      availableStrategiesNetworks[networkId] = {};\n      Object.keys(availableTokens[networkId]).forEach((strategy) => {\n\n        availableStrategiesNetworks[networkId][strategy] = Object.keys(availableTokens[networkId][strategy]).reduce((enabledTokens, token) => {\n          const tokenConfig = availableTokens[networkId][strategy][token];\n          const envEnabled = !tokenConfig.enabledEnvs || !tokenConfig.enabledEnvs.length || tokenConfig.enabledEnvs.includes(this.state.currentEnv);\n          if (tokenConfig.enabled && envEnabled) {\n            enabledTokens[token] = tokenConfig;\n          }\n          return enabledTokens;\n        }, {});\n\n        if (parseInt(networkId) === parseInt(requiredNetwork)){\n          availableStrategies[strategy] = availableStrategiesNetworks[networkId][strategy];\n        }\n      });\n    });\n\n    newState.availableStrategies = availableStrategies;\n    newState.availableStrategiesNetworks = availableStrategiesNetworks;\n\n    // console.log('availableStrategiesNetworks',availableStrategiesNetworks);\n\n    // Load strategy\n    const selectedStrategy = this.state.selectedStrategy;\n    if (selectedStrategy && availableStrategies[selectedStrategy]) {\n      newState.availableTokens = availableStrategies[selectedStrategy];\n\n      // Load token\n      const selectedToken = this.state.selectedToken;\n      if (selectedToken && newState.availableTokens[selectedToken]) {\n        newState.tokenConfig = newState.availableTokens[selectedToken];\n      }\n    }\n\n    // console.log('loadAvailableTokens',newState);\n\n    await this.setState(newState);\n  }\n\n  async setStrategyToken(selectedStrategy, selectedToken) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    const newState = {\n      tokenConfig: !selectedToken ? null : this.state.tokenConfig,\n      availableTokens: !selectedToken ? null : this.state.availableTokens,\n      selectedToken: !selectedToken ? selectedToken : this.state.selectedToken,\n      selectedStrategy: !selectedStrategy ? selectedStrategy : this.state.selectedStrategy,\n    };\n\n    if (selectedStrategy && this.state.availableStrategies && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())) {\n      newState.selectedStrategy = selectedStrategy.toLowerCase();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken) {\n      if (this.state.availableTokens && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase())) {\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableTokens[selectedToken];\n      } else if (this.state.availableStrategies && Object.keys(this.state.availableStrategies[selectedStrategy]).includes(selectedToken.toUpperCase())) {\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableStrategies[selectedStrategy][newState.selectedToken];\n        newState.availableTokens = this.state.availableStrategies[selectedStrategy];\n      }\n    }\n\n    // console.log('setStrategyToken',selectedStrategy,selectedToken,newState);\n\n    await this.setState(newState, callback);\n  }\n\n  async setRequiredNetwork(requiredNetwork){\n    requiredNetwork = parseInt(requiredNetwork);\n    if (globalConfigs.network.enabledNetworks.includes(requiredNetwork)){\n      this.functionsUtil.setLocalStorage('requiredNetwork',requiredNetwork);\n      // console.log('setRequiredNetwork',requiredNetwork);\n      this.functionsUtil.addEthereumChain(requiredNetwork);\n      return await this.setState(prevState => ({\n        config:{\n          ...prevState.config,\n          requiredNetwork\n        }\n      }));\n    }\n  }\n\n  async setStrategy(selectedStrategy) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedStrategy && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())) {\n      selectedStrategy = selectedStrategy.toLowerCase();\n      await this.setState({\n        selectedStrategy\n      }, callback);\n    } else if (!selectedStrategy) {\n      await this.setState({\n        selectedStrategy\n      }, callback);\n    }\n  }\n\n  async setToken(selectedToken) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase())) {\n      selectedToken = selectedToken.toUpperCase();\n      const newState = {\n        selectedToken\n      };\n      newState.tokenConfig = this.state.availableTokens[selectedToken];\n      await this.setState(newState, callback);\n    } else if (!selectedToken) {\n      await this.setState({\n        selectedToken,\n        tokenConfig: null\n      }, callback);\n    }\n  }\n\n  async componentWillMount() {\n\n    this.loadUtils();\n\n    window.BNify = this.functionsUtil.BNify;\n\n    // Suppress warnings and errors in production\n    const isProduction = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n    if (isProduction) {\n      window.console.error = () => { };\n      window.console.warn = () => { };\n    }\n\n    window.jQuery = jQuery;\n\n    if (window.localStorage) {\n      this.functionsUtil.removeStoredItem('context');\n\n      // Clear all localStorage data except walletProvider and connectorName if version has changed\n      const version = this.functionsUtil.getStoredItem('version', false);\n      if (version !== globalConfigs.version) {\n        // Clear cached data\n        this.clearCachedData(() => {\n          // Reset Localstorage\n          this.functionsUtil.clearStoredData(['walletProvider', 'connectorName', 'themeMode', 'requiredNetwork']);\n          this.functionsUtil.setLocalStorage('version', globalConfigs.version);\n        }, true);\n      }\n\n      console.log(`Client Version: ${globalConfigs.version}`);\n    }\n\n    const themeMode = this.functionsUtil.getStoredItem('themeMode', false);\n    if (themeMode) {\n      this.setThemeMode(themeMode);\n    }\n\n    const requiredNetwork = this.functionsUtil.getStoredItem('requiredNetwork',false);\n    if (requiredNetwork){\n      this.setRequiredNetwork(requiredNetwork);\n    }\n\n    window.closeIframe = (w) => {\n      const iFrames = document.getElementsByTagName('iframe');\n      for (let i = 0; i < iFrames.length; i++) {\n        const iframe = iFrames[i];\n        if (iframe.contentWindow === w) {\n          window.jQuery(iframe).parents('.iframe-container')[0].remove();\n        }\n      }\n    }\n\n    window.addEventListener('resize', this.handleWindowSizeChange);\n\n    this.loadCurrentEnvironment();\n    this.loadCustomAddress();\n  }\n\n  async loadCurrentEnvironment() {\n    const currentEnv = this.functionsUtil.getCurrentEnvironment();\n    this.setState({\n      currentEnv\n    }, async () => {\n      // const envRequiredNetwork = this.functionsUtil.getGlobalConfig(['environments',this.state.currentEnv,'requiredNetwork']);\n      // const storedRequiredNetwork = this.functionsUtil.getStoredItem('requiredNetwork',null);\n      // if (!storedRequiredNetwork || parseInt(storedRequiredNetwork) !== parseInt(envRequiredNetwork)){\n      //   const requiredNetwork = storedRequiredNetwork || envRequiredNetwork;\n      //   console.log('setRequiredNetwork',requiredNetwork);\n      //   await this.setRequiredNetwork(requiredNetwork);\n      // }\n      this.loadAvailableTokens();\n    })\n  }\n\n  loadCustomAddress() {\n    if (!this.state.customAddress) {\n      const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n      if (walletProvider === 'custom') {\n        const customAddress = this.functionsUtil.getCustomAddress();\n        if (customAddress && customAddress !== this.state.customAddress) {\n          this.setState({\n            customAddress\n          });\n        }\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const currentSectionChanged = prevState.currentSection !== this.state.currentSection;\n    if (currentSectionChanged) {\n      if (this.state.currentSection === 'landing') {\n        this.setThemeMode('light', false);\n      } else {\n        // Get stored Mode\n        const themeMode = this.functionsUtil.getStoredItem('themeMode', false) || this.functionsUtil.getGlobalConfig(['dashboard', 'theme', 'mode']);\n        this.setThemeMode(themeMode);\n      }\n    }\n\n    const tokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const strategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    const networkChanged = JSON.stringify(prevState.network) !== JSON.stringify(this.state.network);\n\n    if (tokenChanged || strategyChanged || networkChanged) {\n      this.loadAvailableTokens();\n    }\n  }\n\n  componentDidMount() {\n\n    // Close iFrame\n    // if (window.self !== window.top && window.top.location.href.indexOf(globalConfigs.baseURL) !== -1 && typeof window.parent.closeIframe === 'function' ){\n    //   window.parent.closeIframe(window.self);\n    // }\n\n    window.showToastMessage = this.showToastMessage;\n    window.closeToastMessage = this.closeToastMessage;\n\n    if (localStorage) {\n      let connectorName = localStorage.getItem('connectorName') ? localStorage.getItem('connectorName') : 'Infura';\n      let walletProvider = localStorage.getItem('walletProvider') ? localStorage.getItem('walletProvider') : 'Infura';\n\n      // Check Ledger Live\n      const isLedgerLive = window.location.href.includes(\"ledger-live=1\");\n      if (isLedgerLive) {\n        connectorName = 'ledgerLive';\n        walletProvider = 'ledger';\n      }\n      // console.log('isLedgerLive',isLedgerLive,connectorName,walletProvider);\n\n      this.setConnector(connectorName, walletProvider);\n    }\n  }\n\n  handleWindowSizeChange = () => {\n    const newState = {\n      width: this.state.width,\n      height: this.state.height,\n    };\n\n    const widthChanged = window.innerWidth !== this.state.width;\n    const heightChanged = window.innerHeight !== this.state.height;\n\n    if (widthChanged || heightChanged) {\n      if (widthChanged) {\n        newState.width = window.innerWidth;\n      }\n      if (heightChanged) {\n        newState.height = window.innerHeight;\n      }\n      return this.setState(newState);\n    }\n\n    return null;\n  };\n\n  showRoute(route) {\n    return this.setState({ route });\n  }\n\n  closeBuyModal(e) {\n    if (e) {\n      e.preventDefault();\n    }\n    return this.setState({\n      buyToken: null,\n      buyModalOpened: false\n    });\n  }\n\n  openBuyModal(e, buyToken) {\n    e.preventDefault();\n\n    return this.setState({\n      buyToken,\n      buyModalOpened: true\n    });\n  }\n\n  async logout() {\n    // Reset Custom Address\n    this.setState({\n      customAddress: null\n    });\n    // Clear cached data\n    this.clearCachedData(() => {\n      // Reset Localstorage except some keys\n      this.functionsUtil.clearStoredData(['version', 'themeMode', 'lastLogin', 'cachedData','requiredNetwork']);\n    });\n  }\n\n  setNetwork(network) {\n    this.setState({\n      network,\n      availableStrategies:null\n    });\n  }\n\n  setConnector(connectorName, walletProvider) {\n\n    let connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n    if (!connectorInfo && walletProvider) {\n      connectorInfo = globalConfigs.connectors[walletProvider.toLowerCase()];\n    }\n\n    // console.log('setConnector - BEFORE',connectorInfo,connectorName,walletProvider);\n\n    if ((connectorInfo && !connectorInfo.enabled) || (connectorName !== 'Injected' && !Object.keys(globalConfigs.connectors).includes(connectorName.toLowerCase())) || (walletProvider && !Object.keys(globalConfigs.connectors).includes(walletProvider.toLowerCase()))) {\n      connectorName = 'Infura';\n      walletProvider = 'Infura';\n    } else if (connectorName === 'Injected') {\n      const hasMetamask = GeneralUtil.hasMetaMask();\n      const hasDapper = GeneralUtil.hasDapper()\n\n      // Check if injected connector is valid\n      switch (walletProvider) {\n        case 'Metamask':\n          if (!hasMetamask && hasDapper) {\n            walletProvider = 'Dapper';\n          }\n          break;\n        case 'Dapper':\n          if (!hasDapper && hasMetamask) {\n            walletProvider = 'Metamask';\n          }\n          break;\n        default:\n          break;\n      }\n    }\n\n    this.functionsUtil.setLocalStorage('connectorName', connectorName);\n    this.functionsUtil.setLocalStorage('walletProvider', walletProvider);\n\n    return this.setState({\n      connectorName,\n      walletProvider\n    }, () => {\n      this.loadCustomAddress();\n    });\n  }\n\n  setThemeMode(themeMode, store = true) {\n    let selectedTheme = null;\n\n    // Check Dark Mode Enabled\n    const darkModeEnabled = this.functionsUtil.getGlobalConfig(['dashboard', 'theme', 'darkModeEnabled']);\n    if (themeMode === 'dark' && !darkModeEnabled) {\n      themeMode = 'light';\n    }\n\n    switch (themeMode) {\n      default:\n      case 'light':\n        selectedTheme = theme;\n        break;\n      case 'dark':\n        selectedTheme = themeDark;\n        break;\n    }\n\n    if (store) {\n      this.functionsUtil.setLocalStorage('themeMode', themeMode);\n    }\n\n    this.setState({\n      themeMode,\n      selectedTheme\n    });\n  }\n\n  setCurrentSection(currentSection) {\n    this.setState({\n      currentSection\n    });\n  }\n\n  render() {\n    const isMobile = this.state.width <= 768;\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance', 'enabled']);\n\n    // console.log(this.state.selectedToken,this.state.tokenConfig);\n\n    const SuspenseLoader = (\n      <Flex\n        width={1}\n        minHeight={'100vh'}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        backgroundColor={'selectBg'}\n      >\n        <FlexLoader\n          textProps={{\n            textSize: 4,\n            fontWeight: 2\n          }}\n          loaderProps={{\n            mb: 3,\n            size: '80px',\n            color: 'primary'\n          }}\n          flexProps={{\n            my: 3,\n            flexDirection: 'column'\n          }}\n          text={''}\n        />\n      </Flex>\n    );\n\n    return (\n      <Router>\n        <ScrollToTop />\n        <ThemeProvider\n          theme={this.state.selectedTheme}\n        >\n          <Web3Provider\n            web3Api={Web3}\n            connectors={connectors}\n            libraryName={'web3.js'}\n          >\n            <Web3Consumer\n              recreateOnNetworkChange={false}\n              recreateOnAccountChange={false}\n            >\n              {context => {\n                //console.log('Web3Consumer render',context);\n                return (\n                  <RimbleWeb3\n                    context={context}\n                    isMobile={isMobile}\n                    connectors={connectors}\n                    config={this.state.config}\n                    theme={this.state.selectedTheme}\n                    cachedData={this.state.cachedData}\n                    tokenConfig={this.state.tokenConfig}\n                    availableTranches={availableTranches}\n                    setNetwork={this.setNetwork.bind(this)}\n                    customAddress={this.state.customAddress}\n                    selectedToken={this.state.selectedToken}\n                    connectorName={this.state.connectorName}\n                    currentSection={this.state.currentSection}\n                    walletProvider={this.state.walletProvider}\n                    setConnector={this.setConnector.bind(this)}\n                    availableTokens={this.state.availableTokens}\n                    setCachedData={this.setCachedData.bind(this)}\n                    clearCachedData={this.clearCachedData.bind(this)}\n                    callbackAfterLogin={this.state.callbackAfterLogin}\n                    availableStrategies={this.state.availableStrategies}\n                    setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                    enableUnderlyingWithdraw={this.state.enableUnderlyingWithdraw}\n                    availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                  >\n                    <RimbleWeb3.Consumer>\n                      {({\n                        web3,\n                        modals,\n                        network,\n                        account,\n                        initWeb3,\n                        simpleID,\n                        biconomy,\n                        contracts,\n                        web3Infura,\n                        web3Polygon,\n                        transaction,\n                        initAccount,\n                        initContract,\n                        checkNetwork,\n                        transactions,\n                        initSimpleID,\n                        permitClient,\n                        tokenDecimals,\n                        accountBalance,\n                        needsPreflight,\n                        validateAccount,\n                        rejectValidation,\n                        accountValidated,\n                        getTokenDecimals,\n                        getAccountBalance,\n                        contractsNetworks,\n                        accountBalanceLow,\n                        networkInitialized,\n                        accountInizialized,\n                        accountBalanceToken,\n                        userRejectedConnect,\n                        initializeContracts,\n                        erc20ForwarderClient,\n                        rejectAccountConnect,\n                        contractsInitialized,\n                        userRejectedValidation,\n                        accountValidationPending,\n                        connectAndValidateAccount,\n                        contractMethodSendWrapper,\n                        initContractCustomProvider\n                      }) => {\n                        return (\n                          <Box>\n                            <Switch>\n                              <Route\n                                path=\"/dashboard/:section?/:param1?/:param2?/:param3?\"\n                                render={\n                                  (props) => \n                                    <Suspense\n                                      fallback={SuspenseLoader}\n                                    >\n                                      <Dashboard\n                                        {...props}\n                                        web3={web3}\n                                        modals={modals}\n                                        network={network}\n                                        context={context}\n                                        account={account}\n                                        isDashboard={true}\n                                        initWeb3={initWeb3}\n                                        biconomy={biconomy}\n                                        isMobile={isMobile}\n                                        simpleID={simpleID}\n                                        contracts={contracts}\n                                        web3Infura={web3Infura}\n                                        web3Polygon={web3Polygon}\n                                        initAccount={initAccount}\n                                        permitClient={permitClient}\n                                        initSimpleID={initSimpleID}\n                                        initContract={initContract}\n                                        transactions={transactions}\n                                        buyToken={this.state.buyToken}\n                                        logout={this.logout.bind(this)}\n                                        accountBalance={accountBalance}\n                                        themeMode={this.state.themeMode}\n                                        theme={this.state.selectedTheme}\n                                        validateAccount={validateAccount}\n                                        currentEnv={this.state.currentEnv}\n                                        connecting={this.state.connecting}\n                                        cachedData={this.state.cachedData}\n                                        setToken={this.setToken.bind(this)}\n                                        accountValidated={accountValidated}\n                                        getTokenDecimals={getTokenDecimals}\n                                        rejectValidation={rejectValidation}\n                                        tokenConfig={this.state.tokenConfig}\n                                        contractsNetworks={contractsNetworks}\n                                        availableTranches={availableTranches}\n                                        getAccountBalance={getAccountBalance}\n                                        accountBalanceLow={accountBalanceLow}\n                                        accountInizialized={accountInizialized}\n                                        networkInitialized={networkInitialized}\n                                        selectedToken={this.state.selectedToken}\n                                        connectorName={this.state.connectorName}\n                                        setStrategy={this.setStrategy.bind(this)}\n                                        userRejectedConnect={userRejectedConnect}\n                                        accountBalanceToken={accountBalanceToken}\n                                        initializeContracts={initializeContracts}\n                                        walletProvider={this.state.walletProvider}\n                                        buyModalOpened={this.state.buyModalOpened}\n                                        erc20ForwarderClient={erc20ForwarderClient}\n                                        contractsInitialized={contractsInitialized}\n                                        openBuyModal={this.openBuyModal.bind(this)}\n                                        rejectAccountConnect={rejectAccountConnect}\n                                        handleMenuClick={this.selectTab.bind(this)}\n                                        setConnector={this.setConnector.bind(this)}\n                                        setThemeMode={this.setThemeMode.bind(this)}\n                                        availableTokens={this.state.availableTokens}\n                                        closeBuyModal={this.closeBuyModal.bind(this)}\n                                        setCachedData={this.setCachedData.bind(this)}\n                                        selectedStrategy={this.state.selectedStrategy}\n                                        userRejectedValidation={userRejectedValidation}\n                                        clearCachedData={this.clearCachedData.bind(this)}\n                                        setStrategyToken={this.setStrategyToken.bind(this)}\n                                        accountValidationPending={accountValidationPending}\n                                        availableStrategies={this.state.availableStrategies}\n                                        setCurrentSection={this.setCurrentSection.bind(this)}\n                                        connectAndValidateAccount={connectAndValidateAccount}\n                                        contractMethodSendWrapper={contractMethodSendWrapper}\n                                        setRequiredNetwork={this.setRequiredNetwork.bind(this)}\n                                        initContractCustomProvider={initContractCustomProvider}\n                                        setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                        availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                                      />\n                                    </Suspense>\n\n                                }\n                              >\n                              </Route>\n                              {\n                                governanceEnabled && (\n                                  <Route\n                                    path=\"/governance/:section?/:item_id?\"\n                                    render={\n                                      (props) =>\n                                        <Suspense\n                                          fallback={SuspenseLoader}\n                                        >\n                                          <Governance\n                                            {...props}\n                                            web3={web3}\n                                            modals={modals}\n                                            network={network}\n                                            context={context}\n                                            account={account}\n                                            initWeb3={initWeb3}\n                                            biconomy={biconomy}\n                                            isMobile={isMobile}\n                                            simpleID={simpleID}\n                                            isGovernance={true}\n                                            contracts={contracts}\n                                            web3Infura={web3Infura}\n                                            web3Polygon={web3Polygon}\n                                            initAccount={initAccount}\n                                            initSimpleID={initSimpleID}\n                                            initContract={initContract}\n                                            checkNetwork={checkNetwork}\n                                            transactions={transactions}\n                                            buyToken={this.state.buyToken}\n                                            logout={this.logout.bind(this)}\n                                            accountBalance={accountBalance}\n                                            themeMode={this.state.themeMode}\n                                            theme={this.state.selectedTheme}\n                                            validateAccount={validateAccount}\n                                            currentEnv={this.state.currentEnv}\n                                            connecting={this.state.connecting}\n                                            cachedData={this.state.cachedData}\n                                            setToken={this.setToken.bind(this)}\n                                            accountValidated={accountValidated}\n                                            getTokenDecimals={getTokenDecimals}\n                                            rejectValidation={rejectValidation}\n                                            tokenConfig={this.state.tokenConfig}\n                                            contractsNetworks={contractsNetworks}\n                                            getAccountBalance={getAccountBalance}\n                                            accountBalanceLow={accountBalanceLow}\n                                            accountInizialized={accountInizialized}\n                                            networkInitialized={networkInitialized}\n                                            selectedToken={this.state.selectedToken}\n                                            connectorName={this.state.connectorName}\n                                            setStrategy={this.setStrategy.bind(this)}\n                                            userRejectedConnect={userRejectedConnect}\n                                            accountBalanceToken={accountBalanceToken}\n                                            initializeContracts={initializeContracts}\n                                            walletProvider={this.state.walletProvider}\n                                            buyModalOpened={this.state.buyModalOpened}\n                                            contractsInitialized={contractsInitialized}\n                                            openBuyModal={this.openBuyModal.bind(this)}\n                                            rejectAccountConnect={rejectAccountConnect}\n                                            handleMenuClick={this.selectTab.bind(this)}\n                                            setConnector={this.setConnector.bind(this)}\n                                            setThemeMode={this.setThemeMode.bind(this)}\n                                            availableTokens={this.state.availableTokens}\n                                            closeBuyModal={this.closeBuyModal.bind(this)}\n                                            setCachedData={this.setCachedData.bind(this)}\n                                            selectedStrategy={this.state.selectedStrategy}\n                                            userRejectedValidation={userRejectedValidation}\n                                            clearCachedData={this.clearCachedData.bind(this)}\n                                            setStrategyToken={this.setStrategyToken.bind(this)}\n                                            accountValidationPending={accountValidationPending}\n                                            availableStrategies={this.state.availableStrategies}\n                                            setCurrentSection={this.setCurrentSection.bind(this)}\n                                            connectAndValidateAccount={connectAndValidateAccount}\n                                            contractMethodSendWrapper={contractMethodSendWrapper}\n                                            setRequiredNetwork={this.setRequiredNetwork.bind(this)}\n                                            setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                            availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                                          />\n                                        </Suspense>\n                                    }\n                                  >\n                                  </Route>\n                                )\n                              }\n                              <Route>\n                                <Header\n                                  modals={modals}\n                                  network={network}\n                                  context={context}\n                                  account={account}\n                                  initWeb3={initWeb3}\n                                  isMobile={isMobile}\n                                  contracts={contracts}\n                                  initAccount={initAccount}\n                                  initContract={initContract}\n                                  buyToken={this.state.buyToken}\n                                  accountBalance={accountBalance}\n                                  logout={this.logout.bind(this)}\n                                  validateAccount={validateAccount}\n                                  connecting={this.state.connecting}\n                                  accountValidated={accountValidated}\n                                  getTokenDecimals={getTokenDecimals}\n                                  rejectValidation={rejectValidation}\n                                  setToken={e => { this.setToken(e) }}\n                                  tokenConfig={this.state.tokenConfig}\n                                  contractsNetworks={contractsNetworks}\n                                  getAccountBalance={getAccountBalance}\n                                  accountBalanceLow={accountBalanceLow}\n                                  networkInitialized={networkInitialized}\n                                  selectedToken={this.state.selectedToken}\n                                  connectorName={this.state.connectorName}\n                                  userRejectedConnect={userRejectedConnect}\n                                  accountBalanceToken={accountBalanceToken}\n                                  walletProvider={this.state.walletProvider}\n                                  buyModalOpened={this.state.buyModalOpened}\n                                  contractsInitialized={contractsInitialized}\n                                  openBuyModal={this.openBuyModal.bind(this)}\n                                  rejectAccountConnect={rejectAccountConnect}\n                                  handleMenuClick={this.selectTab.bind(this)}\n                                  setConnector={this.setConnector.bind(this)}\n                                  availableTokens={this.state.availableTokens}\n                                  closeBuyModal={this.closeBuyModal.bind(this)}\n                                  userRejectedValidation={userRejectedValidation}\n                                  accountValidationPending={accountValidationPending}\n                                  connectAndValidateAccount={connectAndValidateAccount}\n                                  setRequiredNetwork={this.setRequiredNetwork.bind(this)}\n                                  availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                                />\n\n                                {\n                                  this.state.route === \"onboarding\" && (\n                                    <Web3Debugger\n                                      web3={web3}\n                                      account={account}\n                                      accountBalance={accountBalance}\n                                      accountBalanceToken={accountBalanceToken}\n                                      accountBalanceLow={accountBalanceLow}\n                                      initAccount={initAccount}\n                                      rejectAccountConnect={rejectAccountConnect}\n                                      userRejectedConnect={userRejectedConnect}\n                                      accountValidated={accountValidated}\n                                      accountValidationPending={accountValidationPending}\n                                      rejectValidation={rejectValidation}\n                                      userRejectedValidation={userRejectedValidation}\n                                      validateAccount={validateAccount}\n                                      connectAndValidateAccount={connectAndValidateAccount}\n                                      modals={modals}\n                                      network={network}\n                                      transaction={transaction}\n                                    />\n                                  )\n                                }\n\n                                {\n                                  this.state.route === \"default\" && (\n                                    <Switch>\n                                      <Route exact path=\"/\"\n                                        render={(props) =>\n                                          <Suspense\n                                            fallback={SuspenseLoader}\n                                          >\n                                            <Landing\n                                              {...props}\n                                              web3={web3}\n                                              network={network}\n                                              account={account}\n                                              isMobile={isMobile}\n                                              simpleID={simpleID}\n                                              contracts={contracts}\n                                              initContract={initContract}\n                                              innerWidth={this.state.width}\n                                              logout={this.logout.bind(this)}\n                                              innerHeight={this.state.height}\n                                              accountBalance={accountBalance}\n                                              themeMode={this.state.themeMode}\n                                              theme={this.state.selectedTheme}\n                                              setToken={e => {this.setToken(e)}}\n                                              cachedData={this.state.cachedData}\n                                              currentEnv={this.state.currentEnv}\n                                              connecting={this.state.connecting}\n                                              selectedTab={this.state.selectedTab}\n                                              tokenConfig={this.state.tokenConfig}\n                                              accountBalanceLow={accountBalanceLow}\n                                              getAccountBalance={getAccountBalance}\n                                              availableTranches={availableTranches}\n                                              contractsNetworks={contractsNetworks}\n                                              networkInitialized={networkInitialized}\n                                              customAddress={this.state.customAddress}\n                                              selectedToken={this.state.selectedToken}\n                                              accountBalanceToken={accountBalanceToken}\n                                              closeToastMessage={this.closeToastMessage}\n                                              contractsInitialized={contractsInitialized}\n                                              openBuyModal={this.openBuyModal.bind(this)}\n                                              setThemeMode={this.setThemeMode.bind(this)}\n                                              processCustomParam={this.processCustomParam}\n                                              availableTokens={this.state.availableTokens}\n                                              setCachedData={this.setCachedData.bind(this)}\n                                              updateSelectedTab={this.selectTab.bind(this)}\n                                              toastMessageProps={this.state.toastMessageProps}\n                                              clearCachedData={this.clearCachedData.bind(this)}\n                                              availableStrategies={this.state.availableStrategies}\n                                              setCurrentSection={this.setCurrentSection.bind(this)}\n                                              connectAndValidateAccount={connectAndValidateAccount}\n                                              setRequiredNetwork={this.setRequiredNetwork.bind(this)}\n                                              availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                                            />\n                                            <CookieConsent\n                                              expires={365}\n                                              buttonText={\"Ok\"}\n                                              location={\"bottom\"}\n                                              acceptOnScroll={true}\n                                              cookieName={\"cookieAccepted\"}\n                                              acceptOnScrollPercentage={5}\n                                              style={{ background: \"rgba(255,255,255,0.95)\", zIndex: '9999999' }}\n                                              buttonStyle={{ display: isMobile ? \"block\" : \"none\", backgroundColor: '#0036ff', color: 'white', marginTop: isMobile ? \"0px\" : \"15px\" }}\n                                            >\n                                              <Flex flexDirection={'row'} alignItems={['flex-start', 'center']} justifyContent={'flex-start'} maxHeight={['150px', 'initial']} style={isMobile ? { overflowY: 'scroll' } : null}>\n                                                <Image display={['none', 'block']} src={'images/cookie.svg'} width={'42px'} height={'42px'} />\n                                                <Text pl={[0, 3]} color={'dark-gray'} fontSize={1} textAlign={'justify'}>\n                                                  This website or its third-party tools process personal data (e.g. browsing data or IP addresses) and use cookies or other identifiers, which are necessary for its functioning and required to achieve the purposes illustrated in the cookie policy. To learn more, please refer to the <Link href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'} target={'_blank'} rel=\"nofollow noopener noreferrer\" hoverColor={'blue'}>cookie policy</Link>.\n                                                  You accept the use of cookies or other identifiers by closing or dismissing this notice, by scrolling this page, by clicking a link or button or by continuing to browse otherwise.\n                                              </Text>\n                                              </Flex>\n                                            </CookieConsent>\n                                          </Suspense>\n                                        }\n                                      ></Route>\n                                      <Route exact path=\"/terms-of-service\">\n                                        <Tos />\n                                      </Route>\n                                      <Route>\n                                        <PageNotFound />\n                                      </Route>\n                                    </Switch>\n                                  )\n                                }\n                              </Route>\n                            </Switch>\n                            <TransactionToastUtil\n                              transactions={transactions}\n                              themeMode={this.state.themeMode}\n                            />\n                          </Box>\n                        )\n                      }}\n                    </RimbleWeb3.Consumer>\n                  </RimbleWeb3>\n                );\n              }}\n            </Web3Consumer>\n          </Web3Provider>\n        </ThemeProvider>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport * as Sentry from '@sentry/browser';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\n\nif (window.location.hostname !== 'localhost') {\n  Sentry.init({\n    dsn: \"https://56f5c0bce273442390d7f25698fefe53@sentry.io/1547544\",\n    beforeSend(event, hint) {\n      let output = event;\n      const error = hint.originalException;\n      if (error && error.message){\n        if (error.message.match(/Failed to subscribe to new newBlockHeaders/i)){\n          output = false;\n        }\n      }\n      return output;\n    }\n  });\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__38P6I\",\"link\":\"Footer_link__13yZU\"};","import React from \"react\";\nimport styles from './ModalCard.module.scss';\nimport { Box, Flex, Card, Button, Heading, Image } from \"rimble-ui\";\n\nconst ModalCard = ({children, closeFunc, ...props}) => (\n  <Card\n    p={0}\n    border={0}\n    mx={'auto'}\n    my={'auto'}\n    height={'auto'}\n    borderRadius={2}\n    overflow={'auto'}\n    width={ props.width ? props.width : 'auto' }\n    minWidth={ props.minWidth ? props.minWidth : 'auto' }\n    maxWidth={ props.maxWidth ? props.maxWidth : '960px'}\n  >\n    <Box\n      top={'0'}\n      zIndex={1}\n      right={'0'}\n      position={\"absolute\"}\n    >\n      <Button.Text\n        icononly\n        icon={\"Close\"}\n        size={'2.5em'}\n        onClick={closeFunc}\n        mainColor={ props.mainColor ? props.mainColor :  'copyColor' }\n      />\n    </Box>\n    <Flex\n      height={'100%'}\n      flex={'1 1 auto'}\n      flexDirection={'column'}\n      className={[ props.bgLayer ? styles.bg : null]}\n      style={{\n        overflow: 'auto',\n        backgroundRepeat:'no-repeat',\n        backgroundPosition:'bottom right',\n        backgroundSize: !props.background ? '65%' : null,\n        backgroundImage:'url(/images/bg-bottom-right.png)',\n        background: props.background ? props.background : null,\n      }}\n      backgroundColor={'cardBg'}\n    >\n      {children}\n    </Flex>\n  </Card>\n);\n\nModalCard.Header = (props) => (\n  <Box\n    width={1}\n    mb={[2,3]}\n    pb={[2,2]}\n    pt={ props.pt ? props.pt : (props.icon ? 3 : [5,3]) }\n    borderBottom={ props.borderBottom ? props.borderBottom : '1px solid #eee' }\n  >\n    <Flex\n      px={[1,2]}\n      alignItems={'center'}\n      flexDirection={'column'}\n    >\n      { props.icon && <Image width={ props.iconHeight ? props.iconHeight : '50px' } src={props.icon} /> }\n      <Heading.h3\n        mb={0}\n        fontSize={[3,3]}\n        color={'copyColor'}\n        textAlign={'center'}\n        mt={props.icon ? 2 : 0}\n        fontFamily={'sansSerif'}\n        {...props.titleProps}\n      >\n        {props.title}\n      </Heading.h3>\n      {\n        props.subtitle &&\n        <Heading.h4\n          pt={[1,2]}\n          fontWeight={2}\n          fontSize={[2,2]}\n          lineHeight={1.5}\n          color={'dark-gray'}\n          textAlign={'center'}\n          {...props.subtitleProps}\n        >\n          {props.subtitle}\n        </Heading.h4>\n      }\n      {\n        props.subtitle2 &&\n        <Heading.h4 pt={0} fontSize={[2,2]} textAlign={'center'} fontWeight={2} lineHeight={1.5} color={'dark-gray'}>\n          {props.subtitle2}\n        </Heading.h4>\n      }\n    </Flex>\n  </Box>\n);\n\nModalCard.Body = ({children, ...props}) => (\n  <Box\n    width={1}\n    px={[3,5]}\n    {...props}\n  >\n    {children}\n  </Box>\n);\n/*\nModalCard.Body = ({children, ...props}) => (\n  <Flex flex={'1 1 auto'} style={{ overflow: 'auto' }} >\n    <Box width={1} px={[4,5]} py={[3,4]} m={'auto'}>\n      {children}\n    </Box>\n  </Flex>\n);\n*/\n\nModalCard.Footer = ({children, ...props}) => (\n  <Flex\n    flex={'1 0 auto'}\n    justifyContent={'center'}\n    borderTop={1}\n    borderColor={'light-gray'}\n    px={[0,3]}\n    py={3}\n  >\n    {children}\n  </Flex>\n);\n\n\nModalCard.BackButton = ({onClick, ...props}) => (\n  <Box\n    position={'absolute'}\n    top={'0'}\n    left={'0'}\n    m={3}\n    bg={'white'}\n  >\n    <Button.Outline\n      onClick={onClick}\n      icononly\n      icon={'ArrowBack'}\n      size={'2.5em'}\n    />\n  </Box>\n);\n\nexport default ModalCard;\n","import { tint, shade, readableColor } from 'polished';\n\n// rimble base colors\nconst baseColors = {\n  black: '#000e1a',\n  white: '#FFF',\n  blue: '#0036ff',\n  darkBlue: '#0028be',\n  green: '#28C081',\n  yellow: '#FD9D28',\n  red: '#DC2C10',\n  blurple: '#4E3FCE',\n  consensysblue: '#3259D6',\n};\n\n// rimble palette\nconst colors = {\n  blurple: {\n    base: baseColors.blurple,\n    text: readableColor(baseColors.blurple),\n    light: [null, tint(0.2, baseColors.blurple)],\n    dark: [null, shade(0.2, baseColors.blurple)],\n  },\n  blue: {\n    base: baseColors.blue,\n    text: readableColor(baseColors.blue),\n    light: [null, tint(0.9, baseColors.blue)],\n    dark: [null, shade(0.4, baseColors.blue)],\n  },\n  green: {\n    base: baseColors.green,\n    text: baseColors.white,\n    light: [null, tint(0.9, baseColors.green)],\n    dark: [null, shade(0.4, baseColors.green)],\n  },\n  yellow: {\n    base: baseColors.yellow,\n    text: readableColor(baseColors.yellow),\n    light: [null, tint(0.9, baseColors.yellow)],\n    dark: [null, shade(0.4, baseColors.yellow)],\n  },\n  red: {\n    base: baseColors.red,\n    text: readableColor(baseColors.red),\n    light: [null, tint(0.9, baseColors.red)],\n    dark: [null, shade(0.4, baseColors.red)],\n  },\n};\n\nconst blurple = colors.blurple;\nconst blue = colors.blue;\nconst green = colors.green;\nconst yellow = colors.yellow;\nconst red = colors.red;\n\nexport { blurple };\nexport { blue };\nexport { green };\nexport { yellow };\nexport { red };\nexport default baseColors;\n","import { Flex, Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass VariationNumber extends Component {\n\n  render() {\n\n    const IconDirection = () => (\n      <Icon\n        color={ this.props.direction === 'up' ?  '#6dd400' : '#f7b500' }\n        name={ this.props.direction === 'up' ?  'ArrowDropUp' : 'ArrowDropDown' }\n        size={ this.props.iconSize ? this.props.iconSize : ( this.props.isMobile ? '1.4em' : '2em') }\n      />\n    );\n\n    return (\n      <Flex\n        alignItems={'center'}\n        flexDirection={'row'}\n        width={ this.props.width ? this.props.width : 1 }\n        justifyContent={this.props.justifyContent ? this.props.justifyContent : 'center'}\n      >\n        {\n          (!this.props.iconPos || this.props.iconPos==='left') &&\n            <IconDirection />\n        }\n        {this.props.children}\n        {\n          this.props.iconPos==='right' &&\n            <IconDirection />\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default VariationNumber;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchInput\":\"GenericSelector_searchInput__vl2hJ\",\"genericSelector\":\"GenericSelector_genericSelector__1Nqkd\",\"dark\":\"GenericSelector_dark__zCOnP\",\"searchInputHidden\":\"GenericSelector_searchInputHidden__2Zm1B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading-dots\":\"LoadingSpinner_loading-dots__2-3YZ\",\"loading-dots--dot\":\"LoadingSpinner_loading-dots--dot__2Y25C\",\"dot-keyframes\":\"LoadingSpinner_dot-keyframes__3SU_M\"};","import React, { Component } from 'react';\nimport { Flex, Loader, Text } from \"rimble-ui\";\n\nclass FlexLoader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        justifyContent={'center'}\n        {...this.props.flexProps}\n      >\n        <Loader {...this.props.loaderProps} />\n        {\n          this.props.text &&\n            <Text {...this.props.textProps}>{this.props.text}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default FlexLoader;\n","import {\n  Link as RouterLink,\n} from \"react-router-dom\";\nimport ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport styles from './Footer.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Heading, Image, Link } from 'rimble-ui';\n\nclass Footer extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  render() {\n    const currYear = new Date().getFullYear();\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n    const columnWidth = governanceEnabled ? 1/4 : 1/3;\n    return (\n      <Flex\n        pl={0}\n        id={\"footer\"}\n        alignItems={'center'}\n        flexDirection={'column'}\n        className={styles.footer}\n        backgroundColor={'white'}\n        justifyContent={'flex-start'}\n      >\n        <Flex\n          width={1}\n          px={[3,6]}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            height={['auto','100%']}\n            alignItems={'flex-start'}\n            maxWidth={['35em','70em']}\n            justifyContent={'flex-start'}\n            flexDirection={['column','row']}\n          >\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Resources\n              </Heading.h3>\n              <Flex width={1} flexDirection={'column'}>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://developers.idle.finance'}\n                >\n                  <span role=\"img\" aria-label=\"documentation\">📚</span> Documentation\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://idlelabs.notion.site/Idle-Brand-Assets-fd63e4161cb64c999531646c7549bc4b'}\n                >\n                  <span role=\"img\" aria-label=\"brand-assets\">🎨</span> Brand Assets\n                </ExtLink>\n                <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                  <RouterLink\n                    color={'blue'}\n                    to=\"/terms-of-service\"\n                    className={styles.link}\n                  >\n                    <Text\n                      fontWeight={3}\n                      color={'blue'}\n                      fontSize={[3,2]}\n                      hoverColor={'blue'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                    >\n                      <span role=\"img\" aria-label=\"terms-of-service\">📑</span> Terms of Service\n                    </Text>\n                  </RouterLink>\n                </Flex>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749'}\n                >\n                  <span role=\"img\" aria-label=\"privacy-policy\">🕵️‍♂️</span> Privacy Policy\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'}\n                >\n                  <span role=\"img\" aria-label=\"cookie-policy\">🍪</span> Cookie Policy\n                </ExtLink>\n              </Flex>\n            </Flex>\n            {\n              governanceEnabled && \n                <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n                  <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                    Governance\n                  </Heading.h3>\n                  <Flex width={1} flexDirection={'column'}>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        to={\"/governance\"}\n                        className={styles.link}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-overview\">🏛</span> Overview\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/proposals\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-proposals\">💡</span> Proposals\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/leaderboard\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-leaderboard\">📋</span> Leaderboard\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://gov.idle.finance/\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🤝</span> Forum\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://www.notion.so/idlelabs/ffe8115b7b53489ab0a7f84e656e4bb0?v=916250f54ff24daabad72cf095fd6d88\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🌎</span> Team\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                  </Flex>\n                </Flex>\n            }\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Start a Conversation\n              </Heading.h3>\n              <Link textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>\n                <span role=\"img\" aria-label=\"email\">✉️</span> info@idle.finance\n              </Link>\n            </Flex>\n            <Flex width={[1,columnWidth]} flexDirection={'column'}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Explore\n              </Heading.h3>\n              <Flex flexDirection={'row'} justifyContent={['space-evenly','flex-start']}>\n                <ExtLink href=\"https://twitter.com/idlefinance\">\n                  <Image src=\"images/social/twitter.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://t.me/idlefinance\">\n                  <Image src=\"images/social/telegram.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://discord.gg/mpySAJp\">\n                  <Image src=\"images/social/discord.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://medium.com/@idlefinance\">\n                  <Image src=\"images/social/medium.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://github.com/Idle-Labs/\">\n                  <Image src=\"images/social/github.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://www.linkedin.com/company/idlefinance\">\n                  <Image src=\"images/social/linkedin.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://defipulse.com/defi-list\">\n                  <Image src=\"images/social/defi-pulse.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n              </Flex>\n            </Flex>\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n          height={['auto','100%']}\n          flexDirection={'column'}\n          alignItems={['center','flex-end']}\n          justifyContent={['center','flex-end']}\n        >\n          <Flex\n            p={2}\n            width={1}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={'dark-blue'}\n            flexDirection={['column','row']}\n          >\n            <Text\n              color={'white'}\n              textAlign={['center','flex-end']}\n            >\n              &copy; {currYear} - Idle Labs Inc.\n            </Text>\n            <RouterLink\n              color={'blue'}\n              to={'/terms-of-service'}\n              style={{textDecoration:'none'}}\n            >\n              <Text\n                pl={2}\n                color={'#0df'}\n                textAlign={['center','flex-end']}\n              >\n                Terms of Service\n              </Text>\n            </RouterLink>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport styles from './TableCellHeader.module.scss';\nimport { Flex, Heading, Icon, Link, Tooltip } from \"rimble-ui\";\n\nclass TableCellHeader extends Component {\n  render() {\n\n    const ColTitle = (props) => (\n      <Heading.h4\n        fontWeight={[3,4]}\n        color={'cellTitle'}\n        style={{\n          width:'100%',\n          whiteSpace:'nowrap'\n        }}\n        fontSize={['10px',3]}\n        lineHeight={'initial'}\n        {...props}\n      >\n        {props.children}\n      </Heading.h4>\n    );\n\n    return (\n      <Flex\n        width={this.props.width}\n      >\n        {\n          (this.props.desc && this.props.desc.length>1) ? (\n            <Flex\n              alignItems={'center'}\n            >\n              <ColTitle\n                {...this.props}\n              />\n              <Link\n                style={{\n                  cursor:'pointer'\n                }}\n                onClick={ e => this.props.openTooltipModal(this.props.title,this.props.desc) }\n              >\n                <Tooltip\n                  placement={'top'}\n                  message={'Click to read the description'}\n                >\n                  <Icon\n                    ml={1}\n                    name={\"Info\"}\n                    color={'cellTitle'}\n                    className={styles.tooltip}\n                    size={ this.props.isMobile ? '1em' : '1.2em'}\n                  />\n                </Tooltip>\n              </Link>\n            </Flex>\n          ) : (\n            <ColTitle\n              {...this.props}\n            />\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableCellHeader;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ChartCustomTooltip extends Component {\n\n  async componentWillMount(){\n\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    \n  }\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos && this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ChartCustomTooltip;\n","import React, { Component } from 'react';\nimport {\n  Button,\n  Flex,\n  Box,\n  Text\n} from \"rimble-ui\";\nimport styles from './TwitterShareButton.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TwitterShareButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  share = () => {\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Share',\n      eventAction: 'twitter',\n      eventLabel: this.props.parent\n    });\n\n    const w = Math.min(window.innerWidth,600);\n    const h = 350;\n    const x = (window.innerWidth-w)/2;\n    const y = 150;\n    window.open(`https://twitter.com/intent/tweet?text=${this.props.tweet}`,\"_blank\",`toolbar=yes,scrollbars=no,resizable=no,top=${y},left=${x},width=${w},height=${h}`);\n  }\n\n  render() {\n    return (\n        <Button\n          borderRadius={1}\n          mainColor={'#2aa6f2'}\n          contrastColor={'white'}\n          onClick={ e => { this.share() } }\n        >\n          <Flex flexDirection={'row'} alignItems={'center'} justifyContent={'center'}>\n            <Box className={styles.twitterIcon} />\n            <Text color={'white'} fontWeight={3} ml={2}>{ this.props.text ? this.props.text : 'Tweet' }</Text>\n          </Flex>\n        </Button>\n    );\n  }\n}\n\nexport default TwitterShareButton;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Link,\n  Flex\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport TwitterShareButton from '../../TwitterShareButton/TwitterShareButton.js';\nimport Confetti from 'react-confetti/dist/react-confetti';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass ShareModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  closeModal = async (action) => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Share',\n        eventAction: action,\n        eventLabel: 'ShareModal'\n      });\n      this.props.closeModal();\n    } else {\n      this.props.closeModal();\n    }\n  }\n\n  render() {\n    const tweet = window.escape(this.props.tweet);\n    const customText = {__html: this.props.text};\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          {\n            this.props.confettiEnabled &&\n            <Confetti\n              style={{ position: 'fixed','zIndex':9999 }}\n              run={true}\n              recycle={true}\n              width={window.innerWidth}\n              height={window.innerHeight}\n            />\n          }\n          <ModalCard.Header title={this.props.title} icon={this.props.icon}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={3} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text color={'dark-gray'} textAlign={'center'} fontSize={3} mb={2} dangerouslySetInnerHTML={customText}></Text>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <TwitterShareButton tweet={tweet} text={'Share now'} parent={'ShareModal'} />\n              <Link mt={2} onClick={ e => this.closeModal('continue_without_sharing') } hoverColor={'blue'}>continue without sharing</Link>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ShareModal;","import React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Text, Icon, Image, Button, Link, Flex } from \"rimble-ui\";\n\nclass CustomField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText'\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    let CustomComponent = null;\n    let componentHasChildren = false;\n    const fieldType = fieldInfo.type;\n    const fieldPath = fieldInfo.path;\n    let customValue = fieldPath ? this.functionsUtil.getArrayPath(fieldPath,this.props.row) : null;\n\n    switch (fieldType){\n      case 'image':\n        CustomComponent = Image;\n        fieldProps.src = customValue;\n      break;\n      case 'number':\n        customValue = this.functionsUtil.BNify(customValue).toString();\n        CustomComponent = SmartNumber;\n        fieldProps.number = customValue;\n      break;\n      case 'link':\n        CustomComponent = Link;\n      break;\n      case 'icon':\n        CustomComponent = Icon;\n        fieldProps.name = customValue;\n      break;\n      case 'bgIcon':\n        CustomComponent = (props) => (\n          <Flex\n            p={'5px'}\n            borderRadius={'50%'}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={props.bgColor}\n          >\n            <Icon\n              align={'center'}\n              name={customValue}\n              color={props.color}\n              size={this.props.isMobile ? '1em' : '1.4em'}\n            />\n          </Flex>\n        );\n        fieldProps.name = customValue;\n      break;\n      case 'button':\n        CustomComponent = Button;\n        componentHasChildren = true;\n        customValue = fieldInfo.label || fieldProps.label;\n        fieldProps.onClick=() => fieldProps.handleClick(this.props)\n      break;\n      default:\n        CustomComponent = Text;\n        componentHasChildren = true;\n      break;\n    }\n\n    if (!customValue){\n      return null;\n    }\n\n    // Add custom field extra props\n    if (fieldPath){\n      const customFieldName = Object.values(fieldPath).pop();\n      if (this.props.row[`${customFieldName}Props`]){\n        const customFieldProps = this.props.row[`${customFieldName}Props`];\n        // Replace props\n        if (customFieldProps && Object.keys(customFieldProps).length){\n          Object.keys(customFieldProps).forEach(p => {\n            fieldProps[p] = customFieldProps[p];\n          });\n        }\n      }\n    }\n\n    return CustomComponent ? (componentHasChildren ? (<CustomComponent {...fieldProps}>{customValue}</CustomComponent>) : (<CustomComponent {...fieldProps} />) ) : null;\n  }\n}\n\nexport default CustomField;","import { Heading } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass Title extends Component {\n  render() {\n    const props = {\n      fontWeight:4,\n      fontSize:[4,6],\n      color:'copyColor',\n      textAlign:'center',\n      lineHeight:'initial',\n    };\n\n    // Replace props\n    if (this.props && Object.keys(this.props).length){\n      Object.keys(this.props).forEach(p => {\n        props[p] = this.props[p];\n      });\n    }\n\n    const HeadingComponent = this.props.component ? this.props.component : Heading.h1;\n\n    return (\n      <HeadingComponent\n        {...props}\n      >\n        {this.props.children}\n      </HeadingComponent>\n    );\n  }\n}\n\nexport default Title;\n","import React, { Component } from \"react\";\nimport { Button, Image, Flex, Text, Icon, Box } from 'rimble-ui';\n\nclass ImageButton extends Component {\n\n  render() {\n\n    const isMobile = typeof this.props.isMobile !== 'undefined' ? this.props.isMobile : false;\n    const image = this.props.imageSrc ? (<Image width={'auto'} src={this.props.imageSrc} {...this.props.imageProps} />) : ( this.props.iconName ? (<Icon name={this.props.iconName} {...this.props.iconProps} />) : null );\n    const caption = (<Text textAlign={ isMobile ? 'left' : 'center'} fontSize={2} fontWeight={3} color={'dark-gray'}>{this.props.caption}</Text>);\n\n    return (\n        <Button\n          color={'white'}\n          borderRadius={3}\n          px={ isMobile ? [3,4] : 4 }\n          py={ isMobile ? 0 : [3,4] }\n          my={ isMobile ? 2 : [2,2] }\n          mx={ isMobile ? 0 : [0,2] }\n          onClick={ this.props.handleClick }\n          height={ isMobile ? '58px' : ['150px','170px']}\n          mainColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          contrastColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          width={this.props.width ? this.props.width : (isMobile ? '100%' : ['150px','170px'])}\n          style={this.props.buttonStyle ? this.props.buttonStyle : (isMobile ? {justifyContent:'flex-start'} : null)}\n          {...this.props.buttonProps}\n        >\n          <>\n            {\n              this.props.badge && (\n                <Box\n                  position={'absolute'}\n                  borderRadius={'16px'}\n                  backgroundColor={ this.props.badge.bgColor ? this.props.badge.bgColor : 'blue' }\n                  style={ isMobile ? {right:'-25px',top:'-17px'} : {right:'-25px',top:'-25px'} }\n                  px={['5px','7px']}\n                  py={['1px','3px']}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={'10px'}\n                    color={ this.props.badge.color ? this.props.badge.color : '#fff' }\n                  >\n                  {this.props.badge.text}\n                  </Text>\n                </Box>\n              )\n            }\n            <Flex flexDirection={ isMobile ? 'row' : 'column'} justifyContent={ isMobile ? 'flex-start' : 'center'} alignItems={'center'}>\n              <Flex width={ isMobile ? '45px' : 1 } mr={ isMobile ? 2 : 0 } justifyContent={ isMobile ? 'flex-start' : 'center' }>\n                { this.props.captionPos && this.props.captionPos === 'top' ? caption : image }\n              </Flex>\n              <Flex width={ isMobile ? 'auto' : 1 } flexDirection={'column'} justifyContent={ isMobile ? 'flex-start' : 'center' } >\n                { this.props.captionPos && this.props.captionPos === 'top' ? image : caption }\n                {\n                  this.props.subcaption && this.props.subcaption.split('\\n').map((v,i) => {\n                    // Smaller caption for second line\n                    if (i){\n                      v = (<small>{v}</small>);\n                    }\n                    return (\n                      <Text key={`subcaption_${i}`} lineHeight={'1.3'} textAlign={ isMobile ? 'left' : 'center'} color={'darkGray'} fontWeight={1} fontSize={1}>{v}</Text>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </>\n        </Button>\n    );\n  }\n}\nexport default ImageButton;\n","import { Button } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass RoundButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      width:1,\n      fontWeight:3,\n      height:'45px',\n      fontSize:[2,3],\n      boxShadow:null,\n      borderRadius:4,\n      mainColor:'blue'\n    },this.props.buttonProps);\n\n    return (\n       <Button\n        {...buttonProps}\n        onClick={this.props.handleClick}\n       >\n        {this.props.children}\n       </Button>\n    );\n  }\n}\n\nexport default RoundButton;\n","import { Link } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass ExtLink extends Component {\n\n  render() {\n    return (\n      <Link\n        color={'link'}\n        target={'_blank'}\n        rel={'nofollow noopener noreferrer'}\n        {...this.props}\n      >\n        {this.props.children}\n      </Link>\n    );\n  }\n}\n\nexport default ExtLink;\n","// import { Line } from '@nivo/line';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport CustomField from '../CustomField/CustomField';\n// import SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n// import GenericChart from '../GenericChart/GenericChart';\n// import CustomTooltip from '../CustomTooltip/CustomTooltip';\nimport { Image, Text, Loader, Button, Flex, Icon } from \"rimble-ui\";\n// import VariationNumber from '../VariationNumber/VariationNumber';\n// import AllocationChart from '../AllocationChart/AllocationChart';\n// import CustomTooltipRow from '../CustomTooltip/CustomTooltipRow';\n\nclass TrancheField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n    // console.log('componentDidMount',this.props.protocol,this.props.token,this.props.tranche);\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const trancheChanged = prevProps.tranche !== this.props.tranche;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const protocolChanged = prevProps.protocol !== this.props.protocol;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractsInitialized = !prevProps.contractsInitialized && this.props.contractsInitialized;\n    const requiredNetworkChanged = (!prevProps.network && this.props.network) || (prevProps.network && this.props.network && JSON.stringify(prevProps.network.required) !== JSON.stringify(this.props.network.required));\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || protocolChanged || trancheChanged || accountChanged || transactionsChanged || contractsInitialized || requiredNetworkChanged){\n      // console.log('componentDidUpdate-1',fieldChanged,tokenChanged,protocolChanged,trancheChanged,accountChanged,transactionsChanged,(contractsInitialized && !this.state.ready));\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.loadField();\n      });\n    } else if (mobileChanged || themeModeChanged){\n      // console.log('componentDidUpdate-2',mobileChanged,themeModeChanged);\n      const oldState = Object.assign({},this.state);\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n\n    if (this.componentUnmounted || !this.props.protocol || !this.props.token || !this.props.tokenConfig || !this.props.contractsInitialized){\n      return false;\n    }\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n    const formatValue = typeof this.props.formatValue !== 'undefined' ? this.props.formatValue : true;\n    const addTokenName = typeof this.props.addTokenName !== 'undefined' ? this.props.addTokenName : true;\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        default:\n          output = await this.functionsUtil.loadTrancheField(fieldName,fieldProps,this.props.protocol,this.props.token,this.props.tranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account,addGovTokens,formatValue,addTokenName);\n          if (output && setState){\n            this.setStateSafe({\n              ready:true,\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n\n    return output;\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n    let output = null;\n\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    // const tokenName = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'label']) || this.functionsUtil.capitalize(this.props.token);\n\n    // const tokenConfig = this.props.tokenConfig;// || this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token]);\n    const maxPrecision = fieldProps && fieldProps.maxPrecision ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const minPrecision = fieldProps && fieldProps.minPrecision ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    // console.log('TrancheField',fieldInfo.name,fieldProps);\n    const flexProps = fieldProps.flexProps;\n    delete fieldProps.flexProps;\n\n    switch (fieldInfo.name){\n      case 'protocolIcon':\n        output = (\n          <Image src={`images/protocols/${this.props.protocol}.svg`} {...fieldProps} />\n        );\n      break;\n      case 'trancheTypeIcon':\n        const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.tranche]);\n        output = (\n          <Flex\n            p={'6px'}\n            borderRadius={'50%'}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={`rgba(${trancheDetails.color.rgb.join(',')},0.2)`}\n            {...flexProps}\n          >\n            <Icon\n              {...fieldProps}\n              align={'center'}\n              name={trancheDetails.icon}\n              color={trancheDetails.color.hex}\n            />\n          </Flex>\n        );\n      break;\n      case 'tokenIcon':\n        output = (\n          <Image src={`images/tokens/${this.props.token}.svg`} {...fieldProps} />\n        );\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <Button {...fieldProps} onClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</Button>\n        );\n      break;\n      case 'custom':\n        output = (\n          <CustomField\n            row={this.props}\n            fieldInfo={fieldInfo}\n          />\n        );\n      break;\n      case 'feesCounter':\n        output = this.state.ready && this.state.feesCounter.feesStart && this.state.feesCounter.feesEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.feesCounter.feesEnd)}\n            start={parseFloat(this.state.feesCounter.feesStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounter':\n        output = this.state.ready && this.state.earningsCounter && this.state.earningsCounter.earningsStart && this.state.earningsCounter.earningsEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsCounter.earningsEnd)}\n            start={parseFloat(this.state.earningsCounter.earningsStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'govTokens':\n      case 'autoFarming':\n      case 'stakingRewards':\n        output = this.state[fieldInfo.name] && Object.keys(this.state[fieldInfo.name]).length>0 ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n            {...fieldInfo.parentProps}\n          >\n            {\n              Object.values(this.state[fieldInfo.name]).map( (govTokenConfig,govTokenIndex) => (\n                <AssetField\n                  token={govTokenConfig.token}\n                  tokenConfig={govTokenConfig}\n                  key={`asset_${govTokenIndex}`}\n                  fieldInfo={{\n                    name:'iconTooltip',\n                    tooltipProps:{\n                      message:`${govTokenConfig.token}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govTokenConfig.token] ? `: ${this.state.getGovTokensDistributionSpeed[govTokenConfig.token].toFixed(decimals)}/${govTokenConfig.distributionFrequency} (for the whole pool)` : '')\n                    },\n                    props:{\n                      borderRadius:'50%',\n                      position:'relative',\n                      height:['1.4em','2em'],\n                      ml:govTokenIndex ? '-10px' : 0,\n                      zIndex:Object.values(this.state[fieldInfo.name]).length-govTokenIndex,\n                      boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                    }\n                  }}\n                />\n              ))\n            }\n          </Flex>\n        ) : this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>-</Text>\n        ) : loader\n      break;\n      default:\n        let formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps} dangerouslySetInnerHTML={{__html:formattedValue}}></Text>\n        ) : loader\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TrancheField;\n","import { Line } from '@nivo/line';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport { linearGradientDef } from '@nivo/core'\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport CustomTooltip from '../CustomTooltip/CustomTooltip';\nimport VariationNumber from '../VariationNumber/VariationNumber';\nimport AllocationChart from '../AllocationChart/AllocationChart';\nimport CustomTooltipRow from '../CustomTooltip/CustomTooltipRow';\nimport { Image, Text, Loader, Button, Tooltip, Icon, Flex, Link } from \"rimble-ui\";\n\nclass AssetField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractsInitialized = !prevProps.contractsInitialized && this.props.contractsInitialized;\n    const requiredNetworkChanged = (!prevProps.network && this.props.network) || (prevProps.network && this.props.network && JSON.stringify(prevProps.network.required) !== JSON.stringify(this.props.network.required));\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || accountChanged || transactionsChanged || contractsInitialized || requiredNetworkChanged){\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.loadField();\n      });\n    } else if (mobileChanged || themeModeChanged){\n      const oldState = Object.assign({},this.state);\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n    // Exit if component unmounted\n    // console.log('loadField',this.props.fieldInfo.name,this.props.account,this.props.token,this.props.tokenConfig);\n\n    if (this.componentUnmounted || !this.props.token || !this.props.tokenConfig || !this.props.contractsInitialized){\n      return null;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    // const addCurveApy = typeof this.props.addCurveApy !== 'undefined' ? this.props.addCurveApy : false;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        case 'tokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              tokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'govTokens':\n          const govTokens = this.functionsUtil.getTokenGovTokens(this.props.tokenConfig);\n          const getGovTokensDistributionSpeed = await this.functionsUtil.getGovTokensDistributionSpeed(this.props.tokenConfig);\n          this.setStateSafe({\n            govTokens,\n            getGovTokensDistributionSpeed\n          });\n        break;\n        case 'tokenPrice':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenPrice = '-';\n            if (typeof this.props.tokenConfig.showPrice === 'undefined' || this.props.tokenConfig.showPrice){\n              tokenPrice = output.toString();\n            }\n            this.setStateSafe({\n              tokenPrice\n            });\n          }\n        break;\n        case 'fee':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              fee:output.toString()\n            });\n          }\n        break;\n        case 'amountToMigrate':\n          const {\n            oldContractBalanceFormatted\n          } = await this.functionsUtil.checkMigration(this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (setState && oldContractBalanceFormatted){\n            this.setStateSafe({\n              amountToMigrate:oldContractBalanceFormatted.toString()\n            });\n            output = oldContractBalanceFormatted;\n          }\n        break;\n        case 'amountLent':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              amountLent:output.toString()\n            });\n          }\n        break;\n        case 'idleTokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              idleTokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'redeemableBalanceCounterCurve':\n          const {\n            redeemableBalanceCurveEnd,\n            redeemableBalanceCurveStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceCurveStart && redeemableBalanceCurveEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceCurveEnd,\n                redeemableBalanceCurveStart\n              });\n            }\n\n            output = {\n              redeemableBalanceCurveEnd,\n              redeemableBalanceCurveStart\n            };\n          }\n        break;\n        case 'redeemableBalanceCounter':\n          const {\n            redeemableBalanceEnd,\n            redeemableBalanceStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceStart && redeemableBalanceEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceEnd,\n                redeemableBalanceStart\n              });\n            }\n\n            output = {\n              redeemableBalanceEnd,\n              redeemableBalanceStart\n            };\n          }\n        break;\n        case 'earnings':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earnings:output.toString()\n            });\n          }\n        break;\n        case 'feesCounter':\n          const [earningsCounter,feePercentage] = await Promise.all([\n            this.loadField('earningsCounter'),\n            this.functionsUtil.getTokenFees(this.props.tokenConfig)\n          ]);\n\n          if (earningsCounter && earningsCounter.earningsStart && earningsCounter.earningsEnd && feePercentage){\n\n            const feesStart = earningsCounter.earningsStart.times(feePercentage);\n            const feesEnd = earningsCounter.earningsEnd.times(feePercentage);\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                feesEnd,\n                feesStart\n              });\n            }\n\n            output = {\n              feesEnd,\n              feesStart\n            };\n          }\n        break;\n        case 'earningsCounterCurve':\n          const [curveApy,earningsCurveStart,amountLentCurve] = await Promise.all([\n            this.functionsUtil.getCurveAPY(),\n            this.functionsUtil.loadAssetField('earningsCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLentCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n          if (amountLentCurve && earningsCurveStart && curveApy){\n            const earningsCurveEnd = amountLentCurve.gt(0) ? amountLentCurve.times(curveApy.div(100)).plus(earningsCurveStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsCurveEnd,\n                earningsCurveStart\n              });\n            }\n\n            output = {\n              earningsCurveEnd,\n              earningsCurveStart\n            };\n          }\n        break;\n        case 'earningsCounter':\n          let [tokenAPY2,earningsStart,amountLent2] = await Promise.all([\n            this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('earnings',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLent',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n\n          if (amountLent2 && earningsStart && tokenAPY2){\n            const earningsEnd = amountLent2.gt(0) ? amountLent2.times(tokenAPY2.div(100)).plus(earningsStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsEnd,\n                earningsStart\n              });\n            }\n\n            output = {\n              earningsEnd,\n              earningsStart\n            };\n          }\n        break;\n        case 'redeemableBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              redeemableBalance:output.toString()\n            });\n          }\n        break;\n        case 'score':\n          const tokenScore = await this.functionsUtil.getTokenScore(this.props.tokenConfig,isRisk);\n          if (setState){\n            this.setStateSafe({\n              score:tokenScore ? tokenScore : false\n            });\n          }\n          output = tokenScore;\n        break;\n        case 'pool':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              poolSize:output.toString()\n            });\n          }\n        break;\n        case 'earningsPercCurve':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPercCurveDirection:parseFloat(output)>0 ? 'up' : 'down',\n              earningsPercCurve:parseFloat(output).toFixed(decimals)\n            });\n          }\n        break;\n        case 'earningsPerc':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPerc:parseFloat(output).toFixed(decimals),\n              earningsPercDirection:parseFloat(output)>0 ? 'up' : 'down'\n            });\n          }\n        break;\n        case 'apr':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenAPR = '-';\n            if (typeof this.props.tokenConfig.showAPR === 'undefined' || this.props.tokenConfig.showAPR){\n              tokenAPR = parseFloat(output).toFixed(decimals);\n            }\n            this.setStateSafe({\n              tokenAPR\n            });\n          }\n        break;\n        case 'oldApy':\n          if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.oldContract){\n            const oldTokenConfig = Object.assign({},this.props.tokenConfig);\n            oldTokenConfig.idle = Object.assign({},this.props.tokenConfig.migration.oldContract);\n            oldTokenConfig.protocols = Object.values(this.props.tokenConfig.protocols);\n\n            // Override token with name\n            oldTokenConfig.idle.token = oldTokenConfig.idle.name;\n\n            // Replace protocols with old protocols\n            if (oldTokenConfig.migration.oldProtocols){\n              oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n                const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n                if (foundProtocol){\n                  const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                  oldTokenConfig.protocols[protocolPos] = oldProtocol;\n                }\n              });\n            }\n\n            output = await this.functionsUtil.loadAssetField('apy',this.props.token,oldTokenConfig,this.props.account,false);\n\n          } else {\n            output = await this.loadField('apyNoGov');\n          }\n\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                oldAPY:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                oldAPY:false\n              });\n            }\n          }\n        break;\n        case 'apyNoGov':\n          output = await this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,false);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                tokenAPYNoGov:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPYNoGov:false\n              });\n            }\n          }\n        break;\n        case 'curveApy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveApy:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveApy:false\n              });\n            }\n          }\n        break;\n        case 'curveAvgSlippage':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveAvgSlippage:(parseFloat(output)*100).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveAvgSlippage:false\n              });\n            }\n          }\n        break;\n\n        case 'apy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // console.log(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens,output);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              const tokenAPY = parseFloat(output).toFixed(decimals);\n              const showTooltip = !this.props.isMobile && (fieldInfo.showTooltip !== undefined && fieldInfo.showTooltip);\n              const govTokensAprs = showTooltip ? await this.functionsUtil.getGovTokensAprs(this.props.token,this.props.tokenConfig) : null;\n              this.setStateSafe({\n                tokenAPY,\n                govTokensAprs\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPY:false\n              });\n            }\n          }\n        break;\n        case 'allocationChart':\n          let allocationChartWidth = 0;\n          let allocationChartHeight = 0;\n\n          const resizeAllocationChart = () => {\n            const allocationChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (allocationChartRowElement){\n              const $allocationChartRowElement = window.jQuery(allocationChartRowElement);\n              allocationChartWidth = $allocationChartRowElement.innerWidth()-parseFloat($allocationChartRowElement.css('padding-right'))-parseFloat($allocationChartRowElement.css('padding-left'));\n              allocationChartHeight = $allocationChartRowElement.innerHeight();\n\n              // Make it a square\n              allocationChartWidth = parseInt(allocationChartWidth)>0 ? Math.min(allocationChartWidth,allocationChartHeight) : allocationChartHeight;\n              allocationChartHeight = allocationChartWidth;\n\n\n              if (allocationChartWidth !== this.state.allocationChartWidth){\n                if (setState){\n                  this.setStateSafe({\n                    allocationChartWidth,\n                    allocationChartHeight\n                  });\n                }\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAllocationChart();\n          window.removeEventListener('resize', resizeAllocationChart.bind(this));\n          window.addEventListener('resize', resizeAllocationChart.bind(this));\n\n          if (setState){\n            this.setStateSafe({\n              allocationChartWidth,\n              allocationChartHeight\n            });\n          }\n        break;\n        case 'aprChart':\n          // Set start timestamp for v3 tokens\n          const aprChartEndTimestamp = isRisk ? this.functionsUtil.getGlobalConfig(['stats','versions','v3','endTimestamp']) : null;\n          const aprChartStartTimestamp = isRisk ? aprChartEndTimestamp-(7*24*60*60) : Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).format('DD/MM/YYYY 00:00:00'),'DD/MM/YYYY HH:mm:ss').subtract(7,'days')._d.getTime()/1000));\n\n          // Check for cached data\n          let aprChartData = null;\n          const cachedDataKey = `aprChart_${this.props.tokenConfig.address}_${isRisk}`;\n          const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n\n          aprChartData = [{\n            id:this.props.token,\n            color: this.props.color ? this.props.color : 'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'color','hsl']).join(',')+')',\n            data: []\n          }];\n\n          if (cachedData !== null && cachedData[0] && cachedData[0].data && cachedData[0].data.length>0){\n            aprChartData = cachedData;\n          } else {\n\n            // FAKE CHART DATA\n            if (this.props.token === 'COMP'){\n              aprChartData[0].data = [];\n              const startTimestamp = new Date().getTime();\n              let y = 20;\n              for (var i=0; i<=16; i++) {\n                const mDate = this.functionsUtil.strToMoment(startTimestamp).add(i,'day');\n                const x = mDate.format(\"YYYY/MM/DD HH:mm\");\n                // Grow\n                if ((i>=5 && i<=10) || (i>=13)){\n                  y+=Math.random()*4+2; // Risk\n                  // y+=Math.random()*7+4; // Best\n                // Decrease\n                } else {\n                  y-=Math.random()*3+1; // Risk\n                  // y-=Math.random()*3+1; // Best\n                }\n                aprChartData[0].data.push({x,y});\n              }\n            } else {\n              const frequencySeconds = this.functionsUtil.getFrequencySeconds('hour',12);\n\n              // console.log('apiResultsAprChart',this.props.tokenConfig.token,this.props.tokenConfig.address,this.props.network.required);\n\n              const apiResultsAprChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,aprChartStartTimestamp,aprChartEndTimestamp,false,frequencySeconds);\n\n              let itemIndex = 0;\n              const totalItems = apiResultsAprChart.length;\n\n              apiResultsAprChart.forEach((d,i) => {\n                const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const y = parseFloat(this.functionsUtil.fixTokenDecimals(d.idleRate,18));\n                const itemPos = Math.floor(itemIndex++/totalItems*100);\n                aprChartData[0].data.push({ x, y, itemPos });\n              });\n            }\n\n            if (aprChartData[0].data.length>0){\n              this.functionsUtil.setCachedData(cachedDataKey,aprChartData);\n            }\n          }\n\n          // Add same value\n          if (aprChartData[0].data.length === 1){\n            const newPoint = Object.assign({},aprChartData[0].data[0]);\n            newPoint.x = this.functionsUtil.strToMoment(newPoint,\"YYYY/MM/DD HH:mm\").add(1,'hours').format(\"YYYY/MM/DD HH:mm\")\n            aprChartData[0].data.push(newPoint);\n          }\n\n          let aprChartWidth = 0;\n          let aprChartHeight = 0;\n\n          const resizeAprChart = () => {\n            const aprChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (aprChartRowElement){\n              const $aprChartRowElement = window.jQuery(aprChartRowElement);\n              aprChartWidth = $aprChartRowElement.innerWidth()-parseFloat($aprChartRowElement.css('padding-right'))-parseFloat($aprChartRowElement.css('padding-left'));\n              aprChartHeight = $aprChartRowElement.innerHeight();\n              if (aprChartWidth !== this.state.aprChartWidth || !this.state.aprChartHeight){\n                this.setStateSafe({\n                  aprChartWidth,\n                  aprChartHeight: this.state.aprChartHeight ? this.state.aprChartHeight : aprChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAprChart();\n          window.removeEventListener('resize', resizeAprChart.bind(this));\n          window.addEventListener('resize', resizeAprChart.bind(this));\n\n          // Set chart type\n          const aprChartType = Line;\n\n          const aprChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            axisLeft:null,\n            animate:false,\n            axisBottom:null,\n            enableArea:true,\n            areaOpacity:0.1,\n            curve:'monotoneX',\n            enableGridX:false,\n            enableGridY:false,\n            pointBorderWidth:2,\n            isInteractive:true,\n            colors:d => d.color,\n            defs:[\n              linearGradientDef('gradientArea', [\n                  { offset: 0, color: '#faf047' },\n                  { offset: 50, color: '#e4b400' },\n              ])\n            ],\n            enableSlices:this.props.isMobile ? false : 'x',\n            yFormat:value => parseFloat(value).toFixed(2)+'%',\n            fill:[\n              { match: { id: this.props.token } , id: 'gradientArea' },\n            ],\n            margin: { top: 10, right: 0, bottom: 0, left: 0 },\n            sliceTooltip:(slideData) => {\n              const { slice } = slideData;\n              const point = slice.points[0];\n              return (\n                <CustomTooltip\n                  point={point}\n                >\n                  {\n                  typeof slice.points === 'object' && slice.points.length &&\n                    slice.points.map(point => {\n                      const protocolName = point.serieId;\n                      const protocolEarning = point.data.yFormatted;\n                      // const protocolApy = point.data.apy;\n                      return (\n                        <CustomTooltipRow\n                          key={point.id}\n                          color={point.color}\n                          label={protocolName}\n                          value={protocolEarning}\n                        />\n                      );\n                    })\n                  }\n                </CustomTooltip>\n              );\n            }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                aprChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              aprChartType,\n              aprChartData,\n              aprChartProps,\n              aprChartWidth,\n              aprChartHeight\n            });\n          }\n          output = aprChartData;\n        break;\n        case 'performanceChart':\n          let firstTokenPrice = null;\n          let firstIdleBlock = null;\n          /*\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const performanceChartRowElement = document.getElementById(this.props.rowId) ? document.getElementById(this.props.rowId) : document.getElementById(this.props.parentId);\n          if (performanceChartRowElement){\n            performanceChartWidth = parseFloat(performanceChartRowElement.offsetWidth)>0 ? performanceChartRowElement.offsetWidth* (this.props.colProps ? this.props.colProps.width : 1) : 0;\n            performanceChartHeight = parseFloat(performanceChartRowElement.offsetHeight);\n          }\n          */\n\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const resizePerformanceChart = () => {\n            const PerformanceChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (PerformanceChartRowElement){\n              const $PerformanceChartRowElement = window.jQuery(PerformanceChartRowElement);\n              performanceChartWidth = $PerformanceChartRowElement.innerWidth()-parseFloat($PerformanceChartRowElement.css('padding-right'))-parseFloat($PerformanceChartRowElement.css('padding-left'));\n              performanceChartHeight = $PerformanceChartRowElement.innerHeight();\n              if (performanceChartWidth !== this.state.performanceChartWidth || !this.state.performanceChartHeight){\n                this.setStateSafe({\n                  performanceChartWidth,\n                  performanceChartHeight: this.state.performanceChartHeight ? this.state.performanceChartHeight : performanceChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizePerformanceChart();\n          window.removeEventListener('resize', resizePerformanceChart.bind(this));\n          window.addEventListener('resize', resizePerformanceChart.bind(this));\n\n          const apr_end_date = this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).subtract(1,'day').format('YYYY-MM-DD 23:59'),'YYYY-MM-DD HH:mm');\n          const apr_start_date = apr_end_date.clone().subtract(1,'week');\n\n          // Set start timestamp for v3 tokens\n          const apr_start_timestamp =  Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(apr_start_date._d.getTime()/1000));\n          // const apr_end_timestamp = parseInt(apr_end_date._d.getTime()/1000);\n\n          let apiResultsPerformanceChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,apr_start_timestamp,null,false,43200);\n\n          const idleTokenPerformance = apiResultsPerformanceChart.map((d,i) => {\n            let y = 0;\n            const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n            const tokenPrice = this.functionsUtil.fixTokenDecimals(d.idlePrice,this.props.tokenConfig.decimals);\n\n            if (!firstTokenPrice){\n              firstTokenPrice = tokenPrice;\n            } else {\n              y = parseFloat(tokenPrice.div(firstTokenPrice).minus(1).times(100));\n            }\n\n            if (firstIdleBlock === null){\n              firstIdleBlock = parseInt(d.blocknumber);\n            }\n\n            return { x, y };\n          });\n\n          const performanceChartData = [{\n            id:'Idle',\n            color: 'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'color','hsl']).join(',')+')',\n            data: idleTokenPerformance\n          }];\n\n          // Set chart type\n          const performanceChartType = Line;\n\n          const performanceChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            animate:false,\n            axisLeft:null,\n            axisBottom:null,\n            enableArea:true,\n            enableGridX:false,\n            enableGridY:false,\n            curve:'monotoneX',\n            enableSlices:false,\n            pointBorderWidth:1,\n            colors:d => d.color,\n            pointLabelYOffset:-12,\n            margin: { top: 0, right: 0, bottom: 0, left: 0 }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                performanceChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              performanceChartType,\n              performanceChartData,\n              performanceChartProps,\n              performanceChartWidth,\n              performanceChartHeight\n            });\n          }\n          output = performanceChartData;\n        break;\n        case 'custom':\n          const path = fieldInfo.path;\n          output = this.functionsUtil.getArrayPath(path,this.props.tokenConfig);\n          if (output){\n            this.setStateSafe({\n              [fieldName]:output\n            });\n          }\n        break;\n        default:\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              ready:true,\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n\n    return output;\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n    let output = null;\n\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    const tokenConfig = this.props.tokenConfig || this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token]);\n      \n    const maxPrecision = fieldProps && fieldProps.maxPrecision ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const minPrecision = fieldProps && fieldProps.minPrecision ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    switch (fieldInfo.name){\n      case 'iconTooltip':\n        const icon1 = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Tooltip\n            placement={'top'}\n            message={this.props.token}\n            {...fieldInfo.tooltipProps}\n          >\n            <Image src={icon1} {...fieldProps} />\n          </Tooltip>\n        );\n      break;\n      case 'icon':\n        const icon2 = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Image src={icon2} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        output = (\n          <Text {...fieldProps}>{this.props.token}</Text>\n        );\n      break;\n      case 'strategyIcon':\n        const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'icon']);\n        if (strategyIcon){\n          output = (\n            <Image src={strategyIcon} {...fieldProps} />\n          );\n        }\n      break;\n      case 'strategyName':\n        const strategyName = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'title']);\n        output = (\n          <Text {...fieldProps}>{strategyName}</Text>\n        );\n      break;\n      case 'tokenBalance':\n        output = this.state.tokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenBalance} />\n        ) : loader\n      break;\n      case 'fee':\n        output = this.state.fee ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.fee} />\n        ) : loader\n      break;\n      case 'tokenPrice':\n        output = this.state.tokenPrice ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenPrice} />\n        ) : loader\n      break;\n      case 'amountToMigrate':\n        output = this.state.amountToMigrate ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.amountToMigrate} />\n        ) : loader\n      break;\n      case 'idleTokenBalance':\n        output = this.state.idleTokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.idleTokenBalance} />\n        ) : loader\n      break;\n      case 'redeemableBalanceCounterCurve':\n        output = this.state.ready && this.state.redeemableBalanceCurveStart && this.state.redeemableBalanceCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceCurveEnd)}\n            start={parseFloat(this.state.redeemableBalanceCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalanceCounter':\n        output = this.state.ready && this.state.redeemableBalanceStart && this.state.redeemableBalanceEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceEnd)}\n            start={parseFloat(this.state.redeemableBalanceStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'feesCounter':\n        output = this.state.ready && this.state.feesStart && this.state.feesEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.feesEnd)}\n            start={parseFloat(this.state.feesStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounterCurve':\n        output = this.state.ready && this.state.earningsCurveStart && this.state.earningsCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsCurveEnd)}\n            start={parseFloat(this.state.earningsCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounter':\n        output = this.state.ready && this.state.earningsStart && this.state.earningsEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsEnd)}\n            start={parseFloat(this.state.earningsStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalance':\n        output = this.state.redeemableBalance ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.redeemableBalance} />\n        ) : loader\n      break;\n      case 'govTokens':\n        output = this.state.govTokens && Object.keys(this.state.govTokens).length>0 ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n          >\n            {\n              Object.values(this.state.govTokens).map( (govTokenConfig,govTokenIndex) => (\n                <AssetField\n                  token={govTokenConfig.token}\n                  tokenConfig={govTokenConfig}\n                  key={`asset_${govTokenIndex}`}\n                  fieldInfo={{\n                    name:'iconTooltip',\n                    tooltipProps:{\n                      message:`${govTokenConfig.token}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govTokenConfig.token] ? `: ${this.state.getGovTokensDistributionSpeed[govTokenConfig.token].toFixed(decimals)}/${govTokenConfig.distributionFrequency} (for the whole pool)` : '')\n                    },\n                    props:{\n                      borderRadius:'50%',\n                      position:'relative',\n                      height:['1.1em','2em'],\n                      ml:govTokenIndex ? '-10px' : 0,\n                      zIndex:Object.values(this.state.govTokens).length-govTokenIndex,\n                      boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                    }\n                  }}\n                />\n              ))\n            }\n          </Flex>\n        ) : this.state.govTokens ? (\n          <Text {...fieldProps}>-</Text>\n        ) : loader\n      break;\n      case 'amountLentCurve':\n        output = this.state.amountLentCurve ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLentCurve} />\n        ) : loader\n      break;\n      case 'amountLent':\n        output = this.state.amountLent ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLent} />\n        ) : loader\n      break;\n      case 'pool':\n        output = this.state.poolSize ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.poolSize} />\n        ) : loader\n      break;\n      case 'score':\n        output = (this.props.tokenConfig && this.props.tokenConfig.defiScoreDisabled) ? (<Text {...fieldProps}>N/A</Text>) : (this.state.score !== undefined && this.state.score !== null && this.functionsUtil.BNify(this.state.score).gt(0)) ? (\n          <SmartNumber {...fieldProps} decimals={2} number={this.state.score} />\n        ) : (this.functionsUtil.BNify(this.state.score).lte(0) ? (<Text {...fieldProps}>-</Text>) : loader)\n      break;\n      case 'earningsPerc':\n        output = this.state.earningsPerc ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsPercCurve':\n        output = this.state.earningsPercCurve ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercCurveDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsCurve':\n        output = this.state.earningsCurve ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earningsCurve}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'earnings':\n        output = this.state.earnings ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earnings}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'idleDistribution':\n        const governanceTokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n        const idleTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',governanceTokenName]);\n        output = this.state.idleDistribution ? (\n          <Text {...fieldProps}>+{this.state.idleDistribution.toFixed(decimals)} IDLE/{idleTokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'userDistributionSpeed':\n        output = this.state.userDistributionSpeed ? (\n          <Text {...fieldProps}>{this.state.userDistributionSpeed.toFixed(decimals)}/{this.props.tokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'distributionSpeed':\n        output = this.state.distributionSpeed ? (\n          <Text {...fieldProps}>{this.state.distributionSpeed.toFixed(decimals)}</Text>\n        ) : loader\n      break;\n      case 'apr':\n        output = this.state.tokenAPR ? (\n          <Text {...fieldProps}>{this.state.tokenAPR}{!isNaN(parseFloat(this.state.tokenAPR)) ? '%' : ''}</Text>\n        ) : loader\n      break;\n      case 'oldApy':\n        output = this.state.oldAPY !== undefined ? (\n          <Text {...fieldProps}>{this.state.oldAPY !== false ? this.state.oldAPY : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apyNoGov':\n        output = this.state.tokenAPYNoGov !== undefined ? (\n          <Text {...fieldProps}>{this.state.tokenAPYNoGov !== false ? this.state.tokenAPYNoGov : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveApy':\n        output = this.state.curveApy !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveApy !== false ? this.state.curveApy : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveAvgSlippage':\n        output = this.state.curveAvgSlippage !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveAvgSlippage !== false ? this.state.curveAvgSlippage : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apy':\n        output = this.state.tokenAPY !== undefined ? (\n          <Flex\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text {...fieldProps}>{this.state.tokenAPY !== false ? this.state.tokenAPY : '-' }<small>%</small></Text>\n            {\n              this.state.govTokensAprs && Object.keys(this.state.govTokensAprs).length>0 && \n                <AssetField\n                  fieldInfo={{\n                    name:'tooltip',\n                    props:{\n                      iconProps:{\n                        ml:1\n                      },\n                      placement:'top',\n                      message:Object.keys(this.state.govTokensAprs).map( govToken => {\n                        const distributionFrequency = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'distributionFrequency']);\n                        const tooltipMode = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'aprTooltipMode']);\n                        let value = this.state.govTokensAprs[govToken].toFixed(decimals);\n                        switch (tooltipMode){\n                          default:\n                          case 'apr':\n                            value += '%';\n                          break;\n                          case 'distribution':\n                            value = `${value}/${distributionFrequency}`;\n                          break;\n                        }\n                        return `${govToken}: ${value}`\n                      }).join('; ')\n                    }\n                  }}\n                />\n            }\n          </Flex>\n        ) : loader\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <Button {...fieldProps} onClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</Button>\n        );\n      break;\n      case 'performanceChart':\n        output = this.state.performanceChartData ? (\n          <GenericChart\n            {...this.state.performanceChartProps}\n            type={this.state.performanceChartType}\n            data={this.state.performanceChartData}\n            width={this.state.performanceChartWidth}\n            height={this.state.performanceChartHeight}\n          />\n        ) : loader\n      break;\n      case 'allocationChart':\n        output = this.state.allocationChartWidth && this.state.allocationChartHeight ? (\n          <AllocationChart\n            {...this.props}\n            loaderProps={{\n              size:'20px'\n            }}\n            loaderText={''}\n            selectedToken={this.props.token}\n            width={this.state.allocationChartWidth}\n            height={this.state.allocationChartHeight}\n            inline={typeof this.props.inline !== 'undefined' ? this.props.inline : true}\n            showLoader={typeof this.props.showLoader !== 'undefined' ? this.props.showLoader : false}\n          />\n        ) : loader\n      break;\n      case 'tooltip':\n        output = (\n          <Tooltip\n            {...fieldProps}\n          >\n            <Icon\n              ml={2}\n              name={\"Info\"}\n              size={'1em'}\n              color={'cellTitle'}\n              {...fieldProps.iconProps}\n            />\n          </Tooltip>\n        );\n      break;\n      case 'aprChart':\n        output = this.state.aprChartData ? (\n          <GenericChart\n            {...this.state.aprChartProps}\n            type={this.state.aprChartType}\n            data={this.state.aprChartData}\n            width={this.state.aprChartWidth}\n            height={this.state.aprChartHeight}\n          />\n        ) : loader\n      break;\n      case 'custom':\n        let CustomComponent = null;\n        let customValue = this.state[fieldInfo.name];\n        switch (fieldInfo.type){\n          case 'number':\n            customValue = this.functionsUtil.BNify(customValue).toString();\n            CustomComponent = SmartNumber;\n            fieldProps.number = customValue;\n          break;\n          case 'link':\n            CustomComponent = Link;\n          break;\n          case 'icon':\n            CustomComponent = Icon;\n            fieldProps.name = customValue;\n          break;\n          default:\n            CustomComponent = Text;\n          break;\n        }\n\n        // Custom Field Props\n        const customFieldName = Object.values(fieldInfo.path).pop();\n        if (this.props.tokenConfig[`${customFieldName}Props`]){\n          const customFieldProps = this.props.tokenConfig[`${customFieldName}Props`];\n          // Replace props\n          if (customFieldProps && Object.keys(customFieldProps).length){\n            Object.keys(customFieldProps).forEach(p => {\n              fieldProps[p] = customFieldProps[p];\n            });\n          }\n        }\n\n        output = customValue ? (\n          <CustomComponent {...fieldProps}>{customValue}</CustomComponent>\n        ) : loader\n      break;\n      default:\n        let formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>{formattedValue}</Text>\n        ) : loader\n      break;\n    }\n    return output;\n  }\n}\n\nexport default AssetField;\n"],"sourceRoot":""}