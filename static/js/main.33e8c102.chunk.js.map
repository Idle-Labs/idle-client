{"version":3,"sources":["FlexLoader/FlexLoader.js","ChartCustomTooltipRow/ChartCustomTooltipRow.js","PageNotFound/PageNotFound.module.scss","utilities/components/ShortHash.js","LoadingSpinner/LoadingSpinner.js","ButtonLoader/ButtonLoader.js","colors.js","IconBox/IconBox.js","TransactionListFilters/TransactionListFilters.js","TransactionsList/TransactionsList.js","CustomTooltip/CustomTooltip.js","AllocationChart/AllocationChart.js","SmartNumber/SmartNumber.js","CustomTooltip/CustomTooltipRow.js","PortfolioEquity/PortfolioEquity.js","ChartCustomTooltip/ChartCustomTooltip.js","ImageButton/ImageButton.js","RoundButton/RoundButton.js","ExtLink/ExtLink.js","theme.js","TableCellHeader/TableCellHeader.module.scss","TransactionListFilters/TransactionListFilters.module.scss","utilities/components/ModalCard.module.scss","Web3ConnectionButtons/Web3ConnectionButtons.module.scss","utilities/components/Header.module.scss","TxProgressBar/TxProgressBar.js","AssetSelector/AssetSelector.js","Tos/Tos.module.scss","TransactionField/TransactionField.js","GenericSelector/GenericSelector.js","Title/Title.js","GenericChart/GenericChart.js","DashboardCard/DashboardCard.module.scss","FastBalanceSelector/FastBalanceSelector.js","TokenSwap/TokenSwap.js","SendTxWithBalance/SendTxWithBalance.js","ETHWrapper/ETHWrapper.js","NexusMutual/NexusMutual.js","CustomField/CustomField.js","CustomList/CustomList.js","PortfolioDonut/PortfolioDonut.js","TotalEarningsCounter/TotalEarningsCounter.js","EarningsEstimation/EarningsEstimation.js","DashboardIconButton/DashboardIconButton.js","TotalBalanceCounter/TotalBalanceCounter.js","StrategyPage/StrategyPage.js","BatchDeposit/BatchDeposit.js","CoverProtocol/CoverProtocol.js","TokenMigration/TokenMigration.js","BatchMigration/BatchMigration.js","configs/globalConfigs.js","utilities/IdleGovToken.js","utilities/FunctionsUtil.js","DashboardCard/DashboardCard.js","Tos/Tos.js","theme-dark.js","App/connectors/TorusConnector.js","App/connectors/AuthereumConnector.js","App/connectors/WalletLinkConnector.js","App/connectors/WalletConnectConnector.js","App/connectors.js","utilities/components/WrongNetworkBanner.js","utilities/NetworkUtil.js","utilities/components/NoWeb3BrowserModal.js","utilities/components/NoWalletModal.js","utilities/GeneralUtil.js","utilities/components/WrongNetworkModal.js","utilities/components/TransactionFeeModal.js","Web3ConnectionButtons/Web3ConnectionButtons.js","utilities/components/ConnectionModal.js","utilities/components/ConnectionPendingModal.js","utilities/components/UserRejectedConnectionModal.js","utilities/components/LowFundsModal.js","utilities/ConnectionModalsUtil.js","utilities/components/ConnectionErrorModal.js","utilities/components/TransactionErrorModal.js","utilities/RimbleWeb3.js","utilities/components/Header.js","ScrollToTop/ScrollToTop.js","PageNotFound/PageNotFound.js","utilities/components/NetworkOverview.js","Web3Debugger/Web3Debugger.js","abis/compound/cDAI.js","abis/tokens/ERC20.js","configs/availableTokens.js","utilities/TransactionToastMessages.js","utilities/TransactionToastUtil.js","App/App.js","serviceWorker.js","index.js","TableRow/TableRow.js","TableHeader/TableHeader.js","Migrate/Migrate.js","AssetsList/AssetsList.js","Footer/Footer.module.scss","VariationNumber/VariationNumber.js","GenericSelector/GenericSelector.module.scss","LoadingSpinner/LoadingSpinner.module.scss","utilities/components/ModalCard.js","utilities/components/BuyModal.js","Footer/Footer.js","TableCellHeader/TableCellHeader.js","CardIconButton/CardIconButton.js","AssetField/AssetField.js"],"names":["FlexLoader","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","rimble_ui__WEBPACK_IMPORTED_MODULE_6__","Object","assign","width","alignItems","justifyContent","this","props","flexProps","loaderProps","text","textProps","Component","ChartCustomTooltipRow","prevProps","prevState","react__WEBPACK_IMPORTED_MODULE_7___default","rimble_ui__WEBPACK_IMPORTED_MODULE_8__","mb","flexDirection","pr","style","flexBasis","flex","color","mr","height","borderRadius","backgroundColor","fontSize","fontWeight","textAlign","textTransform","label","whiteSpace","dangerouslySetInnerHTML","__html","value","module","exports","headerContainer","headerBgFiller","bgContainer","list","textContainer","ShortHash","shortenHash","hash","shortHash","txStart","substr","txEnd","length","display","React","LoadingSpinner","react_default","index_es","className","styles","mx","ButtonLoader","onClick","handleClick","buttonProps","isLoading","src_LoadingSpinner_LoadingSpinner","buttonText","__webpack_require__","d","__webpack_exports__","blue","green","yellow","red","polished__WEBPACK_IMPORTED_MODULE_0__","baseColors","black","white","darkBlue","blurple","consensysblue","colors","base","readableColor","light","tint","dark","shade","IconBox","cardProps","p","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_7__","size","name","icon","iconProps","mt","children","TransactionListFilters","state","maxWidth","minWidth","maxHeight","isOpened","activeFilters","status","assets","actions","setFilter","filter","_this","setState","objectSpread","defineProperty","applyFilters","toggle","arguments","undefined","toggleOpened","resetFilter","resetFilters","_this2","top","zIndex","position","DashboardCard","py","px","transition","isInteractive","cursor","isMobile","overflow","borderTop","concat","theme","divider","keys","filters","map","filterCategory","filterValues","key","TableCellHeader","pb","toUpperCase","filterValue","filterLabel","isChecked","my","checked","radioBtn","onChange","e","Text","mainColor","ml","values","v","filterName","hoverColor","TransactionsList","page","prevTxs","txsPerPage","loading","totalTxs","totalPages","deposit","redeem","send","receive","migrate","swap","swapout","withdraw","completed","pending","failed","renderedTxs","processedTxs","lastBlockNumber","functionsUtil","processTxs","availableActions","action","toLowerCase","txsIndexes","tx","parseFloat","token","includes","sort","b","timeStamp","Math","ceil","forEach","i","selectedToken","tokenConfig","availableTokens","decimals","min","date","Date","getTxAction","parsedValue","tokenAmount","amount","toFixed","momentDate","strToMoment","push","setProps","FunctionsUtil","preventDefault","max","loadUtils","loadTxs","transactionsChanged","JSON","stringify","transactions","enabledTokens","count","account","firstBlockNumber","getGlobalConfig","enabledActions","getEtherscanTxs","etherscanTxs","hashKey","lastTx","pop","blockNumber","parseInt","_this3","_this4","hasActiveFilters","m","minHeight","id","pt","src_TransactionListFilters_TransactionListFilters","bind","TableHeader","cols","index","txHash","txHashKey","TableRow","rowProps","transaction","window","open","rowId","cardId","fieldComponent","TransactionField","prevPage","nextPage","h3","fontFamily","CustomTooltip","react__WEBPACK_IMPORTED_MODULE_6___default","point","left","data","itemPos","rimble_ui__WEBPACK_IMPORTED_MODULE_5__","xFormatted","AllocationChart","chartData","chartProps","selectedSlice","totalAllocation","protocolsAllocations","protocolsAllocationsPerc","componentUnmounted","loadData","setStateSafe","newState","callback","getTokenAllocation","padAngle","animate","borderWidth","cornerRadius","motionDamping","innerRadius","motionStiffness","onMouseEnter","onMouseLeave","tooltipFormat","sliceLabel","radialLabel","tooltip","container","inline","background","cardBg","labels","fonts","sansSerif","legends","slicesLabelsSkipAngle","radialLabelsSkipAngle","enableRadialLabels","radialLabelsTextXOffset","slicesLabelsTextColor","radialLabelsTextColor","radialLabelsLinkStrokeWidth","radialLabelsLinkDiagonalLength","radialLabelsLinkHorizontalLength","enableSlicesLabels","radialLabelsLinkColor","from","borderColor","modifiers","margin","right","bottom","protocols","protocolInfo","protocolName","protocolAddr","address","protocolAllocationPercParsed","times","globalConfigs","stats","hsl","join","capitalize","protocolIcon","react__WEBPACK_IMPORTED_MODULE_8___default","rimble_ui__WEBPACK_IMPORTED_MODULE_9__","src","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_10__","maxPrecision","number","unitProps","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_13__","type","Pie","showLoader","SmartNumber","formattedNumber","isNaN","formatMoney","precision","abbreviateNumber","minPrecision","showUnit","unitPos","rimble_ui__WEBPACK_IMPORTED_MODULE_7__","unit","CustomTooltipRow","PortfolioEquity","startDate","chartwidth","chartHeight","loadChartData","quickDateSelectionChanged","quickDateSelection","componentDidMount","mobileChanged","themeModeChanged","themeMode","tokensBalance","firstTxTimestamp","asyncForEach","_ref","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee3","filteredTxs","amountLent","wrap","_context3","prev","next","BNify","plus","minus","lt","balance","tokenPrice","idleTokens","stop","_x3","apply","currentDate","clone","subtract","days","prevBalances","prevTimestamp","minChartValue","maxChartValue","aggregatedBalance","aggregatedBalancesKeys","tokensBalancesPerDate","currTimestamp","getTime","tokensData","isRisk","selectedStrategy","_ref2","_callee4","_context4","getTokenApiData","sent","_x4","idleTokenBalance","foundBalances","tokensBalances","lastTokenData","lastTokenDataUnfiltered","filteredTokenData","timestamp","tokenDecimals","filteredBalances","lastFilteredTx","idlePrice","fixTokenDecimals","newBalance","lastTxBalance","gt","tokenUsdConversionRate","conversionRateField","chartToken","conversionRate","isSameOrAfter","isSameOrBefore","formattedDate","format","frequencySeconds","_loop","aggregatedBalances","x","y","balances","itemIndex","item","floor","yFormatDecimals","gridYStep","gridYValues","gridYValue","daysCount","daysFrequency","xScale","yScale","stacked","xFormat","yFormat","axisBottom","legend","tickSize","tickPadding","orient","legendOffset","legendPosition","tickValues","pointSize","useMesh","axisLeft","tickRotation","pointLabel","enableArea","enableSlices","enableGridY","curve","enableGridX","pointBorderWidth","pointLabelYOffset","areaBaselineValue","pointColor","areaOpacity","axis","ticks","fill","grid","line","stroke","lineChartStroke","strokeDasharray","sliceTooltip","slideData","slice","points","_ChartCustomTooltip_ChartCustomTooltip__WEBPACK_IMPORTED_MODULE_11__","_ChartCustomTooltipRow_ChartCustomTooltipRow__WEBPACK_IMPORTED_MODULE_12__","serieId","yFormatted","formattedBalance","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_10__","Line","parentId","parentIdHeight","ChartCustomTooltip","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_9__","ImageButton","image","imageSrc","imageProps","iconName","caption","isActive","contrastColor","buttonStyle","Fragment","badge","bgColor","captionPos","subcaption","split","lineHeight","RoundButton","boxShadow","ExtLink","target","rel","_colors__WEBPACK_IMPORTED_MODULE_0__","polished__WEBPACK_IMPORTED_MODULE_1__","breakpoints","fontSizes","fontWeights","letterSpacings","lineHeights","solid","title","copy","serif","counter","space","radii","minWidths","maxWidths","heights","minHeights","maxHeights","borders","borderWidths","shadows","opacity","disabled","primary","gradient-bg","primary-light","primary-dark","bgBlue","dark-blue","skyBlue","lightBlue","copyColor","subColor","near-black","dark-gray","mid-gray","gray","grey","silver","light-silver","moon-gray","light-gray","near-white","transparent","arrowActive","arrowInactive","selectBgFocused","selectBg","backButtonBg","wrongNetworkBannerBg","dashboardBg","statValue","boxBorder","cellTitle","cellText","menuBg","menuHover","flashColor","menuRightBorder","cardHoverShadow","cardBgHover","cardBorder","boost","curvein","default","curveout","curvedepositin","curvedepositout","actionBg","blacks","whites","zIndices","messageStyle","success","warning","danger","info","buttons","--main-color","--contrast-color","normal","buttonSizes","small","padding","medium","large","bg","button","gradientButton","empty","select","selectDark","input","TxProgressBar","error","ended","percentage","processing","txTimestamp","initialized","estimatedTime","remainingTime","_callee","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default","_context","initProgressBar","getTransaction","Promise","_ref3","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__","_callee2","resolve","reject","_context2","customLog","web3","eth","err","_x","_x2","abrupt","getBlockTime","blockTime","axios","get","getPredictionTable","_callee5","predictTable","_context5","getTxEstimatedTime","gasPrice","prediction","gasprice","pdValues","_estimateWait","gas","txMeanSecs","block_time","calculateRemainingTime","_callee6","secondsPassed","timePassed","_context6","div","toString","setTimeout","updateProgressBar","getTxInfo","_callee7","txProgressBarKey","txProgressBarData","_ref8","_ref9","_context7","localStorage","getItem","parse","all","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","setLocalStorage","_callee8","_context8","clearTimeout","gasoffered","minedProb","expectedWait","sum1","sum2","prob","exp","minutes","seconds","react__WEBPACK_IMPORTED_MODULE_10___default","rimble_ui__WEBPACK_IMPORTED_MODULE_13__","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_11__","textColor","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","endMessage","waitText","span","renderRemainingTime","loadingMessage","sendingMessage","href","cancelTransaction","cancelTextColor","cancelTextHoverColor","AssetSelector","options","defaultValue","CustomOptionValue","CustomValueContainer","find","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_9__","fieldInfo","showCustomField","cachedData","setCachedData","showBalance","selectProps","indexOf","innerProps","loadComponents","selectedTokenChanged","_GenericSelector_GenericSelector__WEBPACK_IMPORTED_MODULE_11__","isSearchable","changeToken","loadField","hashChanged","accountChanged","output","fieldProps","textOverflow","rimble_ui__WEBPACK_IMPORTED_MODULE_11__","align","_utilities_components_ShortHash__WEBPACK_IMPORTED_MODULE_12__","border","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_9__","tokenSymbol","GenericSelector","optionsChanged","defaultValueChanged","componentsChanged","ControlComponent","menuIsOpen","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_12__","CustomIndicatorSeparator","CustomMenu","CustomInputContainer","searchInput","searchInputHidden","CustomOption","selectedValue","o","genericSelector","isFocused","react_select__WEBPACK_IMPORTED_MODULE_7__","components","Menu","Option","Control","Input","SingleValue","IndicatorSeparator","Title","HeadingComponent","component","Heading","h1","GenericChart","addEventListener","handleWindowSizeChange","removeEventListener","chartContainer","document","getElementById","chartWidth","offsetWidth","chartContainerH","ChartType","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_7__","loaderText","defaultOpacity","hidden","interactive","rainbow","FastBalanceSelector","onMouseDown","replaceArrayProps","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_10__","TokenSwap","selectedFromToken","selectedDestToken","availableDestinationTokens","selectFromToken","baseToken","regenerator_default","selectDestToken","getGlobalConfigs","paymentProvider","providerInfo","initProps","buttonId","initParams","getInitParams","render","sendGoogleAnalyticsEvent","eventCategory","eventAction","eventLabel","enabled","remoteResources","url","j","scriptID","script","remoteResourceParams","precall","readyState","onreadystatechange","onload","async","parentElement","appendChild","head","stylesheetId","loadTokens","toolProps","asyncToGenerator","getContractByName","abi","initContract","fromTokenChanged","destTokenChanged","loadKyberWidget","SendTxWithBalance","inputValue","txSucceeded","buttonDisabled","contractApproved","fastBalanceSelector","changeInputValue","setInputValue","selectedPercentage","tokenBalance","getFastBalanceSelector","setFastBalanceSelector","checkButtonDisabled","lte","approve","callbackApprove","callbackReceiptApprove","checkContractApproved","eventData","getTransactionError","transactionHash","enableERC20","contractInfo","executeTx","_amount","params","callbackReceipt","methodName","methodParams","contractName","normalizeTokenAmount","getTransactionParams","eventValue","contractMethodSendWrapper","approveCallback","actionChanged","tokenBalanceChanged","contractChanged","tokenConfigChanged","changeInputCallback","approveEnabled","checkTokenApproved","infoBox","steps","step","stepIndex","link","description","balanceSelectorInfo","required","placeholder","approveDescription","ETHWrapper","balanceETH","balanceWETH","loadBalance","updateActionData","contract","getETHBalance","getTokenBalance","mintLog","txReceipt","logs","log","mintedAmount","withdrawLog","withdrawnAmount","fullWidth","depositOnly","CardIconButton","iconColor","iconBgColor","setAction","src_SendTxWithBalance_SendTxWithBalance","transactionSucceeded","connectAndValidateAccount","NexusMutual","1","2","3","amountValue","periodValue","quoteResponse","changeAmount","changePeriod","makeRequest","textDecoration","activeColor","changeSelectedToken","getQuote","CustomField","funcProps","CustomComponent","componentHasChildren","fieldType","fieldPath","path","customValue","getArrayPath","row","Image","Icon","Button","customFieldName","customFieldProps","CustomList","rows","rowIndex","PortfolioDonut","totalFunds","parentWidth","selectedTokenConfig","loadPortfolio","portfolio","idle","getIdleTokenPrice","convertTokenBalance","getGovTokensUserBalances","govTokensUserBalances","govToken","govTokenBalance","tokenPercentage","tokenColorHsl","round","radialLabelsLinkOffset","itemWidth","itemHeight","translateY","symbolSize","anchor","direction","itemTextColor","symbolShape","effects","on","strategyIcon","convertToken","AssetField","TotalEarningsCounter","earningsEnd","earningsStart","loadTotalEarnings","contractsInitialized","availableStrategies","counterStyle","oldState","getAccountPortfolio","totalEarnings","totalAmountLent","avgAPY","build_default","delay","decimal","separator","useEasing","duration","end","start","formattingFn","n","countUpRef","ref","EarningsEstimation","tokensEarnings","estimationStepsPerc","estimationStepsOptions","estimationStepsDefaultOption","estimationSteps","0","Month","perc","2 months","3 months","optionName","25","8 months","Year","90","2 Years","5 Years","loadEarnings","aggregatedEarnings","earnings","earningsYear","amountDeposited","avgBuyPrice","idleTokenPrice","earningsPerc","tokenAPY","tokenAprs","earningsPercStep","possibleSteps","maxPossibleStep","getAmountDeposited","getAvgBuyPrice","slicedToArray","getTokenAprs","avgApr","avgApy","orderedTokensEarnings","estimationStep","option","setEstimationStepsPerc","tokenIndex","tokenEarnings","estimationStepPerc","finalEarnings","cursorPerc","tokenRGBColor","estimateIndex","estimationStepEarnings","estimationStepEarningsFormatted","borderRight","wordBreak","gte","pl","src_TotalEarningsCounter_TotalEarningsCounter","estimationLabel","DashboardIconButton","TotalBalanceCounter","counterEnd","counterStart","StrategyPage","tokensToMigrate","aggregatedValues","activeCoverages","depositedTokens","remainingTokens","batchedDeposits","portfolioLoaded","availableGovTokens","portfolioEquityStartDate","batchedDepositsAvailableTokens","portfolioEquityQuickSelection","getActiveCoverages","getBatchedDeposits","getTokensToMigrate","c","statusColors","statusIcon","statusColor","portfolioCoverage","totalBalance","statusIconProps","reduce","batchInfo","strategy","deposited","batchDeposits","redeemable","batchRedeems","avgScore","_ref4","_ref5","tokenScore","amountLentToken","tokenWeight","getTokenScore","getGovTokensUserTotalBalance","govTokensTotalBalance","govTokensUserBalance","govTokensTotalBalanceTooltip","viewOnly","connectorName","govTokens","apyLong","riskScore","yieldFarming","batchDepositConfig","coverProtocolConfig","placement","message","src_TotalBalanceCounter_TotalBalanceCounter","totalEarningsPerc","titleProps","src_PortfolioDonut_PortfolioDonut","aligItems","setPortfolioEquityQuickSelection","getFrequencySeconds","AssetsList","fields","mobile","parentProps","goToSection","route","borderBottom","h4","desc","showTooltip","showDirection","toolName","toolIndex","toolConfig","src_DashboardIconButton_DashboardIconButton","src_CustomList_CustomList","fileClaimUrl","openWindow","src_EarningsEstimation_EarningsEstimation","textSize","BatchDeposit","canClaim","batchTotals","canDeposit","execute","claim","usePermit","lastExecution","permitEnabled","hasDeposited","permitSigned","showPermitBox","currBatchIndex","batchCompleted","claimSucceeded","componentLoaded","executeSucceeded","migrationEnabled","migrationSucceeded","batchDepositEnabled","migrationContractApproved","migrationEnabledCallback","migrationCallback","checkBatchs","loadStrategies","urlParams","param2","selectToken","executeSucceededChanged","contractApprovedChanged","callbackExecute","callbackReceiptExecute","migrationContract","migrationContractInfo","getBatchedDepositExecutions","genericContractCall","batchExecutions","functions","functionInfo","nonceMethod","permitContract","methods","batchIndex","batchTotal","batchRedeem","batchDeposit","batchDepositInfo","depositEnabled","availableStrategiesKeys","_ref6","strategyConfig","selectStrategy","_this5","obj","baseTokenConfig","strategyAvailableTokens","oldContract","migrateFunction","migration","setStrategyToken","_this6","batchId","callbackClaim","_this7","callbackReceiptClaim","_this8","canExecuteBatch","strategyDefaultValue","s","openTooltipModal","isDisabled","togglePermitEnabled","Migrate","showActions","getTokenPrice","isMigrationTool","showBalanceSelector","migrationIcon","migrationParams","toMigrate","callbackPermit","migrationText","minPoolSize","utc","CoverProtocol","swapInfo","selectedAction","successMessage","defaultCoverage","selectedCoverage","collateral","selectedActionChanged","inputValueChanged","swapInfoChanged","updateData","swapFee","covTokens","tokenAmountOut","getSwapInfo","MAX_UINT256","pow","expirationTimestamp","integerValue","balancerTokenConfig","tokens","dashboardUrl","fixedAmount","mintedClaimLog","mintedNoClaimLog","mintedClaimAmount","mintedNoClaimAmount","claimTokenConfig","claimTokensLog","receivedClaimAmount","balancerPool","noClaimTokenConfig","noClaimTokensLog","receivedNoClaimAmount","apy","collateralAmount","balancerClaimConfig","balancerNoClaimConfig","claimTokenBalance","noClaimTokenBalance","balancerPoolClaimBalance","balancerPoolNoClaimBalance","hasMintedTokens","isClaim","now","apyPrice","currTime","coverages","expirationDate","selectCoverage","coverage","isMint","isBuyClaim","isBuyNoClaim","txAction","BuyModal","showInline","availableMethods","buyToken","TokenMigration","changeFromToken","convertTool","tokenInfo","destTokenConfig","BatchMigration","batchMigrationInfo","batchMigrationDepositEnabled","_ref7","env","process","appName","version","baseURL","forumURL","darkModeEnabled","betaURL","countries","USA","GBR","AUS","BRA","CHN","CAN","EUR","HKG","IND","MEX","RUS","ZAF","KOR","errorsEnabled","messagesEnabled","connectors","metamask","opera","dapper","coinbase","trustwallet","walletconnect","iconModal","walletlink","fortmatic","portis","authereum","torus","trezor","ledger","custom","newsletterSubscription","endpoint","messages","scoreShort","apyShort","cheapRedeem","curveBonusSlippage","distributionSpeed","directMint","performanceFee","govTokenApr","userDistributionSpeed","govTokenRedeemableBalance","riskScoreShort","batchDepositExecutionSchedule","curveInstructions","analytics","google","events","debugEnabled","addPostfixForTestnet","modals","first_deposit_referral","first_deposit_share","welcome","frequency","dashboard","baseRoute","mode","governance","test","startBlock","tokenName","availableContracts","IDLE","PriceOracle","GovernorAlpha","EcosystemFund","IdleController","contracts","delegates","n_coins","imageInactive","rates","poolContract","CurvePool","depositContract","CurveDeposit","gaugeContract","LiquidityGaugeV2","zapContract","CurveZap","idleDAIYield","coinIndex","idleUSDCYield","idleUSDTYield","permit","DAI","EIPVersion","USDC","showAUM","showAPR","protocol","showPrice","disabledTokens","aprTooltipMode","distributionFrequency","COMP","LockedIDLE","Timelock","VesterFactory","EarlyRewards","Comptroller","UniswapRouter","UniswapV2Router02","BalancerExchangeProxy","zeroExInstant","orderSource","assetData","affiliateInfo","feeRecipient","feePercentage","strategies","best","comingSoon","addGovTokens","titlePostfix","govTokensEnabled","chartColor","iconInactive","iconInactiveDark","descLong","descShort","risk","new","TTL","tvls","substack","scores","config","headers","REACT_APP_IDLE_KEY","Authorization","versions","v3","additionalProtocols","endTimestamp","startTimestamp","showPerformanceTooltip","strategiesParams","enabledStrategies","v4","rgb","hex","chart","labelTextColorModifiers","performanceTooltip","USD","USDT","TUSD","SUSD","WBTC","WETH","idleDAI+idleUSDC+idleUSDT","compound","compoundWithCOMP","rateField","fulcrum","dsr","dydx","iearn","aave","aavev2","skipRebalance","metaTransactionsEnabled","skipMint","minAmountForMint","skipMintCheckboxEnabled","proxyContract","IdleProxyMinter","function","minAmountForRebalance","minAmountForRebalanceMetaTx","redeemGovTokens","rebalance","IdleRebalancerV3","network","availableNetworks","4","42","1337","isForked","requiredNetwork","blocksPerYear","requiredConfirmations","accountBalanceMinimum","providers","infura","etherscan","endpoints","snapshot","whitelist","proposals","urls","biconomy","enableLogin","supportedNetworks","disabledWallets","limits","debug","apiKey","REACT_APP_BICONOMY_KEY","dappId","REACT_APP_BICONOMY_APPID","apiId","terminal","REACT_APP_TERMINAL_KEY","projectId","REACT_APP_TERMINAL_PROJECT_ID","source","web3Version","Web3Versions","one","simpleID","getNetwork","networkId","networkName","appOrigin","location","origin","appId","renderNotifications","notifications","tools","ethWrapper","subComponent","coverProtocol","CoverMint","Claim","CovToken","BalancerPool","NoClaim","claimEnabled","IdleBatchedMint","permitName","batchMigration","IdleTokenV3","IdleBatchConverter","idleSUSDYield","idleTUSDYield","idleWBTCYield","idleDAISafe","idleUSDCSafe","idleUSDTSafe","tokenMigration","IdleConverterPersonalSignV4","oldAddresses","idleDAIv2","IdleTokenV2","cDAI","iDAI","aDAI","yDAIv3","yDAIv2","idleUSDCv2","cUSDC","iUSDC","aUSDC","yUSDCv3","yUSDCv2","cUSDT","iUSDT","aUSDT","yUSDTv3","yUSDTv2","idleSUSDv2","aSUSD","ySUSDv3","idleTUSDv2","aTUSD","yTUSDv3","cWBTC","iWBTC","aWBTC","addFunds","directProps","showAllTokens","insurance","ETH","ens","tokenSwap","USDS","BUSD","EURS","2KEY","ABT","ABYSS","AMPL","ANT","BAM","BAND","BAT","BLZ","BNT","BQX","BTU","CDT","CVC","DAT","DGX","EKG","ELF","ENJ","EQUAD","FXC","GDC","GEN","GHT","GNO","IOST","KEY","KNC","LEND","LINK","LOOM","LRC","MANA","MCO","MET","MFG","MKR","MLN","MTL","MYB","NEXXO","NPXS","OGN","OMG","OST","PAX","PBTC","PLR","PNK","POLY","POWR","PT","QKC","QNT","RAE","REN","REP","REQ","RLC","RSR","RSV","SAN","SNT","SNX","SPIKE","SPN","TKN","TKX","TRYB","UBT","UPP","ZRX","payments","bank","defaultProvider","showDefaultOnly","card","wallet","wyre","supportedMethods","supportedCountries","supportedTokens","envParams","accountId","prod","getInfo","selectedMethod","buyParams","referrerAccountId","dest","destCurrency","redirectUrl","k","encodeURIComponent","iframeBox","innerHTML","body","wyreStyle","ramp","hostAppName","userAddress","hostApiKey","REACT_APP_RAMP_KEY","variant","hostLogoUrl","swapAsset","RampInstantSDK","event","t0","getAccountBalance","getTokenDecimals","payload","purchase","toastProvider","addMessage","secondaryMessage","colorTheme","actionHref","actionText","show","transak","https://global.transak.com/v1/widget.js","REACT_APP_TRANSAK_KEY_TEST","REACT_APP_TRANSAK_KEY_PROD","fee","selectedCountry","fiatCurrency","cryptoCurrencyCode","currencyCode","walletAddress","partnerCustomerId","disableWalletAddressForm","transakGlobal","transakStyle","moonpay","REACT_APP_MOONPAY_KEY_TEST","REACT_APP_MOONPAY_KEY_PROD","baseCurrencyCode","showWalletAddressForm","enabledPaymentMethods","navigator","userAgent","cookie","match","moonpayStyle","https://instant.0x.org/v3/instant.js","onSuccess","onClose","tokenParams","RimbleWeb3_context","chainId","provider","connector","ethereum","defaultSelectedAssetData","availableAssetDatas","shouldDisableAnalyticsTracking","defaultAssetBuyAmount","kyberSwap","web3Subscription","contractAddress","decodeLogsData","internalType","https://widget.kyber.network/v0.7.5/widget.css","https://widget.kyber.network/v0.7.5/widget.js","querySelectorAll","remove","scripts","lang","paramForwarding","pinnedTokens","defaultPair","commissionId","click","airSwap","https://cdn.airswap.io/airswap-instant-widget.js","onComplete","AirSwapInstant","totle","https://widget.totle.com/latest/dist.js","sourceAssetAddress","sourceAmountDecimal","destinationAssetAddress","destinationAmountDecimal","partnerContractAddress","TotleWidget","nodeId","totleWidgetContainer","run","IdleGovToken","classCallCheck","getBalance","claimRewards","getPriorVotes","priorVotes","_args3","refreshIdleSpeed","getUnclaimedTokens","getAPR","IDLETokenConfig","cachedDataKey","APR","idleDistribution","tokenAllocation","DAITokenConfig","tokenPool","idleDistributedPerYearUSD","_args6","getDistribution","getUniswapConversionRate","totalAllocationWithUnlent","getSpeed","idleTokenAddress","idleSpeeds","getCachedDataWithLocalStorage","setCachedDataWithLocalStorage","_x5","_ref10","distribution","_x6","getUserDistribution","_callee10","fixByFrequency","totalSpeed","_args10","_context10","_ref12","_callee9","_ref13","_ref14","idleSpeed","userPoolShare","tokenSpeed","_context9","getUserPoolShare","_x7","fixDistributionSpeed","getAvgApr","_callee12","_args12","_context12","_ref16","_callee11","_ref17","_ref18","idleApr","_context11","_x8","ethereumjsABI","require","idleGovToken","trimEth","toBN","utils","BN","toEth","wei","fromWei","toWei","htmlDecode","childNodes","nodeValue","BNify_obj","BigNumber","String","_len","Array","_key","moment","customLogError","_console","_len2","_key2","console","normalizeSimpleIDNotification","replace","str","arr1","arr2","stripHtml","html","tmp","textContent","innerText","scrollTo","to","scrollY","change","currentTime","easeInOutQuad","t","animateScroll","val","depositProxyContractInfo","migrationContractAddr","migrationContractOldAddrs","batchMigrationContractAddr","isMigrationTx","isSendTransferTx","isReceiveTransferTx","isDepositTx","isRedeemTx","isSwapTx","orderedTokensBalance","totalBalanceConverted","tokenBalanceConverted","getCurveAvgSlippage","processedHashes","curveTokensBalance","curveTxs","avgSlippage","totalDeposited","_args4","getCurveAvailableTokens","getCurveTxs","curveTokens","curveTokenPrice","price","received","slippage","getCurveAvgBuyPrice","_args5","prevAvgBuyPrice","idleTokensBalance","getFirstDepositTx","deposits","_args7","firstDepositTx","asyncTimeout","ms","getDepositTimestamp","firstDepositTxs","_args8","acc","_ref11","userAvgPrice","getAmountLent","amountLents","getEtherscanBaseTxs","endBlockNumber","firstIdleBlockNumber","etherscanInfo","results","etherscanBaseTxs","etherscanBaseEndpoint","etherscanApiUrl","lastCachedTx","lastCachedBlockNumber","etherscanEndpointLastBlock","latestTxs","latestBlockNumbers","txs","requestCount","requestStatus","cachedRequests","_args11","REACT_APP_ETHERSCAN_KEY","getCachedRequest","result","makeCachedRequest","filterEtherscanTxs","toConsumableArray","saveEtherscanTxs","filterCurveTxs","txsToStore","cachedRequest","saveCachedRequest","_callee13","allAvailableTokens","_args13","_context13","processStoredTxs","_ref19","_callee14","_args14","_context14","_ref20","_callee15","curveTransfersTxs","curveTransfersTxsToDelete","curveZapContract","curvePoolContract","curveSwapContract","curveDepositContract","_args15","_context15","tokenMigrationToolParams","curveTokenConfig","idleToken","internalTxs","r","isRightToken","iTx","isBatchMigrationTx","isDepositInternalTx","iTx2","isRedeemInternalTx","isConversionTx","isWithdrawTx","curveTx","isCurveTx","isCurveDepositTx","isCurveRedeemTx","isCurveDepositIn","isCurveDepositOut","isCurveZapIn","isCurveZapOut","isCurveTransferOut","isCurveTransferIn","isSwapOutTx","tokenDecimal","tokenValue","newValue","iTxs","withdrawnValue","processEtherscanTransactions","addStoredTransaction","txKey","tokenKey","storedTxs","getStoredTransactions","updateStoredTransactions","getStoredItem","_ref21","_callee20","txReceipts","baseTokensConfigs","baseTokensAddresses","curveAvailableTokens","_args20","_context20","baseTokenAddress","_ref22","_callee19","minedTxs","_context19","_ref23","_callee18","storedTx","tokensTransfered","_curveTokenPrice","_curveTokenPrice2","curveTxReceipt","filteredLogs","_curveTokenPrice3","_curveTxReceipt","idleTokenDecimals","_filteredLogs","_context18","getCurveTokenPrice","t1","_ref24","_callee16","_context16","getTransactionReceipt","_x11","_x12","topics","baseTokensConfig","t2","_ref25","_callee17","_context17","_x13","_x14","_x9","_x10","_ref26","_callee26","txsToProcess","_args26","_context26","_ref27","_callee25","_context25","_ref28","_callee24","isStoredTx","allowedMethods","pendingStatus","txPending","isMetaTx","methodIsAllowed","realTx","txValue","redeemedValueFixed","executeMetaTransactionReceipt","executeMetaTransactionContractAddr","executeMetaTransactionInternalTransfers","IdleProxyMinterInfo","internalTransfer","metaTxValue","metaTxValueFixed","migrationTxReceipt","migrationTxInternalTransfers","migrationInternalTransfer","decodedLogs","migrationValue","migrationValueFixed","_context24","mintIdleToken","redeemIdleToken","migrateFromToIdle","mintIdleTokensProxy","migrateFromAaveToIdle","migrateFromIearnToIdle","executeMetaTransaction","migrateFromFulcrumToIdle","migrateFromCompoundToIdle","method","created","_ref29","_callee21","_context21","_x19","_x20","_ref30","_callee22","_context22","_x21","_x22","raw","_ref31","_callee23","_context23","_x23","_x24","decodeLog","_token","_x17","_x18","_x16","_x15","alias","getCustomAddress","setCustomAddress","customAddress","_ref32","_callee27","error_callback","_args27","_context27","catch","_x25","_ref33","_callee28","return_data","_args28","_context28","_x26","code","errorCode","array","prop","shift","configs","checkUrlOrigin","checkUrlBeta","_ref34","_callee30","googleEventsInfo","originOk","currentNetwork","_args30","_context30","ga","_ref35","_callee29","_context29","hitCallback","hitCallbackFail","_x28","_x29","_x27","createContract","_ref36","_callee31","_context31","Contract","_x30","_x31","_x32","getWalletProvider","simpleIDPassUserInfo","userInfo","email","initSimpleID","passUserInfo","getEtherscanTransactionUrl","tx_address","getEtherscanAddressUrl","decimalCount","thousands","abs","negativeSign","Number","getSnapshotProposals","_callee34","activeOnly","validProposals","_args34","_context34","getCachedData","addr","msg","_ref38","_callee33","checkedStrategies","_context33","metadata","_ref39","_callee32","_context32","symbol","_x34","_x33","_ref40","_callee35","forceStartTimestamp","order","limit","filteredCachedData","_filteredData","apiInfo","filteredData","_args35","_context35","_x35","_ref41","_callee36","_context36","_x36","aprs","allocations","aprWeighted","allocation","apr","quantity","hour","day","week","getProtocolInfoByAddress","ROUND_FLOOR","normalizeTokenDecimals","normalizedTokenDecimals","exchangeRate","checkContractPaused","_callee37","contractPaused","_args37","_context37","parse_json","return_default","clearStoredData","excludeKeys","clear","storedKeysToRemove","storedKey","removeStoredItem","removeItem","setItem","checkRebalance","_ref43","_callee39","lastAllocationsPromises","protocolIndex","newAllocations","diff","_context39","lastAllocationsPromise","_ref44","_callee38","lastAllocations","_context38","_x38","_x39","alloc","_x37","checkMigration","_ref45","_callee40","oldContractBalance","oldContractTokenDecimals","oldContractBalanceFormatted","oldContractName","_context40","getContractBalance","_x40","_x41","_ref46","_callee41","signedParameters","callback_receipt","_contract$methods","_context41","getGasPrice","once","confirmationNumber","receipt","_x42","_x43","_x44","_x45","_x46","getSignatureParameters_v4","signature","isHexStrict","Error","hexToNumber","constructMetaTransactionMessage","nonce","functionSignature","soliditySHA3","toBuffer","checkBiconomyLimits","_ref47","_callee42","biconomyInfo","res","_context42","x-api-key","_x47","sendTxWithPermit","_ref48","_callee43","_contract$methods2","messageToSign","_this$getSignaturePar","_context43","encodeABI","_address","personal","sign","_x48","_x49","_x50","_x51","_x52","_x53","sendBiconomyTxWithPersonalSign","_ref49","_callee44","_this$getSignaturePar2","_context44","getNonce","call","_x54","_x55","_x56","_x57","signPermitEIP2612","_ref50","_callee45","erc20Name","owner","spender","deadline","domain","domainData","_context45","getChainId","verifyingContract","types","EIP712Domain","Permit","primaryType","currentProvider","jsonrpc","substring","_x58","_x59","_x60","_x61","_x62","_x63","_x64","_x65","signPermit","_ref51","_callee46","baseContractName","holder","spenderContractName","expiry","callback_permit","baseContract","spenderContract","permitConfig","_args46","_context46","net","getId","allowed","response","permitParams","methodAbi","_jsonInterface","f","useNonce","inputs","unshift","_x66","_x67","_x68","_x69","_x70","_x71","_x72","_x73","_x74","sendSignedTx","_ref52","_callee47","MetaTransaction","dataToSign","_context47","_x75","_x76","_x77","_x78","_x79","_ref53","_callee48","contractAddr","walletAddr","_ref54","_ref55","allowance","_context48","getAllowance","_x80","_x81","_x82","_ref56","_callee49","_context49","_x83","_x84","_x85","txData","disableERC20","toTwosComplement","loadAssetField","_ref57","_callee50","field","addCurveApy","strategyInfo","govTokenAvailableTokens","newTokenConfig","_ref58","_ref59","curveAvgSlippage","curveAvgBuyPrice","curveTokenBalance","_ref60","_ref61","amountLentCurve1","redeemableBalanceCurve","_ref62","_ref63","curveApy","amountLentCurve","redeemableBalanceCurveStart","redeemableBalanceCurveEnd","earningPerYear","_ref64","_ref65","amountLent1","redeemableBalance1","depositTimestamp","_idleGovToken","govTokenConfig","blocksPerDay","blocksPerWeek","blocksPerMonth","_idleGovToken2","_idleGovToken3","tokenApys","curveAPY","_ref66","_ref67","tokenPriceFirstDeposit","_ref68","_ref69","daysFirstDeposit","depositTimestamps","_govTokenConfig","_ref70","_ref71","tokenAPY1","amountLent2","redeemableBalanceStart","redeemableBalanceEnd","_earningPerYear","_govTokenConfig2","_ref72","_ref73","idleTokenPrice1","idleTokenBalance2","govTokensBalance","_tokenBalance","redeemableBalance","_ref74","_ref75","amountLentCurve2","redeemableBalanceCurve1","_ref76","_ref77","redeemableBalance2","_args50","_context50","getCurveTokenBalance","getCurveAPY","getCurveRedeemableIdleTokens","getGovTokenPool","getTokenPool","getCompUserDistribution","getIdleGovToken","t3","getCompDistribution","t4","getCompAvgApr","t5","t6","t7","getUserTokenFees","t8","t9","getGovTokenUserBalance","_x86","_x87","_x88","_x89","getIdleTokenSupply","_ref78","_callee51","idleTokenSupply","_args51","_context51","_x90","getIdleTokenPriceWithFee","_ref79","_callee52","_ref80","_ref81","priceWFee","_args52","_context52","eq","_x91","_x92","_ref82","_callee53","tokenData","beforePrice","afterPrice","tokenPriceBefore","tokenPriceAfter","timeBefore","timeAfter","timeDiff","priceDiff","priceAcceleration","timeDiffFromBeforePrice","_args53","_context53","_x93","clearCachedData","useLocalStorage","_ref83","_callee54","_ref84","_ref85","idleTokensTotalSupply","userShare","_context54","_x94","_x95","_callee56","_args56","_context56","_ref87","_callee55","coverageTokens","protocolImage","_context55","_x96","_ref88","_callee57","etherscanEndpoint","_context57","_x97","_callee59","filter_by_status","_args59","_context59","_ref90","_callee58","_ref91","_ref92","_context58","_x98","_ref93","_callee60","fixDecimals","_args60","_context60","_x99","_ref94","_callee61","_ref95","_ref96","_args61","_context61","_x100","_x101","copyToClipboard","copyText","setSelectionRange","execCommand","loadScript","attr","isValidJSON","checkAddress","_ref97","_callee62","_args62","_context62","_x102","_x103","getProtocolBalance","_ref98","_callee63","_context63","_x104","_x105","getAprs","_ref99","_callee64","_context64","_x106","genericIdleCall","_ref100","_callee65","callParams","_args65","_context65","_x107","estimateGas","_ref101","_callee66","_contract$methods3","_args66","_context66","_x108","_x109","getTxDecodedLogs","_ref102","_callee68","logAddr","decodeLogs","internalTransfers","_context68","_ref103","_callee67","_context67","_x114","_x115","_x110","_x111","_x112","_x113","blocksToSeconds","blocks","blocksPerSeconds","getBlockNumber","_callee69","_context69","getContractPastEvents","_ref105","_callee70","_args70","_context70","getPastEvents","_x116","_x117","_ref106","_callee71","_contract$methods4","_args71","_context71","_x118","_x119","_ref107","_callee72","_args72","_context72","_x120","_x121","apr2apy","getUnlentBalance","_ref108","_callee73","unlentBalance","_context73","_x122","_ref109","_callee74","_args74","_context74","_x123","_ref110","_callee76","protocolsAprs","exchangeRates","protocolsBalances","govTokensBalances","_args76","_context76","totalAllocationConverted","totalAllocationWithUnlentConverted","_ref111","_callee75","_ref112","_ref113","protocolBalance","protocolAllocation","_context75","_x125","_x126","protocolAllocationPerc","getGovTokensBalances","total","getTokenConversionRate","_x124","getUniswapConversionRate_path","_ref114","_callee77","unires","_context77","_x127","_ref115","_callee78","tokenConfigFrom","tokenConfigDest","WETHAddr","_context78","_x128","_x129","getCurveDepositedTokens","_ref116","_callee79","idleTokensBalances","remainingCurveTokens","_args79","_context79","_x130","getCurveUnevenTokenAmounts","_ref117","_callee80","amounts","max_burn_amount","unevenAmounts","_context80","getCurveDepositContract","_x131","_x132","_callee81","curveRatesInfo","_context81","strategyTokens","getCurveAPYContract","_callee82","blocksForPrevTokenPrice","_ref120","_ref121","prevTokenPrice","blocksMultiplier","curveAPR","_context82","getCurveTokenSupply","_callee83","_context83","getCurvePoolContract","_callee84","_args84","_context84","_callee85","_args85","_context85","_ref125","_callee86","_ref126","_ref127","_context86","_x133","_callee87","depositContractInfo","_context87","getCurveZapContract","_callee88","zapContractInfo","_context88","_callee89","poolContractInfo","_context89","getCurveSwapContract","_callee90","_context90","getCurveIdleTokensAmounts","_callee92","max_slippage","curveTokenSupply","curveTokenShare","_args92","_context92","_ref133","_callee91","curveIdleTokens","_context91","_x134","getCurveTokensAmounts","_callee94","useCoinIndex","_args94","_context94","_ref135","_callee93","_ref136","_ref137","totalTokenSupply","_context93","_x135","getCurveAmounts","_ref138","_callee96","_args96","_context96","_ref139","_callee95","_context95","_x138","_x136","_x137","getCurveTokenAmount","_ref140","_callee97","_args97","_context97","_x139","getCurveSlippage","_ref141","_callee98","uneven_amounts","_ref142","_ref143","virtualPrice","Sv","_args98","_context98","_x140","_x141","getCompAPR","_ref144","_callee99","cTokenIdleSupply","compConversionRate","COMPTokenConfig","compAPR","compDistribution","compValue","_args99","_context99","_x142","_x143","getCompSpeed","_ref145","_callee100","cTokenAddress","compSpeed","_context100","_x144","_ref146","_callee101","annualize","cTokenInfo","compoundAllocationPerc","_ref147","_ref148","cTokenTotalSupply","compoundPoolShare","_args101","_context101","_x145","_callee103","_args103","_context103","_ref150","_callee102","_ref151","_ref152","_context102","_x146","_callee105","_args105","_context105","_ref154","_callee104","_ref155","_ref156","compApr","_context104","_x147","getTokensCsv","_callee108","csv","_context108","prototype","sum","pv","cv","avg","_ref158","_callee107","_context107","_ref159","_callee106","header","aprAvg","scoreAvg","lastRow","_context106","protocolsData","p1","foundProtocol","p2","rate","idleRate","score","idleScore","pInfo","pData","pRate","pScore","defiScore","additionalRate","avgRate","_x149","_x148","_callee110","_args110","_context110","_ref161","_callee109","compTokenBalance","_context109","_x150","getTokenGovTokens","speed","getGovTokensUserDistributionSpeed","_ref162","_callee112","govTokensUserDistribution","_args112","_context112","_ref163","_callee111","_context111","_x152","_x151","getGovTokensDistributionSpeed","_ref164","_callee114","govTokensDistribution","_args114","_context114","_ref165","_callee113","govSpeed","_context113","_x154","_x153","getGovTokensAprs","_ref166","_callee116","govTokensAprs","_args116","_context116","_ref167","_callee115","_ref168","_ref169","compoundInfo","_context115","_x157","_x155","_x156","_callee118","_args118","_context118","_ref171","_callee117","tokenConversionRate","fromTokenConfig","_context117","_x158","getGovTokenConfigByAddress","_callee119","checkShowBalance","govTokensEarnings","_args119","_context119","govTokenAmount","_callee122","govTokenConfigForced","_args122","_context122","_ref174","_callee121","idleTokenConfig","govTokensAmounts","_context121","_ref175","_callee120","govTokenIndex","govTokenAddress","_context120","_x160","_x161","_x159","getTokenFees","_callee123","_args123","_context123","_callee124","_ref178","_ref179","gain","fees","_args124","_context124","_ref180","_callee125","_args125","_context125","_x162","getTotalTVL","_callee126","tokensTVL","_context126","getTokensTVL","totalTVL","tokenTVL","_callee130","_context130","_ref183","_callee129","_context129","_ref184","_callee128","oldTokenTVL","idleTokenName","_ref185","_ref186","totalSupply","oldTokenConfig","_ref190","_ref191","oldTokenPrice","oldTotalSupply","_context128","_ref187","_callee127","_ref188","_ref189","govTokenConversionRate","govTokenBalanceConverted","_context127","_x165","oldProtocols","oldProtocol","protocolPos","_x164","_x163","getSubstackLatestFeed","_callee131","endpointInfo","idleSubstackFeed","latestFeed","_context131","items","getAggregatedStats","_callee132","totalAUM","_args132","_context132","getAggregatedStats_chain","_callee136","avgAPR","_args136","_context136","_ref195","_callee135","_context135","_ref196","_callee134","tokenAUM","oldTokenAllocation","oldTokenTotalAllocation","_context134","_ref197","_callee133","_ref198","_ref199","_context133","_x168","_x167","_x166","getTokenApy","_ref200","_callee137","_context137","_x169","_callee140","_args140","_context140","_ref202","_callee139","_context139","_ref203","_callee138","_ref204","_context138","_x171","_x170","getProtocolsTokensBalances","_callee142","tokenBalances","minTokenBalance","protocolsTokens","_args142","_context142","_ref206","_callee141","tokenContract","_context141","_x172","_ref207","_callee143","_args143","_context143","_x173","_x174","_x175","getAvgAPYStats","_ref208","_callee144","apiResults","_args144","_context144","_x176","_x177","_ref209","_callee145","_conversionRate","_args145","_context145","_x178","_x179","_ref210","_callee146","_ref211","_ref212","_context146","protocolScore","getTokenScoreApi","_x180","_x181","_ref213","_callee147","_context147","_x182","_x183","_ref214","_callee149","Aprs","addresses","protocolsApys","idleGovTokenShowAPR","idleAPR","_args149","_context149","_ref215","_callee148","addrIndex","protocolApr","protocolApy","_context148","_x185","_x186","_x184","isNegative","suffixNum","decimalPart","mod","toPrecision","difference","maxLen","highlightedDecimals","numLen","intPart","decPart","repeat","highlightedDec","highlightedIntPart","mouseOver","isVisible","isRainbow","active","onMouseOut","setMouseOver","onMouseOver","titleParentProps","Tos","h2","listStyle","Footer","theme_dark","TorusConnector","kwargs","Torus","api","rest","objectWithoutProperties","possibleConstructorReturn","getPrototypeOf","buttonPosition","init","login","getUserInfo","getPublicAddress","verifier","verifierId","logout","updateNetworkId","Connector","AuthereumConnector","Authereum","getProvider","enable","getAccounts","accounts","disable","constructor","WalletLinkConnector","WalletLink","infuraUrl","appLogoUrl","walletLink","darkMode","makeWeb3Provider","close","WalletConnectConnector","WalletConnectProvider","infuraId","defaultNetwork","InjectedConnector","Connectors","NetworkOnlyConnector","TrezorConnector","LedgerConnector","FortmaticConnector","PortisConnector","manifestEmail","REACT_APP_TREZOR_MANIFEST_EMAIL","manifestAppUrl","REACT_APP_TREZOR_MANIFEST_URL","fortmaticApiKey","REACT_APP_FORTMATIC_KEY_MAINNET","portisDAppId","REACT_APP_PORTIS_DAPP_ID","portisNetwork","REACT_APP_PORTIS_NETWORK","supportedNetworkURLs","REACT_APP_INFURA_KEY","Injected","Infura","providerURL","Trezor","TrezorApi","Ledger","WalletConnect","bridge","Fortmatic","FortmaticApi","logoutOnDeactivation","Portis","PortisApi","dAppId","AuthereumApi","TorusApi","buildEnv","enableLogging","host","showTorusButton","WrongNetworkBanner","current","NetworkUtil","isCorrectNetwork","components_WrongNetworkBanner","NoWeb3BrowserModal","renderContent","RimbleUtil","isMobileDevice","bold","isOpen","ModalCard","closeFunc","closeModal","Body","NoWalletModal","icononly","Outline","GeneralUtil","hasMetaMask","isMetaMask","isTrustWallet","isTrust","isCoinbaseWallet","hasDapper","DapperEthereum","isDapper","isOpera","isAndroid","isIos","MSStream","WrongNetworkModal","RimbleUtils","TransactionFeeModal","Header","subtitle","subtitle2","Web3ConnectionButtons","context","useWeb3Context","setConnector","walletProvider","connectionCallback","unsetConnector","isMetamask","browserWalletDetected","allowedConnectors","registerPage","registerPageByDefault","basicConnectorsName","connectorInfo","walletIcon","flexWrap","ConnectionModal","validated","showTxFees","currentSection","showInstructions","askCustomAddress","closeRemainingTime","customAddressError","newToEthereumChoice","toggleShowTxFees","setStoredSection","componentDidUpdate","resetModal","closeCountdown","setWalletChoice","choice","setCurrentSection","connectCustomAddress","updateCustomAddress","renderModalContent","TOSacceptance","react_router_dom","newToEthereum","showConnectionButtons","pattern","assertThisInitialized","marginBottom","renderFooter","components_TransactionFeeModal","ConnectionPendingModal","UserRejectedConnectionModal","sendMessageAgain","initAccount","LowFundsModal","showSecondary","toggleQRVisible","alignContent","as","h5","ConnectionModalUtil","components_NoWeb3BrowserModal","closeNoWeb3BrowserModal","noWeb3BrowserModalIsOpen","components_NoWalletModal","closeNoWalletModal","noWalletModalIsOpen","components_WrongNetworkModal","closeWrongNetworkModal","wrongNetworkModalIsOpen","components_ConnectionModal","validateAccount","closeConnectionModal","connectionModalIsOpen","accountValidated","components_ConnectionPendingModal","closeConnectionPendingModal","accountConnectionPending","components_UserRejectedConnectionModal","closeUserRejectedConnectionModal","userRejectedConnect","components_LowFundsModal","closeLowFundsModal","lowFundsModalIsOpen","ConnectionErrorModal","setFirstValidConnector","closeConnectionErrorModal","isLedger","connectionError","TransactionErrorModal","closeTransactionErrorModal","isLedgerError","transactionError","isSlowTxError","INFURA_KEY","RimbleTransactionContext","createContext","web3Infura","accountBalance","initWeb3","accountBalanceLow","accountBalanceToken","checkPreflight","checkNetwork","accountInizialized","rejectValidation","accountValidationPending","initializeContracts","rejectAccountConnect","enableUnderlyingWithdraw","userRejectedValidation","transactionConnectionModalIsOpen","openLowFundsModal","openWrongNetworkModal","openNoWeb3BrowserModal","openConnectionErrorModal","openTransactionErrorModal","openConnectionPendingModal","openUserRejectedConnectionModal","openUserRejectedValidationModal","closeUserRejectedValidationModal","meta","setConnectorName","biconomyLoginProcessing","RimbleTransaction","testTransaction","createTransaction","addTransaction","updateTransaction","errorMessage","isWalletConnectClosedModalError","tokenChanged","availableStrategiesChanged","metamaskProvider","connectorNameChanged","web3Host","web3Provider","forceCallback","terminalInfo","TerminalHttpProviderParams","terminalSourceType","terminalHttpProvider","web3Callback","originalWeb3","biconomyWeb3Provider","detectEthereumProvider","autoRefreshOnNetworkChange","Web3","HttpProvider","library","SourceType","customHttpProvider","TerminalHttpProvider","web3Injected","callbackAfterLogin","setCallbackAfterLogin","isLogin","userContract","Biconomy","onEvent","READY","ERROR","useInfuraProvider","simpleIDInfo","simpleIDParams","SimpleID","wallets","shownNotifications","isError","$crisp","notificationId","content","Sentry","increaseAmount","_ref15","balanceOf","determineAccountLowBalance","openConnectionModal","getRequiredNetwork","getNetworkId","getNetworkName","getNetworkType","contractMethod","gasLimit","_this$state","manualConfirmationTimeoutId","confirmationCallback","manualConfirmation","receiptCallback","isDeniedTx","_args24","confirmationCount","call_callback","confidenceThreshold","recentEvent","timeout","lastUpdated","updatedTransaction","openNoWalletModal","CrispClient","accountBalanceDAI","subscribedTransactions","connectionErrorModalOpened","transactionErrorModalOpened","Provider","ConnectionModalsUtil","components_TransactionErrorModal","components_ConnectionErrorModal","utilities_NetworkUtil","Consumer","governanceEnabled","offsetTop","ScrollToTop","pathname","useLocation","useEffect","PageNotFound","Header_styles","NetworkOverview","getNetworkCircleColor","circleColor","networkCircle","DebuggerButtons","Web3Debugger","components_NetworkOverview","Web3Debugger_DebuggerButtons","node","constant","outputs","payable","stateMutability","anonymous","indexed","ERC20","govTokensDisabled","defiPrime","IdleTokenV4","cToken","yToken","iToken","aToken","CHAI","skipMintForDeposit","TransactionToastMessages","started","confirmed","TransactionToastUtil","collectionHasNewObject","prevCollection","currentCollection","getNewObjectFromCollection","objectKey","getUpdatedObjectFromCollection","object","getTransactionFromCollection","identifier","collection","getUpdatedTransaction","currentTx","prevTx","processTransactionUpdates","showTransactionToast","toastMeta","getTransactionToastMeta","closeElem","transactionToastMeta","transactionAction","charAt","newMessage","Landing","lazy","then","Dashboard","Governance","App","selectedTab","connecting","genericError","selectedTheme","buyModalOpened","toastMessageProps","innerWidth","innerHeight","unsubscribeFromHistory","closeToastMessage","showToastMessage","processCustomParam","cachedKeyFound","storedCachedData","widthChanged","heightChanged","tabIndex","loadAvailableTokens","warn","jQuery","setThemeMode","closeIframe","w","iFrames","getElementsByTagName","iframe","contentWindow","parents","loadCustomAddress","strategyChanged","self","parent","hasMetamask","store","themeDark","SuspenseLoader","web3_react_dist_default","web3Api","libraryName","web3_react_dist","RimbleWeb3","needsPreflight","react_router","react","fallback","isDashboard","setToken","setStrategy","openBuyModal","handleMenuClick","selectTab","closeBuyModal","isGovernance","components_Header","src_Web3Debugger_Web3Debugger","exact","updateSelectedTab","expires","acceptOnScroll","cookieName","acceptOnScrollPercentage","marginTop","overflowY","src_Tos_Tos","src_PageNotFound_PageNotFound","utilities_TransactionToastUtil","Boolean","hostname","dsn","beforeSend","hint","originalException","ReactDOM","src_App_App","serviceWorker","ready","registration","unregister","FieldComponent","colInfo","colIndex","visible","fieldIndex","colProps","_TableCellHeader_TableCellHeader__WEBPACK_IMPORTED_MODULE_7__","oldTokenName","oldIdleTokens","skipMigration","biconomyLimitReached","toggleSkipMigration","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_5__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_4__","executeAction","idleTokenToRedeem","_clientProtocolAmountsRedeem","gasLimitRedeem","callbackRedeem","callbackReceiptRedeem","toggleMetaTransactionsEnabled","checkMigrationContractApproved","migrationContractName","tokenApproved","oldIdleTokensConverted","oldContractInfo","oldContractABI","biconomyLimits","disapproveMigration","approveMigration","migrationMethod","callbackMigrate","callbackReceiptMigrate","useMetaTx","_skipRebalance","_migrationContract$me","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","biconomyChanged","usePermitChanged","fastBalanceSelectorChanged","batchMigrationEnabled","SkipMigrationComponent","react__WEBPACK_IMPORTED_MODULE_11___default","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_16__","rimble_ui__WEBPACK_IMPORTED_MODULE_20__","biconomyEnabled","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_13__","migrateTextBefore","migrateText","_TransactionField_TransactionField__WEBPACK_IMPORTED_MODULE_18__","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_17__","_FastBalanceSelector_FastBalanceSelector__WEBPACK_IMPORTED_MODULE_19__","functionName","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_14__","migrationImage","migrationTextProps","approveText","_TableHeader_TableHeader__WEBPACK_IMPORTED_MODULE_11__","_TableRow_TableRow__WEBPACK_IMPORTED_MODULE_9__","footer","VariationNumber","IconDirection","iconSize","iconPos","loading-dots","loading-dots--dot","dot-keyframes","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","rimble_ui__WEBPACK_IMPORTED_MODULE_3__","bgLayer","backgroundRepeat","backgroundPosition","backgroundSize","backgroundImage","iconHeight","subtitleProps","BackButton","selectedProvider","availableProviders","renderPaymentMethod","currentState","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","goBack","componentWillMount","getProviderInfo","newProviderInfo","getDefaultPaymentProvider","paymentMethod","getAvailablePaymentProviders","providerSupportMethod","providerSupportToken","defaultPaymentProvider","selectProvider","ethAvailable","tokenAvailable","selectMethod","loadRemoteResources","handleCountryChange","getAvailableCountries","availableCountries","countryCode","methodInfo","loadAvailableMethods","InnerComponent","_ImageButton_ImageButton__WEBPACK_IMPORTED_MODULE_12__","imagePropsExtended","react_select__WEBPACK_IMPORTED_MODULE_10__","noOptionsMessage","_ModalCard__WEBPACK_IMPORTED_MODULE_11__","currYear","getFullYear","columnWidth","react__WEBPACK_IMPORTED_MODULE_9___default","rimble_ui__WEBPACK_IMPORTED_MODULE_12__","_ExtLink_ExtLink__WEBPACK_IMPORTED_MODULE_8__","role","aria-label","react_router_dom__WEBPACK_IMPORTED_MODULE_7__","ColTitle","useIconOnly","fieldName","earningsCounter","feesStart","feesEnd","earningsCurveStart","earningsCurveEnd","tokenAPY2","tokenAPR","allocationChartWidth","allocationChartHeight","resizeAllocationChart","aprChartEndTimestamp","aprChartStartTimestamp","aprChartData","mDate","newPoint","aprChartWidth","aprChartHeight","resizeAprChart","aprChartType","aprChartProps","firstTokenPrice","firstIdleBlock","performanceChartWidth","performanceChartHeight","resizePerformanceChart","apr_end_date","apr_start_date","apr_start_timestamp","apiResultsPerformanceChart","idleTokenPerformance","performanceChartData","performanceChartType","performanceChartProps","_args","amountToMigrate","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","poolSize","earningsPercCurveDirection","earningsPercCurve","earningsPercDirection","oldAPY","tokenAPYNoGov","allocationChartRowElement","$allocationChartRowElement","css","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_9__","_d","add","random","aprChartRowElement","$aprChartRowElement","lineWidth","defs","linearGradientDef","offset","react__WEBPACK_IMPORTED_MODULE_12___default","_CustomTooltip_CustomTooltip__WEBPACK_IMPORTED_MODULE_17__","protocolEarning","_CustomTooltip_CustomTooltipRow__WEBPACK_IMPORTED_MODULE_20__","PerformanceChartRowElement","$PerformanceChartRowElement","blocknumber","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","fieldChanged","contractInitialized","loader","rimble_ui__WEBPACK_IMPORTED_MODULE_21__","icon1","tooltipProps","icon2","strategyName","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_14__","react_countup__WEBPACK_IMPORTED_MODULE_11___default","_VariationNumber_VariationNumber__WEBPACK_IMPORTED_MODULE_18__","earningsCurve","governanceTokenName","tooltipMode","buttonLabel","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_16__","_AllocationChart_AllocationChart__WEBPACK_IMPORTED_MODULE_19__","formattedValue","_isBigNumber"],"mappings":"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","file":"static/js/main.33e8c102.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Flex, Loader, Text } from \"rimble-ui\";\n\nclass FlexLoader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        justifyContent={'center'}\n        {...this.props.flexProps}\n      >\n        <Loader {...this.props.loaderProps} />\n        {\n          this.props.text &&\n            <Text {...this.props.textProps}>{this.props.text}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default FlexLoader;\n","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass ChartCustomTooltipRow extends Component {\n\n  async componentWillMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps,prevState){\n\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default ChartCustomTooltipRow;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"PageNotFound_headerContainer__Ly5Tz\",\"headerBgFiller\":\"PageNotFound_headerBgFiller__1NzlO\",\"bgContainer\":\"PageNotFound_bgContainer__1Racj\",\"list\":\"PageNotFound_list__Cnz-b\",\"textContainer\":\"PageNotFound_textContainer__g_kTm\"};","import React from \"react\";\nimport { Text } from \"rimble-ui\";\n\nclass ShortHash extends React.Component {\n  shortenHash = hash => {\n    let shortHash = hash;\n    const txStart = shortHash.substr(0, 7);\n    const txEnd = shortHash.substr(shortHash.length - 4);\n    shortHash = txStart + \"...\" + txEnd;\n    return shortHash;\n  };\n  render() {\n    const shortHash = this.shortenHash(this.props.hash);\n\n    return <Text display={'inline'} {...this.props}>{shortHash}</Text>;\n  }\n}\n\nexport default ShortHash;\n","import React, { Component } from 'react';\nimport {\n  Flex, Box\n} from \"rimble-ui\";\nimport styles from './LoadingSpinner.module.scss';\n\nclass LoadingSpinner extends Component {\n  render() {\n    return (\n      <Flex\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        <Box className={[styles[\"loading-dots\"]]}>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n        </Box>\n      </Flex>\n    );\n  }\n}\n\nexport default LoadingSpinner;\n","import React, { Component } from 'react';\nimport {\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport LoadingSpinner from '../LoadingSpinner/LoadingSpinner.js';\n\nclass ButtonLoader extends Component {\n  render() {\n    return (\n       <Button\n        onClick={this.props.handleClick}\n         {...this.props.buttonProps}\n       >\n        <Flex flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n          <Flex width={1} display={ this.props.isLoading ? 'flex' : 'none' }>\n            <LoadingSpinner />\n          </Flex>\n          <Flex width={1} display={ this.props.isLoading ? 'none' : 'flex' }>\n            {this.props.buttonText}\n          </Flex>\n        </Flex>\n       </Button>\n    );\n  }\n}\n\nexport default ButtonLoader;\n","import { tint, shade, readableColor } from 'polished';\n\n// rimble base colors\nconst baseColors = {\n  black: '#000e1a',\n  white: '#FFF',\n  blue: '#0036ff',\n  darkBlue: '#0028be',\n  green: '#28C081',\n  yellow: '#FD9D28',\n  red: '#DC2C10',\n  blurple: '#4E3FCE',\n  consensysblue: '#3259D6',\n};\n\n// rimble palette\nconst colors = {\n  blurple: {\n    base: baseColors.blurple,\n    text: readableColor(baseColors.blurple),\n    light: [null, tint(0.2, baseColors.blurple)],\n    dark: [null, shade(0.2, baseColors.blurple)],\n  },\n  blue: {\n    base: baseColors.blue,\n    text: readableColor(baseColors.blue),\n    light: [null, tint(0.9, baseColors.blue)],\n    dark: [null, shade(0.4, baseColors.blue)],\n  },\n  green: {\n    base: baseColors.green,\n    text: baseColors.white,\n    light: [null, tint(0.9, baseColors.green)],\n    dark: [null, shade(0.4, baseColors.green)],\n  },\n  yellow: {\n    base: baseColors.yellow,\n    text: readableColor(baseColors.yellow),\n    light: [null, tint(0.9, baseColors.yellow)],\n    dark: [null, shade(0.4, baseColors.yellow)],\n  },\n  red: {\n    base: baseColors.red,\n    text: readableColor(baseColors.red),\n    light: [null, tint(0.9, baseColors.red)],\n    dark: [null, shade(0.4, baseColors.red)],\n  },\n};\n\nconst blurple = colors.blurple;\nconst blue = colors.blue;\nconst green = colors.green;\nconst yellow = colors.yellow;\nconst red = colors.red;\n\nexport { blurple };\nexport { blue };\nexport { green };\nexport { yellow };\nexport { red };\nexport default baseColors;\n","import React, { Component } from 'react';\nimport { Icon, Text, Flex } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass IconBox extends Component {\n\n  render() {\n    const cardProps = Object.assign({\n      p:3\n    },this.props.cardProps);\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={this.props.icon ? this.props.icon : 'InfoOutline'}\n            {...this.props.iconProps}\n          />\n          {\n            this.props.text && \n              <Text\n                mt={1}\n                fontSize={2}\n                color={'cellText'}\n                textAlign={'center'}\n                dangerouslySetInnerHTML={{\n                  __html:this.props.text\n                }}\n                {...this.props.textProps}\n              />\n          }\n          {\n            this.props.children\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default IconBox;\n","import theme from '../theme';\nimport React, { Component } from 'react';\nimport styles from './TransactionListFilters.module.scss';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\nimport { Flex, Text, Icon, Radio, Button, Link } from \"rimble-ui\";\n\nclass TransactionListFilters extends Component {\n\n  state = {\n    maxWidth:0.4,\n    minWidth:0.18,\n    maxHeight:425,\n    isOpened:false,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null\n    }\n  }\n\n  setFilter = (filter,value) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:value\n      }\n    }));\n  }\n\n  applyFilters = (toggle=true) => {\n    if (typeof this.props.applyFilters === 'function'){\n      this.props.applyFilters(this.state.activeFilters);\n    }\n    if (toggle){\n      this.toggleOpened();\n    }\n  }\n\n  resetFilter = (filter) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:null\n      }\n    }),() => {\n      this.applyFilters(false);\n    });\n  }\n\n  resetFilters = (toggle=true) => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null\n      }\n    },() => {\n      if (typeof this.props.resetFilters === 'function'){\n        this.props.resetFilters();\n      }\n      if (toggle){\n        this.toggleOpened();\n      }\n    })\n  }\n\n  toggleOpened = () => {\n    this.setState((prevState) => ({\n      isOpened: !prevState.isOpened\n    }));\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={3}\n        top={0}\n        width={1}\n        zIndex={1}\n        flexDirection={'column'}\n        alignItems={'flex-start'}\n        justifyContent={'center'}\n        position={['relative','absolute']}\n      >\n        <DashboardCard\n          cardProps={{\n            py:2,\n            px:3,\n            width:[1, this.state.isOpened ? this.state.maxWidth : this.state.minWidth ],\n            style:{\n              transition:'width 0.3s ease-in-out'\n            }\n          }}\n          isInteractive={ !this.state.isOpened }\n          handleClick={ !this.state.isOpened ? this.toggleOpened : null }\n        >\n          <Flex\n            width={1}\n            style={{\n              cursor:'pointer'\n            }}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'space-between'}\n            onClick={ this.state.isOpened ? this.toggleOpened : null }\n          >\n            <Text\n              fontSize={2}\n              fontWeight={500}\n              color={'copyColor'}\n            >\n              Filters\n            </Text>\n            <Icon\n              color={'copyColor'}\n              size={ this.props.isMobile ? '1.3em' : '1.5em'}\n              name={ this.state.isOpened ? 'Close' : 'Tune' }\n            />\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n            style={{\n              overflow:'hidden',\n              transition:'max-height 0.3s ease-in-out',\n              maxHeight:this.state.isOpened ? this.state.maxHeight : 0\n            }}\n          >\n            <Flex\n              mt={2}\n              py={2}\n              width={1}\n              flexDirection={'row'}\n              borderTop={`1px solid ${theme.colors.divider}`}\n            >\n              {\n                Object.keys(this.props.filters).map((filterCategory) => {\n                  const filterValues = this.props.filters[filterCategory];\n                  return (\n                    <Flex\n                      flexDirection={'column'}\n                      key={`filter_${filterCategory}`}\n                      style={{\n                        flexBasis:'0',\n                        flex:'1 1 0px'\n                      }}\n                    >\n                      <TableCellHeader\n                        pb={2}\n                        fontWeight={3}\n                        fontSize={[0,2]}\n                        color={'cellText'}\n                      >\n                        {filterCategory.toUpperCase()}\n                      </TableCellHeader>\n                      {\n                        Object.keys(filterValues).map((filterValue) => {\n                          const filterLabel = filterValues[filterValue];\n                          const isChecked = this.state.activeFilters[filterCategory]===filterValue;\n                          return (\n                            <Radio\n                              my={2}\n                              fontSize={[0,2]}\n                              label={filterLabel}\n                              checked={isChecked}\n                              className={styles.radioBtn}\n                              key={`filter_${filterCategory}_${filterValue}`}\n                              onChange={ e => this.setFilter(filterCategory,filterValue) }\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                  );\n                })\n              }\n            </Flex>\n            <Flex\n              flexDirection={'row'}\n            >\n              <Button.Text\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.applyFilters}\n              >\n                Apply filters\n              </Button.Text>\n              <Button.Text\n                ml={3}\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.resetFilters}\n              >\n                Reset\n              </Button.Text>\n            </Flex>\n          </Flex>\n        </DashboardCard>\n        {\n          !this.state.isOpened && this.props.activeFilters && Object.values(this.props.activeFilters).filter( v => (v !== null) ).length>0 &&\n            <Flex\n              mt={3}\n              width={1}\n              flexDirection={['column','row']}\n              alignItems={['flex-start','flex-end']}\n              justifyContent={['flex-end','flex-start']}\n            >\n              {\n                Object.keys(this.props.activeFilters).map((filterName) => {\n                  const filterValue = this.props.activeFilters[filterName];\n                  if (filterValue !== null){\n                    const filterLabel = this.props.filters[filterName][filterValue];\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:[2,0],\n                          mr:[0,3],\n                          width:[1,this.state.minWidth]\n                        }}\n                        isInteractive={true}\n                        key={`filter_${filterName}`}\n                      >\n                        <Flex\n                          width={1}\n                          style={{\n                            cursor:'pointer'\n                          }}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                          onClick={e => this.resetFilter(filterName)}\n                        >\n                          <Text\n                            fontSize={2}\n                            fontWeight={500}\n                            color={'cellText'}\n                            style={{\n                              textTransform:'capitalize'\n                            }}\n                          >\n                            {filterLabel}\n                          </Text>\n                          <Icon\n                            name={'Close'}\n                            color={'cellText'}\n                            size={ this.props.isMobile ? '1.3em' : '1.5em'}\n                          />\n                        </Flex>\n                      </DashboardCard>\n                    );\n                  }\n                  return null;\n                })\n              }\n              <Link\n                mt={[2,0]}\n                fontSize={[3,2]}\n                fontWeight={[3]}\n                color={'dark-gray'}\n                hoverColor={'copyColor'}\n                textAlign={['center','left']}\n                onClick={ e => this.resetFilters(false) }\n              >\n                Clear all filters\n              </Link>\n            </Flex>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionListFilters;","import React, { Component } from 'react';\n// import style from './TransactionsList.module.scss';\nimport TableRow from '../TableRow/TableRow';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Heading, Text, Link, Icon } from \"rimble-ui\";\nimport TransactionField from '../TransactionField/TransactionField';\nimport TransactionListFilters from '../TransactionListFilters/TransactionListFilters';\n\nclass TransactionsList extends Component {\n\n  state = {\n    page:1,\n    prevTxs:{},\n    txsPerPage:5,\n    loading:false,\n    totalTxs:null,\n    totalPages:null,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null,\n    },\n    filters:{\n      actions:{\n        deposit:'Deposit',\n        redeem:'Redeem',\n        send:'Send',\n        receive:'Receive',\n        migrate:'Migrate',\n        swap:'Swap-In',\n        swapout:'Swap-Out',\n        withdraw:'Withdraw',\n        // curvein:'CurveIn',\n        // curveout:'CurveOut',\n        // curvezapin:'CurveZapIn',\n        // curvezapout:'CurveZapOut',\n      },\n      status:{\n        completed:'Completed',\n        pending:'Pending',\n        failed:'Failed'\n      },\n      assets:{}\n    },\n    renderedTxs:null,\n    processedTxs:null,\n    lastBlockNumber:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);this.processTxs(page);\n    this.setState({\n      page\n    });\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadTxs();\n  }\n\n  applyFilters = activeFilters => {\n    this.setState({\n      activeFilters\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  resetFilters = () => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null,\n      }\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const transactionsChanged = JSON.stringify(prevProps.transactions) !== JSON.stringify(this.props.transactions);\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n\n    if (tokenChanged || transactionsChanged){\n      this.setState({\n        page:1,\n        prevTxs:{}\n      },()=>{\n        this.loadTxs();\n      })\n      return false;\n    }\n    const pageChanged = prevState.page !== this.state.page;\n    if (pageChanged){\n      this.processTxs();\n    }\n  }\n\n  async loadTxs(count,endBlockNumber='latest'){\n    if (!this.props.account){\n      return false;\n    }\n\n    count = count ? count : 0;\n\n    this.setState({\n      loading:true\n    });\n\n    const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n    // Take last block number, is null take first block number\n    let prevTxs = {...this.state.prevTxs};\n    let lastBlockNumber = Math.max(firstBlockNumber,this.state.lastBlockNumber);\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const assets = {...this.state.filters.assets};\n\n    enabledTokens.forEach((token) => {\n      assets[token] = token;\n    });\n\n    let actions = {...this.state.filters.actions};\n    \n    const enabledActions = typeof this.props.enabledActions !== 'undefined' ? this.props.enabledActions : [];\n\n    if (enabledActions.length){\n      actions = {};\n      enabledActions.forEach( action => {\n        actions[action.toLowerCase()] = action;\n      });\n    }\n\n    const etherscanTxs = await this.functionsUtil.getEtherscanTxs(this.props.account,lastBlockNumber,'latest',enabledTokens);\n\n    // Merge new txs with previous ones\n    if (etherscanTxs && etherscanTxs.length){\n      etherscanTxs.forEach((tx) => {\n        if (tx.hashKey){\n          prevTxs[tx.hashKey] = tx;\n        } else {\n          prevTxs[`t${tx.timeStamp}`] = tx;\n        }\n      });\n    }\n\n    const lastTx = Object.values(prevTxs).pop();\n\n    // Update last block number\n    if (lastTx && lastTx.blockNumber && (!this.state.lastBlockNumber || lastTx.blockNumber>this.state.lastBlockNumber)){\n      lastBlockNumber = parseInt(lastTx.blockNumber)+1;\n    }\n\n    return this.setState( prevState => ({\n      prevTxs,\n      loading:false,\n      lastBlockNumber,\n      filters:{\n        ...prevState.filters,\n        assets,\n        actions\n      }\n    }), () => {\n      this.processTxs()\n    });\n  };\n\n  processTxs = (page=null) => {\n\n    page = page ? page : this.state.page;\n\n    const availableActions = Object.keys(this.state.filters.actions).map( action => (action.toLowerCase()) );\n\n    // Sort prevTxs by timeStamp\n    const txsIndexes = Object.values(this.state.prevTxs)\n                        .filter(tx => (!!parseFloat(tx.value))) // Filter txs with value\n                        .filter(tx => (\n                          (this.state.activeFilters.status === null || (tx.status && tx.status.toLowerCase() === this.state.activeFilters.status.toLowerCase())) && \n                          (this.state.activeFilters.assets === null || (tx.token && tx.token.toLowerCase() === this.state.activeFilters.assets.toLowerCase())) &&\n                          ( tx.action && availableActions.includes(tx.action.toLowerCase()) && (this.state.activeFilters.actions === null || (tx.action.toLowerCase() === this.state.activeFilters.actions.toLowerCase()) ))\n                        )) // Filter by activeFilters\n                        .sort((a,b) => (a.timeStamp > b.timeStamp) ? -1 : 1 );\n\n    // Calculate max number of pages\n    const totalTxs = txsIndexes.length;\n    const totalPages = Math.ceil(totalTxs/this.state.txsPerPage);\n\n    const processedTxs = [];\n\n    // console.log(this.state.prevTxs,txsIndexes);\n\n    txsIndexes.forEach((tx, i) => {\n      const selectedToken = tx.token;\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const decimals = Math.min(tokenConfig.decimals,8);\n      \n      const date = new Date(tx.timeStamp*1000);\n      const action = tx.action ? tx.action : this.functionsUtil.getTxAction(tx,tokenConfig);\n\n      const parsedValue = parseFloat(tx.tokenAmount);\n\n      const amount = parsedValue ? (this.props.isMobile ? parsedValue.toFixed(4) : parsedValue.toFixed(decimals)) : '-';\n      const momentDate = this.functionsUtil.strToMoment(date);\n\n      // Save new params\n      tx.status = tx.status ? tx.status : 'Completed';\n      tx.action = action;\n      tx.momentDate = momentDate;\n      tx.amount = amount;\n\n      if (i>=((page-1)*this.state.txsPerPage) && i<((page-1)*this.state.txsPerPage)+this.state.txsPerPage) {\n        processedTxs.push(tx);\n      }\n    });\n\n    // console.log('processedTxs',this.state.page,txsIndexes,processedTxs);\n\n    const loading = false;\n  \n    this.setState({\n      loading,\n      totalTxs,\n      totalPages,\n      processedTxs\n    });\n  }\n\n  render() {\n\n    const hasActiveFilters = Object.values(this.state.activeFilters).filter( v => (v !== null) ).length>0;\n\n    // console.log('processedTxs',this.state.processedTxs);\n    const processedTxs = this.state.processedTxs ? Object.values(this.state.processedTxs) : null;\n\n    return (\n      <Flex flexDirection={'column'} width={1} m={'0 auto'}>\n        {\n          this.state.loading ? (\n            <FlexLoader\n              flexProps={{\n                flexDirection:'row',\n                minHeight:this.props.height\n              }}\n              loaderProps={{\n                size:'30px'\n              }}\n              textProps={{\n                ml:2\n              }}\n              text={'Loading transactions...'}\n            />\n          ) : (\n            <Flex\n              width={1}\n              position={'relative'}\n              flexDirection={'column'}\n              id={'transactions-list-container'}\n              pt={[0, hasActiveFilters ? '116px' : 5]}\n            >\n              <TransactionListFilters\n                {...this.props}\n                filters={this.state.filters}\n                activeFilters={this.state.activeFilters}\n                resetFilters={this.resetFilters.bind(this)}\n                applyFilters={this.applyFilters.bind(this)}\n              />\n              {\n                processedTxs && processedTxs.length ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <TableHeader\n                      cols={this.props.cols}\n                      isMobile={this.props.isMobile}\n                    />\n                    <Flex\n                      id={'transactions-list'}\n                      flexDirection={'column'}\n                    >\n                      {\n                        processedTxs.map( (tx,index) => {\n                          const txHash = tx.hash;\n                          const txHashKey = tx.hashKey;\n                          const handleClick = (e) => {\n                            return (txHash ? window.open(`https://etherscan.io/tx/${txHash}`) : null);\n                          };\n\n                          return (\n                            <TableRow\n                              {...this.props}\n                              rowProps={{\n                                isInteractive:true\n                              }}\n                              hash={txHash}\n                              transaction={tx}\n                              key={`tx-${index}`}\n                              handleClick={handleClick}\n                              rowId={`tx-col-${txHashKey}`}\n                              cardId={`tx-card-${txHashKey}`}\n                              fieldComponent={TransactionField}\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                    <Flex\n                      height={'50px'}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'flex-end'}\n                      id={'transactions-list-pagination'}\n                    >\n                      <Flex mr={3}>\n                        <Link mr={1} onClick={ e => this.prevPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowLeft'}\n                            size={'2em'}\n                            color={ this.state.page>1 ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                        <Link onClick={ e => this.nextPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowRight'}\n                            size={'2em'}\n                            color={ this.state.page<this.state.totalPages ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                      </Flex>\n                      <Flex alignItems={'center'}>\n                        <Text \n                          fontSize={1}\n                          fontWeight={3}\n                          color={'cellText'}\n                        >\n                          Page {this.state.page} of {this.state.totalPages}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontWeight={2} fontSize={[2]} color={'dark-gray'}>\n                    There are no transactions\n                  </Heading.h3>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionsList;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass CustomTooltip extends Component {\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default CustomTooltip;","import { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport globalConfigs from '../configs/globalConfigs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass AllocationChart extends Component {\n  state = {\n    chartData:null,\n    chartProps:null,\n    selectedSlice:null,\n    totalAllocation:null,\n    protocolsAllocations:null,\n    protocolsAllocationsPerc:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged){\n      this.setStateSafe({\n        chartData:null,\n        chartProps:null,\n        selectedSlice:null,\n        totalAllocation:null,\n        protocolsAllocations:null,\n        protocolsAllocationsPerc:null\n      },() => {\n        this.loadData();\n      });\n    } else if (prevProps.isMobile !== this.props.isMobile){\n      this.loadData()\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n    const {\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    } = await this.functionsUtil.getTokenAllocation(this.props.tokenConfig);\n\n    // console.log('AllocationChart',this.props.token,totalAllocation,protocolsAllocations,protocolsAllocationsPerc);\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => d.value+'%',\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {\n            background: this.props.theme.colors.cardBg\n          } : {\n            display: 'none',\n          }\n        },\n        labels:{\n          text:{\n            fontWeight:600,\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n      margin: this.props.inline ? {top:0,right:15,bottom:0,left:1} : (this.props.isMobile ? { top: 10, right: 15, bottom: 0, left: 15 } : { top: 10, right: 35, bottom: 0, left: 35 }),\n    };\n\n    const chartData = [];\n\n    this.props.tokenConfig.protocols.forEach((protocolInfo,i)=>{\n      const protocolName = protocolInfo.name;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n      if (protocolsAllocationsPerc[protocolAddr]){\n        const protocolAllocationPercParsed = parseFloat(protocolsAllocationsPerc[protocolAddr].times(100).toFixed(2));\n        chartData.push({\n          id:protocolAddr,\n          name:protocolName,\n          value:protocolAllocationPercParsed,\n          color:'hsl('+globalConfigs.stats.protocols[protocolName].color.hsl.join(',')+')',\n          label: globalConfigs.stats.protocols[protocolName].label ? globalConfigs.stats.protocols[protocolName].label : this.functionsUtil.capitalize(protocolName)\n        });\n      }\n\n    });\n\n    this.setStateSafe({\n      chartData,\n      chartProps,\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    });\n  }\n\n  render() {\n    \n    const selectedSlice = this.state.selectedSlice !== null && this.state.protocolsAllocations[this.state.selectedSlice.id] ? this.state.protocolsAllocations[this.state.selectedSlice.id] : false;\n    const protocolIcon = this.state.selectedSlice !== null ? (globalConfigs.stats.protocols[this.state.selectedSlice.name] && globalConfigs.stats.protocols[this.state.selectedSlice.name].icon ? globalConfigs.stats.protocols[this.state.selectedSlice.name].icon : `${this.state.selectedSlice.name}.svg`) : null;\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n      >\n        {\n          this.state.totalAllocation && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/protocols/${protocolIcon}`}\n                    />\n                    <SmartNumber\n                      fontSize={[3,4]}\n                      decimals={3}\n                      fontWeight={4}\n                      maxPrecision={5}\n                      number={selectedSlice}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      Funds in {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/idle-mark.png`}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontWeight:3,\n                        fontSize:[3,4]\n                      }}\n                      decimals={3}\n                      fontWeight={4}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      number={this.state.totalAllocation}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.state.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default AllocationChart;","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass SmartNumber extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  render() {\n    let formattedNumber = '-';\n    const number = typeof this.props.number !== 'undefined' && !isNaN(this.props.number) && this.props.number !== false && this.props.number !== null ? this.props.number : null;\n\n    if (number){\n      switch (this.props.type){\n        case 'money':\n          formattedNumber = this.functionsUtil.formatMoney(number,this.props.precision);\n        break;\n        default:\n          formattedNumber = this.functionsUtil.abbreviateNumber(number,this.props.decimals,this.props.maxPrecision,this.props.minPrecision);\n        break;\n      }\n    } else {\n      formattedNumber = '-';\n    }\n\n    const flexProps = {\n      width:1,\n      alignItems:'center',\n      flexDirection:'row',\n      justifyContent:'center'\n    };\n\n    // Replace props\n    if (this.props.flexProps && Object.keys(this.props.flexProps).length){\n      Object.keys(this.props.flexProps).forEach(p => {\n        flexProps[p] = this.props.flexProps[p];\n      });\n    }\n\n    const showUnit = formattedNumber !== '-';\n    const unitPos = this.props.unitPos ? this.props.unitPos : 'right';\n\n    return (\n      <Flex\n        {...flexProps}\n      >\n        {\n          this.props.unit && unitPos === 'left' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n        <Text {...this.props}>{formattedNumber}</Text>\n        {\n          this.props.unit && unitPos === 'right' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SmartNumber;\n","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass CustomTooltipRow extends Component {\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              whiteSpace:'nowrap',\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CustomTooltipRow;","import { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquity extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    if (mobileChanged || themeModeChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const etherscanTxs = await this.functionsUtil.getEtherscanTxs(this.props.account,0,'latest',enabledTokens);\n\n    const chartData = [];\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n          \n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.functionsUtil.BNify(0);\n          }\n\n          const balance = amountLent;\n          const action = tx.action;\n          const timeStamp = parseInt(tx.timeStamp);\n          const tokenPrice = this.functionsUtil.BNify(tx.tokenPrice);\n          const idleTokens = this.functionsUtil.BNify(tx.idleTokens);\n\n          if (!tokenPrice.isNaN() && !tokenPrice.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              timeStamp,\n              tokenPrice,\n              idleTokens,\n              tokenAmount\n            });\n          }\n        });\n      }\n    });\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    const currTimestamp = parseInt(new Date().getTime()/1000)+86400;\n\n    const tokensData = {};\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      tokensData[token] = await this.functionsUtil.getTokenApiData(this.props.availableTokens[token].address,isRisk,firstTxTimestamp,null,false,3600);\n    });\n\n    // debugger;\n\n    const idleTokenBalance = {};\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds){\n\n      const foundBalances = {};\n      const tokensBalances = {};\n      timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach(token => {\n\n        let lastTokenData = null;\n        const lastTokenDataUnfiltered = Object.values(tokensData[token]).pop();\n        const filteredTokenData = tokensData[token].filter(tx => (tx.timestamp>=prevTimestamp && tx.timestamp<=timeStamp));\n        if (filteredTokenData && filteredTokenData.length){\n          lastTokenData = filteredTokenData.pop();\n        }\n\n        if (!idleTokenBalance[token]){\n          idleTokenBalance[token] = this.functionsUtil.BNify(0);\n        }\n\n        const tokenConfig = this.props.availableTokens[token];\n        const tokenDecimals = tokenConfig.decimals;\n        let filteredBalances = tokensBalance[token].filter(tx => (tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n        \n        if (!filteredBalances.length){\n          if (prevBalances && prevBalances[token]){\n            filteredBalances = prevBalances[token];\n            const lastFilteredTx = Object.assign([],filteredBalances).pop();\n            const currentBalance = parseFloat(lastFilteredTx.balance);\n\n            // Take idleToken price from API and calculate new balance\n            if (currentBalance>0 && timeStamp>firstTxTimestamp && lastTokenData){\n              const idleTokens = idleTokenBalance[token];\n              const idlePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.idlePrice,tokenDecimals);\n              let newBalance = idleTokens.times(idlePrice);\n\n              // Set new balance and tokenPrice\n              lastFilteredTx.balance = newBalance;\n              lastFilteredTx.tokenPrice = idlePrice;\n              filteredBalances = [lastFilteredTx];\n            }\n          } else {\n            filteredBalances = [{\n              balance:this.functionsUtil.BNify(0),\n              tokenPrice:this.functionsUtil.BNify(0)\n            }];\n          }\n        } else {\n          filteredBalances.forEach(tx => {\n            switch (tx.action){\n              case 'Swap':\n              case 'Deposit':\n              case 'Migrate':\n              case 'Receive':\n              case 'CurveOut':\n                idleTokenBalance[token] = idleTokenBalance[token].plus(tx.idleTokens);\n              break;\n              default:\n                idleTokenBalance[token] = idleTokenBalance[token].minus(tx.idleTokens);\n                if (idleTokenBalance[token].lt(0)){\n                  idleTokenBalance[token] = this.functionsUtil.BNify(0);\n                }\n              break;\n            }\n          });\n        }\n\n        const lastTx = Object.assign([],filteredBalances).pop();\n        // let lastTxBalance = this.functionsUtil.BNify(lastTx.balance);\n        let lastTxBalance = idleTokenBalance[token].times(lastTx.tokenPrice);\n\n        if (lastTxBalance.gt(0)){\n          // Convert token balance to USD\n          let tokenUsdConversionRate = null;\n          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n          if (!this.props.chartToken && conversionRateField){\n            const conversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : (lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null);\n            if (conversionRate){\n              tokenUsdConversionRate = this.functionsUtil.fixTokenDecimals(conversionRate,18);\n              if (tokenUsdConversionRate.gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n          }\n          \n          tokensBalances[token] = lastTxBalance;\n\n          aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n        }\n\n        foundBalances[token] = filteredBalances;\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || (momentDate.isSameOrAfter(startDate) && momentDate.isSameOrBefore(new Date(),'day'))){\n        \n        // if (momentDate.isAfter(new Date(),'day')){\n        //   momentDate = this.functionsUtil.strToMoment(new Date());\n        // }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n\n        // console.log(formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken,'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        format: '%b %d',\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        legendPosition: 'middle',\n        tickValues:'every '+daysFrequency+' days'\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      areaOpacity:this.props.themeMode === 'light' ? 0.1 : 0.5,\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:this.props.theme.colors.legend,\n              fontFamily:this.props.theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            (typeof point.data.balances === 'object' && Object.keys(point.data.balances).length>0) &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquity;","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ChartCustomTooltip extends Component {\n\n  async componentWillMount(){\n\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    \n  }\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos && this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ChartCustomTooltip;\n","import React, { Component } from \"react\";\nimport { Button, Image, Flex, Text, Icon, Box } from 'rimble-ui';\n\nclass ImageButton extends Component {\n\n  render() {\n\n    const isMobile = typeof this.props.isMobile !== 'undefined' ? this.props.isMobile : false;\n    const image = this.props.imageSrc ? (<Image width={'auto'} src={this.props.imageSrc} {...this.props.imageProps} />) : ( this.props.iconName ? (<Icon name={this.props.iconName} {...this.props.iconProps} />) : null );\n    const caption = (<Text textAlign={ isMobile ? 'left' : 'center'} fontSize={2} fontWeight={3} color={'dark-gray'}>{this.props.caption}</Text>);\n\n    return (\n        <Button\n          color={'white'}\n          borderRadius={3}\n          px={ isMobile ? [3,4] : 4 }\n          py={ isMobile ? 0 : [3,4] }\n          my={ isMobile ? 2 : [2,2] }\n          mx={ isMobile ? 0 : [0,2] }\n          onClick={ this.props.handleClick }\n          height={ isMobile ? '58px' : ['150px','170px']}\n          mainColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          contrastColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          width={this.props.width ? this.props.width : (isMobile ? '100%' : ['150px','170px'])}\n          style={this.props.buttonStyle ? this.props.buttonStyle : (isMobile ? {justifyContent:'flex-start'} : null)}\n          {...this.props.buttonProps}\n        >\n          <>\n            {\n              this.props.badge && (\n                <Box\n                  position={'absolute'}\n                  borderRadius={'16px'}\n                  backgroundColor={ this.props.badge.bgColor ? this.props.badge.bgColor : 'blue' }\n                  style={ isMobile ? {right:'-25px',top:'-17px'} : {right:'-25px',top:'-25px'} }\n                  px={['5px','7px']}\n                  py={['1px','3px']}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={'10px'}\n                    color={ this.props.badge.color ? this.props.badge.color : '#fff' }\n                  >\n                  {this.props.badge.text}\n                  </Text>\n                </Box>\n              )\n            }\n            <Flex flexDirection={ isMobile ? 'row' : 'column'} justifyContent={ isMobile ? 'flex-start' : 'center'} alignItems={'center'}>\n              <Flex width={ isMobile ? '45px' : 1 } mr={ isMobile ? 2 : 0 } justifyContent={ isMobile ? 'flex-start' : 'center' }>\n                { this.props.captionPos && this.props.captionPos === 'top' ? caption : image }\n              </Flex>\n              <Flex width={ isMobile ? 'auto' : 1 } flexDirection={'column'} justifyContent={ isMobile ? 'flex-start' : 'center' } >\n                { this.props.captionPos && this.props.captionPos === 'top' ? image : caption }\n                {\n                  this.props.subcaption && this.props.subcaption.split('\\n').map((v,i) => {\n                    // Smaller caption for second line\n                    if (i){\n                      v = (<small>{v}</small>);\n                    }\n                    return (\n                      <Text key={`subcaption_${i}`} lineHeight={'1.3'} textAlign={ isMobile ? 'left' : 'center'} color={'darkGray'} fontWeight={1} fontSize={1}>{v}</Text>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </>\n        </Button>\n    );\n  }\n}\nexport default ImageButton;\n","import { Button } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass RoundButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      width:1,\n      fontSize:3,\n      fontWeight:3,\n      height:'45px',\n      boxShadow:null,\n      borderRadius:4,\n      mainColor:'blue'\n    },this.props.buttonProps);\n\n    return (\n       <Button\n        {...buttonProps}\n        onClick={this.props.handleClick}\n       >\n        {this.props.children}\n       </Button>\n    );\n  }\n}\n\nexport default RoundButton;\n","import { Link } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass ExtLink extends Component {\n\n  render() {\n    return (\n      <Link\n        target={'_blank'}\n        rel={'nofollow noopener noreferrer'}\n        {...this.props}\n      >\n        {this.props.children}\n      </Link>\n    );\n  }\n}\n\nexport default ExtLink;\n","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from 'polished';\n\n// theme.js\nexport default {\n  breakpoints: ['52em', '64em'],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5,\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: ['0', '4px', '8px', '16px', '2rem'],\n  width: [0, 16, 32, 64, 128, 256],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, '1px solid #eee','1px solid #b6c2ff'],\n  borderWidths: ['0', '1px', '2px', '4px'],\n  shadows: [\n    '0',\n    '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    '0 7px 14px rgba(50,50,93,.1)',\n    '1px 1px 0px rgba(0,0,0,0.2)',\n    '0px 0px 16px 2px rgba(0,54,255,0.3)'\n  ],\n  opacity: {\n    disabled: 0.4,\n  },\n  colors: {\n    primary: blue.base,\n    'gradient-bg': 'linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)',\n    'primary-light': blue.light[1],\n    'primary-dark': blue.dark[1],\n    bgBlue: '#0030e0',\n    blue: '#0036ff',\n    'dark-blue': '#00219a',\n    skyBlue: '#00abfe',\n    lightBlue: '#79f4e1',\n    copyColor: '#3F3D4B',\n    subColor: '#a7a7a7',\n    black: baseColors.black,\n    'near-black': '#111',\n    'dark-gray': '#4e4e4e',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#f4f4f4',\n    white: '#fff',\n    transparent: 'transparent',\n    /*\n    NEW COLORS\n    */\n    arrowActive:'#4f4f4f',\n    arrowInactive:'#d8d8d8',\n    selectBgFocused:'#fbfbfb',\n    selectBg:'#ffffff',\n    backButtonBg:'#ffffff',\n    lineChartStroke:'#dbdbdb',\n    wrongNetworkBannerBg:'#ffffff',\n    dashboardBg: '#f9fafd',\n    statValue: '#959595',\n    boxBorder: '#eeeeee',\n    cellTitle: '#a3a4a5',\n    cellText: '#a6a6a6',\n    divider: '#d8d8d8',\n    counter: '#5d5d5d',\n    redeem: '#00a9fe',\n    deposit: '#0239ff',\n    migrate: '#00a9fe',\n    legend: '#c9c9c9',\n    menuBg:'#fff',\n    menuHover:'#f3f6ff',\n    cardBg:'#fff',\n    flashColor:'#3f4e9a',\n    menuRightBorder:'#eee',\n    cardHoverShadow:'0px 0px 0px 1px rgba(0, 54, 255, 0.3)',\n    cardBgHover:'#f7f8ff',\n    cardBorder:'#eee',\n    transactions:{\n      action:{\n        send:'#10a0dd',\n        swap:'#3d53c0',\n        boost:'#ffff00',\n        redeem:'#10a0dd',\n        swapout:'#10a0dd',\n        deposit:'#3d53c0',\n        curvein:'#10a0dd',\n        receive:'#3d53c0',\n        migrate:'#3d53c0',\n        default:'#4f4f4f',\n        curveout:'#3d53c0',\n        withdraw:'#10a0dd',\n        curvedepositin:'#10a0dd',\n        curvedepositout:'#3d53c0'\n      },\n      actionBg:{\n        send:'#ceeff6',\n        swap:'#ced6ff',\n        boost:'#ff7979',\n        redeem:'#ceeff6',\n        swapout:'#ceeff6',\n        deposit:'#ced6ff',\n        curvein:'#ceeff6',\n        default:'#dadada',\n        receive:'#ced6ff',\n        migrate:'#ced6ff',\n        withdraw:'#ceeff6',\n        curveout:'#ced6ff',\n        curvedepositin:'#ceeff6',\n        curvedepositout:'#ced6ff'\n      },\n      status:{\n        completed:'#00b84a',\n        pending:'#a5a5a5',\n        failed:'#fa0000'\n      }\n    },\n    blacks: [\n      'rgba(0,0,0,.0125)',\n      'rgba(0,0,0,.025)',\n      'rgba(0,0,0,.05)',\n      'rgba(0,0,0,.1)',\n      'rgba(0,0,0,.2)',\n      'rgba(0,0,0,.3)',\n      'rgba(0,0,0,.4)',\n      'rgba(0,0,0,.5)',\n      'rgba(0,0,0,.6)',\n      'rgba(0,0,0,.7)',\n      'rgba(0,0,0,.8)',\n      'rgba(0,0,0,.9)',\n    ],\n    whites: [\n      'rgba(255,255,255,.0125)',\n      'rgba(255,255,255,.025)',\n      'rgba(255,255,255,.05)',\n      'rgba(255,255,255,.1)',\n      'rgba(255,255,255,.2)',\n      'rgba(255,255,255,.3)',\n      'rgba(255,255,255,.4)',\n      'rgba(255,255,255,.5)',\n      'rgba(255,255,255,.6)',\n      'rgba(255,255,255,.7)',\n      'rgba(255,255,255,.8)',\n      'rgba(255,255,255,.9)',\n    ],\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: shade(0.4, '#AAA'),\n      backgroundColor: tint(0.9, '#AAA'),\n      borderColor: '#AAA',\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base,\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base,\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base,\n    },\n    info: {\n      color: shade(0.4, blue.base),\n      backgroundColor: '#f3f6ff',\n      borderColor: '#b6c2ff',\n    },\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      '--main-color': blue.base,\n      '--contrast-color': blue.text,\n    },\n    normal: {\n      color: baseColors.black,\n      '--contrast-color': baseColors.black,\n    },\n    success: {\n      '--main-color': green.base,\n      '--contrast-color': green.text,\n    },\n    danger: {\n      '--main-color': red.base,\n      '--contrast-color': red.text,\n    },\n  },\n  buttonSizes: {\n    small: {\n      fontSize: '0.75rem',\n      height: '2rem',\n      minWidth: '2rem',\n      padding: '0 1rem',\n    },\n    medium: {\n      fontSize: '1rem',\n      height: '3rem',\n      minWidth: '3rem',\n    },\n    large: {\n      fontSize: '1.5rem',\n      height: '4rem',\n      minWidth: '4rem',\n      borderRadius: '2rem'\n    },\n  },\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tooltip\":\"TableCellHeader_tooltip__3xM3k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radioBtn\":\"TransactionListFilters_radioBtn__1vgHa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bg\":\"ModalCard_bg__3ocwQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Web3ConnectionButtons_button__1Wov0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gradientButton\":\"Header_gradientButton__2mrQl\",\"empty\":\"Header_empty__3fhiX\",\"select\":\"Header_select__27Xyx\",\"selectDark\":\"Header_selectDark__EHAAP\",\"input\":\"Header_input__3dr8P\"};","import axios from 'axios';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Progress, Icon, Link } from 'rimble-ui'\n\nclass TxProgressBar extends Component {\n  state = {\n    error:null,\n    ended:false,\n    percentage:0,\n    processing:true,\n    txTimestamp:null,\n    initialized:false,\n    estimatedTime:null,\n    remainingTime:null\n  };\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n\n    this.componentUnmounted = true;\n\n    var id = window.setTimeout(function() {}, 0);\n\n    while (id--) {\n        window.clearTimeout(id); // will do nothing if no timeout with id is present\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps){\n    this.loadUtils();\n\n    if (!this.state.initialized && this.props.web3){\n      this.initProgressBar();\n    }\n  }\n\n  componentDidMount = async () => {\n    this.initProgressBar();\n  }\n\n  getTransaction = async () => {\n    const transaction = await (new Promise( async (resolve, reject) => {\n      this.functionsUtil.customLog('getTransaction',this.props.hash);\n      this.props.web3.eth.getTransaction(this.props.hash,(err,transaction) => {\n        resolve(transaction);\n      });\n    }));\n\n    const newState = {};\n    if (transaction){\n      newState.transaction = transaction;\n    } else {\n      newState.processing = false;\n      newState.error = 'Unable to find the transaction';\n    }\n\n    this.setState(newState);\n    return transaction;\n  }\n\n  /*\n  Taken from https://ethgasstation.info/calculatorTxV.php\n  */\n  _estimateWait (prediction, gasoffered) {\n    var minedProb;\n    var expectedWait;\n    var sum1, sum2;\n    var intercept = 4.2794;\n    var hpa = .0329;\n    var hgo = -3.2836;\n    var tx = -0.0004;\n    var intercept2 = 7.5375;\n    var hpa_coef = -0.0801;\n    var txatabove_coef= 0.0003;\n    var high_gas_coef = .3532;\n\n    if (gasoffered > 1000000) {    \n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + hgo  + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['hashpower_accepting'] * hpa_coef) + (prediction['tx_atabove'] * txatabove_coef) + high_gas_coef;\n    } else {\n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['tx_atabove'] * txatabove_coef) + (prediction['hashpower_accepting'] * hpa_coef);\n    }\n\n    var factor = Math.exp(- 1 * sum1);\n    const prob = 1 / (1 + factor);\n\n    if (prob > .95) {\n      minedProb = 'Very High';\n    } else if (prob > .9 && prob <= .95) {\n      minedProb = 'Medium'\n    } else {\n      minedProb = 'Low';\n    }\n\n    expectedWait = Math.exp(sum2);\n    if (expectedWait < 2) {\n      expectedWait = 2;\n    }\n\n    if (gasoffered > 2000000) {\n      expectedWait += 100;\n    }\n\n    return [expectedWait, prediction['hashpower_accepting'], prediction['tx_atabove'], minedProb];\n  }\n\n  getBlockTime = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/ethgasAPI.json');\n    if (pt){\n      const blockTime = pt.data;\n      this.setState({\n        blockTime\n      });\n      return blockTime;\n    }\n    return null;\n  }\n\n  getPredictionTable = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/predictTable.json');\n    if (pt){\n      const predictTable = pt.data;\n      this.setState({\n        predictTable\n      });\n      return predictTable;\n    }\n    return null;\n  }\n\n  getTxEstimatedTime = (gasPrice) => {\n    let prediction = null;\n    if (this.state.predictTable){\n      this.state.predictTable.forEach((p,i) => {\n        if (!prediction && parseFloat(p.gasprice)>=parseFloat(gasPrice)){\n          prediction = p;\n          return true;\n        }\n      });\n    }\n\n    if (this.state.blockTime && prediction){\n      const pdValues = this._estimateWait(prediction,this.state.transaction.gas);\n      const blocksWait = pdValues[0];\n      const blockInterval = this.state.blockTime.block_time;\n      let txMeanSecs = blocksWait * blockInterval;\n      txMeanSecs = parseInt(txMeanSecs.toFixed(0));\n      this.functionsUtil.customLog('getTxEstimatedTime',prediction,this.state.transaction.gas,pdValues,txMeanSecs);\n      return txMeanSecs; // Customized\n    }\n\n    return null;\n  }\n\n  calculateRemainingTime = async () => {\n    let remainingTime = 0;\n    let estimatedTime = 0;\n\n    if (!this.state.transaction || this.componentUnmounted){\n      return false;\n    }\n\n    if (!this.state.transaction.blockNumber){\n      const gasPrice = parseFloat(this.functionsUtil.BNify(this.state.transaction.gasPrice).div(1e9).toString());\n      remainingTime = this.getTxEstimatedTime(gasPrice);\n    }\n\n    estimatedTime = remainingTime ? remainingTime : 0;\n\n    if (this.state.txTimestamp){\n      const currTimestamp = new Date().getTime();\n      const secondsPassed = parseInt((currTimestamp-parseInt(this.state.txTimestamp))/1000);\n      \n      // Calculate new remaining time\n      remainingTime -= secondsPassed;\n      remainingTime = Math.max(remainingTime,0);\n\n      this.functionsUtil.customLog('Estimated time',estimatedTime,'secondsPassed',secondsPassed,'New remaining time',remainingTime);\n    }\n\n    const timePassed = estimatedTime-remainingTime;\n    const percentage = estimatedTime>0 ? parseFloat(timePassed/estimatedTime) : 1;\n\n    this.setState({\n      estimatedTime,\n      remainingTime,\n      percentage\n    });\n\n    setTimeout(()=>{this.updateProgressBar()},1000);\n  }\n\n  updateProgressBar = () => {\n\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    let remainingTime = this.state.remainingTime;\n    if (remainingTime){\n      remainingTime--;\n      if (!remainingTime){\n        this.setState({\n          percentage:1,\n          ended:true\n        });\n      } else {\n        const timePassed = this.state.estimatedTime-remainingTime;\n        const percentage = parseFloat(timePassed/this.state.estimatedTime);\n        this.setState({\n          percentage,\n          remainingTime\n        });\n        setTimeout(()=>{this.updateProgressBar()},1000);\n      }\n    } else {\n      this.setState({\n        percentage:1,\n        ended:true\n      });\n    }\n  }\n\n  getTxInfo = async () => {\n\n    // Get tx timestamp\n    const txProgressBarKey = `txProgressBarData`;\n    const txHash = this.props.hash.toLowerCase();\n\n    let txProgressBarData = null;\n    let txTimestamp = null;\n    let newState = {};\n\n    if (localStorage){\n      txProgressBarData = localStorage.getItem(txProgressBarKey);\n      if (txProgressBarData){\n        txProgressBarData = JSON.parse(txProgressBarData);\n      }\n    }\n\n    if (!txProgressBarData || !txProgressBarData[txHash]){\n      txTimestamp = new Date().getTime();\n\n      const [predictTable,blockTime] = await Promise.all([\n        this.getPredictionTable(),\n        this.getBlockTime()\n      ]);\n\n      txProgressBarData = {};\n      txProgressBarData[txHash] = {\n        txTimestamp,\n        blockTime,\n        predictTable\n      };\n\n      // Save progress bar status in localStorage\n      this.functionsUtil.setLocalStorage(txProgressBarKey,JSON.stringify(txProgressBarData));\n\n      newState = txProgressBarData[txHash];\n\n      if (!predictTable || !blockTime){\n        newState.error = 'Processing transaction';\n      }\n    }\n\n    this.setState(newState);\n  }\n\n  initProgressBar = async () => {\n\n    if (!this.props.hash || !this.props.web3){\n      return false;\n    }\n\n    const newState = {\n      initialized:true\n    };\n    this.setState(newState);\n\n    const transaction = await this.getTransaction();\n\n    if (transaction){\n      await this.getTxInfo();\n      try{\n        this.calculateRemainingTime();\n      } catch (err) {\n        newState.error = 'Processing transaction';\n\n        // const errStringified = JSON.stringify(err);\n      }\n\n      this.setState(newState);\n    }\n  }\n\n  renderRemainingTime(){\n    // More than 60 seconds\n    if (this.state.remainingTime>60){\n      const minutes = Math.floor(this.state.remainingTime/60);\n      const seconds = this.state.remainingTime-(minutes*60);\n      return ('0'+minutes).substr(-2)+':'+('0'+seconds).substr(-2)+' min';\n    } else {\n      return this.state.remainingTime+'s';\n    }\n  }\n\n  render() {\n    return (\n      <Flex flexDirection={'column'} alignItems={'center'}>\n        {\n          this.state.remainingTime !== null ? (\n            this.state.ended ? (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={this.props.endMessage ? this.props.endMessage : 'Finalizing transaction...'}\n              />\n            ) : (\n              <Flex\n                mb={2}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Text mb={2} color={ this.props.textColor ? this.props.textColor : 'copyColor'}>{ this.props.waitText ? this.props.waitText : 'Remaining time:' } <Text.span color={ this.props.textColor ? this.props.textColor : 'copyColor'} fontWeight={3}>{ this.renderRemainingTime() }</Text.span></Text>\n                <Progress value={ this.state.percentage } />\n              </Flex>\n            )\n          ) : (\n            this.state.error !== null && !this.state.processing ? (\n              <Flex\n                alignItems={'center'}\n                flexDirection={'column'}\n              >\n                <Icon\n                  size={'2em'}\n                  name={'Warning'}\n                  color={'cellText'}\n                />\n                <Text\n                  mt={0}\n                  fontSize={2}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  {this.state.error}\n                </Text>\n              </Flex>\n            ) : (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={ this.state.error ? this.state.error : (this.props.hash ? (this.props.loadingMessage ? this.props.loadingMessage : 'Calculating estimated time...') : (this.props.sendingMessage ? this.props.sendingMessage : 'Sending transaction...') ) }\n              />\n            )\n          )\n        }\n        {\n          this.props.hash ? (\n            <Link\n              mt={0}\n              target={'_blank'}\n              hoverColor={'dark-gray'}\n              rel={\"nofollow noopener noreferrer\"}\n              href={`https://etherscan.io/tx/${this.props.hash}`}\n              color={this.props.textColor ? this.props.textColor : 'cellText'}\n            >\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <Text\n                  fontSize={0}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  View in Etherscan\n                </Text>\n                <Icon\n                  ml={1}\n                  size={'0.75em'}\n                  name={'OpenInNew'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                />\n              </Flex>\n            </Link>\n          ) : typeof this.props.cancelTransaction === 'function' ? (\n              <Link\n                mt={0}\n                href={`javascript:void(0)`}\n                onClick={ e => this.props.cancelTransaction() }\n                color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                hoverColor={this.props.cancelTextHoverColor ? this.props.cancelTextHoverColor : 'dark-gray'}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'center'}\n                >\n                  <Text\n                    fontSize={0}\n                    textAlign={'center'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  >\n                    Cancel transaction\n                  </Text>\n                  <Icon\n                    ml={1}\n                    size={'0.85em'}\n                    name={'Cancel'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  />\n                </Flex>\n              </Link>\n          ) : null\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TxProgressBar;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass AssetSelector extends Component {\n\n  state = {\n    options:null,\n    defaultValue:null,\n    CustomOptionValue:null,\n    CustomValueContainer:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadComponents(){\n    const options = Object.keys(this.props.availableTokens).map(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      return {\n        value:token,\n        label:token,\n        tokenConfig\n      };\n    });\n\n    const defaultValue = this.props.selectedToken ? options.find(v => (v.value.toUpperCase() === this.props.selectedToken.toUpperCase())) : null;\n\n    const CustomOptionValue = props => {\n      const token = props.value;\n      const tokenConfig = props.data.tokenConfig;\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n          {\n            this.state.props.showCustomField ? (\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:this.state.props.showCustomField,\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n            ) : this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : defaultValue;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const token = selectProps.value;\n      const tokenConfig = selectProps.tokenConfig;\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n\n          {\n            this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    this.setState({\n      options,\n      defaultValue,\n      CustomOptionValue,\n      CustomValueContainer\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadComponents();\n\n    this.setState({\n      props:this.props\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const availableTokensChanged = JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n    if (availableTokensChanged || selectedTokenChanged){\n      this.loadComponents();\n    }\n  }\n\n  render() {\n    if (!this.state.options || !this.state.defaultValue || !this.state.CustomOptionValue || !this.state.CustomValueContainer || !this.props.availableTokens || !Object.keys(this.props.availableTokens).length){\n      return null;\n    }\n\n    return (\n      <GenericSelector\n        {...this.props}\n        name={'assets'}\n        options={this.state.options}\n        innerProps={this.props.innerProps}\n        isSearchable={this.props.isSearchable}\n        defaultValue={this.state.defaultValue}\n        selectedToken={this.props.selectedToken}\n        CustomOptionValue={this.state.CustomOptionValue}\n        CustomValueContainer={this.state.CustomValueContainer}\n        onChange={ this.props.onChange ? this.props.onChange : this.props.changeToken}\n      />\n    );\n  }\n}\n\nexport default AssetSelector;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"Tos_headerContainer__23W_f\",\"headerBgFiller\":\"Tos_headerBgFiller__36Nfk\",\"bgContainer\":\"Tos_bgContainer__rX7uJ\",\"list\":\"Tos_list__3bMLG\",\"textContainer\":\"Tos_textContainer__3hUuq\"};","import theme from '../theme';\nimport React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Icon, Link, Image } from \"rimble-ui\";\nimport ShortHash from \"../utilities/components/ShortHash\";\n\nclass TransactionField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadField();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const hashChanged = prevProps.hash !== this.props.hash;\n    const accountChanged = prevProps.account !== this.props.account;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    if (fieldChanged || hashChanged || accountChanged){\n      this.loadField();\n    }\n  }\n\n  async loadField(){\n    const fieldInfo = this.props.fieldInfo;\n    if (this.props.hash && this.props.account){\n      switch (fieldInfo.name){\n        case 'icon':\n        break;\n        case 'hash':\n          \n        break;\n        case 'action':\n          \n        break;\n        case 'date':\n        break;\n        case 'status':\n        break;\n        case 'amount':\n        break;\n        case 'asset':\n        break;\n        default:\n        break;\n      }\n    }\n  }\n\n  render(){\n    let icon = null;\n    let color = null;\n    let output = null;\n    let bgColor = theme.colors.transactions.actionBg.default;\n    const fieldInfo = this.props.fieldInfo;\n    const transaction = this.props.transaction;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      style:{\n        maxWidth:'100%',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis'\n      },\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    switch (fieldInfo.name){\n      case 'icon':\n        if (transaction.action){\n          color = theme.colors.transactions.action[transaction.action.toLowerCase()] ? theme.colors.transactions.action[transaction.action.toLowerCase()] : color;\n          bgColor = theme.colors.transactions.actionBg[transaction.action.toLowerCase()] ? theme.colors.transactions.actionBg[transaction.action.toLowerCase()] : bgColor;\n        }\n        switch (transaction.action.toLowerCase()) {\n          case 'deposit':\n          case 'curveout':\n          case 'curvezapout':\n          case 'curvedepositout':\n            icon = \"ArrowDownward\";\n          break;\n          case 'boost':\n            icon = \"TrendingUp\";\n          break;\n          case 'redeem':\n          case 'curvein':\n          case 'curvezapin':\n          case 'curvedepositin':\n            icon = \"ArrowUpward\";\n          break;\n          case 'send':\n            icon = \"Send\";\n          break;\n          case 'receive':\n            icon = \"Redo\";\n          break;\n          case 'migrate':\n            // icon = \"Sync\";\n            icon = \"Repeat\";\n          break;\n          case 'swap':\n            icon = \"SwapHoriz\";\n          break;\n          case 'swapout':\n            icon = \"SwapHoriz\";\n          break;\n          case 'withdraw':\n            icon = \"ArrowUpward\";\n          break;\n          default:\n            icon = \"Refresh\";\n          break;\n        }\n        output = (\n          <Flex\n            p={'5px'}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            backgroundColor={bgColor}\n            justifyContent={'center'}\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={this.props.isMobile ? '1em' : '1.4em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'hash':\n        if (transaction.hash){\n          output = (\n            <Link\n              target={'_blank'}\n              rel={'nofollow noopener noreferrer'}\n              href={`https://etherscan.io/tx/${transaction.hash}`}\n            >\n              <ShortHash\n                fontSize={1}\n                color={'white'}\n                {...fieldProps}\n                hash={transaction.hash}\n              />\n            </Link>\n          );\n        }\n      break;\n      case 'action':\n        let action = transaction.action;\n        switch (transaction.action) {\n          case 'Swap':\n            action = \"Swap In\";\n          break;\n          case 'SwapOut':\n            action = \"Swap Out\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Text {...fieldProps}>{action.toUpperCase()}</Text>\n        );\n      break;\n      case 'date':\n        const formattedDate = transaction.momentDate.format('DD MMM, YYYY');\n        output = (\n          <Text {...fieldProps}>{formattedDate}</Text>\n        );\n      break;\n      case 'statusIcon':\n        color = theme.colors.transactions.status[transaction.status.toLowerCase()];\n        switch (transaction.status) {\n          case 'Completed':\n            icon = \"Done\";\n          break;\n          case 'Pending':\n            icon = \"Timelapse\";\n          break;\n          case 'Failed':\n            icon = \"ErrorOutline\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Flex\n            p={[0,'1px']}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            width={['24px','26px']}\n            height={['24px','26px']}\n            justifyContent={'center'}\n            border={ this.props.isMobile ? `1px solid ${color}` : `2px solid ${color}` }\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={ this.props.isMobile ? '1em' : '1.2em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'status':\n        output = (\n          <Text {...fieldProps}>{transaction.status}</Text>\n        );\n      break;\n      case 'amount':\n        output = (\n          <SmartNumber {...fieldProps} number={transaction.amount} />\n        );\n      break;\n      case 'tokenIcon':\n        output = (\n          <Image src={`images/tokens/${transaction.tokenSymbol.toUpperCase()}.svg`} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        output = (\n          <Text {...fieldProps}>{transaction.tokenSymbol}</Text>\n        );\n      break;\n      default:\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TransactionField;\n","import Select from 'react-select';\nimport React, { Component } from 'react';\nimport { Flex, Text, Input } from \"rimble-ui\";\nimport styles from './GenericSelector.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass GenericSelector extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadComponents();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const optionsChanged = JSON.stringify(prevProps.options) !== JSON.stringify(this.props.options);\n    const defaultValueChanged = JSON.stringify(prevProps.defaultValue) !== JSON.stringify(this.props.defaultValue);\n    const componentsChanged = prevProps.CustomOptionValue !== this.props.CustomOptionValue || prevProps.CustomValueContainer !== this.props.CustomValueContainer;\n\n    if (optionsChanged || selectedTokenChanged || defaultValueChanged || componentsChanged){\n      this.loadComponents();\n    }\n  }\n\n  async loadComponents(){\n    \n    const ControlComponent = props => {\n      const cardProps = Object.assign(\n        props.innerProps,\n        {\n          p:2,\n          width:1,\n          style:{cursor:'pointer'}\n        },\n        (this.props.innerProps ? this.props.innerProps : {})\n      );\n\n      if (props.menuIsOpen){\n        cardProps.boxShadow = 4;\n      }\n      return (\n        <DashboardCard\n          isInteractive={true}\n          cardProps={cardProps}\n        >\n          <Flex\n            width={1}\n            flexDirection={'row'}\n          >\n            {props.children}\n          </Flex>\n        </DashboardCard>\n      );\n    };\n\n    const CustomIndicatorSeparator = props => null;\n\n    const CustomMenu = props => {\n      const cardProps = Object.assign(props.innerProps,{\n        mt:2,\n        zIndex:1,\n        boxShadow:null,\n        position:'absolute'\n      });\n      return (\n        <DashboardCard\n          cardProps={cardProps}\n        >\n          {props.children}\n        </DashboardCard>\n      );\n    }\n\n    const CustomValueContainer = this.props.CustomValueContainer ? this.props.CustomValueContainer : props => {\n      return (\n        <Flex\n          {...props.innerProps}\n        >\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text\n              fontWeight={3}\n            >\n              {props.selectProps.value.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomOptionValue = this.props.CustomOptionValue ? this.props.CustomOptionValue : (props) => {\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n        >\n          <Text>\n            {props.label}\n          </Text>\n        </Flex>\n      );\n    };\n\n    const CustomInputContainer = this.props.CustomInputContainer ? this.props.CustomInputContainer : (props) => {\n\n      if (!props.selectProps.isSearchable){\n        return null;\n      }\n\n      return (\n        <Input\n          {...props}\n          fontSize={this.props.theme.fontSizes[2]}\n          color={this.props.theme.colors.copyColor}\n          fontWeight={this.props.theme.fontWeights[3]}\n          fontFamily={this.props.theme.fonts.sansSerif}\n          backgroundColor={this.props.theme.colors.cardBg}\n          className={[styles.searchInput,this.props.themeMode==='dark' ? styles.dark : null,!props.selectProps.menuIsOpen ? styles.searchInputHidden : null]}\n        />\n      );\n    };\n\n    const CustomOption = (props) => {\n\n      const options = props.selectProps.options;\n      let selectedValue = props.selectProps && props.selectProps.value && props.selectProps.value.value;\n\n      // Check if the selectedValue is included in options\n      if (selectedValue && options.map( o => o.value ).indexOf(selectedValue) === -1 && this.props.defaultValue){\n        selectedValue = this.props.defaultValue.value;\n      }\n\n      // Don't show selected value\n      if (selectedValue && selectedValue === props.value){\n        return null;\n      }\n\n      return (\n        <Flex\n          px={3}\n          py={2}\n          width={1}\n          {...props.innerProps}\n          alignItems={'center'}\n          flexDirection={'row'}\n          style={{cursor:'pointer'}}\n          justifyContent={'flex-start'}\n          className={styles.genericSelector}\n          backgroundColor={ props.isFocused ? 'selectBgFocused' : 'selectBg' }\n        >\n          <CustomOptionValue\n            {...props}\n          />\n        </Flex>\n      );\n    }\n\n    await this.setState({\n      CustomMenu,\n      CustomOption,\n      ControlComponent,\n      CustomValueContainer,\n      CustomInputContainer,\n      CustomIndicatorSeparator\n    });\n  }\n\n  render() {\n    const isSearchable = typeof this.props.isSearchable !== 'undefined' ? this.props.isSearchable : false;\n    return (\n      <Select\n        name={this.props.name}\n        isSearchable={isSearchable}\n        options={this.props.options}\n        defaultValue={this.props.defaultValue}\n        onChange={ v => this.props.onChange(v.value) }\n        components={{\n            Menu: this.state.CustomMenu,\n            Option: this.state.CustomOption,\n            Control: this.state.ControlComponent,\n            Input: this.state.CustomInputContainer,\n            SingleValue: this.state.CustomValueContainer,\n            IndicatorSeparator: this.state.CustomIndicatorSeparator\n        }}\n      />\n    );\n  }\n}\n\nexport default GenericSelector;\n","import { Heading } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass Title extends Component {\n  render() {\n    const props = {\n      fontWeight:4,\n      fontSize:[4,6],\n      color:'copyColor',\n      textAlign:'center',\n      lineHeight:'initial',\n    };\n\n    // Replace props\n    if (this.props && Object.keys(this.props).length){\n      Object.keys(this.props).forEach(p => {\n        props[p] = this.props[p];\n      });\n    }\n\n    const HeadingComponent = this.props.component ? this.props.component : Heading.h1;\n\n    return (\n      <HeadingComponent\n        {...props}\n      >\n        {this.props.children}\n      </HeadingComponent>\n    );\n  }\n}\n\nexport default Title;\n","/*\nTheming: https://github.com/plouc/nivo/issues/308\n*/\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n\nclass GenericChart extends Component {\n  state = {\n    width:null,\n    height:null\n  };\n\n  componentUnmounted = false;\n\n  componentWillMount() {\n    window.addEventListener('resize', this.handleWindowSizeChange.bind(this));\n  }\n\n  componentWillUnmount() {\n    this.componentUnmounted = true;\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidMount(){\n    this.handleWindowSizeChange();\n  }\n\n  componentDidUpdate(prevProps){\n    if (prevProps.isMobile !== this.props.isMobile){\n      this.handleWindowSizeChange();\n    }\n  }\n\n  handleWindowSizeChange(){\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    const newState = {...this.state};\n\n    if (this.props.parentId){\n      const chartContainer = document.getElementById(this.props.parentId);\n      if (chartContainer){\n        const chartWidth = parseFloat(chartContainer.offsetWidth)>0 ? chartContainer.offsetWidth : 0;\n\n        if (chartWidth && chartWidth !== newState.width){\n          newState.width = chartWidth;\n        }\n      }\n    }\n\n    if (!newState.width && this.props.width && this.props.width !== newState.width) {\n      newState.width = this.props.width;\n    }\n\n    if (this.props.parentIdHeight){\n      const chartContainerH = document.getElementById(this.props.parentIdHeight);\n      if (chartContainerH){\n        const chartHeight = parseFloat(chartContainerH.offsetWidth)>0 ? chartContainerH.offsetWidth : 0;\n        if (chartHeight && chartHeight !== newState.height){\n          newState.height = chartHeight;\n        }\n      }\n    }\n\n    if (!newState.height && this.props.height && this.props.height !== newState.height) {\n      newState.height = this.props.height;\n    }\n\n    if (Object.keys(newState).length>0){\n      this.setState(newState);\n    }\n  };\n\n  render() {\n    const ChartType = this.props.type;\n\n    const height = this.state.height && !isNaN(this.state.height) ? parseInt(this.state.height) : 350;\n    const width = this.state.width && !isNaN(this.state.width) ? parseInt(this.state.width) : 0;\n\n    let chartProps = Object.assign({},this.props);\n    chartProps = {\n      ...chartProps,\n      height,\n      width\n    }\n\n    return chartProps.showLoader && (!chartProps.data || !width || !height) ? (\n      <FlexLoader\n        flexProps={{\n          flexDirection:'row',\n          minHeight:height\n        }}\n        loaderProps={ this.props.loaderProps ? this.props.loaderProps : {\n          size:'30px'\n        }}\n        textProps={{\n          ml:2\n        }}\n        text={ this.props.loaderText !== undefined ? this.props.loaderText : 'Loading graph data...'}\n      />\n    ) : this.props.data && (\n      <ChartType\n        {...chartProps}\n      />\n    )\n  }\n}\n\nexport default GenericChart;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"defaultOpacity\":\"DashboardCard_defaultOpacity__1B1rs\",\"hidden\":\"DashboardCard_hidden__8pO5t\",\"interactive\":\"DashboardCard_interactive__2adxr\",\"rainbow\":\"DashboardCard_rainbow__3HCI7\",\"disabled\":\"DashboardCard_disabled__uqHO2\"};","import { Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass FastBalanceSelector extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n\n    let cardProps = {\n      p:2,\n      width:0.23,\n      onMouseDown:this.props.onMouseDown\n    };\n\n    let textProps = {\n      fontSize:2,\n      fontWeight:3,\n      textAlign:'center',\n      color:this.props.isActive ? 'copyColor' : 'legend'\n    }\n\n    cardProps = this.functionsUtil.replaceArrayProps(cardProps,this.props.cardProps);\n    textProps = this.functionsUtil.replaceArrayProps(textProps,this.props.textProps);\n\n    return (\n      <DashboardCard\n        isInteractive={true}\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n      >\n        <Text \n          {...textProps}\n        >\n          {this.props.percentage}%\n        </Text>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default FastBalanceSelector;","import React, { Component } from 'react';\nimport { Flex, Box, Text, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\n\nclass TokenSwap extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async loadKyberWidget(){\n\n    if (!this.state.selectedFromToken || !this.state.selectedDestToken){\n      return false;\n    }\n\n    const provider = 'kyberSwap';\n    const providerInfo = this.functionsUtil.getGlobalConfig(['payments','providers',provider]);\n    if (providerInfo.enabled && providerInfo.remoteResources){\n\n      const globalConfigs = this.functionsUtil.getGlobalConfigs();\n      const remoteResources = providerInfo.remoteResources;\n\n      Object.keys(remoteResources).forEach((url,j) => {\n\n        const resourceType = url.split('.').pop().toLowerCase();\n\n        switch (resourceType){\n          case 'js':\n            const scriptID = `script_${provider}_${j}_${this.state.selectedFromToken}_${this.state.selectedDestToken}`;\n\n            if (!document.getElementById(scriptID)){\n              const script = document.createElement(\"script\");\n              const remoteResourceParams = remoteResources[url];\n              const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n              const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n              if (precall && typeof precall === 'function'){\n                const precallProps = {\n                  baseToken:this.state.selectedFromToken,\n                  selectedToken:this.state.selectedDestToken,\n                  buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n                };\n                precall(precallProps,globalConfigs,providerInfo);\n              }\n\n              if (callback && typeof callback === 'function'){\n                if (script.readyState) {  // only required for IE <9\n                  script.onreadystatechange = function() {\n                    if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                      script.onreadystatechange = null;\n                      callback();\n                    }\n                  };\n                } else {  //Others\n                  script.onload = callback;\n                }\n              }\n\n              script.id = scriptID;\n              script.className = `script_${provider}`;\n              script.src = url;\n              script.async = true;\n\n              if (remoteResourceParams && remoteResourceParams.parentElement){\n                remoteResourceParams.parentElement.appendChild(script)\n              } else {\n                document.head.appendChild(script);\n              }\n            }\n          break;\n          case 'css':\n            const stylesheetId = `stylesheet_${provider}_${j}`;\n\n            if (!document.getElementById(stylesheetId)){\n              const style = document.createElement(\"link\");\n\n              style.id = stylesheetId;\n              style.rel = 'stylesheet';\n              style.href = url;\n\n              document.head.appendChild(style);\n            }\n          break;\n          default:\n          break;\n        }\n      });\n    }\n\n    this.setState({\n      providerInfo\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const fromTokenChanged = prevState.selectedFromToken !== this.state.selectedFromToken;\n    const destTokenChanged = prevState.selectedDestToken !== this.state.selectedDestToken;\n    if ((fromTokenChanged ||  destTokenChanged) && this.state.selectedFromToken && this.state.selectedDestToken){\n      this.loadKyberWidget();\n    }\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n    const supportedTokens = this.functionsUtil.getGlobalConfig(['payments','providers','kyberSwap','supportedTokens']);\n\n    supportedTokens.forEach( token => {\n      if (token !== selectedFromToken){\n        if (!selectedDestToken){\n          selectedDestToken = token;\n        }\n        availableDestinationTokens[token] = {\n          token\n        };\n      }\n    });\n\n    const baseToken = this.functionsUtil.getGlobalConfig(['baseToken']);\n    if (baseToken !== selectedFromToken){\n      availableDestinationTokens[baseToken] = {\n        token:baseToken\n      };\n    }\n\n    this.setState({\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n    this.setState({\n      selectedDestToken\n    });\n  }\n\n  swap = () => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    const paymentProvider = this.state.providerInfo;\n    const initProps = {\n      baseToken:this.state.selectedFromToken,\n      selectedToken:this.state.selectedDestToken,\n      buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    };\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(initProps,globalConfigs) : null;\n\n    // Render the Payment Provider\n    if (typeof paymentProvider.render === 'function'){\n      paymentProvider.render(initParams,null,initProps);\n    }\n\n    // Send GA event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Tools',\n      eventAction: 'TokenSwap',\n      eventLabel: `${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to swap:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              showBalance={false}\n              isSearchable={true}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  showBalance={false}\n                  isSearchable={true}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          <Flex\n            mt={2}\n            width={1}\n            justifyContent={'center'}\n          >\n            <Button\n              my={2}\n              mx={[0, 2]}\n              size={'medium'}\n              borderRadius={4}\n              mainColor={'blue'}\n              onClick={ e => this.swap(e) }\n              disabled={ !this.state.selectedFromToken || !this.state.selectedDestToken }\n            >\n              SWAP TOKENS\n            </Button>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenSwap;\n","import React, { Component } from 'react';\nimport IconBox from '../IconBox/IconBox';\nimport ExtLink from '../ExtLink/ExtLink';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Box, Text, Icon, Link, Input } from \"rimble-ui\";\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\n\nclass SendTxWithBalance extends Component {\n\n  state = {\n    processing:{\n      txHash:null,\n      loading:false\n    },\n    inputValue:null,\n    txSucceeded:false,\n    buttonDisabled:true,\n    contractApproved:false,\n    fastBalanceSelector:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    await this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = prevProps.action !== this.props.action;\n    const accountChanged = prevProps.account !== this.props.account;\n    const tokenBalanceChanged = prevProps.tokenBalance !== this.props.tokenBalance;\n    const contractChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    if (actionChanged || accountChanged || tokenBalanceChanged || contractChanged || tokenConfigChanged){\n      await this.loadData();\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    if (contractApprovedChanged){\n      if (typeof this.props.contractApproved === 'function'){\n        this.props.contractApproved(this.state.contractApproved);\n      }\n    }\n\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector !== prevState.fastBalanceSelector;\n    if (fastBalanceSelectorChanged || actionChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      if (typeof this.props.changeInputCallback === 'function'){\n        this.props.changeInputCallback(this.state.inputValue);\n      }\n      this.checkButtonDisabled();\n    }\n  }\n\n  changeInputValue = (e) => {\n    const fastBalanceSelector = null;\n    const inputValue = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n    this.setState((prevState) => ({\n      inputValue,\n      fastBalanceSelector\n    }));\n  }\n\n  setInputValue = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n    const inputValue = this.props.tokenBalance ? this.functionsUtil.BNify(this.props.tokenBalance).times(selectedPercentage) : null;\n    this.setState({\n      inputValue\n    });\n  }\n\n  getFastBalanceSelector = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    return this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n  }\n\n  setFastBalanceSelector = (fastBalanceSelector) => {\n    this.setState({\n      fastBalanceSelector\n    });\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!amount){\n      amount = this.state.inputValue;\n    }\n    amount = this.functionsUtil.BNify(amount);\n    const buttonDisabled = amount.isNaN() || amount.lte(0) || amount.gt(this.props.tokenBalance);\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  approve = async () => {\n    // Check if the migration contract is approved\n    const contractApproved = await this.checkContractApproved();\n\n    if (!contractApproved){\n\n      const callbackApprove = (tx,error) => {\n        // Send Google Analytics event\n        const eventData = {\n          eventAction: 'approve',\n          eventCategory: 'CurveDeposit',\n          eventLabel: tx ? tx.status : null\n        };\n\n        const txSucceeded = tx && tx.status === 'success';\n\n        if (error){\n          eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n        }\n\n        // Send Google Analytics event\n        if (error || eventData.status !== 'error'){\n          this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n        }\n\n        this.setState((prevState) => ({\n          contractApproved: txSucceeded, // True\n          processing: {\n            ...prevState.processing,\n            txHash:null,\n            loading:false\n          }\n        }));\n\n        if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n          this.props.callbackApprove(tx);\n        }\n      };\n\n      const callbackReceiptApprove = (tx) => {\n        const txHash = tx.transactionHash;\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            txHash\n          }\n        }));\n      };\n\n      this.functionsUtil.enableERC20(this.props.tokenConfig.token,this.props.contractInfo.address,callbackApprove,callbackReceiptApprove);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash:null,\n          loading:true\n        },\n        contractApproved:false\n      }));\n    } else {\n      this.setState({\n        contractApproved:true\n      });\n    }\n  }\n\n  executeTx = async () => {\n\n    const inputValue = this.state.inputValue ? this.functionsUtil.BNify(this.state.inputValue) : null;\n    if (!inputValue){\n      return false;\n    }\n\n    const _amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n    const params = await this.props.getTransactionParams(_amount);\n\n    const callback = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventLabel: tx.status,\n        eventCategory: `CurveDeposit`,\n        eventValue: inputValue.toFixed(),\n        eventAction: this.props.tokenConfig.token,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState({\n        txSucceeded,\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      });\n\n      if (txSucceeded){\n        // Reset input\n        this.changeInputValue({\n          target:{\n            value:0\n          }\n        });\n        // Call upper component callback\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx,_amount,params);\n        }\n      }\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    if (params){\n      const {\n        methodName,\n        methodParams\n      } = params;\n\n      const value = params.value || null;\n\n      const contractName = this.props.contractInfo.name;\n      this.props.contractMethodSendWrapper(contractName, methodName, methodParams, value, callback, callbackReceipt);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:true\n        }\n      }));\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async checkContractApproved(){\n\n    if (this.props.approveEnabled !== undefined && !this.props.approveEnabled){\n      return true;\n    }\n\n    const contractInfo = await this.props.initContract(this.props.contractInfo.name,this.props.contractInfo.address,this.props.contractInfo.abi);\n    if (contractInfo){\n      const contractApproved = await this.functionsUtil.checkTokenApproved(this.props.tokenConfig.token,this.props.contractInfo.address,this.props.account);\n      return contractApproved;\n    }\n    return null;\n  }\n\n  async loadData(){\n    const inputValue = null;\n    const contractApproved = await this.checkContractApproved();\n    this.setState({\n      inputValue,\n      contractApproved\n    });\n  }\n\n  approveCallback = () => {\n    this.loadData();\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'stretch'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          this.props.tokenConfig && this.props.tokenBalance && this.functionsUtil.BNify(this.props.tokenBalance).gt(0) ? (\n            <Box\n              width={1}\n            >\n              {\n                this.props.infoBox && (\n                  <IconBox\n                    cardProps={{\n                      mb:3\n                    }}\n                    {...this.props.infoBox}\n                  />\n                )\n              }\n              {\n                this.props.steps && this.props.steps.length>0 && (\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                      px:[2,4]\n                    }}\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    > \n                      {\n                        this.props.steps.map( (step,stepIndex) => (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            key={`step_${stepIndex}`}\n                          >\n                            <Icon\n                              size={'1.5em'}\n                              name={ step.completed ? 'CheckBox' : step.icon}\n                              color={ step.completed ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                            />\n                            {\n                              step.link ? (\n                                <ExtLink\n                                  ml={2}\n                                  fontSize={2}\n                                  color={'blue'}\n                                  fontWeight={1}\n                                  href={step.link}\n                                  textAlign={'left'}\n                                  hoverColor={'blue'}\n                                >\n                                  {step.description}\n                                </ExtLink>\n                              ) : (\n                                <Text\n                                  ml={2}\n                                  fontSize={2}\n                                  fontWeight={1}\n                                  color={'cellText'}\n                                  textAlign={'left'}\n                                >\n                                  {step.description}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        ) )\n                      }\n                    </Flex>\n                  </DashboardCard>\n                )\n              }\n              {\n                !this.state.contractApproved ?\n                  this.state.processing.loading ? (\n                    <Flex\n                      mt={3}\n                      flexDirection={'column'}\n                    >\n                      <TxProgressBar\n                        web3={this.props.web3}\n                        waitText={`Approve estimated in`}\n                        hash={this.state.processing.txHash}\n                        endMessage={`Finalizing approve request...`}\n                        cancelTransaction={this.cancelTransaction.bind(this)}\n                      />\n                    </Flex>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3,\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'LockOpen'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          {this.props.approveDescription}\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:3,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.approve.bind(this)}\n                        >\n                          Approve\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  )\n                : this.state.processing.loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      web3={this.props.web3}\n                      waitText={`Deposit estimated in`}\n                      hash={this.state.processing.txHash}\n                      endMessage={`Finalizing deposit request...`}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                    />\n                  </Flex>\n                ) : (\n                  <Box\n                    mt={2}\n                    width={1}\n                  >\n                    <Flex\n                      mt={2}\n                      mb={3}\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        mb={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                      >\n                        {\n                          this.props.balanceSelectorInfo && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                textAlign={'left'}\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                                color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                              >\n                                {this.props.balanceSelectorInfo.text}\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                        {\n                          this.props.tokenBalance && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'flex-end'}\n                            >\n                              <Link\n                                fontSize={1}\n                                fontWeight={3}\n                                color={'dark-gray'}\n                                textAlign={'right'}\n                                hoverColor={'copyColor'}\n                                onClick={ (e) => this.setFastBalanceSelector(100) }\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                              >\n                                Balance: {this.props.tokenBalance.toFixed(this.props.isMobile ? 2 : 4)} {this.props.tokenConfig.token}\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                      <Input\n                        min={0}\n                        type={\"number\"}\n                        required={true}\n                        height={'3.4em'}\n                        borderRadius={2}\n                        fontWeight={500}\n                        borderColor={'cardBorder'}\n                        backgroundColor={'cardBg'}\n                        boxShadow={'none !important'}\n                        placeholder={`Insert amount`}\n                        onChange={this.changeInputValue.bind(this)}\n                        border={`1px solid ${this.props.theme.colors.divider}`}\n                        value={this.state.inputValue !== null ? this.functionsUtil.BNify(this.state.inputValue).toFixed() : ''}\n                      />\n                      <Flex\n                        mt={2}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        {\n                          [25,50,75,100].map( percentage => (\n                            <FastBalanceSelector\n                              percentage={percentage}\n                              key={`selector_${percentage}`}\n                              onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                              isActive={this.state.fastBalanceSelector === parseInt(percentage)}\n                            />\n                          ))\n                        }\n                      </Flex>\n                      <Flex\n                        mt={2}\n                        justifyContent={'center'}\n                      >\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2],\n                            style:{\n                              textTransform:'capitalize'\n                            },\n                            disabled:this.state.buttonDisabled\n                          }}\n                          handleClick={this.executeTx.bind(this)}\n                        >\n                          {this.props.action}\n                        </RoundButton>\n                      </Flex>\n                    </Flex>\n                  </Box>\n                )\n              }\n            </Box>\n          ) : this.props.children\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SendTxWithBalance;","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass ETHWrapper extends Component {\n\n  state = {\n    action:null,\n    infoBox:null,\n    balanceETH:null,\n    balanceWETH:null,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    approveEnabled:true,\n    approveDescription:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadBalance();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = prevState.action !== this.state.action;\n    if (actionChanged){\n      this.updateActionData();\n    }\n  }\n\n  async loadBalance(){\n\n    // Init Contract\n    await this.props.initContract(this.props.toolProps.contract.name,this.props.toolProps.contract.address,this.props.toolProps.contract.abi);\n\n    // Load Balances\n    const [\n      balanceETH,\n      balanceWETH\n    ] = await Promise.all([\n      this.functionsUtil.getETHBalance(this.props.account),\n      this.functionsUtil.getTokenBalance('WETH',this.props.account)\n    ]);\n\n    const action = this.state.action || 'wrap';\n    const tokenBalance = action === 'wrap' ? balanceETH : balanceWETH;\n\n    this.setState({\n      action,\n      balanceETH,\n      balanceWETH,\n      tokenBalance\n    });\n  }\n\n  updateActionData(){\n    let infoBox = null;\n    let tokenConfig = null;\n    let tokenBalance = null;\n    let selectedToken = null;\n    let approveEnabled = true;\n    let approveDescription = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        selectedToken = 'ETH';\n        approveEnabled = true;\n        tokenConfig = {\n          token:'ETH',\n          decimals:18\n        };\n        tokenBalance = this.state.balanceETH;\n        approveDescription = 'To Mint new WETH you need to approve the Smart-Contract first';\n        infoBox = {\n          icon:'FileDownload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.deposit\n          // },\n          text:`Wrap your ETH and get WETH with a 1:1 ratio`\n        };\n      break;\n      case 'unwrap':\n        selectedToken = 'WETH';\n        approveEnabled = false;\n        tokenBalance = this.state.balanceWETH;\n        tokenConfig = this.props.toolProps.contract;\n        approveDescription = 'To withdraw your ETH you need to approve the Smart-Contract first';\n        infoBox = {\n          icon:'FileUpload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.redeem\n          // },\n          text:`Unwrap your WETH and get back ETH with a 1:1 ratio`\n        };\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      infoBox,\n      tokenConfig,\n      tokenBalance,\n      selectedToken,\n      approveEnabled,\n      approveDescription\n    });\n  }\n\n  setAction(action){\n    this.setState({\n      action\n    });\n  }\n\n  transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        const mintLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.contract.address.toLowerCase() ) : null;\n        let mintedAmount = mintLog ? parseInt(mintLog.data,16) : amount;\n        mintedAmount = this.functionsUtil.fixTokenDecimals(mintedAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${mintedAmount.toFixed(4)} WETH</strong>`\n        }\n      break;\n      case 'unwrap':\n        const withdrawLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.contract.address.toLowerCase() ) : null;\n        let withdrawnAmount = withdrawLog ? parseInt(withdrawLog.data,16) : amount;\n        withdrawnAmount = this.functionsUtil.fixTokenDecimals(withdrawnAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${withdrawnAmount.toFixed(4)} ETH</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Update balances\n    this.loadBalance();\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    const params = {};\n    switch (this.state.action){\n      case 'wrap':\n        params.value = amount;\n        params.methodParams = [];\n        params.methodName = 'deposit';\n      break;\n      case 'unwrap':\n        params.value = null;\n        params.methodParams = [amount];\n        params.methodName = 'withdraw';\n      break;\n      default:\n      break;\n    }\n    return params;\n  }\n\n  render() {\n\n    const fullWidth = !!this.props.fullWidth;\n    const depositOnly = !!this.props.depositOnly;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        mt={[2,fullWidth ? 2 : 3]}\n      >\n        <Flex\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n          width={[1,fullWidth ? 1 : 0.36]}\n        >\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : (\n              <Box\n                width={1}\n              >\n                {\n                  !depositOnly && (\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        mb={2}\n                      >\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Wrap'}\n                          iconColor={'wrap'}\n                          icon={'ArrowDownward'}\n                          iconBgColor={'#ced6ff'}\n                          isActive={ this.state.action === 'wrap' }\n                          handleClick={ e => this.setAction('wrap') }\n                        />\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Unwrap'}\n                          iconColor={'redeem'}\n                          icon={'ArrowUpward'}\n                          iconBgColor={'#ceeff6'}\n                          isActive={ this.state.action === 'unwrap' }\n                          handleClick={ e => this.setAction('unwrap') }\n                        />\n                      </Flex>\n                    </Flex>\n\n                  )\n                }\n                <Box\n                  width={1}\n                  my={fullWidth ? 2 : 3}\n                >\n                  {\n                    this.state.tokenBalance!==null ? (\n                      <SendTxWithBalance\n                        {...this.props}\n                        approveEnabled={false}\n                        action={this.state.action}\n                        infoBox={this.state.infoBox}\n                        tokenConfig={this.state.tokenConfig}\n                        tokenBalance={this.state.tokenBalance}\n                        contractInfo={this.props.toolProps.contract}\n                        callback={this.transactionSucceeded.bind(this)}\n                        approveDescription={this.state.approveDescription}\n                        // changeInputCallback={this.changeInputCallback.bind(this)}\n                        getTransactionParams={this.getTransactionParams.bind(this)}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} to {this.state.action} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </SendTxWithBalance>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                        }}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading Balance...'}\n                        />\n                      </DashboardCard>\n                    )\n                  }\n                </Box>\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default ETHWrapper;\n","import React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ButtonLoader from '../ButtonLoader/ButtonLoader';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport { Flex, Box, Text, Input, Link, Progress } from \"rimble-ui\";\n\nclass NexusMutual extends Component {\n\n  state = {\n    step:1,\n    steps:{\n      1:'Get Quote',\n      2:'Enable NXS',\n      3:'Buy Cover'\n    },\n    loading:false,\n    amountValue:'',\n    periodValue:'',\n    quoteResponse:null,\n    selectedToken:'DAI'\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async changeSelectedToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  changeAmount = (e) => {\n    const amountValue = e.target.value.length && !isNaN(e.target.value) ? e.target.value : '';\n    this.setState({\n      amountValue\n    });\n  }\n\n  changePeriod = (e) => {\n\n    const periodValue = e.target.value.length && !isNaN(e.target.value) ? e.target.value : '';\n    this.setState({\n      periodValue\n    });\n  }\n\n  async getQuote() {\n\n    this.setState({\n      loading:true\n    });\n\n    let quoteResponse = await this.functionsUtil.makeRequest(`https://api.nexusmutual.io/getQuote/${this.state.amountValue}/${this.state.selectedToken}/${this.state.periodValue}/0x78751B12Da02728F467A44eAc40F5cbc16Bd7934/M1`);\n\n    const newState = {\n      loading:false\n    };\n\n    if (quoteResponse){\n      newState.quoteResponse = quoteResponse.data;\n    }\n\n    this.setState({\n      quoteResponse\n    });\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          mb={3}\n          width={[1,0.36]}\n          flexDirection={'column'}\n        >\n          <Flex\n            mb={1}\n            width={1}\n            flexDirection={'row'}\n            justifyContent={'space-between'}\n          >\n            {\n              Object.keys(this.state.steps).map( stepIndex => (\n                <Link\n                  style={{\n                    flexBasis:'0',\n                    flex:'1 1 0px',\n                    textDecoration:'none',\n                    cursor:this.state.step>=stepIndex ? 'pointer' : 'default'\n                  }}\n                  fontSize={2}\n                  textAlign={'center'}\n                  key={`step_${stepIndex}`}\n                  color={ this.state.step>=stepIndex ? 'blue' : 'cellText' }\n                  hoverColor={ this.state.step>=stepIndex ? 'blue' : 'cellText' }\n                  activeColor={ this.state.step>=stepIndex ? 'blue' : 'cellText' }\n                >\n                  {this.state.steps[stepIndex]}\n                </Link>\n              ) )\n            }\n          </Flex>\n          <Flex\n            width={1}\n            flexDirection={'column'}\n          >\n            <Progress\n              style={{\n                width:'100%',\n                height:'15px'\n              }}\n              value={(1/Object.keys(this.state.steps).length)*this.state.step}\n            />\n          </Flex>\n        </Flex>\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text\n              mb={1}>\n              Select asset:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              showBalance={false}\n              selectedToken={this.state.selectedToken}\n              onChange={this.changeSelectedToken.bind(this)}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              How much do you want to cover?\n            </Text>\n            <Input\n              min={0}\n              width={'100%'}\n              type={\"number\"}\n              required={true}\n              height={'3.4em'}\n              borderRadius={2}\n              fontWeight={500}\n              boxShadow={'none !important'}\n              value={this.state.amountValue}\n              onChange={this.changeAmount.bind(this)}\n              border={`1px solid ${this.props.theme.colors.divider}`}\n              placeholder={`Insert ${this.state.selectedToken.toUpperCase()} amount`}\n            />\n          </Box>\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              For how many days?\n            </Text>\n            <Input\n              min={0}\n              width={'100%'}\n              type={\"number\"}\n              required={true}\n              height={'3.4em'}\n              borderRadius={2}\n              fontWeight={500}\n              boxShadow={'none !important'}\n              value={this.state.periodValue}\n              placeholder={'Insert days of coverage'}\n              onChange={this.changePeriod.bind(this)}\n              border={`1px solid ${this.props.theme.colors.divider}`}\n            />\n          </Box>\n          <Flex\n            mt={2}\n            width={1}\n            justifyContent={'center'}\n          >\n            <ButtonLoader\n              buttonProps={{\n                my:2,\n                mx:[0, 2],\n                size:'medium',\n                borderRadius:4,\n                mainColor:'blue',\n                disabled:(!this.state.amountValue || !this.state.selectedToken || !this.state.periodValue)\n              }}\n              buttonText={'GET QUOTE'}\n              isLoading={this.state.loading}\n              handleClick={ e => this.getQuote(e) }\n            />\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default NexusMutual;","import React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport { Text, Icon, Image, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass CustomField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    let CustomComponent = null;\n    let componentHasChildren = false;\n    const fieldType = fieldInfo.type;\n    const fieldPath = fieldInfo.path;\n    let customValue = fieldPath ? this.functionsUtil.getArrayPath(fieldPath,this.props.row) : null;\n\n    switch (fieldType){\n      case 'image':\n        CustomComponent = Image;\n        fieldProps.src = customValue;\n      break;\n      case 'number':\n        customValue = this.functionsUtil.BNify(customValue).toString();\n        CustomComponent = SmartNumber;\n        fieldProps.number = customValue;\n      break;\n      case 'icon':\n        CustomComponent = Icon;\n        fieldProps.name = customValue;\n      break;\n      case 'button':\n        CustomComponent = Button;\n        componentHasChildren = true;\n        customValue = fieldInfo.label;\n        fieldProps.onClick=() => fieldProps.handleClick(this.props)\n      break;\n      default:\n        CustomComponent = Text;\n        componentHasChildren = true;\n      break;\n    }\n\n    if (!customValue){\n      return null;\n    }\n\n    // Add custom field extra props\n    if (fieldPath){\n      const customFieldName = Object.values(fieldPath).pop();\n      if (this.props.row[`${customFieldName}Props`]){\n        const customFieldProps = this.props.row[`${customFieldName}Props`];\n        // Replace props\n        if (customFieldProps && Object.keys(customFieldProps).length){\n          Object.keys(customFieldProps).forEach(p => {\n            fieldProps[p] = customFieldProps[p];\n          });\n        }\n      }\n    }\n\n    return CustomComponent ? (componentHasChildren ? (<CustomComponent {...fieldProps}>{customValue}</CustomComponent>) : (<CustomComponent {...fieldProps} />) ) : null;\n  }\n}\n\nexport default CustomField;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport CustomField from '../CustomField/CustomField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass CustomList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    return (\n      <Flex id=\"custom-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"custom-list\" flexDirection={'column'}>\n          {\n            this.props.rows.map( (row,rowIndex) => {\n              return (\n                <TableRow\n                  row={row}\n                  {...this.props}\n                  key={`asset-${rowIndex}`}\n                  fieldComponent={CustomField}\n                  rowId={`asset-col-${rowIndex}`}\n                  cardId={`asset-card-${rowIndex}`}\n                />\n              );\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CustomList;","import theme from '../theme';\nimport { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport AssetField from '../AssetField/AssetField';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass PortfolioDonut extends Component {\n  state = {\n    chartData:null,\n    totalFunds:null,\n    parentWidth:null,\n    selectedToken:null,\n    selectedTokenConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentWillUnmount() {\n    \n  }\n\n  async componentDidMount(){\n    this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  async loadPortfolio() {\n\n    const portfolio = {};\n    let totalFunds = this.functionsUtil.BNify(0);\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.availableTokens),async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const idleTokenBalance = await this.functionsUtil.getTokenBalance(tokenConfig.idle.token,this.props.account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.functionsUtil.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = await this.functionsUtil.convertTokenBalance(idleTokenBalance.times(tokenPrice),token,tokenConfig,isRisk);\n\n        if (tokenBalance.gt(0)){\n          portfolio[token] = tokenBalance;\n\n          // Increment total balance\n          totalFunds = totalFunds.plus(tokenBalance);\n        }\n      }\n    });\n\n    // Add Gov Tokens\n    const govTokensUserBalances = await this.functionsUtil.getGovTokensUserBalances(this.props.account,this.props.availableTokens,'DAI',null,true);\n    if (govTokensUserBalances){\n      Object.keys(govTokensUserBalances).forEach( govToken => {\n        const govTokenBalance = this.functionsUtil.BNify(govTokensUserBalances[govToken]);\n        portfolio[govToken] = govTokenBalance;\n        totalFunds = totalFunds.plus(govTokenBalance);\n      });\n    }\n\n    const chartData = [];\n\n    Object.keys(portfolio).forEach(token => {\n      const tokenBalance = portfolio[token];\n      if (tokenBalance.gt(0)){\n        const tokenPercentage = tokenBalance.div(totalFunds).times(100);\n        let tokenColorHsl = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','hsl']);\n        tokenColorHsl = tokenColorHsl ? tokenColorHsl.join(',') : '0,0%,0%';\n        chartData.push({\n          id:token,\n          label:token.substr(0,1).toUpperCase()+token.substr(1),\n          value:Math.round(tokenPercentage),\n          color:'hsl('+tokenColorHsl+')'\n        });\n      }\n    });\n\n    this.setState({\n      portfolio,\n      chartData,\n      totalFunds\n    });\n  }\n\n  render() {\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth:0,\n      cornerRadius:0,\n      innerRadius:0.65,\n      motionDamping:15,\n      motionStiffness:90,\n      colors:d => d.color,\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => {\n        if (parseFloat(d.value)>=5){\n          return d.value+'%';\n        } else {\n          return null;\n        }\n      },\n      radialLabel: d => {\n        return null;//Object.keys(this.props.availableTokens).indexOf(d.label.toUpperCase());\n      },\n      theme:{\n        tooltip: {\n          container: {\n            display: 'none'\n          },\n        },\n        labels:{\n          text:{\n            fontSize:16,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsTextColor:'#333',\n      radialLabelsSkipAngle:10,\n      radialLabelsTextXOffset:0,\n      radialLabelsLinkOffset:-parseInt(this.state.parentWidth*0.2),\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      radialLabelsLinkColor:{ from: 'color' },\n      margin: this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 },\n      onMouseEnter:(data, e) => {\n        const selectedToken = data.id;\n        const selectedTokenConfig = selectedToken ? this.props.availableTokens[selectedToken] || this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken]) : null;\n        this.setState({\n          selectedToken,\n          selectedTokenConfig\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setState({\n          selectedToken:null,\n          selectedTokenConfig:null\n        });\n      },\n      legends:[\n        {\n          itemWidth: 60,\n          itemHeight: 18,\n          translateY: this.props.isMobile ? 25 : 50,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          itemTextColor: theme.colors.legend,\n          symbolShape: 'circle',\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        }\n      ]\n    };\n\n    const selectedToken = this.state.selectedToken !== null && this.state.portfolio[this.state.selectedToken] ? this.state.portfolio[this.state.selectedToken] : false;\n    const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'icon']);\n    const convertToken = this.state.selectedToken ? this.functionsUtil.getGlobalConfig(['stats','tokens',this.state.selectedToken,'conversionRateField']) : false;\n\n    return (\n      <Flex\n        width={1}\n      >\n        { \n          (this.state.totalFunds || selectedToken) && \n            <Flex\n              zIndex={0}\n              top={['32%','35%']}\n              left={['23%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              width={['55%','46%']}\n              position={'absolute'}\n              height={['40%','35%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedToken ? (\n                  <>\n                    <AssetField\n                      fieldInfo={{\n                        name:'icon',\n                        props:{\n                          mb:1,\n                          height:'2.2em'\n                        }\n                      }}\n                      token={this.state.selectedToken}\n                      tokenConfig={this.state.selectedTokenConfig}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      unit={ convertToken ? '$' : null}\n                      number={this.state.portfolio[this.state.selectedToken]}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedToken}\n                    </Text>\n                  </>\n                ) : (\n                  <>\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={strategyIcon}\n                    />\n                    <SmartNumber\n                      unit={'$'}\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      number={this.state.totalFunds}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          {...chartProps}\n          showLoader={true}\n          data={this.state.chartData}\n          parentId={this.props.parentId}\n          parentIdHeight={this.props.parentId}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default PortfolioDonut;\n","import CountUp from 'react-countup';\nimport { Flex, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalEarningsCounter extends Component {\n\n  state = {\n    earningsEnd:null,\n    earningsStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        earningsEnd:null,\n        earningsStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    const earningsStart = portfolio.totalEarnings;\n    const earningsEnd = portfolio.totalAmountLent.times(portfolio.avgAPY.div(100));\n\n    this.setState({\n      earningsEnd,\n      earningsStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const unit = this.props.unit || '$ ';\n    const decimals = this.props.decimals || 8;\n\n    return this.state.earningsStart && this.state.earningsEnd ? (\n      <Flex\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.earningsEnd)}\n          start={parseFloat(this.state.earningsStart)}\n          formattingFn={ n => unit+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Flex>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalEarningsCounter;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport { Card, Flex, Image, Text } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\n\nclass EarningsEstimation extends Component {\n  state = {\n    tokensEarnings:null,\n    estimationStepsPerc:null,\n    estimationStepsOptions:null,\n    estimationStepsDefaultOption:null,\n    estimationSteps:{\n      0:{\n        'Month':{\n          perc:1/12,\n          width:1/3\n        },\n        '2 months':{\n          perc:1/6,\n          width:1/3\n        },\n        '3 months':{\n          perc:1/4,\n          width:1/3,\n          optionName:'3M'\n        }\n      },\n      25:{\n        '3 months':{\n          perc:3/12,\n          width:3/12\n        },\n        '8 months':{\n          perc:8/12,\n          width:5/12\n        },\n        'Year':{\n          perc:1,\n          width:4/12,\n          optionName:'1Y'\n        }\n      },\n      90:{\n        'Year':{\n          perc:1,\n          width:1/3,\n        },\n        '2 Years':{\n          perc:2,\n          width:1/3,\n        },\n        '5 Years':{\n          perc:5,\n          width:3/5,\n          optionName:'5Y'\n        }\n      }\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  setEstimationStepsPerc(estimationStepsPerc){\n    this.setState({\n      estimationStepsPerc\n    });\n  }\n\n  async loadEarnings(){\n    let tokensEarnings = {};\n    let estimationStepsPerc = 0;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const aggregatedEarnings = {\n      earnings:this.functionsUtil.BNify(0),\n      amountLent:this.functionsUtil.BNify(0),\n      earningsYear:this.functionsUtil.BNify(0),\n    };\n\n    await this.functionsUtil.asyncForEach(this.props.enabledTokens,async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const amountDeposited = await this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account);\n\n      const [amountLent,avgBuyPrice,idleTokenPrice] = await Promise.all([\n        this.functionsUtil.convertTokenBalance(amountDeposited,token,tokenConfig,isRisk),\n        this.functionsUtil.getAvgBuyPrice([token],this.props.account),\n        this.functionsUtil.getIdleTokenPrice(tokenConfig)\n      ]);\n\n      const earningsPerc = idleTokenPrice.div(avgBuyPrice[token]).minus(1);\n      const earnings = amountLent.times(earningsPerc);\n\n      let earningsYear = 0;\n      let tokenAPY = 0;\n      const tokenAprs = await this.functionsUtil.getTokenAprs(tokenConfig);\n      if (tokenAprs && tokenAprs.avgApr !== null){\n        tokenAPY = tokenAprs.avgApy;\n        earningsYear = amountLent.times(tokenAPY.div(100));\n      }\n\n      const earningsPercStep = Math.floor(earnings.div(earningsYear).times(100));\n      \n      const possibleSteps = Object.keys(this.state.estimationSteps).filter(perc => perc<earningsPercStep);\n      const maxPossibleStep = parseInt(possibleSteps.pop());\n      estimationStepsPerc = Math.max(estimationStepsPerc,maxPossibleStep);\n\n      // console.log(token,amountLent.toFixed(5),earnings.toFixed(5),earningsYear.toFixed(5),tokenConfig,tokenAprs,tokenAPR.toFixed(5),tokenAPY.toFixed(5),earningsPercStep,maxPossibleStep,estimationStepsPerc);\n\n      if (!this.functionsUtil.BNify(amountLent).isNaN() && !this.functionsUtil.BNify(idleTokenPrice).isNaN() && !this.functionsUtil.BNify(earnings).isNaN() && !this.functionsUtil.BNify(earningsYear).isNaN()){\n        tokensEarnings[token] = {\n          earnings,\n          amountLent,\n          earningsYear,\n          idleTokenPrice\n        };\n\n        // const earningsUSD = await this.functionsUtil.convertTokenBalance(earningsYearings,token,tokenConfig,isRisk);\n        // const amountLentUSD = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n        // const earningsYearUSD = await this.functionsUtil.convertTokenBalance(earningsYear,token,tokenConfig,isRisk);\n\n        aggregatedEarnings.earnings = aggregatedEarnings.earnings.plus(earnings);\n        aggregatedEarnings.amountLent = aggregatedEarnings.amountLent.plus(amountLent);\n        aggregatedEarnings.earningsYear = aggregatedEarnings.earningsYear.plus(earningsYear);\n      }\n    });\n\n    const orderedTokensEarnings = {};\n    this.props.enabledTokens.forEach( token => {\n      if (tokensEarnings[token]){\n        orderedTokensEarnings[token] = tokensEarnings[token];\n      }\n    });\n\n    tokensEarnings = orderedTokensEarnings;\n\n    // Add USD aggregated earnings\n    if (Object.keys(tokensEarnings).length>1){\n      tokensEarnings['USD'] = aggregatedEarnings;\n    }\n\n    let estimationStepsDefaultOption = null;\n    const estimationStepsOptions = Object.keys(this.state.estimationSteps).map( step => {\n      const estimationStep = Object.values(this.state.estimationSteps[step]).pop();\n      const label = estimationStep.optionName ? estimationStep.optionName : Object.keys(this.state.estimationSteps[step]).pop();\n      const value = parseInt(step);\n      const option = { value, label };\n\n      if (value === estimationStepsPerc){\n        estimationStepsDefaultOption = option;\n      }\n      return option;\n    });\n\n    // console.log(estimationStepsOptions,estimationStepsDefaultOption)\n\n    this.setState({\n      tokensEarnings,\n      estimationStepsPerc,\n      estimationStepsOptions,\n      estimationStepsDefaultOption,\n    });\n  }\n\n  render() {\n\n    if (!this.state.tokensEarnings){\n      return (\n        <FlexLoader\n          flexProps={{\n            flexDirection:'row',\n            minHeight:this.props.height\n          }}\n          loaderProps={{\n            size:'30px'\n          }}\n          textProps={{\n            ml:2\n          }}\n          text={'Loading estimations...'}\n        />\n      );\n    }\n\n    const estimationSteps = this.state.estimationSteps[this.state.estimationStepsPerc] ? this.state.estimationSteps[this.state.estimationStepsPerc] : this.state.estimationSteps[0];\n\n    return (\n      <Card\n        pr={0}\n        my={1}\n        width={1}\n        px={[3,4]}\n        py={[2,3]}\n        boxShadow={1}\n        borderRadius={2}\n        borderColor={'cardBorder'}\n        backgroundColor={'cardBg'}\n      >\n        <Flex\n          mt={2}\n          mb={3}\n          zIndex={9999}\n          justifyContent={'flex-end'}\n        >\n          <Flex\n            zIndex={9999}\n            width={[1,0.2]}\n            flexDirection={'column'}\n          >\n            <GenericSelector\n              innerProps={{\n                p:0,\n                px:1\n              }}\n              name={'estimation-step'}\n              options={this.state.estimationStepsOptions}\n              onChange={ v => this.setEstimationStepsPerc(v) }\n              defaultValue={this.state.estimationStepsDefaultOption}\n            />\n          </Flex>\n        </Flex>\n        {\n          Object.keys(this.state.tokensEarnings).map((token,tokenIndex) => {\n            const tokenConfig = this.props.availableTokens[token];\n            const tokenEarnings = this.state.tokensEarnings[token];\n            const estimationStepPerc = this.functionsUtil.BNify(Object.values(estimationSteps).pop().perc);\n            const finalEarnings = tokenEarnings.earningsYear.times(estimationStepPerc);\n            const cursorPerc = Math.min(1,parseFloat(tokenEarnings.earnings.div(finalEarnings)));\n            const tokenRGBColor = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','rgb']).join(',');\n            // console.log(tokenEarnings.earnings.toFixed(10),tokenEarnings.earningsYear.toFixed(10),finalEarnings.toFixed(10),cursorPerc.toFixed(10),estimationStepPerc.toFixed(10));\n            return (\n              <Flex\n                id={`asset-${token}`}\n                flexDirection={'row'}\n                key={`asset-${token}`}\n                borderTop={ token === 'USD' ? `1px solid ${this.props.theme.colors.divider}` : null }\n              >\n                <Flex\n                  width={[1,0.93]}\n                  position={'relative'}\n                >\n                  <Flex\n                    width={1}\n                    height={'100%'}\n                    position={'absolute'}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                    >\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      height={'100%'}\n                      flexDirection={'row'}\n                    >\n                      {\n                        Object.keys(estimationSteps).map((label,estimateIndex) => {\n                          const estimationStep = estimationSteps[label];\n                          const estimationStepEarnings = tokenEarnings.earningsYear.times(this.functionsUtil.BNify(estimationStep.perc));\n                          let estimationStepEarningsFormatted = this.functionsUtil.formatMoney(estimationStepEarnings,this.props.isMobile ? 2 : estimationStepEarnings.lt(1) ? 3 : 2);\n                          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n                          if (conversionRateField){\n                            estimationStepEarningsFormatted = '$ '+estimationStepEarningsFormatted;\n                          }\n                          return (\n                            <Flex\n                              pr={2}\n                              justifyContent={'flex-end'}\n                              width={estimationStep.width}\n                              pt={ token === 'USD' ? 2 : null }\n                              key={`asset-estimate-${token}-${estimateIndex}`}\n                              borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              {\n                                (token === 'USD' || (estimateIndex === Object.keys(estimationSteps).length-1)) && \n                                  <Text\n                                    fontWeight={3}\n                                    fontSize={[0,'1em']}\n                                    style={{\n                                      wordBreak:'break-all'\n                                    }}\n                                    color={tokenEarnings.earnings.gte(estimationStepEarnings) ? 'copyColor' : 'legend'}\n                                  >\n                                    {estimationStepEarningsFormatted}\n                                  </Text>\n                              }\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                  <Flex\n                    width={1}\n                    zIndex={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                    pt={ token === 'USD' ? ['2em','2.8em'] : '1.4em' }\n                    pb={ tokenIndex<Object.keys(this.state.tokensEarnings).length-1 ? '1em' : 0 }\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                      justifyContent={['flex-start','flex-end']}\n                    >\n                      <Text\n                        pr={[0,2]}\n                        fontSize={[0,3]}\n                        fontWeight={[3,4]}\n                      >\n                        {token}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      height={['20px','35px']}\n                      justifyContent={'flex-start'}\n                    >\n                      <Flex\n                        height={'100%'}\n                        width={cursorPerc}\n                        backgroundColor={'cardBg'}\n                      >\n                        <Flex\n                          height={'100%'}\n                          width={'100%'}\n                          borderRadius={['0 20px 20px 0','0 35px 35px 0']}\n                          style={{background:`linear-gradient(90deg, rgba(${tokenRGBColor},0) 0%, rgba(${tokenRGBColor},0.1) 30%, rgba(${tokenRGBColor},1) 100%)`}}\n                        ></Flex>\n                      </Flex>\n                      <Flex\n                        pl={2}\n                        width={'auto'}\n                        height={'100%'}\n                        alignItems={'center'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Image src={`images/tokens/${token}.svg`} height={['1.4em','2.2em']} />\n                      </Flex>\n                      {\n                        <Flex\n                          pl={2}\n                          alignItems={'center'}\n                        >\n                          {\n                            token !== 'USD' ? (\n                              <AssetField\n                                {...this.props}\n                                token={token}\n                                tokenConfig={tokenConfig}\n                                fieldInfo={{\n                                  name:'earningsCounter',\n                                  props:{\n                                    decimals:this.props.isMobile ? 6 : 7,\n                                    maxPrecision:this.props.isMobile ? 9 : 10,\n                                    style:{\n                                      color:this.props.theme.colors.copyColor,\n                                      fontWeight:this.props.isMobile ? 500 : 700,\n                                      fontSize:this.props.isMobile ? '14px' : '22px',\n                                    }\n                                  }\n                                }}\n                              />\n                            ) : (\n                              <TotalEarningsCounter\n                                {...this.props}\n                                decimals={this.props.isMobile ? 6 : 7}\n                                maxPrecision={this.props.isMobile ? 9 : 10}\n                                counterStyle={{\n                                  color:this.props.theme.colors.copyColor,\n                                  fontWeight:this.props.isMobile ? 500 : 700,\n                                  fontFamily:this.props.theme.fonts.sansSerif,\n                                  fontSize:this.props.isMobile ? '14px' : '22px',\n                                }}\n                              />\n                            )\n                          }\n                        </Flex>\n                      }\n                    </Flex>\n                  </Flex>\n                </Flex>\n                {\n                  !this.props.isMobile && \n                    <Flex width={0.07} alignItems={'flex-start'} justifyContent={'flex-end'}>\n                    </Flex>\n                }\n              </Flex>\n            )\n          })\n        }\n        <Flex\n          flexDirection={'row'}\n        >\n          <Flex\n            width={[1,0.93]}\n            position={'relative'}\n          >\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <Flex width={[0.15,0.1]}></Flex>\n              <Flex\n                width={[0.85,0.9]}\n                flexDirection={'row'}\n              >\n                {\n                  Object.keys(estimationSteps).map((estimationLabel,estimateIndex) => {\n                    const estimationStep = estimationSteps[estimationLabel];\n                    return (\n                      <Flex\n                        pt={2}\n                        pr={[1,2]}\n                        justifyContent={'flex-end'}\n                        width={estimationStep.width}\n                        key={`estimate-label-${estimateIndex}`}\n                        borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                      >\n                        <Text\n                          fontWeight={3}\n                          fontSize={[0,2]}\n                          color={'legend'}\n                        >\n                          {estimationLabel}\n                        </Text>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </Flex>\n          {\n            !this.props.isMobile && \n              <Flex width={0.07} alignItems={'flex-start'} justifyContent={'center'}>\n                <Text fontWeight={4} fontSize={3}></Text>\n              </Flex>\n          }\n        </Flex>\n      </Card>\n    );\n  }\n}\n\nexport default EarningsEstimation;\n","import React, { Component } from 'react';\nimport { Flex, Icon, Text, Image } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass DashboardIconButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          pr:2,\n          py:[2,3],\n          pl:[2,3],\n        }}\n        isActive={false}\n        isInteractive={true}\n        handleClick={this.props.handleClick}\n      >\n        <Flex\n          height={'100%'}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'center'}\n        > \n          <Flex\n            px={[1,0]}\n          >\n            {\n              this.props.icon ? (\n                <Icon\n                  name={this.props.icon}\n                  size={this.props.isMobile ? '1.8em' : '3em'}\n                  color={this.props.iconColor ? this.props.iconColor : 'redeem'}\n                />\n              ) : this.props.image && (\n                <Image\n                  src={this.props.image}\n                  width={this.props.isMobile ? '1.8em' : '2.7em'}\n                  height={this.props.isMobile ? '1.8em' : '2.7em'}\n                />\n              )\n            }\n          </Flex>\n          <Flex\n            ml={[2,3]}\n            flexDirection={'column'}\n            alignItems={'flex-start'}\n            justifyContent={'center'}\n          >\n            <Text\n              fontWeight={3}\n              fontSize={[1,3]}\n            >\n              {this.props.title}\n            </Text>\n            <Text\n              fontWeight={2}\n              fontSize={[0,2]}\n              color={'cellText'}\n            >\n              {this.props.text}\n            </Text>\n          </Flex>\n          <Icon\n            align={'center'}\n            color={'cellText'}\n            name={'KeyboardArrowRight'}\n            size={this.props.isMobile ? '1.8em' : '2.5em'}\n          />\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default DashboardIconButton;\n","import CountUp from 'react-countup';\nimport { Box, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalBalanceCounter extends Component {\n\n  state = {\n    counterEnd:null,\n    counterStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        counterEnd:null,\n        counterStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    const counterStart = portfolio.totalAmountLent.plus(portfolio.totalEarnings);\n    const counterEnd = counterStart.plus(counterStart.times(portfolio.avgAPY.div(100)));\n\n    this.setState({\n      counterEnd,\n      counterStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const decimals = this.props.decimals || 8;\n\n    return this.state.counterStart && this.state.counterEnd ? (\n      <Box\n        width={1}\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.counterEnd)}\n          start={parseFloat(this.state.counterStart)}\n          formattingFn={ n => '$ '+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Box>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalBalanceCounter;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetsList from '../AssetsList/AssetsList';\nimport CustomList from '../CustomList/CustomList';\n// import RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport PortfolioDonut from '../PortfolioDonut/PortfolioDonut';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport PortfolioEquity from '../PortfolioEquity/PortfolioEquity';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport EarningsEstimation from '../EarningsEstimation/EarningsEstimation';\nimport { Flex, Box, Heading, Text, Tooltip, Icon, Loader } from \"rimble-ui\";\nimport DashboardIconButton from '../DashboardIconButton/DashboardIconButton';\nimport TotalBalanceCounter from '../TotalBalanceCounter/TotalBalanceCounter';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\n\n// const env = process.env;\n\nclass StrategyPage extends Component {\n\n  state = {\n    portfolio:null,\n    tokensToMigrate:{},\n    aggregatedValues:[],\n    activeCoverages:null,\n    depositedTokens:null,\n    remainingTokens:null,\n    batchedDeposits:null,\n    portfolioLoaded:false,\n    availableGovTokens:null,\n    portfolioEquityStartDate:null,\n    batchedDepositsAvailableTokens:null,\n    portfolioEquityQuickSelection:'week'\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    await this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    if (accountChanged){\n      this.setState({\n        portfolioLoaded:false\n      },() => {\n        this.loadPortfolio();\n      });\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setStateSafe({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  async loadPortfolio(){\n    const availableTokens = this.props.availableTokens || {};\n\n    if (this.state.portfolioLoaded){\n      return false;\n    }\n\n    // Load portfolio if account is set\n    if (this.props.account){\n      const newState = {};\n      const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n      // Load data\n      const [\n        activeCoverages,\n        batchedDeposits,\n        tokensToMigrate,\n        portfolio\n      ] = await Promise.all([\n        // Load active coverages\n        this.functionsUtil.getActiveCoverages(this.props.account),\n        // Load claimable batches\n        this.functionsUtil.getBatchedDeposits(this.props.account),\n        // Load tokens to be migrated\n        this.functionsUtil.getTokensToMigrate(this.props.selectedStrategy),\n        // Load portfolio\n        this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account),\n        // Load and process Etherscan Txs\n        this.functionsUtil.getEtherscanTxs(this.props.account,firstBlockNumber,'latest',Object.keys(availableTokens))\n      ]);\n\n      newState.portfolio = portfolio;\n\n      newState.activeCoverages = activeCoverages && activeCoverages.length>0 ? activeCoverages.map( c => {\n        const statusColors = this.props.theme.colors.transactions.status;\n        const statusIcon = c.status === 'Expired' ? 'Error' : 'VerifiedUser';\n        const statusColor = c.status === 'Expired' ? statusColors.failed : statusColors.completed;\n        const portfolioCoverage = portfolio.totalBalance.gt(0) ? c.balance.div(portfolio.totalBalance).times(100).toFixed(2)+'%' : 'N/A';\n        const statusIconProps = {\n          color:statusColor\n        };\n        return Object.assign(c,{\n          statusIcon,\n          statusIconProps,\n          portfolioCoverage\n        });\n      }) : null;\n\n      newState.batchedDeposits = batchedDeposits && Object.keys(batchedDeposits).length>0 ? batchedDeposits : null;\n\n      if (newState.batchedDeposits){\n        newState.batchedDepositsAvailableTokens = Object.keys(newState.batchedDeposits).reduce( (batchedDepositsAvailableTokens,token) => {\n          const batchInfo = newState.batchedDeposits[token];\n          const tokenConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit','props','availableTokens',token]);\n          if (tokenConfig.strategy === this.props.selectedStrategy){\n            switch (batchInfo.status){\n              case 'pending':\n                tokenConfig.statusIcon = 'Timelapse';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.pending\n                };\n              break;\n              case 'executed':\n                tokenConfig.statusIcon = 'Done';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.completed\n                };\n              break;\n              default:\n              break;\n            }\n            tokenConfig.token = token;\n            tokenConfig.status = batchInfo.status;\n            tokenConfig.deposited = batchInfo.batchDeposits;\n            tokenConfig.redeemable = batchInfo.batchRedeems;\n            batchedDepositsAvailableTokens[tokenConfig.baseToken] = tokenConfig;\n          }\n          return batchedDepositsAvailableTokens;\n        },{});\n      }\n\n\n      if (portfolio){\n        const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.functionsUtil.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n        newState.depositedTokens = depositedTokens;\n\n        const isRisk = this.props.selectedStrategy === 'risk';\n\n        let avgAPY = this.functionsUtil.BNify(0);\n        let avgScore = this.functionsUtil.BNify(0);\n        let totalAmountLent = this.functionsUtil.BNify(0);\n\n        await this.functionsUtil.asyncForEach(depositedTokens,async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          const [\n            tokenAprs,\n            tokenScore,\n            amountLent,\n          ] = await Promise.all([\n            this.functionsUtil.getTokenAprs(tokenConfig),\n            this.functionsUtil.getTokenScore(tokenConfig,isRisk),\n            this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account)\n          ]);\n\n          const amountLentToken = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n\n          const tokenAPY = this.functionsUtil.BNify(tokenAprs.avgApy);\n          const tokenWeight = portfolio.tokensBalance[token].tokenBalance.div(portfolio.totalBalance);\n\n          if (tokenAPY){\n            avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n          }\n\n          if (tokenScore){\n            avgScore = avgScore.plus(tokenScore.times(tokenWeight));\n          }\n\n          if (amountLentToken){\n            totalAmountLent = totalAmountLent.plus(amountLentToken);\n          }\n        });\n\n        // Add gov tokens to earnings\n        const govTokensTotalBalance = await this.functionsUtil.getGovTokensUserTotalBalance(this.props.account,availableTokens,'DAI');\n        const govTokensUserBalance = await this.functionsUtil.getGovTokensUserBalances(this.props.account,availableTokens,null);\n        const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n          const balance = govTokensUserBalance[govToken];\n          if (balance.gt(0)){\n            return `+${balance.toFixed(2)} ${govToken}`;\n          } else {\n            return null;\n          }\n        }).filter(v => (v !== null)) : null;\n\n        newState.avgAPY = avgAPY;\n        newState.avgScore = avgScore;\n        newState.govTokensTotalBalance = govTokensTotalBalance;\n        newState.govTokensTotalBalanceTooltip = govTokensTotalBalanceTooltip;\n      }\n\n      newState.tokensToMigrate = tokensToMigrate;\n      newState.portfolioLoaded = true;\n\n      const remainingTokens = Object.keys(availableTokens).filter(token => (!newState.depositedTokens.includes(token) && !Object.keys(newState.tokensToMigrate).includes(token)) );\n      newState.remainingTokens = remainingTokens;\n\n      // Portfolio loaded\n      this.setStateSafe(newState);\n    // Show available assets for not logged users\n    } else {\n      this.setStateSafe({\n        tokensToMigrate:{},\n        depositedTokens:[],\n        portfolioLoaded:true,\n        remainingTokens:Object.keys(availableTokens),\n      });\n    }\n  }\n\n  render(){\n    const viewOnly = this.props.connectorName === 'custom';\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    const apyLong = this.functionsUtil.getGlobalConfig(['messages','apyLong']);\n    const riskScore = this.functionsUtil.getGlobalConfig(['messages','riskScore']);\n    const yieldFarming = this.functionsUtil.getGlobalConfig(['messages','yieldFarming']);\n    const batchDepositConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    const coverProtocolConfig = this.functionsUtil.getGlobalConfig(['tools','coverProtocol']);\n\n    return (\n      <Box\n        width={1}\n      >\n        <Title\n          mb={3}\n        >\n          {this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'title'])} strategy\n        </Title>\n        {\n          !this.state.portfolioLoaded ? (\n            <FlexLoader\n              textProps={{\n                textSize:4,\n                fontWeight:2\n              }}\n              loaderProps={{\n                mb:3,\n                size:'40px'\n              }}\n              flexProps={{\n                minHeight:'50vh',\n                flexDirection:'column'\n              }}\n              text={'Loading portfolio...'}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              {\n                this.props.account && this.state.depositedTokens.length>0 ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.avgAPY ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.avgAPY.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg APY\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <TotalBalanceCounter\n                                    decimals={5}\n                                    {...this.props}\n                                    portfolio={this.state.portfolio}\n                                  />\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-end'}\n                                    >\n                                      <Text\n                                        fontSize={1}\n                                        fontWeight={3}\n                                        fontFamily={this.props.theme.fonts.counter}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        +{this.state.portfolio.totalEarningsPerc.toFixed(2)}%\n                                      </Text>\n                                    </Flex>\n                                    <Text\n                                      mx={1}\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      fontFamily={this.props.theme.fonts.counter}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    >|</Text>\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-start'}\n                                    >\n                                      <TotalEarningsCounter\n                                        {...this.props}\n                                        unit={'+$'}\n                                        decimals={4}\n                                        counterStyle={{\n                                          fontSize:14,\n                                          fontWeight:600,\n                                          color:this.props.theme.colors.transactions.status.completed\n                                        }}\n                                        portfolio={this.state.portfolio}\n                                      />\n                                    </Flex>\n                                  </Flex>\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Balance\n                              </Text>\n                              {\n                                this.state.govTokensTotalBalance && (\n                                  <Tooltip\n                                    placement={'bottom'}\n                                    message={'Total Balance does not include accrued governance tokens: '+(this.state.govTokensTotalBalance && this.state.govTokensTotalBalance.gt(0) ? ` (${this.state.govTokensTotalBalanceTooltip.join(' / ')})` : '')}\n                                  >\n                                    <Icon\n                                      ml={2}\n                                      name={\"Info\"}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                    />\n                                  </Tooltip>\n                                )\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.avgScore ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.avgScore.toFixed(2) }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg Risk Score\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','riskScoreShort'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.328]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <PortfolioDonut\n                            {...this.props}\n                            parentId={'portfolio-composition'}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.666]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquity\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mb={3}\n                    mx={'auto'}\n                    width={[1,0.8]}\n                    aligItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontWeight={2}\n                      fontSize={[1,2]}\n                      textAlign={'center'}\n                    >\n                      {\n                        this.props.isMobile ?\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descShort'])\n                        :\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descLong'])\n                      }\n                    </Text>\n                  </Flex>\n                )\n              }\n              {\n                /*\n                !this.state.activeCoverages && coverProtocolConfig.enabled && this.state.portfolio && this.state.portfolio.totalBalance.gt(0) && (\n                  <Flex\n                    width={1}\n                    mt={[3,4]}\n                    alignItems={'center'}\n                    id={'no-active-cover'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:[3,4],\n                        width:[1,'auto'],\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Image\n                          mb={2}\n                          height={['1.8em','2.2em']}\n                          src={coverProtocolConfig.image}\n                        />\n                        <Text\n                          mb={1}\n                          fontSize={[2,4]}\n                          fontWeight={500}\n                          textAlign={'center'}\n                        >\n                          You don't have an active coverage\n                        </Text>\n                        <Text\n                          mb={2}\n                          color={'blue'}\n                          fontSize={[1,2]}\n                          fontWeight={500}\n                          hoverColor={'blue'}\n                          textAlign={'center'}\n                        >\n                          Cover Protocol provides coverage against Smart-Contract attacks\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:1,\n                            width:'auto',\n                            minHeight:'40px',\n                            mainColor:'redeem',\n                            size:this.props.isMobile ? 'small' : 'medium'\n                          }}\n                          handleClick={ e => this.props.goToSection(`tools/${coverProtocolConfig.route}`) }\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <Text\n                              color={'white'}\n                              fontSize={[1,2]}\n                              fontWeight={500}\n                            >\n                              Get Covered\n                            </Text>\n                            <Icon\n                              ml={1}\n                              size={'1.3em'}\n                              name={'KeyboardArrowRight'}\n                            />\n                          </Flex>\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                )\n                */\n              }\n              {\n                this.state.batchedDeposits && (\n                  <Flex\n                    width={1}\n                    mb={[0,3]}\n                    id={'batched-deposits'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Batched Deposits</Title>\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.batchedDepositsAvailableTokens)}\n                        cols={[\n                          {\n                            title:'TOKEN',\n                            props:{\n                              width:[0.3,0.2]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.33, 0.21],\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['deposited'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                name:'tokenName',\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'REDEEMABLE',\n                            props:{\n                              width:[0.44,0.23],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['redeemable'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                type:'text',\n                                name:'custom',\n                                path:['token'],\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'STATUS',\n                            props:{\n                              width:[0.26,0.19],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'icon',\n                                mobile:false,\n                                name:'custom',\n                                path:['statusIcon'],\n                                props:{\n                                  mr:2,\n                                  size:this.props.isMobile ? '1.2em' : '1.8em'\n                                }\n                              },\n                              {\n                                name:'custom',\n                                path:['status'],\n                                props:{\n                                  style:{\n                                    textTransform:'capitalize'\n                                  }\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[0.35,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Claim',\n                                funcProps:{\n                                  disabled:(props) => (props.tokenConfig.status === 'pending')\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.goToSection(`tools/${batchDepositConfig.route}/${props.tokenConfig.token}`)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                        availableTokens={this.state.batchedDepositsAvailableTokens}\n                      />\n                    </Flex>\n                  </Flex>\n                )\n              }\n              <Flex\n                width={1}\n                id={'available-assets'}\n                flexDirection={'column'}\n                mb={!this.state.depositedTokens.length ? 4 : 0}\n              >\n                {\n                  (this.state.depositedTokens.length>0 || Object.keys(this.state.tokensToMigrate).length>0 || this.state.remainingTokens.length>0 ) &&\n                    <Title my={[3,4]}>Available assets</Title>\n                }\n                <Flex width={1} flexDirection={'column'}>\n                  {\n                    Object.keys(this.state.tokensToMigrate).length>0 &&\n                    <Flex\n                      width={1}\n                      mb={[3,4]}\n                      id={\"migrate-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Assets to migrate\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.tokensToMigrate)}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.15]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.12],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.29,0.15],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.21,0.12],\n                            },\n                            fields:[\n                              {\n                                name:'score'\n                              }\n                            ]\n                          },\n                          {\n                            title:'BALANCE',\n                            mobile:false,\n                            props:{\n                              width:[0.16,0.14],\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'amountToMigrate',\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.15],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens'\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.29 : 0 ,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: 'Migrate',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                  this.state.depositedTokens.length>0 &&\n                    <Flex\n                      mb={ this.state.remainingTokens.length>0 ? [3,4] : 0 }\n                      width={1}\n                      id={\"deposited-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Deposited assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.depositedTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            mobile:false,\n                            props:{\n                              width:[0.12,0.09],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.30,0.14],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.21,0.10],\n                            },\n                            parentProps:{\n                              alignItems:['center','flex-start'],\n                            },\n                            fields:[\n                              {\n                                name:'score',\n                              }\n                            ]\n                          },\n                          {\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.22,0.13],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'amountLent'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.11],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'EARNINGS',\n                            props:{\n                              width:[0.15,0.13],\n                              textAlign:'center'\n                            },\n                            parentProps:{\n                              alignItems:'center',\n                              flexDirection:'column',\n                            },\n                            fields:[\n                              {\n                                name:'earnings',\n                                props:{\n                                  decimals:3\n                                }\n                              },\n                              {\n                                name:'earningsPerc',\n                                showLoader:false,\n                                showDirection:false,\n                                props:{\n                                  fontSize:0,\n                                  decimals:3\n                                }\n                              }\n                            ]\n                          },\n                          /*\n                          {\n                            title:'EARNINGS %',\n                            props:{\n                              width:[0.27,0.14],\n                            },\n                            fields:[\n                              {\n                                name:'earningsPerc'\n                              }\n                            ]\n                          },\n                          */\n                          {\n                            title:'',\n                            mobile:false,\n                            props:{\n                              width:0.17,\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Manage',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'redeem',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                    this.state.remainingTokens.length>0 &&\n                    <Flex id=\"remaining-assets\" width={1} flexDirection={'column'}>\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Available assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.remainingTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.10],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.31,this.state.depositedTokens.length>0 ? 0.14 : 0.14],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.22,0.10],\n                            },\n                            fields:[\n                              {\n                                name:'score'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.11],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APR LAST WEEK',\n                            mobile:false,\n                            props:{\n                              width:0.25,\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'aprChart',\n                                style:{\n                                  overflow:'visible',\n                                },\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.26 : 0 , 0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: (props) => {\n                                  return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'Migrate' : 'Deposit';\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                },\n                                funcProps:{\n                                  mainColor: (props) => {\n                                    return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'migrate' : 'deposit'\n                                  }\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                </Flex>\n              </Flex>\n              {\n                !viewOnly && this.props.account && coverProtocolConfig.enabled && (\n                  <Flex\n                    mt={3}\n                    width={1}\n                    id={\"tools\"}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      pb={2}\n                      width={1}\n                      mb={[2,3]}\n                      borderColor={'divider'}\n                      borderBottom={'1px solid transparent'}\n                    >\n                      <Heading.h4\n                        fontSize={[2,4]}\n                        fontWeight={[3,4]}\n                      >\n                        Tools\n                      </Heading.h4>\n                    </Flex>\n                    <Flex\n                      flexDirection={['column','row']}\n                    >\n                      {\n                        ['addFunds','coverProtocol','tokenSwap'].map( (toolName,toolIndex) => {\n                          const toolConfig = this.functionsUtil.getGlobalConfig(['tools',toolName]);\n                          return (\n                            <Flex\n                              width={[1,1/3]}\n                              key={`tool_${toolIndex}`}\n                              mb={toolIndex<2 ? [2,0] : 0}\n                              pr={toolIndex<2 ? [0,3] : 0}\n                            >\n                              <DashboardIconButton\n                                {...this.props}  \n                                icon={toolConfig.icon}\n                                text={toolConfig.desc}\n                                image={toolConfig.image}\n                                title={toolConfig.label}\n                                handleClick={ e => this.props.goToSection(`tools/${toolConfig.route}`) }\n                              />\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                )\n              }\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id={\"yield-farming\"}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Yield Farming</Title>\n                    <AssetsList\n                      enabledTokens={Object.keys(govTokens)}\n                      cols={[\n                        {\n                          title:'TOKEN',\n                          props:{\n                            width:[0.3,0.15]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:2,\n                                height:['1.4em','2.3em']\n                              }\n                            },\n                            {\n                              name:'tokenName'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'BALANCE',\n                          props:{\n                            width:[0.33, 0.25],\n                          },\n                          fields:[\n                            {\n                              name:'tokenBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            }\n                          ]\n                        },\n                        {\n                          title:'REDEEMABLE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                          props:{\n                            width:[0.35,0.30],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'redeemableBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            },\n                          ]\n                        },\n                        {\n                          title:'DISTRIBUTION',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                          props:{\n                            width:[0.35,0.30],\n                          },\n                          fields:[\n                            {\n                              name:'userDistributionSpeed',\n                              props:{\n                                decimals:6\n                              }\n                            }\n                          ]\n                        },\n                        /*\n                        {\n                          mobile:false,\n                          title:'APR',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenApr']),\n                          props:{\n                            width:[0.2,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'apr',\n                            }\n                          ]\n                        },\n                        {\n                          title:'TOKEN PRICE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','tokenPrice']),\n                          mobile:false,\n                          props:{\n                            width: 0.17,\n                          },\n                          parentProps:{\n                            width:1,\n                            pr:[2,4]\n                          },\n                          fields:[\n                            {\n                              name:'tokenPrice',\n                              props:{\n                                unit:'$',\n                                unitPos:'left',\n                                unitProps:{\n                                  mr:1,\n                                  fontWeight:3,\n                                  fontSize:[0,2],\n                                  color:'cellText'\n                                }\n                              }\n                            }\n                          ]\n                        },\n                        */\n                      ]}\n                      {...this.props}\n                      availableTokens={govTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.state.activeCoverages && (\n                  <Flex\n                    width={1}\n                    mb={[0,3]}\n                    id={'active-coverages'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Coverages</Title>\n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <CustomList\n                        rows={this.state.activeCoverages}\n                        handleClick={ this.props.isMobile ? (props) => props.row.status!=='Expired' && props.row.fileClaimUrl && this.functionsUtil.openWindow(props.row.fileClaimUrl) : null }\n                        cols={[\n                          {\n                            title:'PROTOCOL',\n                            props:{\n                              width:[0.42,0.17]\n                            },\n                            fields:[\n                              {\n                                type:'image',\n                                path:['protocolImage'],\n                                props:{\n                                  mr:[1,2],\n                                  size:this.props.isMobile ? '1.2em' : '1.8em'\n                                }\n                              },\n                              {\n                                type:'text',\n                                path:['protocolName'],\n                              }\n                            ]\n                          },\n                          {\n                            title:'BALANCE',\n                            props:{\n                              width:[0.34, 0.15],\n                            },\n                            fields:[\n                              {\n                                type:'number',\n                                path:['balance'],\n                                props:{\n                                  decimals: 4,\n                                }\n                              },\n                              {\n                                type:'text',\n                                path:['token'],\n                                props:{\n                                  ml:[1,2],\n                                  style:{\n                                    textTransform:'uppercase'\n                                  }\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'EXPIRATION DATE',\n                            props:{\n                              width:0.23,\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'text',\n                                path:['expirationDate'],\n                                props:{\n                                  \n                                }\n                              },\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'COVERAGE',\n                            props:{\n                              width:0.15,\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'text',\n                                path:['portfolioCoverage'],\n                                props:{\n                                  \n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'STATUS',\n                            props:{\n                              width:[0.24,0.15],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'icon',\n                                name:'custom',\n                                path:['statusIcon'],\n                                props:{\n                                  mr:[1,2],\n                                  size:this.props.isMobile ? '1.2em' : '1.8em'\n                                }\n                              },\n                              {\n                                name:'custom',\n                                path:['status'],\n                                props:{\n                                  style:{\n                                    textTransform:'capitalize'\n                                  }\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:false,\n                            props:{\n                              width:0.17,\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                type:'button',\n                                name:'custom',\n                                label:'File Claim',\n                                funcProps:{\n                                  disabled:(props) => (props.row.status==='Expired')\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'redeem',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => props.row.status!=='Expired' && props.row.fileClaimUrl && this.functionsUtil.openWindow(props.row.fileClaimUrl)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  </Flex>\n                )\n              }\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id=\"earnings-estimation\"\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Estimated earnings</Title>\n                    <EarningsEstimation\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.props.account && this.state.depositedTokens.length>0 && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={[]}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.15,0.24]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.15,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.32,0.23],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.22],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:0.19,\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.15,0.20],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','1.6em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default StrategyPage;","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TransactionField from '../TransactionField/TransactionField';\nimport { Flex, Box, Text, Icon, Link, Checkbox, Tooltip } from \"rimble-ui\";\n\nclass BatchDeposit extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      execute:{\n        txHash:null,\n        loading:false\n      },\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    usePermit:false,\n    batchRedeems:{},\n    lastExecution:null,\n    permitEnabled:true,\n    hasDeposited:false,\n    permitSigned:false,\n    selectedToken:null,\n    showPermitBox:false,\n    currBatchIndex:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    availableTokens:null,\n    selectedStrategy:null,\n    componentLoaded:false,\n    executeSucceeded:false,\n    migrationEnabled:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    availableStrategies:null,\n    batchDepositEnabled:false,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadStrategies();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      this.setState({\n        componentLoaded:false\n      },async () => {\n        await this.loadTokens();\n      });\n    }\n\n    const selectedStrategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    if (selectedStrategyChanged){\n      const selectedToken = Object.keys(this.state.availableTokens)[0];\n      this.selectToken(selectedToken);\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const executeSucceededChanged = prevState.executeSucceeded !== this.state.executeSucceeded;\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (selectedTokenChanged || contractApprovedChanged || executeSucceededChanged){\n      this.checkBatchs();\n    }\n\n  }\n\n  async execute () {\n\n    const loading = true;\n\n    const callbackExecute = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Execute',\n        eventCategory: 'BatchDeposit',\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        executeSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          execute:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptExecute = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          execute:{\n            ...prevState.processing.execute,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'executeBatch', [true], null, callbackExecute, callbackReceiptExecute);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        execute:{\n          ...prevState.processing.execute,\n          loading\n        }\n      }\n    }));\n  }\n\n  async checkBatchs(migrationSucceeded=false){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.tokenConfig.name,this.state.tokenConfig.address,this.state.tokenConfig.abi)\n    ]);\n\n    let [\n      batchExecutions,\n      currBatchIndex,\n      migrationContractApproved\n    ] = await Promise.all([\n      this.functionsUtil.getBatchedDepositExecutions(migrationContractInfo.address),\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.tokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    // If use Permit don't ask for Approve\n    let usePermit = false;\n    if (!migrationContractApproved && migrationContractInfo.functions && migrationContractInfo.functions.length === 1){\n      const functionInfo = migrationContractInfo.functions[0];\n      usePermit = typeof functionInfo.usePermit !== 'undefined' ? functionInfo.usePermit : false;\n      const nonceMethod = this.functionsUtil.getGlobalConfig(['permit',this.state.tokenConfig.name,'nonceMethod']);\n      const permitContract = this.functionsUtil.getContractByName(this.state.tokenConfig.name);\n      usePermit = usePermit && permitContract && (!nonceMethod || permitContract.methods[nonceMethod] !== undefined);\n    }\n\n    const newState = {};\n    const batchTotals = {};\n    const batchRedeems = {};\n    const batchDeposits = {};\n    let batchCompleted = false;\n\n    currBatchIndex = currBatchIndex || 0;\n    for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex) ; batchIndex++){\n      let [\n        batchTotal,\n        batchRedeem,\n        batchDeposit\n      ] = await Promise.all([\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchRedeemedTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n      ]);\n      if (batchTotal && batchTotal !== null){\n        batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.tokenConfig.decimals);\n      }\n      if (batchDeposit !== null){\n        batchRedeem = this.functionsUtil.fixTokenDecimals(batchRedeem,18);\n        batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.tokenConfig.decimals);\n        if (batchDeposit.gt(0)){\n          batchDeposits[batchIndex] = batchDeposit;\n          // Calculate redeemable idleTokens\n          batchRedeems[batchIndex] = batchDeposit.times(batchRedeem).div(batchTotals[batchIndex]);\n          if (batchRedeems[batchIndex].gt(batchRedeem)){\n            batchRedeems[batchIndex] = batchRedeem;\n          }\n          // Check claimable\n          if (batchIndex < currBatchIndex){\n            batchCompleted = true;\n          }\n        }\n      }\n    }\n\n    newState.batchDeposits = batchDeposits;\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n    const batchDepositInfo = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    const batchDepositEnabled = batchDepositInfo.depositEnabled;\n\n    newState.usePermit = usePermit;\n    newState.showPermitBox = false;\n    newState.claimSucceeded = false;\n    newState.componentLoaded = true;\n    newState.executeSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.hasDeposited = hasDeposited;\n    newState.batchRedeems = batchRedeems;\n    newState.lastExecution = lastExecution;\n    newState.currBatchIndex = currBatchIndex;\n    newState.batchCompleted = batchCompleted;\n    newState.migrationSucceeded = migrationSucceeded;\n    newState.batchDepositEnabled = batchDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    // Prevent user to deposit if the batch has been completed\n    newState.canDeposit = batchDepositEnabled && !batchCompleted;\n    newState.migrationContractApproved = migrationContractApproved;\n    newState.action = hasDeposited || newState.canClaim ? 'redeem' : 'deposit';\n\n    this.setState(newState);\n  }\n\n  async loadStrategies(){\n\n    // Init tokens contracts\n    const availableStrategiesKeys = {};\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n      availableStrategiesKeys[tokenConfig.strategy] = true;\n    });\n\n    const availableStrategies = Object.keys(availableStrategiesKeys).map( strategy => {\n      const strategyConfig = this.functionsUtil.getGlobalConfig(['strategies',strategy]);\n      return {\n        value:strategy,\n        icon:strategyConfig.icon,\n        label:strategyConfig.title\n      };\n    });\n\n    // console.log('availableStrategies',availableStrategies);\n\n    if (availableStrategies && availableStrategies.length>0){\n      let selectedStrategy = availableStrategies[0].value;\n      let selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n      if (selectedToken){\n        const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n        selectedToken = selectedTokenConfig.baseToken;\n        selectedStrategy = selectedTokenConfig.strategy;\n      }\n\n      this.setState({\n        availableStrategies\n      },() => {\n        this.selectStrategy(selectedStrategy,selectedToken);\n      });\n    }\n  }\n\n  /*\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n    if (selectedToken){\n      this.selectToken(selectedToken);\n    }\n  }\n  */\n\n  async selectStrategy (selectedStrategy,selectedToken=null) {\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens)\n      .filter(key => this.props.toolProps.availableTokens[key].strategy === selectedStrategy )\n      .reduce((obj, key) => {\n        const tokenConfig = this.props.toolProps.availableTokens[key];\n        const baseTokenConfig = this.props.availableStrategies[selectedStrategy][tokenConfig.baseToken];\n\n        tokenConfig.abi = baseTokenConfig.abi;\n        tokenConfig.token = baseTokenConfig.token;\n        tokenConfig.address = baseTokenConfig.address;\n        tokenConfig.decimals = baseTokenConfig.decimals;\n        obj[tokenConfig.baseToken] = tokenConfig;\n        return obj;\n      }, {});\n\n    this.setState({\n      availableTokens,\n      selectedStrategy\n    },() => {\n      if (selectedToken){\n        this.selectToken(selectedToken);\n      }\n    });\n  }\n\n  async selectToken (selectedToken) {\n    const selectedTokenConfig = this.state.availableTokens[selectedToken];\n    const strategyAvailableTokens = this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.token];\n\n    const tokenConfig = {\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address,\n      decimals:baseTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:baseTokenConfig.abi,\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.token);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    },() => {\n      // Select strategy and available tokens\n      if (selectedTokenConfig.strategy !== this.state.selectedStrategy){\n        const selectedStrategy = selectedTokenConfig.strategy;\n        this.selectStrategy(selectedStrategy);\n      }\n    });\n  }\n\n  async claim () {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Claim',\n        eventCategory: `BatchDeposit`,\n        eventValue: parseInt(claimableValue),\n        eventLabel: this.props.selectedToken,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  async callbackPermit(){\n    this.setState({\n      permitSigned:true\n    });\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  async callbackApprove(migrationContractApproved){\n    // console.log('callbackApprove',this.state.migrationContractApproved,migrationContractApproved);\n    if (migrationContractApproved !== this.state.migrationContractApproved){\n      this.setState({\n        migrationContractApproved\n      });\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      const migrationSucceeded = false;\n      this.setState({\n        action,\n        migrationSucceeded\n      });\n    }\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  migrationEnabledCallback = (migrationEnabled) => {\n    this.setState({\n      migrationEnabled\n    });\n  }\n\n  migrationCallback = (tx) => {\n    this.checkBatchs(true);\n  }\n\n  render() {\n\n    if (!this.state.selectedStrategy){\n      return null;\n    }\n\n    const usePermit = this.state.permitEnabled && this.state.usePermit;\n    // const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchRedeem = this.state.batchRedeems && Object.values(this.state.batchRedeems).length>0 ? Object.values(this.state.batchRedeems)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n    const contractApproved = (usePermit && this.state.permitSigned) || (!usePermit && this.state.migrationContractApproved);\n    const canExecuteBatch = this.state.batchTotals && this.state.batchTotals[this.state.currBatchIndex] && this.state.batchTotals[this.state.currBatchIndex].gt(0);\n    const strategyDefaultValue = this.state.selectedStrategy ? this.state.availableStrategies.find( s => s.value === this.state.selectedStrategy ) : this.state.availableStrategies[0];\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Choose the strategy:\n            </Text>\n            <GenericSelector\n              {...this.props}\n              name={'strategy'}\n              isSearchable={false}\n              defaultValue={strategyDefaultValue}\n              CustomOptionValue={CustomOptionValue}\n              options={this.state.availableStrategies}\n              onChange={this.selectStrategy.bind(this)}\n              CustomValueContainer={CustomValueContainer}\n            />\n          </Box>\n          {\n            this.state.availableTokens && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select asset to deposit:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-from'}\n                  showBalance={true}\n                  isSearchable={false}\n                  onChange={this.selectToken.bind(this)}\n                  selectedToken={this.state.selectedToken}\n                  availableTokens={this.state.availableTokens}\n                />\n              </Box>\n          }\n          {\n            !this.state.componentLoaded && (\n              <Flex\n                mt={4}\n                flexDirection={'column'}\n              >\n                <FlexLoader\n                  flexProps={{\n                    flexDirection:'row'\n                  }}\n                  loaderProps={{\n                    size:'30px'\n                  }}\n                  textProps={{\n                    ml:2\n                  }}\n                  text={'Loading asset info...'}\n                />\n              </Flex>\n            )\n          }\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : this.state.componentLoaded &&  this.state.selectedTokenConfig && (this.state.canDeposit || this.state.canClaim) && (\n              <Box\n                width={1}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                    px:4,\n                    mt:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  > \n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ contractApproved ? 'CheckBox' : 'LooksOne'}\n                        color={ contractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        {\n                          usePermit ? 'Sign Approve message' : 'Approve the batch deposit contract'\n                        }\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ (this.state.hasDeposited || this.state.batchCompleted) ? 'CheckBox' : 'LooksTwo'}\n                        color={ (this.state.hasDeposited || this.state.batchCompleted) ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Deposit your {this.state.selectedToken}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                        color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Wait for batch execution\n                        <Link\n                          ml={1}\n                          fontWeight={2}\n                          color={'primary'}\n                          display={'inline'}\n                          hoverColor={'primary'}\n                          onClick={ e => this.props.openTooltipModal('Batch Execution Schedule',this.functionsUtil.getGlobalConfig(['messages','batchDepositExecutionSchedule'])) }\n                        >\n                          (Read More)\n                        </Link>\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                        color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Text\n                          ml={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'left'}\n                        >\n                          Claim your {this.state.tokenConfig.idle.token}\n                        </Text>\n                        <Tooltip\n                          placement={'top'}\n                          message={`You will start earning gov tokens after the batch is executed and you claim your ${this.state.tokenConfig.idle.token}`}\n                        >\n                          <Icon\n                            ml={1}\n                            size={'1.2em'}\n                            name={'Warning'}\n                            color={'#ffe000'}\n                            style={{\n                              cursor:'pointer'\n                            }}\n                          />\n                        </Tooltip>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                </DashboardCard>\n              </Box>\n            )\n          }\n          {\n            this.state.componentLoaded && this.props.account && this.state.availableTokens && this.state.selectedToken && (\n              <Box width={1}>\n                {\n                  (contractApproved || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:2,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          color={'cellText'}\n                          name={'LightbulbOutline'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          {this.state.selectedToken} supports Approve and Deposit in a single transaction, disable this feature and try again if you can't deposit in the batch.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded && (\n                    <Flex\n                      p={0}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Batch Deposit?\n                      </Link>\n                    </Flex>\n                  )\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    this.state.batchDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        showActions={false}\n                        usePermit={usePermit}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        showBalanceSelector={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        migrationParams={toMigrate => [toMigrate]}\n                        selectedStrategy={this.props.selectedStrategy}\n                        callbackPermit={this.callbackPermit.bind(this)}\n                        callbackApprove={this.callbackApprove.bind(this)}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationEnabledCallback={this.migrationEnabledCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedToken} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch Deposit is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar web3={this.props.web3} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.tokenConfig.idle.token}!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!<br />You can now claim your {batchRedeem.toFixed(4)} {this.state.tokenConfig.idle.token}\n                            </Text>\n                            <Text\n                              fontSize={1}\n                              color={'#ff9900'}\n                              textAlign={'center'}\n                            >\n                              (You need to claim your {this.state.tokenConfig.idle.token} to start earning Gov Tokens)\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:2,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'1.8em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited <strong>{batchDeposit.toFixed(4)} {this.state.selectedToken}</strong>, please wait until the batch is executed to claim your {this.state.tokenConfig.idle.token}.\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n                {\n                  this.state.batchTotals[this.state.currBatchIndex] && \n                    <DashboardCard\n                      cardProps={{\n                        p:2,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.execute.loading ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <TxProgressBar web3={this.props.web3} waitText={`Batch execution estimated in`} endMessage={`Finalizing batch execution request...`} hash={this.state.processing.execute.txHash} />\n                          </Flex>\n                        ) : this.state.executeSucceeded ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Text\n                              fontWeight={500}\n                              color={'copyColor'}\n                              textAlign={'center'}\n                            >\n                              Batch Pool: {this.state.batchTotals[this.state.currBatchIndex].toFixed(4)} {this.state.selectedToken}\n                            </Text>\n                            {\n                              canExecuteBatch && \n                                <Link\n                                  textAlign={'center'}\n                                  hoverColor={'primary'}\n                                  onClick={this.execute.bind(this)}\n                                >\n                                  Execute Batch\n                                </Link>\n                            }\n                            {\n                              this.state.batchTotals[this.state.currBatchIndex].lt(this.state.selectedTokenConfig.minPoolSize) && (\n                                <Text\n                                  mb={1}\n                                  fontSize={1}\n                                  color={'#ff9900'}\n                                  textAlign={'center'}\n                                >\n                                  (The pool size has to reach at least {this.functionsUtil.formatMoney(this.state.selectedTokenConfig.minPoolSize,0)} {this.state.selectedToken} to be executed)\n                                </Text>\n                              )\n                            }\n                            {\n                              this.state.lastExecution && (\n                                <Text\n                                  fontSize={0}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Last Batch Execution: {this.functionsUtil.strToMoment(this.state.lastExecution.timeStamp*1000).utc().format('YYYY-MM-DD HH:mm UTC')}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchDeposit;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass CoverProtocol extends Component {\n\n  state = {\n    steps:null,\n    infoBox:null,\n    swapInfo:null,\n    portfolio:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedAction:null,\n    successMessage:null,\n    activeCoverages:null,\n    defaultCoverage:null,\n    selectedCoverage:null,\n    contractApproved:false,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedCoverageChanged = prevState.selectedCoverage !== this.state.selectedCoverage;\n    if (selectedCoverageChanged){\n      const selectedToken = this.state.selectedCoverage.collateral;\n      const tokenConfig = Object.values(this.props.availableStrategies)[0][selectedToken];\n      const tokenBalance = await this.functionsUtil.getTokenBalance(selectedToken,this.props.account);\n      const selectedAction = !this.state.selectedAction ? (this.props.urlParams.param2 || 'Claim') : this.state.selectedAction;\n      this.setState({\n        tokenConfig,\n        tokenBalance,\n        selectedToken,\n        selectedAction\n      });\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue && this.state.inputValue.gt(0);\n    const swapInfoChanged = JSON.stringify(prevState.swapInfo) !== JSON.stringify(this.state.swapInfo) && this.state.inputValue && this.state.inputValue.gt(0);\n    if (selectedActionChanged || inputValueChanged || swapInfoChanged || contractApprovedChanged){\n      this.updateData();\n    }\n\n    const contractInfoChanged = JSON.stringify(prevState.contractInfo) !== JSON.stringify(this.state.contractInfo);\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async getSwapInfo(amount){\n    amount = this.functionsUtil.BNify(amount);\n    if (!amount.isNaN() && amount.gt(0)){\n      // console.log('getSwapInfo',this.state.contractInfo.name,this.state.tokenConfig.address,balancerTokenConfig.address,swapFee,covTokens,tokenPrice);\n\n      if (this.state.tokenPrice && this.state.swapFee && this.state.covTokens){\n\n        const swapFee = this.state.swapFee;\n        const tokenPrice = this.state.tokenPrice;\n        let tokenAmountOut = amount.div(tokenPrice);\n        tokenAmountOut = tokenAmountOut.minus(tokenAmountOut.times(swapFee));\n\n        return {\n          amount,\n          tokenAmountOut\n        };\n      }\n    }\n\n    return null;\n  }\n\n  async changeInputCallback(inputValue=null){\n    let swapInfo = null;\n    let balanceSelectorInfo = null;\n    inputValue = inputValue || this.state.inputValue;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      switch (this.state.selectedAction){\n        case 'Mint':\n          balanceSelectorInfo = {\n            color:this.props.theme.colors.transactions.status.completed,\n            text:`You will Mint: ${inputValue.toFixed(4)} CLAIM and NOCLAIM`\n          };\n        break;\n        case 'Claim':\n        case 'NoClaim':\n          const amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.state.tokenConfig.decimals);\n          swapInfo = await this.getSwapInfo(amount);\n          if (swapInfo){\n            if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n              balanceSelectorInfo = {\n                color:this.props.theme.colors.transactions.status.completed,\n                text:`You will Buy: ~${this.functionsUtil.fixTokenDecimals(swapInfo.tokenAmountOut,18).toFixed(4)} ${this.state.selectedAction}`\n              };\n            } else {\n              balanceSelectorInfo = {\n                text:`Not enough liquidity`,\n                color:this.props.theme.colors.transactions.status.failed,\n              };\n            }\n          }\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      swapInfo,\n      inputValue,\n      balanceSelectorInfo\n    });\n  }\n\n  async getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n    amount = this.functionsUtil.BNify(amount);\n    const MAX_UINT256 = this.functionsUtil.BNify(2).pow(256).minus(1).toFixed(0);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        methodName = 'addCover';\n        methodParams = [this.state.tokenConfig.address,parseInt(this.state.selectedCoverage.expirationTimestamp),this.functionsUtil.integerValue(amount)];\n      break;\n      case 'Claim':\n      case 'NoClaim':\n        methodName = 'swapExactAmountOut';\n        const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const swapInfo = await this.getSwapInfo(amount);\n        if (swapInfo){\n          if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n            methodParams = [this.state.tokenConfig.address,this.functionsUtil.integerValue(amount),balancerTokenConfig.address, this.functionsUtil.integerValue(swapInfo.tokenAmountOut), MAX_UINT256];\n          } else {\n            return null;\n          }\n        }\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n    const dashboardUrl = `#${this.functionsUtil.getGlobalConfig(['dashboard','baseRoute'])}/best`;\n    const fixedAmount = this.functionsUtil.fixTokenDecimals(amount,this.state.tokenConfig.decimals);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        const mintedClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['Claim'].address ) : null;\n        const mintedNoClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['NoClaim'].address ) : null;\n        const mintedClaimAmount = mintedClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        const mintedNoClaimAmount = mintedNoClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedNoClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully minted <strong>${mintedClaimAmount.toFixed(4)} CLAIM</strong> and <strong>${mintedNoClaimAmount.toFixed(4)} NOCLAIM</strong> tokens<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'Claim':\n        const claimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const claimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === claimTokenConfig.address ) : null;\n        const receivedClaimAmount = claimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(claimTokensLog.data,16),claimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],claimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you are now covered in the event that there is a successful attack on the protocol<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'NoClaim':\n        debugger;\n        const noClaimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const noClaimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === noClaimTokenConfig.address ) : null;\n        const receivedNoClaimAmount = noClaimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(noClaimTokensLog.data,16),noClaimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],noClaimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedNoClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you will be rewarded if there is no successful attack on the protocol by the expiry date<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Set second step completed\n    let steps = this.state.steps;\n    steps[1].completed = true;\n\n    const transactionSucceeded = true;\n    const tokenBalance = await this.functionsUtil.getTokenBalance(this.state.selectedToken,this.props.account);\n\n    // console.log('transactionSucceeded',infoBox);\n\n    this.setState({\n      steps,\n      infoBox,\n      tokenBalance,\n      transactionSucceeded\n    });\n  }\n\n  async updateData(){\n    let apy = null;\n    const steps = [];\n    let infoBox = null;\n    let swapFee = null;\n    let covTokens = null;\n    let tokenPrice = null;\n    let tokenAmount = null;\n    let contractInfo = null;\n    let collateralAmount = null;\n    let approveDescription = null;\n\n    const claimTokenConfig = this.state.selectedCoverage.tokens['Claim'];\n    const noClaimTokenConfig = this.state.selectedCoverage.tokens['NoClaim'];\n    const balancerClaimConfig = claimTokenConfig.balancerPool;\n    const balancerNoClaimConfig = noClaimTokenConfig.balancerPool;\n\n    await Promise.all([\n      this.props.initContract(claimTokenConfig.name,claimTokenConfig.address,claimTokenConfig.abi),\n      this.props.initContract(noClaimTokenConfig.name,noClaimTokenConfig.address,noClaimTokenConfig.abi),\n      this.props.initContract(balancerClaimConfig.name,balancerClaimConfig.address,balancerClaimConfig.abi),\n      this.props.initContract(balancerNoClaimConfig.name,balancerNoClaimConfig.address,balancerNoClaimConfig.abi)\n    ]);\n\n    const [\n      claimTokenBalance,\n      noClaimTokenBalance,\n      balancerPoolClaimBalance,\n      balancerPoolNoClaimBalance\n    ] = await Promise.all([\n      // Get Claim token balance\n      this.functionsUtil.getTokenBalance(claimTokenConfig.name,this.props.account),\n      // Get NOCLAIM token balance\n      this.functionsUtil.getTokenBalance(noClaimTokenConfig.name,this.props.account),\n      // Get Balancer Claim token Pool balance\n      this.functionsUtil.getTokenBalance(balancerClaimConfig.name,this.props.account),\n      // Get Balancer NOCLAIM token Pool balance\n      this.functionsUtil.getTokenBalance(balancerNoClaimConfig.name,this.props.account)\n    ]);\n\n    // Check if user has both Claim and NOCLAIM tokens\n    const hasMintedTokens = claimTokenBalance && noClaimTokenBalance && claimTokenBalance.gt(0) && noClaimTokenBalance.gt(0);\n\n    // Set Contract Info\n    switch (this.state.selectedAction){\n      case 'Mint':\n        contractInfo = this.props.toolProps.contract;\n      break;\n      case 'NoClaim':\n        contractInfo = noClaimTokenConfig.balancerPool;\n      break;\n      case 'Claim':\n        contractInfo = claimTokenConfig.balancerPool;\n      break;\n      default:\n      break;\n    }\n\n    const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n\n    if (contractInfo){\n      if (balancerTokenConfig){\n        [\n          swapFee,\n          covTokens,\n          tokenPrice\n        ] = await Promise.all([\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSwapFee'),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getBalance',[balancerTokenConfig.address]),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSpotPrice',[this.state.tokenConfig.address,balancerTokenConfig.address])\n        ]);\n\n        // Calculate yearly returns\n        if (tokenPrice){\n          const isClaim = this.state.selectedAction === 'Claim';\n          const expirationTimestamp = this.state.selectedCoverage.expirationTimestamp;\n          const days =  (expirationTimestamp*1000 - Date.now())/(60 * 60 * 24 * 1000);\n          tokenPrice = this.functionsUtil.fixTokenDecimals(tokenPrice,this.state.tokenConfig.decimals);\n          const apyPrice = isClaim ? tokenPrice : this.functionsUtil.BNify(1).minus(tokenPrice).div(tokenPrice);\n          apy = this.functionsUtil.BNify(100).times(apyPrice).times(365).div(days);\n        }\n\n        // Fix swap Fees\n        if (swapFee){\n          swapFee = this.functionsUtil.fixTokenDecimals(swapFee,18);\n        }\n      }\n\n      switch (this.state.selectedAction){\n        case 'Mint':\n          approveDescription = `Approve the Cover Protocol contract`;\n          infoBox = {\n            icon:'MonetizationOn',\n            text:`Stake ${this.state.selectedToken} to mint both CLAIM and NOCLAIM tokens in a 1:1 ratio then add them to the respective Balancer Pool to earn trading fees.<br /><small>Prior to expiry or an accepted claim, users can redeem back their collateral with both their CLAIM and NOCLAIM tokens. <a href=\"https://docs.coverprotocol.com/user-guide/redemption\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a></small>`\n          };\n          // Add Approve Step\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:hasMintedTokens,\n            description:`Mint CLAIM and NOCLAIM tokens`\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks3',\n            description:`Add your CLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolClaimBalance && balancerPoolClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['Claim'].balancerPool.address}/`,\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks4',\n            description:`Add your NOCLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolNoClaimBalance && balancerPoolNoClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['NoClaim'].balancerPool.address}/`,\n          });\n        break;\n        case 'NoClaim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your NOCLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong> if there is no successful attack on the protocol by the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`NOCLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold if there is no successful attack on the protocol by the expiry date.`\n            };\n          }\n\n          // Add Yearly cost and read more\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly return of buying and holding NOCLAIM until expiration is <strong>${apy.toFixed(2)}%</strong>` : null}</span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the NOCLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:noClaimTokenBalance && noClaimTokenBalance.gt(0),\n            description:`Buy NOCLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        case 'Claim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            const portfolioCoveredPerc = 32;//this.state.portfolio && this.state.portfolio.totalBalance.gt(0) ? tokenAmount.div(this.state.portfolio.totalBalance).times(100) : null;\n            infoBox = {\n              icon:'BeachAccess',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your CLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong>${ portfolioCoveredPerc ? ` <strong>(${portfolioCoveredPerc}% of your portfolio)</strong>` : '' } in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'BeachAccess',\n              text:`CLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          }\n\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly cost of buying and holding CLAIM until expiration is <strong>${apy.toFixed(2)}%` : null}</strong></span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the CLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:claimTokenBalance && claimTokenBalance.gt(0),\n            description:`Buy CLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        default:\n        break;\n      }\n\n      const transactionSucceeded = false;\n      this.setState({\n        apy,\n        steps,\n        infoBox,\n        swapFee,\n        covTokens,\n        tokenPrice,\n        contractInfo,\n        approveDescription,\n        transactionSucceeded\n      });\n    }\n  }\n\n  async loadData(){\n    const currTime = parseInt(Date.now()/1000);\n    const activeCoverages = this.props.toolProps.coverages.reduce( (output,c,index) => {\n      if (c.expirationTimestamp>currTime){\n        const expirationDate = this.functionsUtil.strToMoment(c.expirationTimestamp*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n        const icon = `images/tokens/${c.collateral}.svg`;\n        const label = `Collateral: ${c.collateral} - Expiration: ${expirationDate}`;\n        output.push({\n          icon,\n          label,\n          data:c,\n          value:expirationDate,\n        });\n      }\n      return output;\n    },[]);\n\n    const portfolio = await this.functionsUtil.getAccountPortfolio();\n    const defaultCoverage = activeCoverages.length ? activeCoverages[0] : null;\n\n    this.setState({\n      portfolio,\n      defaultCoverage,\n      activeCoverages\n    },() => {\n      if (defaultCoverage){\n        this.selectCoverage(defaultCoverage);\n      }\n    });\n  }\n\n  async selectCoverage(coverage){\n    const selectedCoverage = coverage.data;\n    this.setState({\n      selectedCoverage\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n\n    const isMint = this.state.selectedAction === 'Mint';\n    const isBuyClaim = this.state.selectedAction === 'Claim';\n    const isBuyNoClaim = this.state.selectedAction === 'NoClaim';\n    const txAction = isMint ? this.state.selectedAction : `Buy ${this.state.selectedAction}`;\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.activeCoverages ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading active coverages...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.activeCoverages.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active coverages.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text mb={1}>\n                        Select Coverage:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'strategy'}\n                        isSearchable={false}\n                        options={this.state.activeCoverages}\n                        CustomOptionValue={CustomOptionValue}\n                        defaultValue={this.state.defaultCoverage}\n                        onChange={this.selectCoverage.bind(this)}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      this.state.selectedCoverage && (\n                        <Box\n                          mt={3}\n                          width={1}\n                        >\n                          <Text mb={1}>\n                            Select Action:\n                          </Text>\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={['column','row']}\n                            justifyContent={'space-between'}\n                          >\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isMint ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Add Liquidity'}\n                              imageSrc={'images/mint.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'mint CLAIM and NOCLAIM\\nand stake in Balancer Pool'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isMint}\n                              handleClick={ e => this.setAction('Mint') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy CLAIM'}\n                              imageSrc={'images/claim.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'protect in case of attacks\\nagainst the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyClaim}\n                              handleClick={ e => this.setAction('Claim') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyNoClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy NOCLAIM'}\n                              isMobile={this.props.isMobile}\n                              imageSrc={'images/noclaim.svg'}\n                              subcaption={'get rewarded if no attack\\noccurs on the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyNoClaim}\n                              handleClick={ e => this.setAction('NoClaim') }\n                            />\n                          </Flex>\n                          {\n                            this.state.tokenConfig && this.state.tokenBalance && this.state.contractInfo &&\n                              <Box\n                                mt={2}\n                                mb={3}\n                                width={1}\n                              >\n                                <SendTxWithBalance\n                                  {...this.props}\n                                  action={txAction}\n                                  error={this.state.error}\n                                  steps={this.state.steps}\n                                  infoBox={this.state.infoBox}\n                                  tokenConfig={this.state.tokenConfig}\n                                  tokenBalance={this.state.tokenBalance}\n                                  contractInfo={this.state.contractInfo}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractApproved={this.contractApproved.bind(this)}\n                                  approveDescription={this.state.approveDescription}\n                                  balanceSelectorInfo={this.state.balanceSelectorInfo}\n                                  changeInputCallback={this.changeInputCallback.bind(this)}\n                                  getTransactionParams={this.getTransactionParams.bind(this)}\n                                >\n                                  <BuyModal\n                                    {...this.props}\n                                    showInline={true}\n                                    availableMethods={[]}\n                                    buyToken={this.state.selectedToken}\n                                  />\n                                </SendTxWithBalance>\n                              </Box>\n                          }\n                        </Box>\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default CoverProtocol;\n","import Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TokenMigration extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    migrationSucceeded:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    if (selectedFromToken && selectedFromToken !== this.props.urlParams.param2){\n      this.changeFromToken(selectedFromToken);\n    }\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n  }\n\n  changeFromToken = (selectedToken) => {\n    const convertTool = this.functionsUtil.getGlobalConfig(['tools','tokenMigration']);\n    this.props.goToSection(`tools/${convertTool.route}/${selectedToken}`);\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    const tokenInfo = this.props.toolProps.availableTokens[selectedFromToken];\n\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n\n    const availableStrategies = typeof this.props.toolProps.availableStrategies !== 'undefined' ? this.props.toolProps.availableStrategies : Object.keys(this.props.availableStrategies);\n\n    availableStrategies.forEach( strategy => {\n      const strategyAvailableTokens =  this.props.availableStrategies[strategy];\n      const baseTokenConfig = strategyAvailableTokens[tokenInfo.baseToken];\n      if (!baseTokenConfig){\n        return false;\n      }\n\n      // Remove icon\n      delete baseTokenConfig.icon;\n\n      if (!selectedDestToken){\n        selectedDestToken = baseTokenConfig.idle.token;\n      }\n      baseTokenConfig.strategy = strategy;\n      baseTokenConfig.baseToken = tokenInfo.baseToken;\n      availableDestinationTokens[baseTokenConfig.idle.token] = baseTokenConfig;\n    });\n\n    this.setState({\n      tokenConfig:null,\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n\n    const destTokenConfig = this.state.availableDestinationTokens[selectedDestToken];\n    const tokenInfo = this.props.toolProps.availableTokens[this.state.selectedFromToken];\n\n    const tokenConfig = {\n      token:destTokenConfig.baseToken,\n      address:destTokenConfig.address,\n      decimals:destTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = destTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:tokenInfo.abi,\n      name:tokenInfo.token,\n      token:tokenInfo.token,\n      address:tokenInfo.address\n    };\n    \n    const migrationContract = this.props.toolProps.migrationContract;\n\n    // Add migration function\n    if (tokenInfo.migrateFunction){\n      migrationContract.functions[0].name = tokenInfo.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(destTokenConfig.strategy,tokenInfo.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedDestToken\n    });\n  }\n\n  migrationCallback = () => {\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={true}\n              onChange={this.changeFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-dest'}\n                  showBalance={false}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          {\n            this.state.selectedFromToken && this.state.selectedDestToken ? (\n              <Migrate\n                {...this.props}\n                showActions={false}\n                getTokenPrice={false}\n                isMigrationTool={true}\n                tokenConfig={this.state.tokenConfig}\n                migrationCallback={this.migrationCallback}\n                selectedToken={this.state.selectedFromToken}\n                selectedStrategy={this.props.selectedStrategy}\n              >\n                {\n                  !this.props.account ? (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'Input'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={2}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Please connect with your wallet interact with Idle.\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.props.connectAndValidateAccount}\n                        >\n                          Connect\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.migrationSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              Your {this.state.selectedFromToken} have been successfully migrated!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedFromToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Migrate>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenMigration;\n","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Box, Text, Icon, Link } from \"rimble-ui\";\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\n\nclass BatchMigration extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    hasDeposited:false,\n    selectedToken:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async checkBatchs(){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.selectedTokenConfig.name,this.state.selectedTokenConfig.address,this.state.selectedTokenConfig.abi)\n    ]);\n\n    const [currBatchIndex,migrationContractApproved] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.selectedTokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    const newState = {};\n    const batchDeposits = {};\n    const batchTotals = {};\n    let batchCompleted = false;\n\n    if (currBatchIndex !== null){\n      for (let batchIndex = 0; batchIndex <= currBatchIndex ; batchIndex++){\n        let [batchTotal,batchDeposit] = await Promise.all([\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n        if (batchTotal && batchTotal !== null){\n          batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.selectedTokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.selectedTokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n\n            batchDeposits[batchIndex] = batchDeposit;\n            // Check claimable\n            if (batchIndex < currBatchIndex){\n              batchCompleted = true;\n            }\n          }\n        }\n      }\n\n      newState.batchDeposits = batchDeposits;\n    }\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    newState.claimSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.batchCompleted = batchCompleted;\n    newState.hasDeposited = hasDeposited;\n    newState.canDeposit = !hasDeposited && batchMigrationDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    newState.action = hasDeposited ? 'redeem' : 'deposit';\n    newState.migrationContractApproved = migrationContractApproved;\n\n    this.setState(newState);\n  }\n\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      this.checkBatchs();\n    }\n  }\n\n  selectFromToken = async (selectedToken) => {\n\n    const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const strategyAvailableTokens =  this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.baseToken];\n\n    const tokenConfig = {\n      token:selectedTokenConfig.baseToken,\n      address:selectedTokenConfig.address,\n      decimals:selectedTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:selectedTokenConfig.abi,\n      name:selectedTokenConfig.name,\n      token:selectedTokenConfig.token,\n      address:selectedTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    });\n  }\n\n  claim = async () => {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: `BatchMigration`,\n        eventAction: 'Claim',\n        eventLabel: this.props.selectedToken,\n        eventValue: parseInt(claimableValue)\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  migrationCallback = () => {\n    this.checkBatchs();\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedToken){\n      return null;\n    }\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={false}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            (this.state.canDeposit || this.state.canClaim) && \n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  px:4,\n                  mt:3,\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                > \n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.migrationContractApproved ? 'CheckBox' : 'LooksOne'}\n                      color={ this.state.migrationContractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Approve the batch migration contract\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.hasDeposited ? 'CheckBox' : 'LooksTwo'}\n                      color={ this.state.hasDeposited ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Deposit your {this.state.selectedTokenConfig.token}\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                      color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Wait for the batch to be migrated\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                      color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Claim your {this.state.selectedToken}V4\n                    </Text>\n                  </Flex>\n                </Flex>\n              </DashboardCard>\n          }\n          {\n            this.state.selectedToken ? (\n              <Box width={1}>\n                {\n                  this.state.migrationContractApproved && (this.state.canDeposit || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    batchMigrationDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        showActions={false}\n                        migrationParams={[]}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        callbackApprove={this.checkBatchs.bind(this)}\n                        selectedStrategy={this.props.selectedStrategy}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedTokenConfig.token} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        {\n                          !this.props.account ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3\n                              }}\n                            >\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  size={'2.3em'}\n                                  name={'Input'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Please connect with your wallet interact with Idle.\n                                </Text>\n                                <RoundButton\n                                  buttonProps={{\n                                    mt:2,\n                                    width:[1,1/2]\n                                  }}\n                                  handleClick={this.props.connectAndValidateAccount}\n                                >\n                                  Connect\n                                </RoundButton>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                my:3\n                              }}\n                            >\n                              {\n                                batchId ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      color={'cellText'}\n                                      name={'HourglassEmpty'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      {\n                                        this.state.batchCompleted ? (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >The batch has been migrated, click on the \"Claim\" button to withdraw your tokens.</Text.span>\n                                        ) : (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >\n                                            You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your tokens.\n                                            {\n                                              typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                              <Text.span\n                                                color={'cellText'}\n                                              >\n                                                <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                              </Text.span>\n                                            }\n                                          </Text.span>\n                                        )\n                                      }\n                                    </Text>\n                                  </Flex>\n                                ) : this.state.migrationSucceeded ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'DoneAll'}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You have successfully deposited your {this.state.selectedTokenConfig.token} into the batch!\n                                    </Text>\n                                  </Flex>\n                                ) : (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'MoneyOff'}\n                                      color={'cellText'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You don't have any {this.state.selectedTokenConfig.token} in your wallet.\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                            </DashboardCard>\n                          )\n                        }\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch migration is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar web3={this.props.web3} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.selectedToken} V4!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The batch has been migrated!<br />You can now claim your {this.state.tokenConfig.idle.token} V4.\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:3,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your V4 tokens.\n                                {\n                                  typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                  </Text.span>\n                                }\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Box>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchMigration;","import IDLE from '../contracts/IDLE.json';\nimport WETH from '../abis/tokens/WETH.json';\nimport COMP from '../abis/compound/COMP.json';\nimport TokenSwap from '../TokenSwap/TokenSwap';\nimport yDAIv3 from '../abis/iearn/yDAIv3.json';\nimport yUSDCv3 from '../abis/iearn/yUSDCv3.json';\nimport yUSDTv3 from '../abis/iearn/yUSDTv3.json';\nimport ySUSDv3 from '../abis/iearn/ySUSDv3.json';\nimport yTUSDv3 from '../abis/iearn/yTUSDv3.json';\nimport ETHWrapper from '../ETHWrapper/ETHWrapper';\nimport Timelock from '../contracts/Timelock.json';\nimport CurveZap from '../abis/curve/CurveZap.json';\nimport CovToken from '../abis/cover/CovToken.json';\n// import CurveSwap from '../abis/curve/CurveSwap.json';\nimport CurvePool from '../abis/curve/CurvePool.json';\nimport NexusMutual from '../NexusMutual/NexusMutual';\nimport CoverMint from '../abis/cover/CoverMint.json';\nimport LockedIDLE from '../contracts/LockedIDLE.json';\nimport { Web3Versions } from '@terminal-packages/sdk';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport PriceOracle from '../contracts/PriceOracle.json';\nimport IdleTokenV2 from '../contracts/IdleTokenV2.json';\nimport StrategyPage from '../StrategyPage/StrategyPage';\nimport BuyModal from '../utilities/components/BuyModal';\nimport IdleTokenV3 from '../contracts/IdleTokenV3.json';\nimport BatchDeposit from '../BatchDeposit/BatchDeposit';\nimport EarlyRewards from '../contracts/EarlyRewards.json';\nimport CoverProtocol from '../CoverProtocol/CoverProtocol';\nimport CurveDeposit from '../abis/curve/CurveDeposit.json';\nimport VesterFactory from '../contracts/VesterFactory.json';\nimport GovernorAlpha from '../contracts/GovernorAlpha.json';\nimport EcosystemFund from '../contracts/EcosystemFund.json';\nimport Comptroller from '../abis/compound/Comptroller.json';\nimport BalancerPool from '../abis/balancer/BalancerPool.json';\nimport IdleController from '../contracts/IdleController.json';\nimport TokenMigration from '../TokenMigration/TokenMigration';\nimport BatchMigration from '../BatchMigration/BatchMigration';\nimport IdleBatchedMint from '../contracts/IdleBatchedMint.json';\nimport { RampInstantSDK } from '@ramp-network/ramp-instant-sdk';\nimport IdleProxyMinter from '../contracts/IdleProxyMinter.json';\nimport IdleRebalancerV3 from '../contracts/IdleRebalancerV3.json';\nimport LiquidityGaugeV2 from '../abis/curve/LiquidityGaugeV2.json';\nimport IdleBatchConverter from '../contracts/IdleBatchConverter.json';\nimport UniswapV2Router02 from '../abis/uniswap/UniswapV2Router02.json';\nimport BalancerExchangeProxy from '../abis/balancer/BalancerExchangeProxy.json';\nimport IdleConverterPersonalSignV4 from '../contracts/IdleConverterPersonalSignV4.json';\n\nconst env = process.env;\n\nconst globalConfigs = {\n  appName: 'Idle',\n  version: 'v5.6',\n  baseToken: 'ETH',\n  baseURL: 'https://idle.finance',\n  forumURL:'https://gov.idle.finance',\n  theme:{\n    darkModeEnabled:true\n  },\n  betaURL: 'https://beta.idle.finance',\n  countries:{\n    'USA':'United States of America',\n    'GBR':'United Kingdom',\n    'AUS':'Australia',\n    'BRA':'Brazil',\n    'CHN':'China',\n    'CAN':'Canada',\n    'EUR':'Europe',\n    'HKG':'Hong Kong',\n    'IND':'India',\n    'MEX':'Mexico',\n    'RUS':'Russia',\n    'ZAF':'South Africa',\n    'KOR':'South Korea'\n  },\n  logs:{ // Enable logs levels\n    errorsEnabled:false,\n    messagesEnabled:false,\n  },\n  connectors:{ // Connectors props\n    metamask:{\n      enabled:true,\n      subcaption:'Browser extension'\n    },\n    opera:{\n      enabled:true,\n      subcaption:'Opera injected wallet'\n    },\n    dapper:{\n      enabled:true,\n      icon:'dapper.png',\n      subcaption:'Browser extension',\n    },\n    coinbase:{\n      enabled:true,\n      icon:'coinbase.png',\n      subcaption:'Connect with Coinbase wallet'\n    },\n    trustwallet:{\n      enabled:true,\n      subcaption:'Connect with Trust Wallet'\n    },\n    walletconnect:{\n      enabled:true,\n      iconModal:'walletconnect.png',\n      subcaption:'Connect with QR code'\n    },\n    walletlink:{\n      enabled:true,\n      icon:'coinbase.png',\n      name:'Coinbase Wallet',\n      subcaption:'Connect with QR code'\n    },\n    fortmatic:{\n      enabled:true,\n      subcaption:'Login with phone-number'\n    },\n    portis:{\n      enabled:true,\n      subcaption:'Login with e-mail'\n    },\n    authereum:{\n      enabled:true,\n      subcaption:'Cross-device wallet'\n    },\n    torus:{\n      enabled:true,\n      icon:'torus.png',\n      subcaption:'One-Click login for Web 3.0'\n    },\n    trezor:{\n      enabled:true,\n      subcaption:'Hardware wallet'\n    },\n    ledger:{\n      enabled:true,\n      subcaption:'Hardware wallet'\n    },\n    custom:{\n      enabled:true,\n      icon:'tokens/ETH.svg',\n      subcaption:'Custom address'\n    }\n  },\n  newsletterSubscription:{\n    endpoint:'https://dev.lapisgroup.it/idle/newsletter.php'\n  },\n  messages:{\n    scoreShort:'Protocol Risk Score',\n    apyShort:'Annual Percentage Yield',\n    tokenPrice:'The token price is calculated using Uniswap spot prices.',\n    cheapRedeem:'Amount of unlent funds available for low gas fees redeem',\n    curveBonusSlippage:'Slippage or bonus depending on if the coin is low or high in the Curve Pool',\n    distributionSpeed:'The distribution indicates the amount of tokens distributed for the entire pool.',\n    directMint:'Pay an additional gas fee to rebalance the pool and help all users gain an additional APR',\n    performanceFee:'This fee is charged on positive returns generated by Idle including accrued gov tokens except IDLE',\n    govTokenApr:'Governance Token APR is calculated using the spot price from Uniswap and the current distribution speed for the specific pool.',\n    userDistributionSpeed:'The distribution indicates the amount of tokens distributed for your account based on your current pool share.',\n    govTokenRedeemableBalance:'The redeemable balance is re-calculated on every interaction with the smart-contract so, the shown balance may be lower than the real one.',\n    riskScoreShort:'It\\'s a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.',\n    batchDepositExecutionSchedule:'Batches are executed twice a week, usually on Sunday and Wednesday, and only when the pool size reaches at least 20,000$. The time of each execution will vary depending on the gas price of the Ethereum network.',\n    apyLong:'APY is based on (I) the current yield advertised by the underlying protocol, (II) the current distribution rate of governance tokens provided by underlying lending protocols (III) the current estimated price of governance tokens from Uniswap spot prices. (IV) IDLE token distribution is referred to the entire pool.',\n    yieldFarming:'Strategies in Idle now will be able to support and distribute a vast range of yield opportunities across multiple protocols. Users will be able to receive their equivalent share of governance token that the protocol is receiving while allocating liquidity to yield farming opportunities. <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://idlefinance.medium.com/idle-yield-farming-upgrade-18e4bc483c8f\">Read more here</a>.',\n    riskScore:`It's a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.<br /><br />The model outputs a 0-10 score, where <strong>0 is the most risky and 10 is the most safe.</strong> Visit <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://defiscore.io/overview\">https://defiscore.io/overview</a> for further information.`,\n    curveInstructions:`<strong>Depositing into the pool:</strong><br />By depositing your funds into the Curve Pool you may incur in slippage or bonus depending on if the coin is low or high in the pool.<br /><br /><strong>Withdrawing share from the pool:</strong><br />When you redeem your tokens previously deposited in the Curve Pool you get back an uneven amounts of tokens, that can give slippage or bonus depending on if the coin is low or high in the pool.`\n  },\n  analytics:{\n    google:{\n      events:{\n        enabled:true, // Enable Google Analytics events\n        debugEnabled:false, // Enable sending for test environments\n        addPostfixForTestnet:true // Append testnet to eventCategory\n      }\n    }\n  },\n  modals:{ // Enable modals\n    first_deposit_referral:false, // Referral share modal\n    first_deposit_share:true, // First deposit share modal\n    migrate:{\n      enabled:true\n    },\n    welcome:{ // Welcome modal\n      enabled:true,\n      frequency:604800 // One week\n    }\n  },\n  dashboard:{\n    baseRoute:'/dashboard',\n    theme:{\n      mode:'light',\n      darkModeEnabled:true\n    },\n  },\n  governance:{\n    test:false,\n    enabled:true,\n    startBlock:11333729,\n    baseRoute:'/governance',\n    props:{\n      tokenName:'IDLE',\n      availableContracts:{\n        IDLE,\n        PriceOracle,\n        GovernorAlpha,\n        EcosystemFund,\n        IdleController\n      }\n    },\n    contracts:{\n      delegates:'IDLE',\n      governance:'GovernorAlpha',\n    }\n  },\n  curve:{\n    enabled:false,\n    params:{\n      n_coins:3,\n      label:'Curve',\n      route:'/dashboard/curve',\n      image:'images/protocols/curve.svg',\n      imageInactive:'images/protocols/curve-off.svg',\n    },\n    rates:{\n      path:['apy','day','idle'],\n      endpoint:'https://www.curve.fi/raw-stats/apys.json'\n    },\n    poolContract:{\n      decimals:18,\n      abi:CurvePool,\n      name:'idleDAI+idleUSDC+idleUSDT',\n      token:'idleDAI+idleUSDC+idleUSDT',\n      address:'0x09f4b84a87fc81fc84220fd7287b613b8a9d4c05'\n    },\n    depositContract:{\n      abi:CurveDeposit,\n      name:'idleCurveDeposit',\n      address:'0x83f252f036761a1e3d10daca8e16d7b21e3744d7'\n    },\n    gaugeContract:{\n      abi:LiquidityGaugeV2,\n      name:'LiquidityGaugeV2',\n      address:'0xd69ac8d9D25e99446171B5D0B3E4234dAd294890'\n    },\n    zapContract:{\n      abi:CurveZap,\n      name:'idleCurveZap',\n      address:'0x456974df1042ba7a46fd49512a8778ac3b840a21'\n    },\n    migrationContract:{\n      abi:CurveDeposit,\n      name:'idleCurveDeposit',\n      address:'0x83f252f036761a1e3d10daca8e16d7b21e3744d7',\n      functions:[\n        {\n          label:'Deposit',\n          name:'add_liquidity'\n        },\n      ]\n    },\n    availableTokens:{\n      idleDAIYield:{\n        decimals:18,\n        enabled:true,\n        baseToken:'DAI',\n        token:'idleDAIYield',\n        address:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        migrationParams:{\n          n_coins:3,\n          coinIndex:0\n        },\n      },\n      idleUSDCYield:{\n        decimals:18,\n        enabled:true,\n        baseToken:'USDC',\n        token:'idleUSDCYield',\n        address:'0x5274891bEC421B39D23760c04A6755eCB444797C',\n        migrationParams:{\n          n_coins:3,\n          coinIndex:1\n        },\n      },\n      idleUSDTYield:{\n        decimals:18,\n        enabled:true,\n        baseToken:'USDT',\n        token:'idleUSDTYield',\n        address:'0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        migrationParams:{\n          n_coins:3,\n          coinIndex:2\n        },\n      },\n    }\n  },\n  permit:{\n    DAI:{\n      version:1,\n      EIPVersion:null,\n      nonceMethod:'nonces',\n      name:'Dai Stablecoin',\n      type:[\n        { name: \"holder\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"expiry\", type: \"uint256\" },\n        { name: \"allowed\", type: \"bool\" },\n      ]\n    },\n    USDC:{\n      version:2,\n      name:'USD Coin',\n      EIPVersion:2612,\n      nonceMethod:'nonces',\n      type:[\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" },\n      ]\n    }\n  },\n  govTokens:{\n    IDLE:{\n      abi:IDLE,\n      decimals:18,\n      token:'IDLE',\n      enabled:true,\n      showAUM:false, // Include IDLE balance in AUM\n      showAPR:false, // Include IDLE Apr\n      protocol:'idle',\n      showPrice:false, // Show price in Yield Farming section\n      disabledTokens:[], // Disable IDLE distribution for idleToken\n      showBalance:false, // Include IDLE balance in Portfolio Donut\n      aprTooltipMode:false,\n      distributionFrequency:'day', // Multiply distribution per block\n      color:'hsl(162, 100%, 41%)',\n      icon:'images/tokens/IDLE.png',\n      address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e' // MAIN\n      // address:'0xAB6Bdb5CCF38ECDa7A92d04E86f7c53Eb72833dF', // KOVAN\n    },\n    COMP:{\n      abi:COMP,\n      decimals:18,\n      token:'COMP',\n      enabled:true,\n      showAUM:true, // Include IDLE balance in AUM\n      showAPR:true, // Include COMP Apr\n      showPrice:true,\n      showBalance:true, // Include COMP balance in Portfolio Donut\n      disabledTokens:[],\n      protocol:'compound',\n      aprTooltipMode:false,\n      distributionFrequency:'day',\n      color:'hsl(162, 100%, 41%)',\n      address:'0xc00e94cb662c3520282e6f5717214004a7f26888', // MAIN\n      // address:'0x61460874a7196d6a22d1ee4922473664b3e95270' // KOVAN\n    }\n  },\n  contracts:{\n    LockedIDLE:{\n      abi:LockedIDLE,\n      address:'0xF241a0151841AE2E6ea750D50C5794b5EDC31D99'\n    },\n    PriceOracle:{\n      abi:PriceOracle,\n      address:'0x972A64d108e250dF98dbeac8170678501f5EF181' // MAIN\n      // address:'0xCab5760688db837Bb453FE1DFBC5eDeE6fa8F0FF' // KOVAN\n    },\n    Timelock:{\n      abi:Timelock,\n      address:'0xD6dABBc2b275114a2366555d6C481EF08FDC2556' // MAIN\n      // address:'0xfD88D7E737a06Aa9c62B950C1cB5eE63DA379AFd' // KOVAN\n    },\n    EcosystemFund:{\n      abi:EcosystemFund,\n      address:'0xb0aA1f98523Ec15932dd5fAAC5d86e57115571C7' // MAIN\n      // address:'0x125d3D6A8e546BD13802c309429CBB4db5737d57' // KOVAN\n    },\n    VesterFactory:{\n      abi:VesterFactory,\n      address:'0xbF875f2C6e4Cc1688dfe4ECf79583193B6089972' // MAIN\n      // address:'0x9b52f91578c8AfA8e2DF07d4D7726bB6b73Ec1FE' // KOVAN\n    },\n    IdleController:{\n      abi:IdleController,\n      address:'0x275DA8e61ea8E02d51EDd8d0DC5c0E62b4CDB0BE' // MAIN\n      // address:'0x8Ad5F0644b17208c81bA5BDBe689c9bcc7143d87' // KOVAN\n    },\n    EarlyRewards:{\n        abi:EarlyRewards,\n        address:'0xa1F71ED24ABA6c8Da8ca8C046bBc9804625d88Fc' // MAIN\n        // address:'0x07A94A60B54c6b2Da19e23D6E9123180Bf92ED40' // KOVAN\n    },\n    GovernorAlpha:{\n      abi:GovernorAlpha,\n      address:'0x2256b25CFC8E35c3135664FD03E77595042fe31B' // MAIN\n      // address:'0x782cB1dbd0bD4df95c2497819be3984EeA5c2c25' // KOVAN\n    },\n    Comptroller:{\n      abi:Comptroller,\n      address:'0x3d9819210a31b4961b30ef54be2aed79b9c9cd3b', // Main\n      // address:'0x5eae89dc1c671724a672ff0630122ee834098657' // Kovan\n    },\n    UniswapRouter:{\n      abi:UniswapV2Router02,\n      address:'0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\n    },\n    BalancerExchangeProxy:{\n      abi:BalancerExchangeProxy,\n      address:'0x3E66B66Fd1d0b02fDa6C811Da9E0547970DB2f21'\n    }\n  },\n  tokens:{\n    DAI:{\n      zeroExInstant:{\n        orderSource: 'https://api.0x.org/sra/',\n        assetData:'0xf47261b00000000000000000000000006b175474e89094c44da98b954eedeac495271d0f',\n        affiliateInfo: {\n            feeRecipient: '0x4215606a720477178AdFCd5A59775C63138711e8',\n            feePercentage: 0.0025\n        },\n      },\n    },\n    USDC:{\n      zeroExInstant:{\n        orderSource: 'https://api.0x.org/sra/',\n        assetData:'0xf47261b0000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        affiliateInfo: {\n            feeRecipient: '0x4215606a720477178AdFCd5A59775C63138711e8',\n            feePercentage: 0.0025\n        },\n      },\n    },\n  },\n  strategies:{\n    best:{\n      token:'DAI',\n      color:'#f32121',\n      comingSoon:false,\n      addGovTokens:true,\n      titlePostfix:null,\n      title:'Best-Yield',\n      iconName:'Whatshot',\n      govTokensEnabled:true,\n      component: StrategyPage,\n      chartColor:'hsl(40,95%,59%)',\n      icon:'images/strategies/best-on.svg',\n      iconInactive:'images/strategies/best-off.svg',\n      iconInactiveDark:'images/strategies/best-white.svg',\n      desc:'Maximize your returns across DeFi protocols',\n      descLong:'The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.',\n      descShort:'The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.'\n    },\n    risk:{\n      token:'DAI',\n      color:'#2196F3',\n      comingSoon:false,\n      titlePostfix:null,\n      addGovTokens:true,\n      iconName:'Security',\n      title:'Risk-Adjusted',\n      govTokensEnabled:true,\n      component: StrategyPage,\n      chartColor:'hsl(211,67%,47%)',\n      icon:'images/strategies/risk-on.svg',\n      iconInactive:'images/strategies/risk-off.svg',\n      iconInactiveDark:'images/strategies/risk-white.svg',\n      desc:'Optimize your risk exposure across DeFi protocols',\n      descLong:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.',\n      descShort:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.'\n    },\n    new:{\n      token:'DAI',\n      color:'#2196F3',\n      comingSoon:true,\n      addGovTokens:true,\n      iconName:'Adjust',\n      title:'Coming Soon',\n      chartColor:'hsl(211,67%,47%)',\n      icon:'images/strategies/solr-on.svg',\n      desc:'More strategies are coming soon!',\n      iconInactive:'images/strategies/solr-off.svg',\n      descLong:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.',\n      descShort:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.'\n    }\n  },\n  stats:{\n    enabled:true, // Enable endpoint\n    rates:{\n      TTL:300, // 5 minutes\n      endpoint:'https://api.idle.finance/rates/'\n    },\n    tvls:{\n      TTL:120,\n      endpoint:'https://api.idle.finance/tvls/'\n    },\n    substack:{\n      TTL:1800,\n      endpoint:'https://api.idle.finance/substack/'\n    },\n    scores:{\n      TTL:300, // 5 minutes\n      endpoint:'https://api.idle.finance/scores/'\n    },\n    config:{\n      headers: env.REACT_APP_IDLE_KEY ? { Authorization: `Bearer ${env.REACT_APP_IDLE_KEY}` } : {}\n    },\n    versions:{\n      /*\n      v2:{\n        label:'Idle V2',\n        startTimestamp:null,\n        additionalProtocols:[],\n        endTimestamp:1589752999,\n        enabledStrategies:['best'],\n        showPerformanceTooltip:false,\n        enabledTokens:['DAI','USDC'],\n      },\n      */\n      v3:{\n        label:'Idle V3',\n        additionalProtocols:[],\n        endTimestamp:1597237542,\n        startTimestamp:1589801874,\n        showPerformanceTooltip:false,\n        strategiesParams:{\n          risk:{\n            endTimestamp:1597233922,\n          }\n        },\n        enabledStrategies:['best','risk'],\n        enabledTokens:['DAI','USDC','USDT','TUSD','SUSD','WBTC'],\n      },\n      v4:{\n        label:'Idle V4',\n        endTimestamp:null,\n        startTimestamp:1597442400, // 1598220000\n        enabledStrategies:['best','risk'],\n        showPerformanceTooltip:true,\n        strategiesParams:{\n          risk:{\n            startTimestamp:1599183170,\n          }\n        },\n        enabledTokens:['DAI','USDC','USDT','TUSD','SUSD','WBTC','WETH'],\n        additionalProtocols:[\n          {\n            decimals:16,\n            protocol:'compound',\n            name:'compoundWithCOMP',\n          }\n        ]\n      }\n    },\n    tokens:{\n      DAI:{\n        decimals:18,\n        enabled:true,\n        color:{\n          rgb:[250,184,51],\n          hex:'#F7B24A',\n          hsl:['40', '95%', '59%']\n        },\n        chart:{\n          labelTextColorModifiers:['darker', 2]\n        },\n        startTimestamp:'2020-02-11',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      USD:{\n        enabled:true,\n        color:{\n          hex:'#85bb65',\n          rgb:[133, 187, 101],\n          hsl:['98', '39%', '56%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 2]\n        },\n        address:null,\n        startTimestamp:'2020-02-04',\n      },\n      USDC:{\n        decimals:6,\n        enabled:true,\n        color:{\n          hex:'#2875C8',\n          rgb:[40,117,200],\n          hsl:['211', '67%', '47%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 2]\n        },\n        startTimestamp:'2020-02-04',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      USDT:{\n        decimals:6,\n        enabled:true,\n        color:{\n          hex:'#22a079',\n          rgb:[34, 160, 121],\n          hsl:['161', '65%', '38%']\n        },\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        startTimestamp:'2020-02-04',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      TUSD:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'0340a1',\n          rgb:[3, 64, 161],\n          hsl:['217', '96%', '32%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 5]\n        },\n        startTimestamp:'2020-06-22',\n        address:'0x0000000000085d4780b73119b644ae5ecd22b376',\n      },\n      SUSD:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#1e1a31',\n          rgb:[30, 26, 49],\n          hsl:['250', '31%', '15%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 5]\n        },\n        startTimestamp:'2020-06-22',\n        address:'0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n      },\n      WBTC:{\n        decimals:8,\n        enabled:true,\n        color:{\n          hex:'#eb9444',\n          rgb:[235, 148, 68],\n          hsl:['29', '81%', '59%']\n        },\n        startTimestamp:'2020-06-15',\n        conversionRateField:'wbtcDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4],\n        },\n        address:'0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      WETH:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#ee1f79',\n          rgb:[238, 31, 121],\n          hsl:['334', '86%', '53%']\n        },\n        startTimestamp:'2021-02-16',\n        conversionRateField:'wethDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4],\n        },\n        address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      COMP:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#00d395',\n          rgb:[0, 211, 149],\n          hsl:['162', '100%', '41%']\n        },\n        startTimestamp:'2020-06-15',\n        conversionRateField:'compDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0xc00e94cb662c3520282e6f5717214004a7f26888',\n      },\n      IDLE:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#0d55bb',\n          rgb:[13, 85, 187],\n          hsl:['215', '87%', '39%']\n        },\n        startTimestamp:'2020-11-10',\n        icon:'images/tokens/IDLE.png',\n        conversionRateField:'idleDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0xc00e94cb662c3520282e6f5717214004a7f26888',\n      },\n      'idleDAI+idleUSDC+idleUSDT':{\n        decimals:18,\n        enabled:false,\n        name:'Curve.fi',\n        color:{\n          hex:'#ff0000',\n          rgb:[255, 0, 0],\n          hsl:['0', '100%', '50%']\n        },\n        startTimestamp:'2020-06-15',\n      },\n    },\n    protocols:{\n      compound:{\n        legend:true,\n        enabled:true,\n        label:'Compound',\n        color:{\n          rgb:[0, 209, 146],\n          hsl:['162', '100%', '41%']\n        }\n      },\n      compoundWithCOMP:{\n        enabled:true,\n        rateField:['rate','compoundAdditionalAPR'],\n        label:'Compound + COMP',\n        color:{\n          rgb:[0, 153, 107],\n          hsl:['162', '100%', '30%']\n        }\n      },\n      fulcrum:{\n        legend:false,\n        enabled:false,\n        label:'Fulcrum',\n        color:{\n          rgb:[2, 138, 192],\n          hsl:['197', '98%', '38%']\n        }\n      },\n      dsr:{\n        label:'DSR',\n        enabled:false,\n        icon:'CHAI.png',\n        color:{\n          rgb:[222, 52, 67],\n          hsl:['355', '72%', '54%']\n        }\n      },\n      dydx:{\n        legend:true,\n        label:'DyDx',\n        enabled:true,\n        color:{\n          rgb:[87, 87, 90],\n          hsl:['240', '2%', '35%']\n        }\n      },\n      iearn:{\n        label:'Yearn',\n        enabled:true,\n      },\n      aave:{\n        label:'Aave V1',\n        legend:true,\n        enabled:true,\n        color:{\n          rgb:[230, 131, 206],\n          hsl:['315', '66%', '71%']\n        }\n      },\n      aavev2:{\n        legend:true,\n        enabled:true,\n        icon:'aave.svg',\n        label:'Aave V2',\n        color:{\n          rgb:[151, 79, 141],\n          hsl:['308', '31%', '45%']\n        }\n      },\n      curve:{\n        label:'',\n        enabled:true,\n        color:{\n          rgb:[0, 55, 255],\n          hsl:['227', '100%', '50%']\n        }\n      },\n      idle:{\n        label:'Idle',\n        enabled:true,\n        color:{\n          rgb:[0, 55, 255],\n          hsl:['227', '100%', '50%']\n        }\n      }\n    }\n  },\n  contract:{\n    methods:{\n      redeem:{\n        skipRebalance:true,\n        metaTransactionsEnabled:false\n      },\n      deposit:{\n        skipMint:true,\n        minAmountForMint:100000,\n        skipMintCheckboxEnabled:true,\n        metaTransactionsEnabled:false,\n        proxyContract:{\n          enabled:false,\n          abi:IdleProxyMinter,\n          name:'IdleProxyMinter',\n          function:'mintIdleTokensProxy',\n          address:'0x7C4414aA6B0c6CB1Bc7e5BFb7433138426AC637a',\n        }\n      },\n      migrate:{\n        skipRebalance:true,\n        minAmountForRebalance:10000,\n        minAmountForRebalanceMetaTx:10000\n      },\n      redeemGovTokens:{\n        enabled:true\n      },\n      rebalance:{\n        enabled:true,\n        abi:IdleRebalancerV3\n      }\n    }\n  },\n  network:{ // Network configurations\n    availableNetworks:{\n      1:'Mainnet',\n      3:'Ropsten',\n      4:'Rinkeby',\n      42:'Kovan',\n      1337:'Hardhat'\n    },\n    isForked:false, // If TRUE the tx confirmation callback is fired on the receipt\n    requiredNetwork:1, // { 1: Mainnet, 3: Ropsten, 42: Kovan }\n    blocksPerYear:2371428,\n    firstBlockNumber:8119247,\n    requiredConfirmations: 1,\n    accountBalanceMinimum: 0, // in ETH for gas fees\n    providers:{\n      infura:{\n        42: 'https://kovan.infura.io/v3/',\n        1: 'https://mainnet.infura.io/v3/',\n        1337: 'https://mainnet.infura.io/v3/'\n      },\n      etherscan:{\n        enabled:true, // False for empty txs list (try new wallet)\n        endpoints:{\n          1: 'https://api.etherscan.io/api',\n          1337: 'https://api.etherscan.io/api',\n          42: 'https://api-kovan.etherscan.io/api'\n        }\n      },\n      snapshot:{\n        whitelist:[\n          '0x9993ADB62085AcB05Fc493f7A1D10C11227A78fa',\n          '0xf12ce5807e3d3128B876aa1Cec0632D63547E22E'\n        ],\n        endpoints:{\n          proposals:'https://hub.snapshot.page/api/idlefinance.eth/proposals'\n        },\n        urls:{\n          proposals:'https://signal.idle.finance/#/idlefinance.eth/proposal/'\n        }\n      },\n      biconomy:{\n        enabled:false,\n        enableLogin:false,\n        supportedNetworks:[1,42],\n        disabledWallets:['authereum'],\n        endpoints:{\n          limits:'https://api.biconomy.io/api/v1/dapp/checkLimits'\n        },\n        params:{\n          debug: false,\n          apiKey: env.REACT_APP_BICONOMY_KEY,\n          dappId: env.REACT_APP_BICONOMY_APPID,\n          apiId: '36572ec9-ae5c-4c4a-9530-f3ae7c7ac829'\n        }\n      },\n      terminal:{\n        enabled:false,\n        supportedNetworks:[1,42],\n        params:{\n          apiKey: env.REACT_APP_TERMINAL_KEY,\n          projectId: env.REACT_APP_TERMINAL_PROJECT_ID,\n          source: null,\n          web3Version: Web3Versions.one\n        }\n      },\n      simpleID:{\n        enabled:false,\n        supportedNetworks:[1],\n        getNetwork:(networkId,availableNetworks) => {\n          let networkName = null;\n          switch (networkId){\n            case 1:\n              networkName = 'mainnet';\n            break;\n            default:\n              networkName = availableNetworks[networkId] ? availableNetworks[networkId].toLowerCase() : 'mainnet';\n            break;\n          }\n          return networkName;\n        },\n        params:{\n          appOrigin: window.location.origin,\n          appName: \"Idle\",\n          appId: \"eb4d1754-a76e-4c58-8422-54b5ca2395e7\",\n          renderNotifications: false,\n          network: 'mainnet'\n        }\n      }\n    }\n  },\n  notifications:[\n    {\n      enabled:false,\n      end:1612282726374,\n      start:1611677841027,\n      date:'Jan 26, 2021 16:18 UTC',\n      title:'Cover Protocol Available',\n      hash:'/dashboard/tools/cover-protocol',\n      image:'/images/protocols/cover-logo.svg',\n      text:'Protect your portfolio with Cover Protocol',\n    }\n  ],\n  tools:{\n    ethWrapper:{\n      enabled:true,\n      label:'ETH Wrapper',\n      route:'eth-wrapper',\n      subComponent:ETHWrapper,\n      image:'images/tokens/WETH.svg',\n      desc:'Wrap your ETH and get WETH. Unwrap your WETH and get back ETH.',\n      props:{\n        contract:{\n          abi:WETH,\n          name:'WETH',\n          decimals:18,\n          token:'WETH',\n          address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2'\n        },\n      }\n    },\n    coverProtocol:{\n      enabled:false,\n      label:'Cover Protocol',\n      route:'cover-protocol',\n      subComponent:CoverProtocol,\n      image:'images/protocols/cover-logo.svg',\n      desc:'Get your Idle Portfolio covered against Smart Contract risk',\n      fileClaimUrl:'https://app.coverprotocol.com/app/claims/new?protocol=IDLE',\n      props:{\n        contract:{\n          decimals:18,\n          abi:CoverMint,\n          name:'CoverMint',\n          address:'0x46f2f34742c1d9b9b220aabf0ff26bf59ec9f8a0'\n        },\n        coverages:[\n          {\n            collateral:'DAI',\n            expirationTimestamp:1614470400,\n            tokens:{\n              Claim:{\n                abi:CovToken,\n                name:'COVER_IDLE_2021_02_28_DAI_0_CLAIM',\n                address:'0xa7dac6774e5e40f56a0bf06af6cf9b1f3d037bcc',\n                balancerPool:{\n                  decimals:18,\n                  abi:BalancerPool,\n                  name:'BAL_COVER_IDLE_2021_02_28_DAI_0_CLAIM',\n                  address:'0xeb2b9959c7943eb3c0bdb69ede25247bab4d1c6c',\n                }\n              },\n              NoClaim:{\n                abi:CovToken,\n                name:'COVER_IDLE_2021_02_28_DAI_0_NOCLAIM',\n                address:'0x53df0bfa014b7522299c129c5a7b318f02adb469',\n                balancerPool:{\n                  decimals:18,\n                  abi:BalancerPool,\n                  name:'BAL_COVER_IDLE_2021_02_28_DAI_0_NOCLAIM',\n                  address:'0xce0e9e7a1163badb7ee79cfe96b5148e178cab73',\n                }\n              }\n            }\n          },\n        ],\n      }\n    },\n    batchDeposit:{\n      enabled:true,\n      icon:'Storage',\n      claimEnabled:true,\n      depositEnabled:true,\n      route:'batch-deposit',\n      label:'Batch Deposit',\n      subComponent:BatchDeposit,\n      desc:'Deposit your tokens in the batch and wait until its execution to claim your Idle Tokens V4',\n      props:{\n        availableTokens:{\n          idleDAIYield:{\n            decimals:18,\n            strategy:'best',\n            baseToken:'DAI',\n            minPoolSize:20000,\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintDAI',\n              address:'0x633fb4d38B24dC890b11Db2AE2B248D13F996A79', // Main\n              // address:'0x1B7bA0361A15CCF62521cF7d2Cbb2Ba90b1521a7', // Kovan\n              functions:[\n                {\n                  name:'deposit',\n                  usePermit:true,\n                  label:'Deposit',\n                  permitName:'permitAndDeposit'\n                },\n              ]\n            },\n          },\n          idleUSDCYield:{\n            decimals:6,\n            strategy:'best',\n            baseToken:'USDC',\n            minPoolSize:20000,\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDC',\n              address:'0x562C4fd96F0652F5Fcfa96b0a33088B5a6eAeE9B', // Main\n              // address:'0x3F35eB839f91b614195a47A593dB46b14cd7EaF8', // Kovan\n              functions:[\n                {\n                  name:'deposit',\n                  label:'Deposit',\n                  usePermit:true,\n                  permitName:'permitEIP2612AndDepositUnlimited'\n                },\n              ]\n            },\n          },\n          /*\n          idleUSDTYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDT',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDT',\n              address:'0xee5c50c7c49dec47dde2f9b0233b9e14a8f00cf2',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleSUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'SUSD',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintSUSD',\n              address:'0xE2eE519399a49f1A2004a25DA61e82867A69b9b1',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleTUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'TUSD',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintTUSD',\n              address:'0x174a273f0ea28e55b6dd13259aa43d262b863a86',\n              functions:[\n                {\n                  usePermit:true,\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleWBTCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'WBTC',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintWBTC',\n              address:'0xbfDC7d97559173B52EF2A2f1bC9BeCf97B0D401D',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleDAISafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'DAI',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintDAISafe',\n              address:'0x08db226d63cE724A6091Ba82D28dFc76ceCa23d8',\n              functions:[\n                {\n                  name:'deposit',\n                  label:'Deposit',\n                  usePermit:true,\n                },\n              ]\n            },\n          },\n          idleUSDCSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDC',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDCSafe',\n              address:'0xA6C89A31D59f9C68D9Cba28d690C5E52058fb472',\n              functions:[\n                {\n                  name:'deposit',\n                  label:'Deposit',\n                  usePermit:true,\n                },\n              ]\n            },\n          },\n          idleUSDTSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDT',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDTSafe',\n              address:'0xd47B96Fb33b79a4Dd81a2bfa676eBB669166f619',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          }\n          */\n        }\n      }\n    },\n    batchMigration:{\n      enabled:true,\n      claimEnabled:true,\n      depositEnabled:false,\n      icon:'FileDownload',\n      route:'batch-migration',\n      label:'Batch Migration',\n      subComponent:BatchMigration,\n      desc:'Deposit your Idle Tokens V3 into a batch and wait until its conversion to the Idle Token V4',\n      props:{\n        availableTokens:{\n          idleDAIYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'DAI',\n            name:'idleDAIYieldV3',\n            token:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterDAI',\n              address:'0xe0BfD08dA4DAf8f8BA11d1c3802009E75f963497',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDC',\n            name:'idleUSDCYieldV3',\n            token:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDC',\n              address:'0x86c8b56d124c2a8e7ea8a9e6a7f8ed99dde5cca8',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDTYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDT',\n            name:'idleUSDTYieldV3',\n            token:'idleUSDTYieldV3',\n            address:'0x63D27B3DA94A9E871222CB0A32232674B02D2f2D',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDT',\n              address:'0xee5c50c7c49dec47dde2f9b0233b9e14a8f00cf2',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleSUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'SUSD',\n            name:'idleSUSDYieldV3',\n            token:'idleSUSDYieldV3',\n            address:'0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterSUSD',\n              address:'0xE2eE519399a49f1A2004a25DA61e82867A69b9b1',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleTUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'TUSD',\n            name:'idleTUSDYieldV3',\n            token:'idleTUSDYieldV3',\n            address:'0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterTUSD',\n              address:'0x174a273f0ea28e55b6dd13259aa43d262b863a86',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleWBTCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'WBTC',\n            name:'idleWBTCYieldV3',\n            token:'idleWBTCYieldV3',\n            address:'0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterWBTC',\n              address:'0xbfDC7d97559173B52EF2A2f1bC9BeCf97B0D401D',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleDAISafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'DAI',\n            name:'idleDAISafeV3',\n            token:'idleDAISafeV3',\n            address:'0x1846bdfDB6A0f5c473dEc610144513bd071999fB',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterDAISafe',\n              address:'0x08db226d63cE724A6091Ba82D28dFc76ceCa23d8',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDCSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDC',\n            name:'idleUSDCSafeV3',\n            token:'idleUSDCSafeV3',\n            address:'0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDCSafe',\n              address:'0xA6C89A31D59f9C68D9Cba28d690C5E52058fb472',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDTSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDT',\n            name:'idleUSDTSafeV3',\n            token:'idleUSDTSafeV3',\n            address:'0x42740698959761baf1b06baa51efbd88cb1d862b',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDTSafe',\n              address:'0xd47B96Fb33b79a4Dd81a2bfa676eBB669166f619',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          }\n        }\n      }\n    },\n    tokenMigration:{\n      enabled:true,\n      icon:'SwapHoriz',\n      route:'convert',\n      label:'Token Migration',\n      desc:'Easily convert your Compound, Fulcrum, Aave and iEarn tokens into Idle',\n      subComponent:TokenMigration,\n      props:{\n        migrationContract:{\n          name:'IdleConverterV4',\n          abi:IdleConverterPersonalSignV4,\n          address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n          oldAddresses:[],\n          functions:[\n            {\n              label:'Migrate',\n              name:'migrateFromToIdle'\n            },\n          ]\n        },\n        availableStrategies:['best','risk'],\n        availableTokens:{\n          idleDAIv2:{\n            decimals:18,\n            enabled:true,\n            protocol:'idle',\n            baseToken:'DAI',\n            abi:IdleTokenV2,\n            token:'idleDAIOld',\n            icon:'images/tokens/idleDAI.svg',\n            migrateFunction:'migrateFromToIdle',\n            address:'0x10eC0D497824e342bCB0EDcE00959142aAa766dD',\n          },\n          cDAI:{\n            decimals:8,\n            enabled:true,\n            token:\"cDAI\",\n            baseToken:'DAI',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643\",\n          },\n          iDAI:{\n            decimals:18,\n            enabled:false,\n            token:\"iDAI\",\n            baseToken:'DAI',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0x493c57c4763932315a328269e1adad09653b9081\",\n          },\n          aDAI:{\n            decimals:18,\n            enabled:true,\n            token:\"aDAI\",\n            protocol:\"aave\",\n            baseToken:'DAI',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d\",\n          },\n          yDAIv3:{\n            decimals:18,\n            enabled:true,\n            token:\"yDAIv3\",\n            abi:yDAIv3.abi,\n            baseToken:'DAI',\n            protocol:\"iearn\",\n            icon:'images/tokens/yDAI.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xC2cB1040220768554cf699b0d863A3cd4324ce32\",\n          },\n          yDAIv2:{\n            decimals:18,\n            enabled:true,\n            token:\"yDAIv2\",\n            baseToken:'DAI',\n            abi:yDAIv3.abi,\n            protocol:\"iearn\",\n            icon:'images/tokens/yDAI.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x16de59092dAE5CcF4A1E6439D611fd0653f0Bd01\",\n          },\n          idleUSDCv2:{\n            decimals:18,\n            enabled:true,\n            protocol:'idle',\n            abi:IdleTokenV2,\n            baseToken:'USDC',\n            token:'idleUSDCOld',\n            icon:'images/tokens/idleUSDC.svg',\n            migrateFunction:'migrateFromToIdle',\n            address:'0xeB66ACc3d011056B00ea521F8203580C2E5d3991',\n          },\n          cUSDC:{\n            decimals:8,\n            enabled:true,\n            token:\"cUSDC\",\n            baseToken:'USDC',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0x39aa39c021dfbae8fac545936693ac917d5e7563\",\n          },\n          iUSDC:{\n            decimals:6,\n            enabled:false,\n            token:\"iUSDC\",\n            baseToken:'USDC',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0xf013406a0b1d544238083df0b93ad0d2cbe0f65f\",\n          },\n          aUSDC:{\n            decimals:6,\n            enabled:true,\n            token:\"aUSDC\",\n            protocol:\"aave\",\n            baseToken:'USDC',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x9bA00D6856a4eDF4665BcA2C2309936572473B7E\",\n          },\n          yUSDCv3:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDCv3\",\n            protocol:\"iearn\",\n            abi:yUSDCv3.abi,\n            baseToken:'USDC',\n            icon:'images/tokens/yUSDC.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x26EA744E5B887E5205727f55dFBE8685e3b21951\",\n          },\n          yUSDCv2:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDCv2\",\n            protocol:\"iearn\",\n            abi:yUSDCv3.abi,\n            baseToken:'USDC',\n            icon:'images/tokens/yUSDC.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xd6aD7a6750A7593E092a9B218d66C0A814a3436e\",\n          },\n          cUSDT:{\n            decimals:8,\n            enabled:true,\n            token:\"cUSDT\",\n            baseToken:'USDT',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9\",\n          },\n          iUSDT:{\n            decimals:6,\n            enabled:false,\n            token:\"iUSDT\",\n            baseToken:'USDT',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0x8326645f3aa6de6420102fdb7da9e3a91855045b\",\n          },\n          aUSDT:{\n            decimals:6,\n            enabled:true,\n            token:\"aUSDT\",\n            protocol:\"aave\",\n            baseToken:'USDT',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x71fc860F7D3A592A4a98740e39dB31d25db65ae8\",\n          },\n          yUSDTv3:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDTv3\",\n            abi:yUSDTv3.abi,\n            protocol:\"iearn\",\n            baseToken:'USDT',\n            icon:'images/tokens/yUSDT.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xE6354ed5bC4b393a5Aad09f21c46E101e692d447\",\n          },\n          yUSDTv2:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDTv2\",\n            abi:yUSDTv3.abi,\n            protocol:\"iearn\",\n            baseToken:'USDT',\n            icon:'images/tokens/yUSDT.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x83f798e925BcD4017Eb265844FDDAbb448f1707D\",\n          },\n          idleSUSDv2:{\n            decimals:18,\n            enabled:true,\n            abi:IdleTokenV2,\n            protocol:'idle',\n            baseToken:'SUSD',\n            token:'idleSUSDYieldOld',\n            availableStrategies:['best'],\n            migrateFunction:'migrateFromToIdle',\n            icon:'images/tokens/idleSUSDYield.svg',\n            address:'0xb39ca0261a1b2986a6a9Fe38d344B56374963dE5',\n          },\n          aSUSD:{\n            decimals:6,\n            enabled:true,\n            token:\"aSUSD\",\n            protocol:\"aave\",\n            baseToken:'SUSD',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x625aE63000f46200499120B906716420bd059240\",\n          },\n          ySUSDv3:{\n            decimals:18,\n            enabled:true,\n            token:\"ySUSDv3\",\n            abi:ySUSDv3,\n            baseToken:'SUSD',\n            protocol:\"iearn\",\n            availableStrategies:['best'],\n            icon:'images/tokens/ySUSDv3.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xf61718057901f84c4eec4339ef8f0d86d2b45600\",\n          },\n          idleTUSDv2:{\n            decimals:18,\n            enabled:true,\n            abi:IdleTokenV2,\n            protocol:'idle',\n            baseToken:'TUSD',\n            token:'idleTUSDYieldOld',\n            availableStrategies:['best'],\n            migrateFunction:'migrateFromToIdle',\n            icon:'images/tokens/idleTUSDYield.svg',\n            address:'0x7DB7A4a50b26602E56536189Aa94678C80F8E5b6',\n          },\n          aTUSD:{\n            decimals:6,\n            enabled:true,\n            token:\"aTUSD\",\n            protocol:\"aave\",\n            baseToken:'TUSD',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x4DA9b813057D04BAef4e5800E36083717b4a0341\",\n          },\n          yTUSDv3:{\n            decimals:18,\n            enabled:true,\n            abi:yTUSDv3,\n            token:\"yTUSDv3\",\n            baseToken:'TUSD',\n            protocol:\"iearn\",\n            icon:'images/tokens/yTUSDv3.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x73a052500105205d34daf004eab301916da8190f\",\n          },\n          cWBTC:{\n            decimals:8,\n            enabled:true,\n            token:\"cWBTC\",\n            baseToken:'WBTC',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0xc11b1268c1a384e55c48c2391d8d480264a3a7f4\",\n          },\n          iWBTC:{\n            decimals:8,\n            enabled:false,\n            token:\"iWBTC\",\n            baseToken:'WBTC',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0xba9262578efef8b3aff7f60cd629d6cc8859c8b5\",\n          },\n          aWBTC:{\n            decimals:8,\n            enabled:true,\n            token:\"aWBTC\",\n            protocol:\"aave\",\n            baseToken:'WBTC',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0xfc4b8ed459e00e5400be803a9bb3954234fd50e3\",\n          },\n        }\n      }\n    },\n    addFunds:{\n      enabled:true,\n      icon:'AddCircleOutline',\n      route:'add-funds',\n      label:'Add Funds',\n      desc:'Buy tokens with your Bank account, Credit card or Ethereum Wallet',\n      subComponent:BuyModal,\n      directProps:{\n        showInline:true,\n        showAllTokens:true\n      }\n    },\n    insurance:{\n      enabled:false,\n      icon:'Security',\n      route:'nexus-mutual',\n      label:'Nexus Mutual',\n      desc:'Buy tokens with Bank account or Credit card',\n      subComponent:NexusMutual,\n      props:{\n        availableTokens:{\n          \"ETH\":{\"token\":\"ETH\"},\n          \"DAI\":{\"token\":\"DAI\"},\n        }\n      },\n      directProps:{\n        ens:'idlefinancev3.nexusmutual.eth',\n        address:'0x78751B12Da02728F467A44eAc40F5cbc16Bd7934'\n      }\n    },\n    tokenSwap:{\n      enabled:true,\n      icon:'Sync',\n      route:'token-swap',\n      label:'Token Swap',\n      desc:'Easily swap your tokens using Kyber Swap widget',\n      subComponent:TokenSwap,\n      props:{\n        availableTokens:{\n          \"ETH\":{\"token\":\"ETH\"},\n          \"DAI\":{\"token\":\"DAI\"},\n          \"SUSD\":{\"token\":\"SUSD\"},\n          \"TUSD\":{\"token\":\"TUSD\"},\n          \"USDC\":{\"token\":\"USDC\"},\n          \"USDS\":{\"token\":\"USDS\"},\n          \"USDT\":{\"token\":\"USDT\"},\n          \"WBTC\":{\"token\":\"WBTC\"},\n          \"WETH\":{\"token\":\"WETH\"},\n          \"BUSD\":{\"token\":\"BUSD\"},\n          \"EURS\":{\"token\":\"EURS\"},\n          \"2KEY\":{\"token\":\"2KEY\"},\n          \"ABT\":{\"token\":\"ABT\"},\n          \"ABYSS\":{\"token\":\"ABYSS\"},\n          \"AMPL\":{\"token\":\"AMPL\"},\n          \"ANT\":{\"token\":\"ANT\"},\n          \"BAM\":{\"token\":\"BAM\"},\n          \"BAND\":{\"token\":\"BAND\"},\n          \"BAT\":{\"token\":\"BAT\"},\n          \"BLZ\":{\"token\":\"BLZ\"},\n          \"BNT\":{\"token\":\"BNT\"},\n          \"BQX\":{\"token\":\"BQX\"},\n          \"BTU\":{\"token\":\"BTU\"},\n          \"CDT\":{\"token\":\"CDT\"},\n          \"CVC\":{\"token\":\"CVC\"},\n          \"DAT\":{\"token\":\"DAT\"},\n          \"DGX\":{\"token\":\"DGX\"},\n          \"EKG\":{\"token\":\"EKG\"},\n          \"ELF\":{\"token\":\"ELF\"},\n          \"ENJ\":{\"token\":\"ENJ\"},\n          \"EQUAD\":{\"token\":\"EQUAD\"},\n          \"FXC\":{\"token\":\"FXC\"},\n          \"GDC\":{\"token\":\"GDC\"},\n          \"GEN\":{\"token\":\"GEN\"},\n          \"GHT\":{\"token\":\"GHT\"},\n          \"GNO\":{\"token\":\"GNO\"},\n          \"IOST\":{\"token\":\"IOST\"},\n          \"KEY\":{\"token\":\"KEY\"},\n          \"KNC\":{\"token\":\"KNC\"},\n          \"LEND\":{\"token\":\"LEND\"},\n          \"LINK\":{\"token\":\"LINK\"},\n          \"LOOM\":{\"token\":\"LOOM\"},\n          \"LRC\":{\"token\":\"LRC\"},\n          \"MANA\":{\"token\":\"MANA\"},\n          \"MCO\":{\"token\":\"MCO\"},\n          \"MET\":{\"token\":\"MET\"},\n          \"MFG\":{\"token\":\"MFG\"},\n          \"MKR\":{\"token\":\"MKR\"},\n          \"MLN\":{\"token\":\"MLN\"},\n          \"MTL\":{\"token\":\"MTL\"},\n          \"MYB\":{\"token\":\"MYB\"},\n          \"NEXXO\":{\"token\":\"NEXXO\"},\n          \"NPXS\":{\"token\":\"NPXS\"},\n          \"OGN\":{\"token\":\"OGN\"},\n          \"OMG\":{\"token\":\"OMG\"},\n          \"OST\":{\"token\":\"OST\"},\n          \"PAX\":{\"token\":\"PAX\"},\n          \"PBTC\":{\"token\":\"PBTC\"},\n          \"PLR\":{\"token\":\"PLR\"},\n          \"PNK\":{\"token\":\"PNK\"},\n          \"POLY\":{\"token\":\"POLY\"},\n          \"POWR\":{\"token\":\"POWR\"},\n          \"PT\":{\"token\":\"PT\"},\n          \"QKC\":{\"token\":\"QKC\"},\n          \"QNT\":{\"token\":\"QNT\"},\n          \"RAE\":{\"token\":\"RAE\"},\n          \"REN\":{\"token\":\"REN\"},\n          \"REP\":{\"token\":\"REP\"},\n          \"REQ\":{\"token\":\"REQ\"},\n          \"RLC\":{\"token\":\"RLC\"},\n          \"RSR\":{\"token\":\"RSR\"},\n          \"RSV\":{\"token\":\"RSV\"},\n          \"SAN\":{\"token\":\"SAN\"},\n          \"SNT\":{\"token\":\"SNT\"},\n          \"SNX\":{\"token\":\"SNX\"},\n          \"SPIKE\":{\"token\":\"SPIKE\"},\n          \"SPN\":{\"token\":\"SPN\"},\n          \"TKN\":{\"token\":\"TKN\"},\n          \"TKX\":{\"token\":\"TKX\"},\n          \"TRYB\":{\"token\":\"TRYB\"},\n          \"UBT\":{\"token\":\"UBT\"},\n          \"UPP\":{\"token\":\"UPP\"},\n          \"ZRX\":{\"token\":\"ZRX\"}\n        }\n      },\n      directProps:{\n      }\n    }\n  },\n  payments: { // Payment methods & providers\n    methods:{\n      bank:{\n        defaultProvider:null,\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/bank.png',\n          caption:'Bank Account'\n        }\n      },\n      card:{\n        defaultProvider:null,\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/debit-card.png',\n          caption:'Credit Card'\n        }\n      },\n      wallet:{\n        defaultProvider:'zeroExInstant',\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/ethereum-wallet.svg',\n          caption:'Ethereum Wallet',\n          imageProps:{\n            padding:['0','5px']\n          }\n        }\n      },\n    },\n    providers: {\n      wyre: {\n        enabled: true,\n        imageSrc: 'images/payments/wyre.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0.75% fee ~',\n        supportedMethods:['card'],\n        supportedCountries:['USA','GBR','AUS','BRA','CHN','MEX','EUR'],\n        supportedTokens:['USDC','DAI','ETH'],\n        remoteResources:{},\n        env:'prod',\n        envParams:{\n          test:{\n            accountId:'AC_Q2Y4AARC3TP'\n          },\n          prod:{\n            accountId:'AC_PQQBX33XVEQ'\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod){\n            switch (props.selectedMethod){\n              case 'bank':\n                info.subcaption = `~ 0.75% fee ~\\nKYC REQUIRED`;\n              break;\n              case 'card':\n                info.subcaption = `~ 3.2% fee ~\\n$250.00/day`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.wyre.env;\n          const envParams = globalConfigs.payments.providers.wyre.envParams[env];\n          const referrerAccountId = envParams.accountId;\n          const url = 'https://pay.sendwyre.com/purchase';\n\n          const params = {\n            dest: `ethereum:${props.account}`,\n            destCurrency: buyParams.selectedToken ? buyParams.selectedToken : ( props.tokenConfig.wyre && props.tokenConfig.wyre.destCurrency ? props.tokenConfig.wyre.destCurrency : props.selectedToken ),\n            referrerAccountId,\n            redirectUrl:globalConfigs.baseURL\n            // failureRedirectUrl:globalConfigs.baseURL\n          };\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          const wyreWidget = document.getElementById('wyre-widget');\n          if (!wyreWidget){\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"wyre-widget\" class=\"wyre-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"wyre-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                <a class=\"wyre-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('wyre-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                <div id=\"wyre-widget-container\" style=\"position:relative;z-index:2;width:400px;height:650px\">\n                  <iframe\n                    style=\"position:relative;z-index:2;\"\n                    frameborder=\"0\"\n                    height=\"100%\"\n                    src=\"${initParams}\"\n                    width=\"100%\"\n                  >\n                    <p>Your browser does not support iframes.</p>\n                  </iframe>\n                  <div id=\"wyre-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                    <div style=\"display:flex;flex-direction:row;align-items:center\">\n                      <img src=\"${globalConfigs.payments.providers.wyre.imageSrc}\" style=\"height:50px;\" />\n                      <h3 style=\"font-weight:600;font-style:italic;color:#000;padding-left:10px\">is loading...</h3>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add wyre Widget style (mobile)\n            if (!document.getElementById('wyreWidget_style')){\n              const wyreStyle = document.createElement('style');\n              wyreStyle.id = 'wyreWidget_style';\n              wyreStyle.innerHTML = `\n              @media (max-width: 40em){\n                #wyre-widget {\n                  align-items: flex-start !important;\n                }\n                #wyre-widget-overlay{\n                  background:#fff !important;\n                }\n                #wyre-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(wyreStyle);\n            }\n          }\n        },\n      },\n      ramp: {\n        enabled:true,\n        imageSrc: 'images/payments/ramp.png',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption:`~ 2.5% fee ~\\nEUR / GBP`,\n        supportedMethods:['bank','card'],\n        badge: {\n          text:'NO ID REQUIRED',\n          color:'#fff',\n          bgColor:'#0cade4'\n        },\n        supportedTokens:['ETH','DAI','USDC'],\n        supportedCountries:['USA','GBR','AUS','BRA','CAN','EUR','HKG','IND','MEX','RUS','ZAF','KOR'],\n        getInfo: (props) => {\n          const info = {};\n            switch (props.selectedMethod){\n              case 'bank':\n                info.supportedCountries = ['GBR','EUR'];\n                info.subcaption = `~ 1.49-1.99% fee ~`;\n              break;\n              case 'card':\n                info.supportedCountries = ['USA','GBR','AUS','BRA','CAN','EUR','HKG','IND','MEX','RUS','ZAF','KOR'];\n                info.subcaption = `~ 2.90% fee ~`;\n              break;\n              default:\n              break;\n            }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n        \treturn {\n\t          hostAppName: 'Idle',\n            userAddress: props.account,\n            hostApiKey: env.REACT_APP_RAMP_KEY,\n            variant: props.isMobile ? 'mobile' : 'desktop',\n            hostLogoUrl: `${globalConfigs.baseURL}/images/idle-round.png`,\n            swapAsset: buyParams.selectedToken ? buyParams.selectedToken : ( props.tokenConfig.ramp && props.tokenConfig.ramp.swapAsset ? props.tokenConfig.ramp.swapAsset : props.selectedToken )\n        \t};\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          new RampInstantSDK(initParams)\n            .on('*', async (event) => {\n              const functionsUtil = new FunctionsUtil(props);\n              let tokenDecimals = null;\n              let tokenAmount = null;\n\n              switch (event.type){\n                case 'PURCHASE_SUCCESSFUL':\n                  // Update balance\n                  props.getAccountBalance();\n\n                  tokenDecimals = await props.getTokenDecimals();\n\n                  tokenAmount = event.payload.purchase.tokenAmount;\n                  tokenAmount = functionsUtil.BNify(tokenAmount.toString()).div(functionsUtil.BNify(Math.pow(10,parseInt(tokenDecimals)).toString())).toString();\n\n                  // Toast message\n                  window.toastProvider.addMessage(`Payment completed`, {\n                    secondaryMessage: `${tokenAmount} ${props.selectedToken} are now in your wallet`,\n                    colorTheme: 'light',\n                    actionHref: \"\",\n                    actionText: \"\",\n                    variant: \"success\",\n                  });\n\n                break;\n                default:\n                break;\n              }\n            })\n            .show();\n        }\n      },\n      transak: {\n        enabled:true,\n        imageSrc: 'images/payments/transak.png',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption:`~ 1.5% fee ~\\nALL CURRENCIES`,\n        supportedMethods:['bank','card'],\n        supportedCountries:['USA','GBR','AUS','BRA','CHN','MEX','EUR','IND'],\n        supportedTokens:['ETH','DAI','USDC','USDT','TUSD','SUSD','WBTC'],\n        remoteResources:{'https://global.transak.com/v1/widget.js':{}},\n        env:'prod',\n        badge:{\n          text:'INSTANT',\n          bgColor:'#0069ee'\n        },\n        envParams:{\n          test:{\n            apiKey:env.REACT_APP_TRANSAK_KEY_TEST,\n            url:'https://global.transak.com'\n          },\n          prod:{\n            apiKey:env.REACT_APP_TRANSAK_KEY_PROD,\n            url:'https://global.transak.com'\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n\n          const selectedMethod = props.selectedMethod && props.selectedMethod;\n          let fee = selectedMethod === 'bank' ? '1.5%' : '4.5%';\n\n          if (props.selectedCountry && props.selectedCountry.value){\n            switch (props.selectedCountry.value.toUpperCase()){\n              case 'GBR':\n                info.badge = {\n                  text:'INSTANT',\n                  bgColor:'#0069ee'\n                };\n                info.subcaption = `~ ${fee} fee ~\\nGBP ONLY`;\n              break;\n              case 'IND':\n                fee = '1.0%';\n                info.badge = {\n                  text:'INSTANT',\n                  bgColor:'#0069ee'\n                };\n                info.subcaption = `~ ${fee} fee ~\\nINR ONLY`;\n              break;\n              case 'EUR':\n                if (selectedMethod === 'bank'){\n                  info.badge = {\n                    text:'SEPA',\n                    color:'#f7cb05 ',\n                    bgColor:'#10288a'\n                  };\n                } else {\n                  info.badge = {\n                    text:'INSTANT',\n                    bgColor:'#0069ee'\n                  };\n                }\n                info.subcaption = `~ ${fee} fee ~\\nEUR ONLY`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.transak.env;\n          const envParams = globalConfigs.payments.providers.transak.envParams[env];\n\n          let fiatCurrency = null;\n\n          if (buyParams.selectedCountry && buyParams.selectedCountry.value){\n            switch (buyParams.selectedCountry.value.toUpperCase()){\n              case 'IND':\n                fiatCurrency = 'INR';\n              break;\n              case 'GBR':\n                fiatCurrency = 'GBP';\n              break;\n              case 'EUR':\n                fiatCurrency = 'EUR';\n              break;\n              case 'USA':\n                fiatCurrency = 'USD';\n              break;\n              default:\n                fiatCurrency = 'GBP';\n              break;\n            }\n          }\n\n          let cryptoCurrencyCode = buyParams.selectedToken ? buyParams.selectedToken.toLowerCase() : ( props.tokenConfig.transak && props.tokenConfig.transak.currencyCode ? props.tokenConfig.transak.currencyCode : props.selectedToken);\n          cryptoCurrencyCode = cryptoCurrencyCode.toUpperCase();\n\n          const apiKey = envParams.apiKey;\n          const walletAddress = props.account;\n          const partnerCustomerId = props.account;\n          const disableWalletAddressForm = false;\n\n          return {\n            apiKey,\n            cryptoCurrencyCode,\n            walletAddress,\n            fiatCurrency,\n            partnerCustomerId,\n            disableWalletAddressForm,\n            width:'100%',\n            height:'100%'\n            // email,\n          };\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          if (window.transakGlobal){\n\n            const transakWidget = document.getElementById('transak-widget');\n            if (!transakWidget){\n              const iframeBox = document.createElement(\"div\");\n              iframeBox.innerHTML = `\n                <div id=\"transak-widget\" class=\"transak-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                  <div id=\"transak-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\" onclick=\"document.getElementById('transak-widget').remove();\"></div>\n                  <a class=\"transak-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('transak-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                  <div class=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\">\n                    <div id=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\"></div>\n                    <div id=\"transak-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:center\">\n                        <img src=\"${globalConfigs.payments.providers.transak.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"font-weight:600;font-style:italic;color:#0040ca\">is loading...</h3>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              `;\n              document.body.appendChild(iframeBox);\n\n              // Add transak Widget style (mobile)\n              if (!document.getElementById('transakWidget_style')){\n                const transakStyle = document.createElement('style');\n                transakStyle.id = 'transakWidget_style';\n                transakStyle.innerHTML = `\n                @media (max-width: 40em){\n                  #transak-widget {\n                    align-items: flex-start !important;\n                  }\n                  #transak-widget-overlay{\n                    background:#fff !important;\n                  }\n                  #transak-widget-container{\n                    width:100vw;\n                    min-height: calc( 100vh - 60px ) !important;\n                  }\n                }`;\n                document.body.appendChild(transakStyle);\n              }\n            }\n\n            window.transakGlobal.render(initParams, 'transak-widget-container');\n          }\n        }\n      },\n      moonpay: {\n        enabled:true,\n        imageSrc: 'images/payments/moonpay.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 4.5% fee ~',\n        supportedMethods:['card','bank'],\n        supportedCountries:['GBR','EUR','AUS','BRA','CHN','MEX','CAN','HKG','RUS','ZAF','KOR'],\n        supportedTokens:['USDC','DAI','ETH'],\n        env:'prod',\n        envParams:{\n          test:{\n            url:'https://buy-staging.moonpay.io',\n            apiKey:env.REACT_APP_MOONPAY_KEY_TEST\n          },\n          prod:{\n            url:'https://buy.moonpay.io',\n            apiKey:env.REACT_APP_MOONPAY_KEY_PROD\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod){\n            switch (props.selectedMethod){\n              case 'bank':\n                if (props.selectedCountry && props.selectedCountry.value){\n                  switch (props.selectedCountry.value.toUpperCase()){\n                    case 'EUR':\n                      info.badge = {\n                        text:'SEPA',\n                        color:'#f7cb05 ',\n                        bgColor:'#10288a'\n                      }\n                      info.subcaption = `~ 1.5% fee ~\\nEUR ONLY`;\n                    break;\n                    case 'GBR':\n                      info.badge = {\n                        text:'GBP',\n                      }\n                      info.subcaption = `~ 1.5% fee ~\\nGBP ONLY`;\n                    break;\n                    default:\n                      info.badge = null;\n                      info.subcaption = `~ 1.5% fee ~\\nEUR/GBP ONLY`;\n                    break;\n                  }\n                }\n              break;\n              case 'card':\n                info.badge = null;\n                info.subcaption = `~ 5% fee ~`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.moonpay.env;\n          const envParams = globalConfigs.payments.providers.moonpay.envParams[env];\n          const apiKey = envParams.apiKey;\n          const params = {\n            apiKey,\n            currencyCode: buyParams.selectedToken ? buyParams.selectedToken.toLowerCase() : ( props.tokenConfig.moonpay && props.tokenConfig.moonpay.currencyCode ? props.tokenConfig.moonpay.currencyCode : props.selectedToken.toLowerCase()),\n            walletAddress:props.account,\n            baseCurrencyCode:'USD',\n            showWalletAddressForm: true\n          };\n\n          const methods = {\n            'bank':{\n              'GBR':'gbp_bank_transfer',\n              'EUR':'sepa_bank_transfer'\n            },\n            'card':'credit_debit_card'\n          };\n\n          const selectedCountry = buyParams.selectedCountry && buyParams.selectedCountry.value ? buyParams.selectedCountry.value.toUpperCase() : null;\n\n          // Set payment method\n          if (buyParams.selectedMethod){\n            switch (buyParams.selectedMethod){\n              case 'bank':\n                params.enabledPaymentMethods = methods[buyParams.selectedMethod]['EUR'];\n                switch (selectedCountry){\n                  case 'GBR':\n                  case 'EUR':\n                    params.enabledPaymentMethods = methods[buyParams.selectedMethod][selectedCountry];\n                  break;\n                  default:\n                    params.enabledPaymentMethods = Object.values(methods[buyParams.selectedMethod]).join(',');\n                  break;\n                }\n              break;\n              case 'card':\n              default:\n                params.enabledPaymentMethods = methods[buyParams.selectedMethod];\n              break;\n            }\n          }\n\n          // Set baseCurrencyCode\n          switch (selectedCountry){\n            case 'GBR':\n              params.baseCurrencyCode = 'GBP';\n            break;\n            case 'EUR':\n              params.baseCurrencyCode = 'EUR';\n            break;\n            default:\n              params.baseCurrencyCode = 'USD';\n            break;\n          }\n\n          let url = envParams.url;\n\n          // Safari Fix\n          var isSafari = navigator.userAgent.indexOf(\"Safari\") > -1;\n          if (isSafari) {\n            if (!document.cookie.match(/^(.*;)?\\s*moonpay-fixed\\s*=\\s*[^;]+(.*)?$/)) {\n              document.cookie = \"moonpay-fixed=fixed; expires=Tue, 19 Jan 2038 03:14:07 UTC; path=/\";\n              url += \"/safari_fix\";\n            }\n          }\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          const moonpayWidget = document.getElementById('moonpay-widget');\n          if (!moonpayWidget){\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"moonpay-widget\" class=\"moonpay-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"moonpay-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                  <div id=\"moonpay-widget-container\" style=\"position:relative;z-index:2;width:500px;height:490px\">\n                    <iframe\n                      style=\"position:relative;z-index:2;\"\n                      frameborder=\"0\"\n                      height=\"100%\"\n                      src=\"${initParams}\"\n                      width=\"100%\"\n                    >\n                      <p>Your browser does not support iframes.</p>\n                    </iframe>\n                    <div id=\"moonpay-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:end\">\n                        <img src=\"${globalConfigs.payments.providers.moonpay.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"padding-left:5px;font-weight:600;font-style:italic;\">is loading...</h3>\n                      </div>\n                    </div>\n                    <div id=\"moonpay-widget-footer\" style=\"position:relative;display:flex;justify-content:center;align-items:center;padding:8px 16px;width:100%;background:#fff;top:-20px;z-index:3\">\n                      <button style=\"background:#000;color:#fff;text-align:center;border-radius:5px;width:100%;height:51px;line-height:51px;font-weight:500;border:0;cursor:pointer\" onclick=\"document.getElementById('moonpay-widget').remove();\">Close</button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add Moonpay Widget style (mobile)\n            if (!document.getElementById('moonpayWidget_style')){\n              const moonpayStyle = document.createElement('style');\n              moonpayStyle.id = 'moonpayWidget_style';\n              moonpayStyle.innerHTML = `\n              @media (max-width: 40em){\n                #moonpay-widget {\n                  align-items: flex-start !important;\n                }\n                #moonpay-widget-overlay{\n                  background:#fff !important;\n                }\n                #moonpay-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(moonpayStyle);\n            }\n          }\n        }\n      },\n      zeroExInstant: {\n        enabled: true,\n        imageSrc: 'images/payments/zeroexinstant.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0.25% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        remoteResources:{'https://instant.0x.org/v3/instant.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onSuccess,onClose) => {\n\n          const tokenParams = globalConfigs.tokens[buyParams.selectedToken];\n          const connectorName = window.RimbleWeb3_context ? window.RimbleWeb3_context.connectorName : null;\n\n          if (!tokenParams.zeroExInstant){\n            return null;\n          }\n\n          return {\n            networkId: globalConfigs.network.requiredNetwork,\n            chainId: globalConfigs.network.requiredNetwork,\n            provider: connectorName && connectorName!=='Injected' && window.RimbleWeb3_context.connector[connectorName.toLowerCase()] ? window.RimbleWeb3_context.connector[window.RimbleWeb3_context.connectorName.toLowerCase()].provider : window.ethereum,\n            orderSource: tokenParams.zeroExInstant.orderSource,\n            affiliateInfo: tokenParams.zeroExInstant.affiliateInfo,\n            defaultSelectedAssetData: tokenParams.zeroExInstant.assetData,\n            availableAssetDatas: [tokenParams.zeroExInstant.assetData],\n            shouldDisableAnalyticsTracking: true,\n            onSuccess: onSuccess ? onSuccess : () => {},\n            onClose: onClose ? onClose : () => {}\n          };\n        },\n        render: (initParams,amount) => {\n          if (window.zeroExInstant && initParams){\n            if (amount){\n              initParams.defaultAssetBuyAmount = parseFloat(amount);\n            }\n            window.zeroExInstant.render(initParams, 'body');\n          }\n        }\n      },\n      kyberSwap: {\n        enabled: true,\n        imageSrc: 'images/payments/kyber.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Swap with',\n        captionPos: 'top',\n        subcaption: '~ 0.25% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['WETH','USDC','DAI','USDT','TUSD','SUSD','WBTC'],\n        web3Subscription:{ // Data for web3 subscription\n          enabled: true,\n          contractAddress: '0x818e6fecd516ecc3849daf6845e3ec868087b755',\n          decodeLogsData: [\n            {\n              \"internalType\": \"address\",\n              \"name\": \"_startAddress\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"address\",\n              \"name\": \"_tokenAddress\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"_startAmount\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"_tokenAmount\",\n              \"type\": \"uint256\"\n            },\n          ],\n        },\n        remoteResources:{\n          'https://widget.kyber.network/v0.7.5/widget.css':{},\n          'https://widget.kyber.network/v0.7.5/widget.js':{\n            parentElement:document.body,\n            precall: (props,globalConfigs,providerInfo) => {\n\n              // Remove previous elements\n              const buttons = document.querySelectorAll('.kyber-widget-button');\n              for (let i=0;i<buttons.length;i++){\n                buttons[i].remove();\n              }\n\n              // const kyberWidgetScript = document.getElementById('kyber-widget-script');\n              // if (kyberWidgetScript){\n              //   kyberWidgetScript.remove();\n              // }\n\n              const scripts = document.querySelectorAll('.script_kyberSwap');\n              for (let i=0;i<scripts.length;i++){\n                scripts[i].remove();\n              }\n\n              const buttonId = props.buttonId ? props.buttonId : `kyber-swapper-${props.selectedToken}`;\n              if (!document.getElementById(buttonId)){\n                const a = document.createElement('a');\n                a.id = buttonId;\n                a.href = providerInfo.getInitParams(props,globalConfigs);\n                a.target = '_blank';\n                a.rel = 'nofollow noopener noreferrer';\n                a.className = 'kyber-widget-button theme-ocean theme-supported';\n                a.title = 'Swap with Kyber';\n                a.style = 'display:none;';\n                document.body.appendChild(a);\n              }\n            }\n          }\n        },\n        getInitParams: (props,globalConfigs,buyParams=null) => {\n          const baseToken = props.baseToken ? props.baseToken : 'ETH';\n          const params = {\n            lang:'en',\n            type:'swap',\n            mode:'iframe',\n            theme:'theme-ocean',\n            paramForwarding:true,\n            // callback:globalConfigs.baseURL,\n            pinnedTokens:`${baseToken}_${props.selectedToken}`,\n            title:`Swap ${baseToken} for ${props.selectedToken}`,\n            defaultPair:`${baseToken}_${props.selectedToken}`,\n            commissionId:'0x4215606a720477178AdFCd5A59775C63138711e8',\n            network: globalConfigs.network.requiredNetwork === 1 ? 'mainnet' : 'test',\n          };\n\n          const url  = 'https://widget.kyber.network/v0.7.5/';\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props) => {\n          const buttonId = props.buttonId ? props.buttonId :`kyber-swapper-${props.selectedToken}`;\n          const a = document.getElementById(buttonId);\n          if (a){\n            a.click();\n\n            // Observe for pending transaction\n            /*\n            if (window.MutationObserver){\n              setTimeout(() => {\n\n                const observer = new window.MutationObserver(function(mutations) {\n                  mutations.forEach((m,i) => {\n                    if (m.addedNodes.length && m.target.className === 'kyber_widget-broadcast'){\n                      \n                      // Show persistent toast message\n                      window.showToastMessage({\n                        variant:'processing',\n                        message:'Pending deposit',\n                        secondaryMessage:'kyberSwap is processing your request'\n                      });\n\n                      observer.disconnect();\n                    } else if (m.target.id === 'kyber-widget' && m.removedNodes.length && m.removedNodes[0].firstChild.className.includes('kyber_widget-widget-container')) {\n                      observer.disconnect();\n                    }\n                  });\n                });\n                const target = document.querySelector('#kyber-widget');\n                observer.observe(target, { childList: true, subtree: true });\n              },1000);\n            }\n            */\n          }\n        }\n      },\n      airSwap: {\n        enabled: false,\n        imageSrc: 'images/payments/airswap.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        env:'production',\n        remoteResources:{'https://cdn.airswap.io/airswap-instant-widget.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onComplete,onClose) => {\n          return {\n            env: 'production',\n            mode: 'buy',\n            token: props.tokenConfig.address,\n            baseToken: 'ETH',\n            onComplete: onComplete ? onComplete : () => {},\n            onClose: onClose ? onClose : () => {}\n          };\n        },\n        render: (initParams,amount,props) => {\n          if (window.AirSwapInstant){\n            if (amount){\n              initParams.amount = amount.toString();\n            }\n            window.AirSwapInstant.render(initParams,'body');\n          }\n        }\n      },\n      totle: {\n        enabled: false,\n        imageSrc: 'images/payments/totle.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        env:'production',\n        remoteResources:{'https://widget.totle.com/latest/dist.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onComplete,onClose) => {\n          return {\n            sourceAssetAddress: null,\n            sourceAmountDecimal: null,\n            destinationAssetAddress: null,\n            destinationAmountDecimal: null,\n            apiKey: null,\n            partnerContractAddress: null,\n          };\n        },\n        render: (initParams,amount,props) => {\n          if (window.TotleWidget){\n            const nodeId = 'totle-widget';\n            if (!document.getElementById(nodeId)){\n              const totleWidgetContainer = document.createElement(\"div\");\n              totleWidgetContainer.id = nodeId;\n              document.body.appendChild(totleWidgetContainer);\n            }\n\n            window.TotleWidget.default.run(initParams,document.getElementById(nodeId));\n          }\n        }\n      }\n    }\n  }\n};\n\nexport default globalConfigs;","import FunctionsUtil from './FunctionsUtil';\n\nclass IdleGovToken{\n  // Attributes\n  props = {};\n  tokenName = null;\n  tokenConfig = null;\n  functionsUtil = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.tokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n    this.tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n  }\n\n  getBalance = async () => {\n    let balance = await this.functionsUtil.getTokenBalance(this.tokenName,this.props.account);\n    if (!balance || this.functionsUtil.BNify(balance).isNaN()){\n      balance = this.functionsUtil.BNify(0);\n    }\n    return balance;\n  }\n\n  claimRewards = async (callback,callbackReceipt) => {\n    return this.functionsUtil.contractMethodSendWrapper('EarlyRewards', 'claim', [], callback, callbackReceipt);\n  }\n\n  getPriorVotes = async (account=null) => {\n    account = account ? account : this.props.account;\n    let priorVotes = await this.functionsUtil.genericContractCall(this.tokenName,'getPriorVotes',[account]);\n    if (priorVotes){\n      return this.functionsUtil.BNify(priorVotes);\n    }\n    return null;\n  }\n\n  refreshIdleSpeed = async () => {\n    return this.functionsUtil.genericContractCall('IdleController','refreshIdleSpeeds');\n  }\n\n  getUnclaimedTokens = async () => {\n    /*\n    let rewards =  await this.functionsUtil.genericContractCall('EarlyRewards','rewards',[this.props.account]);\n    if (rewards){\n      return this.functionsUtil.fixTokenDecimals(rewards,this.tokenConfig.decimals);\n    }\n    */\n    return this.functionsUtil.BNify(0);\n  }\n\n  getAPR = async (token,tokenConfig,conversionRate=null) => {\n    const IDLETokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n    if (!IDLETokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getIdleAPR_${tokenConfig.idle.token}_${conversionRate}`;\n    /*\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n    */\n\n    let APR = this.functionsUtil.BNify(0);\n\n    const [\n      idleDistribution,\n      tokenAllocation\n    ] = await Promise.all([\n      this.getDistribution(tokenConfig),\n      this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    if (idleDistribution && tokenAllocation){\n\n      const DAITokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get IDLE oconversion rate\n      if (!conversionRate){\n        try {\n          conversionRate = await this.functionsUtil.getUniswapConversionRate(DAITokenConfig,IDLETokenConfig);\n        } catch (error) {\n\n        }\n        if (!conversionRate || conversionRate.isNaN()){\n          conversionRate = this.functionsUtil.BNify(0);\n        }\n      }\n\n      if (!conversionRate || this.functionsUtil.BNify(conversionRate).lte(0)){\n        return this.functionsUtil.BNify(0);\n      }\n\n      const tokenPool = await this.functionsUtil.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig);\n\n      const idleDistributedPerYearUSD = this.functionsUtil.BNify(conversionRate).times(idleDistribution);\n      APR = idleDistributedPerYearUSD.div(tokenPool).times(100);\n\n      // console.log(tokenConfig.idle.token,idleDistributedPerYearUSD.toFixed(5),conversionRate.toFixed(5),APR.toFixed(5));\n\n      return this.functionsUtil.setCachedData(cachedDataKey,APR);\n    }\n\n    return APR;\n  }\n\n  // Get IDLE distribution speed\n  getSpeed = async (idleTokenAddress) => {\n\n    const cachedDataKey = `getIdleSpeed_${idleTokenAddress}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    let idleSpeeds = await this.functionsUtil.genericContractCall('IdleController','idleSpeeds',[idleTokenAddress]);\n    if (idleSpeeds && !this.functionsUtil.BNify(idleSpeeds).isNaN()){\n      idleSpeeds = this.functionsUtil.BNify(idleSpeeds);\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,idleSpeeds);\n    }\n    return null;\n  }\n\n  getDistribution = async (tokenConfig) => {\n\n    const cachedDataKey = `getIdleDistribution_${tokenConfig.idle.token}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    // Get IDLE distribution speed and Total Supply\n    const idleSpeeds = await this.getSpeed(tokenConfig.idle.address);\n\n    if (idleSpeeds){\n\n      // Get IDLE distribution for Idle in a Year\n      const blocksPerYear = this.functionsUtil.getGlobalConfig(['network','blocksPerYear']);\n\n      // Take 50% of distrubution for lenders side\n      const distribution = this.functionsUtil.BNify(idleSpeeds).times(this.functionsUtil.BNify(blocksPerYear)).div(1e18);\n\n      if (!this.functionsUtil.BNify(distribution).isNaN()){\n        return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,distribution);\n      }\n    }\n\n    return null;\n  }\n\n  getUserDistribution = async (account=null,availableTokens=null,fixByFrequency=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    let totalSpeed = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n\n      if (this.tokenConfig && this.tokenConfig.disabledTokens.includes(tokenConfig.idle.token)){\n        return;\n      }\n\n      const [\n        idleSpeed,\n        userPoolShare\n      ] = await Promise.all([\n        this.getSpeed(tokenConfig.idle.address),\n        this.functionsUtil.getUserPoolShare(account,tokenConfig)\n      ]);\n\n      if (idleSpeed && userPoolShare){\n        const tokenSpeed = idleSpeed.times(userPoolShare);\n        totalSpeed = totalSpeed.plus(tokenSpeed);\n      }\n    });\n\n    if (fixByFrequency){\n      totalSpeed = this.functionsUtil.fixTokenDecimals(totalSpeed,this.tokenConfig.decimals);\n      totalSpeed = this.functionsUtil.fixDistributionSpeed(totalSpeed,this.tokenConfig.distributionFrequency)\n    }\n\n    return totalSpeed;\n  }\n\n  getAvgApr = async (availableTokens=null) => {\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.functionsUtil.BNify(0);\n    let totalAllocation = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [idleApr,tokenAllocation] = await Promise.all([\n        this.getAPR(token,tokenConfig),\n        this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (idleApr && tokenAllocation){\n        output = output.plus(idleApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n\n}\n\nexport default IdleGovToken;","import React from \"react\";\nimport axios from 'axios';\nimport moment from 'moment';\nimport { Text } from \"rimble-ui\";\nimport BigNumber from 'bignumber.js';\nimport IdleGovToken from './IdleGovToken';\nimport { toBuffer } from \"ethereumjs-util\";\nimport globalConfigs from '../configs/globalConfigs';\n\nconst ethereumjsABI = require('ethereumjs-abi');\nconst env = process.env;\n\nclass FunctionsUtil {\n\n  // Attributes\n  props = {};\n  idleGovToken = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n  }\n  trimEth = eth => {\n    return this.BNify(eth).toFixed(6);\n  }\n  toBN = n => new this.props.web3.utils.BN(n)\n  toEth = wei => {\n    if (!this.props.web3){\n      return null;\n    }\n    return this.props.web3.utils.fromWei(\n      (wei || 0).toString(),\n      \"ether\"\n    );\n  }\n  toWei = eth => {\n    if (!this.props.web3){\n      return null;\n    }\n    return this.props.web3.utils.toWei(\n      (eth || 0).toString(),\n      \"ether\"\n    );\n  }\n  htmlDecode = input => {\n    var e = document.createElement('textarea');\n    e.innerHTML = input;\n    return e.childNodes.length === 0 ? '' : e.childNodes[0].nodeValue;\n  }\n  BNify_obj = s => new BigNumber(s)\n  BNify = s => new BigNumber( typeof s === 'object' ? s : String(s) )\n  customLog = (...props) => { if (globalConfigs.logs.messagesEnabled) this.customLog(moment().format('HH:mm:ss'),...props); }\n  customLogError = (...props) => { if (globalConfigs.logs.errorsEnabled) console.error(moment().format('HH:mm:ss'),...props); }\n  getContractByName = (contractName) => {\n    const contract = this.props.contracts.find(c => c.name === contractName);\n    if (!contract) {\n      return false;\n    }\n    return contract.contract;\n  }\n  normalizeSimpleIDNotification = (n) => {\n    return n.replace(/<\\/p><p>/g,\"\\n\")\n            .replace(/<p>/g,\"\")\n            .replace(/<br>/g,\"\")\n            .replace(/&nbsp;/g,\" \")\n            .replace(/<\\/p>/g,\"\");\n  }\n  capitalize = (str) => {\n    return str.substr(0,1).toUpperCase()+str.substr(1);\n  }\n  strToMoment = (date,format=null) => {\n    return moment(date,format);\n  }\n  replaceArrayProps = (arr1,arr2) => {\n    if (arr2 && Object.keys(arr2).length){\n      Object.keys(arr2).forEach(p => {\n        arr1[p] = arr2[p];\n      });\n    }\n\n    return arr1;\n  }\n  stripHtml = (html) => {\n     var tmp = document.createElement(\"DIV\");\n     tmp.innerHTML = html;\n     return tmp.textContent || tmp.innerText || \"\";\n  }\n  // VanillaJS function for smooth scroll\n  scrollTo = (to, duration) => {\n    const start = window.scrollY;\n    const change = to - start;\n    const increment = 20;\n    let currentTime = 0;\n\n    Math.easeInOutQuad = function (t, b, c, d) {\n      t /= d/2;\n      if (t < 1) return c/2*t*t + b;\n      t--;\n      return -c/2 * (t*(t-2) - 1) + b;\n    };\n\n    const animateScroll = () => {\n        currentTime += increment;\n        var val = Math.easeInOutQuad(currentTime, start, change, duration);\n        window.scrollTo(0,val);\n        if(currentTime < duration) {\n          window.setTimeout(animateScroll, increment);\n        }\n    };\n\n    animateScroll();\n  }\n  getTxAction = (tx,tokenConfig) => {\n\n    const idleTokenAddress = tokenConfig.idle.address;\n    const depositProxyContractInfo = this.getGlobalConfig(['contract','methods','deposit','proxyContract']);\n    const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n    const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n    const batchMigration = this.getGlobalConfig(['tools','batchMigration','props','availableTokens',tokenConfig.idle.token]);\n    const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n    const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();    \n    const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).indexOf(tx.from.toLowerCase()) !== -1 ) && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase());\n    const isSendTransferTx = !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isReceiveTransferTx = !isMigrationTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isDepositTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && (tx.to.toLowerCase() === idleTokenAddress.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase()));\n    const isRedeemTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && tx.to.toLowerCase() === this.props.account.toLowerCase();\n    const isSwapTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && !isDepositTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n\n    let action = null;\n\n    if (isDepositTx){\n      action = 'Deposit';\n    } else if (isRedeemTx){\n      action = 'Redeem';\n    } else if (isMigrationTx){\n      action = 'Migrate';\n    } else if (isSendTransferTx){\n      action = 'Send';\n    } else if (isReceiveTransferTx){\n      action = 'Receive';\n    } else if (isSwapTx){\n      action = 'Swap';\n    } else if (isSwapTx){\n      action = 'SwapOut';\n    }\n\n    return action;\n  }\n  getAccountPortfolio = async (availableTokens=null,account=null) => {\n    const portfolio = {\n      tokensBalance:{},\n      avgAPY:this.BNify(0),\n      totalBalance:this.BNify(0),\n      totalEarnings:this.BNify(0),\n      totalAmountLent:this.BNify(0),\n      totalEarningsPerc:this.BNify(0),\n      totalBalanceConverted:this.BNify(0)\n    };\n\n    availableTokens = availableTokens ? availableTokens : this.props.availableTokens;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTokens){\n      return portfolio;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const idleTokenBalance = await this.getTokenBalance(tokenConfig.idle.token,account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = idleTokenBalance.times(tokenPrice);\n        const tokenBalanceConverted = await this.convertTokenBalance(tokenBalance,token,tokenConfig,isRisk);\n\n        if (!tokenPrice.isNaN() && !tokenBalance.isNaN()){\n          portfolio.tokensBalance[token] = {\n            tokenPrice,\n            tokenBalance,\n            idleTokenBalance,\n            tokenBalanceConverted\n          };\n\n          // Increment total balance\n          portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalance);\n          portfolio.totalBalanceConverted = portfolio.totalBalanceConverted.plus(tokenBalanceConverted);\n        }\n      }\n    });\n\n    const orderedTokensBalance = {};\n    Object.keys(availableTokens).forEach( token => {\n      if (portfolio.tokensBalance[token]){\n        orderedTokensBalance[token] = portfolio.tokensBalance[token];\n      }\n    });\n\n    portfolio.tokensBalance = orderedTokensBalance;\n\n    const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n    let avgAPY = this.BNify(0);\n    let totalEarnings = this.BNify(0);\n    let totalAmountLent = this.BNify(0);\n    let totalEarningsPerc = this.BNify(0);\n    // const amountLents = await this.getAmountLent(depositedTokens,this.props.account);\n\n    await this.asyncForEach(depositedTokens,async (token) => {\n      const tokenConfig = availableTokens[token];\n      const amountDeposited = await this.getAmountDeposited(tokenConfig,account);\n\n      // console.log(token,'amountDeposited',amountDeposited.toString(),'amountLent',amountLents[token].toString());\n\n      const tokenBalanceConverted = portfolio.tokensBalance[token].tokenBalanceConverted;\n      const [\n        tokenAprs\n        // tokenEarnings\n      ] = await Promise.all([\n        this.getTokenAprs(tokenConfig)\n        // this.loadAssetField('earnings',token,tokenConfig,this.props.account,false),\n      ]);\n\n      const tokenAPY = this.BNify(tokenAprs.avgApy);\n      const tokenWeight = tokenBalanceConverted.div(portfolio.totalBalanceConverted);\n      const amountLentToken = await this.convertTokenBalance(amountDeposited,token,tokenConfig,isRisk);\n      const tokenEarnings = tokenBalanceConverted.minus(amountLentToken);\n\n      if (tokenEarnings){\n        totalEarnings = totalEarnings.plus(tokenEarnings);\n      }\n\n      if (tokenAPY){\n        avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n      }\n\n      if (amountLentToken){\n        totalAmountLent = totalAmountLent.plus(amountLentToken);\n      }\n\n      // console.log(token,amountLentToken.toFixed(),tokenEarnings.toFixed(),tokenBalanceConverted.toFixed());\n    });\n\n    if (totalAmountLent.gt(0)){\n      totalEarningsPerc = totalEarnings.div(totalAmountLent).times(100);\n    }\n\n    portfolio.avgAPY = avgAPY;\n    portfolio.totalEarnings = totalEarnings;\n    portfolio.totalAmountLent = totalAmountLent;\n    portfolio.totalEarningsPerc = totalEarningsPerc;\n\n    // debugger;\n\n    return portfolio;\n  }\n  getCurveAvgSlippage = async (enabledTokens=[],account=null,fixDecimals=true) => {\n    account = account ? account : this.props.account;\n\n    if (!account){\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    let processedTxs = {};\n    const processedHashes = {};\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    if (curveTxs && curveTxs.length){\n\n      curveTxs.forEach((tx,index) => {\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice){\n          return false;\n        }\n\n        const tokenAmount = this.BNify(tx.tokenAmount);\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        switch (tx.action){\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn'){\n              if (index>0 && curveTokensBalance.gt(0)){\n                return;\n              }\n            }\n\n            if (!processedTxs[tx.hash]){\n              processedTxs[tx.hash] = {\n                price:null,\n                received:null,\n                slippage:null,\n                deposited:this.BNify(0),\n              };\n            }\n\n            processedTxs[tx.hash].deposited = processedTxs[tx.hash].deposited.plus(tokenAmount);\n            if (processedTxs[tx.hash].received === null){\n              processedTxs[tx.hash].price = curveTokenPrice;\n              processedTxs[tx.hash].received = curveTokens.times(curveTokenPrice);\n            }\n\n            // this.customLog('getCurveAvgSlippage',tx.action,tx.hash,tx.blockNumber,curveTokens.toFixed(6),curveTokenPrice.toFixed(6),processedTxs[tx.hash].deposited.toFixed(6),processedTxs[tx.hash].received.toFixed(6));\n          break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n          break;\n          default:\n          break;\n        }\n\n        // Update curveTokens balance\n        if (!processedHashes[tx.hash]){\n          curveTokensBalance = curveTokensBalance.plus(curveTokens);\n          if (curveTokensBalance.lte(0)){\n            curveTokensBalance = this.BNify(0);\n\n            // Reset processed transactions\n            // processedTxs = {};\n          }\n          processedHashes[tx.hash] = true;\n        }\n      });\n    }\n\n    // this.customLog('processedTxs',processedTxs);\n\n    let avgSlippage = this.BNify(0);\n    let totalDeposited = this.BNify(0);\n    Object.values(processedTxs).forEach( tx => {\n      const slippage = tx.received.div(tx.deposited).minus(1);\n      avgSlippage = avgSlippage.plus(slippage.times(tx.deposited));\n      totalDeposited = totalDeposited.plus(tx.deposited);\n    });\n\n    avgSlippage = avgSlippage.div(totalDeposited).times(-1);\n\n    // debugger;\n    // this.customLog('avgSlippage',avgSlippage.toString());\n\n    return avgSlippage;\n  }\n  getCurveAvgBuyPrice = async (enabledTokens=[],account=null) => {\n    account = account ? account : this.props.account;\n\n    if (!account){\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const processedTxs = {};\n    let avgBuyPrice = this.BNify(0);\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    // this.customLog('curveTxs',curveTxs);\n\n    if (curveTxs && curveTxs.length){\n\n      curveTxs.forEach((tx,index) => {\n\n        if (!processedTxs[tx.hash]){\n          processedTxs[tx.hash] = [];\n        }\n\n        if (processedTxs[tx.hash].includes(tx.action)){\n          return;\n        }\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice){\n          return false;\n        }\n\n        const prevAvgBuyPrice = avgBuyPrice;\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        // Deposited\n        switch (tx.action){\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn'){\n              if (index>0 && curveTokensBalance.gt(0)){\n                return;\n              }\n            }\n            avgBuyPrice = curveTokens.times(curveTokenPrice).plus(prevAvgBuyPrice.times(curveTokensBalance)).div(curveTokensBalance.plus(curveTokens));\n          break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n          // case 'CurveTransferOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n          break;\n          default:\n          break;\n        }\n        \n        // Update curveTokens balance\n        curveTokensBalance = curveTokensBalance.plus(curveTokens);\n        if (curveTokensBalance.lte(0)){\n          avgBuyPrice = this.BNify(0);\n          curveTokensBalance = this.BNify(0);\n        }\n\n        processedTxs[tx.hash].push(tx.action);\n\n        // this.customLog('getCurveAvgBuyPrice',tx.action,tx.hash,tx.blockNumber,curveTokens.toString(),curveTokenPrice.toString(),curveTokensBalance.toString(),avgBuyPrice.toString());\n      });\n    }\n\n    // this.customLog('avgCurveBuyPrice',avgBuyPrice.toString());\n\n    return avgBuyPrice;\n  }\n  getAvgBuyPrice = async (enabledTokens=[],account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const output = {};\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens);\n\n    enabledTokens.forEach( selectedToken => {\n\n      output[selectedToken] = [];\n      let avgBuyPrice = this.BNify(0);\n\n      let idleTokensBalance= this.BNify(0);\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.idleTokens || !tx.tokenPrice){\n            return false;\n          }\n\n          const prevAvgBuyPrice = avgBuyPrice;\n          let idleTokens = this.BNify(tx.idleTokens);\n          const tokenPrice = this.BNify(tx.tokenPrice);\n\n          // Deposited\n          switch (tx.action){\n            case 'Deposit':\n            case 'Receive':\n            case 'Swap':\n            case 'Migrate':\n            case 'CurveOut':\n              avgBuyPrice = idleTokens.times(tokenPrice).plus(prevAvgBuyPrice.times(idleTokensBalance)).div(idleTokensBalance.plus(idleTokens));\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              idleTokens = idleTokens.times(this.BNify(-1));\n            break;\n            default:\n            break;\n          }\n\n          // Update idleTokens balance\n          idleTokensBalance = idleTokensBalance.plus(idleTokens);\n          if (idleTokensBalance.lte(0)){\n            avgBuyPrice = this.BNify(0);\n            idleTokensBalance = this.BNify(0);\n          }\n\n        });\n      }\n\n      // Add token Data\n      output[selectedToken] = avgBuyPrice;\n    });\n\n    return output;\n  }\n  getFirstDepositTx = async (enabledTokens=[],account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens);\n\n    const deposits = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      let firstDepositTx = null;\n      deposits[selectedToken] = firstDepositTx;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount){\n            return false;\n          }\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n              amountLent = amountLent.plus(tx.tokenAmount);\n              if (!firstDepositTx){\n                firstDepositTx = tx;\n              }\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.BNify(0);\n            firstDepositTx = null;\n          }\n        });\n      }\n\n      // Add token Data\n      deposits[selectedToken] = firstDepositTx;\n    });\n\n    return deposits;\n  }\n  asyncTimeout = (ms) => {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n  getDepositTimestamp = async (enabledTokens=[],account) => {\n    const firstDepositTxs = await this.getFirstDepositTx(enabledTokens,account);\n    if (firstDepositTxs){\n      return Object.keys(firstDepositTxs).reduce( (acc,token) => {\n        if (firstDepositTxs[token]){\n          acc[token] = firstDepositTxs[token].timeStamp;\n        }\n        return acc;\n      },{});\n    }\n\n    return null;\n  }\n  getAmountDeposited = async (tokenConfig,account) => {\n    let [tokenBalance,userAvgPrice] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token,account),\n      this.genericContractCall(tokenConfig.idle.token, 'userAvgPrices', [account])\n    ]);\n\n    if (tokenBalance && userAvgPrice){\n      userAvgPrice = this.fixTokenDecimals(userAvgPrice,tokenConfig.decimals);\n      const amountDeposited = tokenBalance.times(userAvgPrice);\n      return amountDeposited;\n    }\n\n    return null;\n  }\n  getAmountLent = async (enabledTokens=[],account) => {\n\n    account = account || this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens,false);\n\n    const amountLents = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      amountLents[selectedToken] = amountLent;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount){\n            return false;\n          }\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tx.tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.BNify(0);\n          }\n        });\n      }\n\n      // Add token Data\n      amountLents[selectedToken] = amountLent;\n    });\n\n    // debugger;\n\n    return amountLents;\n  }\n  getEtherscanBaseTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[],debug=false) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length){\n      return [];\n    }\n\n    account = account.toLowerCase();\n\n    const selectedStrategy = this.props.selectedStrategy;\n\n    // Check if firstBlockNumber is less that firstIdleBlockNumber\n    const firstIdleBlockNumber = this.getGlobalConfig(['network','firstBlockNumber']);\n    firstBlockNumber = Math.max(firstIdleBlockNumber,firstBlockNumber);\n\n    const requiredNetwork = this.getGlobalConfig(['network','requiredNetwork']);\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n\n    let results = [];\n    let etherscanBaseTxs = null;\n    let etherscanBaseEndpoint = null;\n\n    // Check if etherscan is enabled for the required network\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]){\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n\n      // Get base endpoint cached transactions\n      etherscanBaseEndpoint = `${etherscanApiUrl}?strategy=${selectedStrategy}&apikey=${env.REACT_APP_ETHERSCAN_KEY}&module=account&action=tokentx&address=${account}&startblock=${firstIdleBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n      etherscanBaseTxs = this.getCachedRequest(etherscanBaseEndpoint);\n\n      if (debug){\n        console.log('DEBUG - CACHED - etherscanBaseTxs',etherscanBaseTxs);\n      }\n\n      // Check if the latest blockNumber is actually the latest one\n      if (etherscanBaseTxs && etherscanBaseTxs.data.result && Object.values(etherscanBaseTxs.data.result).length){\n\n        const lastCachedTx = Object.values(etherscanBaseTxs.data.result).pop();\n        const lastCachedBlockNumber = lastCachedTx && lastCachedTx.blockNumber ? parseInt(lastCachedTx.blockNumber)+1 : firstBlockNumber;\n\n        const etherscanEndpointLastBlock = `${etherscanApiUrl}?strategy=${selectedStrategy}&apikey=${env.REACT_APP_ETHERSCAN_KEY}&module=account&action=tokentx&address=${account}&startblock=${lastCachedBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n        let latestTxs = await this.makeCachedRequest(etherscanEndpointLastBlock,15);\n\n        if (latestTxs && latestTxs.data.result && latestTxs.data.result.length){\n          \n          latestTxs = await this.filterEtherscanTxs(latestTxs.data.result,enabledTokens,true,false);\n\n          if (latestTxs && Object.values(latestTxs).length){\n\n            const latestBlockNumbers = Object.values(latestTxs).map( lastTx => (parseInt(lastTx.blockNumber)) );\n            const lastRealBlockNumber = Math.max(...latestBlockNumbers);\n\n            // If real tx blockNumber differs from last blockNumber\n            if (lastRealBlockNumber>=lastCachedBlockNumber){\n              // Merge latest Txs with etherscanBaseTxs\n              Object.values(latestTxs).forEach((tx) => {\n                const txFound = Object.keys(etherscanBaseTxs.data.result).includes(tx.hashKey);\n                if (!txFound){\n                  etherscanBaseTxs.data.result[tx.hashKey] = tx;\n                }\n              });\n\n              // Save etherscan txs\n              this.saveEtherscanTxs(etherscanBaseEndpoint,etherscanBaseTxs.data.result);\n            }\n          }\n        }\n      } else {\n        etherscanBaseTxs = null;\n      }\n\n      let txs = etherscanBaseTxs;\n\n      if (debug){\n        console.log('DEBUG - txs',txs);\n      }\n\n      if (!txs){\n        // Make request\n        txs = await this.makeRequest(etherscanBaseEndpoint);\n\n        // console.log('makeRequest 1',account,etherscanBaseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n\n        if (!txs || !txs.data || parseInt(txs.data.status)===0){\n          let requestCount = 0;\n          let requestStatus = false;\n          do {\n            await this.asyncTimeout(500);\n            txs = await this.makeRequest(etherscanBaseEndpoint);\n            requestCount++;\n            requestStatus = txs && txs.data ? parseInt(txs.data.status) : false;\n            // console.log('makeRequest '+(requestCount+1),account,etherscanBaseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n          } while (requestCount<5 && !requestStatus);\n        }\n\n        // Cache request\n        if (txs && txs.data && parseInt(txs.data.status)>0){\n          const timestamp = parseInt(Date.now()/1000);\n          const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n          cachedRequests[etherscanBaseEndpoint] = {\n            data:txs,\n            timestamp\n          };\n          this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n        }\n      }\n\n      if (txs && txs.data && txs.data.result){\n        results = txs.data.result;\n      } else {\n        return [];\n      }\n    }\n\n    return {\n      results,\n      etherscanBaseTxs,\n      etherscanBaseEndpoint\n    };\n  }\n  getCurveTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[]) => {\n    const results = await this.getEtherscanTxs(account,firstBlockNumber,endBlockNumber,enabledTokens);\n    // results = results ? Object.values(results) : [];\n    return this.filterCurveTxs(results,enabledTokens);\n  }\n  saveEtherscanTxs = (endpoint,txs) => {\n    const txsToStore = {};\n    Object.keys(txs).forEach(txHash => {\n      const tx = txs[txHash];\n      if (tx.blockNumber && (!tx.status || tx.status.toLowerCase() !== 'pending')){\n        txsToStore[txHash] = tx;\n      }\n    });\n\n    // Save new cached data\n    const cachedRequest = {\n      data:{\n        result:txsToStore\n      }\n    };\n    this.saveCachedRequest(endpoint,false,cachedRequest);\n  }\n  getEtherscanTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[],debug=false) => {\n    const {\n      results,\n      etherscanBaseTxs,\n      etherscanBaseEndpoint\n    } = await this.getEtherscanBaseTxs(account,firstBlockNumber,endBlockNumber,enabledTokens,debug);\n\n    // Initialize prevTxs\n    let etherscanTxs = {};\n    if (etherscanBaseTxs){\n      // Filter txs for token\n      etherscanTxs = await this.processStoredTxs(results,enabledTokens);\n    } else {\n      const allAvailableTokens = Object.keys(this.props.availableTokens);\n      // Save base endpoint with all available tokens\n      etherscanTxs = await this.filterEtherscanTxs(results,allAvailableTokens);\n\n      // Store filtered txs\n      if (etherscanTxs && Object.keys(etherscanTxs).length){\n        this.saveEtherscanTxs(etherscanBaseEndpoint,etherscanTxs);\n      }\n    }\n\n    if (debug){\n      console.log('DEBUG - getEtherscanTxs -',etherscanTxs);\n    }\n\n    return Object\n            .values(etherscanTxs)\n            .filter(tx => (tx.token && enabledTokens.includes(tx.token.toUpperCase())))\n            .sort((a,b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n  }\n  filterCurveTxs = async (results,enabledTokens=[]) => {\n\n    if (!results || !results.length || typeof results.forEach !== 'function'){\n      return [];\n    }\n\n    const availableTokens = this.props.availableTokens ? this.props.availableTokens : this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const curveTxs = results.filter( tx => (enabledTokens.includes(tx.token) && ['CurveIn','CurveOut','CurveZapIn','CurveZapOut','CurveTransferIn','CurveTransferOut','CurveDepositIn','CurveDepositOut'].includes(tx.action)) );\n\n    if (curveTxs.length){\n      curveTxs.sort((a,b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n    }\n\n    return curveTxs;\n  }\n  filterEtherscanTxs = async (results,enabledTokens=[],processTxs=true,processStoredTxs=true) => {\n    if (!this.props.account || !results || !results.length || typeof results.forEach !== 'function'){\n      return [];\n    }\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let etherscanTxs = {};\n    let curveTransfersTxs = [];\n    let curveTransfersTxsToDelete = [];\n\n    // const idleTokensAddresses = Object.values(this.props.availableTokens).map( tokenConfig => (tokenConfig.idle.address) );\n    const curveZapContract = this.getGlobalConfig(['curve','zapContract']);\n    const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    // this.customLog('filterEtherscanTxs',enabledTokens,results);\n\n    enabledTokens.forEach(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      const depositProxyContractInfo = this.getGlobalConfig(['contract','methods','deposit','proxyContract']);\n      const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n      const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n      const tokenMigrationToolParams = this.getGlobalConfig(['tools','tokenMigration','props','migrationContract']);\n\n      const batchMigration = this.getGlobalConfig(['tools','batchMigration','props','availableTokens',tokenConfig.idle.token]);\n      const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n      // const curveEnabled = this.getGlobalConfig(['curve','enabled']);\n      const curveTokenConfig = this.getGlobalConfig(['curve','availableTokens',tokenConfig.idle.token]);\n\n      results.forEach( tx => {\n        let tokenDecimals = tokenConfig.decimals;\n        const idleToken = tokenConfig.idle.token;\n        const internalTxs = results.filter(r => r.hash === tx.hash);\n        const isRightToken = internalTxs.length>1 && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase()).length>0;\n        const isSendTransferTx = internalTxs.length === 1 && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isReceiveTransferTx = internalTxs.length === 1 && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isDepositInternalTx = isRightToken && internalTxs.find( iTx => iTx.from.toLowerCase() === this.props.account.toLowerCase() && (iTx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && iTx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length>0 )) );\n        const isRedeemInternalTx = isRightToken && internalTxs.find( iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && iTx.to.toLowerCase() === this.props.account.toLowerCase() );\n\n        const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase()) ) && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase());\n        const isConversionTx = tokenMigrationToolParams && (tx.from.toLowerCase() === tokenMigrationToolParams.address.toLowerCase() || tokenMigrationToolParams.oldAddresses.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase())) && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isDepositTx = isRightToken && !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && (tx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length>0 ));\n        const isRedeemTx = isRightToken && !isMigrationTx && !isDepositInternalTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && tx.to.toLowerCase() === this.props.account.toLowerCase();\n        const isWithdrawTx = internalTxs.length>1 && internalTxs.filter(iTx => tokenConfig.protocols.map(p => p.address.toLowerCase()).includes(iTx.contractAddress.toLowerCase()) ).length>0 && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // const curveDepositTx = internalTxs.find( iTx => (iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && iTx.from.toLowerCase() === this.props.account.toLowerCase()) );\n        const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n        // Check Curve\n        const curveTx = internalTxs.find( tx => (tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && (tx.to.toLowerCase() === this.props.account.toLowerCase() || tx.from.toLowerCase() === this.props.account.toLowerCase()) ) );\n        const isCurveTx = curveTx !== undefined;\n\n        const isCurveDepositTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === curveSwapContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveRedeemTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveSwapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveDepositIn = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveDepositOut = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveZapIn = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveZapOut = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveTransferOut = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapOut && !isCurveRedeemTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.from.toLowerCase() === this.props.account.toLowerCase();\n        const isCurveTransferIn = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapIn && !isCurveDepositTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isSwapOutTx = !isCurveTx && !isSendTransferTx && !isWithdrawTx && !isRedeemInternalTx && !etherscanTxs[tx.hash] && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isSwapTx = !isCurveTx && !isReceiveTransferTx && !isConversionTx && !isDepositInternalTx && !etherscanTxs[tx.hash] && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // if (tx.hash.toLowerCase() === '0x599a2e7b0094b0a943ffb1d520cb47598dcf3764145c33824e3b032d91ccc489'.toLowerCase()){\n        //   debugger;\n        // }\n\n        if (isSendTransferTx || isReceiveTransferTx || isMigrationTx || isDepositTx || isRedeemTx || isSwapTx || isSwapOutTx || isWithdrawTx || isConversionTx || isCurveDepositTx || isCurveRedeemTx || isCurveZapIn || isCurveZapOut || isCurveTransferOut || isCurveTransferIn || isCurveDepositIn || isCurveDepositOut){\n\n          let action = null;\n          let hashKey = tx.hash;\n\n          if (isDepositTx){\n            action = 'Deposit';\n          } else if (isRedeemTx){\n            action = 'Redeem';\n          } else if (isMigrationTx || isConversionTx){\n            action = 'Migrate';\n          } else if (isSendTransferTx){\n            action = 'Send';\n          } else if (isReceiveTransferTx){\n            action = 'Receive';\n          } else if (isSwapTx){\n            action = 'Swap';\n          } else if (isSwapOutTx){\n            action = 'SwapOut';\n          } else if (isWithdrawTx){\n            action = 'Withdraw';\n          } else if (isCurveDepositTx){\n            action = 'CurveIn';\n          } else if (isCurveRedeemTx){\n            action = 'CurveOut';\n          } else if (isCurveZapIn){\n            action = 'CurveZapIn';\n          } else if (isCurveZapOut){\n            action = 'CurveZapOut';\n          } else if (isCurveDepositIn){\n            action = 'CurveDepositIn';\n          } else if (isCurveDepositOut){\n            action = 'CurveDepositOut';\n          } else if (isCurveTransferIn){\n            action = 'CurveTransferIn';\n          } else if (isCurveTransferOut){\n            action = 'CurveTransferOut';\n          }\n\n          let curveTokens = null;\n          if (isCurveTx){\n            hashKey += '_'+tx.tokenSymbol;\n            curveTokens = this.fixTokenDecimals(curveTx.value,curvePoolContract.decimals);\n\n            // Add action for curve tokens transfers\n            if ((isCurveTransferIn || isCurveTransferOut)){\n              hashKey+='_'+action;\n            }\n          }\n\n          // this.customLog('SAVE!',action);\n\n          if (tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()){\n            tokenDecimals = 18;\n          } else if (isCurveTx){\n            tokenDecimals = parseInt(tx.tokenDecimal);\n          }\n\n          // Sum the value if already processed\n          if (etherscanTxs[hashKey]){\n            // Prevent second internal tx to sum SwapOut original value\n            switch (etherscanTxs[hashKey].action){\n              case 'SwapOut':\n                if (etherscanTxs[hashKey].action !== action && isRedeemTx){\n                  etherscanTxs[hashKey].tokenValue = this.fixTokenDecimals(tx.value,tokenDecimals);\n                }\n              break;\n              default:\n                if (!curveTx){\n                  const newValue = etherscanTxs[hashKey].value.plus(this.fixTokenDecimals(tx.value,tokenDecimals));\n                  etherscanTxs[hashKey].value = newValue;\n                }\n              break;\n            }\n          } else {\n            // Insert tx in curve transfers buffer\n            if (isCurveTransferIn || isCurveTransferOut){\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n                curveTokens = this.fixTokenDecimals(tx.value,curvePoolContract.decimals);\n                curveTransfersTxs.push({...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value,tokenDecimals)});\n              }\n            } else {\n              etherscanTxs[hashKey] = ({...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value,tokenDecimals)});\n\n              // Delete curveTransfers\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n                curveTransfersTxsToDelete.push(tx.hash.toLowerCase());\n              }\n\n              // Take right tokenSymbol\n              switch (action){\n                case 'Withdraw':\n                  const iTxs = internalTxs.filter(iTx => (iTx !== tx));\n                  if (iTxs.length>0){\n                    const iTx = iTxs[0];\n                    etherscanTxs[hashKey].withdrawnValue = this.fixTokenDecimals(iTx.value,iTx.tokenDecimal);\n                    etherscanTxs[hashKey].tokenSymbol = iTx.tokenSymbol;\n                  }\n                break;\n                case 'CurveIn':\n                case 'CurveOut':\n                case 'CurveZapIn':\n                case 'CurveZapOut':\n                case 'CurveDepositIn':\n                case 'CurveDepositOut':\n                  etherscanTxs[hashKey].tokenSymbol = token;\n                break;\n                default:\n                break;\n              }\n            }   \n          }\n        }\n      });\n    });\n    \n    curveTransfersTxs.forEach( tx => {\n      if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n        etherscanTxs[tx.hashKey] = tx;\n      }\n    });\n  \n    if (processTxs){\n      etherscanTxs = await this.processEtherscanTransactions(etherscanTxs,enabledTokens,processStoredTxs);\n    }\n\n    // console.log('etherscanTxs',etherscanTxs);\n\n    return etherscanTxs;\n  }\n  addStoredTransaction = (txKey,transaction) => {\n\n    const account = this.props && this.props.account ? this.props.account : null;\n    const selectedToken = this.props && this.props.selectedToken ? this.props.selectedToken : null;\n\n    if (!account || !selectedToken || !this.props.availableTokens || !this.props.availableTokens[selectedToken]){\n      return false;\n    }\n\n    const tokenConfig = this.props.availableTokens[selectedToken];\n    const tokenKey = tokenConfig.idle.token;\n\n    let storedTxs = this.getStoredTransactions();\n    if (!storedTxs[account]){\n      storedTxs[account] = {};\n    }\n\n    if (!storedTxs[account][tokenKey]){\n      storedTxs[account][tokenKey] = {};\n    }\n\n    storedTxs[account][tokenKey][txKey] = transaction;\n    this.updateStoredTransactions(storedTxs);\n  }\n  updateStoredTransactions = transactions => {\n    this.setLocalStorage('transactions',JSON.stringify(transactions));\n  }\n  /*\n  Merge storedTxs with this.props.transactions\n  */\n  getStoredTransactions = (account=null,tokenKey=null,selectedToken=null) => {\n    const storedTxs = this.getStoredItem('transactions',true,{});\n    const transactions = this.props.transactions ? { ...this.props.transactions } : {};\n    let output = storedTxs;\n\n    if (account){\n      if (storedTxs[account]){\n        output = storedTxs[account];\n        if (tokenKey){\n          output = output[tokenKey] ? output[tokenKey] : {};\n\n          if (selectedToken){\n            Object.keys(transactions).forEach(txKey => {\n              const tx = transactions[txKey];\n              if (!output[txKey] && tx.token && tx.token.toUpperCase() === selectedToken.toUpperCase()){\n                output[txKey] = transactions[txKey];\n              }\n            });\n          }\n        }\n      } else {\n        output = {};\n      }\n    }\n\n    return output;\n  }\n  processEtherscanTransactions = async (etherscanTxs,enabledTokens=[],processStoredTxs=true) => {\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let txReceipts = {};\n    let storedTxs = this.getStoredTransactions();\n\n    // Init storedTxs for pair account-token if empty\n    if (typeof storedTxs[this.props.account] !== 'object'){\n      storedTxs[this.props.account] = {};\n    }\n\n    // Take base tokens addresses and configs\n    const baseTokensConfigs = {};\n    const baseTokensAddresses = [];\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n    Object.keys(curveAvailableTokens).forEach( token => {\n      const curveTokenConfig = curveAvailableTokens[token];\n      const baseTokenConfig = this.getGlobalConfig(['stats','tokens',curveTokenConfig.baseToken]);\n      const baseTokenAddress = baseTokenConfig.address.toLowerCase();\n      baseTokensConfigs[baseTokenAddress] = baseTokenConfig;\n      baseTokensConfigs[baseTokenAddress].token = curveTokenConfig.baseToken;\n      baseTokensAddresses.push(baseTokenAddress);\n    });\n\n    const curveZapContract = this.getGlobalConfig(['curve','zapContract']);\n    // const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    // const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    // const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    await this.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n      const idleToken = tokenConfig.idle.token;\n\n      // Init storedTxs for pair account-token if empty\n      if (typeof storedTxs[this.props.account][tokenKey] !== 'object'){\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      const minedTxs = {...storedTxs[this.props.account][tokenKey]};\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        await this.asyncForEach(filteredTxs,async (tx,index) => {\n          const txKey = `tx${tx.timeStamp}000`;\n          const storedTx = storedTxs[this.props.account][tokenKey][txKey] ? storedTxs[this.props.account][tokenKey][txKey] : tx;\n\n          let tokenPrice = null;\n          \n          if (storedTx.tokenPrice && !this.BNify(storedTx.tokenPrice).isNaN()){\n            tokenPrice = this.BNify(storedTx.tokenPrice);\n          } else {\n            tokenPrice = await this.getIdleTokenPrice(tokenConfig,tx.blockNumber,tx.timeStamp);\n            storedTx.tokenPrice = tokenPrice;\n          }\n\n          let idleTokens = this.BNify(tx.value);\n          let tokensTransfered = tokenPrice.times(idleTokens);\n\n          // Add transactionHash to storedTx\n          if (!storedTx.transactionHash){\n            storedTx.transactionHash = tx.hash;\n          }\n\n          // Deposited\n          switch (tx.action){\n            case 'Send':\n            case 'Receive':\n            case 'Swap':\n            case 'SwapOut':\n            case 'Migrate':\n              if (!storedTx.tokenAmount){\n                storedTx.idleTokens = idleTokens;\n                storedTx.value = tokensTransfered;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.tokenSymbol = selectedToken;\n              }\n            break;\n            case 'Deposit':\n            case 'Redeem':\n              if (!storedTx.tokenAmount){\n                storedTx.value = idleTokens;\n                storedTx.tokenAmount = idleTokens;\n                storedTx.idleTokens = idleTokens.div(tokenPrice);\n              }\n            break;\n            case 'Withdraw':\n              if (!storedTx.tokenAmount){\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.value = storedTx.withdrawnValue;\n              }\n            break;\n            case 'CurveIn':\n            case 'CurveOut':\n              if (!storedTx.tokenAmount){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n            break;\n            case 'CurveTransferIn':\n            case 'CurveTransferOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n                storedTx.tokenAmount = this.BNify(storedTx.curveTokens).times(storedTx.curveTokenPrice);\n              }\n\n              storedTx.idleTokens = this.BNify(0);\n            break;\n            case 'CurveZapIn':\n            case 'CurveZapOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              if (!storedTx.tokenAmount){\n\n                storedTx.tokenAmount = this.BNify(0);\n                storedTx.idleTokens = this.BNify(0);\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise( async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n                    if (err){\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt){\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]){\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter( log => (baseTokensAddresses.includes(log.address.toLowerCase()) && log.topics[log.topics.length-1].toLowerCase() === `0x00000000000000000000000${curveZapContract.address.replace('x','').toLowerCase()}` ) );\n\n                  this.customLog('filteredLogs',filteredLogs);\n\n                  if (filteredLogs && filteredLogs.length){\n                    filteredLogs.forEach( log => {\n                      let tokenAmount = parseInt(log.data,16);\n                      const baseTokensConfig = baseTokensConfigs[log.address.toLowerCase()];\n                      const tokenDecimals = baseTokensConfig.decimals;\n                      tokenAmount = this.fixTokenDecimals(tokenAmount,tokenDecimals);\n                      storedTx.tokenAmount = storedTx.tokenAmount.plus(tokenAmount);\n                      this.customLog('Add tokenAmount ('+tx.hash+')',baseTokensConfig.token,tokenAmount.toFixed(5),storedTx.tokenAmount.toFixed(5));\n                    });\n                  }\n                }\n              }\n            break;\n            case 'CurveDepositIn':\n            case 'CurveDepositOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              storedTx.tokenAmount = this.BNify(storedTx.value);\n\n              if (!storedTx.idleTokens){\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise( async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n                    if (err){\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt){\n                  const curveTokenConfig = this.getGlobalConfig(['curve','availableTokens',idleToken]);\n                  const idleTokenDecimals = curveTokenConfig && curveTokenConfig.decimals ? curveTokenConfig.decimals : 18;\n                  const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]){\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter( log => (log.address.toLowerCase()===idleTokenAddress ) );\n                  if (filteredLogs && filteredLogs.length){\n                    idleTokens = parseInt(filteredLogs[0].data,16);\n                    idleTokens = this.fixTokenDecimals(idleTokens,idleTokenDecimals);\n                    storedTx.idleTokens = idleTokens;\n                  }\n                }\n              }\n            break;\n            default:\n            break;\n          }\n            \n          // Save token for future filtering\n          storedTx.token = selectedToken;\n\n          // Save processed tx\n          etherscanTxs[tx.hashKey] = storedTx;\n\n          // Store processed Tx\n          storedTxs[this.props.account][tokenKey][txKey] = storedTx;\n\n          // Remove from minted Txs\n          delete minedTxs[txKey];\n        });\n      }\n\n      // Process Stored txs\n      if (processStoredTxs){\n        etherscanTxs = await this.processStoredTxs(etherscanTxs,[selectedToken],this.props.transactions);\n      }\n    });\n\n    // Update Stored txs\n    if (storedTxs){\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  processStoredTxs = async (etherscanTxs,enabledTokens=[],txsToProcess=null) => {\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let storedTxs = this.getStoredItem('transactions',true,{})\n\n    // Init storedTxs\n    if (!storedTxs[this.props.account]){\n      storedTxs[this.props.account] = {};\n    }\n\n    etherscanTxs = Object.assign({},etherscanTxs);\n\n    const networkId = this.getGlobalConfig(['network','requiredNetwork']);\n\n    // this.customLog('Processing stored txs',enabledTokens);\n\n    await this.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n\n      // Init storedTxs\n      if (!storedTxs[this.props.account][tokenKey]){\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      txsToProcess = txsToProcess && Object.values(txsToProcess).length ? txsToProcess : this.getStoredTransactions(this.props.account,tokenKey,selectedToken);\n      \n      // this.customLog('txsToProcess',selectedToken,txsToProcess);\n\n      // if (!Object.values(txsToProcess).length && selectedToken==='DAI' && Object.values(this.props.transactions).length>0){\n      //   debugger;\n      // }\n\n      // Debug transactions\n      /*\n      txsToProcess['xxxxx'] = {\n        status:'success',\n        created:Date.now(),\n        method:'executeMetaTransaction',\n        token:selectedToken.toUpperCase(),\n        transactionHash:'0x000000000000000000000000000'\n      };\n      */\n\n      await this.asyncForEach(Object.keys(txsToProcess),async (txKey,i) => {\n        const tx = txsToProcess[txKey];\n\n        // Skip wrong token\n        if (!tx || !tx.token || tx.token.toUpperCase() !== selectedToken.toUpperCase() || (tx.networkId && parseInt(tx.networkId) !== parseInt(networkId))){\n          return false;\n        }\n\n        const isStoredTx = storedTxs && storedTxs[this.props.account] && storedTxs[this.props.account][tokenKey] && storedTxs[this.props.account][tokenKey][txKey];\n\n        const allowedMethods = {\n          mintIdleToken:'Deposit',\n          redeemIdleToken:'Redeem',\n          migrateFromToIdle:'Migrate',\n          mintIdleTokensProxy:'Deposit',\n          migrateFromAaveToIdle:'Migrate',\n          migrateFromIearnToIdle:'Migrate',\n          executeMetaTransaction:'Migrate',\n          migrateFromFulcrumToIdle:'Migrate',\n          migrateFromCompoundToIdle:'Migrate',\n        };\n        const pendingStatus = ['pending','started'];\n        const txSucceeded = tx.status === 'success';\n        const txPending = pendingStatus.includes(tx.status);\n        const isMetaTx = tx.method === 'executeMetaTransaction';\n        const txHash = tx.transactionHash ? tx.transactionHash : null;\n        const methodIsAllowed = Object.keys(allowedMethods).includes(tx.method);\n\n        // Skip transaction if already present in etherscanTxs with same status\n        if (txHash && etherscanTxs[txHash] && etherscanTxs[txHash].tokenPrice){\n          return false;\n        }\n\n        if (txPending && txHash && !etherscanTxs[txHash] && methodIsAllowed && tx.params.length){\n          // this.customLog('processStoredTxs',tx.method,tx.status,tx.params);\n          const isMigrationTx = allowedMethods[tx.method] === 'Migrate';\n          const decimals = isMigrationTx ? 18 : tokenConfig.decimals;\n          etherscanTxs[`t${tx.created}`] = {\n            status:'Pending',\n            token:selectedToken,\n            action:allowedMethods[tx.method],\n            timeStamp:parseInt(tx.created/1000),\n            hash:txHash ? tx.transactionHash : null,\n            tokenSymbol:isMigrationTx ? tokenConfig.idle.token : selectedToken,\n            value: tx.value ? tx.value : this.fixTokenDecimals(tx.params[0],decimals).toString()\n          };\n\n          return false;\n        }\n\n        // Skip invalid txs\n        if (!txSucceeded || !txHash || !methodIsAllowed){\n          return false;\n        }\n\n        let realTx = tx.realTx ? tx.realTx : null;\n\n        if (!realTx){\n          // this.customLog('loadTxs - getTransaction',tx.transactionHash);\n          realTx = await (new Promise( async (resolve, reject) => {\n            this.props.web3.eth.getTransaction(tx.transactionHash,(err,txReceipt)=>{\n              if (err){\n                reject(err);\n              }\n              resolve(txReceipt);\n            });\n          }));\n        }\n\n        // this.customLog('realTx (localStorage)',realTx);\n\n        // Skip txs from other wallets if not meta-txs\n        if (!realTx || (!isMetaTx && realTx.from.toLowerCase() !== this.props.account.toLowerCase())){\n          return false;\n        }\n\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig,realTx.blockNumber,realTx.timeStamp);\n\n        realTx.status = 'Completed';\n        realTx.action = allowedMethods[tx.method];\n        realTx.contractAddress = tokenConfig.address;\n        realTx.timeStamp = parseInt(tx.created/1000);\n\n        let txValue = null;\n        switch (tx.method){\n          case 'mintIdleToken':\n          case 'mintIdleTokensProxy':\n            if (!tx.params){\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (realTx.to.toLowerCase() !== tokenConfig.idle.address.toLowerCase()){\n              // Remove wrong contract tx\n              if (isStoredTx){\n                delete storedTxs[this.props.account][tokenKey][txKey];\n              }\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - wrong contract');\n              return false;\n            }\n\n            txValue = tx.params ? this.fixTokenDecimals(tx.params[0],tokenConfig.decimals).toString() : 0;\n            if (!txValue){\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - value is zero ('+txValue+')');\n              return false;\n            }\n\n            realTx.value = txValue;\n            realTx.tokenAmount = txValue;\n          break;\n          case 'redeemIdleToken':\n            if (!tx.params){\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (!realTx.tokenPrice){\n              const redeemedValueFixed = this.fixTokenDecimals(tx.params[0],18).times(tokenPrice);\n              realTx.tokenPrice = tokenPrice;\n              realTx.value = redeemedValueFixed;\n              realTx.tokenAmount = redeemedValueFixed;\n            }\n          break;\n          case 'executeMetaTransaction':\n            let executeMetaTransactionReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!executeMetaTransactionReceipt){\n              executeMetaTransactionReceipt = await (new Promise( async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash,(err,tx)=>{\n                  if (err){\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!executeMetaTransactionReceipt){\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt){\n              tx.txReceipt = executeMetaTransactionReceipt;\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            let action = null;\n            let executeMetaTransactionContractAddr = null;\n            let executeMetaTransactionInternalTransfers = [];\n            const IdleProxyMinterInfo = this.getGlobalConfig(['contract','deposit','proxyContract']);\n\n            // Handle migration tx\n            if (tokenConfig.migration && tokenConfig.migration.oldContract){\n              if (executeMetaTransactionReceipt.logs){\n                executeMetaTransactionContractAddr = tokenConfig.migration.oldContract.address.replace('x','').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n              } else if (executeMetaTransactionReceipt.events){\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length){\n                action = 'Migrate';\n              }\n            }\n\n            // Handle deposit tx\n            if (!executeMetaTransactionInternalTransfers.length){\n              if (executeMetaTransactionReceipt.logs){\n                executeMetaTransactionContractAddr = tokenConfig.idle.address.replace('x','').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n\n                // Handle deposit made with proxy contract\n                if (!executeMetaTransactionInternalTransfers.length && IdleProxyMinterInfo){\n                  executeMetaTransactionContractAddr = IdleProxyMinterInfo.address.replace('x','').toLowerCase();\n                  executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n                }\n              } else if (executeMetaTransactionReceipt.events){\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length){\n                action = 'Deposit';\n              }\n            }\n\n            if (!executeMetaTransactionInternalTransfers.length){\n              return false;\n            }\n\n            const internalTransfer = executeMetaTransactionInternalTransfers[0];\n\n            const metaTxValue = internalTransfer.data ? parseInt(internalTransfer.data,16) : (internalTransfer.raw && internalTransfer.raw.data) ? parseInt(internalTransfer.raw.data,16) : null;\n\n            if (!metaTxValue){\n              return false;\n            }\n\n            const metaTxValueFixed = this.fixTokenDecimals(metaTxValue,tokenConfig.decimals);\n            realTx.action = action;\n            realTx.value = metaTxValueFixed;\n            realTx.tokenAmount = metaTxValueFixed;\n            // this.customLog(metaTxValueFixed.toString());\n          break;\n          case 'migrateFromCompoundToIdle':\n          case 'migrateFromFulcrumToIdle':\n          case 'migrateFromAaveToIdle':\n          case 'migrateFromIearnToIdle':\n          case 'migrateFromToIdle':\n            if (!tokenConfig.migration || !tokenConfig.migration.oldContract){\n              return false;\n            }\n\n            let migrationTxReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!migrationTxReceipt){\n              migrationTxReceipt = await (new Promise( async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash,(err,tx)=>{\n                  if (err){\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!migrationTxReceipt){\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt){\n              tx.txReceipt = migrationTxReceipt;\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            const migrationContractAddr = tokenConfig.migration.migrationContract.address.toLowerCase().replace('x','');\n            const contractAddress = tokenConfig.idle.address.toLowerCase().replace('x','');\n            const migrationTxInternalTransfers = migrationTxReceipt.logs.filter((tx) => { return tx.topics.length>=3 && tx.topics[tx.topics.length-2].toLowerCase() === `0x00000000000000000000000${migrationContractAddr}` && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${contractAddress}`; });\n\n            if (!migrationTxInternalTransfers.length){\n              return false;\n            }\n\n            const migrationInternalTransfer = migrationTxInternalTransfers.pop();\n\n            const decodedLogs = this.props.web3.eth.abi.decodeLog([\n              {\n                internalType: \"uint256\",\n                name: \"_token\",\n                type: \"uint256\"\n              },\n            ],migrationInternalTransfer.data,migrationInternalTransfer.topics);\n\n            if (!decodedLogs || !decodedLogs._token){\n              return false;\n            }\n\n            const migrationValue = decodedLogs._token;\n            const migrationValueFixed = this.fixTokenDecimals(migrationValue,tokenConfig.decimals);\n            realTx.value = migrationValueFixed.toString();\n          break;\n          default:\n          break;\n        }\n\n        realTx.tokenPrice = tokenPrice;\n        realTx.token = selectedToken;\n        realTx.tokenSymbol = selectedToken;\n        realTx.idleTokens = tokenPrice.times(this.BNify(realTx.value));\n\n        // Save processed tx\n        etherscanTxs[txHash] = realTx;\n        // etherscanTxs.push(realTx);\n\n        // Store processed Tx\n        if (!tx.realTx){\n          tx.realTx = realTx;\n          storedTxs[this.props.account][tokenKey][txKey] = tx;\n        }\n      });\n    });\n\n    // Update Stored Txs\n    if (storedTxs){\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  saveCachedRequest = (endpoint,alias=false,data) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    const timestamp = parseInt(Date.now()/1000);\n    cachedRequests[key] = {\n      data,\n      timestamp\n    };\n    return this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n  }\n  getCustomAddress = () => {\n    return this.getStoredItem('customAddress',false);\n  }\n  setCustomAddress = (customAddress) => {\n    return this.setLocalStorage('customAddress',customAddress);\n  }\n  getCachedRequest = (endpoint,alias=false) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key]){\n      return cachedRequests[key].data;\n    }\n    return null;\n  }\n  makeRequest = async(endpoint,error_callback=false,config=null) => {\n    const data = await axios\n                  .get(endpoint,config)\n                  .catch(err => {\n                    if (typeof error_callback === 'function'){\n                      error_callback(err);\n                    }\n                  });\n    return data;\n  }\n  makeCachedRequest = async (endpoint,TTL=60,return_data=false,alias=false,config=null) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now()/1000);\n    \n    // Check if already exists\n    const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key] && cachedRequests[key].timestamp && timestamp-cachedRequests[key].timestamp<TTL){\n      return (cachedRequests[key].data && return_data ? cachedRequests[key].data.data : cachedRequests[key].data);\n    }\n\n    const data = await this.makeRequest(endpoint,false,config);\n\n    cachedRequests[key] = {\n      data,\n      timestamp\n    };\n    this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n    return (data && return_data ? data.data : data);\n  }\n  getTransactionError = error => {\n    let output = 'error';\n    if (parseInt(error.code)){\n      const errorCode = parseInt(error.code);\n      switch (errorCode){\n        case 4001:\n          output = 'denied';\n        break;\n        default:\n          output = `error_${errorCode}`;\n        break;\n      }\n    } else if (error.message){\n      output = error.message.split(\"\\n\")[0]; // Take just the first line of the error\n    }\n\n    return output;\n  }\n  getGlobalConfigs = () => {\n    return globalConfigs;\n  }\n  getArrayPath = (path,array) => {\n    path = Object.assign([],path);\n    if (path.length>0){\n      const prop = path.shift();\n      if (!path.length){\n        return array[prop] ? array[prop] : null;\n      } else if (array[prop]) {\n        return this.getArrayPath(path,array[prop]);\n      }\n    }\n    return null;\n  }\n  getGlobalConfig = (path,configs=false) => {\n    configs = configs ? configs : globalConfigs;\n    if (path.length>0){\n      const prop = path.shift();\n      if (!path.length){\n        return configs[prop] ? configs[prop] : null;\n      } else if (configs[prop]) {\n        return this.getGlobalConfig(path,configs[prop]);\n      }\n    }\n    return null;\n  }\n  checkUrlOrigin = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n  }\n  checkUrlBeta = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.betaURL.toLowerCase());\n  }\n  sendGoogleAnalyticsEvent = async (eventData,callback=null) => {\n\n    const googleEventsInfo = globalConfigs.analytics.google.events;\n    const debugEnabled = googleEventsInfo.debugEnabled;\n    const originOk = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n\n    if (googleEventsInfo.enabled && window.ga && ( debugEnabled || originOk)){\n\n      // Check if testnet postfix required\n      if (googleEventsInfo.addPostfixForTestnet){\n        // Postfix network name if not mainnet\n        if (globalConfigs.network.requiredNetwork !== 1){\n          const currentNetwork = globalConfigs.network.availableNetworks[globalConfigs.network.requiredNetwork];\n          eventData.eventCategory += `_${currentNetwork}`;\n        // Postfix test for debug\n        } else if (debugEnabled && !originOk) {\n          eventData.eventCategory += '_test';\n        }\n      }\n\n      await (new Promise( async (resolve, reject) => {\n        eventData.hitCallback = () => {\n          resolve(true);\n        };\n        eventData.hitCallbackFail = () => {\n          reject();\n        };\n\n        window.ga('send', 'event', eventData);\n      }));\n\n      if (typeof callback === 'function'){\n        callback();\n      }\n    }\n\n    if (typeof callback === 'function'){\n      callback();\n    }\n\n    return false;\n  }\n  createContract = async (name, address, abi) => {\n    try {\n      const contract = new this.props.web3.eth.Contract(abi, address);\n      return {name, contract};\n    } catch (error) {\n      this.customLogError(\"Could not create contract.\",name,address,error);\n    }\n    return null;\n  }\n  getWalletProvider = (defaultProvider=null) => {\n    return this.getStoredItem('walletProvider',false,defaultProvider);\n  }\n  simpleIDPassUserInfo = (userInfo,simpleID) => {\n    if (!userInfo.address && this.props.account){\n      userInfo.address = this.props.account;\n    }\n    if (!userInfo.provider){\n      userInfo.provider = this.getWalletProvider();\n    }\n    if (typeof userInfo.email !== 'undefined' && !userInfo.email){\n      delete userInfo.email;\n    }\n    if (!userInfo.address){\n      return false;\n    }\n    simpleID = simpleID ? simpleID : (this.props.simpleID ? this.props.simpleID : (typeof this.props.initSimpleID === 'function' ? this.props.initSimpleID() : null));\n    if (simpleID){\n      return simpleID.passUserInfo(userInfo);\n    }\n    return false;\n  }\n  getEtherscanTransactionUrl = (tx_address) => {\n    return tx_address ? 'https://etherscan.io/tx/'+tx_address : null;\n  }\n  getEtherscanAddressUrl = (address) => {\n    return address ? 'https://etherscan.io/address/'+address : null;\n  }\n  formatMoney = (amount, decimalCount = 2, decimal = \".\", thousands = \",\") => {\n    try {\n      decimalCount = Math.abs(decimalCount);\n      decimalCount = isNaN(decimalCount) ? 2 : decimalCount;\n\n      const negativeSign = amount < 0 ? \"-\" : \"\";\n\n      let i = parseInt(amount = Math.abs(Number(amount) || 0).toFixed(decimalCount)).toString();\n      let j = (i.length > 3) ? i.length % 3 : 0;\n\n      return negativeSign + (j ? i.substr(0, j) + thousands : '') + i.substr(j).replace(/(\\d{3})(?=\\d)/g, \"$1\" + thousands) + (decimalCount ? decimal + Math.abs(amount - i).toFixed(decimalCount).slice(2) : \"\");\n    } catch (e) {\n      return null;\n    }\n  }\n  getSnapshotProposals = async (activeOnly=false) => {\n\n    const cachedDataKey = `snapshotProposals_${activeOnly}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const whitelist = this.getGlobalConfig(['network','providers','snapshot','whitelist']).map( addr => addr.toLowerCase() );\n    const endpoint = this.getGlobalConfig(['network','providers','snapshot','endpoints','proposals']);\n    let proposals = await this.makeCachedRequest(endpoint,1440,true);\n\n    if (proposals){\n      proposals = Object.values(proposals);\n\n      const currTime = parseInt(Date.now()/1000);\n      if (activeOnly){\n        proposals =  proposals.filter( p => (p.msg.payload.start<=currTime && p.msg.payload.end>currTime) );\n      }\n\n      // console.log(proposals);\n\n      const validProposals = [];\n      await this.asyncForEach(proposals, async (p) => {\n        // Add proposal if ended\n        if (p.msg.payload.end<=currTime || whitelist.includes(p.address.toLowerCase())){\n          validProposals.push(p);\n        } else {\n          const blockNumber = p.msg.payload.snapshot;\n\n          let checkedStrategies = false;\n          await this.asyncForEach( p.msg.payload.metadata.strategies, async (s) => {\n            if (checkedStrategies){\n              return;\n            }\n            if (s.name==='erc20-balance-of'){\n              const tokenName = s.params.symbol;\n              const tokenContract = this.getContractByName(tokenName);\n              if (tokenContract){\n                const tokenBalance = await this.getTokenBalance(tokenName,p.address,true,blockNumber);\n                // console.log(p.relayerIpfsHash,s.name,tokenBalance ? tokenBalance.toFixed() : null);\n                if (tokenBalance && this.BNify(tokenBalance).gt(100)){\n                  checkedStrategies = true;\n                }\n              }\n            } else {\n              // checkedStrategies = true;\n            }\n\n            // console.log(p.relayerIpfsHash,s.name,checkedStrategies);\n          });\n\n          // Add proposal is passed token balances check\n          if (checkedStrategies){\n            validProposals.push(p);\n          }\n        }\n      });\n\n      return this.setCachedData(cachedDataKey,validProposals);\n    }\n\n  }\n  getTokenApiData = async (address,isRisk=null,startTimestamp=null,endTimestamp=null,forceStartTimestamp=false,frequency=null,order=null,limit=null) => {\n    if (globalConfigs.network.requiredNetwork!==1 || !globalConfigs.stats.enabled){\n      return [];\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenApiData_${address}_${isRisk}_${frequency}_${order}_${limit}`;\n    let cachedData = this.getCachedData(cachedDataKey);\n\n    if (cachedData){\n      // Check for fittable start and end time\n      const filteredCachedData = cachedData.filter( c => ( (c.startTimestamp===null || (startTimestamp && c.startTimestamp<=startTimestamp)) && (c.endTimestamp===null || (endTimestamp && c.endTimestamp>=endTimestamp)) ) )\n\n      if (filteredCachedData && filteredCachedData.length>0){\n        const filteredData = filteredCachedData.pop().data;\n        if (filteredData){\n          return filteredData.filter( d => ((!startTimestamp || d.timestamp>=startTimestamp) && (!endTimestamp || d.timestamp<=endTimestamp)) );\n        }\n        return null;\n      }\n    // Initialize cachedData\n    } else {\n      cachedData = [];\n    }\n\n    const apiInfo = globalConfigs.stats.rates;\n    let endpoint = `${apiInfo.endpoint}${address}`;\n\n    if (startTimestamp || endTimestamp || isRisk !== null || frequency !== null){\n      const params = [];\n\n      if (startTimestamp && parseInt(startTimestamp)){\n        if (forceStartTimestamp){\n          params.push(`start=${startTimestamp}`);\n        } else {\n          const start = startTimestamp-(60*60*24*2); // Minus 1 day for Volume graph\n          params.push(`start=${start}`);\n        }\n      }\n\n      if (endTimestamp && parseInt(endTimestamp)){\n        params.push(`end=${endTimestamp}`);\n      }\n\n      if (isRisk !== null){\n        params.push(`isRisk=${isRisk}`);\n      }\n\n      if (frequency !== null && parseInt(frequency)){\n        params.push(`frequency=${frequency}`);\n      }\n\n      if (order !== null){\n        params.push(`order=${order}`);\n      }\n\n      if (limit !== null && parseInt(limit)){\n        params.push(`limit=${limit}`);\n      }\n\n      if (params.length){\n        endpoint += '?'+params.join('&');\n      }\n    }\n\n    const config = this.getGlobalConfig(['stats','config']);\n    let output = await this.makeRequest(endpoint,false,config);\n    if (!output){\n      return [];\n    }\n\n    const data = output.data;\n\n    let filteredData = null;\n    if (isRisk !== null){\n      filteredData = data.filter( d => ( d.isRisk === isRisk ) );\n    }\n\n    cachedData.push({\n      isRisk,\n      endTimestamp,\n      startTimestamp,\n      data:filteredData,\n    });\n\n    this.setCachedData(cachedDataKey,cachedData);\n\n    return data;\n  }\n  getTokenDecimals = async (contractName) => {\n    contractName = contractName ? contractName : this.props.selectedToken;\n    return await this.genericContractCall(contractName,'decimals');\n  }\n  getAvgApr = (aprs,allocations,totalAllocation) => {\n    if (aprs && allocations && totalAllocation){\n      let avgApr = Object.keys(aprs).reduce((aprWeighted,protocolAddr) => {\n        const allocation = this.BNify(allocations[protocolAddr]);\n        const apr = this.BNify(aprs[protocolAddr]);\n        return this.BNify(aprWeighted).plus(allocation.times(apr));\n      },0);\n\n      if (avgApr){\n        return this.BNify(avgApr).div(totalAllocation);\n      }\n    }\n    return null;\n  }\n  getFrequencySeconds = (frequency,quantity=1) => {\n    const frequency_seconds = {\n      hour:3600,\n      day:86400,\n      week:604800\n    };\n    return frequency_seconds[frequency]*quantity;\n  }\n  getProtocolInfoByAddress = (addr) => {\n    return this.props.tokenConfig.protocols.find(c => c.address.toLowerCase() === addr.toLowerCase());\n  }\n  integerValue = value => {\n    return this.BNify(value).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  normalizeTokenDecimals = tokenDecimals => {\n    return this.BNify(`1e${tokenDecimals}`);\n  }\n  normalizeTokenAmount = (tokenBalance,tokenDecimals,round=true) => {\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    return this.BNify(tokenBalance).times(normalizedTokenDecimals).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  fixTokenDecimals = (tokenBalance,tokenDecimals,exchangeRate=null) => {\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    let balance = this.BNify(tokenBalance).div(normalizedTokenDecimals);\n    if (exchangeRate && !exchangeRate.isNaN()){\n      balance = balance.times(exchangeRate);\n    }\n    return balance;\n  }\n  checkContractPaused = async (contractName=null) => {\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const contractPaused = await this.genericContractCall(contractName, 'paused', [], {}).catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n    // this.customLog('checkContractPaused',this.props.tokenConfig.idle.token,contractPaused);\n    return contractPaused;\n  }\n  getStoredItem = (key,parse_json=true,return_default=null) => {\n    let output = return_default;\n    if (window.localStorage){\n      const item = localStorage.getItem(key);\n      if (item){\n        output = item;\n        if (parse_json){\n          output = JSON.parse(item);\n        }\n      }\n    }\n    if (!output){\n      return return_default;\n    }\n    return output;\n  }\n  clearStoredData = (excludeKeys=[]) => {\n    if (window.localStorage){\n\n      if (!excludeKeys || !excludeKeys.length){\n        return window.localStorage.clear();\n      }\n\n      const storedKeysToRemove = [];\n      for (let i=0;i<window.localStorage.length;i++){\n        const storedKey = window.localStorage.key(i);\n        if (!excludeKeys.includes(storedKey)){\n          storedKeysToRemove.push(storedKey);\n        }\n      }\n      storedKeysToRemove.forEach((storedKey) => {\n        this.removeStoredItem(storedKey)\n      });\n    }\n  }\n  removeStoredItem = (key) => {\n    if (window.localStorage){\n      window.localStorage.removeItem(key);\n      return true;\n    }\n    return false;\n  }\n  setLocalStorage = (key,value,stringify=false) => {\n    if (window.localStorage){\n      try {\n        value = stringify ? JSON.stringify(value) : value;\n        window.localStorage.setItem(key,value);\n        return true;\n      } catch (error) {\n        // this.customLog('setLocalStorage',error);\n        window.localStorage.removeItem(key);\n      }\n    }\n    return false;\n  }\n  checkRebalance = async (tokenConfig) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!tokenConfig){\n      return false;\n    }\n\n    const lastAllocationsPromises = [];\n    const allocations = await this.genericContractCall(tokenConfig.idle.token, 'getAllocations');\n\n    for (let protocolIndex=0;protocolIndex<allocations.length;protocolIndex++){\n      const lastAllocationsPromise = new Promise( async (resolve, reject) => {\n        try{\n          const lastAllocations = await this.genericContractCall(tokenConfig.idle.token, 'lastAllocations',[protocolIndex]);\n          resolve(lastAllocations);\n        } catch (error){\n          console.log(error);\n          resolve(null);\n        }\n      });\n      lastAllocationsPromises.push(lastAllocationsPromise);\n    }\n\n    const newAllocations = await Promise.all(lastAllocationsPromises);\n\n    if (!allocations || !newAllocations){\n      return true;\n    }\n\n    const diff = allocations.filter( (alloc,index) => alloc !== newAllocations[index] );\n\n    return diff.length>0;\n  }\n  checkMigration = async (tokenConfig,account) => {\n\n    if (!tokenConfig || !account){\n      return false;\n    }\n\n    let migrationEnabled = false;\n    let oldContractBalance = null;\n    let oldContractTokenDecimals = null;\n    // let migrationContractApproved = false;\n    let oldContractBalanceFormatted = null;\n\n    // Check migration contract enabled and balance\n    if (tokenConfig.migration && tokenConfig.migration.enabled){\n      const oldContractName = tokenConfig.migration.oldContract.name;\n      const oldContract = this.getContractByName(oldContractName);\n      const migrationContract = this.getContractByName(tokenConfig.migration.migrationContract.name);\n\n      // this.customLog(oldContractName,tokenConfig.migration.migrationContract.name);\n\n      if (oldContract && migrationContract){\n        // Get old contract token decimals\n        oldContractTokenDecimals = await this.getTokenDecimals(oldContractName);\n\n        // this.customLog('Migration - token decimals',oldContractTokenDecimals ? oldContractTokenDecimals.toString() : null);\n\n        // Check migration contract approval\n        // migrationContractApproved = await this.checkMigrationContractApproved();\n\n        // this.customLog('Migration - approved',migrationContractApproved ? migrationContractApproved.toString() : null);\n\n        // Check old contractBalance\n        oldContractBalance = await this.getContractBalance(oldContractName,account);\n\n        if (oldContractBalance){\n          oldContractBalanceFormatted = this.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.BNify(oldContractBalance).gt(0);\n        }\n\n        // this.customLog('Migration - oldContractBalance',oldContractName,account,oldContractBalance,oldContractBalanceFormatted);\n      }\n    }\n\n    // Set migration contract balance\n    return {\n      migrationEnabled,\n      oldContractBalance,\n      oldContractTokenDecimals,\n      oldContractBalanceFormatted,\n    };\n  }\n\n  executeMetaTransaction = async (contract, userAddress, signedParameters, callback, callback_receipt) => {\n    try {\n\n      // const gasLimit = await contract.methods\n      //   .executeMetaTransaction(userAddress, ...signedParameters)\n      //   .estimateGas({ from: userAddress });\n\n      // this.customLog(gasLimit);\n\n      const gasPrice = await this.props.web3.eth.getGasPrice();\n\n      const tx = contract.methods\n        .executeMetaTransaction(userAddress, ...signedParameters)\n        .send({\n          from: userAddress,\n          gasPrice\n          // gasLimit\n        });\n\n      tx.on(\"transactionHash\", function(hash) {\n        this.customLog(`Transaction sent by relayer with hash ${hash}`);\n        callback_receipt()\n      }).once(\"confirmation\", function(confirmationNumber, receipt) {\n        this.customLog(\"Transaction confirmed on chain\",receipt);\n        callback_receipt(receipt);\n      });\n    } catch (error) {\n      this.customLog(error);\n      callback(null,error);\n    }\n  }\n\n  getSignatureParameters_v4 = signature => {\n    if (!this.props.web3.utils.isHexStrict(signature)) {\n      throw new Error(\n        'Given value \"'.concat(signature, '\" is not a valid hex string.')\n      );\n    }\n    var r = signature.slice(0, 66);\n    var s = \"0x\".concat(signature.slice(66, 130));\n    var v = \"0x\".concat(signature.slice(130, 132));\n    v = this.props.web3.utils.hexToNumber(v);\n    if (![27, 28].includes(v)) v += 27;\n    return {\n      r: r,\n      s: s,\n      v: v\n    };\n  };\n\n  constructMetaTransactionMessage = (nonce, chainId, functionSignature, contractAddress) => {\n    return ethereumjsABI.soliditySHA3(\n      [\"uint256\",\"address\",\"uint256\",\"bytes\"],\n      [nonce, contractAddress, chainId, toBuffer(functionSignature)]\n    );\n  }\n\n  checkBiconomyLimits = async (userAddress) => {\n    const biconomyInfo = this.getGlobalConfig(['network','providers','biconomy']);\n    const res = await this.makeRequest(`${biconomyInfo.endpoints.limits}?userAddress=${userAddress}&apiId=${biconomyInfo.params.apiId}`,null,{\n      headers:{\n        'x-api-key':biconomyInfo.params.apiKey\n      }\n    });\n\n    if (res && res.data){\n      return res.data;\n    }\n\n    return null;\n  }\n\n  sendTxWithPermit = async (contractName,methodName,methodParams,nonce,callback,callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    if (!contract.methods[methodName]){\n      callback(null,'Method not found');\n      return false;\n    }\n\n    const functionSignature = contract.methods[methodName](...methodParams).encodeABI();\n\n    try{\n      const userAddress = this.props.account;\n      const chainId = this.getGlobalConfig(['network','requiredNetwork']);\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, methodName, methodParams.concat([nonce, r, s, v]), callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      console.error(error);\n      callback(null,error);\n      return false;\n    }\n  }\n\n  sendBiconomyTxWithPersonalSign = async (contractName,functionSignature,callback,callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    try{\n\n      const userAddress = this.props.account;\n      const nonce = await contract.methods.getNonce(userAddress).call();\n      const chainId = this.getGlobalConfig(['network','requiredNetwork']);\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      console.error(error);\n      callback(null,error);\n      return false;\n    }\n  }\n\n  signPermitEIP2612 = async (contractAddress, erc20Name, owner, spender, value, nonce, deadline, chainId) => {\n    if (chainId === undefined) {\n      const result = await this.props.web3.eth.getChainId();\n      chainId = parseInt(result);\n    }\n\n    const domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permit = [\n      { name: \"owner\", type: \"address\" },\n      { name: \"spender\", type: \"address\" },\n      { name: \"value\", type: \"uint256\" },\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"deadline\", type: \"uint256\" },\n    ];\n\n    const domainData = {\n      version: \"2\",\n      name: erc20Name,\n      chainId: chainId,\n      verifyingContract: contractAddress\n    };\n\n    const message = {\n      owner,\n      spender,\n      value,\n      nonce,\n      deadline,\n    };\n\n    const data = JSON.stringify({\n      types: {\n        EIP712Domain: domain,\n        Permit: permit,\n      },\n      primaryType: \"Permit\",\n      domain: domainData,\n      message: message\n    });\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        jsonrpc: '2.0',\n        id: Date.now().toString().substring(9),\n        method: \"eth_signTypedData_v4\",\n        params: [owner, data],\n        from: owner\n      }, (error, res) => {\n        if (error) {\n          return reject(error);\n        }\n\n        resolve(res.result);\n      });\n    });\n  }\n\n  signPermit = async (baseContractName, holder, spenderContractName, methodName, methodParams, nonce, expiry, callback, callback_receipt, callback_permit=null) => {\n\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract){\n      callback(null,'Contract not found');\n      return false\n    }\n\n    const result = await this.props.web3.eth.net.getId();\n    let chainId = parseInt(result);\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permitConfig = this.getGlobalConfig(['permit',baseContractName]);\n\n    const Permit = permitConfig.type;\n    const EIPVersion = permitConfig.EIPVersion;\n\n    const spender = spenderContract._address;\n    const verifyingContract = baseContract._address;\n\n    const permitName = permitConfig.name || baseContractName;\n\n    const domain = {\n      chainId,\n      name: permitName,\n      verifyingContract,\n      version: permitConfig.version.toString() || '1',\n    };\n\n    let message = {};\n\n    switch (EIPVersion){\n      case 2612:\n        const owner = holder;\n        const deadline = expiry;\n        // Unlimited allowance\n        const value = this.integerValue(this.BNify(2).pow(256).minus(1));\n        message = {\n          value,\n          nonce,\n          owner,\n          spender,\n          deadline\n        };\n      break;\n      default:\n        message = {\n          holder,\n          nonce,\n          expiry,\n          spender,\n          allowed: true,\n        };\n      break;\n    }\n\n    const data = JSON.stringify({\n      domain,\n      message,\n      types: {\n        Permit,\n        EIP712Domain\n      },\n      primaryType: 'Permit',\n    });\n\n    this.props.web3.currentProvider.send({\n      from: holder,\n      jsonrpc: '2.0',\n      params: [holder, data],\n      method: 'eth_signTypedData_v4',\n      id: Date.now().toString().substring(9),\n    }, (error, response) => {\n      if (error || (response && response.error)) {\n        return callback(null,error);\n      } else if (response && response.result) {\n        if (typeof callback_permit === 'function'){\n          callback_permit();\n        }\n        const signedParameters = this.getSignatureParameters_v4(response.result);\n        const { r, s, v } = signedParameters;\n        const permitParams = [expiry, v, r, s];\n\n        const methodAbi = spenderContract._jsonInterface.find( f => f.name === methodName );\n        const useNonce = methodAbi ? methodAbi.inputs.find( i => i.name === 'nonce' ) : true;\n        if (!isNaN(parseInt(nonce)) && useNonce){\n          permitParams.unshift(nonce);\n        }\n        const params = methodParams.concat(permitParams);\n        this.contractMethodSendWrapper(spenderContractName, methodName, params, callback, callback_receipt);\n      }\n    });\n  }\n\n  sendSignedTx = async (contractName,contractAddress,functionSignature,callback,callback_receipt) => {\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const MetaTransaction = [\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"from\", type: \"address\" },\n      { name: \"functionSignature\", type: \"bytes\" }\n    ];\n\n    const chainId = await this.props.web3.eth.getChainId();\n\n    const domainData = {\n      chainId,\n      version: '1',\n      name: contractName,\n      verifyingContract: contractAddress\n    };\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false\n    }\n\n    let userAddress = this.props.account;\n    let nonce = await contract.methods.getNonce(userAddress).call();\n    let message = {};\n    message.nonce = nonce;\n    message.from = userAddress;\n    message.functionSignature = functionSignature;\n\n    const dataToSign = JSON.stringify({\n      types: {\n        EIP712Domain,\n        MetaTransaction\n      },\n      domain: domainData,\n      primaryType: \"MetaTransaction\",\n      message\n    });\n\n    // this.customLog('dataToSign',dataToSign);\n\n    this.props.web3.currentProvider.send(\n      {\n        jsonrpc: \"2.0\",\n        id: 999999999999,\n        from: userAddress,\n        method: \"eth_signTypedData_v4\",\n        params: [userAddress, dataToSign]\n      },\n      (error, response) => {\n        if (error || (response && response.error)) {\n          return callback(null,error);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          const { r, s, v } = signedParameters;\n            \n          this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n        }\n      }\n    );\n  }\n\n  checkTokenApproved = async (contractName,contractAddr,walletAddr) => {\n    const [\n      balance,\n      allowance\n    ] = await Promise.all([\n      this.getTokenBalance(contractName,walletAddr,false),\n      this.getAllowance(contractName,contractAddr,walletAddr)\n    ]);\n    this.customLog('checkTokenApproved',contractName,this.BNify(allowance).toFixed(),this.BNify(balance).toFixed(),(allowance && this.BNify(allowance).gte(this.BNify(balance))));\n    return allowance && this.BNify(allowance).gte(this.BNify(balance));\n  }\n  getAllowance = async (contractName,contractAddr,walletAddr) => {\n    if (!contractName || !contractAddr || !walletAddr){\n      return false;\n    }\n    this.customLog('getAllowance',contractName,contractAddr,walletAddr);\n    return await this.genericContractCall(\n      contractName, 'allowance', [walletAddr, contractAddr]\n    );\n  }\n  contractMethodSendWrapper = (contractName,methodName,params,callback,callback_receipt,txData) => {\n    this.props.contractMethodSendWrapper(contractName, methodName, params, null, (tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    }, null, txData);\n  }\n  disableERC20 = (contractName,address,callback,callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('0') // max uint solidity\n    ],null,(tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    });\n  }\n  enableERC20 = (contractName,address,callback,callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('-1') // max uint solidity\n    ],null,(tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    });\n  }\n  loadAssetField = async (field,token,tokenConfig,account,addGovTokens=true,addCurveApy=false) => {\n\n    let output = null;\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    // Remove gov tokens for risk adjusted strategy\n    const strategyInfo = this.getGlobalConfig(['strategies',this.props.selectedStrategy]);\n    if (addGovTokens && strategyInfo && typeof strategyInfo.addGovTokens !== 'undefined'){\n      addGovTokens = strategyInfo.addGovTokens;\n    }\n\n    // Take available tokens for gov tokens fields\n    let govTokenAvailableTokens = null;\n    if (this.props.selectedStrategy && this.props.selectedToken){\n      const newTokenConfig = this.props.availableStrategies[this.props.selectedStrategy][this.props.selectedToken];\n      if (newTokenConfig){\n        govTokenAvailableTokens = {};\n        govTokenAvailableTokens[newTokenConfig.token] = newTokenConfig;\n      }\n    } else if (!Object.keys(govTokens).includes(token)){\n      govTokenAvailableTokens = {};\n      govTokenAvailableTokens[token] = tokenConfig;\n    }\n\n    switch (field){\n      case 'amountLentCurve':\n        const [\n          curveAvgSlippage,\n          curveAvgBuyPrice,\n          curveTokenBalance,\n        ] = await Promise.all([\n          this.getCurveAvgSlippage(),\n          this.getCurveAvgBuyPrice([],account),\n          this.getCurveTokenBalance(account,true),\n        ]);\n\n        if (curveAvgBuyPrice && curveTokenBalance){\n          output = this.BNify(curveTokenBalance).times(curveAvgBuyPrice);\n          if (curveAvgSlippage){\n            output = output.minus(output.times(curveAvgSlippage));\n          }\n          // this.customLog('amountLentCurve',curveTokenBalance.toFixed(6),curveAvgBuyPrice.toFixed(6),curveAvgSlippage.toString(),output.toFixed(6));\n        }\n      break;\n      case 'earningsPercCurve':\n        let [amountLentCurve1,redeemableBalanceCurve] = await Promise.all([\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account)\n        ]);\n\n        if (amountLentCurve1 && redeemableBalanceCurve && amountLentCurve1.gt(0) && redeemableBalanceCurve.gt(0)){\n          output = redeemableBalanceCurve.div(amountLentCurve1).minus(1).times(100);\n          // this.customLog('earningsPercCurve',redeemableBalanceCurve.toFixed(6),amountLentCurve1.toFixed(6),output.toFixed(6));\n        }\n      break;\n      case 'curveApy':\n        output = await this.getCurveAPY();\n      break;\n      case 'curveAvgSlippage':\n        output = await this.getCurveAvgSlippage();\n      break;\n      case 'redeemableBalanceCurve':\n        output = await this.getCurveRedeemableIdleTokens(account);\n        // this.customLog('earningsPercCurve',output.toFixed(6));\n      break;\n      case 'redeemableBalanceCounterCurve':\n        let [\n          curveApy,\n          amountLentCurve,\n          redeemableBalanceCurveStart\n        ] = await Promise.all([\n          this.loadAssetField('curveApy',token,tokenConfig,account),\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account),\n        ]);\n\n        let redeemableBalanceCurveEnd = null;\n\n        if (redeemableBalanceCurveStart && curveApy && amountLentCurve){\n          const earningPerYear = amountLentCurve.times(curveApy.div(100));\n          redeemableBalanceCurveEnd = redeemableBalanceCurveStart.plus(earningPerYear);\n          // this.customLog('redeemableBalanceCounterCurve',amountLentCurve.toFixed(6),redeemableBalanceCurveStart.toFixed(6),redeemableBalanceCurveEnd.toFixed(6));\n        }\n\n        output = {\n          redeemableBalanceCurveEnd,\n          redeemableBalanceCurveStart\n        };\n      break;\n      case 'earningsPerc':\n        let [amountLent1,redeemableBalance1] = await Promise.all([\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false)\n        ]);\n\n        if (amountLent1 && redeemableBalance1 && amountLent1.gt(0)){\n          output = redeemableBalance1.div(amountLent1).minus(1).times(100);\n        }\n      break;\n      case 'daysFirstDeposit':\n        const depositTimestamp = await this.loadAssetField('depositTimestamp',token,tokenConfig,account);\n        if (depositTimestamp){\n          const currTimestamp = parseInt(Date.now()/1000);\n          output = (currTimestamp-depositTimestamp)/86400;\n        }\n      break;\n      case 'pool':\n        if (Object.keys(govTokens).includes(token)){\n          output = await this.getGovTokenPool(token, govTokenAvailableTokens);\n        } else {\n          output = await this.getTokenPool(tokenConfig,addGovTokens);\n        }\n      break;\n      case 'userDistributionSpeed':\n        switch (token){\n          case 'COMP':\n            output = await this.getCompUserDistribution(account,govTokenAvailableTokens);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getUserDistribution(account,govTokenAvailableTokens);\n          break;\n          default:\n          break;\n        }\n        if (output && !this.BNify(output).isNaN()){\n          output = this.BNify(output).div(1e18);\n          if (output){\n            output = this.fixDistributionSpeed(output,tokenConfig.distributionFrequency);\n          }\n        }\n      break;\n      case 'idleDistribution':\n        const idleGovToken = this.getIdleGovToken();\n        const tokenName = this.getGlobalConfig(['governance','props','tokenName']);\n        const govTokenConfig = this.getGlobalConfig(['govTokens',tokenName]);\n        output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n\n        if (output){\n\n          output = this.fixTokenDecimals(output,govTokenConfig.decimals);\n\n          const blocksPerYear = this.BNify(this.getGlobalConfig(['network','blocksPerYear']));\n          switch (govTokenConfig.distributionFrequency){\n            case 'day':\n              const blocksPerDay = blocksPerYear.div(365.242199);\n              output = output.times(blocksPerDay);\n            break;\n            case 'week':\n              const blocksPerWeek = blocksPerYear.div(52.1429);\n              output = output.times(blocksPerWeek);\n            break;\n            case 'month':\n              const blocksPerMonth = blocksPerYear.div(12);\n              output = output.times(blocksPerMonth);\n            break;\n            case 'year':\n              output = output.times(blocksPerYear);\n            break;\n            default:\n            break;\n          }\n        }\n      break;\n      case 'distributionSpeed':\n        const selectedTokenConfig = govTokenAvailableTokens[this.props.selectedToken];\n        switch (token){\n          case 'COMP':\n            output = await this.getCompDistribution(selectedTokenConfig);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getSpeed(selectedTokenConfig.idle.address);\n          break;\n          default:\n          break;\n        }\n        if (output && !this.BNify(output).isNaN()){\n          output = this.BNify(output).div(1e18);\n        }\n      break;\n      case 'apr':\n        switch (token){\n          case 'COMP':\n            output = await this.getCompAvgApr(govTokenAvailableTokens);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getAvgApr(govTokenAvailableTokens);\n          break;\n          default:\n            const tokenAprs = await this.getTokenAprs(tokenConfig,false,addGovTokens);\n            if (tokenAprs && tokenAprs.avgApr !== null){\n              output = tokenAprs.avgApr;\n            }\n          break;\n        }\n      break;\n      case 'apy':\n        const tokenApys = await this.getTokenAprs(tokenConfig,false,addGovTokens);\n\n        // console.log('apr',token,tokenApys.avgApr ? tokenApys.avgApr.toString() : null,tokenApys.avgApy ? tokenApys.avgApy.toString() : null);\n\n        if (tokenApys && tokenApys.avgApy !== null){\n          output = tokenApys.avgApy;\n\n          if (addCurveApy){\n            const curveAPY = await this.getCurveAPY();\n            if (curveAPY){\n              output = output.plus(curveAPY);\n            }\n          }\n        }\n      break;\n      case 'avgAPY':\n        const [\n          tokenPrice,\n          firstDepositTx,\n          days\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getFirstDepositTx([token],account),\n          this.loadAssetField('daysFirstDeposit',token,tokenConfig,account)\n        ]);\n\n        if (tokenPrice && firstDepositTx && firstDepositTx[token]){\n          const tokenPriceFirstDeposit = await this.getIdleTokenPrice(tokenConfig,firstDepositTx[token].blockNumber);\n          output = this.BNify(tokenPrice).div(tokenPriceFirstDeposit).minus(1).times(365).div(days).times(100);\n        }\n      break;\n      case 'avgAPY_old':\n        const [\n          daysFirstDeposit,\n          earningsPerc\n        ] = await Promise.all([\n          this.loadAssetField('daysFirstDeposit',token,tokenConfig,account),\n          this.loadAssetField('earningsPerc',token,tokenConfig,account), // Take earnings perc instead of earnings\n        ]);\n\n        if (daysFirstDeposit && earningsPerc){\n          output = earningsPerc.times(365).div(daysFirstDeposit);\n        }\n      break;\n      case 'depositTimestamp':\n        const depositTimestamps = account ? await this.getDepositTimestamp([token],account) : false;\n        if (depositTimestamps && depositTimestamps[token]){\n          output = depositTimestamps[token];\n        }\n      break;\n      case 'amountLent':\n        output = account ? await this.getAmountDeposited(tokenConfig,account) : false;\n        // const amountLents = account ? await this.getAmountLent([token],account) : false;\n        // if (amountLents && amountLents[token]){\n        //   output = amountLents[token];\n        // }\n      break;\n      case 'tokenPrice':\n        if (Object.keys(govTokens).includes(token)){\n          const govTokenConfig = govTokens[token];\n          const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n          try {\n            output = await this.getUniswapConversionRate(DAITokenConfig,govTokenConfig);\n          } catch (error) {\n\n          }\n          if (!output || this.BNify(output).isNaN()){\n            output = '-';\n          }\n        } else {\n          output = await this.genericContractCall(tokenConfig.idle.token, 'tokenPrice');\n        }\n      break;\n      case 'fee':\n        output = await this.getUserTokenFees(tokenConfig,account);\n      break;\n      case 'tokenBalance':\n        if (Object.keys(govTokens).includes(token)){\n          output = await this.getTokenBalance(token,account);\n          if (!output || output.isNaN()){\n            output = '-';\n          }\n        } else {\n          let tokenBalance = account ? await this.getTokenBalance(tokenConfig.token,account) : false;\n          if (!tokenBalance || tokenBalance.isNaN()){\n            tokenBalance = '-';\n          }\n          output = tokenBalance;\n        }\n      break;\n      case 'idleTokenBalance':\n        const idleTokenBalance = account ? await this.getTokenBalance(tokenConfig.idle.token,account) : false;\n        if (idleTokenBalance){\n          output = idleTokenBalance;\n        }\n      break;\n      case 'redeemableBalanceCounter':\n        let [tokenAPY1,amountLent2,redeemableBalanceStart] = await Promise.all([\n          this.loadAssetField('apy',token,tokenConfig,account,false),\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false),\n        ]);\n\n        let redeemableBalanceEnd = null;\n\n        if (redeemableBalanceStart && tokenAPY1 && amountLent2){\n          const earningPerYear = amountLent2.times(tokenAPY1.div(100));\n          redeemableBalanceEnd = redeemableBalanceStart.plus(earningPerYear);\n        }\n\n        // this.customLog('redeemableBalanceCounter',token,parseFloat(redeemableBalanceStart),parseFloat(redeemableBalanceEnd));\n\n        output = {\n          redeemableBalanceEnd,\n          redeemableBalanceStart\n        };\n      break;\n      case 'redeemableBalance':\n        if (Object.keys(govTokens).includes(token)){\n          const govTokenConfig = govTokens[token];\n          output = await this.getGovTokenUserBalance(govTokenConfig,account,govTokenAvailableTokens);\n        } else {\n          let [\n            idleTokenPrice1,\n            idleTokenBalance2,\n            govTokensBalance\n          ] = await Promise.all([\n            this.getIdleTokenPrice(tokenConfig),\n            this.loadAssetField('idleTokenBalance',token,tokenConfig,account),\n            addGovTokens ? this.getGovTokensUserTotalBalance(account,govTokenAvailableTokens,token) : null,\n          ]);\n\n          if (idleTokenBalance2 && idleTokenPrice1){\n            const tokenBalance = idleTokenBalance2.times(idleTokenPrice1);\n            let redeemableBalance = tokenBalance;\n            if (govTokensBalance && !this.BNify(govTokensBalance).isNaN()){\n              redeemableBalance = redeemableBalance.plus(this.BNify(govTokensBalance));\n            }\n            output = redeemableBalance;\n            // console.log('redeemableBalance',token,idleTokenBalance2.toFixed(4),idleTokenPrice1.toFixed(4),tokenBalance.toFixed(4),govTokensBalance ? govTokensBalance.toFixed(4) : null,output.toFixed(4));\n          }\n        }\n      break;\n      case 'earningsCurve':\n        let [amountLentCurve2,redeemableBalanceCurve1] = await Promise.all([\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account)\n        ]);\n\n        if (!amountLentCurve2){\n          amountLentCurve2 = this.BNify(0);\n        }\n\n        if (!redeemableBalanceCurve1){\n          redeemableBalanceCurve1 = this.BNify(0);\n        }\n\n        output = redeemableBalanceCurve1.minus(amountLentCurve2);\n      break;\n      case 'earnings':\n        let [amountLent,redeemableBalance2] = await Promise.all([\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false)\n        ]);\n\n        if (!amountLent){\n          amountLent = this.BNify(0);\n        }\n        if (!redeemableBalance2){\n          redeemableBalance2 = this.BNify(0);\n        }\n\n        output = redeemableBalance2.minus(amountLent);\n\n        // console.log('earnings',token,amountLent.toFixed(5),redeemableBalance2.toFixed(5),output.toFixed(5));\n\n        if (output.lt(this.BNify(0))){\n          output = this.BNify(0);\n        }\n      break;\n      default:\n      break;\n    }\n\n    return output;\n  }\n  getIdleTokenSupply = async (idleToken,blockNumber='latest') => {\n    const cachedDataKey = `idleTokenSupply_${idleToken}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let idleTokenSupply = await this.genericContractCall(idleToken,'totalSupply',[],{},blockNumber);\n    if (idleTokenSupply){\n      idleTokenSupply = this.BNify(idleTokenSupply);\n      return this.setCachedDataWithLocalStorage(cachedDataKey,idleTokenSupply);\n    }\n\n    return null;\n  }\n  getIdleTokenPriceWithFee = async (tokenConfig,account,blockNumber='latest') => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n\n    let [\n      fee,\n      tokenPrice,\n      userAvgPrice\n    ] = await Promise.all([\n      this.genericContractCall(tokenConfig.idle.token, 'fee', [], {}, blockNumber),\n      this.genericContractCall(tokenConfig.idle.token, 'tokenPrice', [], {}, blockNumber),\n      this.genericContractCall(tokenConfig.idle.token, 'userAvgPrices', [account], {}, blockNumber)\n    ]);\n    \n    fee = this.BNify(fee);\n    tokenPrice = this.BNify(tokenPrice);\n    userAvgPrice = this.BNify(userAvgPrice);\n\n    if (!tokenPrice.isNaN() && !userAvgPrice.isNaN() && !fee.isNaN() && !this.BNify(userAvgPrice).eq(0) && this.BNify(tokenPrice).gt(this.BNify(userAvgPrice))){\n      const priceWFee = this.integerValue(this.BNify(tokenPrice).minus(parseInt(fee.div(1e5).times(tokenPrice.minus(userAvgPrice)))));\n      return priceWFee;\n    }\n\n    return tokenPrice;\n  }\n  getIdleTokenPrice = async (tokenConfig,blockNumber='latest',timestamp=false) => {\n\n    const cachedDataKey = `idleTokenPrice_${tokenConfig.idle.token}_${blockNumber}`;\n    // if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()){\n        return this.BNify(cachedData);\n      }\n    // }\n\n    let decimals = tokenConfig.decimals;\n\n    let tokenPrice = await this.genericContractCall(tokenConfig.idle.token,'tokenPrice',[],{},blockNumber);\n\n    // If price is NaN try to take it from APIs\n    if (!tokenPrice && timestamp){\n      const isRisk = this.props.selectedStrategy === 'risk';\n      const startTimestamp = parseInt(timestamp)-(60*60);\n      const endTimestamp = parseInt(timestamp)+(60*60);\n      const tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,startTimestamp,endTimestamp,true);\n\n      let beforePrice = {\n        data:null,\n        timeDiff:null\n      };\n\n      let afterPrice = {\n        data:null,\n        timeDiff:null\n      };\n\n      tokenData.forEach( d => {\n        const timeDiff = Math.abs(parseInt(d.timestamp)-parseInt(timestamp));\n        if (parseInt(d.timestamp)<parseInt(timestamp) && (!beforePrice.timeDiff || timeDiff<beforePrice.timeDiff)){\n          beforePrice.timeDiff = timeDiff;\n          beforePrice.data = d;\n        }\n\n        if (parseInt(d.timestamp)>parseInt(timestamp) && !afterPrice.timeDiff){\n          afterPrice.timeDiff = timeDiff;\n          afterPrice.data = d;\n        }\n      });\n\n      // Take before and after and calculate correct tokenPrice based from price acceleration\n      if (beforePrice.data && afterPrice.data){\n        const tokenPriceBefore = this.BNify(beforePrice.data.idlePrice);\n        const tokenPriceAfter = this.BNify(afterPrice.data.idlePrice);\n        const timeBefore = this.BNify(beforePrice.data.timestamp);\n        const timeAfter = this.BNify(afterPrice.data.timestamp);\n        const timeDiff = timeAfter.minus(timeBefore);\n        const priceDiff = tokenPriceAfter.minus(tokenPriceBefore);\n        const priceAcceleration = priceDiff.div(timeDiff);\n        const timeDiffFromBeforePrice = this.BNify(timestamp).minus(timeBefore);\n        tokenPrice = tokenPriceBefore.plus(priceAcceleration.times(timeDiffFromBeforePrice));\n      }\n    }\n\n    // Fix token price decimals\n    if (tokenPrice && !this.BNify(tokenPrice).isNaN()){\n      tokenPrice = this.fixTokenDecimals(tokenPrice,decimals);\n    }\n\n    // If price is NaN then return 1\n    if (!tokenPrice || this.BNify(tokenPrice).isNaN() || this.BNify(tokenPrice).lt(1)){\n      tokenPrice = this.BNify(1);\n    }\n\n    // if (blockNumber !== 'latest'){\n      this.setCachedDataWithLocalStorage(cachedDataKey,tokenPrice);\n    // }\n\n    // this.customLog('getIdleTokenPrice',tokenPrice.toString());\n\n    return tokenPrice;\n  }\n  clearCachedData = () => {\n    if (this.props.clearCachedData && typeof this.props.clearCachedData === 'function'){\n      // this.customLog('clearCachedData',this.props.clearCachedData,typeof this.props.clearCachedData === 'function');\n      this.props.clearCachedData();\n    } else {\n      // this.customLog('clearCachedData - Function not found!');\n    }\n    return false;\n  }\n  /*\n  Cache data locally for 5 minutes\n  */\n  setCachedData = (key,data,TTL=180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function'){\n      this.props.setCachedData(key,data,TTL);\n    }\n    return data;\n  }\n  setCachedDataWithLocalStorage = (key,data,TTL=180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function'){\n      this.props.setCachedData(key,data,TTL,true);\n    }\n    return data;\n  }\n  getCachedDataWithLocalStorage = (key,defaultValue=null) => {\n    return this.getCachedData(key,defaultValue,true);\n  }\n  getCachedData = (key,defaultValue=null,useLocalStorage=false) => {\n    let cachedData = null;\n    key = key.toLowerCase();\n    // Get cache from current session\n    if (this.props.cachedData && this.props.cachedData[key]){\n      cachedData = this.props.cachedData[key];\n    // Get cache from local storage\n    } else if (useLocalStorage) {\n      cachedData = this.getStoredItem('cachedData');\n      if (cachedData && cachedData[key]){\n        cachedData = cachedData[key];\n      } else {\n        cachedData = null;\n      }\n    }\n\n    if (cachedData && cachedData.data && (!cachedData.expirationDate || cachedData.expirationDate>=parseInt(Date.now()/1000))){\n      return cachedData.data;\n    }\n    return defaultValue;\n  }\n  getUserPoolShare = async (walletAddr,tokenConfig) => {\n    const [\n      idleTokensBalance,\n      idleTokensTotalSupply\n    ] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token,walletAddr,false),\n      this.genericContractCall(tokenConfig.idle.token,'totalSupply')\n    ]);\n\n    let userShare = this.BNify(0);\n    if (idleTokensBalance && idleTokensTotalSupply){\n      userShare = this.BNify(idleTokensBalance).div(this.BNify(idleTokensTotalSupply));\n    }\n\n    return userShare;\n  }\n  openWindow = (url) => {\n    return window.open(url,'_blank','noopener');\n  }\n  getActiveCoverages = async (account=null) => {\n    const activeCoverages = [];\n    account = account || this.props.account;\n\n    if (!account){\n      return activeCoverages;\n    }\n\n    const currTimestamp = parseInt(Date.now()/1000);\n    const coverProtocolConfig = this.getGlobalConfig(['tools','coverProtocol']);\n    if (coverProtocolConfig.enabled){\n      await this.asyncForEach(coverProtocolConfig.props.coverages, async (coverage) => {\n        const token = 'Claim';\n        const coverageTokens = coverage.tokens;\n        const tokenConfig = coverageTokens[token];\n        // Initialize coverage contract\n        await this.props.initContract(tokenConfig.name,tokenConfig.address,tokenConfig.abi);\n        // Take balance\n        const balance = await this.getTokenBalance(tokenConfig.name,account);\n        if (balance && balance.gt(0)){\n          const collateral = coverage.collateral;\n          const protocolName = coverProtocolConfig.label;\n          const protocolImage = coverProtocolConfig.image;\n          const fileClaimUrl = coverProtocolConfig.fileClaimUrl;\n          const status = coverage.expirationTimestamp<=currTimestamp ? 'Expired' : 'Active';\n          const expirationDate = moment(coverage.expirationTimestamp*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n          activeCoverages.push({\n            token,\n            status,\n            balance,\n            collateral,\n            protocolName,\n            fileClaimUrl,\n            protocolImage,\n            expirationDate\n          });\n        }\n      });\n    }\n\n    return activeCoverages;\n  }\n  getBatchedDepositExecutions = async (contractAddress) => {\n    const requiredNetwork = this.getGlobalConfig(['network','requiredNetwork']);\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]){\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n      const etherscanEndpoint = `${etherscanApiUrl}?&apikey=${env.REACT_APP_ETHERSCAN_KEY}&module=account&action=tokentx&address=${contractAddress}&sort=desc`;\n      const transactions = await this.makeCachedRequest(etherscanEndpoint,1800,true);\n      if (transactions && typeof transactions.result === 'object'){\n        return transactions.result.filter( tx => tx.from === '0x0000000000000000000000000000000000000000' && tx.to.toLowerCase() === contractAddress.toLowerCase() );\n      }\n    }\n    return null;\n  }\n  getBatchedDeposits = async (account=null,filter_by_status=null) => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n\n    const batchDepositConfig = this.getGlobalConfig(['tools','batchDeposit']);\n    if (!batchDepositConfig.enabled){\n      return null;\n    }\n\n    const cachedDataKey = `batchedDeposits_${account}_${filter_by_status}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const batchedDeposits = {};\n    const availableTokens = batchDepositConfig.props.availableTokens;\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const migrationContract = tokenConfig.migrationContract;\n      await this.props.initContract(migrationContract.name,migrationContract.address,migrationContract.abi);\n      const currBatchIndex = await this.genericContractCall(migrationContract.name,'currBatch');\n      for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex) ; batchIndex++){\n        let [\n          batchExecutions,\n          batchTotal,\n          batchRedeem,\n          batchDeposit\n        ] = await Promise.all([\n          this.getBatchedDepositExecutions(migrationContract.address),\n          this.genericContractCall(migrationContract.name,'batchTotals',[batchIndex]),\n          this.genericContractCall(migrationContract.name,'batchRedeemedTotals',[batchIndex]),\n          this.genericContractCall(migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n        let batchTotals = null;\n        let batchRedeems = null;\n        let batchDeposits = null;\n        if (batchTotal && batchTotal !== null){\n          batchTotals = this.fixTokenDecimals(batchTotal,tokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchRedeem = this.fixTokenDecimals(batchRedeem,18);\n          batchDeposit = this.fixTokenDecimals(batchDeposit,tokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n            batchDeposits = batchDeposit;\n\n            // Calculate redeemable idleTokens\n            batchRedeems = batchDeposit.times(batchRedeem).div(batchTotals);\n            if (batchRedeems.gt(batchRedeem)){\n              batchRedeems = batchRedeem;\n            }\n\n            const status = batchIndex < currBatchIndex && batchRedeems.gt(0) ? 'executed' : 'pending';\n\n            if (filter_by_status !== null && filter_by_status.toLowerCase() !== status){\n              return;\n            }\n\n            const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n\n            batchedDeposits[token] = {\n              status,\n              batchTotals,\n              batchRedeems,\n              batchDeposits,\n              lastExecution\n            };\n          }\n        }\n      }\n    });\n\n    return this.setCachedData(cachedDataKey,batchedDeposits);\n  }\n  getETHBalance = async (walletAddr,fixDecimals=true,blockNumber='latest') => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `ethBalance_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()){\n        return this.BNify(cachedData);\n      }\n    }\n\n    let tokenBalance = await this.props.web3.eth.getBalance(walletAddr);\n\n    if (tokenBalance){\n      if (fixDecimals){\n        tokenBalance = this.fixTokenDecimals(tokenBalance,18);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()){\n        if (blockNumber !== 'latest'){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,tokenBalance);\n        } else {\n          return tokenBalance;\n        }\n      }\n    }\n    return null;\n  }\n  getTokenBalance = async (contractName,walletAddr,fixDecimals=true,blockNumber='latest') => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenBalance_${contractName}_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()){\n        return this.BNify(cachedData);\n      }\n    }\n\n    let [\n      tokenDecimals,\n      tokenBalance\n    ] = await Promise.all([\n      this.getTokenDecimals(contractName),\n      this.getContractBalance(contractName,walletAddr,blockNumber)\n    ]);\n\n    if (tokenBalance){\n      if (fixDecimals){\n        tokenBalance = this.fixTokenDecimals(tokenBalance,tokenDecimals);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()){\n        if (blockNumber !== 'latest'){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,tokenBalance);\n        } else {\n          return tokenBalance;\n        }\n      }\n    } else {\n      this.customLogError('Error on getting balance for ',contractName);\n    }\n    return null;\n  }\n  copyToClipboard = (copyText) => {\n    if (typeof copyText.select === 'function'){\n      copyText.select();\n      copyText.setSelectionRange(0, 99999); // Select\n      const res = document.execCommand(\"copy\");\n      copyText.setSelectionRange(0, 0); // Deselect\n      return res;\n    }\n    return false;\n  }\n  loadScript = (url,props,callback) => {\n    const script = document.createElement(\"script\");\n    script.src = url;\n\n    // Append props\n    if (props){\n      Object.keys(props).forEach((attr,i) => {\n        script[attr] = props[attr];\n      });\n    }\n\n    if (typeof callback === 'function'){\n      if (script.readyState) {  // only required for IE <9\n        script.onreadystatechange = function() {\n          if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n            script.onreadystatechange = null;\n            callback();\n          }\n        };\n      } else {  //Others\n        script.onload = callback;\n      }\n    }\n\n    if (!script.id || !document.getElementById(script.id)){\n      document.body.appendChild(script);\n    }\n  }\n  isValidJSON = str => {\n    try {\n      JSON.parse(str);\n    } catch (e) {\n      return false;\n    }\n    return true;\n  }\n  checkAddress = (address) => {\n    return address ? address.match(/^0x[a-fA-F0-9]{40}$/) !== null : false;\n  }\n  getContractBalance = async (contractName,address,blockNumber='latest') => {\n    address = address ? address : this.props.tokenConfig.idle.address;\n    return await this.genericContractCall(contractName, 'balanceOf', [address], {}, blockNumber);\n  }\n  getProtocolBalance = async (contractName,address) => {\n    address = address ? address : this.props.tokenConfig.idle.address;\n    return await this.genericContractCall(contractName, 'balanceOf', [address]);\n  }\n  getAprs = async (contractName) => {\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    return await this.genericContractCall(contractName, 'getAPRs');\n  }\n  genericIdleCall = async (methodName, params = [], callParams = {}) => {\n    return await this.genericContractCall(this.props.tokenConfig.idle.token, methodName, params, callParams).catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n  }\n  estimateGas = async (contractName, methodName, params = [], callParams = {}) => {\n    let contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.methods[methodName](...params).estimateGas(callParams);\n  }\n  getTxDecodedLogs = async (tx,logAddr,decodeLogs,storedTx) => {\n\n    let txReceipt = storedTx && storedTx.txReceipt ? storedTx.txReceipt : null;\n\n    if (!txReceipt){\n      txReceipt = await (new Promise( async (resolve, reject) => {\n        this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n          if (err){\n            reject(err);\n          }\n          resolve(tx);\n        });\n      }));\n\n    }\n\n    if (!txReceipt){\n      return null;\n    }\n\n    const internalTransfers = txReceipt.logs.filter((tx) => { return tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${logAddr}`; });\n\n    if (!internalTransfers.length){\n      return null;\n    }\n\n    try {\n      return [\n        txReceipt,\n        this.props.web3.eth.abi.decodeLog(decodeLogs,internalTransfers[0].data,internalTransfers[0].topics)\n      ];\n    } catch (error) {\n      return null;\n    }\n  }\n  blocksToSeconds = (blocks) => {\n    const blocksPerSeconds = this.BNify(this.getGlobalConfig(['network','blocksPerYear'])).div(365.2422).div(86400);\n    return this.BNify(blocks).div(blocksPerSeconds);\n  }\n  getBlockNumber = async () => {\n    return await this.props.web3.eth.getBlockNumber();\n  }\n  getContractPastEvents = async (contractName,methodName,params = {}) => {\n    if (!contractName){\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.getPastEvents(methodName, params);\n  }\n  genericContractCall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest') => {\n\n    if (!contractName){\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLog('Wrong contract name', contractName);\n      return null;\n    }\n\n    if (!contract.methods[methodName]) {\n      this.customLog('Wrong method name', methodName);\n      return null;\n    }\n\n    blockNumber = blockNumber !== 'latest' && blockNumber && !isNaN(blockNumber) ? parseInt(blockNumber) : blockNumber;\n\n    try{\n      this.customLog(`genericContractCall - ${contractName} - ${methodName}`);\n      const value = await contract.methods[methodName](...params).call(callParams,blockNumber).catch(error => {\n        this.customLog(`${contractName} contract method ${methodName} error: `, error);\n      });\n      this.customLog(`genericContractCall - ${contractName} - ${methodName} : ${value}`);\n      return value;\n    } catch (error) {\n      this.customLog(\"genericContractCall error\", error);\n    }\n  }\n  asyncForEach = async (array, callback, async=true) => {\n    if (async){\n      await Promise.all(array.map( (c,index) => {\n        return callback(c, index, array);\n      }));\n    } else {\n      for (let index = 0; index < array.length; index++) {\n        await callback(array[index], index, array);\n      }\n    }\n  }\n  apr2apy = (apr) => {\n    return (this.BNify(1).plus(this.BNify(apr).div(12))).pow(12).minus(1);\n  }\n  getUnlentBalance = async (tokenConfig) => {\n    let unlentBalance = await this.getProtocolBalance(tokenConfig.token,tokenConfig.idle.address);\n    if (unlentBalance){\n      unlentBalance = this.fixTokenDecimals(unlentBalance,tokenConfig.decimals);\n    }\n    return unlentBalance;\n  }\n  getTokenPool = async (tokenConfig,addGovTokens=true) => {\n    // Check for cached data\n    const cachedDataKey = `tokenPool_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN() ) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,addGovTokens);\n    if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent){\n      const tokenPool = tokenAllocation.totalAllocationWithUnlent;\n      if (!this.BNify(tokenPool).isNaN()){\n        return this.setCachedDataWithLocalStorage(cachedDataKey,tokenPool);\n      }\n    }\n\n    return null;\n  }\n  /*\n  Get idleToken allocation between protocols\n  */\n  getTokenAllocation = async (tokenConfig,protocolsAprs=false,addGovTokens=true) => {\n\n    if (!tokenConfig.idle){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAllocation_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    let totalAllocation = this.BNify(0);\n\n    const tokenAllocation = {\n      avgApr: null,\n      unlentBalance:null,\n      totalAllocation:null,\n      protocolsBalances:{},\n      protocolsAllocations:null,\n      protocolsAllocationsPerc:null,\n      totalAllocationConverted:null,\n      totalAllocationWithUnlent:null,\n      totalAllocationWithUnlentConverted:null,\n    };\n\n    const exchangeRates = {};\n    const protocolsBalances = {};\n    const protocolsAllocations = {};\n    const protocolsAllocationsPerc = {};\n\n    await this.asyncForEach(tokenConfig.protocols,async (protocolInfo,i) => {\n      const contractName = protocolInfo.token;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n\n      let [\n        tokenDecimals,\n        protocolBalance,\n        exchangeRate\n      ] = await Promise.all([\n        this.getTokenDecimals(contractName),\n        this.getProtocolBalance(contractName,tokenConfig.idle.address),\n        ( protocolInfo.functions.exchangeRate ? this.genericContractCall(contractName,protocolInfo.functions.exchangeRate.name,protocolInfo.functions.exchangeRate.params) : null )\n      ]);\n\n      if (!protocolBalance){\n        return;\n      }\n\n      if (exchangeRate && protocolInfo.decimals){\n        exchangeRates[protocolAddr] = exchangeRate;\n        exchangeRate = this.fixTokenDecimals(exchangeRate,protocolInfo.decimals);\n      }\n\n      let protocolAllocation = this.fixTokenDecimals(protocolBalance,tokenDecimals,exchangeRate);\n\n      if (protocolAllocation.lt(this.BNify(0.00000001))){\n        protocolBalance = this.BNify(0);\n        protocolAllocation = this.BNify(0);\n      }\n\n      protocolsBalances[protocolAddr] = protocolBalance;\n      protocolsAllocations[protocolAddr] = protocolAllocation;\n      totalAllocation = totalAllocation.plus(protocolAllocation);\n\n      // console.log('getTokenAllocation',contractName,protocolAddr,protocolAllocation.toFixed(5),exchangeRate ? exchangeRate.toFixed(5) : null,totalAllocation.toFixed(5));\n    });\n\n    tokenAllocation.unlentBalance = this.BNify(0);\n    tokenAllocation.totalAllocationWithUnlent = this.BNify(totalAllocation);\n\n    // Add unlent balance to the pool\n    let unlentBalance = await this.getUnlentBalance(tokenConfig);\n    if (unlentBalance){\n      tokenAllocation.unlentBalance = unlentBalance;\n      tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(unlentBalance);\n    }\n\n    // console.log('totalAllocationWithUnlent 1',addGovTokens,tokenAllocation.totalAllocationWithUnlent.toFixed(5));\n\n    Object.keys(protocolsAllocations).forEach((protocolAddr,i) => {\n      const protocolAllocation = protocolsAllocations[protocolAddr];\n      const protocolAllocationPerc = protocolAllocation.div(totalAllocation);\n      protocolsAllocationsPerc[protocolAddr] = protocolAllocationPerc;\n    });\n\n    tokenAllocation.totalAllocation = totalAllocation;\n    tokenAllocation.protocolsAllocations = protocolsAllocations;\n    tokenAllocation.protocolsAllocationsPerc = protocolsAllocationsPerc;\n\n    if (addGovTokens){\n      const govTokensBalances = await this.getGovTokensBalances(tokenConfig.idle.address);\n\n      // Sum gov tokens balances\n      if (govTokensBalances.total){\n        const tokenUsdConversionRate = await this.getTokenConversionRate(tokenConfig,false);\n        if (tokenUsdConversionRate){\n          govTokensBalances.total = govTokensBalances.total.div(tokenUsdConversionRate);\n        }\n\n        tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(govTokensBalances.total);\n\n        // console.log('totalAllocationWithUnlent 2',govTokensBalances.total.toFixed(5),tokenAllocation.totalAllocationWithUnlent.toFixed(5));\n      }\n    }\n\n    tokenAllocation.totalAllocationConverted = await this.convertTokenBalance(tokenAllocation.totalAllocation,tokenConfig.token,tokenConfig);\n    tokenAllocation.totalAllocationWithUnlentConverted = await this.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,tokenConfig.token,tokenConfig);\n\n    if (protocolsAprs){\n      tokenAllocation.avgApr = this.getAvgApr(protocolsAprs,protocolsAllocations,totalAllocation);\n    }\n\n    return this.setCachedData(cachedDataKey,tokenAllocation);\n  }\n  getUniswapConversionRate_path = async (path) => {\n    const one = this.normalizeTokenDecimals(18);\n    const unires = await this.genericContractCall('UniswapRouter','getAmountsIn',[one.toFixed(),path]);\n    return unires;\n  }\n  getUniswapConversionRate = async (tokenConfigFrom,tokenConfigDest) => {\n\n    // Check for cached data\n    const cachedDataKey = `uniswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = this.getGlobalConfig(['stats','tokens','WETH','address']);\n      const one = this.normalizeTokenDecimals(18);\n\n      const path = [];\n      path.push(tokenConfigFrom.address);\n      // Don't pass through weth if i'm converting weth\n      if (WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()){\n        path.push(WETHAddr);\n      }\n      path.push(tokenConfigDest.address);\n\n      const unires = await this.genericContractCall('UniswapRouter','getAmountsIn',[one.toFixed(),path]);\n\n      // console.log('getUniswapConversionRate',tokenConfigFrom,tokenConfigDest,path,unires);\n\n      if (unires){\n        const price = this.BNify(unires[0]).div(one);\n        return this.setCachedDataWithLocalStorage(cachedDataKey,price);\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  /*\n  getUniswapConversionRate_old = async (tokenConfigFrom,tokenConfigDest) => {\n    const cachedDataKey = `compUniswapConverstionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    const tokenFrom = new Token(ChainId.MAINNET, tokenConfigFrom.address, tokenConfigFrom.decimals);\n    const tokenTo = new Token(ChainId.MAINNET, tokenConfigDest.address, tokenConfigDest.decimals);\n\n    const pair = await Fetcher.fetchPairData(tokenFrom, tokenTo);\n    const route = new Route([pair], tokenTo);\n\n    let output = null;\n    if (route && route.midPrice){\n      output = this.BNify(route.midPrice.toSignificant(tokenConfigDest.decimals));\n      this.setCachedData(cachedDataKey,output);\n    }\n    return output;\n  }\n  */\n  getCurveDepositedTokens = async (account,enabledTokens=[]) => {\n    account = account ? account : this.props.account;\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    if (!account || !enabledTokens || !enabledTokens.length){\n      return [];\n    }\n\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    const idleTokensBalances = {};\n    let remainingCurveTokens = this.BNify(0);\n\n    // this.customLog('getCurveDepositedTokens',curveTxs);\n\n    curveTxs.forEach( tx => {\n\n      const idleToken = tx.idleToken;\n      const idleTokens = this.BNify(tx.idleTokens);\n\n      if (!idleTokensBalances[idleToken]){\n        idleTokensBalances[idleToken] = this.BNify(0);\n      }\n\n      switch (tx.action){\n        case 'CurveIn':\n        case 'CurveZapIn':\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].plus(idleTokens);\n        break;\n        case 'CurveOut':\n        case 'CurveZapOut':\n          if (idleTokens.gt(idleTokensBalances[idleToken])){\n            remainingCurveTokens = remainingCurveTokens.plus(idleTokens.minus(idleTokensBalances[idleToken]));\n          }\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].minus(idleTokens);\n          if (idleTokensBalances[idleToken].lt(0)){\n            idleTokensBalances[idleToken] = this.BNify(0);\n          }\n        break;\n        default:\n        break;\n      }\n\n      // this.customLog(this.strToMoment(tx.timeStamp*1000).format('DD-MM-YYYY HH:mm:ss'),tx.blockNumber,idleToken,tx.action,idleTokens.toFixed(6),idleTokensBalances[idleToken].toFixed(6),remainingCurveTokens.toFixed(6));\n\n      // Scalo il remaining tokens\n      if (remainingCurveTokens.gt(0)){\n        Object.keys(idleTokensBalances).forEach( token => {\n          const tokenBalance = idleTokensBalances[token];\n          if (tokenBalance && tokenBalance.gt(0)){\n            if (tokenBalance.gt(remainingCurveTokens)){\n              idleTokensBalances[token] = idleTokensBalances[token].minus(remainingCurveTokens);\n            } else {\n              remainingCurveTokens = remainingCurveTokens.minus(idleTokensBalances[token]);\n              idleTokensBalances[token] = 0;\n            }\n          }\n        });\n      }\n    });\n\n    // this.customLog('idleTokensBalances',idleTokensBalances);\n  }\n  getCurveUnevenTokenAmounts = async (amounts,max_burn_amount) => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract){\n      const unevenAmounts = await this.genericContractCall(curveSwapContract.name, 'remove_liquidity_imbalance', [amounts, max_burn_amount]);\n      // this.customLog('getCurveUnevenTokenAmounts',amounts,max_burn_amount,unevenAmounts);\n      return unevenAmounts;\n    }\n    return null;\n  }\n  getCurveAPY = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getCurveAPY`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const curveRatesInfo = this.getGlobalConfig(['curve','rates']);\n    if (curveRatesInfo){\n      const results = await this.makeRequest(curveRatesInfo.endpoint);\n      if (results && results.data){\n        const path = Object.values(curveRatesInfo.path);\n        let curveApy = this.getArrayPath(path,results.data);\n        if (curveApy){\n          curveApy = this.BNify(curveApy).times(100);\n          if (!this.BNify(curveApy).isNaN()){\n            return this.setCachedDataWithLocalStorage(cachedDataKey,curveApy);\n          }\n        }\n      }\n    }\n    return null;\n  }\n  getCurveAvailableTokens = () => {\n    if (!this.props.availableStrategies){\n      return false;\n    }\n    const curveTokens = this.getGlobalConfig(['curve','availableTokens']);\n    const strategyTokens = this.props.availableStrategies['best'];\n    const availableTokens = Object.keys(strategyTokens).reduce( (availableTokens,token) => {\n      const tokenConfig = strategyTokens[token];\n      if (Object.keys(curveTokens).includes(tokenConfig.idle.token) && curveTokens[tokenConfig.idle.token].enabled){\n        availableTokens[token] = tokenConfig;\n      }\n      return availableTokens;\n    },{});\n\n    return availableTokens;\n  }\n  getCurveAPYContract = async () => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract){\n      const blockNumber = await this.getBlockNumber();\n      if (blockNumber){\n        const blocksForPrevTokenPrice = 10;\n        let [tokenPrice,prevTokenPrice] = await Promise.all([\n          this.genericContractCall(curveSwapContract.name,'get_virtual_price'),\n          this.genericContractCall(curveSwapContract.name,'get_virtual_price',[],{},blockNumber-blocksForPrevTokenPrice)\n        ]);\n\n        if (tokenPrice && prevTokenPrice){\n\n          const blocksMultiplier = this.BNify(this.getGlobalConfig(['network','blocksPerYear'])).div(blocksForPrevTokenPrice);\n          const curveAPR = this.BNify(tokenPrice).div(prevTokenPrice).minus(1).times(blocksMultiplier);\n          return this.apr2apy(curveAPR).times(100);\n        }\n      }\n    }\n    return null;\n  }\n  getCurveTokenSupply = async () => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract){\n      return await this.genericContractCall(curvePoolContract.name,'totalSupply');\n    }\n    return null;\n  }\n  getCurveTokenBalance = async (account=null,fixDecimals=true) => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract){\n      account = account ? account : this.props.account;\n      return await this.getTokenBalance(curvePoolContract.name,account,fixDecimals);\n    }\n    return null;\n  }\n  getCurveTokenPrice = async (blockNumber='latest',fixDecimals=true) => {\n    const migrationContract = await this.getCurveDepositContract();\n    let curveTokenPrice = await this.genericContractCall(migrationContract.name,'get_virtual_price',[],{},blockNumber);\n    if (curveTokenPrice){\n      curveTokenPrice = this.BNify(curveTokenPrice);\n      if (fixDecimals){\n        const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n        curveTokenPrice = this.fixTokenDecimals(curveTokenPrice,curvePoolContract.decimals);\n      }\n      return curveTokenPrice;\n    }\n    return null;\n  }\n  getCurveRedeemableIdleTokens = async (account) => {\n    let [curveTokenPrice,curveTokenBalance] = await Promise.all([\n      this.getCurveTokenPrice('latest'),\n      this.getCurveTokenBalance(account),\n    ]);\n    if (curveTokenBalance && curveTokenPrice){\n      return this.BNify(curveTokenBalance).times(curveTokenPrice);\n    }\n    return null;\n  }\n  getCurveDepositContract = async () => {\n    const depositContractInfo = this.getGlobalConfig(['curve','depositContract']);\n    if (depositContractInfo){\n      let curveDepositContract = this.getContractByName(depositContractInfo.name);\n      if (!curveDepositContract && depositContractInfo.abi){\n        curveDepositContract = await this.props.initContract(depositContractInfo.name,depositContractInfo.address,depositContractInfo.abi);\n      }\n    }\n    return depositContractInfo;\n  }\n  getCurveZapContract = async () => {\n    const zapContractInfo = this.getGlobalConfig(['curve','zapContract']);\n    if (zapContractInfo){\n      let curveZapContract = this.getContractByName(zapContractInfo.name);\n      if (!curveZapContract && zapContractInfo.abi){\n        curveZapContract = await this.props.initContract(zapContractInfo.name,zapContractInfo.address,zapContractInfo.abi);\n      }\n    }\n    return zapContractInfo;\n  }\n  getCurvePoolContract = async () => {\n    const poolContractInfo = this.getGlobalConfig(['curve','poolContract']);\n    if (poolContractInfo){\n      let curvePoolContract = this.getContractByName(poolContractInfo.name);\n      if (!curvePoolContract && poolContractInfo.abi){\n        curvePoolContract = await this.props.initContract(poolContractInfo.name,poolContractInfo.address,poolContractInfo.abi);\n      }\n    }\n    return poolContractInfo;\n  }\n  getCurveSwapContract = async () => {\n    const migrationContractInfo = this.getGlobalConfig(['curve','migrationContract']);\n    if (migrationContractInfo){\n      let migrationContract = this.getContractByName(migrationContractInfo.name);\n      if (!migrationContract && migrationContractInfo.abi){\n        migrationContract = await this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi);\n      }\n    }\n    return migrationContractInfo;\n  }\n  getCurveIdleTokensAmounts = async (account=null,curveTokenBalance=null,max_slippage=null) => {\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account){\n      return null;\n    }\n\n    const tokensBalances = {};\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance){\n      curveTokenBalance = await this.getCurveTokenBalance(account,false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply){\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n      const n_coins = Object.keys(curveAvailableTokens).length;\n\n      if (max_slippage){\n        max_slippage = this.BNify(max_slippage).div(n_coins);\n      }\n\n      // this.customLog('curveTokenShare',this.BNify(curveTokenBalance).toString(),this.BNify(curveTokenSupply).toString(),curveTokenShare.toString());\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const curveIdleTokens = await this.genericContractCall(curveSwapContract.name,'balances',[coinIndex]);\n        if (curveIdleTokens){\n          let idleTokenBalance = this.BNify(curveIdleTokens).times(curveTokenShare);\n          if (max_slippage){\n            // this.customLog('getCurveIdleTokensAmounts',idleTokenBalance.toFixed());\n            idleTokenBalance = idleTokenBalance.minus(idleTokenBalance.times(max_slippage));\n          }\n          tokensBalances[coinIndex] = this.integerValue(idleTokenBalance);\n        }\n      });\n    }\n\n    return Object.values(tokensBalances);\n  }\n\n  // Get amounts of underlying tokens in the curve pool\n  getCurveTokensAmounts = async (account=null,curveTokenBalance=null,fixDecimals=false,useCoinIndex=false) => {\n\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account){\n      return null;\n    }\n\n    const tokensBalances = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance){\n      curveTokenBalance = await this.getCurveTokenBalance(account,false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply){\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        const [\n          idleTokenPrice,\n          idleTokenBalance\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.genericContractCall(curveSwapContract.name,'balances',[coinIndex]),\n        ]);\n\n        const totalTokenSupply = this.BNify(idleTokenBalance).times(this.BNify(idleTokenPrice));\n        let tokenBalance = totalTokenSupply.times(curveTokenShare);\n        if (fixDecimals){\n          tokenBalance = this.fixTokenDecimals(tokenBalance,18);\n        }\n\n        tokensBalances[curveTokenConfig.baseToken] = useCoinIndex ? this.integerValue(tokenBalance) : tokenBalance;\n      });\n    }\n\n    return useCoinIndex ? Object.values(tokensBalances) : tokensBalances;\n  }\n\n  // Compile amounts array for Curve\n  getCurveAmounts = async (token,amount,deposit=false) => {\n    const amounts = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    await this.asyncForEach(Object.keys(curveAvailableTokens), async (idleToken) => {\n      const curveTokenConfig = curveAvailableTokens[idleToken];\n      const migrationParams = curveTokenConfig.migrationParams;\n      const coinIndex = migrationParams.coinIndex;\n      if (idleToken === token && parseFloat(amount)>0){\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        amount = this.fixTokenDecimals(amount,18);\n        if (!deposit){\n          const idleTokenPrice = await this.getIdleTokenPrice(tokenConfig);\n          amount = amount.div(idleTokenPrice);\n        }\n        amount = this.normalizeTokenAmount(amount,curveTokenConfig.decimals);\n        amounts[coinIndex] = amount;\n      } else {\n        amounts[coinIndex] = 0;\n      }\n    });\n\n    return Object.values(amounts);\n  }\n  getCurveTokenAmount = async (amounts,deposit=true) => {\n    const migrationContract = await this.getCurveSwapContract();\n    if (migrationContract){\n      return await this.genericContractCall(migrationContract.name,'calc_token_amount',[amounts,deposit]);\n    }\n    return null;\n  }\n  getCurveSlippage = async (token,amount,deposit=true,uneven_amounts=null) => {\n    let slippage = null;\n    const depositContract = await this.getCurveDepositContract();\n    if (depositContract){\n\n      const n_coins = this.getGlobalConfig(['curve','params','n_coins']);\n\n      amount = this.BNify(amount)\n      if (!amount || amount.isNaN() || amount.lte(0)){\n        return null;\n      }\n\n      let amounts = uneven_amounts;\n      if (!amounts || amounts.length !== n_coins){\n        amounts = await this.getCurveAmounts(token,amount);\n      }\n\n      let [\n        virtualPrice,\n        tokenAmount\n      ] = await Promise.all([\n        this.genericContractCall(depositContract.name,'get_virtual_price'),\n        this.genericContractCall(depositContract.name,'calc_token_amount',[amounts,deposit]),\n      ]);\n\n      if (virtualPrice && tokenAmount){\n        amount = this.fixTokenDecimals(amount,18);\n        virtualPrice = this.fixTokenDecimals(virtualPrice,18);\n        tokenAmount = this.fixTokenDecimals(tokenAmount,18);\n        const Sv = tokenAmount.times(virtualPrice);\n\n        // Handle redeem in uneven amounts (Slippage 0%)\n        if (uneven_amounts && !deposit){\n          amount = amount.times(virtualPrice);\n        }\n\n        if (deposit){\n          slippage = Sv.div(amount).minus(1).times(-1);\n        } else {\n          slippage = amount.div(Sv).minus(1).times(-1);\n        }\n\n        // console.log('getCurveSlippage',token,deposit,amounts,tokenAmount.toFixed(6),virtualPrice.toFixed(6),Sv.toFixed(6),amount.toFixed(6),slippage.toFixed(6));\n\n        return slippage;\n      }\n    }\n    return null;\n  }\n  getCompAPR = async (token,tokenConfig,cTokenIdleSupply=null,compConversionRate=null) => {\n    const COMPTokenConfig = this.getGlobalConfig(['govTokens','COMP']);\n    if (!COMPTokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getCompAPR_${tokenConfig.idle.token}_${cTokenIdleSupply}_${compConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let compAPR = this.BNify(0);\n    const compDistribution = await this.getCompDistribution(tokenConfig,cTokenIdleSupply);\n\n    if (compDistribution){\n\n      const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get COMP conversion rate\n      if (!compConversionRate){\n        try {\n          compConversionRate = await this.getUniswapConversionRate(DAITokenConfig,COMPTokenConfig);\n        } catch (error) {\n\n        }\n        if (!compConversionRate || compConversionRate.isNaN()){\n          compConversionRate = this.BNify(1);\n        }\n      }\n\n      const compValue = this.BNify(compConversionRate).times(compDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n\n      if (tokenAllocation){\n        compAPR = compValue.div(tokenAllocation.totalAllocationConverted).times(100);\n        if (!this.BNify(compAPR).isNaN()){\n          this.setCachedDataWithLocalStorage(cachedDataKey,compAPR);\n        }\n      }\n    }\n\n    return compAPR;\n  }\n  getCompSpeed = async (cTokenAddress) => {\n    let compSpeed = await this.genericContractCall('Comptroller','compSpeeds',[cTokenAddress]);\n    if (compSpeed){\n      return this.BNify(compSpeed);\n    }\n    return null;\n  }\n  getCompDistribution = async (tokenConfig,cTokenIdleSupply=null,annualize=true) => {\n\n    const cachedDataKey = `getCompDistribution_${tokenConfig.idle.token}_${cTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n    if (cTokenInfo){\n\n      // Get IdleToken allocation in compound\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n      const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenInfo.address.toLowerCase()];\n\n      // Calculate distribution if compound allocation >= 0.1%\n      if (compoundAllocationPerc && compoundAllocationPerc.gte(0.001)){\n\n        // Get COMP distribution speed and Total Supply\n        const [\n          compSpeed,\n          cTokenTotalSupply\n        ] = await Promise.all([\n          this.getCompSpeed(cTokenInfo.address),\n          this.genericContractCall(cTokenInfo.token,'totalSupply'),\n        ]);\n\n        if (compSpeed && cTokenTotalSupply){\n\n          // Get Idle liquidity supply\n          if (!cTokenIdleSupply){\n            cTokenIdleSupply = await this.genericContractCall(cTokenInfo.token,'balanceOf',[tokenConfig.idle.address]);\n          }\n\n          if (cTokenIdleSupply){\n\n            // Get COMP distribution for Idle in a Year\n            const blocksPerYear = this.getGlobalConfig(['network','blocksPerYear']);\n\n            // Take 50% of distrubution for lenders side\n            const compoundPoolShare = this.BNify(cTokenIdleSupply).div(this.BNify(cTokenTotalSupply));\n            let compDistribution = this.BNify(compSpeed).times(compoundPoolShare);\n\n            if (annualize){\n              compDistribution = compDistribution.div(1e18).times(this.BNify(blocksPerYear));\n            }\n\n            if (!this.BNify(compDistribution).isNaN()){\n              return this.setCachedDataWithLocalStorage(cachedDataKey,compDistribution);\n            }\n          }\n        }\n      }\n    }\n\n    return null;\n  }\n  getCompUserDistribution = async (account=null,availableTokens=null) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n      if (cTokenInfo){\n        const [\n          userPoolShare,\n          compDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account,tokenConfig,false),\n          this.getCompDistribution(tokenConfig,null,false),\n        ]);\n\n        if (compDistribution && userPoolShare){\n          output = output.plus(compDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getCompAvgApr = async (availableTokens=null) => {\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.BNify(0);\n    let totalAllocation = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [compApr,tokenAllocation] = await Promise.all([\n        this.getCompAPR(token,tokenConfig),\n        this.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (compApr && tokenAllocation){\n        output = output.plus(compApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n        // this.customLog(token,compApr.toString(),tokenAllocation.totalAllocation.toString(),output.toString(),totalAllocation.toString());\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n  getTokensCsv = async () => {\n\n    // eslint-disable-next-line\n    Array.prototype.sum = function() {\n      return this.reduce(function(pv, cv) { return pv + cv; }, 0);\n    };\n    // eslint-disable-next-line\n    Array.prototype.max = function() {\n      return Math.max.apply(null, this);\n    };\n    // eslint-disable-next-line\n    Array.prototype.avg = function() {\n      return this.sum()/this.length;\n    };\n\n    const csv = [];\n    const availableStrategies = this.props.availableStrategies;\n    await this.asyncForEach(Object.keys(availableStrategies), async (strategy) => {\n      const availableTokens = availableStrategies[strategy];\n      const isRisk = strategy === 'risk';\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n        const tokenConfig = availableTokens[token];\n        const rates = await this.getTokenApiData(tokenConfig.address,isRisk,null,null,false,7200,'ASC');\n        const header = [];\n        let protocols = null;\n        const rows = [];\n        const aprAvg = {};\n        const scoreAvg = {};\n\n        const lastRow = rates[rates.length-1];\n\n        rates.forEach( r => {\n          if (!protocols){\n            header.push('Token');\n            header.push('Date');\n\n            // Get protocols\n            protocols = [];\n            lastRow.protocolsData.forEach( p1 => {\n              const foundProtocol = tokenConfig.protocols.find( p2 => ( p2.address.toLowerCase() === p1.protocolAddr.toLowerCase() ) );\n              if (foundProtocol){\n                protocols.push(foundProtocol);\n              }\n            });\n\n            // Add APR columns\n            header.push('APR Idle');\n            header.push('SCORE Idle');\n\n            aprAvg['idle'] = [];\n            scoreAvg['idle'] = [];\n\n            protocols.forEach( p => {\n              header.push('APR '+p.name);\n              header.push('SCORE '+p.name);\n\n              aprAvg[p.name] = [];\n              scoreAvg[p.name] = [];\n            });\n\n            rows.push(header.join(','));\n          }\n\n          const date = moment(r.timestamp*1000).format('YYYY-MM-DD');\n          const rate = this.BNify(r.idleRate).div(1e18).toFixed(5);\n          const score = parseFloat(r.idleScore);\n\n          const row = [];\n          row.push(`${token}-${strategy}`);\n          row.push(date);\n          row.push(rate);\n          row.push(score);\n\n          if (date>='2020-09-15'/* && date<='2020-11-09'*/){\n            aprAvg['idle'].push(parseFloat(rate));\n            scoreAvg['idle'].push(parseFloat(score));\n          }\n\n          protocols.forEach( pInfo => {\n            const pData = r.protocolsData.find( p => (p.protocolAddr.toLowerCase() === pInfo.address.toLowerCase()) );\n            let pRate = '';\n            let pScore = '';\n            if (pData){\n              pScore = !this.BNify(pData.defiScore).isNaN() ? parseFloat(pData.defiScore) : '0.00000';\n              pRate = !this.BNify(pData.rate).isNaN() ? this.BNify(pData.rate).div(1e18) : '0.00000';\n              if (typeof pData[`${pInfo.name}AdditionalAPR`] !== 'undefined'){\n                const additionalRate = this.BNify(pData[`${pInfo.name}AdditionalAPR`]).div(1e18);\n                if (!additionalRate.isNaN()){\n                  pRate = pRate.plus(additionalRate);\n                }\n              }\n\n              if (date>='2020-09-15'/* && date<='2020-11-09'*/){\n                if (!isNaN(parseFloat(pRate))){\n                  aprAvg[pInfo.name].push(parseFloat(pRate));\n                }\n                if (!isNaN(parseFloat(pScore))){\n                  scoreAvg[pInfo.name].push(parseFloat(pScore));\n                }\n              }\n            }\n\n            row.push(pRate);\n            row.push(pScore);\n          });\n\n          rows.push(row.join(','));\n        });\n\n        Object.keys(aprAvg).forEach( p => {\n          const avgRate = aprAvg[p].sum()/aprAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Rate: ${avgRate}`);\n        });\n\n        Object.keys(scoreAvg).forEach( p => {\n          const avgScore = scoreAvg[p].sum()/scoreAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Score: ${avgScore}`);\n        });\n\n        // if (token==='DAI' && isRisk){\n        //   debugger;\n        // }\n\n        csv.push(rows.join('\\n'));\n      });\n    });\n\n    this.customLog(csv.join('\\n'));\n  }\n  getGovTokenPool = async (govToken=null,availableTokens=null,convertToken=null) => {\n    let output = this.BNify(0);\n\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const enabledTokens = govToken ? [govToken] : null;\n      const compTokenBalance = await this.getGovTokensBalances(tokenConfig.idle.address,convertToken,enabledTokens);\n      if (compTokenBalance && compTokenBalance.total){\n        output = output.plus(compTokenBalance.total);\n      }\n    });\n    return output;\n  }\n  getIdleGovToken = () => {\n    if (!this.idleGovToken){\n      this.idleGovToken = new IdleGovToken(this.props);\n    }\n    return this.idleGovToken;\n  }\n  getTokenGovTokens = (tokenConfig) => {\n    const output = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    Object.keys(govTokens).forEach( govToken => {\n      const govTokenConfig = govTokens[govToken];\n      if (!govTokenConfig.enabled){\n        return;\n      }\n      if (govTokenConfig.protocol === 'idle'){\n        if (!govTokenConfig.disabledTokens.includes(tokenConfig.idle.token)){\n          output[govToken] = govTokenConfig;\n        }\n      } else {\n        const foundProtocol = tokenConfig.protocols.find( p => (p.enabled && p.name.toLowerCase() === govTokenConfig.protocol.toLowerCase()) )\n        if (foundProtocol){\n          output[govToken] = govTokenConfig;\n        }\n      }\n    });\n    return output;\n  }\n  fixDistributionSpeed = (speed,frequency) => {\n    const blocksPerYear = this.BNify(this.getGlobalConfig(['network','blocksPerYear']));\n    speed = this.BNify(speed);\n    if (speed && !speed.isNaN()){\n      switch (frequency){\n        case 'day':\n          const blocksPerDay = blocksPerYear.div(365.242199);\n          speed = speed.times(blocksPerDay);\n        break;\n        case 'week':\n          const blocksPerWeek = blocksPerYear.div(52.1429);\n          speed = speed.times(blocksPerWeek);\n        break;\n        case 'month':\n          const blocksPerMonth = blocksPerYear.div(12);\n          speed = speed.times(blocksPerMonth);\n        break;\n        case 'year':\n          speed = speed.times(blocksPerYear);\n        break;\n        default:\n        break;\n      }\n      return speed;\n    }\n    return null;\n  }\n  getGovTokensUserDistributionSpeed = async (account,tokenConfig=null,enabledTokens=null) => {\n    const govTokensUserDistribution = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      const availableTokens = {};\n      availableTokens[tokenConfig.token] = tokenConfig;\n\n      let output = null;\n      switch (govToken){\n        case 'COMP':\n          output = await this.getCompUserDistribution(account,availableTokens);\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          output = await idleGovToken.getUserDistribution(account,availableTokens);\n        break;\n        default:\n        break;\n      }\n\n      if (output){\n        output = output.div(1e18);\n        if (govTokenConfig.distributionFrequency){\n          output = this.fixDistributionSpeed(output,govTokenConfig.distributionFrequency);\n        }\n        govTokensUserDistribution[govToken] = output;\n      }\n    });\n\n    return govTokensUserDistribution;\n  }\n  getGovTokensDistributionSpeed = async (tokenConfig,enabledTokens=null) => {\n    const govTokensDistribution = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      let govSpeed = null;\n      switch (govToken){\n        case 'COMP':\n          const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n          if (cTokenInfo){\n            govSpeed = await this.getCompDistribution(tokenConfig,null,false);\n          }\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          govSpeed = await idleGovToken.getSpeed(tokenConfig.idle.address);\n        break;\n        default:\n        break;\n      }\n\n      if (govSpeed){\n        govSpeed = govSpeed.div(1e18);\n        if (govTokenConfig.distributionFrequency){\n          govSpeed = this.fixDistributionSpeed(govSpeed,govTokenConfig.distributionFrequency);\n        }\n        govTokensDistribution[govToken] = govSpeed;\n      }\n    });\n\n    return govTokensDistribution;\n  }\n  getGovTokensAprs = async (token,tokenConfig,enabledTokens=null) => {\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensAprs = {}\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled || govTokenConfig.aprTooltipMode === false){\n        return;\n      }\n\n      let output = null;\n      let tokenAllocation = null;\n\n      switch (govToken){\n        case 'COMP':\n          switch (govTokenConfig.aprTooltipMode){\n            default:\n            case 'apr':\n              [output,tokenAllocation] = await Promise.all([\n                this.getCompAPR(token,tokenConfig),\n                this.getTokenAllocation(tokenConfig,false,false)\n              ]);\n\n              // Cut the COMP token proportionally on Idle funds allocation in compound\n              if (tokenAllocation){\n                const compoundInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n                if (compoundInfo){\n                  if (tokenAllocation.protocolsAllocationsPerc[compoundInfo.address.toLowerCase()]){\n                    const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[compoundInfo.address.toLowerCase()];\n                    output = output.times(compoundAllocationPerc);\n                  }\n                }\n              }\n            break;\n          }\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          switch (govTokenConfig.aprTooltipMode){\n            case 'apr':\n              output = await idleGovToken.getAPR(token,tokenConfig);\n            break;\n            case 'distribution':\n              output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n              if (output){\n                output = this.fixTokenDecimals(output,18);\n                output = this.fixDistributionSpeed(output,govTokenConfig.distributionFrequency);\n              }\n            break;\n            case 'userDistribution':\n              output = await idleGovToken.getUserDistribution(tokenConfig);\n            break;\n            default:\n            break;\n          }\n        break;\n        default:\n        break;\n      }\n\n      if (output !== null && this.BNify(output).gt(0)){\n        govTokensAprs[govToken] = output;\n      }\n    });\n\n    return govTokensAprs;\n  }\n  getGovTokensBalances = async (address=null,convertToken='DAI',enabledTokens=null) => {\n    if (!address){\n      address = this.props.tokenConfig.idle.address;\n    }\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensBalances = {}\n\n    await this.asyncForEach(Object.keys(govTokens),async (token) => {\n\n      if (enabledTokens && !enabledTokens.includes(token)){\n        return;\n      }\n      \n      const govTokenConfig = govTokens[token];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      // Get gov token balance\n      let govTokenBalance = await this.getProtocolBalance(token,address);\n\n      if (govTokenBalance){\n        // Get gov token conversion rate\n        let tokenConversionRate = null;\n        if (convertToken){\n          const fromTokenConfig = this.getGlobalConfig(['stats','tokens',convertToken]);\n          try {\n            tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig,govTokenConfig);\n          } catch (error) {\n            \n          }\n        }\n\n        // Fix token decimals and convert\n        govTokensBalances[token] = this.fixTokenDecimals(govTokenBalance,govTokens[token].decimals,tokenConversionRate);\n\n        // Initialize Total gov Tokens\n        if (!govTokensBalances.total){\n          govTokensBalances.total = this.BNify(0);\n        }\n\n        // Sum Total gov Tokens\n        govTokensBalances.total = govTokensBalances.total.plus(govTokensBalances[token]);\n      }\n    });\n\n    return govTokensBalances;\n  }\n  getGovTokenConfigByAddress = (address) => {\n    if (!address){\n      return false;\n    }\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    return Object.values(govTokens).find( tokenConfig => (tokenConfig.enabled && tokenConfig.address.toLowerCase() === address.toLowerCase()) );\n  }\n  getGovTokensUserTotalBalance = async (account=null,availableTokens=null,convertToken=null,checkShowBalance=true) => {\n\n    // Check for cached data\n    const cachedDataKey = `govTokensUserTotalBalance_${account}_${JSON.stringify(availableTokens)}_${convertToken}_${checkShowBalance}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account,availableTokens,convertToken,null,checkShowBalance);\n    if (govTokensUserBalances){\n      const govTokensEarnings = Object.values(govTokensUserBalances).reduce( (acc, govTokenAmount) => {\n        acc = acc.plus(this.BNify(govTokenAmount));\n        return acc;\n      }, this.BNify(0));\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey,govTokensEarnings);\n    }\n    return this.BNify(0);\n  }\n  getGovTokensUserBalances = async (account=null,availableTokens=null,convertToken=null,govTokenConfigForced=null,checkShowBalance=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.availableStrategies && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    const output = {};\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const idleTokenConfig = availableTokens[token].idle;\n\n      // Get govTokens amounts\n      const govTokensAmounts = await this.genericContractCall(idleTokenConfig.token,'getGovTokensAmounts',[account]);\n\n      if (govTokensAmounts){\n        await this.asyncForEach(govTokensAmounts, async (govTokenAmount,govTokenIndex) => {\n          govTokenAmount = this.BNify(govTokenAmount);\n          // Get gov Token config by index\n          const govTokenAddress = await this.genericContractCall(idleTokenConfig.token,'govTokens',[govTokenIndex]);\n\n          if (govTokenAddress){\n            const govTokenConfig = govTokenConfigForced ? govTokenConfigForced : this.getGovTokenConfigByAddress(govTokenAddress);\n\n            if (govTokenConfig && (!checkShowBalance || govTokenConfig.showBalance) && govTokenConfig.address && govTokenConfig.address.toLowerCase() === govTokenAddress.toLowerCase()){\n\n              // Get gov token conversion rate\n              let tokenConversionRate = null;\n              if (convertToken){\n                const fromTokenConfig = this.getGlobalConfig(['stats','tokens',convertToken]);\n                if (fromTokenConfig){\n                  try {\n                    tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig,govTokenConfig);\n                  } catch (error) {\n                    \n                  }\n                }\n              }\n\n              govTokenAmount = this.fixTokenDecimals(govTokenAmount,govTokenConfig.decimals,tokenConversionRate);\n\n              // Initialize govToken balance\n              if (!output[govTokenConfig.token]){\n                output[govTokenConfig.token] = this.BNify(0); // this.BNify(1) for testing\n              }\n\n              // Add govTokens balance\n              output[govTokenConfig.token] = output[govTokenConfig.token].plus(govTokenAmount);\n            }\n          }\n        });\n      }\n    });\n\n    return output;\n  }\n  getTokenFees = async (tokenConfig=null) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    const fee = await this.genericContractCall(tokenConfig.idle.token, 'fee');\n    if (fee){\n      return this.BNify(fee).div(this.BNify(100000));\n    }\n    return null;\n  }\n  getUserTokenFees = async (tokenConfig=null,account=null) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account || !tokenConfig){\n      return null;\n    }\n\n    let [\n      feePercentage,\n      amountLent,\n      redeemableBalance\n    ] = await Promise.all([\n      this.getTokenFees(tokenConfig),\n      this.loadAssetField('amountLent',tokenConfig.token,tokenConfig,account),\n      this.loadAssetField('redeemableBalance',tokenConfig.token,tokenConfig,account)\n    ]);\n\n    if (feePercentage && amountLent && redeemableBalance){\n      const gain = redeemableBalance.minus(amountLent);\n      const fees = gain.times(feePercentage);\n\n      // this.customLog('fees',tokenConfig.token,amountLent.toString(),redeemableBalance.toString(),gain.toString(),fees.toString());\n\n      return fees;\n    }\n\n    return null;\n  }\n  getGovTokenUserBalance = async (govTokenConfig,account=null,availableTokens=null,convertToken=null) => {\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account,availableTokens,convertToken,govTokenConfig);\n    return govTokensUserBalances && govTokensUserBalances[govTokenConfig.token] ? govTokensUserBalances[govTokenConfig.token] : this.BNify(0);\n  }\n  getTotalTVL = async () => {\n    const tokensTVL = await this.getTokensTVL();\n    return Object.values(tokensTVL).reduce( (totalTVL,tokenInfo) => {\n      const tokenTVL = this.BNify(tokenInfo.totalTVL);\n      if (tokenTVL && !tokenTVL.isNaN()){\n        totalTVL = totalTVL.plus(tokenTVL);\n      }\n      return totalTVL;\n    },this.BNify(0));\n  }\n  getTokensTVL = async () => {\n    const output = {};\n    const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n\n        let tokenTVL = this.BNify(0);\n        let totalTVL = this.BNify(0);\n        let oldTokenTVL = this.BNify(0);\n        const tokenConfig = availableTokens[token];\n        const idleTokenName = tokenConfig.idle.token;\n\n        output[idleTokenName] = {\n          tokenTVL,\n          totalTVL,\n          oldTokenTVL,\n          govTokens:{},\n        };\n\n        const [\n          tokenPrice,\n          totalSupply\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getIdleTokenSupply(tokenConfig)\n        ]);\n\n        tokenTVL = this.fixTokenDecimals(totalSupply,18).times(tokenPrice);\n        tokenTVL = await this.convertTokenBalance(tokenTVL,token,tokenConfig,isRisk);\n\n        output[idleTokenName].tokenTVL = tokenTVL;\n        totalTVL = totalTVL.plus(tokenTVL);\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens){\n          await this.asyncForEach(Object.keys(govTokens).filter( govToken => (govTokens[govToken].showAUM) ), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              govTokenBalance,\n              govTokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken,tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig,govTokenConfig)\n            ]);\n            \n            if (govTokenBalance && govTokenConversionRate){\n              const govTokenBalanceConverted = this.fixTokenDecimals(govTokenBalance,govTokenConfig.decimals).times(this.BNify(govTokenConversionRate));\n              if (govTokenBalanceConverted && !govTokenBalanceConverted.isNaN()){\n                totalTVL = totalTVL.plus(govTokenBalanceConverted);\n                output[idleTokenName].govTokens[govToken] = govTokenBalanceConverted;\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract){\n          const oldTokenConfig = Object.assign({},tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({},tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols){\n            oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n              if (foundProtocol){\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const [\n            oldTokenPrice,\n            oldTotalSupply\n          ] = await Promise.all([\n            this.getIdleTokenPrice(oldTokenConfig),\n            this.getIdleTokenSupply(oldTokenConfig.idle.name)\n          ]);\n\n          if (oldTokenPrice && oldTotalSupply){\n            oldTokenTVL = this.fixTokenDecimals(oldTotalSupply,18).times(oldTokenPrice);\n            oldTokenTVL = await this.convertTokenBalance(oldTokenTVL,token,oldTokenConfig,isRisk);\n            if (oldTokenTVL && !oldTokenTVL.isNaN()){\n              output[idleTokenName].oldTokenTVL = oldTokenTVL;\n              totalTVL = totalTVL.plus(oldTokenTVL);\n            }\n          }\n        }\n\n        output[idleTokenName].totalTVL = totalTVL;\n      });\n    });\n\n    return output;\n  }\n  getSubstackLatestFeed = async () => {\n    const cachedDataKey = `substackLatestFeed`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpointInfo = this.getGlobalConfig(['stats','substack']);\n    const idleSubstackFeed = await this.makeRequest(endpointInfo.endpoint,false,config);\n\n    if (idleSubstackFeed && idleSubstackFeed.data && idleSubstackFeed.data.items && idleSubstackFeed.data.items.length>0){\n      const latestFeed = idleSubstackFeed.data.items[0];\n      return this.setCachedDataWithLocalStorage(cachedDataKey,latestFeed,endpointInfo.TTL);\n    }\n\n    return null;\n  }\n  getAggregatedStats = async (addGovTokens=true) => {\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpointInfo = this.getGlobalConfig(['stats','tvls']);\n    const tvls = await this.makeCachedRequest(endpointInfo.endpoint,endpointInfo.TTL,true,false,config);\n\n    if (tvls){\n      const avgAPY = this.BNify(tvls.avgAPY);\n      const totalAUM = this.BNify(tvls.totalTVL);\n      return {\n        avgAPY,\n        totalAUM\n      };\n    } else {\n      return await this.getAggregatedStats_chain();\n    }\n  }\n  getAggregatedStats_chain = async (addGovTokens=true) => {\n\n    // Check for cached data\n    const cachedDataKey = `getAggregatedStats_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && (cachedData.avgAPR && !this.BNify(cachedData.avgAPR).isNaN()) && (cachedData.avgAPY && !this.BNify(cachedData.avgAPY).isNaN()) && (cachedData.totalAUM && !this.BNify(cachedData.totalAUM).isNaN())){\n      return {\n        avgAPR:this.BNify(cachedData.avgAPR),\n        avgAPY:this.BNify(cachedData.avgAPY),\n        totalAUM:this.BNify(cachedData.totalAUM)\n      };\n    }\n\n    let avgAPR = this.BNify(0);\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n    const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,addGovTokens);\n        const tokenAprs = await this.getTokenAprs(tokenConfig,tokenAllocation,addGovTokens);\n        if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent && !tokenAllocation.totalAllocationWithUnlent.isNaN()){\n          const tokenAUM = await this.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig,isRisk);\n          totalAUM = totalAUM.plus(tokenAUM);\n          // console.log(tokenConfig.idle.token+'V4',tokenAUM.toFixed());\n          if (tokenAprs && tokenAprs.avgApr && !tokenAprs.avgApr.isNaN()){\n            avgAPR = avgAPR.plus(tokenAUM.times(tokenAprs.avgApr));\n            avgAPY = avgAPY.plus(tokenAUM.times(tokenAprs.avgApy));\n          }\n        }\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens){\n          await this.asyncForEach(Object.keys(govTokens).filter( govToken => (govTokens[govToken].showAUM) ), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              tokenBalance,\n              tokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken,tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig,govTokenConfig)\n            ]);\n            \n            if (tokenBalance && tokenConversionRate){\n              const tokenBalanceConverted = this.fixTokenDecimals(tokenBalance,govTokenConfig.decimals).times(this.BNify(tokenConversionRate));\n              if (tokenBalanceConverted && !tokenBalanceConverted.isNaN()){\n                // console.log(tokenConfig.idle.token+'V4 - COMP',tokenBalanceConverted.toFixed());\n                totalAUM = totalAUM.plus(tokenBalanceConverted);\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract){\n          const oldTokenConfig = Object.assign({},tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({},tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols){\n            oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n              if (foundProtocol){\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const oldTokenAllocation = await this.getTokenAllocation(oldTokenConfig,false,false);\n          if (oldTokenAllocation && oldTokenAllocation.totalAllocation && !oldTokenAllocation.totalAllocation.isNaN()){\n            const oldTokenTotalAllocation = await this.convertTokenBalance(oldTokenAllocation.totalAllocation,token,oldTokenConfig,isRisk);\n            totalAUM = totalAUM.plus(oldTokenTotalAllocation);\n            // console.log(oldTokenConfig.idle.name,oldTokenTotalAllocation.toFixed(5));\n          }\n        }\n      });\n    });\n\n    avgAPR = avgAPR.div(totalAUM);\n    avgAPY = avgAPY.div(totalAUM);\n\n    const output = {\n      avgAPR,\n      avgAPY,\n      totalAUM\n    };\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,output);\n  }\n  getTokenApy = async (tokenConfig) => {\n    const tokenAprs = await this.getTokenAprs(tokenConfig);\n    if (tokenAprs && tokenAprs.avgApy !== null){\n      return tokenAprs.avgApy;\n    }\n    return null;\n  }\n  getTokensToMigrate = async (selectedStrategy=null) => {\n\n    if (!this.props.availableStrategies || !this.props.account){\n      return false;\n    }\n\n    const tokensToMigrate = {};\n\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      if (selectedStrategy && selectedStrategy !== strategy){\n        return;\n      }\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const {\n          migrationEnabled,\n          oldContractBalanceFormatted\n        } = await this.checkMigration(tokenConfig,this.props.account);\n        \n        if (migrationEnabled){\n          const tokenKey = selectedStrategy ? token : tokenConfig.idle.token;\n          tokensToMigrate[tokenKey] = {\n            token,\n            strategy,\n            tokenConfig,\n            oldContractBalanceFormatted\n          }\n        }\n      });\n    });\n\n    return tokensToMigrate;\n  }\n  /*\n  Get protocols tokens balances\n  */\n  getProtocolsTokensBalances = async (protocol=null) => {\n    if (!this.props.account){\n      return false;\n    }\n    const tokenBalances = {};\n    const minTokenBalance = this.BNify(1).div(1e4);\n    const protocolsTokens = this.getGlobalConfig(['tools','tokenMigration','props','availableTokens']);\n    if (protocolsTokens){\n      await this.asyncForEach(Object.keys(protocolsTokens),async (token) => {\n        const tokenConfig = protocolsTokens[token];\n        if (protocol !== null && tokenConfig.protocol.toLowerCase() !== protocol.toLowerCase() ){\n          return;\n        }\n        let tokenContract = this.getContractByName(tokenConfig.token);\n        if (!tokenContract && tokenConfig.abi){\n          tokenContract = await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n        }\n        if (tokenContract){\n          const tokenBalance = await this.getTokenBalance(tokenConfig.token,this.props.account);\n          if (tokenBalance && tokenBalance.gte(minTokenBalance)){\n            tokenBalances[token] = {\n              tokenConfig,\n              balance:tokenBalance,\n            };\n          }\n        }\n      });\n    }\n\n    return tokenBalances;\n  }\n  /*\n  Convert token Balance\n  */\n  convertTokenBalance = async (tokenBalance,token,tokenConfig,isRisk=false) => {\n    // Check for USD conversion rate\n    tokenBalance = this.BNify(tokenBalance);\n    if (tokenBalance.gt(0)){\n      const tokenUsdConversionRate = await this.getTokenConversionRate(tokenConfig,isRisk);\n      if (tokenUsdConversionRate){\n        tokenBalance = tokenBalance.times(tokenUsdConversionRate);\n      }\n    }\n    return tokenBalance;\n  }\n\n  getAvgAPYStats = async (address,isRisk,startTimestamp=null,endTimestamp=null) => {\n\n    const apiResults = await this.getTokenApiData(address,isRisk,startTimestamp,endTimestamp,true,7200);\n\n    if (apiResults && apiResults.length){\n      const apr = apiResults.reduce( (sum,r) => {\n        const idleRate = this.fixTokenDecimals(r.idleRate,18);\n        return sum.plus(idleRate);\n      },this.BNify(0));\n\n      // Calculate average\n      return apr.div(apiResults.length);\n    }\n\n    return null;\n  }\n\n  /*\n  Get idleToken conversion rate\n  */\n  getTokenConversionRate = async (tokenConfig,isRisk,conversionRateField=null,count=0) => {\n\n    if (!conversionRateField){\n      conversionRateField = this.getGlobalConfig(['stats','tokens',tokenConfig.token,'conversionRateField']);\n      if (!conversionRateField){\n        return null;\n      }\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenConversionRate_${tokenConfig.address}_${isRisk}_${conversionRateField}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      // console.log('CACHED -',count,cachedDataKey,this.BNify(cachedData).toFixed());\n      return this.BNify(cachedData);\n    }\n\n    let tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,null,null,false,null,'desc',1);\n\n    // console.log('TOKEN DATA - ',tokenConfig.address,isRisk,tokenData);\n\n    if (tokenData && tokenData.length){\n      tokenData = tokenData.pop();\n      if (tokenData && !this.BNify(tokenData[conversionRateField]).isNaN()){\n        const conversionRate = this.fixTokenDecimals(tokenData[conversionRateField],18);\n        if (!this.BNify(conversionRate).isNaN()){\n          // console.log('NOT CACHED -',count,cachedDataKey,this.BNify(conversionRate).toFixed());\n          return this.setCachedDataWithLocalStorage(cachedDataKey,conversionRate);\n        }\n      }\n    } else {\n      const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n      const conversionRate = await this.getUniswapConversionRate(DAITokenConfig,tokenConfig);\n      if (!this.BNify(conversionRate).isNaN()){\n        // console.log('NOT CACHED -',count,cachedDataKey,this.BNify(conversionRate).toFixed());\n        return this.setCachedDataWithLocalStorage(cachedDataKey,conversionRate);\n      }\n    }\n\n    if (count<3){\n      return await this.getTokenConversionRate(tokenConfig,isRisk,conversionRateField,count+1); \n    }\n\n    return null;\n  }\n\n  getTokenScore = async (tokenConfig,isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScore_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const apiInfo = globalConfigs.stats.rates;\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpoint = `${apiInfo.endpoint}${tokenConfig.address}?isRisk=${isRisk}&limit=1&order=DESC`;\n    const [\n      tokenData,\n      tokenAllocation\n    ] = await Promise.all([\n      this.makeCachedRequest(endpoint,apiInfo.TTL,true,false,config),\n      this.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    let tokenScore = this.BNify(0);\n\n    if (tokenData && tokenAllocation){\n      Object.keys(tokenAllocation.protocolsAllocationsPerc).forEach( protocolAddr => {\n        const protocolAllocationPerc = this.BNify(tokenAllocation.protocolsAllocationsPerc[protocolAddr]);\n        if (protocolAllocationPerc.gt(0.001) && tokenData.length>0){\n          const protocolInfo = tokenData[0].protocolsData.find( p => (p.protocolAddr.toLowerCase() === protocolAddr.toLowerCase()) );\n          if (protocolInfo){\n            const protocolScore = this.BNify(protocolInfo.defiScore);\n            if (!protocolScore.isNaN()){\n              tokenScore = tokenScore.plus(protocolScore.times(protocolAllocationPerc));\n              // this.customLog(protocolAddr,tokenAllocation.protocolsAllocationsPerc[protocolAddr].toFixed(6),protocolScore.toFixed(6),tokenScore.toFixed(6));\n            }\n          }\n        }\n      });\n    }\n\n    // Fallback\n    if (!tokenScore || tokenScore.isNaN() || tokenScore.lte(0)){\n      tokenScore = this.getTokenScoreApi(tokenConfig,isRisk);\n    }\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,tokenScore);\n  }\n\n  /*\n  Get idleToken score\n  */\n  getTokenScoreApi = async (tokenConfig,isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScoreApi_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const apiInfo = globalConfigs.stats.scores;\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpoint = `${apiInfo.endpoint}${tokenConfig.address}?isRisk=${isRisk}`;\n    let tokenData = await this.makeCachedRequest(endpoint,apiInfo.TTL,true,false,config);\n\n    if (tokenData){\n      let tokenScore = this.BNify(tokenData[0].idleScore);\n      if (tokenScore && tokenScore.gt(0)){\n        // Set cached data\n        return this.setCachedData(cachedDataKey,tokenScore);\n      // Take latest historical valid score\n      } else {\n        const timestamp = parseInt(Date.now()/1000);\n        const startTimestamp = parseInt(timestamp)-(60*60*24);\n        tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,startTimestamp,null,true,null,'DESC');\n\n        const filteredTokenData = tokenData.filter( d => (this.BNify(d.idleScore).gt(0)) );\n        if (filteredTokenData.length){\n          tokenScore = this.BNify(filteredTokenData[0].idleScore);\n          if (!this.BNify(tokenScore).isNaN()){\n            return this.setCachedDataWithLocalStorage(cachedDataKey,tokenScore);\n          }\n        }\n      }\n    }\n\n    return null;\n  }\n  /*\n  Get idleTokens aggregated APR\n  */\n  getTokenAprs = async (tokenConfig,tokenAllocation=false,addGovTokens=true) => {\n\n    if (!tokenConfig.idle){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAprs_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && (cachedData.avgApr && !this.BNify(cachedData.avgApr).isNaN()) && (cachedData.avgApy && !this.BNify(cachedData.avgApy).isNaN()) ){\n      return {\n        avgApr:this.BNify(cachedData.avgApr),\n        avgApy:this.BNify(cachedData.avgApy)\n      };\n    }\n\n    const Aprs = await this.getAprs(tokenConfig.idle.token);\n\n    if (!Aprs){\n      return false;\n    }\n\n    if (!tokenAllocation){\n      tokenAllocation = await this.getTokenAllocation(tokenConfig);\n    }\n\n    if (!tokenAllocation){\n      return false;\n    }\n\n    const addresses = Aprs.addresses.map((addr,i) => { return addr.toString().toLowerCase() });\n    const aprs = Aprs.aprs;\n\n    const protocolsAprs = {};\n    const protocolsApys = {};\n    let compAPR = null;\n\n    await this.asyncForEach(tokenConfig.protocols,async (protocolInfo,i) => {\n      const protocolAddr = protocolInfo.address.toString().toLowerCase();\n      const addrIndex = addresses.indexOf(protocolAddr);\n      if ( addrIndex !== -1 ) {\n        let protocolApr = this.BNify(+this.toEth(aprs[addrIndex]));\n        let protocolApy = this.apr2apy(protocolApr.div(100)).times(100);\n\n        if (addGovTokens && protocolInfo.name === 'compound'){\n          compAPR = await this.getCompAPR(tokenConfig.token,tokenConfig);\n        }\n\n        protocolsApys[protocolAddr] = protocolApy;\n        protocolsAprs[protocolAddr] = protocolApr;\n      }\n    });\n\n    const tokenAprs = {\n      avgApr: null,\n      avgApy: null\n    };\n\n    if (tokenAllocation){\n      tokenAprs.avgApr = this.getAvgApr(protocolsAprs,tokenAllocation.protocolsAllocations,tokenAllocation.totalAllocation);\n      tokenAprs.avgApy = this.getAvgApr(protocolsApys,tokenAllocation.protocolsAllocations,tokenAllocation.totalAllocation);\n\n      if (compAPR){\n        tokenAprs.avgApr = tokenAprs.avgApr.plus(compAPR);\n        tokenAprs.avgApy = tokenAprs.avgApy.plus(compAPR);\n      }\n\n      // Add $IDLE token APR\n      const idleGovTokenShowAPR = this.getGlobalConfig(['govTokens','IDLE','showAPR']);\n      const idleGovTokenEnabled = this.getGlobalConfig(['govTokens','IDLE','enabled']);\n      if (idleGovTokenEnabled && idleGovTokenShowAPR){\n        const idleGovToken = this.getIdleGovToken();\n        const idleAPR = await idleGovToken.getAPR(tokenConfig.token,tokenConfig);\n        if (idleAPR){\n          tokenAprs.avgApr = tokenAprs.avgApr.plus(idleAPR);\n          tokenAprs.avgApy = tokenAprs.avgApy.plus(idleAPR);\n        }\n      }\n      return this.setCachedDataWithLocalStorage(cachedDataKey,tokenAprs);\n    }\n\n    return null;\n  }\n  abbreviateNumber(value,decimals=3,maxPrecision=5,minPrecision=0){\n\n    const isNegative = parseFloat(value)<0;\n    let newValue = this.BNify(value).abs();\n    const suffixes = [\"\", \"K\", \"M\", \"B\",\"T\"];\n    let suffixNum = 0;\n    while (newValue.gte(1000)) {\n      newValue = newValue.div(1000);\n      suffixNum++;\n    }\n\n    maxPrecision = Math.max(1,maxPrecision);\n\n    // Prevent decimals on integer number\n    if (value>=1000){\n      const decimalPart = decimals ? newValue.mod(1).toFixed(maxPrecision).substr(2,decimals) : null;\n      newValue = parseInt(newValue).toString()+( decimalPart ? '.'+decimalPart : '' );\n    } else {\n      newValue = newValue.toFixed(decimals);\n    }\n\n    // Adjust number precision\n    if (newValue>=1 && (newValue.length-1)>maxPrecision){\n      newValue = parseFloat(newValue).toPrecision(maxPrecision);\n    } else if ((newValue.length-1)<minPrecision) {\n      const difference = minPrecision-(newValue.length-1);\n      const append = this.BNify(value).abs().toString().replace('.','').substr((newValue.length-1),difference);\n      newValue += append;\n    }\n\n    // Add minus if number is negative\n    if (isNegative){\n      newValue = '-'+newValue;\n    }\n\n    newValue += suffixes[suffixNum];\n\n    return newValue;\n  }\n  getFormattedBalance(balance,label,decimals,maxLen,highlightedDecimals){\n    const defaultValue = '-';\n    decimals = !isNaN(decimals) ? decimals : 6;\n    maxLen = !isNaN(maxLen) ? maxLen : 10;\n    highlightedDecimals = !isNaN(highlightedDecimals) ? highlightedDecimals : 0;\n    balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n\n    const numLen = balance.toString().replace('.','').length;\n    if (numLen>maxLen){\n      decimals = Math.max(0,decimals-(numLen-maxLen));\n      balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n    }\n\n    const intPart = Math.floor(balance);\n    let decPart = (balance%1).toPrecision(decimals).substr(2,decimals);;\n    decPart = (decPart+(\"0\".repeat(decimals))).substr(0,decimals);\n\n    if (highlightedDecimals){\n      const highlightedDec = decPart.substr(0,highlightedDecimals);\n      decPart = decPart.substr(highlightedDecimals);\n      const highlightedIntPart = (<Text.span fontSize={'100%'} color={'blue'} fontWeight={'inerith'}>{intPart}.{highlightedDec}</Text.span>);\n      return !isNaN(this.trimEth(balance)) ? ( <>{highlightedIntPart}<small style={{fontSize:'70%'}}>{decPart}</small> <Text.span fontSize={[1,2]}>{label}</Text.span></> ) : defaultValue;\n    } else {\n      return !isNaN(this.trimEth(balance)) ? ( <>{intPart}<small>.{decPart}</small>{ label !== '%' ? ' ' : null }{ label ? <Text.span fontSize={[1,2]}>{label}</Text.span> : null }</> ) : defaultValue;\n    }\n  }\n};\n\nexport default FunctionsUtil;","import React, { Component } from 'react';\nimport styles from './DashboardCard.module.scss';\nimport { Flex, Icon, Heading, Card, Tooltip } from \"rimble-ui\";\n\nclass DashboardCard extends Component {\n\n  state = {\n    mouseOver:false\n  }\n\n  setMouseOver(mouseOver){\n    this.setState({\n      mouseOver\n    });\n  }\n\n  render() {\n    const isDisabled = this.props.isDisabled;\n    const isActive = this.props.isActive && !isDisabled;\n    const isInteractive = this.props.isInteractive && !isDisabled;\n    const isVisible = typeof this.props.isVisible !== 'undefined' ? this.props.isVisible : true;\n    const isRainbow = typeof this.props.isRainbow !== 'undefined' ? this.props.isRainbow : false;\n\n    const cardProps = {\n      p:0,\n      border:1,\n      boxShadow:1,\n      borderRadius:2,\n      borderColor:null,\n      position:'relative',\n      minHeight:'initial',\n      backgroundColor:'cardBg'\n    };\n\n    if (isActive || (isInteractive && this.state.mouseOver)){\n      cardProps.border = 2;\n      cardProps.boxShadow = null;\n      cardProps.backgroundColor = 'cardBgHover';\n    }\n\n    // Replace props\n    if (this.props.cardProps && Object.keys(this.props.cardProps).length){\n      Object.keys(this.props.cardProps).forEach(p => {\n        cardProps[p] = this.props.cardProps[p];\n      });\n    }\n\n    const className = [\n      styles.defaultOpacity,\n      isActive ? styles.active : null,\n      !isVisible ? styles.hidden : null,\n      isRainbow ? styles.rainbow : null,\n      isDisabled ? styles.disabled : null,\n      isInteractive ? styles.interactive : null,\n    ];\n\n    if (this.props.className && styles[this.props.className]){\n      className.push(styles[this.props.className]);\n    }\n\n    return (\n      <Card\n        {...cardProps}\n        className={className}\n        onClick={this.props.handleClick}\n        onMouseOut={(e) => this.setMouseOver(false)}\n        onMouseOver={(e) => this.setMouseOver(true)}\n      >\n        {\n          this.props.title && this.props.title.length>0 &&\n            <Flex\n              mt={[3,4]}\n              ml={[3,4]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              {...this.props.titleParentProps}\n            >\n              <Heading.h4\n                fontWeight={4}\n                fontSize={[2,3]}\n                textAlign={'left'}\n                color={'dark-gray'}\n                lineHeight={'initial'}\n                {...this.props.titleProps}\n              >\n                {this.props.title}\n              </Heading.h4>\n              {\n                this.props.description && this.props.description.length>0 &&\n                  <Tooltip\n                    placement={'top'}\n                    message={this.props.description}\n                  >\n                    <Icon\n                      ml={2}\n                      name={\"Info\"}\n                      size={'1em'}\n                      color={'cellTitle'}\n                    />\n                  </Tooltip>\n              }\n            </Flex>\n        }\n        {this.props.children}\n      </Card>\n    );\n  }\n}\n\nexport default DashboardCard;","import Footer from '../Footer/Footer';\nimport styles from './Tos.module.scss';\nimport React, { Component } from 'react';\nimport { Box, Flex, Text, Heading } from 'rimble-ui'\n\nclass Tos extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} pb={[3,5]} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} pb={3} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.2em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                Terms of Service\n              </Heading.h1>\n              <Heading.h2 fontWeight={'400'} lineHeight={['1.4em', '2em']} fontSize={[2,3]} textAlign={'center'} color={'white'}>\n                Updated: November 28, 2019\n              </Heading.h2>\n            </Flex>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"70em\"]} mx={'auto'} textAlign={'center'}>\n              <Box className={styles.textContainer} alignItems={'center'} width={'100%'} minHeight={['auto','20em']} backgroundColor={'white'} color={'dark-gray'} p={[3,4]} boxShadow={'0 0 25px 5px rgba(102, 139, 255, 0.7)'} borderRadius={'15px'} style={{position:'relative'}}>\n                <Box id={'first-paragraph'} pb={3}>\n                  <Text pb={3}>\n                    These terms of service, together with any documents and additional terms they expressly incorporate by reference (collectively, these “Terms”), are entered into between Idle Labs Inc. (“Idle,” “we,” “us” and “our”) and you or the company or other legal entity you represent (“you” or “your”), and constitute a binding legal agreement.\n                  </Text>\n                  <Text pb={3}>\n                    Please read these Terms carefully, as these Terms govern your use of our Portal and our Services, and expressly cover your rights and obligations, and our disclaimers and limitations of legal liability, relating to such use. By accessing or using the Interface, you signify that you have read, understand, and agree to be bound by and to comply with these Terms, including the mandatory arbitration provision in Section 12. If you do not agree to these Terms, you must not access or use our Portal or the Services.\n                  </Text>\n                  <Text pb={3}>\n                    You must be able to form a legally binding contract online either on behalf of a company or as an individual. Accordingly, you represent that: (a) if you are agreeing to these Terms on behalf of a company or other legal entity, you have the legal authority to bind the company or other legal entity to these Terms; and (b) you are at least 18 years old (or the age of majority where you reside, whichever is older), can form a legally binding contract online, and have the full, right, power and authority to enter into and to comply with the obligations under these Terms.\n                  </Text>\n                  <Text pb={3}>\n                    In addition to the foregoing, you also represent and warrant that you are not a citizen or resident of a state, country, territory or other jurisdiction that is embargoed by the United States or where your use of the Portal or the Services would be illegal or otherwise violate any applicable law.  Specifically, you represent that you are not located in, organized in, or a resident of New York, Cuba, Iran, Syria, North Korea, the Crimea region, Venezuela, or any other jurisdiction where Applicable law prohibits you from accessing or using the Services; and you represent that you are not be named on the Office of Foreign Asset Control of the U.S. Department of the Treasury’s Specially Designated and Blocked Persons List.\n                   </Text>\n                  <Text>\n                    Please carefully review the disclosures and disclaimers set forth in Section 9 in their entirety before using any software developed by Idle. The information in Section 9 provides important details about the legal obligations associated with your use of the Idle open-source software. By accessing or using our Portal or our Services, you agree that Idle is a provider of open-source software that optimizes the allocation of your digital assets to third-party decentralized web protocols.  Idle is not affiliated with and has no control over these third-party protocols and is not responsible for any losses that occur as a result of interconnection with these third-party protocols. The Protocol is open-source software deployed on the Ethereum Blockchain.  While Idle developed and deployed the Protocol, the software operates in an autonomous fashion on a decentralized network and, as a result, Idle has no control over user transactions. You accordingly acknowledge that you use the Services at your own risk and agree that Idle will not be responsible for any losses that occur as a result of your use of the Services.\n                  </Text>\n                </Box>\n\n                <Box id={'key-definitions'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    1. KEY DEFINITIONS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    For the purpose of these Terms, the following capitalized terms shall have the following meanings:\n                  </Text>\n\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>1.1. “Affiliate”</strong> means, with respect to a party to these Terms, any legal entity that, directly or indirectly controls, is controlled by, or is under common control with such party.\n                    </li>\n                    <li>\n                      <strong>1.2. “Applicable Law”</strong> means any domestic or foreign law, rule, statute, regulation, by-law, order, protocol, code, decree, or other directive, requirement or guideline, published or in force which applies to or is otherwise intended to govern or regulate any person, property, transaction, activity, event or other matter, including any rule, order, judgment, directive or other requirement or guideline issued by any Governmental Authority having jurisdiction over Idle, you, the Portal or the Services, or as otherwise duly enacted, enforceable by law, the common law or equity.\n                    </li>\n                    <li>\n                      <strong>1.3. “Ether”</strong> means the Ethereum Blockchain utility token that may be used to purchase computational resources to run decentralized applications or perform actions on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.4. “Ethereum Address”</strong> means the unique public key digital asset identifier that points to an Ethereum-compatible wallet to which Ether may be sent or stored.\n                    </li>\n                    <li>\n                      <strong>1.5. “Ethereum Blockchain”</strong> means the underlying blockchain infrastructure which the Portal leverages to perform portions of the Services.\n                    </li>\n                    <li>\n                      <strong>1.6. “Governmental Authority”</strong> includes any domestic or foreign federal, provincial or state, municipal, local or other governmental, regulatory, judicial or administrative authority.\n                    </li>\n                    <li>\n                      <strong>1.7. “Portal”</strong> means the Idle site located at https://idle.finance and all associated sites linked thereto by Idle and its Affiliates, which includes, for certainty, Idle’s decentralized application layer on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.8. “Protocol”</strong> means the Idle decentralized web protocol, which optimizes the allocation of users’ digital assets to third-party decentralized web protocols.\n                    </li>\n                    <li>\n                      <strong>1.9. “Token”</strong> means an “ERC-20” digital asset issued on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.10. “Services”</strong> has the meaning set out in Section 3.1.\n                    </li>\n                    <li>\n                      <strong>1.11. “Third-Parties Services”</strong> means other services (such as fiat-to-token gateway, or token-to-token swap) provided by third parties services running on Ethereum Blockchain.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'modifications-terms'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    2. MODIFICATIONS TO THESE TERMS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    We reserve the right, in our sole discretion, to modify these Terms from time to time. If we make changes, we will provide you with notice of such changes, such as by sending an email, providing a notice through our Services or updating the date at the top of these Terms. Unless we say otherwise in our notice, any and all such modifications are effective immediately, and your continued use of our Services after we provide such notice will confirm your acceptance of the changes. If you do not agree to the amended Terms, you must stop using our Services.\n                  </Text>\n                </Box>\n\n                <Box id={'services'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    3. SERVICES\n                  </Heading.h3>\n                </Box>\n\n                <ul className={styles.list}>\n                  <li>\n                    <strong>3.1. Services</strong><br />\n                    The primary purpose of the Portal and Protocol is to enable users to interact with smart contracts that allocate their digital assets to third-party decentralized web protocols and enable users to receive an optimized allocation of digital assets from these protocols in return (the “Services”).\n                  </li>\n                  <li>\n                    <strong>3.2. Fees</strong><br />\n                    Use of the Services is provided to you at no charge. Fees are charged on-top of Third-Parties.\n                  </li>\n                  <li>\n                    <strong>3.3. Ethereum Gas Charges</strong><br />\n                    Some Services involve the use of the Ethereum Blockchain, which may require that you pay a fee, commonly known as “Ethereum Gas Charges,” for the computational resources required to perform a transaction on the Ethereum Blockchain. You acknowledge and agree that Idle has no control over: (a) any Ethereum Blockchain transactions; (b) the method of payment of any Ethereum Gas Charges; or (c) any actual payments of Ethereum Gas Charges. Accordingly, you must ensure that you have a sufficient balance of Ether stored at your Ethereum Address to complete any transaction on the Ethereum Blockchain before initiating such Ethereum Blockchain transaction. We will make reasonable efforts to notify you of any Ethereum Gas Charges before initiating any Services that require the use of the Ethereum Blockchain.\n                  </li>\n                  <li>\n                    <strong>3.4. Conditions and Restrictions</strong><br />\n                    We may, at any time and in our sole discretion, restrict your access to, or otherwise impose conditions or restrictions upon your use of, the Services or the Portal, with or without prior notice.\n                  </li>\n                  <li>\n                    <strong>3.5. No Broker, Legal or Fiduciary Relationship</strong><br />\n                    Idle is not your broker, lawyer, intermediary, agent, or advisor and has no fiduciary relationship or obligation to you regarding any other decisions or activities that you effect when using the Portal or the Services. Neither our communications nor any information that we provide to you is intended as, or shall be considered or construed as, advice.\n                  </li>\n                  <li>\n                    <strong>3.6. Your Responsibilities</strong><br />\n                    As a condition to accessing or using the Services or the Portal, you shall:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>only use the Services and the Portal for lawful purposes and in accordance with these Terms;</li>\n                      <li>ensure that, at all times, all information that you provide on the Portal is current, complete and accurate; and maintain the security and confidentiality of your Ethereum Address.</li>\n                      <li>shall be responsible for payment of all applicable taxes, if any, to which the Services might be subject and any and all other taxes which may apply to you.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.7. Unacceptable Use or Conduct</strong><br />\n                    As a condition to accessing or using the Portal or the Services, you will not:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>violate any Applicable Law, including, without limitation, any relevant and applicable anti-money laundering and anti-terrorist financing laws, such as the Bank Secrecy Act, each as may be amended;</li>\n                      <li>infringe on or misappropriate any contract, intellectual property or other third-party right, or commit a tort while using the Portal or the Services;</li>\n                      <li>use the Services in any manner that could interfere with, disrupt, negatively affect, or inhibit other users from fully enjoying the Services, or that could damage, disable, overburden, or impair the functioning of the Services in any manner;</li>\n                      <li>attempt to circumvent any content filtering techniques or security measures that Idle employs on the Portal, or attempt to access any service or area of the Portal or the Services that you are not authorized to access;</li>\n                      <li>use the Services to pay for, support, or otherwise engage in any illegal gambling activities, fraud, money-laundering, or terrorist activities, or other illegal activities;</li>\n                      <li>use any robot, spider, crawler, scraper, or other automated means or interface not provided by us, to access the Services or to extract data;</li>\n                      <li>introduce any malware, virus, Trojan horse, worm, logic bomb, drop-dead device, backdoor, shutdown mechanism or other harmful material into the Portal or the Services;</li>\n                      <li>provide false, inaccurate, or misleading information;</li>\n                      <li>post content or communications on the Portal that are, in our sole discretion, libelous, defamatory, profane, obscene, pornographic, sexually explicit, indecent, lewd, vulgar, suggestive, harassing, hateful, threatening, offensive, discriminatory, bigoted, abusive, inflammatory, fraudulent, deceptive or otherwise objectionable;</li>\n                      <li>post content on the Portal containing unsolicited promotions, political campaigning, or commercial messages or any chain messages or user content designed to deceive or trick the user of the Service;</li>\n                      <li>use the Portal or the Services from a jurisdiction that we have, in our sole discretion, or a relevant Governmental Authority has determined is a jurisdiction where the use of the Portal or the Services is prohibited; or</li>\n                      <li>encourage or induce any third party to engage in any of the activities prohibited under this Section 3.7.</li>\n                    </ul>\n                  </li>\n\n                  <li>\n                    <strong>3.8. Your Assumption of Risks</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>have the necessary technical expertise and ability to review and evaluate the security, integrity and operation of any transactions that you engage in through the Protocol;</li>\n                      <li>have the knowledge, experience, understanding, professional advice and information to make your own evaluation of the merits, risks and applicable compliance requirements under Applicable Law of engaging in transactions through the Protocol;</li>\n                      <li>acknowledge and understand that the Protocol allocates your digital assets to third-party decentralized web protocols to facilitate your lending and borrowing through these third-party protocols and that Idle is not responsible or liable for these transactions or the operation of these third-party protocols;</li>\n                      <li>know, understand and accept the risks associated with your Ethereum Address, the Ethereum Blockchain, Ether and Tokens; and</li>\n                      <li>accept the risks associated with lending, borrowing and trading Ether and Tokens, and are responsible for conducting your own independent analysis of the risks specific to any Ether and Tokens lent, borrowed or traded by you and your use of the Services.</li>\n                    </ul>\n                    You hereby assume, and agree that Idle will have no responsibility or liability for, such risks. You hereby irrevocably waive, release and discharge all claims, whether known or unknown to you, against Idle, its affiliates and their respective shareholders, members, directors, officers, employees, agents and representatives related to any of the risks set forth herein.\n                  </li>\n                  <li>\n                    <strong>3.9. Additional Representations</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>are not using the Protocol to engage in the leveraged, margined, or financed purchase of digital assets; and</li>\n                      <li>are using the Protocol for the purpose of accessing third-party decentralized web protocols.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.10. Your Content</strong><br />\n                    You hereby grant to us a royalty-free, fully paid-up, sublicensable, transferable, perpetual, irrevocable, non-exclusive, worldwide license to use, copy, modify, create derivative works of, display, perform, publish and distribute, in any form, medium or manner, any content that is available to other users via the Idle Platform as a result of your use of the Portal (collectively, “Your Content”) through your use of the Services or the Portal, including, without limitation, for promoting Idle (or its Affiliates), the Services or the Portal. You represent and warrant that: (a) you own Your Content or have the right to grant the rights and licenses in these Terms; and (b) Your Content and our use of Your Content, as licensed herein, does not and will not violate, misappropriate or infringe on any third party’s rights.\n                  </li>\n                </ul>\n\n                <Box id={'privacy-policy'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    4. PRIVACY POLICY\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please refer to our privacy policy available at https://idle.finance/privacy-policy for information about how we collect, use, share and otherwise process information about you.\n                  </Text>\n                </Box>\n\n                <Box id={'proprietary-rights'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    5. PROPRIETARY RIGHTS\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>5.1. Ownership of Services; License to Services</strong><br />\n                      Excluding any open source software (as further described in Section 5.2) or third-party software that the Portal or the Services incorporates, as between you and Idle, Idle owns the Portal and the Services, including all technology, content and other materials used, displayed or provided on the Portal or in connection with the Services (including all intellectual property rights subsisting therein), and hereby grants you a limited, revocable, transferable, license to access and use those portions of the Portal and the Services that are proprietary to Idle.\n                    </li>\n                    <li>\n                      <strong>5.2. Idle License; Open Source Software License; Limitations</strong><br />\n                      The Portal and the Services are governed by the most recent version of the open source license commonly known as the Apache 2.0 a copy of which (as it applies to the Portal and the Services) can be found at:  https://apache.org/licenses/LICENSE-2.0 (as of the date these Terms were last updated) and any other applicable licensing terms for the Portal and the Services in these Terms (collectively, the “Idle License”). You acknowledge that the Portal or the Services may use, incorporate or link to certain open-source components and that your use of the Portal or Services is subject to, and you will comply with any, applicable open-source licenses that govern any such open-source components (collectively, “Open-Source Licenses”). Without limiting the generality of the foregoing, you may not: (a) resell, lease, lend, share, distribute or otherwise permit any third party to use the Portal or the Services; (b) use the Portal or the Services for time-sharing or service bureau purposes; or (c) otherwise use the Portal or the Services in a manner that violates the Idle License or any other Open-Source Licenses.\n                    </li>\n                    <li>\n                      <strong>5.3. Trademarks</strong><br />\n                      Any of Idle’s product or service names, logos, and other marks used in the Portal or as a part of the Services, including Idle's name and logo are trademarks owned by Idle, its Affiliates or its applicable licensors. You may not copy, imitate or use them without Idle’s (or the applicable licensor’s) prior written consent.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'changes-suspension-termination'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    6. CHANGES; SUSPENSION; TERMINATION\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>6.1. Changes to Services</strong><br />\n                      We may, at our sole discretion, from time to time and with or without prior notice to you, modify, suspend or disable, temporarily or permanently, the Services, in whole or in part, for any reason whatsoever, including, but not limited to, as a result of a security incident.\n                    </li>\n                    <li>\n                      <strong>6.2. No Liability</strong><br />\n                      We will not be liable for any losses suffered by you resulting from any modification to any Services or from any suspension or termination, for any reason, of your access to all or any portion of the Portal or the Services.\n                    </li>\n                    <li>\n                      <strong>6.3. Survival</strong><br />\n                      The following sections will survive any termination of your access to the Portal or the Services, regardless of the reasons for its expiration or termination, in addition to any other provision which by law or by its nature should survive: Sections 1, 4, 5, 6.3, and 7-14.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'electronic-notices'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    7. ELECTRONIC NOTICES\n                  </Heading.h3>\n                  <Text py={2}>\n                    You consent to receive all communications, agreements, documents, receipts, notices, and disclosures electronically (collectively, our “Communications”) that we provide in connection with these Terms or any Services. You agree that we may provide our Communications to you by posting them on the Portal or by emailing them to you at the email address you provide in connection with using the Services, if any. You should maintain copies of our Communications by printing a paper copy or saving an electronic copy. You may also contact our support team to request additional electronic copies of our Communications by filing a support request at info@idle.finance.\n                  </Text>\n                </Box>\n\n                <Box id={'indemnification'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    8. INDEMNIFICATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    You will defend, indemnify, and hold harmless us, our Affiliates, and our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers and contractors (collectively, “Indemnified Parties”) from any claim, demand, lawsuit, action, proceeding, investigation, liability, damage, loss, cost or expense, including without limitation reasonable attorneys’ fees, arising out of or relating to (a) your use of, or conduct in connection with, the Portal, Services or Margin Tokens; (b) Ethereum Blockchain assets associated with your Ethereum Address; (c) any feedback or user content you provide to the Portal, if any; (d) your violation of these Terms; or (e) your infringement or misappropriation of the rights of any other person or entity. If you are obligated to indemnify any Indemnified Party, Idle (or, at its discretion, the applicable Indemnified Party) will have the right, in its sole discretion, to control any action or proceeding and to determine whether Idle wishes to settle, and if so, on what terms.\n                  </Text>\n                </Box>\n\n                <Box id={'disclosures-disclaimers'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    9. Disclosures; DISCLAIMERS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Idle is a developer of open-source software. Idle does not operate a digital asset exchange platform or execute peer-to-peer transactions through its Protocol and therefore has no oversight, involvement, or control with respect to your transactions, which are executed through third-party protocols and the Ethereum Blockchain.  The Protocol is an autonomous decentralized web protocol deployed to the Ethereum Blockchain that operates in a disintermediated fashion, and, as such, Idle does not participate in any of these transactions.  In each instance, when you interact with the Protocol, you are interacting with a smart contract that transfers your digital assets to a third-party protocol.\n                  </Text>\n                  <Text py={2}>\n                    [Under U.S. federal law, unless you are an “eligible contract participant” as defined in 7 U.S.C. § 1a(18), your transaction must settle within 28 days. Individuals who do not have more than $10 million invested on a discretionary basis (or $5 million if the transaction is for the purpose of managing risk associated with an asset owned or liability incurred, or reasonably likely to be owned or incurred) are not eligible contract participants and may not enter into transactions using the Idle open-source software that do not result in actual delivery of digital assets within 28 days.]\n                  </Text>\n                  <Text py={2}>\n                    You are responsible for complying with all laws and regulations applicable to your transactions, including, but not limited to, the Commodity Exchange Act and the regulations promulgated thereunder by the U.S. Commodity Futures Trading Commission (“CFTC”), and the federal securities laws and the regulations promulgated thereunder by the U.S. Securities and Exchange Commission (“SEC”).\n                  </Text>\n                  <Text py={2}>\n                    You understand that Idle is not registered or licensed by the CFTC, SEC, the Financial Crimes Enforcement Network or any financial regulatory authority. No financial regulatory authority has reviewed or approved the use of the Idle open-source software. This website and the Idle open-source software do not constitute advice or a recommendation concerning any commodity, security or other asset. Idle is not acting as an investment adviser or commodity trading adviser to any person.\n                  </Text>\n                  <Text py={2}>\n                    Idle does not own or control the underlying software protocols that enable the Protocol to function. In general, the underlying protocols are open-source and anyone can use, copy, modify, and distribute them. Idle is not responsible for operation of the underlying protocols, and Idle makes no guarantee of their functionality, security, or availability.\n                  </Text>\n                  <Text py={2}>\n                    To the maximum extent permitted under Applicable Law, the Portal and the Services (and any of their content or functionality) provided by or on behalf of us are provided on an “AS IS” and “AS AVAILABLE” basis, and we expressly disclaim, and you hereby waive, any representations, conditions or warranties of any kind, whether express or implied, legal, statutory or otherwise, or arising from statute, otherwise in law, course of dealing, or usage of trade, including, without limitation, the implied or legal warranties and conditions of merchantability, merchantable quality, quality or fitness for a particular purpose, title, security, availability, reliability, accuracy, quiet enjoyment and non-infringement of third party rights. Without limiting the foregoing, we do not represent or warrant that the Portal or the Services (including any data relating thereto) will be uninterrupted, available at any particular time or error-free. Further, we do not warrant that errors in the Portal or the Service are correctable or will be correctable.\n                  </Text>\n                  <Text py={2}>\n                    You acknowledge that your data on the Portal may become irretrievably lost or corrupted or temporarily unavailable due to a variety of causes, and agree that, to the maximum extent permitted under Applicable Law, we will not be liable for any loss or damage caused by denial-of-service attacks, software failures, viruses or other technologically harmful materials (including those which may infect your computer equipment), protocol changes by third party providers, Internet outages, force majeure events or other disasters, scheduled or unscheduled maintenance, or other causes either within or outside our control.\n                  </Text>\n                  <Text py={2}>\n                    The disclaimer of implied warranties contained herein may not apply if and to the extent such warranties cannot be excluded or limited under the Applicable Law of the jurisdiction in which you reside.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    10. EXCLUSION OF CONSEQUENTIAL AND RELATED DAMAGES\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall we (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) be liable for any incidental, indirect, special, punitive, consequential or similar damages or liabilities whatsoever (including, without limitation, damages for loss of data, information, revenue, goodwill, profits or other business or financial benefit) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any execution or settlement of a transaction, any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability, breach of warranties, or under any other theory of liability, and whether or not we have been advised of, knew of or should have known of the possibility of such damages and notwithstanding any failure of the essential purpose of these Terms or any limited remedy hereunder nor is Idle in any way responsible for the execution or settlement of transactions between users of Idle open-source software.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    11. LIMITATION OF LIABILITY\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall our aggregate liability (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability or other theory of liability exceed the amount of fees paid by you to us under these Terms, if any, in the twelve (12) month period immediately preceding the event giving rise to the claim for liability.\n                  </Text>\n                </Box>\n\n                <Box id={'dispute-resolution-arbitration'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    12. DISPUTE RESOLUTION AND ARBITRATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please read the following section carefully because it requires you to arbitrate certain disputes and claims with Idle and limits the manner in which you can seek relief from us, unless you opt out of arbitration by following the instructions set forth below. In addition, arbitration precludes you from suing in court or having a jury trial.\n                    You and Idle agree that any dispute arising out of or related to these Terms or our Services is personal to you and Idle and that any dispute will be resolved solely through individual action, and will not be brought as a class arbitration, class action or any other type of representative proceeding.\n                  </Text>\n                  <Text py={2}>\n                    Except for small claims disputes in which you or Idle seeks to bring an individual action in small claims court located in the county of your billing address or disputes in which you or Idle seeks injunctive or other equitable relief for the alleged unlawful use of intellectual property, you and Idle waive your rights to a jury trial and to have any dispute arising out of or related to these Terms or our Services resolved in court. Instead, for any dispute or claim that you have against Idle or relating in any way to the Services, you agree to first contact Idle and attempt to resolve the claim informally by sending a written notice of your claim (“Notice”) to Idle by email at info@idle.finance or by certified mail addressed to info@idle.finance. The Notice must (a) include your name, residence address, email address, and telephone number; (b) describe the nature and basis of the claim; (c) set forth the specific relief sought. Our notice to you will be similar in form to that described above. If you and Idle cannot reach an agreement to resolve the claim within thirty (30) days after such Notice is received, then either party may submit the dispute to binding arbitration administered by JAMS or, under the limited circumstances set forth above, in court. All disputes submitted to JAMS will be resolved through confidential, binding arbitration before one arbitrator. Arbitration proceedings will be held in New York City, New York, in accordance with the JAMS Streamlined Arbitration Rules and Procedures (“JAMS Rules”). The most recent version of the JAMS Rules are available on the JAMS website and are hereby incorporated by reference. You either acknowledge and agree that you have read and understand the JAMS Rules or waive your opportunity to read the JAMS Rules and waive any claim that the JAMS Rules are unfair or should not apply for any reason.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that these Terms affect interstate commerce and that the enforceability of this Section 12 will be substantively and procedurally governed by the Federal Arbitration Act, 9 U.S.C. § 1, et seq. (the “FAA”), to the maximum extent permitted by applicable law. As limited by the FAA, these Terms and the JAMS Rules, the arbitrator will have exclusive authority to make all procedural and substantive decisions regarding any dispute and to grant any remedy that would otherwise be available in court, including the power to determine the question of arbitrability. The arbitrator may conduct only an individual arbitration and may not consolidate more than one individual’s claims, preside over any type of class or representative proceeding or preside over any proceeding involving more than one individual.\n                  </Text>\n                  <Text py={2}>\n                    The arbitrator, Idle, and you will maintain the confidentiality of any arbitration proceedings, judgments and awards, including, but not limited to, all information gathered, prepared and presented for purposes of the arbitration or related to the dispute(s) therein. The arbitrator will have the authority to make appropriate rulings to safeguard confidentiality, unless the law provides to the contrary. The duty of confidentiality does not apply to the extent that disclosure is necessary to prepare for or conduct the arbitration hearing on the merits, in connection with a court application for a preliminary remedy or in connection with a judicial challenge to an arbitration award or its enforcement, or to the extent that disclosure is otherwise required by law or judicial decision.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that for any arbitration you initiate, you will pay the filing fee and Idle will pay the remaining JAMS fees and costs. For any arbitration initiated by Idle, Idle will pay all JAMS fees and costs. You and Idle agree that the state or federal courts of the State of New York and the United States sitting in New York City, New York have exclusive jurisdiction over any appeals and the enforcement of an arbitration award.\n                  </Text>\n                  <Text py={2}>\n                    Any claim arising out of or related to these Terms or our Services must be filed within one year after such claim arose; otherwise, the claim is permanently barred, which means that you and Idle will not have the right to assert the claim.\n                  </Text>\n                  <Text py={2}>\n                    You have the right to opt out of binding arbitration within 30 days of the date you first accepted the terms of this Section 12 by emailing us at info@idle.finance. In order to be effective, the opt-out notice must include your full name and address and clearly indicate your intent to opt out of binding arbitration. By opting out of binding arbitration, you are agreeing to resolve disputes in accordance with Section 13.\n                  </Text>\n                  <Text py={2}>\n                    If any portion of this Section 12 is found to be unenforceable or unlawful for any reason, (a) the unenforceable or unlawful provision shall be severed from these Terms; (b) severance of the unenforceable or unlawful provision shall have no impact whatsoever on the remainder of this Section 12 or the parties’ ability to compel arbitration of any remaining claims on an individual basis pursuant to this Section 12; and (c) to the extent that any claims must therefore proceed on a class, collective, consolidated, or representative basis, such claims must be litigated in a civil court of competent jurisdiction and not in arbitration, and the parties agree that litigation of those claims shall be stayed pending the outcome of any individual claims in arbitration. Further, if any part of this Section 12 is found to prohibit an individual claim seeking public injunctive relief, that provision will have no effect to the extent such relief is allowed to be sought out of arbitration, and the remainder of this Section 12 will be enforceable.\n                  </Text>\n                </Box>\n\n                <Box id={'governing-law'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    13. GOVERNING LAW\n                  </Heading.h3>\n                  <Text py={2}>\n                    The interpretation and enforcement of these Terms, and any dispute related to these Terms, the Portal or the Services, will be governed by and construed and enforced in accordance with the laws of the State of Delaware, as applicable, without regard to conflict of law rules or principles (whether of the State of Delaware or any other jurisdiction) that would cause the application of the laws of any other jurisdiction. You agree that we may initiate a proceeding related to the enforcement or validity of our intellectual property rights in any court having jurisdiction. With respect to any other proceeding that is not subject to arbitration under these Terms, the state and federal courts located in Wilmington, Delaware, will have exclusive jurisdiction. You waive any objection to venue in any such courts.\n                  </Text>\n                </Box>\n\n                <Box id={'miscellaneous'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    14. MISCELLANEOUS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Any right or remedy of Idle set forth in these Terms is in addition to, and not in lieu of, any other right or remedy whether described in these Terms, under Applicable Law, at law or in equity. Our failure or delay in exercising any right, power, or privilege under these Terms shall not operate as a waiver thereof. The invalidity or unenforceability of any of these Terms shall not affect the validity or enforceability of any other of these Terms, all of which shall remain in full force and effect. We will have no responsibility or liability for any failure or delay in performance of the Portal or any of the Services, or any loss or damage that you may incur, due to any circumstance or event beyond our control, including without limitation any flood, extraordinary weather conditions, earthquake, or other act of God, fire, war, insurrection, riot, labor dispute, accident, action of government, communications, power failure, or equipment or software malfunction. You may not assign or transfer any right to use the Portal or the Services, or any of your rights or obligations under these Terms, without our express prior written consent, including by operation of law or in connection with any change of control. We may assign or transfer any or all of our rights or obligations under these Terms, in whole or in part, without notice or obtaining your consent or approval. Headings of sections are for convenience only and shall not be used to limit or construe such sections. These Terms contain the entire agreement and supersede all prior and contemporaneous understandings between the parties regarding the Portal and the Services. In the event of any conflict between these Terms and any other agreement you may have with us, these Terms will control unless the other agreement specifically identifies these Terms and declares that the other agreement supersedes these Terms.\n                  </Text>\n                </Box>\n\n              </Box>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default Tos;\n","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from 'polished';\n\n// theme.js\nexport default {\n  breakpoints: ['52em', '64em'],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5,\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: ['0', '4px', '8px', '16px', '2rem'],\n  width: [0, 16, 32, 64, 128, 256],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, '1px solid #0d2034','1px solid #475d7c'],\n  borderWidths: ['0', '1px', '2px', '4px'],\n  shadows: [\n    '0',\n    '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    '0 7px 14px rgba(50,50,93,.1)',\n    '1px 1px 0px rgba(0,0,0,0.2)',\n    '0px 0px 16px 2px rgb(71,93,123,0.6)'\n  ],\n  opacity: {\n    disabled: 0.4,\n  },\n  colors: {\n    primary: '#fcfcfc',\n    'gradient-bg': 'linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)',\n    'primary-light': blue.light[1],\n    'primary-dark': blue.dark[1],\n    bgBlue: '#0030e0',\n    blue: '#0036ff',\n    'dark-blue': '#00219a',\n    skyBlue: '#00abfe',\n    lightBlue: '#79f4e1',\n    copyColor: '#fcfcfc',\n    subColor: '#a7a7a7',\n    black: baseColors.black,\n    'near-black': '#1e3657',\n    'dark-gray': '#fcfcfc',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#a4aec6',\n    white: '#fff',\n    transparent: 'transparent',\n    /*\n    NEW COLORS\n    */\n    arrowActive:'#d8d8d8',\n    arrowInactive:'#4f4f4f',\n    selectBgFocused:'#1e3657',\n    selectBg:'#162e4d',\n    backButtonBg:'#162e4d',\n    lineChartStroke:'#a4aec6',\n    wrongNetworkBannerBg:'#0e2133',\n    dashboardBg: '#13273f',\n    statValue: '#a4aec6',\n    boxBorder: '#eeeeee',\n    cellTitle: '#a4aec6',\n    cellText: '#a4aec6',\n    divider: '#a4aec6',\n    counter: '#a4aec6',\n    redeem: '#00a9fe',\n    deposit: '#0239ff',\n    migrate: '#00a9fe',\n    legend: '#c9c9c9',\n    cardBg:'#162e4d',\n    menuBg:'#162e4d',\n    menuHover:'#1e3657',\n    flashColor:'#bac5ff',\n    cardBgHover:'#1e3657',\n    cardBorder:'#0d2034',\n    menuRightBorder:'#0d2034',\n    cardHoverShadow:'0px 0px 0px 1px rgb(45 74 114)',\n    transactions:{\n      action:{\n        send:'#10a0dd',\n        swap:'#3d53c0',\n        boost:'#ffff00',\n        redeem:'#10a0dd',\n        swapout:'#10a0dd',\n        deposit:'#3d53c0',\n        curvein:'#10a0dd',\n        receive:'#3d53c0',\n        migrate:'#3d53c0',\n        default:'#4f4f4f',\n        curveout:'#3d53c0',\n        withdraw:'#10a0dd',\n        curvedepositin:'#10a0dd',\n        curvedepositout:'#3d53c0'\n      },\n      actionBg:{\n        send:'#ceeff6',\n        swap:'#ced6ff',\n        boost:'#ff7979',\n        redeem:'#ceeff6',\n        swapout:'#ceeff6',\n        deposit:'#ced6ff',\n        curvein:'#ceeff6',\n        default:'#dadada',\n        receive:'#ced6ff',\n        migrate:'#ced6ff',\n        withdraw:'#ceeff6',\n        curveout:'#ced6ff',\n        curvedepositin:'#ceeff6',\n        curvedepositout:'#ced6ff'\n      },\n      status:{\n        completed:'#00b84a',\n        pending:'#a5a5a5',\n        failed:'#fa0000'\n      }\n    },\n    blacks: [\n      'rgba(0,0,0,.0125)',\n      'rgba(0,0,0,.025)',\n      'rgba(0,0,0,.05)',\n      'rgba(0,0,0,.1)',\n      'rgba(0,0,0,.2)',\n      'rgba(0,0,0,.3)',\n      'rgba(0,0,0,.4)',\n      'rgba(0,0,0,.5)',\n      'rgba(0,0,0,.6)',\n      'rgba(0,0,0,.7)',\n      'rgba(0,0,0,.8)',\n      'rgba(0,0,0,.9)',\n    ],\n    whites: [\n      'rgba(255,255,255,.0125)',\n      'rgba(255,255,255,.025)',\n      'rgba(255,255,255,.05)',\n      'rgba(255,255,255,.1)',\n      'rgba(255,255,255,.2)',\n      'rgba(255,255,255,.3)',\n      'rgba(255,255,255,.4)',\n      'rgba(255,255,255,.5)',\n      'rgba(255,255,255,.6)',\n      'rgba(255,255,255,.7)',\n      'rgba(255,255,255,.8)',\n      'rgba(255,255,255,.9)',\n    ],\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base,\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base,\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base,\n    },\n    info: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      '--main-color': blue.base,\n      '--contrast-color': blue.text,\n    },\n    normal: {\n      color: baseColors.black,\n      '--contrast-color': baseColors.black,\n    },\n    success: {\n      '--main-color': green.base,\n      '--contrast-color': green.text,\n    },\n    danger: {\n      '--main-color': red.base,\n      '--contrast-color': red.text,\n    },\n  },\n  buttonSizes: {\n    small: {\n      fontSize: '0.75rem',\n      height: '2rem',\n      minWidth: '2rem',\n      padding: '0 1rem',\n    },\n    medium: {\n      fontSize: '1rem',\n      height: '3rem',\n      minWidth: '3rem',\n    },\n    large: {\n      fontSize: '1.5rem',\n      height: '4rem',\n      minWidth: '4rem',\n      borderRadius: '2rem'\n    },\n  },\n};\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class TorusConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Torus, initParams, ...rest } = kwargs;\n    super(rest);\n\n    this.torus = null;\n    this.Torus = Torus;\n    this.initParams = initParams;\n  }\n\n  async onActivation() {\n    if (!this.torus) {\n      this.torus = new this.Torus({\n        buttonPosition: \"bottom-right\" // default: bottom-left\n      });\n    }\n    await this.torus.init();\n    await this.torus.login();\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.torus.provider);\n    });\n  }\n\n  async getAccount(provider) {\n    const userInfo = await this.torus.getUserInfo();\n    if (userInfo){\n      return await this.torus.getPublicAddress({\n        verifier:userInfo.verifier,\n        verifierId:userInfo.verifierId\n      });\n    }\n    return null;\n  }\n\n  async onDeactivation() {\n    await this.torus.logout();\n  }\n\n  changeNetwork(network) {\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class AuthereumConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Authereum, network, ...rest } = kwargs;\n    super(rest);\n\n    this.authereum = null;\n    this.Authereum = Authereum;\n    this.network = network;\n  }\n\n  async onActivation() {\n    if (!this.authereum) {\n      this.authereum = new this.Authereum(this.network);\n    }\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.authereum.getProvider());\n    });\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      const accounts = await provider.getAccounts();\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.disable();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      api: this.Authereum,\n      network\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletLinkConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletLink, appName, infuraUrl, chainId, appLogoUrl, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.walletLink = null;\n    this.appName = appName;\n    this.chainId = chainId;\n    this.infuraUrl = infuraUrl;\n    this.appLogoUrl = appLogoUrl;\n    this.WalletLink = WalletLink;\n  }\n\n  async onActivation() {\n    if (!this.walletLink){\n      this.walletLink = new this.WalletLink({\n        darkMode: false,\n        appName: this.appName,\n        infuraUrl: this.infuraUrl,\n        appLogoUrl: this.appLogoUrl,\n      });\n    }\n\n    const provider = this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  getProvider(){\n    if (!this.provider){\n      this.provider = this.walletLink.makeWeb3Provider(this.infuraUrl, this.chainId);\n    }\n    return this.provider;\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      // Use eth_RequestAccounts\n      const accounts = await provider.send('eth_requestAccounts');\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = this.getProvider();\n    if (provider){\n      await provider.close();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      network,\n      api: this.WalletLink,\n      appName: this.appName,\n      chainId: this.chainId,\n      infuraUrl: this.infuraUrl,\n      appLogoUrl: this.appLogoUrl,\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletConnectConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletConnectProvider, defaultNetwork, infuraId, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.WalletConnectProvider = WalletConnectProvider;\n    this.infuraId = infuraId;\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.WalletConnectProvider({\n        infuraId:this.infuraId\n      });\n    }\n\n    // console.log('onActivation',this.provider);\n\n    if (this.provider){\n\n      await this.provider.enable();\n\n      /*\n      // Subscribe to accounts change\n      this.provider.on(\"accountsChanged\", (accounts) => {\n        console.log('accountsChanged',accounts);\n      });\n\n      // Subscribe to chainId change\n      this.provider.on(\"chainChanged\", (chainId) => {\n        console.log('chainChanged',chainId);\n      });\n\n      // Subscribe to networkId change\n      this.provider.on(\"networkChanged\", (networkId) => {\n        console.log('networkChanged',networkId);\n      });\n\n      // Subscribe to session connection/open\n      this.provider.on(\"open\", () => {\n        console.log('open');\n      });\n\n      // Subscribe to session disconnection/close\n      this.provider.on(\"close\", (code, reason) => {\n        console.log('close',code, reason);\n      });\n      */\n\n      return this.provider;\n    }\n  }\n\n  async getProvider(){\n    return this.provider;\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.close();\n      return this.provider;\n    }\n  }\n}\n","import WalletLink from 'walletlink';\nimport AuthereumApi from 'authereum';\nimport PortisApi from \"@portis/web3\";\nimport FortmaticApi from \"fortmatic\";\nimport TrezorApi from \"trezor-connect\";\nimport { Connectors } from \"web3-react\";\nimport TorusApi from '@toruslabs/torus-embed';\nimport globalConfigs from '../configs/globalConfigs';\nimport TorusConnector from './connectors/TorusConnector';\nimport AuthereumConnector from './connectors/AuthereumConnector';\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport WalletLinkConnector from './connectors/WalletLinkConnector';\nimport WalletConnectConnector from './connectors/WalletConnectConnector';\n\nconst {\n  InjectedConnector,\n  NetworkOnlyConnector,\n  TrezorConnector,\n  LedgerConnector,\n  FortmaticConnector,\n  PortisConnector\n} = Connectors;\n\nconst env = process.env;\n\nconst manifestEmail = env.REACT_APP_TREZOR_MANIFEST_EMAIL; // trezor\nconst manifestAppUrl = env.REACT_APP_TREZOR_MANIFEST_URL; // trezor\nconst defaultNetwork = globalConfigs.network.requiredNetwork;\nconst fortmaticApiKey = env.REACT_APP_FORTMATIC_KEY_MAINNET;\nconst portisDAppId = env.REACT_APP_PORTIS_DAPP_ID;\nconst portisNetwork = env.REACT_APP_PORTIS_NETWORK;\n\nconst supportedNetworkURLs = {};\n  \nObject.keys(globalConfigs.network.providers.infura).forEach((networkId,index) => {\n  supportedNetworkURLs[networkId] = globalConfigs.network.providers.infura[networkId]+env.REACT_APP_INFURA_KEY;\n});\n\nconst Injected = new InjectedConnector({\n  supportedNetworks: [defaultNetwork]\n});\n\nconst Infura = new NetworkOnlyConnector({\n  providerURL: globalConfigs.network.providers.infura[defaultNetwork]+env.REACT_APP_INFURA_KEY\n});\n\n\nconst Trezor = new TrezorConnector({\n  api: TrezorApi,\n  supportedNetworkURLs,\n  defaultNetwork,\n  manifestEmail,\n  manifestAppUrl\n});\n\nconst Ledger = new LedgerConnector({\n  supportedNetworkURLs,\n  defaultNetwork\n});\n\nconst WalletConnect = new WalletConnectConnector({\n  defaultNetwork,\n  supportedNetworkURLs,\n  api: WalletConnectProvider,\n  infuraId:env.REACT_APP_INFURA_KEY,\n  bridge: \"https://bridge.walletconnect.org\",\n});\n\nconst Fortmatic = new FortmaticConnector({\n  api: FortmaticApi,\n  apiKey: fortmaticApiKey,\n  logoutOnDeactivation: false\n});\n\nconst Portis = new PortisConnector({\n  api: PortisApi,\n  dAppId: portisDAppId,\n  network: portisNetwork\n});\n\nconst Authereum = new AuthereumConnector({\n  api: AuthereumApi,\n  network: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase()\n});\n\nconst walletLink = new WalletLinkConnector({\n  api: WalletLink,\n  darkMode: false,\n  chainId: defaultNetwork,\n  appName: globalConfigs.appName,\n  infuraUrl: supportedNetworkURLs[defaultNetwork],\n  appLogoUrl: 'https://idle.finance/images/idle-mark.png',\n});\n\nconst Torus = new TorusConnector({\n  api: TorusApi,\n  initParams:{\n    buildEnv: 'production', // default: production\n    enableLogging: false, // default: false\n    network: {\n      host: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase(), // default: mainnet\n      chainId: defaultNetwork, // default: 1\n      networkName: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase() // default: Main Ethereum Network\n    },\n    showTorusButton: false // default: true\n  }\n});\n\nexport default {\n  Injected,\n  Infura,\n  WalletConnect,\n  walletLink,\n  Fortmatic,\n  Portis,\n  Authereum,\n  Torus,\n  Trezor,\n  Ledger,\n};","import React from \"react\";\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\n\nclass WrongNetworkBanner extends React.Component {\n  render() {\n    const bannerStyle = {\n      position: \"fixed\",\n      bottom: 0,\n      left: 0,\n      right: 0,\n      width: \"100%\",\n      zIndex: 9999\n    };\n\n    return (\n      <Box style={bannerStyle} backgroundColor={'wrongNetworkBannerBg'} p={3}>\n        <Flex alignItems={\"center\"}>\n          <Box p={4}>\n            <Icon name=\"Warning\" color=\"gold\" size=\"30\" />\n          </Box>\n          <Flex flexDirection={\"column\"}>\n            <Text fontWeight={\"bold\"}>\n              Looks like you're on the wrong network\n            </Text>\n            <Text>\n              You should be on the {this.props.network.required.name} Ethereum\n              network. You are currently connected to the{\" \"}\n              <Text.span style={{ textTransform: \"capitalize\" }}>\n                {this.props.network.current.name}\n              </Text.span>{\" \"}\n              Network - please switch to the correct network.\n            </Text>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default WrongNetworkBanner;\n","import React from \"react\";\n\nimport WrongNetworkBanner from \"./components/WrongNetworkBanner\";\n\nclass NetworkUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        { this.props.network.isCorrectNetwork === false && this.props.web3\n          ?\n            <WrongNetworkBanner\n              network={this.props.network}\n            />\n          :\n            null\n        }\n      </div>\n    );\n  }\n}\n\nexport default NetworkUtil;\n","import React from \"react\";\nimport { Box, Heading, Text, Modal, Link } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport RimbleUtil from \"@rimble/utils\";\n\nclass NoWeb3BrowserModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2\n          fontSize={4}\n          fontWeight={3}\n          lineHeight={\"1.375em\"}\n          my={3}\n        >\n          Switch browsers to use the Idle App\n        </Heading.h2>\n\n        {RimbleUtil.isMobileDevice() ? (\n          <Text my={4}>\n            You can't use our blockchain features, like increasing the count\n            value, in this browser. We recommend using{\" \"}\n            <Link\n              href=\"https://status.im/\"\n              title=\"status.im website\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Status\n            </Link>\n            ,{\" \"}\n            <Link\n              href=\"https://www.cipherbrowser.com/\"\n              title=\"Cipher Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Cipher\n            </Link>{\" \"}\n            or{\" \"}\n            <Link\n              href=\"https://wallet.coinbase.com/\"\n              title=\"Coinbase Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Coinbase wallet\n            </Link>{\" \"}\n            browsers.\n          </Text>\n        ) : (\n          <Box>\n            <Text my={4}>\n              You can't use our blockchain features, like increasing the\n              count value, in this browser. Switch to{\" \"}\n              <Link\n                href=\"https://brave.com/download/\"\n                title=\"Download Brave browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Brave\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.mozilla.org/\"\n                title=\"Download FireFox browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                FireFox\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.opera.com/download\"\n                title=\"Download Opera Browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Opera\n              </Link>\n              , or{\" \"}\n              <Link\n                href=\"https://www.google.com/chrome/\"\n                title=\"Download Chrome browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Chrome\n              </Link>{\" \"}\n              to continue.\n            </Text>\n\n            <Text>\n              <Text.span bold>Rather use your phone?</Text.span> You can use\n              the Idle App in mobile browser wallets like{\" \"}\n              <Link\n                href=\"https://status.im/\"\n                title=\"status.im website\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Status\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.cipherbrowser.com/\"\n                title=\"Cipher Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Cipher\n              </Link>{\" \"}\n              or{\" \"}\n              <Link\n                href=\"https://wallet.coinbase.com/\"\n                title=\"Coinbase Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Coinbase wallet\n              </Link>\n              .\n            </Text>\n          </Box>\n        )}\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWeb3BrowserModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Flex,\n  Icon,\n  Modal,\n  Link,\n  Button\n} from \"rimble-ui\";\n\nclass NoWalletModal extends React.Component {\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card p={5} maxWidth={\"600px\"}>\n          <Button.Text\n            icononly\n            icon={\"Close\"}\n            color={\"moon-gray\"}\n            position={\"absolute\"}\n            top={0}\n            right={0}\n            mt={3}\n            mr={3}\n            onClick={this.props.closeModal}\n          />\n\n          <Flex flexDirection={\"column\"} justifyContent={\"space-between\"}>\n            <Flex justifyContent={\"center\"} my={4}>\n              <Icon name=\"Warning\" color=\"gold\" size=\"40\" />\n            </Flex>\n\n            <Heading.h2 my={3}>No Wallet Available</Heading.h2>\n\n            <Text my={4}>\n              Your current browser does not have a blockchain connected wallet.\n              Try using MetaMask, Fortmatic, Portis.\n            </Text>\n\n            <Link\n              href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              <Button.Outline size=\"small\">Get MetaMask Extension</Button.Outline>\n            </Link>\n          </Flex>\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWalletModal;\n","// Checks for MetaMask\nconst GeneralUtil = {\n  hasMetaMask: () => {\n    let hasMetaMask = false;\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasMetaMask = typeof window.ethereum.isMetaMask !== \"undefined\";\n    } else if (typeof window.web3 !== 'undefined') {\n      hasMetaMask = typeof window.web3.currentProvider.isMetaMask !== 'undefined' && window.web3.currentProvider.isMetaMask;\n    }\n\n    return hasMetaMask;\n  },\n  isTrustWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isTrust !== 'undefined' && window.web3.currentProvider.isTrust;\n    }\n    return false;\n  },\n  isCoinbaseWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isCoinbaseWallet !== 'undefined' && window.web3.currentProvider.isCoinbaseWallet;\n    }\n    return false;\n  },\n  hasDapper: () => {\n    let hasDapper = typeof window.DapperEthereum !== 'undefined';\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasDapper = typeof window.ethereum.isDapper !== \"undefined\" && window.ethereum.isDapper;\n    }\n\n    return hasDapper;\n  },\n  isOpera: () => {\n    return /Opera|OPR\\//.test(navigator.userAgent);\n  },\n  // Current device is Android\n  isAndroid: () => {\n    const isAndroid = /android/i.test(navigator.userAgent) ? true : false;\n\n    return isAndroid;\n  },\n  // Current device is iOS\n  isIos() {\n    const isIos =\n      /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream\n        ? true\n        : false;\n\n    return isIos;\n  }\n};\n\nexport default GeneralUtil;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Flex,\n  Modal,\n  Button,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\nimport RimbleUtils from \"@rimble/utils\";\n\nclass WrongNetworkModal extends React.Component {\n  renderContent = () => {\n    return (\n      <ModalCard.Body>\n        <Heading.h2 my={3}>\n          Switch to the {this.props.network.required.name} network in{\" \"}\n          {GeneralUtil.hasMetaMask() ? `MetaMask` : `Settings`}\n        </Heading.h2>\n\n        <Text my={4}>\n          The Idle App only works on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {this.props.network.required.name}\n          </Text.span>{\" \"}\n          network. You’re currently on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {\" \"}\n            {this.props.network.current.name}\n          </Text.span>{\" \"}\n          network.\n        </Text>\n\n        {GeneralUtil.hasMetaMask() && !RimbleUtils.isMobileDevice() ? (\n          <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n            <Flex alignItems={\"center\"}>\n              <Box position={\"relative\"} width={\"4em\"}>\n                <Box>\n                  <Loader size={\"3em\"} />\n                </Box>\n              </Box>\n              <Box>\n                <Text fontWeight={4}>Waiting for the right network...</Text>\n                <Text fontWeight={2}>\n                  Go to your Wallet and to switch\n                </Text>\n              </Box>\n            </Flex>\n          </Box>\n        ) : null}\n\n        <Box display={[\"block\", \"none\"]}>\n          <Button onClick={this.props.closeModal} width={1}>\n            OK\n          </Button>\n        </Box>\n      </ModalCard.Body>\n    )\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <React.Fragment>\n            {this.renderContent()}\n          </React.Fragment>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default WrongNetworkModal;\n","import React from \"react\";\nimport { Heading, Text, Box, Flex, Icon } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nfunction TransactionFeeModal(props) {\n  return (\n    <Box>\n      <ModalCard.Header title={'Transaction fees, what are you paying for?'} subtitle={'You need to pay a fee to use the Ethereum blockchain.'} subtitle2={'This pays for someone to process your transaction and store the data.'}></ModalCard.Header>\n      <ModalCard.Body>\n        <Flex flexDirection={['column', 'row']}\n          justifyContent={\"space-between\"}\n          my={[0, 4]}>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"Fingerprint\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Undeniable proof</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You get a public record of any funds you send or receive, a bit like\n              a deed for a house.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"EnhancedEncryption\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unbreakable encryption</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              Your funds can only ever go to your intended recipients.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"AccountBalance\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n              <Icon\n                name=\"NotInterested\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unparalleled control</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You can pay or get paid without using any banks or companies.\n            </Text>\n          </Box>\n        </Flex>\n      </ModalCard.Body>\n    </Box>\n  );\n}\n\nexport default TransactionFeeModal;\n","import React from 'react'\nimport moment from 'moment';\nimport connectors from '../App/connectors';\nimport { useWeb3Context } from 'web3-react';\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport globalConfigs from '../configs/globalConfigs';\nimport styles from './Web3ConnectionButtons.module.scss';\nimport { Button, Box, Text, Flex, Link } from 'rimble-ui';\n\nconst LOG_ENABLED = false;\nconst customLog = (...props) => { if (LOG_ENABLED) console.log(moment().format('HH:mm:ss'),...props); };\n\nexport default function Web3ConnectionButtons(props) {\n  const context = useWeb3Context();\n\n  if (!context.active && !context.error) {\n    customLog('context loading', context);\n  } else if (context.error) {\n    customLog('context error', context);\n  } else {\n    customLog('context success', context);\n  }\n\n  const setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n    if (localStorage) {\n      localStorage.setItem('walletProvider', walletProvider);\n      localStorage.setItem('connectorName', connectorName);\n    }\n\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector(connectorName,walletProvider);\n    }\n    \n    // Close modal\n    if (typeof props.connectionCallback === 'function'){\n      props.connectionCallback();\n    }\n\n    return connectorName;\n    // return await context.setConnector(connectorName);\n  };\n  const unsetConnector = async () => {\n    context.unsetConnector();\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector('Infura','Infura');\n    }\n  };\n\n  // Show provider fields to detect in-app browser\n  // alert(JSON.stringify(Object.keys(window.web3.currentProvider)));\n    \n  const isOpera = GeneralUtil.isOpera();\n  const isDapper = GeneralUtil.hasDapper();\n  const isMetamask = GeneralUtil.hasMetaMask();\n  const isTrustWallet = GeneralUtil.isTrustWallet();\n  const isCoinbaseWallet = GeneralUtil.isCoinbaseWallet();\n  const browserWalletDetected = isMetamask || isOpera || isDapper || isCoinbaseWallet || isTrustWallet;\n  \n  const allowedConnectors = props.allowedConnectors;\n  const registerPage = props.registerPage;\n\n  if (connectors.Portis) {\n    if (registerPage) {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = true;\n    } else {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = false;\n    }\n  }\n\n  let basicConnectorsName = Object.keys(connectors).filter(c => c !== 'Infura');\n\n  if (allowedConnectors) {\n    basicConnectorsName = basicConnectorsName.filter(n => allowedConnectors.map((v) => { return v.toLowerCase(); }).indexOf(n.toLowerCase()) !== -1 );\n  }\n\n  const buttons = basicConnectorsName.map(connectorName => {\n\n    switch (connectorName) {\n      case 'Injected':\n        if (browserWalletDetected) {\n          let name = null;\n          if (isMetamask) {\n            name = 'Metamask';\n          } else if (isOpera) {\n            name = 'Opera';\n          } else if (isDapper){\n            name = 'Dapper';\n          } else if (isCoinbaseWallet){\n            name = 'Coinbase';\n          } else if (isTrustWallet){\n            name = 'TrustWallet';\n          }\n\n          const connectorInfo = globalConfigs.connectors[name.toLowerCase()];\n          if (connectorInfo && connectorInfo.enabled){\n            const walletIcon = connectorInfo.icon ? connectorInfo.icon : `${name.toLowerCase()}.svg`;\n            return (\n              <Flex\n                width={1}\n                key={`wallet_${name}`}\n                justifyContent={'space-between'}\n                style={{\n                  flex:'0 100%',\n                }}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={name}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  imageSrc={`images/${walletIcon}`}\n                  imageProps={{width:'auto',height:'42px'}}\n                  handleClick={ async () => await setConnector(connectorName,name)}\n                  subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${name}` }\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  caption={'Watch Address'}\n                  imageSrc={`images/tokens/ETH.svg`}\n                  subcaption={'Watch an Ethereum address'}\n                  imageProps={{width:'auto',height:'42px'}}\n                  handleClick={ e => props.setCustomAddress(true) }\n                />\n              </Flex>\n            )\n          }\n          return null;\n        } else {\n          const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={'Browser Wallet'}\n              key={`wallet_${connectorName}`}\n              imageSrc={`images/browser-wallet.png`}\n              imageProps={{width:'auto',height:'42px'}}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using a browser wallet`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n      default:\n        const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n        if (connectorInfo && connectorInfo.enabled){\n          const walletIcon = connectorInfo.iconModal ? connectorInfo.iconModal : (connectorInfo.icon ? connectorInfo.icon : `${connectorName.toLowerCase()}.svg`);\n\n          let caption = connectorInfo.name ? connectorInfo.name : connectorName;\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={caption}\n              key={`wallet_${connectorName}`}\n              imageSrc={`images/${walletIcon}`}\n              imageProps={{width:'auto',height:'42px'}}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${connectorName}`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n        return null;\n    }\n  });\n\n  return (\n    <Box width={[1]}>\n      <Flex flexDirection={'column'} alignItems={\"center\"}>\n        {context.error && (\n          <Text.p textAlign=\"center\">\n            An error occurred, are you using an Ethereum browser such as\n            <Link href=\"https://metamask.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Metamask &nbsp;\n            </Link>\n             or\n            <Link href=\"https://www.meetdapper.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Dapper\n            </Link>\n            ?\n            If you do not have an Ethereum wallet follow the\n            \"I'm new to Ethereum\" flow when connecting.\n            If you do have a wallet, click Reset and retry one of the wallet listed below,\n            Generic wallet option is used for Ethereum browsers only.\n          </Text.p>\n        )}\n        {(context.active || (context.error && context.connectorName)) && context.connectorName !== 'Infura' && (\n          <Button.Outline\n            width={[1/2]}\n            className={[styles.button]}\n            mb={[1, 3]}\n            size={'large'}\n            key={'reset'}\n            onClick={async () => await unsetConnector()}\n          >\n            {context.active ? \"Deactivate Connector\" : \"Reset\"}\n          </Button.Outline>\n        )}\n      </Flex>\n      <Flex\n        flexWrap={'wrap'}\n        flexDirection={'row'}\n        justifyContent={'space-between'}\n      >\n        {buttons}\n      </Flex>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport {\n  Box,\n  Text,\n  Link,\n  Icon,\n  Flex,\n  Field,\n  Modal,\n  Input,\n  Loader,\n  Button,\n  Heading\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard.js';\nimport styles from './Header.module.scss';\nimport FunctionsUtil from '../FunctionsUtil.js';\nimport ImageButton from '../../ImageButton/ImageButton.js';\nimport TransactionFeeModal from \"./TransactionFeeModal.js\";\nimport Web3ConnectionButtons from \"../../Web3ConnectionButtons/Web3ConnectionButtons.js\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass ConnectionModal extends React.Component {\n  // TODO save pref in localstorage and do not show 'Before connecting' info every time\n  state = {\n    validated:false,\n    showTxFees:false,\n    customAddress:'',\n    currentSection:null,\n    showInstructions:false,\n    askCustomAddress:false,\n    closeRemainingTime:null,\n    customAddressError:false,\n    newToEthereumChoice:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  toggleShowTxFees = e => {\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  }\n\n  setStoredSection = () => {\n    let currentSection = null;\n    if (localStorage){\n      currentSection = localStorage.getItem('currentSection');\n      if (currentSection){\n        this.setState({\n          currentSection\n        });\n      }\n    }\n    return currentSection;\n  }\n\n  componentDidMount = () => {\n    this.loadUtils();\n    this.setStoredSection();\n  }\n\n  componentDidUpdate = () => {\n    this.loadUtils();\n  }\n\n  resetModal = e => {\n    this.setState({\n      showTxFees: false,\n      currentSection:null,\n      askCustomAddress:false,\n      showInstructions: false,\n      newToEthereumChoice:null,\n    });\n  }\n\n  setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory:'Connect',\n      eventLabel:walletProvider,\n      eventAction:'select_wallet'\n    });\n\n    if (this.props.setConnector && typeof this.props.setConnector === 'function'){\n      this.props.setConnector(connectorName,walletProvider);\n    }\n\n    // Set Wallet choice\n    this.setState({\n      newToEthereumChoice: connectorName\n    });\n\n    this.closeCountdown();\n\n    return connectorName;\n\n    // return await window.RimbleWeb3_context.setConnector(connectorName);\n  }\n\n  closeCountdown = () => {\n    const closeRemainingTime = this.state.closeRemainingTime ? this.state.closeRemainingTime-1 : 5;\n    if (!closeRemainingTime){\n      this.closeModal();\n    } else {\n      setTimeout(() => { this.closeCountdown() },1000);\n    }\n    this.setState({\n      closeRemainingTime\n    });\n  }\n\n  setWalletChoice = (e,choice) => {\n    e.preventDefault();\n    this.setState({\n      newToEthereumChoice: choice\n    });\n  }\n\n  closeModal = () => {\n    // Reset modal\n    this.resetModal();\n    // Set latest stored sections\n    this.setStoredSection();\n    // Close modal\n    this.props.closeModal();\n  }\n\n  setCurrentSection = (e,currentSection) => {\n    e.preventDefault();\n    this.setState({\n      currentSection\n    });\n\n    if (currentSection!=='instructions'){\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Connect',\n        eventAction: 'select_mode',\n        eventLabel: currentSection\n      });\n\n      this.functionsUtil.setLocalStorage('currentSection',currentSection);\n    }\n  }\n\n  connectCustomAddress = () => {\n    const addressValid = this.functionsUtil.checkAddress(this.state.customAddress);\n    if (addressValid){\n      this.setCustomAddress(false);\n      this.functionsUtil.setCustomAddress(this.state.customAddress);\n      this.setConnector('custom','custom');\n      setTimeout(() => { this.closeModal() },1000);\n      return true;\n    } else {\n      return this.setState({\n        customAddressError:true\n      });\n    }\n  }\n\n  updateCustomAddress = (e) => {\n    const customAddressError = false;\n    const customAddress = e.target.value;\n    const validated = this.functionsUtil.checkAddress(customAddress);\n    this.setState({\n      validated,\n      customAddress,\n      customAddressError\n    });\n  }\n\n  setCustomAddress = (askCustomAddress) => {\n    this.setState({\n      askCustomAddress\n    });\n  }\n\n  renderModalContent = () => {\n\n    const TOSacceptance = (\n      <Box>\n        <Text textAlign={'center'} fontSize={1} py={[2,3]}>By connecting, I accept Idle's <RouterLink to=\"/terms-of-service\" color={'primary'} style={{color:this.props.theme.colors.primary,textDecoration:'underline'}} target={'_blank'} rel=\"nofollow noopener noreferrer\">Terms of Service</RouterLink></Text>\n      </Box>\n    );\n\n    const newToEthereum = this.state.currentSection === 'new';\n    const showConnectionButtons = this.state.currentSection === 'wallet';\n    const showInstructions = this.state.currentSection === 'instructions';\n\n    if (showInstructions){\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Before you connect'} subtitle={'Connecting lets you use Idle via your Ethereum account.'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              flexDirection={['column', 'row']}\n              justifyContent={\"space-between\"}\n              my={[0, 3]}\n            >\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"Public\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>The blockchain is public</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  Your Ethereum account activity is public on the\n                  blockchain. Choose an account you don’t mind being\n                  linked with your activity here.\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"AccountBalanceWallet\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have some Ether for fees</Heading>\n                <Text fontSize={1} mb={3} textAlign={'center'}>\n                  You’ll need Ether to pay transaction fees. Buy Ether\n                  from exchanges like Coinbase or directly via enabled wallet\n                  such as Portis or Dapper.<br />\n                  <Link\n                    title=\"Learn about Ethereum transaction fees\"\n                    fontWeight={'0'}\n                    color={'blue'}\n                    textAlign={'center'}\n                    hoverColor={'blue'}\n                    href=\"#\"\n                    onClick={this.toggleShowTxFees}\n                  >\n                    What are transaction fees?\n                  </Link>\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"People\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have the right account ready</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  If you have multiple Ethereum accounts, check that the\n                  one you want to use is active in your browser.\n                </Text>\n              </Box>\n            </Flex>\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    if (this.state.askCustomAddress){\n      return (\n        <Box>\n          <ModalCard.Header\n            title={'Connect ETH wallet'}\n            icon={'images/idle-mark.png'}\n            subtitle={'And get started with Idle.'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              minWidth={[1,'30em']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Field\n                width={1}\n                label={'Ethereum address'}\n              >\n                <Input\n                  required\n                  width={1}\n                  type={'text'}\n                  className={styles.input}\n                  borderColor={'cardBorder'}\n                  backgroundColor={'cardBg'}\n                  pattern={'^0x[a-fA-F0-9]{40}$'}\n                  value={this.state.customAddress}\n                  onChange={ e => this.updateCustomAddress(e) }\n                  placeholder={'Insert a valid Ethereum address'}\n                />\n              </Field>\n              {\n                this.state.customAddressError && (\n                  <Text\n                    mb={2}\n                    fontSize={2}\n                    color={'red'}\n                    fontWeight={3}\n                    textAlign={'center'}\n                  >\n                    Insert a valid Ethereum Address\n                  </Text>\n                )\n              }\n              <Button\n                px={[3,4]}\n                mx={'auto'}\n                fontWeight={3}\n                size={'medium'}\n                fontSize={[2,2]}\n                borderRadius={4}\n                contrastColor={'primary'}\n                className={[styles.gradientButton]}\n                onClick={ e => this.connectCustomAddress() }\n              >\n                CONNECT\n              </Button>\n            </Flex>\n            <Flex\n              pt={3}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Link\n                hoverColor={'blue'}\n                textAlign={'center'}\n                onClick={ e => this.setCustomAddress(false) }\n              >\n                Select another Wallet\n              </Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (showConnectionButtons) {\n      return (\n        <Box>\n          <ModalCard.Header title={'Select your Wallet'} subtitle={'And get started with Idle.'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex width={1} px={[0,5]} flexDirection={'column'} justifyContent={'center'}>\n              <Web3ConnectionButtons\n                width={1/2}\n                isMobile={this.props.isMobile}\n                setConnector={this.setConnector}\n                connectionCallback={this.closeModal}\n                size={this.props.isMobile ? 'medium' : 'large'}\n                setCustomAddress={this.setCustomAddress.bind(this)}\n              />\n            </Flex>\n            <Flex pt={3} alignItems={'center'} justifyContent={'center'}>\n              <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'new') }>I don't have a wallet</Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (newToEthereum) {\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Let\\'s create your first Ethereum wallet'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            {\n              !this.state.newToEthereumChoice ? (\n                <Flex width={1} px={[0,4]} flexDirection={'column'} justifyContent={'center'}>\n                  <Box mb={3}>\n                    <Text fontSize={[2,3]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                      Connect with e-mail or phone number?\n                    </Text>\n                  </Box>\n                  <Flex mb={3} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use e-mail'}\n                      imageSrc={'images/email.svg'}\n                      isMobile={this.props.isMobile}\n                      subcaption={'Powered by Portis'}\n                      handleClick={ e => this.setConnector('Portis','Portis') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use phone number'}\n                      isMobile={this.props.isMobile}\n                      imageSrc={'images/mobile.svg'}\n                      subcaption={'Powered by Fortmatic'}\n                      handleClick={ e => this.setConnector('Fortmatic','Fortmatic') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                  </Flex>\n                  <Flex alignItems={'center'} justifyContent={'center'}>\n                    <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'wallet') }>I already have a wallet</Link>\n                  </Flex>\n                </Flex>\n              ) : (\n                <Box>\n                  <Text fontSize={3} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                    We are connecting you to {this.state.newToEthereumChoice} wallet provider...\n                  </Text>\n                  <Flex\n                    mt={2}\n                    justifyContent={'center'}\n                    alignItems={'center'}\n                    textAlign={'center'}>\n                    <Loader size=\"40px\" /> <Text ml={2} color={'dark-gray'}>Closing in {this.state.closeRemainingTime} seconds...</Text>\n                  </Flex>\n                </Box>\n              )\n            }\n            { TOSacceptance }\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    return (\n      <React.Fragment>\n        <ModalCard.Header title={'Connect to Idle'} icon={'images/idle-mark.png'}></ModalCard.Header>\n        <ModalCard.Body>\n          {\n            <Flex\n              width={1}\n              px={[0,4]}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Box mb={3}>\n                <Text\n                  fontWeight={2}\n                  fontSize={[2,3]}\n                  lineHeight={1.5}\n                  textAlign={'center'}\n                >\n                  How do you want to connect to Idle?\n                </Text>\n              </Box>\n              <Flex\n                mb={[2,3]}\n                alignItems={'center'}\n                justifyContent={'center'}\n                flexDirection={['column','row']}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`Ethereum wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Choose your favourite'}\n                  imageSrc={'images/ethereum-wallet.svg'}\n                  handleClick={ e => this.setCurrentSection(e,'wallet') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`New wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Use email / phone'}\n                  imageSrc={'images/new-wallet.png'}\n                  handleClick={ e => this.setCurrentSection(e,'new') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n              </Flex>\n              <Flex\n                alignItems={'center'}\n                justifyContent={'center'}\n              >\n                <Link\n                  color={'primary'}\n                  hoverColor={'primary'}\n                  onClick={ e => this.setCustomAddress(true) }\n                >\n                  Watch Ethereum Address\n                </Link>\n              </Flex>\n            </Flex>\n          }\n          { TOSacceptance }\n        </ModalCard.Body>\n      </React.Fragment>\n    );\n  }\n\n  renderFooter = () => {\n\n    if (this.state.newToEthereumChoice || (this.state.currentSection && this.state.askCustomAddress)){\n      return null;\n    }\n\n    return (\n      <ModalCard.Footer>\n        { !this.state.currentSection ? (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={ e => this.setCurrentSection(e,'instructions') }\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              READ INSTRUCTIONS\n            </Button>\n          ) : (!this.state.askCustomAddress || this.state.currentSection==='instructions') && (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={this.resetModal}\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              BACK\n            </Button>\n          )\n        }\n      </ModalCard.Footer>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          {this.state.showTxFees === false ? (\n            <React.Fragment>\n              {this.renderModalContent()}\n              {this.renderFooter()}\n            </React.Fragment>\n          ) : (\n            <Box>\n              <TransactionFeeModal />\n              {this.renderFooter()}\n            </Box>\n          )}\n\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionModal;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Modal,\n  Flex,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\n\nclass ConnectionPendingModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>Connect Ethereum account</Heading.h2>\n\n        <Text my={4}>\n          Confirm the request that's just appeared. If you can't see a\n          request, open your{\" \"}\n          {GeneralUtil.hasMetaMask()\n            ? `MetaMask extension`\n            : `eth wallet settings`}\n          .\n        </Text>\n\n        <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n          <Flex alignItems={\"center\"}>\n            <Box position={\"relative\"} width={\"4em\"}>\n              <Box>\n                <Loader size={\"3em\"} />\n              </Box>\n            </Box>\n            <Box>\n              <Text fontWeight={4}>\n                Waiting for connection confirmation...\n              </Text>\n              <Text fontWeight={2}>This won’t cost you any Ether</Text>\n            </Box>\n          </Flex>\n        </Box>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionPendingModal;\n","import React from \"react\";\nimport { Heading, Text, Flex, Button, Modal } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nclass UserRejectedConnectionModal extends React.Component {\n  sendMessageAgain = event => {\n    this.props.closeModal();\n    this.props.initAccount();\n  };\n\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>\n          You can't continue without connecting your account\n        </Heading.h2>\n\n        <Text my={4}>\n          To use our blockchain features you need to confirm the connection\n          request.\n        </Text>\n\n        <Flex flexDirection={['column', 'row']} justifyContent={\"flex-end\"} mt={4}>\n          <Button.Outline onClick={this.props.closeModal} mr={[0, 3]} mb={[3, 0]}>\n            Cancel connection\n          </Button.Outline>\n          <Button onClick={this.sendMessageAgain}>\n            Try again\n          </Button>\n        </Flex>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default UserRejectedConnectionModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Modal,\n  Flex,\n  Box,\n  Button,\n  EthAddress,\n  QR,\n  Link\n} from \"rimble-ui\";\nimport TransactionFeeModal from \"./TransactionFeeModal\";\n\nclass LowFundsModal extends React.Component {\n  state = {\n    showSecondary: false,\n    showTxFees: false\n  };\n\n  toggleQRVisible = () => {\n    this.setState({\n      showSecondary: !this.state.showSecondary\n    });\n  };\n\n  toggleShowTxFees = e => {\n    console.log(\"showTxFees\", this.state.showTxFees);\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  };\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card\n          pr={[0, 5]}\n          pl={[0, 5]}\n          pt={[\"48px\", 5]}\n          pb={[\"97px\", 4]}\n          maxWidth={\"960px\"}\n          overflow={\"hidden\"}\n          position={\"relative\"}\n        >\n          <Box position={\"relative\"}>\n            <Flex\n              justifyContent={\"flex-end\"}\n              mr={[0, -5]}\n              mt={[\"-48px\", -5]}\n              position={\"absolute\"}\n              top={\"0\"}\n              left={\"0\"}\n              right={\"0\"}\n              bg={\"white\"}\n              zIndex={\"1\"}\n            >\n              <Button.Text\n                icononly\n                icon={\"Close\"}\n                color={\"moon-gray\"}\n                onClick={this.props.closeModal}\n              />\n            </Flex>\n          </Box>\n\n          {this.state.showSecondary === false &&\n          this.state.showTxFees === false ? (\n            <Box>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start primary content */}\n\n                  <Box alignContent=\"center\" py={3}>\n                    <Heading.h2>\n                      Not enough Ether for transaction fees\n                    </Heading.h2>\n                  </Box>\n                  <Text mb={4}>\n                    This is a blockchain action so you’ll have to pay a\n                    transaction fee. A few dollars worth of Ether should be\n                    enough but fees do change based on how busy the network is.{\" \"}\n                    <strong>Fund your account and try again.</strong>{\" \"}\n                    <Link\n                      title=\"Learn about Ethereum transaction fees\"\n                      as={\"a\"}\n                      href=\"#\"\n                      onClick={this.toggleShowTxFees}\n                    >\n                      What are transaction fees?\n                    </Link>\n                  </Text>\n\n                  <Heading.h3>How to add funds</Heading.h3>\n\n                  <Flex\n                    alignItems={\"stretch\"}\n                    mx={0}\n                    mb={[4, 5]}\n                    mt={[3, 4]}\n                    flexWrap={[\"wrap\", \"no-wrap\"]}\n                  >\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>Buy ETH from an exchange</Heading.h5>\n                          <Text fontSize=\"1\">\n                            You can buy ETH from exchanges like Coinbase and\n                            send it to your account. If you don’t already have\n                            a Coinbase account, it can take a while to get set\n                            up.\n                          </Text>\n                        </Box>\n\n                        <Button.Outline my={3}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"OpenInNew\" mr={2} />\n                            Go to CoinBase\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>\n                            Send ETH from another account\n                          </Heading.h5>\n                          <Text fontSize=\"1\">\n                            If you have ETH in another Ethereum account, you\n                            can send it to this account using your public\n                            Ethereum address or QR code.\n                          </Text>\n                        </Box>\n                        <Button.Outline my={3} onClick={this.toggleQRVisible}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"FilterCenterFocus\" mr={2} />\n                            Show account QR code\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                  </Flex>\n                  {/* End primary content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex pt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button onClick={this.props.closeModal} width={[1, \"auto\"]}>\n                    Back to Idle\n                  </Button>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showSecondary ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start secondary content */}\n                  <Flex my={3} justifyContent={\"center\"}>\n                    <QR\n                      size={130}\n                      value={\n                        this.props.account ? this.props.account : \"1234512345\"\n                      }\n                    />\n                  </Flex>\n\n                  <EthAddress my={4} address={this.props.account} />\n                  <Flex mb={3} />\n                  {/* End secondary content */}\n                </Box>\n              </Box>\n\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start secondary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex mt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleQRVisible}\n                  >\n                    Go back\n                  </Button.Outline>\n                </Flex>\n                {/* End secondary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showTxFees ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start tx fee content */}\n                  <TransactionFeeModal />\n                  {/* End tx fee content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex\n                  pt={4}\n                  justifyContent={[\"center\", \"flex-end\"]}\n                  borderTop={1}\n                  borderColor={\"#eee\"}\n                >\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleShowTxFees}\n                  >\n                    Go Back\n                  </Button.Outline>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default LowFundsModal;\n","import React from \"react\";\n\nimport NoWeb3BrowserModal from \"./components/NoWeb3BrowserModal\";\nimport NoWalletModal from \"./components/NoWalletModal\";\nimport WrongNetworkModal from \"./components/WrongNetworkModal\";\n\nimport ConnectionModal from \"./components/ConnectionModal\";\nimport ConnectionPendingModal from \"./components/ConnectionPendingModal\";\nimport UserRejectedConnectionModal from \"./components/UserRejectedConnectionModal\";\n\nimport LowFundsModal from \"./components/LowFundsModal\";\n\nclass ConnectionModalUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        <NoWeb3BrowserModal\n          closeModal={this.props.modals.methods.closeNoWeb3BrowserModal}\n          isOpen={this.props.modals.data.noWeb3BrowserModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <NoWalletModal\n          closeModal={this.props.modals.methods.closeNoWalletModal}\n          isOpen={this.props.modals.data.noWalletModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <WrongNetworkModal\n          closeModal={this.props.modals.methods.closeWrongNetworkModal}\n          isOpen={this.props.modals.data.wrongNetworkModalIsOpen}\n          network={this.props.network}\n        />\n\n        <ConnectionModal\n          {...this.props}\n          isMobile={this.props.isMobile}\n          setConnector={this.props.setConnector}\n          currentNetwork={this.props.network.current}\n          validateAccount={this.props.validateAccount}\n          closeModal={this.props.modals.methods.closeConnectionModal}\n          isOpen={ this.props.modals.data.connectionModalIsOpen && !this.props.accountValidated }\n        />\n\n        <ConnectionPendingModal\n          closeModal={this.props.modals.methods.closeConnectionPendingModal}\n          isOpen={this.props.modals.data.accountConnectionPending}\n          currentNetwork={this.props.network.current}\n        />\n        <UserRejectedConnectionModal\n          closeModal={\n            this.props.modals.methods.closeUserRejectedConnectionModal\n          }\n          isOpen={this.props.modals.data.userRejectedConnect}\n          initAccount={this.props.initAccount}\n        />\n\n        <LowFundsModal\n          closeModal={this.props.modals.methods.closeLowFundsModal}\n          isOpen={this.props.modals.data.lowFundsModalIsOpen}\n          currentNetwork={this.props.network.current}\n          account={this.props.account}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ConnectionModalUtil;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ConnectionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    // Disconnect to Infura only if the wallet is not logged\n    if (!this.props.account){\n      await this.props.context.setFirstValidConnector(['Infura']);\n      this.props.setConnector('Infura',null);\n    }\n    this.props.modals.methods.closeConnectionErrorModal();\n  }\n\n  render() {\n\n    const walletProvider = this.functionsUtil.getWalletProvider();\n    const isLedger = (walletProvider && walletProvider.toLowerCase() === 'ledger') || (typeof this.props.modals.data.connectionError === 'string' && this.props.modals.data.connectionError.toLowerCase().includes('ledger'));\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ isLedger ? 'Ledger Error' : `Connection Error` } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to connect with your { isLedger ? 'Ledger' : 'account' }:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.connectionError}\"</Text.span><br />\n                {\n                  isLedger ? (\n                    <Text.span>\n                      Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n\n                    </Text.span>\n                  ) : 'Make sure that your wallet is unlocked and try again.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionErrorModal;","import React from \"react\";\nimport {\n  Text,\n  Link,\n  Flex,\n  Modal,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass TransactionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    this.props.modals.methods.closeTransactionErrorModal();\n  }\n\n  render() {\n\n    const isLedgerError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('ledger');\n    const isSlowTxError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('not mined within 50 blocks');\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ 'Transaction Error' } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to send a transaction:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.transactionError}\"</Text.span><br />\n                {\n                  isLedgerError ? (\n                    <Text.span\n                      fontSize={1}\n                    >\n                      <br />Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n                      We also suggest you to connect your Ledger with Metamask, read the <Link fontSize={1} color={'blue'} hoverColor={'blue'} target={'_blank'} rel={\"nofollow noopener noreferrer\"} href={'https://metamask.zendesk.com/hc/en-us/articles/360020394612-How-to-connect-a-Trezor-or-Ledger-Hardware-Wallet'}>instructions here</Link>.\n                    </Text.span>\n                  ) : isSlowTxError ? 'This could happen when the gas price is low, check the transaction status with your Wallet.' : 'Make sure that your have enough funds in your wallet.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default TransactionErrorModal;","import Web3 from \"web3\";\nimport React from 'react';\nimport BigNumber from 'bignumber.js';\nimport Biconomy from \"@biconomy/mexa\";\nimport SimpleID from 'simpleid-js-sdk';\nimport NetworkUtil from \"./NetworkUtil\";\nimport * as Sentry from '@sentry/browser';\nimport FunctionsUtil from './FunctionsUtil';\nimport globalConfigs from '../configs/globalConfigs';\nimport ConnectionModalUtil from \"./ConnectionModalsUtil\";\nimport detectEthereumProvider from '@metamask/detect-provider';\nimport ConnectionErrorModal from './components/ConnectionErrorModal';\nimport TransactionErrorModal from './components/TransactionErrorModal';\nimport { TerminalHttpProvider, SourceType } from '@terminal-packages/sdk';\n\nrequire('dotenv').config();\nconst INFURA_KEY = process.env[\"REACT_APP_INFURA_KEY\"];\n\nconst RimbleTransactionContext = React.createContext({\n  web3: {},\n  account: {},\n  biconomy: {},\n  simpleID: {},\n  contracts: [],\n  web3Infura: {},\n  tokenConfig: {},\n  transactions: {},\n  accountBalance: {},\n  initWeb3: () => {},\n  accountValidated: {},\n  initAccount: () => {},\n  accountBalanceLow: {},\n  initSimpleID: () => {},\n  initContract: () => {},\n  accountBalanceToken: {},\n  checkPreflight: () => {},\n  validateAccount: () => {},\n  network: {\n    current: {},\n    required: {},\n    checkNetwork: () => {},\n    isCorrectNetwork: null,\n  },\n  accountInizialized: false,\n  getTokenDecimals: () => {},\n  rejectValidation: () => {},\n  getAccountBalance: () => {},\n  contractsInitialized: false,\n  accountValidationPending: {},\n  initializeContracts: () => {},\n  rejectAccountConnect: () => {},\n  enableUnderlyingWithdraw: false,\n  connectAndValidateAccount: () => {},\n  modals: {\n    data: {\n      connectionError: {},\n      lowFundsModalIsOpen: {},\n      noWalletModalIsOpen: {},\n      userRejectedConnect: {},\n      connectionModalIsOpen: {},\n      userRejectedValidation: {},\n      wrongNetworkModalIsOpen: {},\n      accountValidationPending: {},\n      accountConnectionPending: {},\n      noWeb3BrowserModalIsOpen: {},\n      transactionConnectionModalIsOpen: {},\n    },\n    methods: {\n      openLowFundsModal: () => {},\n      closeLowFundsModal: () => {},\n      openWrongNetworkModal: () => {},\n      closeWrongNetworkModal: () => {},\n      openNoWeb3BrowserModal: () => {},\n      closeNoWeb3BrowserModal: () => {},\n      openConnectionErrorModal: () => {},\n      closeConnectionErrorModal: () => {},\n      openTransactionErrorModal: () => {},\n      closeTransactionErrorModal: () => {},\n      openConnectionPendingModal: () => {},\n      closeConnectionPendingModal: () => {},\n      openUserRejectedConnectionModal: () => {},\n      openUserRejectedValidationModal: () => {},\n      closeUserRejectedConnectionModal: () => {},\n      closeUserRejectedValidationModal: () => {},\n    }\n  },\n  transaction: {\n    data: {\n      transactions: {}\n    },\n    meta: {},\n    methods: {}\n  }\n});\n\nlet setConnectorName = null;\nlet biconomyLoginProcessing = false;\n\nclass RimbleTransaction extends React.Component {\n  static Consumer = RimbleTransactionContext.Consumer;\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    const props = Object.assign({},this.props);\n    props.contracts = this.state.contracts;\n    if (this.functionsUtil){\n      props.account = this.state.account;\n      this.functionsUtil.setProps(props);\n    } else {\n      props.account = this.state.account;\n      this.functionsUtil = new FunctionsUtil(props);\n    }\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n    window.initWeb3 = this.initWeb3;\n  }\n\n  componentDidMount = async () => {\n    this.initSimpleID();\n\n    // this.functionsUtil.customLog('RimbleWeb3 componentDidMount');\n    this.initWeb3();\n\n    // TEST - Manually triggers transaction error\n    // this.openTransactionErrorModal(null,'Your Ledger device is Ineligible');\n\n    window.testTransaction = (method) => {\n      const transaction = this.createTransaction();\n      transaction.method = method;\n      this.addTransaction(transaction);\n      return transaction;\n    }\n\n    window.updateTransaction = (transaction,hash,status,params) => {\n      // Add meta data to transaction\n      transaction.type = \"contract\";\n      transaction.status = status;\n      transaction.params = params;\n      transaction.transactionHash = hash;\n      this.updateTransaction(transaction);\n      return transaction;\n    }\n  }\n\n  componentDidUpdate = async (prevProps, prevState) => {\n\n    this.loadUtils();\n\n    // this.functionsUtil.customLog('componentDidUpdate',prevProps.connectorName,this.props.connectorName,this.props.context.connectorName,this.props.context.active,(this.props.context.error ? this.props.context.error.message : null));\n\n    if (prevProps.connectorName !== this.props.connectorName && this.props.connectorName){\n      this.initWeb3();\n    } else if ( prevProps.context !== this.props.context ){\n      if (this.props.context.error instanceof Error && this.props.context.error.message.length){\n        const errorMessage = this.props.context.error.message;\n        const isWalletConnectClosedModalError = (errorMessage === 'User closed WalletConnect modal' || errorMessage === 'User closed modal');\n        // this.functionsUtil.customLog('componentDidUpdate',setConnectorName,errorMessage);\n        if (setConnectorName === 'WalletConnect' && isWalletConnectClosedModalError){\n          // this.functionsUtil.customLog('WalletConnect disconnected! Set Infura connector');\n          this.props.setConnector('Infura',null);\n          // this.functionsUtil.removeStoredItem('walletProvider');\n          // this.functionsUtil.removeStoredItem('connectorName');\n          // this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:'Infura'}));\n          setConnectorName = null;\n          // await this.props.context.setConnector('Infura');\n        } else if (!isWalletConnectClosedModalError) {\n          this.openConnectionErrorModal(null,errorMessage);\n        } else {\n          this.initWeb3();\n        }\n      // WalletConnect double trigger initWeb3\n      } else if (this.props.context.active && this.props.context.connectorName!=='WalletConnect' && this.props.connectorName==='WalletConnect') {\n        this.initWeb3();\n      }\n    } else if ( (this.props.context.connectorName && this.props.context.connectorName !== this.props.connectorName) || prevProps.customAddress !== this.props.customAddress){\n      this.initWeb3();\n    }\n\n    const customAddressChanged = prevProps.customAddress !== this.props.customAddress;\n    if (customAddressChanged){\n      this.initAccount();\n    }\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    // const availableTokensChanged = prevProps.availableTokens && this.props.availableTokens && JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n    const availableStrategiesChanged = prevProps.availableStrategies && this.props.availableStrategies && JSON.stringify(Object.keys(prevProps.availableStrategies)) !== JSON.stringify(Object.keys(this.props.availableStrategies));\n\n    // Reset tokenDecimals if token is changed\n    if (tokenChanged){\n      this.setState({\n        tokenDecimals: null\n      });\n    }\n\n    // this.functionsUtil.customLog(prevProps.enableUnderlyingWithdraw,this.props.enableUnderlyingWithdraw,this.state.enableUnderlyingWithdraw);\n    if (prevProps.enableUnderlyingWithdraw !== this.props.enableUnderlyingWithdraw){\n      this.setState({\n        enableUnderlyingWithdraw:this.props.enableUnderlyingWithdraw\n      });\n    }\n\n    if (localStorage){\n      const context = JSON.parse(localStorage.getItem('context'));\n      if (!context || (this.props.context.active !== context.active || this.props.context.connectorName !== context.connectorName)){\n        this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:this.props.context.connectorName}));\n      }\n    }\n\n    if (tokenChanged/* || availableTokensChanged*/ || availableStrategiesChanged){\n      await this.initializeContracts();\n    }\n  }\n\n  // Initialize a web3 provider\n  initWeb3 = async (connectorName=null) => {\n\n    // Detect ethereum provider\n    const metamaskProvider = await detectEthereumProvider();\n    if (metamaskProvider && (!window.ethereum || window.ethereum !== metamaskProvider)){\n      window.ethereum = metamaskProvider;\n    }\n\n    // Suppress console warning\n    if (window.ethereum && window.ethereum.autoRefreshOnNetworkChange) {\n      window.ethereum.autoRefreshOnNetworkChange = false;\n    }\n\n    const context = this.props.context;\n\n    const web3Infura = new Web3(new Web3.providers.HttpProvider(globalConfigs.network.providers.infura[globalConfigs.network.requiredNetwork]+INFURA_KEY));\n\n    let web3 = context.library;\n\n    // 0x Instant Wallet Provider Injection\n    if (!window.RimbleWeb3_context || context.connectorName !== window.RimbleWeb3_context.connectorName){\n      window.RimbleWeb3_context = context;\n    }\n\n    // Reset setConnectorName if force connectorName\n    if (connectorName){\n      setConnectorName = null;\n    } else {\n      connectorName = this.props.connectorName;\n    }\n\n    // const last_context = localStorage ? JSON.parse(localStorage.getItem('context')) : null;\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorName,context.connectorName,context.connector,(web3 && web3.currentProvider ? web3.currentProvider.disable : null),(context.connector ? context.connector.disable : null));\n    if (context && connectorName === 'Infura' && connectorName !== context.connectorName){\n      if (web3 && typeof web3.currentProvider.disable === 'function'){\n        web3.currentProvider.disable();\n      } else if (context.connector && typeof context.connector.disable === 'function'){\n        context.connector.disable();\n      }\n      web3 = null;\n      setConnectorName = null;\n    }\n\n    const connectorNameChanged = (context.connectorName && context.connectorName !== connectorName) || (connectorName !== 'Infura' && connectorName !== setConnectorName);\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorNameChanged,context.connectorName,connectorName,setConnectorName);\n\n    if (!context.active || connectorNameChanged) {\n      // Select preferred web3 provider\n      if (connectorName && connectorNameChanged){\n        // this.functionsUtil.customLog('initWeb3 set connector',connectorName);\n        setConnectorName = connectorName;\n        await context.setConnector(connectorName);\n        // await context.setFirstValidConnector([connectorName, 'Infura']);\n        return web3;\n      }\n      /*\n      else if (setConnectorName){\n        // Catch WalletConnect unexpected disconnect and fallback to Infura\n        if (connectorName === 'WalletConnect' && connectorName === setConnectorName && last_context && last_context.active && last_context.connectorName==='WalletConnect' && !context.connectorName){\n          this.functionsUtil.customLog('WalletConnect disconnected! Set Infura connector');\n          this.props.setConnector('Infura',null);\n          this.functionsUtil.removeStoredItem('walletProvider');\n          this.functionsUtil.removeStoredItem('connectorName');\n          this.functionsUtil.setLocalStorage('context',JSON.stringify({active:context.active,connectorName:context.connectorName}));\n          setConnectorName = null;\n          await context.setConnector('Infura');\n          if (context.connector && typeof context.connector.disable === 'function'){\n            await context.connector.disable();\n          }\n        }\n\n        this.functionsUtil.customLog('initWeb3 skip due to setConnectorName ('+setConnectorName+') already set');\n        return web3;\n      }\n      */\n    }\n    /* else if (context.connectorName === \"WalletConnect\") {\n      if (!context.account) {\n\n        // WalletConnect already opened\n        if (document.getElementById('walletconnect-wrapper')){\n          return web3;\n        }\n\n        WalletConnectQRCodeModal.open(\n          context.connector.walletConnector.uri,\n          async () => {\n            document.getElementById('walletconnect-wrapper').remove();\n            this.props.setConnector('Infura',null);\n            await context.setConnector('Infura');\n            setConnectorName = null;\n          }\n        );\n      } else {\n        try {\n          WalletConnectQRCodeModal.close();\n        } catch {}\n      }\n    // Reset web3 if Infura\n    } */\n    /*\n    else if (context.active && (connectorName === 'Infura' || context.connectorName === \"Infura\")){\n      if (typeof web3.currentProvider.disable === 'function'){\n        await web3.currentProvider.disable();\n      } else if (context.connector && typeof context.connector.disable === 'function'){\n        await context.connector.disable();\n      }\n      web3 = null;\n      setConnectorName = null;\n    }\n    */\n\n    let web3Host = null;\n    let web3Provider = null;\n\n    if (!web3) { // safety web3 implementation\n      if (window.ethereum) {\n        this.functionsUtil.customLog(\"Using modern web3 provider.\");\n        web3Provider = window.ethereum;\n      } else if (window.web3) {\n        this.functionsUtil.customLog(\"Legacy web3 provider. Try updating.\");\n        web3Provider = window.web3;\n      } else {\n        this.functionsUtil.customLog(\"Non-Ethereum browser detected. Using Infura fallback.\");\n        web3Host = globalConfigs.network.providers.infura[globalConfigs.network.requiredNetwork]+INFURA_KEY;\n      }\n    } else {\n      web3Provider = web3.currentProvider;\n    }\n\n    let forceCallback = false;\n\n    if ((!connectorName || connectorName === 'Infura') && web3Provider && typeof web3Provider.enable === 'function'){\n      try {\n        await web3Provider.enable();\n      } catch (connectionError){\n        web3Provider = null;\n        web3Host = globalConfigs.network.providers.infura[globalConfigs.network.requiredNetwork]+INFURA_KEY;\n        forceCallback = true;\n      }\n    }\n\n    const terminalInfo = globalConfigs.network.providers.terminal;\n\n    if (terminalInfo && terminalInfo.enabled && terminalInfo.supportedNetworks.indexOf(globalConfigs.network.requiredNetwork) !== -1 ){\n      const TerminalHttpProviderParams = terminalInfo.params;\n      const terminalSourceType = localStorage && localStorage.getItem('walletProvider') ? localStorage.getItem('walletProvider') : SourceType.Infura;\n      TerminalHttpProviderParams.source = terminalSourceType;\n\n      if (web3Provider){\n        TerminalHttpProviderParams.customHttpProvider = web3Provider;\n      } else if (web3Host){\n        TerminalHttpProviderParams.host = web3Host;\n      }\n\n      const terminalHttpProvider = new TerminalHttpProvider(TerminalHttpProviderParams);\n      web3 = new Web3(terminalHttpProvider);\n    } else {\n      // Injected web3 provider\n      if (web3Provider){\n        web3 = new Web3(web3Provider);\n      // Infura\n      } else if (web3Host) {\n        web3 = new Web3(new Web3.providers.HttpProvider(web3Host));\n        if (connectorName !== 'Infura'){\n          this.props.setConnector('Infura',null);\n        }\n      }\n    }\n\n    const web3Callback = async () => {\n\n      window.web3Injected = this.state.web3;\n      // window.web3InfuraInjected = this.state.web3Infura;\n\n      if (typeof this.props.callbackAfterLogin === 'function'){\n        this.props.callbackAfterLogin();\n        this.props.setCallbackAfterLogin(null);\n      }\n\n      // After setting the web3 provider, check network\n      try {\n        await this.checkNetwork();\n        if (this.state.network.isCorrectNetwork){\n\n          if (!this.state.contractsInitialized){\n            await this.initializeContracts();\n          }\n\n          if (context.account){\n            // Login with biconomy\n            if (this.state.biconomy){\n              const biconomy = this.state.biconomy;\n              const biconomyInfo = globalConfigs.network.providers.biconomy;\n              if (biconomyInfo.enableLogin && !biconomy.isLogin && !biconomyLoginProcessing){\n                biconomyLoginProcessing = true;\n                biconomy.login(context.account, (error, response) => {\n                  // this.functionsUtil.customLog('biconomy login',error,response);\n                  // Failed to login with Biconomy\n                  if (error) {\n                    return this.setState({\n                      biconomy:false,\n                    },() => {\n                      this.initAccount(context.account);\n                    });\n                  }\n\n                  biconomyLoginProcessing = false;\n\n                  if (response.transactionHash) {\n                    this.initAccount(context.account);\n                  } else if(response.userContract) {\n                    this.initAccount(context.account);\n                  }\n                });\n                return false;\n              }\n            }\n\n            await this.initAccount(context.account);\n          } else {\n            await this.setState({\n              accountInizialized: true,\n              account: this.props.customAddress\n            });\n          }\n        }\n      // Initialize Infura Web3 and display error\n      } catch (error) {\n        this.openConnectionErrorModal(null,error.message);\n      }\n    }\n\n    // Save original web3 connector in case Mexa initialization fails\n    const originalWeb3 = web3;\n    const biconomyInfo = globalConfigs.network.providers.biconomy;\n    const walletProvider = this.functionsUtil.getWalletProvider();\n\n    if (connectorName !== 'Infura' && biconomyInfo && biconomyInfo.enabled && biconomyInfo.supportedNetworks.includes(globalConfigs.network.requiredNetwork) && (!walletProvider || !biconomyInfo.disabledWallets.includes(walletProvider.toLowerCase()))){\n\n      if (this.state.biconomy === null){\n        const biconomyWeb3Provider = web3Provider ? web3Provider : web3Host;\n        const biconomy = new Biconomy(biconomyWeb3Provider,biconomyInfo.params);\n\n        if (biconomy && typeof biconomy.onEvent === 'function'){\n          web3 = new Web3(biconomy);\n          biconomy.onEvent(biconomy.READY, () => {\n            if (this.componentUnmounted || this.state.biconomy === false || this.state.biconomy === biconomy){\n              return false;\n            }\n\n            const newState = {\n              web3,\n              biconomy,\n              web3Infura\n            };\n            if (web3 !== this.state.web3){\n              this.setState(newState, web3Callback);\n            }\n          }).onEvent(biconomy.ERROR, (error, message) => {\n            // this.functionsUtil.customLog('Biconomy error',error,message,this.state.biconomy);\n            web3 = originalWeb3;\n            // Handle error while initializing mexa\n            if (this.state.biconomy !== false){\n              this.setState({\n                web3,\n                web3Infura,\n                biconomy:false\n              }, web3Callback);\n            }\n          });\n        } else {\n          this.setState({\n            web3,\n            web3Infura,\n            biconomy:false\n          }, web3Callback);\n        }\n      }\n    } else {\n      if (web3 !== this.state.web3){\n        this.setState({\n          web3,\n          web3Infura,\n        }, web3Callback);\n      } else if (context.account || forceCallback){\n        web3Callback();\n      }\n    }\n\n    return web3;\n  }\n\n  initContract = async (name, address, abi, useInfuraProvider=false) => {\n    this.functionsUtil.customLog(`Init contract: ${name}`);\n    return await this.createContract(name, address, abi, useInfuraProvider);\n  }\n\n  createContract = async (name, address, abi, useInfuraProvider=false) => {\n    this.functionsUtil.customLog(`creating contract ${name} - addr: ${address}`);\n\n    const web3Provider = useInfuraProvider && this.state.web3Infura ? this.state.web3Infura : this.state.web3;\n\n    if (!web3Provider){\n      return null;\n    }\n\n    // Create contract on initialized web3 provider with given abi and address\n    try {\n      const contract = new web3Provider.eth.Contract(abi, address);\n      this.setState(state => ({\n        ...state,\n        contracts: [...state.contracts, {name, contract}]\n      }));\n      return {name, contract};\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Could not create contract.\",name,address,error);\n    }\n\n    return null;\n  }\n\n  initSimpleID = () => {\n\n    if (this.state.simpleID){\n      return this.state.simpleID;\n    }\n\n    const simpleIDInfo = globalConfigs.network.providers.simpleID;\n    let simpleID = null;\n\n    if (simpleIDInfo && simpleIDInfo.enabled && simpleIDInfo.supportedNetworks.indexOf(globalConfigs.network.requiredNetwork) !== -1 ){\n      const simpleIDParams = simpleIDInfo.params;\n      simpleIDParams.network = simpleIDInfo.getNetwork(this.state.network.current.id,globalConfigs.network.availableNetworks);\n      simpleID = new SimpleID(simpleIDParams);\n    }\n\n    window.simpleID = simpleID;\n\n    this.setState({\n      simpleID\n    });\n\n    return simpleID;\n  }\n\n  initAccount = async (account=false) => {\n    \n    const customAddress = this.props.customAddress;\n    const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n\n    if (customAddress){\n      // Set custom account\n      this.setState({\n        account:customAddress,\n        accountInizialized:true,\n      });\n\n      // After account is complete, get the balance\n      this.getAccountBalance();\n\n      return false;\n    }\n\n    try {\n      if (!account){\n        const wallets = await this.state.web3.eth.getAccounts();\n        if (wallets && wallets.length){\n          account = wallets[0];\n        }\n      }\n\n      if (!account || this.state.account === account){\n        this.setState({\n          accountInizialized: true\n        });\n        return false;\n      }\n\n      // Request account access if needed\n      if (account && walletProvider !== 'Infura'){\n\n        if (walletProvider === 'Infura'){\n          this.setState({\n            accountInizialized: true,\n            account:this.props.customAddress\n          });\n          return false;\n        }\n\n        // Send address info to SimpleID\n        const simpleID = this.initSimpleID();\n\n        if (simpleID){\n\n          const notifications = await simpleID.notifications();\n\n          if (notifications && notifications.length && window.$crisp){\n\n            let shownNotifications = [];\n            if (localStorage){\n              shownNotifications = localStorage.getItem('shownNotifications') && JSON.parse(localStorage.getItem('shownNotifications')) ? JSON.parse(localStorage.getItem('shownNotifications')) : [];\n            }\n\n            notifications.forEach((n,i) => {\n\n              const notificationId = n.name;\n\n              // Show notification if not shown already\n              if (shownNotifications.indexOf(notificationId) === -1){\n                window.$crisp.push([\"do\", \"message:show\", [\"text\", this.functionsUtil.normalizeSimpleIDNotification(n.content) ]]);\n\n                // Save notification id\n                shownNotifications.push(notificationId);\n              }\n            });\n\n            // Store shown notification\n            if (localStorage){\n              this.functionsUtil.setLocalStorage('shownNotifications',JSON.stringify(shownNotifications));\n            }\n          }\n        }\n\n        // Send Google Analytics connection event\n        this.functionsUtil.sendGoogleAnalyticsEvent({\n          eventCategory: 'Connect',\n          eventAction: 'connected',\n          eventLabel: walletProvider\n        });\n\n        /*\n        // Unsubscribes to all subscriptions\n        if (this.state.web3SocketProvider && typeof this.state.web3SocketProvider.clearSubscriptions === 'function'){\n          this.functionsUtil.customLog('Clear all web3SocketProvider subscriptions');\n          this.state.web3SocketProvider.clearSubscriptions();\n        }\n\n        const networkName = globalConfigs.network.availableNetworks[globalConfigs.network.requiredNetwork].toLowerCase();\n        const web3SocketProvider = new Web3(new Web3.providers.WebsocketProvider(`wss://${networkName}.infura.io/ws/v3/${INFURA_KEY}`));\n\n        // Subscribe to logs\n        const addressTopic = '0x00000000000000000000000'+account.toLowerCase().replace('x','');\n\n        // Subscribe for payment methods\n        const paymentProviders = Object.keys(globalConfigs.payments.providers).filter((providerName,i) => { const providerInfo = globalConfigs.payments.providers[providerName]; return providerInfo.enabled && providerInfo.web3Subscription && providerInfo.web3Subscription.enabled  })\n        if (paymentProviders && paymentProviders.length){\n          paymentProviders.forEach((providerName,i) => {\n            const providerInfo = globalConfigs.payments.providers[providerName];\n\n            this.functionsUtil.customLog(`Subscribe to ${providerName} logs`);\n\n            // Subscribe for deposit transactions\n            web3SocketProvider.eth.subscribe('logs', {\n                address: [account,providerInfo.web3Subscription.contractAddress],\n                topics: [null,[addressTopic]]\n            }, function(error, result){\n              \n            })\n            .on(\"data\", async (log) => {\n              this.functionsUtil.customLog(providerName,'logs',log);\n\n              if (log){\n                const txHash = log.transactionHash;\n                const subscribedTransactions = this.state.subscribedTransactions;\n                const walletAddressFound = log.topics.filter((addr,i) => { return addr.toLowerCase().includes(addressTopic); });\n\n                this.functionsUtil.customLog(providerName,txHash,walletAddressFound);\n\n                if (!subscribedTransactions[txHash] && walletAddressFound.length){\n                  const decodedLogs = web3SocketProvider.eth.abi.decodeLog(providerInfo.web3Subscription.decodeLogsData,log.data,log.topics);\n\n                  this.functionsUtil.customLog(providerName,txHash,decodedLogs);\n\n                  if (decodedLogs && decodedLogs._tokenAmount && decodedLogs._tokenAddress && decodedLogs._tokenAddress.toLowerCase() === this.props.tokenConfig.address.toLowerCase()){\n\n                    const receiptCallback = async (tx,decodedLogs) => {\n                      const tokenDecimals = await this.getTokenDecimals();\n                      const tokenAmount = this.functionsUtil.BNify(decodedLogs._tokenAmount);\n                      const tokenAmountFixed = this.functionsUtil.fixTokenDecimals(tokenAmount,tokenDecimals);\n                      const tokenAmountFormatted = parseFloat(tokenAmountFixed.toString()).toFixed(2);\n                      const isProviderTx = tx.from.toLowerCase() === account.toLowerCase() && tx.to.toLowerCase() === providerInfo.web3Subscription.contractAddress.toLowerCase();\n\n                      if (isProviderTx){\n\n                        // Mined\n                        if (tx.blockNumber && tx.status){\n                          // Toast message\n                          window.showToastMessage({\n                            variant:'success',\n                            message:'Deposit completed',\n                            secondaryMessage:`${providerName} sent you ${tokenAmountFormatted} ${this.props.selectedToken}`,\n                          });\n\n                          // Update User Balance\n                          this.getAccountBalance(tokenAmount);\n                        } else {\n                          // Toast message\n                          window.showToastMessage({\n                            variant:'processing',\n                            message:'Deposit pending',\n                            secondaryMessage:`${providerName} is sending ${tokenAmountFormatted} ${this.props.selectedToken}`,\n                          });\n                        }\n                      }\n                    }\n\n                    let checkTransactionReceiptTimeoutID = null;\n\n                    const checkTransactionReceipt = (txHash,decodedLogs) => {\n                      if (checkTransactionReceiptTimeoutID){\n                        window.clearTimeout(checkTransactionReceiptTimeoutID);\n                      }\n                      web3SocketProvider.eth.getTransactionReceipt(txHash,(err,txReceipt)=>{\n                        if (!err){\n                          if (txReceipt){\n                            receiptCallback(txReceipt,decodedLogs);\n                          } else{\n                            checkTransactionReceiptTimeoutID = window.setTimeout(() => { checkTransactionReceipt(txHash,decodedLogs) },3000);\n                          }\n                        }\n                      });\n                    }\n\n                    checkTransactionReceipt(txHash,decodedLogs);\n\n                    subscribedTransactions[txHash] = log;\n                    this.setState({subscribedTransactions});\n                  }\n                }\n              }\n            });\n          })\n        }\n\n        // Subscribe for deposit transactions\n        web3SocketProvider.eth.subscribe('logs', {\n            address: [account,this.props.tokenConfig.address],\n            topics: [null,null,[addressTopic]]\n        }, function(error, result){\n\n        })\n        .on(\"data\", async (log) => {\n          if (log){\n            const txHash = log.transactionHash;\n            const subscribedTransactions = this.state.subscribedTransactions;\n            const walletAddressFound = log.topics.filter((addr,i) => { return addr.toLowerCase().includes(addressTopic); });\n\n            if (!subscribedTransactions[txHash] && walletAddressFound.length){\n              const decodedLogs = web3SocketProvider.eth.abi.decodeLog([\n                {\n                  \"internalType\": \"uint256\",\n                  \"name\": \"_tokenAmount\",\n                  \"type\": \"uint256\"\n                },\n              ],log.data,log.topics);\n\n              if (decodedLogs && decodedLogs._tokenAmount){\n\n                const receiptCallback = async (tx,decodedLogs) => {\n                  const tokenDecimals = await this.getTokenDecimals();\n                  const tokenAmount = this.functionsUtil.BNify(decodedLogs._tokenAmount);\n                  const tokenAmountFixed = this.functionsUtil.fixTokenDecimals(tokenAmount,tokenDecimals);\n                  const tokenAmountFormatted = parseFloat(tokenAmountFixed.toString()).toFixed(2);\n                  const isDepositTokenTx = tx.to.toLowerCase() === this.props.tokenConfig.address.toLowerCase();\n\n                  if (isDepositTokenTx){\n\n                    // Mined\n                    if (tx.blockNumber && tx.status){\n                      // Toast message\n                      window.showToastMessage({\n                        message:'Deposit completed',\n                        secondaryMessage: `${tokenAmountFormatted} ${this.props.selectedToken} has been deposited`,\n                        variant: \"success\",\n                      });\n\n                      // Update User Balance\n                      this.getAccountBalance(tokenAmount);\n                    } else {\n                      // Toast message\n                      window.showToastMessage({\n                        message:'Deposit pending',\n                        secondaryMessage: `${tokenAmountFormatted} ${this.props.selectedToken} are on the way`,\n                        variant: \"processing\",\n                      });\n                    }\n                  }\n                }\n\n                let checkTransactionReceiptTimeoutID = null;\n\n                const checkTransactionReceipt = (txHash,decodedLogs) => {\n                  if (checkTransactionReceiptTimeoutID){\n                    window.clearTimeout(checkTransactionReceiptTimeoutID);\n                  }\n                  web3SocketProvider.eth.getTransactionReceipt(txHash,(err,txReceipt)=>{\n                    if (!err){\n                      if (txReceipt){\n                        receiptCallback(txReceipt,decodedLogs);\n                      } else{\n                        checkTransactionReceiptTimeoutID = window.setTimeout(() => { checkTransactionReceipt(txHash,decodedLogs) },3000);\n                      }\n                    }\n                  });\n                }\n\n                checkTransactionReceipt(txHash,decodedLogs);\n\n                subscribedTransactions[txHash] = log;\n                this.setState({subscribedTransactions});\n              }\n            }\n          }\n        })\n        .on(\"changed\", log => {\n          \n        });\n        */\n\n        // this.functionsUtil.customLog('initAccount',account);\n\n        // Set custom account\n        this.setState({\n          account,\n          // web3SocketProvider,\n          accountInizialized: true\n        });\n\n        // After account is complete, get the balance\n        this.getAccountBalance();\n\n        // TODO subscribe for account changes, no polling\n        // set a state flag which indicates if the subscribe handler has been\n        // called at least once\n      }\n    } catch (error) {\n\n      this.setState({\n        accountInizialized: true\n      });\n\n      // User denied account access...\n      this.functionsUtil.customLog(\"User cancelled connect request. Error:\", error);\n\n      // this.functionsUtil.customLog(error);\n\n      // Catch ledger error\n      if (error && error.message && error.message.includes('MULTIPLE_OPEN_CONNECTIONS_DISALLOWED')) {\n        return;\n      }\n\n      // Send Sentry connection error\n      const isError = error instanceof Error;\n      if (this.functionsUtil.checkUrlOrigin() && isError){\n        Sentry.captureException(error);\n      }\n\n      // Reject Connect\n      // this.rejectAccountConnect(error);\n    }\n  }\n\n  // TODO: Can this be moved/combined?\n  rejectAccountConnect = error => {\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  getAccountBalance = async (increaseAmount) => {\n\n    increaseAmount = increaseAmount ? this.functionsUtil.BNify(increaseAmount) : null;\n\n    try {\n\n      let [accountBalance,accountBalanceToken,tokenDecimals] = await Promise.all([\n        this.state.web3.eth.getBalance(this.state.account), // Get ETH balance\n        this.getTokenBalance(this.state.account), // Get token balance\n        this.getTokenDecimals()\n      ]);\n\n      if (accountBalance) {\n\n        // Convert to wei if decimals found\n        if (accountBalance.toString().includes('.')){\n          accountBalance = this.state.web3.utils.toWei(accountBalance);\n        }\n\n        // Convert to Eth amount\n        accountBalance = this.state.web3.utils.fromWei(\n          accountBalance,\n          'ether'\n        );\n\n        accountBalance = this.functionsUtil.BNify(accountBalance).toString();\n\n        this.setState({\n          accountBalance\n        });\n\n        this.functionsUtil.customLog(\"account balance: \", accountBalance);\n      }\n\n      // this.functionsUtil.customLog('accountBalance',res,(accountBalanceToken ? accountBalanceToken.toString() : null),tokenDecimals,increaseAmount);\n\n      if (accountBalanceToken) {\n\n        accountBalanceToken = this.functionsUtil.BNify(accountBalanceToken);\n\n        // Increase balance amount if passed and balance didn't change\n        if (increaseAmount && this.state.accountBalanceToken && this.functionsUtil.normalizeTokenAmount(this.state.accountBalanceToken,tokenDecimals).toString() === accountBalanceToken.toString()){\n          accountBalanceToken = accountBalanceToken.plus(increaseAmount);\n        }\n        \n        accountBalanceToken = this.functionsUtil.fixTokenDecimals(accountBalanceToken,tokenDecimals).toString();\n\n        // this.functionsUtil.customLog('increaseAmount',(increaseAmount ? increaseAmount.toString() : '0'),(this.state.accountBalanceToken ? this.state.accountBalanceToken.toString() : '0'),(accountBalanceToken ? accountBalanceToken.toString() : 'ERROR'));\n        // this.functionsUtil.customLog(`account balance ${this.props.selectedToken}: `, accountBalanceToken);\n\n        this.setState({\n          accountBalanceToken,\n          [`accountBalance${this.props.selectedToken}`]:accountBalanceToken\n        });\n\n      } else {\n        this.functionsUtil.customLog('accountBalanceToken is not set:',accountBalanceToken);\n      }\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Failed to get account balance.\", error);\n    }\n  }\n\n  initializeContracts = async () => {\n\n    const contracts = this.functionsUtil.getGlobalConfig(['contracts']);\n    await this.functionsUtil.asyncForEach(Object.keys(contracts),async (contractName) => {\n      const contractInfo = contracts[contractName];\n      if (contractInfo.address !== null && contractInfo.abi !== null){\n        this.functionsUtil.customLog('initializeContracts, init contract', contractName, contractInfo.address);\n        await this.initContract(contractName, contractInfo.address, contractInfo.abi);\n      }\n    });\n\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    await this.functionsUtil.asyncForEach(Object.keys(govTokens),async (token) => {\n      const govTokenConfig = govTokens[token];\n      if (!govTokenConfig.enabled){\n        return;\n      }\n      // Initialize govToken contracts\n      let foundGovTokenContract = this.state.contracts.find(c => c.name === token);\n      if (!foundGovTokenContract) {\n        this.functionsUtil.customLog('initializeContracts, init contract', token, govTokenConfig.address);\n        await this.initContract(token, govTokenConfig.address, govTokenConfig.abi);\n      }\n    });\n\n    if (this.props.availableStrategies){\n      // Initialize Tokens Contracts\n      await this.functionsUtil.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n        \n        const availableTokens = this.props.availableStrategies[strategy];\n\n        await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          let foundTokenContract = this.state.contracts.find(c => c.name === token);\n          if (!foundTokenContract) {\n            this.functionsUtil.customLog('initializeContracts, init contract',token, tokenConfig.address);\n            await this.initContract(token, tokenConfig.address, tokenConfig.abi);\n          }\n\n          // Initialize idleTokens contracts\n          let foundIdleTokenContract = this.state.contracts.find(c => c.name === tokenConfig.idle.token);\n          if (!foundIdleTokenContract) {\n            this.functionsUtil.customLog('initializeContracts, init contract',tokenConfig.idle.token, tokenConfig.idle.address);\n            await this.initContract(tokenConfig.idle.token, tokenConfig.idle.address, tokenConfig.idle.abi);\n          }\n\n          // Initialize protocols contracts\n          tokenConfig.protocols.forEach(async (p,i) => {\n            let foundProtocolContract = this.state.contracts.find(c => c.name === p.token);\n            if (!foundProtocolContract) {\n              this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n              await this.initContract(p.token, p.address, p.abi);\n            }\n          });\n\n          // Check migration contract\n          if (tokenConfig.migration){\n\n            if (tokenConfig.migration.oldContract){\n              const oldContract = tokenConfig.migration.oldContract;\n              this.functionsUtil.customLog('initializeContracts, init '+oldContract.name+' contract',oldContract);\n              await this.initContract(oldContract.name, oldContract.address, oldContract.abi);\n            }\n\n            // Initialize protocols contracts\n            if (tokenConfig.migration.oldProtocols){\n              tokenConfig.migration.oldProtocols.forEach(async (p,i) => {\n                let foundProtocolContract = this.state.contracts.find(c => c.name === p.token);\n                if (!foundProtocolContract) {\n                  this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n                  await this.initContract(p.token, p.address, p.abi);\n                }\n              });\n            }\n\n            if (tokenConfig.migration.migrationContract){\n              const migrationContract = tokenConfig.migration.migrationContract;\n              this.functionsUtil.customLog('initializeContracts, init '+migrationContract.name+' contract',migrationContract);\n              await this.initContract(migrationContract.name, migrationContract.address, migrationContract.abi);\n            }\n          }\n        })\n      });\n    }\n\n    return this.setState({\n      contractsInitialized:true\n    });\n  }\n\n  getContractByName = async (contractName) => {\n    let contract = this.state.contracts.find(c => c.name === contractName);\n\n    if (!contract && this.props.tokenConfig) {\n      const tokenConfig = this.props.tokenConfig;\n      contract = await this.initContract(contractName, tokenConfig.address, tokenConfig.abi);\n    }\n\n    return contract ? contract.contract : null;\n  }\n\n  getTokenDecimals = async () => {\n    let tokenDecimals = null;\n\n    if (!this.state.tokenDecimals){\n\n      tokenDecimals = await this.functionsUtil.getTokenDecimals(this.props.selectedToken);\n\n      this.setState({\n        tokenDecimals\n      });\n    } else {\n      tokenDecimals = await (new Promise( async (resolve, reject) => {\n        resolve(this.state.tokenDecimals);\n      }));\n    }\n\n    return tokenDecimals;\n  }\n\n  getTokenBalance = async (account) => {\n    const contract = await this.getContractByName(this.props.selectedToken);\n\n    if (!contract) {\n      this.functionsUtil.customLogError('Wrong contract name', this.props.selectedToken);\n      return null;\n    }\n\n    if (!contract.methods['balanceOf']){\n      this.customLogError('Wrong method name balanceOf');\n      return null;\n    }\n\n    return await contract.methods.balanceOf(account).call().catch(error => {\n      this.functionsUtil.customLog(`Failed to get ${this.props.selectedToken} balance`, error);\n    });\n  }\n\n  determineAccountLowBalance = () => {\n    // If provided a minimum from config then use it, else default to 1\n    const accountBalanceMinimum =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.accountBalanceMinimum !== \"undefined\"\n        ? this.props.config.accountBalanceMinimum\n        : 1;\n    // Determine if the account balance is low\n    const accountBalanceLow =\n      this.state.accountBalance < accountBalanceMinimum;\n\n    this.setState({\n      accountBalanceLow\n    });\n  }\n\n  connectAndValidateAccount = async (callbackAfterLogin) => {\n    // Check for account\n    if (!this.state.account) {\n      this.props.setCallbackAfterLogin(callbackAfterLogin);\n      // Show modal to connect account\n      this.openConnectionModal();\n    }\n  }\n\n  getRequiredNetwork = () => {\n\n    const networkId =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.requiredNetwork !== \"undefined\"\n        ? this.props.config.requiredNetwork\n        : globalConfigs.network.requiredNetwork;\n\n    let networkName = globalConfigs.network.availableNetworks[networkId] ? globalConfigs.network.availableNetworks[networkId] : 'unknown';\n\n    let requiredNetwork = {\n      name: networkName,\n      id: networkId\n    };\n\n    let network = { ...this.state.network };\n    network.required = requiredNetwork;\n\n    this.setState({ network });\n  }\n\n  getNetworkId = async () => {\n    try {\n      return this.state.web3.eth.net.getId((error, networkId) => {\n        let current = { ...this.state.network.current };\n        current.id = networkId;\n        let network = { ...this.state.network };\n        network.current = current;\n        this.setState({ network });\n      });\n    } catch (error) {\n      this.functionsUtil.customLog(\"Could not get network ID: \", error);\n    }\n  }\n\n  getNetworkName = async () => {\n    try {\n      return this.state.web3.eth.net.getNetworkType((error, networkName) => {\n        let current = { ...this.state.network.current };\n        current.name = networkName;\n        let network = { ...this.state.network };\n        network.current = current;\n        this.setState({ network });\n      });\n    } catch (error) {\n      this.functionsUtil.customLog(\"Could not get network Name: \", error);\n    }\n  }\n\n  checkNetwork = async () => {\n    this.getRequiredNetwork();\n\n    await Promise.all([\n      this.getNetworkId(),\n      this.getNetworkName()\n    ]);\n\n    let network = { ...this.state.network };\n    network.isCorrectNetwork = this.state.network.current.id === this.state.network.required.id;\n\n    // console.log('checkNetwork',this.state.network.current.id,this.state.network.required.id);\n\n    // To do, check window.web3.currentProvider.networkVersion to see if Metamask is in the requiredNetwork\n\n    this.setState({ network });\n  }\n\n  contractMethodSendWrapper = async (contractName, contractMethod, params = [], value = null, callback = null, callback_receipt = null, gasLimit = null, txData = null) => {\n    // Is it on the correct network?\n    if (!this.state.network.isCorrectNetwork) {\n      // wrong network modal\n      this.state.modals.methods.openWrongNetworkModal();\n      return false;\n    }\n\n    // Is a wallet connected and verified?\n    if (!this.state.account) {\n      this.openConnectionModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_not_connected');\n      }\n      return false;\n    }\n\n    // Are there a minimum amount of funds?\n    if (this.state.accountBalanceLow) {\n      this.openLowFundsModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_balance_low');\n      }\n      return false;\n    }\n\n    // Is the contract loaded?\n\n    // Create new tx and add to collection\n    // Maybe this needs to get moved out of the wrapper?\n    let transaction = this.createTransaction(txData);\n    transaction.method = contractMethod;\n\n    this.addTransaction(transaction);\n\n    // Add meta data to transaction\n    transaction.type = \"contract\";\n    transaction.status = \"started\";\n    transaction.params = params;\n\n    // Show toast for starting transaction\n    this.updateTransaction(transaction);\n\n    const { account, contracts } = this.state;\n    let contract = contracts.find(c => c.name === contractName);\n    if (!contract) {\n      if (typeof callback === 'function') {\n        callback(null,'contract_not_found');\n      }\n      return this.functionsUtil.customLog(`No contract with name ${contractName}`);\n    }\n\n    contract = contract.contract;\n\n    // Does the method exists?\n    // if (typeof contract.methods[contractMethod] === 'undefined'){\n    //   return false;\n    // }\n\n    let manualConfirmationTimeoutId = null;\n\n    try {\n\n      if (!value){\n        value = this.functionsUtil.BNify(0);\n      }\n\n      this.functionsUtil.customLog('contractMethodSendWrapper',contractName,contract._address,account,contractMethod,params,(value ? { from: account, value } : { from: account }));\n\n      // estimate gas price\n      let gas = await contract.methods[contractMethod](...params)\n        .estimateGas(value ? { from: account, value } : { from: account })\n        .catch(e => console.error(e));\n\n      if (gas) {\n\n        gas = this.functionsUtil.BNify(gas);\n        gas = gas.plus(gas.times(this.functionsUtil.BNify('0.2'))); // Increase 20% of enstimation\n\n        // Check if gas is under the gasLimit param\n        if (gasLimit && gas.lt(this.functionsUtil.BNify(gasLimit))){\n          gas = this.functionsUtil.BNify(gasLimit);\n        }\n\n        // Convert gasLimit toBN with web3 utils\n        gas = this.state.web3.utils.toBN(gas.integerValue(BigNumber.ROUND_FLOOR));\n      }\n\n      const confirmationCallback = (confirmationNumber, receipt) => {\n\n        // this.functionsUtil.customLog('confirmationCallback', confirmationNumber, receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // this.functionsUtil.customLog('txOnConfirmation', receipt);\n        // Update confirmation count on each subsequent confirmation that's received\n        transaction.confirmationCount += 1;\n\n        const call_callback = !globalConfigs.network.isForked && typeof callback === 'function' && transaction.confirmationCount===1;\n\n        // How many confirmations should be received before informing the user\n        const confidenceThreshold = this.props.config.requiredConfirmations || 1;\n\n        if (transaction.confirmationCount === 1) {\n          // Initial confirmation receipt\n          transaction.status = \"confirmed\";\n        } else if (transaction.confirmationCount < confidenceThreshold) {\n          // Not enough confirmations to match threshold\n        }\n\n        if (transaction.confirmationCount === confidenceThreshold) {\n          // Confirmations match threshold\n          // Check the status from result since we are confident in the result\n          if (receipt.status) {\n            transaction.status = \"success\";\n          } else if (!receipt.status) {\n            transaction.status = \"error\";\n          }\n        } else if (transaction.confirmationCount > confidenceThreshold) {\n          // Confidence threshold met\n        }\n\n\n        if (call_callback){\n          // Update transaction with receipt details\n          if (receipt){\n            transaction.txReceipt = receipt;\n          }\n          transaction.recentEvent = \"confirmation\";\n          this.updateTransaction(transaction);\n          \n          callback(transaction);\n\n          this.functionsUtil.customLog('Confirmed', confirmationNumber, receipt, transaction);\n        }\n      };\n\n      const manualConfirmation = (transactionHash,timeout) => {\n        if (!transactionHash){\n          return false;\n        }\n        this.state.web3.eth.getTransactionReceipt(transactionHash,(err,txReceipt) => {\n          if (txReceipt && txReceipt.status){\n            this.functionsUtil.customLog('Tx manualConfirmation', txReceipt);\n            confirmationCallback(1,txReceipt);\n          } else {\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(transactionHash,timeout) , timeout);\n          }\n        });\n      };\n\n      const receiptCallback = receipt => {\n\n        // this.functionsUtil.customLog('txOnReceipt', receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // Received receipt, met total number of confirmations\n        if (receipt){\n          transaction.txReceipt = receipt;\n        }\n        transaction.recentEvent = \"receipt\";\n\n        // If the network is forked use the receipt for confirmation\n        if (globalConfigs.network.isForked){\n          transaction.status = \"success\";\n          if (typeof callback === 'function') {\n            callback(transaction);\n          }\n        } else {\n          this.updateTransaction(transaction);\n\n          // Transaction mined, wait for manual confirmation\n          if (receipt.status){\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(receipt.transactionHash,4000), 2000);\n          }\n        }\n      };\n\n      // const networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n      // const common = { customChain:{ chainId: 1, networkId } };\n\n      return contract.methods[contractMethod](...params)\n        .send(value ? { from: account, value, gas } : { from: account, gas })\n        .on(\"transactionHash\", hash => {\n          this.functionsUtil.customLog('txOnTransactionHash', hash);\n\n          if (!hash){\n            this.functionsUtil.customLog('Skip transactionHash due to hash empty', hash);\n            return false;\n          }\n\n          transaction.transactionHash = hash;\n          transaction.status = \"pending\";\n          transaction.recentEvent = \"transactionHash\";\n          this.updateTransaction(transaction);\n\n          if (callback_receipt){\n            callback_receipt(transaction);\n          }\n\n          // Wait for manual confirmation only for mobile\n          if (this.props.isMobile){\n            if (manualConfirmationTimeoutId){\n              window.clearTimeout(manualConfirmationTimeoutId);\n            }\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(hash,60000), 20000);\n          }\n        })\n        .on(\"receipt\", receiptCallback)\n        .on(\"confirmation\", confirmationCallback)\n        .on(\"error\", error => {\n\n          console.log('Tx error',error);\n          \n          const isDeniedTx = error && error.message && typeof error.message.includes === 'function' ? error.message.includes('User denied transaction signature') : false;\n          \n          // Set error on transaction\n          transaction.status = \"error\";\n          transaction.recentEvent = \"error\";\n          this.updateTransaction(transaction);\n\n\n          // Show ToastProvider\n          if (!isDeniedTx){\n            window.toastProvider.addMessage(\"Something went wrong\", {\n              icon: 'Block',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n              colorTheme: 'light',\n              secondaryMessage: \"Please retry\",\n            });\n\n            const isError = error instanceof Error;\n\n            if (typeof error.message !== 'undefined'){\n              this.openTransactionErrorModal(null,error.message);\n            } else if (this.functionsUtil.checkUrlOrigin() && isError){\n              Sentry.captureException(error);\n            }\n          }\n\n          if (typeof callback === 'function') {\n            callback(transaction,error);\n          }\n        });\n    } catch (error) {\n\n      console.log('Tx catch error',error);\n\n      transaction.status = \"error\";\n      this.updateTransaction(transaction);\n\n      // TODO: should this be a custom error? What is the error here?\n      // TODO: determine how to handle error messages globally\n      window.toastProvider.addMessage(\"Something went really wrong, we are sorry\", {\n        icon: 'Block',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"failure\",\n        colorTheme: 'light',\n        secondaryMessage: \"Try refreshing the page :(\",\n      });\n\n      const isDeniedTx = error && error.message ? error.message.includes('User denied transaction signature') : false;\n\n      const isError = error instanceof Error;\n      if ( this.functionsUtil.checkUrlOrigin() && isError && !isDeniedTx){\n        Sentry.captureException(error);\n      }\n\n      if (typeof callback === 'function') {\n        // this.functionsUtil.customLog('Tx Failed',error,transaction,typeof callback);\n        callback(transaction,error);\n      }\n\n      return false;\n    }\n  }\n\n  // Create tx\n  createTransaction = (txData=null) => {\n    let transaction = {\n      ...txData\n    };\n    transaction.txReceipt = {};\n    transaction.created = Date.now();\n    transaction.confirmationCount = 0;\n    transaction.status = \"initialized\";\n    transaction.lastUpdated = Date.now();\n    transaction.token = this.props.selectedToken;\n    transaction.strategy = this.props.selectedStrategy;\n    transaction.networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    return transaction;\n  }\n\n  addTransaction = transaction => {\n    const transactions = { ...this.state.transactions };\n    transactions[`tx${transaction.created}`] = transaction;\n    this.setState({ transactions });\n  }\n\n  // Add/update transaction in state\n  updateTransaction = updatedTransaction => {\n    const transactions = { ...this.state.transactions };\n    const transaction = { ...updatedTransaction };\n    transaction.lastUpdated = Date.now();\n    transactions[`tx${updatedTransaction.created}`] = transaction;\n    this.setState({ transactions });\n\n    // this.functionsUtil.customLog('updateTransaction',transactions);\n\n    // Save transactions in localStorage only if pending or succeeded\n    // console.log('updateTransaction',transaction.transactionHash,transaction.status.toLowerCase());\n    if (transaction.transactionHash){\n      // Clear cached data\n      this.functionsUtil.clearCachedData();\n\n      // Store transaction\n      this.functionsUtil.addStoredTransaction(`tx${transaction.created}`,transaction);\n    }\n\n    return transaction;\n  }\n\n  // CONNECTION MODAL METHODS\n  closeConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = false;\n    // this.functionsUtil.customLog(\"this.state\", this.state);\n    this.setState({ modals });\n  }\n\n  openConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = true;\n    this.setState({ modals: modals });\n  }\n\n  closeConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    this.setState({ modals });\n  }\n\n  openConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = true;\n    modals.data.transactionConnectionModalIsOpen = false;\n    modals.data.connectionModalIsOpen = false;\n\n    this.setState({ modals });\n  }\n\n  closeTransactionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = false;\n    this.setState({ modals });\n  }\n\n  openTransactionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = error;\n\n    this.setState({ modals });\n  }\n\n  closeConnectionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionError = false;\n    this.setState({ modals });\n  }\n\n  openConnectionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n\n    // Handle generic error\n    if (error==='[object Object]'){\n      error = 'Unable to access to the wallet.'\n    }\n\n    // this.functionsUtil.customLog('openConnectionErrorModal',typeof error,typeof error === 'object' ? JSON.stringify(error) : error);\n\n    modals.data.connectionError = error;\n\n    this.setState({ modals });\n  }\n\n  closeUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = false;\n    this.setState({ modals });\n  }\n\n  openUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  closeNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  state = {\n    web3: null,\n    context:null,\n    account: null,\n    contracts: [],\n    biconomy: null,\n    simpleID: null,\n    web3Infura:null,\n    transactions: {},\n    CrispClient: null,\n    tokenDecimals:null,\n    accountBalance: null,\n    web3Subscription: null,\n    accountValidated: null,\n    accountBalanceDAI: null,\n    initWeb3: this.initWeb3,\n    accountBalanceLow: null,\n    accountInizialized:false,\n    subscribedTransactions:{},\n    contractsInitialized:false,\n    initAccount: this.initAccount,\n    accountValidationPending: null,\n    initSimpleID: this.initSimpleID,\n    initContract: this.initContract,\n    checkPreflight: this.checkPreflight,\n    validateAccount: this.validateAccount,\n    rejectValidation: this.rejectValidation,\n    getTokenDecimals: this.getTokenDecimals,\n    getAccountBalance: this.getAccountBalance,\n    initializeContracts: this.initializeContracts,\n    rejectAccountConnect: this.rejectAccountConnect,\n    contractMethodSendWrapper: this.contractMethodSendWrapper,\n    connectAndValidateAccount: this.connectAndValidateAccount,\n    enableUnderlyingWithdraw: this.props.enableUnderlyingWithdraw,\n    network: {\n      current: {},\n      required: {},\n      isCorrectNetwork: null,\n      checkNetwork: this.checkNetwork\n    },\n    modals: {\n      data: {\n        connectionError: null,\n        lowFundsModalIsOpen: null,\n        userRejectedConnect: null,\n        connectionModalIsOpen: null,\n        userRejectedValidation: null,\n        wrongNetworkModalIsOpen: null,\n        accountConnectionPending: null,\n        accountValidationPending: null,\n        transactionConnectionModalIsOpen: null,\n        noWalletModalIsOpen: this.noWalletModalIsOpen,\n        noWeb3BrowserModalIsOpen: this.noWeb3BrowserModalIsOpen,\n      },\n      methods: {\n        openLowFundsModal: this.openLowFundsModal,\n        openNoWalletModal: this.openNoWalletModal,\n        closeNoWalletModal: this.closeNoWalletModal,\n        closeLowFundsModal: this.closeLowFundsModal,\n        openConnectionModal: this.openConnectionModal,\n        closeConnectionModal: this.closeConnectionModal,\n        openWrongNetworkModal: this.openWrongNetworkModal,\n        closeWrongNetworkModal: this.closeWrongNetworkModal,\n        openNoWeb3BrowserModal: this.openNoWeb3BrowserModal,\n        closeNoWeb3BrowserModal: this.closeNoWeb3BrowserModal,\n        openConnectionErrorModal: this.openConnectionErrorModal,\n        closeConnectionErrorModal: this.closeConnectionErrorModal,\n        openTransactionErrorModal: this.openTransactionErrorModal,\n        closeTransactionErrorModal: this.closeTransactionErrorModal,\n        openConnectionPendingModal: this.openConnectionPendingModal,\n        closeConnectionPendingModal: this.closeConnectionPendingModal,\n        openUserRejectedValidationModal: this.openUserRejectedValidationModal,\n        openUserRejectedConnectionModal: this.openUserRejectedConnectionModal,\n        closeUserRejectedValidationModal: this.closeUserRejectedValidationModal,\n        closeUserRejectedConnectionModal: this.closeUserRejectedConnectionModal,\n      }\n    },\n    transaction: {\n      data: {\n        transactions: null\n      },\n      meta: {},\n      methods: {}\n    }\n  }\n\n  render() {\n    const connectionErrorModalOpened = typeof this.state.modals.data.connectionError === 'string' && this.state.modals.data.connectionError.length>0;\n    const transactionErrorModalOpened = typeof this.state.modals.data.transactionError === 'string' && this.state.modals.data.transactionError.length>0;\n    return (\n      <div>\n        <RimbleTransactionContext.Provider\n          {...this.props}\n          value={this.state}\n        />\n        <ConnectionModalUtil\n          {...this.props}\n          modals={this.state.modals}\n          network={this.state.network}\n          account={this.state.account}\n          isMobile={this.props.isMobile}\n          initAccount={this.state.initAccount}\n          setConnector={this.props.setConnector}\n          validateAccount={this.state.validateAccount}\n          accountValidated={this.state.accountValidated}\n          accountConnectionPending={this.state.accountConnectionPending}\n          accountValidationPending={this.state.accountValidationPending}\n        />\n        <TransactionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={transactionErrorModalOpened}\n        />\n        <ConnectionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={connectionErrorModalOpened}\n          setConnector={this.props.setConnector}\n        />\n        <NetworkUtil\n          web3={this.state.web3}\n          theme={this.props.theme}\n          network={this.state.network}\n        />\n      </div>\n    );\n  }\n}\n\nexport default RimbleTransaction;\n","import React from \"react\";\nimport ExtLink from '../../ExtLink/ExtLink';\nimport FunctionsUtil from '../FunctionsUtil';\nimport { Box, Flex, Image, Text, Link, Icon } from \"rimble-ui\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass Header extends React.Component {\n  state = {\n\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidMount() {\n\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n\n    this.loadUtils();\n\n    if (this.props.network && !this.props.network.isCorrectNetwork){\n      return false;\n    }\n  }\n\n  render() {\n\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n\n    return (\n      <Box\n        style={{\n          left: '0',\n          right: '0',\n          zIndex: 99,\n          position: 'absolute',\n        }}\n      >\n        <Flex\n          p={2}\n          alignItems={'center'}\n          justifyContent={'center'}\n          backgroundColor={'dark-blue'}\n          flexDirection={['column','row']}\n        >\n          <Text\n            color={'white'}\n            textAlign={'center'}\n          >\n            IDLE Governance Token is now live!\n          </Text>\n          <ExtLink\n            pr={2}\n            py={1}\n            mt={[1,0]}\n            ml={[0,2]}\n            pl={'12px'}\n            color={'white'}\n            style={{\n              display:'flex',\n              borderRadius:'8px',\n              flexDirection:'row',\n              alignItems:'flex-end'\n            }}\n            backgroundColor={'#0037ff'}\n            href={'https://idlefinance.medium.com/idle-governance-is-live-9b55e8f407d7'}\n          >\n            Read More\n            <Icon\n              ml={1}\n              size={'1.3em'}\n              color={'white'}\n              name={'KeyboardArrowRight'}\n            >\n            </Icon>\n          </ExtLink>\n        </Flex>\n        <Flex\n          pt={[3,4]}\n          mx={'auto'}\n          bg={\"transparent\"}\n          width={['98%','100%']}\n          maxWidth={['100%','100em']}\n          alignItems={['center','flex-start']}\n        >\n          <Flex\n            ml={[3, 5]}\n            width={[0.5, 3/12]}\n          >\n            <RouterLink\n              to=\"/\"\n            >\n              <Image\n                position={'relative'}\n                src={'images/logo.svg'}\n                height={['35px','48px']}\n              />\n            </RouterLink>\n          </Flex>\n            <Flex\n              width={[0.5,8/12]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={\"flex-end\"}\n            >\n              {\n                governanceEnabled && \n                  <Link\n                    mr={4}\n                    fontSize={3}\n                    color={'white'}\n                    hoverColor={'white'}\n                    fontFamily={'sansSerif'}\n                    textAlign={['center','left']}\n                    onClick={ (e) => window.location.hash='#/governance' }\n                  >\n                    Governance\n                  </Link>\n              }\n              {\n                !this.props.isMobile &&\n                  <>\n                    <Link\n                      mr={4}\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('contacts').offsetTop,300)}}\n                    >\n                      Contact Us\n                    </Link>\n                    <Link\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('faq').offsetTop,300)}}\n                    >\n                      FAQs\n                    </Link>\n                  </>\n              }\n            </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default Header;\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}","import Footer from '../Footer/Footer';\nimport React, { Component } from 'react';\nimport styles from './PageNotFound.module.scss';\nimport { Box, Flex, Heading, Button } from 'rimble-ui'\nimport Header_styles from '../utilities/components/Header.module.scss';\nimport {\n  Link as RouterLink,\n} from \"react-router-dom\";\n\nclass PageNotFound extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.3em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                This page doesn't exist!\n              </Heading.h1>\n              <Heading.h3 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.6em'} fontWeight={2} fontSize={['1.5em',4]} textAlign={'center'} color={'white'}>\n                Sorry, the page you are looking for cannot be found.\n              </Heading.h3>\n              <RouterLink to=\"/\" style={{textDecoration:'none'}}>\n                <Button\n                  className={Header_styles.gradientButton}\n                  borderRadius={4}\n                  size={this.props.isMobile ? 'medium' : 'medium'}\n                  mainColor={'blue'}\n                  contrastColor={'white'}\n                  fontWeight={3}\n                  fontSize={[2,2]}\n                  mx={'auto'}\n                  px={[4,5]}\n                  mt={2}\n                >\n                  GO TO HOMEPAGE\n                </Button>\n              </RouterLink>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default PageNotFound;\n","import React from \"react\";\nimport { Box, Flex, Text } from \"rimble-ui\";\n\nclass NetworkOverview extends React.Component {\n  getNetworkCircleColor = () => {\n    let circleColor = \"#333\";\n    if (this.props.network) {\n      switch (this.props.network.id) {\n        case 1:\n          circleColor = \"#56b3ae\";\n          break;\n        case 2:\n          circleColor = \"#000\";\n          break;\n        case 3:\n          circleColor = \"#ed5a8d\";\n          break;\n        case 4:\n          circleColor = \"#efc35c\";\n          break;\n        case 42:\n          circleColor = \"#6a5ff6\";\n          break;\n        default:\n          circleColor = \"#ccc\";\n      }\n    }\n\n    return circleColor;\n  };\n\n  render() {\n    const networkCircle = {\n      borderRadius: \"50%\",\n      backgroundColor: this.getNetworkCircleColor(),\n      height: \"1em\",\n      width: \"1em\"\n    };\n\n    return (\n      <Flex alignItems={\"center\"}>\n        <Box style={networkCircle} mr={2} />\n        <Text style={{ textTransform: \"capitalize\" }}>\n          {this.props.network.name}\n        </Text>\n      </Flex>\n    );\n  }\n}\n\nexport default NetworkOverview;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Flex,\n  ToastMessage,\n  Box,\n  Button,\n  Link\n} from \"rimble-ui\";\nimport NetworkOverview from \"../utilities/components/NetworkOverview\";\n\nconst DebuggerButtons = props => (\n  <Box mt={4} borderTop={1} borderColor=\"#E8E8E8\" pt={3}>\n    <Heading.h4 textAlign={\"center\"}>Show Modal</Heading.h4>\n    <Button\n      onClick={props.modals.methods.openWrongNetworkModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Blocking Wrong Network\n    </Button>\n\n    <Button\n      onClick={props.modals.methods.openConnectionModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Connection\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openConnectionPendingModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Pending\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openUserRejectedConnectionModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Rejected\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={event => {\n        props.modals.methods.openLowFundsModal(event);\n      }}\n      mr={2}\n      mb={2}\n    >\n      Low Funds\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWeb3BrowserModal}\n      mr={2}\n      mb={2}\n    >\n      Not Web3 Browser\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWalletModal}\n      mr={2}\n      mb={2}\n    >\n      No Wallet\n    </Button>\n  </Box>\n);\n\nclass Web3Debugger extends React.Component {\n  render() {\n    return (\n      <Card width={\"600px\"} mx={\"auto\"} px={4}>\n        <Heading.h3 textAlign={\"center\"}>Get Connected</Heading.h3>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            <Icon name=\"Check\" color={\"green\"} mr={2} />\n            <Text>Modern & Web3 Capable Browser</Text>\n          </Flex>\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.web3 ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Browser-connected Wallet</Text>\n          </Flex>\n\n          {!this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">You do not have a wallet.</Text>\n              </Flex>\n\n              <Link\n                href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                <Button.Outline size=\"small\">\n                  Get MetaMask Extension\n                </Button.Outline>\n              </Link>\n            </Flex>\n          ) : null}\n        </Box>\n\n        {this.props.web3 ? (\n          <Flex\n            py={3}\n            my={3}\n            borderTop={1}\n            borderBottom={1}\n            borderColor={\"#E8E8E8\"}\n            textAlign={\"center\"}\n            justifyContent={\"space-around\"}\n            alignItems={\"center\"}\n          >\n            <Button\n              size=\"small\"\n              onClick={this.props.connectAndValidateAccount}\n              disabled={!this.props.web3}\n            >\n              Connect and verify\n            </Button>\n            <Text>- or -</Text>\n            <Button size=\"small\" disabled>\n              Initiate On-Chain Action\n            </Button>\n          </Flex>\n        ) : null}\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.network.isCorrectNetwork ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Correct Network</Text>\n          </Flex>\n\n          {this.props.web3 && !this.props.network.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Box>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Current network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.current} />\n                  </Flex>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Required network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.required} />\n                  </Flex>\n                </Box>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.checkNetwork}>\n                Check Network\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.web3 && this.props.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <NetworkOverview network={this.props.network.current} />\n            </Flex>\n          ) : null}\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.account && this.props.accountValidated ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Wallet connected and verified</Text>\n          </Flex>\n\n          {!this.props.account &&\n          this.props.web3 &&\n          !this.props.userRejectedConnect ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Not connected to this dApp.</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.account && this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n              <Box>\n                <Text color=\"#999\">Connected wallet {this.props.account}</Text>\n                <Text color={this.props.accountBalanceLow ? \"red\" : \"#999\"}>\n                  Account balance {this.props.accountBalance}\n                </Text>\n              </Box>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedConnect ? (\n            <Flex ml={4} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">User rejected Connect request</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {(this.props.accountValidated === null ||\n            this.props.accountValidated === false) &&\n          this.props.web3 ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.accountValidated === false ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedValidation === false ? (\n            <Flex ml={4}>\n              <Icon name=\"Error\" mr={2} color=\"red\" />\n              <Text color=\"red\">Account not verified</Text>\n            </Flex>\n          ) : null}\n        </Box>\n\n        <DebuggerButtons {...this.props} />\n\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </Card>\n    );\n  }\n}\n\nexport default Web3Debugger;\n","const address = '0xf5dce57282a584d2746faf1593d3121fcac444dc'; // mainnet\nconst abi = [\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"name\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x06fdde03\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"approve\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x095ea7b3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"reserveFactorMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x173b9904\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x17bfdfbc\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalSupply\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x18160ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"exchangeRateStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x182df0f5\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"src\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transferFrom\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x23b872dd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"pendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x26782247\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"decimals\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x313ce567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOfUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3af9e669\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"getCash\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3b1d21a2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setComptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x4576b5db\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalBorrows\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x47bd3718\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"comptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x5fe3b567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_reduceReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x601a0bf1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"initialExchangeRateMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x675d972c\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"accrualBlockNumber\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6c540baf\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"underlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6f307dc3\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x70a08231\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"totalBorrowsCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x73acee98\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x8f840ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"symbol\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95d89b41\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95dd9193\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"accrueInterest\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa6afed95\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transfer\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa9059cbb\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowIndex\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xaa5af0fd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"supplyRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xae9d70b0\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"seize\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb2a02ff1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setPendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb71d1a0c\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"exchangeRateCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xbd6d894d\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"getAccountSnapshot\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc37f68e2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"allowance\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdd62ed3e\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"_acceptAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xe9c714f2\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setInterestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf2b3abbd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"interestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf3fdb15a\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"admin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf851a440\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf8f9da28\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_setReserveFactor\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfca7820b\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"isCToken\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfe9c44ae\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"name\": \"underlying_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"comptroller_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"interestRateModel_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"initialExchangeRateMantissa_\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"name_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"symbol_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"decimals_\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"constructor\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"interestAccumulated\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowIndex\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"AccrueInterest\",\n    \"signature\": \"0x875352fb3fadeb8c0be7cbbe8ff761b308fa7033470cd0287f02f3436fd76cb9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"minter\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Mint\",\n    \"signature\": \"0x4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"redeemer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Redeem\",\n    \"signature\": \"0xe5b754fb1abb7f01b499791d0b820ae3b6af3424ac1c59768edb53f4ec31a929\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Borrow\",\n    \"signature\": \"0x13ed6866d4e1ee6da46f845c46d7e54120883d75c5ea9a2dacc1c4ca8984ab80\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"payer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"RepayBorrow\",\n    \"signature\": \"0x1a2a22cb034d26d1854bdc6666a5b91fe25efbbb5dcad3b0355478d6f5c362a1\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"LiquidateBorrow\",\n    \"signature\": \"0x298637f684da70674f26509b10f07ec2fbc77a335ab1e7d6215a4b2484d8bb52\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldPendingAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewPendingAdmin\",\n    \"signature\": \"0xca4f2f25d0898edd99413412fb94012f9e54ec8142f9b093e7720646a95b16a9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewAdmin\",\n    \"signature\": \"0xf9ffabca9c8276e99321725bcb43fb076a6c66a54b7f21c4e8146d8519b417dc\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldComptroller\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewComptroller\",\n    \"signature\": \"0x7ac369dbd14fa5ea3f473ed67cc9d598964a77501540ba6751eb0b3decf5870d\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldInterestRateModel\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewMarketInterestRateModel\",\n    \"signature\": \"0xedffc32e068c7c95dfd4bdfd5c4d939a084d6b11c4199eac8436ed234d72f926\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"NewReserveFactor\",\n    \"signature\": \"0xaaa68312e2ea9d50e16af5068410ab56e1a1fd06037b1a35664812c30f821460\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"admin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newTotalReserves\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"ReservesReduced\",\n    \"signature\": \"0x3bad0c59cf2f06e7314077049f48a93578cd16f5ef92329f1dab1420a99c177e\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"error\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"info\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"detail\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Failure\",\n    \"signature\": \"0x45b96fe442630264581b197e84bbada861235052c5a1aadfff9ea4e40a969aa0\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Transfer\",\n    \"signature\": \"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Approval\",\n    \"signature\": \"0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\",\n    \"type\": \"event\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"mint\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa0712d68\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeem\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdb006a75\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeemUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x852a12e3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"borrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc5ebeaec\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x0e752702\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrowBehalf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x2608f818\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"liquidateBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf5e3c462\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }\n];\nexport default { address, abi };\n","const address = '0x5592EC0cfb4dbc12D3aB100b257153436a1f0FEa'; // rinkeby\nconst abi = [{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"stop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"name_\",\"type\":\"bytes32\"}],\"name\":\"setName\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stopped\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"authority_\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"push\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"move\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"start\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"pull\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"symbol_\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"LogSetAuthority\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"LogSetOwner\",\"type\":\"event\"},{\"anonymous\":true,\"inputs\":[{\"indexed\":true,\"name\":\"sig\",\"type\":\"bytes4\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"foo\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"bar\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"fax\",\"type\":\"bytes\"}],\"name\":\"LogNote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}];\nexport default { address, abi };\n","import DAI from '../abis/tokens/DAI.json';\nimport CHAI from '../abis/chai/CHAI.json';\nimport cToken from '../abis/compound/cDAI';\nimport WETH from '../abis/tokens/WETH.json';\nimport USDC from '../abis/tokens/USDC.json';\nimport ERC20 from '../abis/tokens/ERC20.js';\nimport aToken from '../abis/aave/AToken.json';\nimport yToken from '../abis/dydx/yToken.json';\nimport iToken from '../abis/fulcrum/iToken.json';\nimport IdleTokenV3 from '../contracts/IdleTokenV3.json';\nimport IdleTokenV4 from '../contracts/IdleTokenV4.json';\nimport IdleConverterPersonalSignV4 from '../contracts/IdleConverterPersonalSignV4.json';\n\nconst availableTokens = {\n  42:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x4f96fe3b7a6cf9725f59d353f723c1bdb64ca6aa',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x295CA5bC5153698162dDbcE5dF50E436a58BA21e',\n        },\n        protocols:[\n          {\n            decimals:28,\n            token:'cDAI',\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xf0d0eb522cfa50b716b3b1604c4f0fa6f04376ad',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        token:'USDC',\n        decimals:6,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xb7a4f3e9097c08da09517b5ab877f7a917224ede',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        ramp:{\n          swapAsset:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x0de23D3bc385a74E2196cfE827C8a640B8774B9f',\n        },\n        protocols:[\n          {\n            decimals:16,\n            enabled:true,\n            token:'cUSDC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4a92e71227d294f041bd82dd8f78591b75140d63',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n    },\n  },\n  1337:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            token:'idleDAI',\n            abi:IdleConverterPersonalSignV4,\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            enabled:false,\n            name:'fulcrum',\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:CHAI,\n            name:'dsr',\n            enabled:true,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:yToken,\n            name:'dydx',\n            enabled:true,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        abi:USDC,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols:[\n            {\n              abi:yToken,\n              name:'dydx',\n              enabled:true,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      WETH:{\n        abi:WETH,\n        token:'WETH',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WETH'\n        },\n        ramp:{\n          swapAsset:'WETH'\n        },\n        defiPrime:{\n          token:'weth'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWETHYield',\n          address:'0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token:'cETH',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            address:'0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token:'aWETH',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n    }\n  },\n  1:{ // Mainnet\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            token:'idleDAI',\n            abi:IdleConverterPersonalSignV4,\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            enabled:false,\n            name:'fulcrum',\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            address:'0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token:'aDAIv2',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:CHAI,\n            name:'dsr',\n            enabled:true,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:yToken,\n            name:'dydx',\n            enabled:true,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols:[\n            {\n              abi:yToken,\n              name:'dydx',\n              enabled:true,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            enabled:true,\n            name:'aavev2',\n            token:'aUSDCv2',\n            address:'0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTYield',\n          address:'0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTYieldV3',\n            address:'0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDT',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            name:'aavev2',\n            enabled:true,\n            token:'aUSDTv2',\n            address:'0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      SUSD:{\n        decimals:18,\n        token:'SUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address:'0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre:{\n          destCurrency:'SUSD'\n        },\n        defiPrime:{\n          token:'susd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleSUSDYield',\n          address:'0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleSUSD',\n            name:'idleSUSDYieldV3',\n            address:'0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleSUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x625aE63000f46200499120B906716420bd059240',\n            token:'aSUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'aavev2',\n            enabled:true,\n            abi:aToken,\n            address:'0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token:'aSUSDv2',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      TUSD:{\n        decimals:18,\n        token:'TUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(217, 100%, 20%)',\n        address:'0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre:{\n          destCurrency:'TUSD'\n        },\n        defiPrime:{\n          token:'tusd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleTUSDYield',\n          address:'0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleTUSD',\n            name:'idleTUSDYieldV3',\n            address:'0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleTUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token:'aTUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            enabled:true,\n            name:'aavev2',\n            token:'aTUSDv2',\n            address:'0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      WETH:{\n        abi:WETH,\n        token:'WETH',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WETH'\n        },\n        ramp:{\n          swapAsset:'WETH'\n        },\n        defiPrime:{\n          token:'weth'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWETHYield',\n          address:'0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token:'cETH',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            address:'0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token:'aWETH',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      WBTC:{\n        decimals:8,\n        token:'WBTC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(29, 81%, 59%)',\n        address:'0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WBTC'\n        },\n        defiPrime:{\n          token:'wbtc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWBTCYield',\n          address:'0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleWBTC',\n            name:'idleWBTCYieldV3',\n            address:'0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleWBTC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            token:'cWBTC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xc11b1268c1a384e55c48c2391d8d480264a3a7f4',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            decimals:18,\n            token:'iWBTC',\n            enabled:false,\n            name:'fulcrum',\n            address:'0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            token:'aWBTC',\n            address:'0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            enabled:true,\n            name:'aavev2',\n            token:'aWBTCv2',\n            address:'0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      }\n    },\n    risk:{\n      DAI:{\n        abi:DAI,\n        decimals:18,\n        token:'DAI',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAISafe',\n          address:'0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAISafeV3',\n            address:'0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dsr',\n            enabled:true,\n            abi:CHAI,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCSafe',\n          address:'0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCSafeV3',\n            address:'0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTSafe',\n          address:'0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTSafeV3',\n            address:'0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      }\n    }\n  }\n};\n\nexport default availableTokens;","const TransactionToastMessages = {\n    initialized: {\n      message: \"{action} request initialized\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    started: {\n      message: \"{action} request submitted\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    pending: {\n      message: \"Processing {action} request...\",\n      secondaryMessage: \"This may take a few minutes\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: \"InfoOutline\"\n    },\n    confirmed: {\n      message: \"First block confirmed\",\n      secondaryMessage: \"Your {action} request is in progress\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: 'CheckCircle'\n    },\n    success: {\n      message: \"{action} request completed\",\n      variant: \"success\",\n      icon: 'CheckCircle'\n    },\n    error: {\n      message: \"{action} request failed\",\n      secondaryMessage: \"Could not complete transaction.\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"failure\",\n      icon: \"Block\"\n    }\n  };\n\n  export default TransactionToastMessages;\n","import React from \"react\";\nimport { ToastMessage } from \"rimble-ui\";\nimport TransactionToastMessages from \"./TransactionToastMessages\";\n\nclass TransactionToastUtil extends React.Component {\n  // Determines if collections are same size\n  collectionHasNewObject = (prevCollection, currentCollection) => {\n    return (\n      typeof prevCollection === \"undefined\" ||\n      Object.keys(prevCollection).length !==\n        Object.keys(currentCollection).length\n    );\n  };\n\n  // Returns object from currentCollection that doesn't exist in prevCollection\n  getNewObjectFromCollection = (prevCollection, currentCollection) => {\n    if (typeof prevCollection !== \"undefined\") {\n      const objectKey = Object.keys(currentCollection).filter(key => {\n        return !Object.keys(prevCollection).includes(key);\n      });\n      return currentCollection[objectKey];\n    } else {\n      return Object.keys(currentCollection).map(key => {\n        return currentCollection[key];\n      });\n    }\n  };\n\n  // Compare two collections of objects, return single object from current collection that differs from prev collection\n  getUpdatedObjectFromCollection = (prevCollection, currentCollection) => {\n    const updatedTransaction = Object.keys(prevCollection)\n      .map(key => {\n        if (\n          prevCollection[key].lastUpdated !== currentCollection[key].lastUpdated\n        ) {\n          return currentCollection[key];\n        } else {\n          return null;\n        }\n      })\n      .filter(object => object !== null);\n    return updatedTransaction[0];\n  };\n\n  // Returns an transaction from a collection based on a given identifier\n  getTransactionFromCollection = (identifier, collection) => {\n    const object = collection[`tx${identifier}`];\n    return object;\n  };\n\n  // Returns either a new object or finds an updated object in a collection against a previous collection\n  getUpdatedTransaction = (prevCollection, currentCollection) => {\n    let tx = null;\n    let currentTx = {};\n    let prevTx = {};\n\n    if (this.collectionHasNewObject(prevCollection, currentCollection)) {\n      tx = this.getNewObjectFromCollection(prevCollection, currentCollection);\n    } else {\n      currentTx = this.getUpdatedObjectFromCollection(\n        prevCollection,\n        currentCollection\n      );\n      if (currentTx) {\n        prevTx = this.getTransactionFromCollection(\n          currentTx.created,\n          prevCollection\n        );\n      } else {\n        return false;\n      }\n\n      if (currentTx.status !== prevTx.status) {\n        tx = currentTx;\n      }\n    }\n    return tx;\n  };\n\n  // Check for updates to the transactions collection\n  processTransactionUpdates = prevProps => {\n    let tx = null;\n    if (Object.keys(this.props.transactions).length) {\n      tx = this.getUpdatedTransaction(\n        prevProps.transactions,\n        this.props.transactions\n      );\n    }\n\n    if (tx) {\n      this.showTransactionToast(tx);\n    }\n  };\n\n  showTransactionToast = transaction => {\n    // console.log(\"showTransactionToast: \", { ...transaction });\n    // Get text info for toast\n    let toastMeta = this.getTransactionToastMeta(transaction);\n    toastMeta.colorTheme = this.props.themeMode;\n    toastMeta.closeElem = true;\n    // console.log('toastMeta',toastMeta);\n\n    // Show toast\n    window.toastProvider.addMessage(\".\", toastMeta);\n  };\n\n  getTransactionToastMeta = transaction => {\n    let transactionToastMeta = {};\n    let status = transaction.status;\n\n    switch (status) {\n      case \"initialized\":\n        transactionToastMeta = TransactionToastMessages.initialized;\n        break;\n      case \"started\":\n        transactionToastMeta = TransactionToastMessages.started;\n        break;\n      case \"pending\":\n        transactionToastMeta = TransactionToastMessages.pending;\n        break;\n      case \"confirmed\":\n        transactionToastMeta = TransactionToastMessages.confirmed;\n        break;\n      case \"success\":\n        transactionToastMeta = TransactionToastMessages.success;\n        break;\n      case \"error\":\n        transactionToastMeta = TransactionToastMessages.error;\n        break;\n      default:\n        // do nothing\n        break;\n    }\n\n    let transactionAction = '';\n    switch (transaction.method){\n      case 'redeemIdleToken':\n        transactionAction = 'Redeem';\n      break;\n      case 'redeemGovTokens':\n        transactionAction = 'Redeem (Gov Tokens)';\n      break;\n      case 'mintIdleToken':\n      case 'mintIdleTokensProxy':\n        transactionAction = 'Lending';\n      break;\n      case 'migrateFromToIdle':\n      case 'migrateFromCompoundToIdle':\n      case 'migrateFromFulcrumToIdle':\n      case 'migrateFromAaveToIdle':\n      case 'migrateFromIearnToIdle':\n      case 'bridgeIdleV1ToIdleV2':\n        transactionAction = 'Migration';\n      break;\n      case 'executeMetaTransaction':\n        transactionAction = 'Meta-Tx';\n      break;\n      case 'approve':\n        transactionAction = 'Approve';\n      break;\n      case 'rebalance':\n        transactionAction = 'Rebalance';\n      break;\n      default:\n        transactionAction = transaction.method.charAt(0).toUpperCase() + transaction.method.substr(1);\n      break;\n    }\n\n    transactionToastMeta = JSON.parse(JSON.stringify(transactionToastMeta));\n\n    let newMessage = transactionToastMeta.message.replace('{action}',transactionAction);\n    newMessage = newMessage.charAt(0).toUpperCase() + newMessage.slice(1);\n    transactionToastMeta.message = newMessage;\n    transactionToastMeta.closeElem = true;\n    transactionToastMeta.colorTheme = this.props.themeMode;\n\n    return transactionToastMeta;\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    this.processTransactionUpdates(prevProps);\n  }\n\n  render() {\n    return (\n      <div>\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </div>\n    );\n  }\n}\n\nexport default TransactionToastUtil;\n","import Web3 from \"web3\";\nimport jQuery from 'jquery';\nimport theme from \"../theme\";\nimport Tos from \"../Tos/Tos\";\nimport themeDark from \"../theme-dark\";\nimport connectors from './connectors';\nimport Web3Provider from 'web3-react';\nimport { Web3Consumer } from 'web3-react';\nimport CookieConsent from \"react-cookie-consent\";\nimport RimbleWeb3 from \"../utilities/RimbleWeb3\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport React, { Component, Suspense } from \"react\";\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport Header from \"../utilities/components/Header\";\nimport globalConfigs from '../configs/globalConfigs';\nimport ScrollToTop from \"../ScrollToTop/ScrollToTop\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport PageNotFound from \"../PageNotFound/PageNotFound\";\nimport Web3Debugger from \"../Web3Debugger/Web3Debugger\";\nimport availableTokens from '../configs/availableTokens';\nimport TransactionToastUtil from \"../utilities/TransactionToastUtil\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { ThemeProvider, Box, Text, Link, Image, Flex } from 'rimble-ui';\n\n// Lazy Loading\nconst Landing = React.lazy(() => import(\"../Landing/Landing\"));\nconst Dashboard = React.lazy(() => import('../Dashboard/Dashboard'));\nconst Governance = React.lazy(() => import('../Governance/Governance'));\n\nclass App extends Component {\n  state = {\n    cachedData:{},\n    buyToken: null,\n    selectedTab: '1',\n    route: \"default\", // or 'onboarding'\n    themeMode:'light',\n    connecting: false,\n    tokenConfig: null,\n    genericError: null,\n    customAddress: null,\n    connectorName: null,\n    selectedToken: null,\n    selectedTheme:theme,\n    currentSection:null,\n    walletProvider: null,\n    availableTokens: null,\n    buyModalOpened: false,\n    selectedStrategy: null,\n    toastMessageProps: null,\n    callbackAfterLogin: null,\n    width: window.innerWidth,\n    availableStrategies: null,\n    height: window.innerHeight,\n    unsubscribeFromHistory: null,\n    enableUnderlyingWithdraw: false,\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  closeToastMessage = (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    this.setState({\n      toastMessageProps:null\n    });\n  }\n\n  showToastMessage = (props) => {\n    this.setState({\n      toastMessageProps:props\n    });\n  }\n\n  processCustomParam = (props,prevProps) => {\n    // const params = props ? props.match.params : null;\n    // const prevParams = prevProps ? prevProps.match.params : null;\n\n    // Reset params\n    /*\n    if ( prevParams && params && prevParams.customParam !== params.customParam && (!params || !params.customParam || params.customParam === undefined)){\n      this.setState({\n        customAddress:null,\n        enableUnderlyingWithdraw:false\n      });\n    } else if (params && typeof params.customParam === 'string') {\n      // Check if custom address\n      if (params.customParam.toLowerCase().match(/0x[\\w]{40}/) && this.state.customAddress !== params.customParam){\n        this.setCustomAddress(params.customParam);\n      } else if (params && params.customParam === 'withdraw' && !this.state.enableUnderlyingWithdraw){\n        this.setState({\n          customAddress:null,\n          enableUnderlyingWithdraw:true\n        });\n      }\n    }\n    */\n  }\n\n  clearCachedData = () => {\n    this.functionsUtil.setLocalStorage('cachedData',{},true);\n    this.setState({\n      cachedData:{}\n    });\n    return true;\n  }\n\n  setCachedData = (key,data,TTL=null,useLocalStorage=false) => {\n\n    key = key.toLowerCase();\n    const cachedKeyFound = this.state.cachedData[key];\n    const currentTime = parseInt(Date.now()/1000);\n\n    const update_key = !cachedKeyFound || ( (!cachedKeyFound.expirationDate || cachedKeyFound.expirationDate>=currentTime) || JSON.stringify(cachedKeyFound.data) !== JSON.stringify(data));\n\n    let output = false;\n\n    if (update_key){\n      const expirationDate = TTL ? currentTime+(TTL) : null;\n\n      // Save cached data in local storage\n      if (useLocalStorage){\n        let storedCachedData = this.functionsUtil.getStoredItem('cachedData');\n        if (!storedCachedData){\n          storedCachedData = {};\n        }\n        storedCachedData = {\n          ...storedCachedData,\n          [key]:{\n            data,\n            expirationDate\n          }\n        };\n        // console.log('STORED CACHE - INSERT KEY',key,data);\n        this.functionsUtil.setLocalStorage('cachedData',storedCachedData,true);\n      }\n\n      // Set new cached data state\n      this.setState((prevState) => ({\n        cachedData: {\n          ...prevState.cachedData,\n          [key]:{\n            data,\n            expirationDate\n          }\n        }\n      }));\n\n      output = true;\n    }\n\n    return output;\n  }\n\n  setCallbackAfterLogin = (callbackAfterLogin) => {\n    this.setState({\n      callbackAfterLogin\n    });\n  }\n\n  setCustomAddress = (customAddress) => {\n    // Reset customAddress if not well formatted\n    if (customAddress && !customAddress.toLowerCase().match(/0x[\\w]{40}/)){\n      customAddress = null;\n    }\n\n    if (customAddress !== this.state.customAddress){\n      this.setState({\n        customAddress,\n        enableUnderlyingWithdraw:false\n      });\n    }\n  }\n\n  async selectTab(e, tabIndex) {\n    return this.setState(state => ({...state, selectedTab: tabIndex}));\n  }\n\n  async loadAvailableTokens() {\n    const newState = {};\n    const availableStrategies = {};\n    const requiredNetwork = globalConfigs.network.requiredNetwork;\n\n    // Load available strategies\n    Object.keys(availableTokens[requiredNetwork]).forEach((strategy) => {\n      availableStrategies[strategy] = availableTokens[requiredNetwork][strategy];\n    });\n\n    newState.availableStrategies = availableStrategies;\n\n    // Load strategy\n    const selectedStrategy = this.state.selectedStrategy;\n    if (selectedStrategy && this.state.availableStrategies[selectedStrategy]){\n      newState.availableTokens = this.state.availableStrategies[selectedStrategy];\n\n      // Load token\n      const selectedToken = this.state.selectedToken;\n      if (selectedToken && newState.availableTokens[selectedToken]){\n        newState.tokenConfig = newState.availableTokens[selectedToken];\n      }\n    }\n\n    // console.log('loadAvailableTokens',newState);\n\n    await this.setState(newState);\n  }\n\n  async setStrategyToken(selectedStrategy,selectedToken){\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    const newState = {\n      tokenConfig:!selectedToken ? null : this.state.tokenConfig,\n      availableTokens:!selectedToken ? null : this.state.availableTokens,\n      selectedToken:!selectedToken ? selectedToken :this.state.selectedToken,\n      selectedStrategy:!selectedStrategy ? selectedStrategy :this.state.selectedStrategy,\n    };\n\n    if (selectedStrategy && this.state.availableStrategies && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())){\n      newState.selectedStrategy = selectedStrategy.toLowerCase();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken) {\n      if ( this.state.availableTokens && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase()) ){\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableTokens[selectedToken];\n      } else if (this.state.availableStrategies && Object.keys(this.state.availableStrategies[selectedStrategy]).includes(selectedToken.toUpperCase())) {\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableStrategies[selectedStrategy][newState.selectedToken];\n        newState.availableTokens = this.state.availableStrategies[selectedStrategy];\n      }\n    }\n\n    // console.log('setStrategyToken',newState);\n\n    await this.setState(newState,callback);\n  }\n\n  async setStrategy(selectedStrategy) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedStrategy && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())){\n      selectedStrategy = selectedStrategy.toLowerCase();\n      await this.setState({\n        selectedStrategy\n      },callback);\n    } else if (!selectedStrategy) {\n      await this.setState({\n        selectedStrategy\n      },callback);\n    }\n  }\n\n  async setToken(selectedToken) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase())){\n      selectedToken = selectedToken.toUpperCase();\n      const newState = {\n        selectedToken\n      };\n      newState.tokenConfig = this.state.availableTokens[selectedToken];\n      await this.setState(newState,callback);\n    } else if(!selectedToken) {\n      await this.setState({\n        selectedToken,\n        tokenConfig:null\n      },callback);\n    }\n  }\n\n  async componentWillMount() {\n\n    this.loadUtils();\n\n    window.BNify = this.functionsUtil.BNify;\n\n    // Suppress warnings and errors in production\n    const isProduction = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n    if (isProduction){\n      window.console.error = () => {};\n      window.console.warn = () => {};\n    }\n\n    window.jQuery = jQuery;\n\n    if (window.localStorage){\n      this.functionsUtil.removeStoredItem('context');\n\n      // Clear all localStorage data except walletProvider and connectorName if version has changed\n      const version = this.functionsUtil.getStoredItem('version',false);\n      if (version !== globalConfigs.version){\n        this.functionsUtil.clearStoredData(['walletProvider','connectorName']);\n        this.functionsUtil.setLocalStorage('version',globalConfigs.version);\n      }\n    }\n\n    const themeMode = this.functionsUtil.getStoredItem('themeMode',false);\n    if (themeMode){\n      this.setThemeMode(themeMode);\n    }\n\n    window.closeIframe = (w) => {\n      const iFrames = document.getElementsByTagName('iframe');\n      for (let i=0;i<iFrames.length;i++){\n        const iframe = iFrames[i];\n        if (iframe.contentWindow === w){\n          window.jQuery(iframe).parents('.iframe-container')[0].remove();\n        }\n      }\n    }\n\n    window.addEventListener('resize', this.handleWindowSizeChange);\n\n    this.loadCustomAddress();\n    this.loadAvailableTokens();\n  }\n\n  loadCustomAddress(){\n    if (!this.state.customAddress){\n      const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n      if (walletProvider === 'custom'){\n        const customAddress = this.functionsUtil.getCustomAddress();\n        if (customAddress && customAddress !== this.state.customAddress){\n          this.setState({\n            customAddress\n          });\n        }\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const currentSectionChanged = prevState.currentSection !== this.state.currentSection;\n    if (currentSectionChanged){\n      if (this.state.currentSection === 'landing'){\n        this.setThemeMode('light',false);\n      } else {\n        // Get stored Mode\n        const themeMode = this.functionsUtil.getStoredItem('themeMode',false) || this.functionsUtil.getGlobalConfig(['dashboard','theme','mode']);\n        this.setThemeMode(themeMode);\n      }\n    }\n\n    const tokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const strategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n\n    if (tokenChanged || strategyChanged){\n      this.loadAvailableTokens();\n    }\n  }\n\n  componentDidMount() {\n\n    // Close iFrame\n    if (window.self !== window.top && window.top.location.href.indexOf(globalConfigs.baseURL) !== -1 && typeof window.parent.closeIframe === 'function' ){\n      window.parent.closeIframe(window.self);\n    }\n\n    window.showToastMessage = this.showToastMessage;\n    window.closeToastMessage = this.closeToastMessage;\n\n    if (localStorage){\n      const connectorName = localStorage.getItem('connectorName') ? localStorage.getItem('connectorName') : 'Infura';\n      const walletProvider = localStorage.getItem('walletProvider') ? localStorage.getItem('walletProvider') : 'Infura';\n\n      this.setConnector(connectorName,walletProvider);\n    }\n  }\n\n  handleWindowSizeChange = () => {\n    const newState = {\n      width:this.state.width,\n      height:this.state.height,\n    };\n\n    const widthChanged = window.innerWidth !== this.state.width;\n    const heightChanged = window.innerHeight !== this.state.height;\n\n    if (widthChanged || heightChanged){\n      if (widthChanged){\n        newState.width = window.innerWidth;\n      }\n      if (heightChanged){\n        newState.height = window.innerHeight;\n      }\n      return this.setState(newState);\n    }\n\n    return null;\n  };\n\n  // Optional parameters to pass into RimbleWeb3\n  config = globalConfigs.network;\n\n  showRoute(route) {\n    return this.setState({ route });\n  }\n\n  closeBuyModal(e) {\n    if (e){\n      e.preventDefault();\n    }\n    return this.setState({\n      buyToken:null,\n      buyModalOpened:false\n    });\n  }\n\n  openBuyModal(e,buyToken) {\n    e.preventDefault();\n\n    return this.setState({\n      buyToken,\n      buyModalOpened:true\n    });\n  }\n\n  async logout(){\n    // Reset Custom Address\n    this.setState({\n      customAddress:null\n    });\n    // Reset Localstorage\n    this.functionsUtil.clearStoredData(['version','themeMode','lastLogin']);\n  }\n\n  setConnector(connectorName,walletProvider){\n\n    let connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n    if (!connectorInfo && walletProvider){\n      connectorInfo = globalConfigs.connectors[walletProvider.toLowerCase()];\n    }\n\n    if ( (connectorInfo && !connectorInfo.enabled) || (connectorName !== 'Injected' && !Object.keys(globalConfigs.connectors).includes(connectorName.toLowerCase())) || (walletProvider && !Object.keys(globalConfigs.connectors).includes(walletProvider.toLowerCase()))) {\n      connectorName = 'Infura';\n      walletProvider = 'Infura';\n    } else if ( connectorName === 'Injected' ){\n      const hasMetamask = GeneralUtil.hasMetaMask();\n      const hasDapper = GeneralUtil.hasDapper()\n\n      // Check if injected connector is valid\n      switch (walletProvider){\n        case 'Metamask':\n          if (!hasMetamask && hasDapper){\n            walletProvider = 'Dapper';\n          }\n        break;\n        case 'Dapper':\n          if (!hasDapper && hasMetamask){\n            walletProvider = 'Metamask';\n          }\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.functionsUtil.setLocalStorage('connectorName', connectorName);\n    this.functionsUtil.setLocalStorage('walletProvider', walletProvider);\n\n    return this.setState({\n      connectorName,\n      walletProvider\n    },() => {\n      this.loadCustomAddress();\n    });\n  }\n\n  setThemeMode(themeMode,store=true){\n    let selectedTheme = null;\n\n    // Check Dark Mode Enabled\n    const darkModeEnabled = this.functionsUtil.getGlobalConfig(['dashboard','theme','darkModeEnabled']);\n    if (themeMode === 'dark' && !darkModeEnabled){\n      themeMode = 'light';\n    }\n\n    switch (themeMode){\n      default:\n      case 'light':\n        selectedTheme = theme;\n      break;\n      case 'dark':\n        selectedTheme = themeDark;\n      break;\n    }\n\n    if (store){\n      this.functionsUtil.setLocalStorage('themeMode',themeMode);\n    }\n\n    this.setState({\n      themeMode,\n      selectedTheme\n    });\n  }\n\n  setCurrentSection(currentSection){\n    this.setState({\n      currentSection\n    });\n  }\n\n  render() {\n    const isMobile = this.state.width <= 768;\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n\n    // console.log(this.state.selectedToken,this.state.tokenConfig);\n\n    const SuspenseLoader = (\n      <Flex\n        width={1}\n        minHeight={'100vh'}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        backgroundColor={'selectBg'}\n      >\n        <FlexLoader\n          textProps={{\n            textSize:4,\n            fontWeight:2\n          }}\n          loaderProps={{\n            mb:3,\n            size:'80px',\n            color:'primary'\n          }}\n          flexProps={{\n            my:3,\n            flexDirection:'column'\n          }}\n          text={''}\n        />\n      </Flex>\n    );\n\n    return (\n      <Router>\n        <ScrollToTop />\n        <ThemeProvider\n          theme={this.state.selectedTheme}\n        >\n          <Web3Provider\n            web3Api={Web3}\n            connectors={connectors}\n            libraryName={'web3.js'}\n          >\n            <Web3Consumer>\n              {context => {\n                return (\n                  <RimbleWeb3\n                    context={context}\n                    isMobile={isMobile}\n                    config={this.config}\n                    connectors={connectors}\n                    theme={this.state.selectedTheme}\n                    cachedData={this.state.cachedData}\n                    tokenConfig={this.state.tokenConfig}\n                    customAddress={this.state.customAddress}\n                    selectedToken={this.state.selectedToken}\n                    connectorName={this.state.connectorName}\n                    walletProvider={this.state.walletProvider}\n                    setConnector={this.setConnector.bind(this)}\n                    availableTokens={this.state.availableTokens}\n                    setCachedData={this.setCachedData.bind(this)}\n                    clearCachedData={this.clearCachedData.bind(this)}\n                    callbackAfterLogin={this.state.callbackAfterLogin}\n                    availableStrategies={this.state.availableStrategies}\n                    setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                    enableUnderlyingWithdraw={this.state.enableUnderlyingWithdraw}\n                  >\n                    <RimbleWeb3.Consumer>\n                      {({\n                        web3,\n                        modals,\n                        network,\n                        account,\n                        initWeb3,\n                        simpleID,\n                        biconomy,\n                        contracts,\n                        transaction,\n                        initAccount,\n                        initContract,\n                        transactions,\n                        initSimpleID,\n                        tokenDecimals,\n                        accountBalance,\n                        needsPreflight,\n                        validateAccount,\n                        rejectValidation,\n                        accountValidated,\n                        getTokenDecimals,\n                        getAccountBalance,\n                        accountBalanceLow,\n                        accountInizialized,\n                        accountBalanceToken,\n                        userRejectedConnect,\n                        initializeContracts,\n                        rejectAccountConnect,\n                        contractsInitialized,\n                        userRejectedValidation,\n                        accountValidationPending,\n                        connectAndValidateAccount,\n                        contractMethodSendWrapper\n                      }) => {\n                        return (\n                        <Box>\n                          <Switch>\n                            <Route\n                              path=\"/dashboard/:section?/:param1?/:param2?\"\n                              render={\n                                (props) => \n                                  <Suspense\n                                    fallback={SuspenseLoader}\n                                  >\n                                    <Dashboard\n                                      {...props}\n                                      web3={web3}\n                                      modals={modals}\n                                      network={network}\n                                      context={context}\n                                      account={account}\n                                      isDashboard={true}\n                                      initWeb3={initWeb3}\n                                      biconomy={biconomy}\n                                      isMobile={isMobile}\n                                      simpleID={simpleID}\n                                      contracts={contracts}\n                                      initAccount={initAccount}\n                                      initSimpleID={initSimpleID}\n                                      initContract={initContract}\n                                      transactions={transactions}\n                                      buyToken={this.state.buyToken}\n                                      logout={this.logout.bind(this)}\n                                      accountBalance={accountBalance}\n                                      themeMode={this.state.themeMode}\n                                      theme={this.state.selectedTheme}\n                                      validateAccount={validateAccount}\n                                      connecting={this.state.connecting}\n                                      cachedData={this.state.cachedData}\n                                      setToken={this.setToken.bind(this)}\n                                      accountValidated={accountValidated}\n                                      getTokenDecimals={getTokenDecimals}\n                                      rejectValidation={rejectValidation}\n                                      tokenConfig={this.state.tokenConfig}\n                                      getAccountBalance={getAccountBalance}\n                                      accountBalanceLow={accountBalanceLow}\n                                      accountInizialized={accountInizialized}\n                                      selectedToken={this.state.selectedToken}\n                                      connectorName={this.state.connectorName}\n                                      setStrategy={this.setStrategy.bind(this)}\n                                      userRejectedConnect={userRejectedConnect}\n                                      accountBalanceToken={accountBalanceToken}\n                                      initializeContracts={initializeContracts}\n                                      walletProvider={this.state.walletProvider}\n                                      buyModalOpened={this.state.buyModalOpened}\n                                      contractsInitialized={contractsInitialized}\n                                      openBuyModal={this.openBuyModal.bind(this)}\n                                      rejectAccountConnect={rejectAccountConnect}\n                                      handleMenuClick={this.selectTab.bind(this)}\n                                      setConnector={this.setConnector.bind(this)}\n                                      setThemeMode={this.setThemeMode.bind(this)}\n                                      availableTokens={this.state.availableTokens}\n                                      closeBuyModal={this.closeBuyModal.bind(this)}\n                                      setCachedData={this.setCachedData.bind(this)}\n                                      selectedStrategy={this.state.selectedStrategy}\n                                      userRejectedValidation={userRejectedValidation}\n                                      clearCachedData={this.clearCachedData.bind(this)}\n                                      setStrategyToken={this.setStrategyToken.bind(this)}\n                                      accountValidationPending={accountValidationPending}\n                                      availableStrategies={this.state.availableStrategies}\n                                      setCurrentSection={this.setCurrentSection.bind(this)}\n                                      connectAndValidateAccount={connectAndValidateAccount}\n                                      contractMethodSendWrapper={contractMethodSendWrapper}\n                                      setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                    />\n                                  </Suspense>\n\n                              }\n                            >\n                            </Route>\n                            {\n                              governanceEnabled && \n                                <Route\n                                  path=\"/governance/:section?/:item_id?\"\n                                  render={\n                                    (props) =>\n                                      <Suspense\n                                        fallback={SuspenseLoader}\n                                      >\n                                        <Governance\n                                          {...props}\n                                          web3={web3}\n                                          modals={modals}\n                                          network={network}\n                                          context={context}\n                                          account={account}\n                                          initWeb3={initWeb3}\n                                          biconomy={biconomy}\n                                          isMobile={isMobile}\n                                          simpleID={simpleID}\n                                          isGovernance={true}\n                                          contracts={contracts}\n                                          initAccount={initAccount}\n                                          initSimpleID={initSimpleID}\n                                          initContract={initContract}\n                                          transactions={transactions}\n                                          buyToken={this.state.buyToken}\n                                          logout={this.logout.bind(this)}\n                                          accountBalance={accountBalance}\n                                          themeMode={this.state.themeMode}\n                                          theme={this.state.selectedTheme}\n                                          validateAccount={validateAccount}\n                                          connecting={this.state.connecting}\n                                          cachedData={this.state.cachedData}\n                                          setToken={this.setToken.bind(this)}\n                                          accountValidated={accountValidated}\n                                          getTokenDecimals={getTokenDecimals}\n                                          rejectValidation={rejectValidation}\n                                          tokenConfig={this.state.tokenConfig}\n                                          getAccountBalance={getAccountBalance}\n                                          accountBalanceLow={accountBalanceLow}\n                                          accountInizialized={accountInizialized}\n                                          selectedToken={this.state.selectedToken}\n                                          connectorName={this.state.connectorName}\n                                          setStrategy={this.setStrategy.bind(this)}\n                                          userRejectedConnect={userRejectedConnect}\n                                          accountBalanceToken={accountBalanceToken}\n                                          initializeContracts={initializeContracts}\n                                          walletProvider={this.state.walletProvider}\n                                          buyModalOpened={this.state.buyModalOpened}\n                                          contractsInitialized={contractsInitialized}\n                                          openBuyModal={this.openBuyModal.bind(this)}\n                                          rejectAccountConnect={rejectAccountConnect}\n                                          handleMenuClick={this.selectTab.bind(this)}\n                                          setConnector={this.setConnector.bind(this)}\n                                          setThemeMode={this.setThemeMode.bind(this)}\n                                          availableTokens={this.state.availableTokens}\n                                          closeBuyModal={this.closeBuyModal.bind(this)}\n                                          setCachedData={this.setCachedData.bind(this)}\n                                          selectedStrategy={this.state.selectedStrategy}\n                                          userRejectedValidation={userRejectedValidation}\n                                          clearCachedData={this.clearCachedData.bind(this)}\n                                          setStrategyToken={this.setStrategyToken.bind(this)}\n                                          accountValidationPending={accountValidationPending}\n                                          availableStrategies={this.state.availableStrategies}\n                                          setCurrentSection={this.setCurrentSection.bind(this)}\n                                          connectAndValidateAccount={connectAndValidateAccount}\n                                          contractMethodSendWrapper={contractMethodSendWrapper}\n                                          setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                        />\n                                      </Suspense>\n                                  }\n                                >\n                                </Route>\n                            }\n                            <Route>\n                              <Header\n                                modals={modals}\n                                network={network}\n                                context={context}\n                                account={account}\n                                initWeb3={initWeb3}\n                                isMobile={isMobile}\n                                contracts={contracts}\n                                initAccount={initAccount}\n                                initContract={initContract}\n                                buyToken={this.state.buyToken}\n                                accountBalance={accountBalance}\n                                logout={this.logout.bind(this)}\n                                validateAccount={validateAccount}\n                                connecting={this.state.connecting}\n                                accountValidated={accountValidated}\n                                getTokenDecimals={getTokenDecimals}\n                                rejectValidation={rejectValidation}\n                                tokenConfig={this.state.tokenConfig}\n                                getAccountBalance={getAccountBalance}\n                                accountBalanceLow={accountBalanceLow}\n                                selectedToken={this.state.selectedToken}\n                                connectorName={this.state.connectorName}\n                                userRejectedConnect={userRejectedConnect}\n                                accountBalanceToken={accountBalanceToken}\n                                walletProvider={this.state.walletProvider}\n                                buyModalOpened={this.state.buyModalOpened}\n                                contractsInitialized={contractsInitialized}\n                                openBuyModal={this.openBuyModal.bind(this)}\n                                rejectAccountConnect={rejectAccountConnect}\n                                handleMenuClick={this.selectTab.bind(this)}\n                                setConnector={this.setConnector.bind(this)}\n                                availableTokens={this.state.availableTokens}\n                                closeBuyModal={this.closeBuyModal.bind(this)}\n                                userRejectedValidation={userRejectedValidation}\n                                accountValidationPending={accountValidationPending}\n                                connectAndValidateAccount={connectAndValidateAccount}\n                                setToken={ e => { this.setToken(e) } }\n                              />\n\n                              {this.state.route === \"onboarding\" ? (\n                                <Web3Debugger\n                                  web3={web3}\n                                  account={account}\n                                  accountBalance={accountBalance}\n                                  accountBalanceToken={accountBalanceToken}\n                                  accountBalanceLow={accountBalanceLow}\n                                  initAccount={initAccount}\n                                  rejectAccountConnect={rejectAccountConnect}\n                                  userRejectedConnect={userRejectedConnect}\n                                  accountValidated={accountValidated}\n                                  accountValidationPending={accountValidationPending}\n                                  rejectValidation={rejectValidation}\n                                  userRejectedValidation={userRejectedValidation}\n                                  validateAccount={validateAccount}\n                                  connectAndValidateAccount={connectAndValidateAccount}\n                                  modals={modals}\n                                  network={network}\n                                  transaction={transaction}\n                                />\n                              ) : null}\n\n                              {this.state.route === \"default\" ? (\n                                <Switch>\n                                  <Route exact path=\"/\"\n                                    render={ (props) =>\n                                      <Suspense\n                                        fallback={SuspenseLoader}\n                                      >\n                                        <Landing\n                                          {...props}\n                                          web3={web3}\n                                          network={network}\n                                          account={account}\n                                          isMobile={isMobile}\n                                          simpleID={simpleID}\n                                          contracts={contracts}\n                                          innerWidth={this.state.width}\n                                          logout={this.logout.bind(this)}\n                                          innerHeight={this.state.height}\n                                          accountBalance={accountBalance}\n                                          themeMode={this.state.themeMode}\n                                          theme={this.state.selectedTheme}\n                                          cachedData={this.state.cachedData}\n                                          connecting={this.state.connecting}\n                                          selectedTab={this.state.selectedTab}\n                                          tokenConfig={this.state.tokenConfig}\n                                          accountBalanceLow={accountBalanceLow}\n                                          getAccountBalance={getAccountBalance}\n                                          customAddress={this.state.customAddress}\n                                          selectedToken={this.state.selectedToken}\n                                          accountBalanceToken={accountBalanceToken}\n                                          closeToastMessage={this.closeToastMessage}\n                                          contractsInitialized={contractsInitialized}\n                                          openBuyModal={this.openBuyModal.bind(this)}\n                                          setThemeMode={this.setThemeMode.bind(this)}\n                                          processCustomParam={this.processCustomParam}\n                                          availableTokens={this.state.availableTokens}\n                                          setCachedData={this.setCachedData.bind(this)}\n                                          updateSelectedTab={this.selectTab.bind(this)}\n                                          toastMessageProps={this.state.toastMessageProps}\n                                          clearCachedData={this.clearCachedData.bind(this)}\n                                          availableStrategies={this.state.availableStrategies}\n                                          setCurrentSection={this.setCurrentSection.bind(this)}\n                                          connectAndValidateAccount={connectAndValidateAccount}\n                                          setToken={ e => { this.setToken(e) } }\n                                        />\n                                        <CookieConsent\n                                          expires={365}\n                                          buttonText={\"Ok\"}\n                                          location={\"bottom\"}\n                                          acceptOnScroll={true}\n                                          cookieName={\"cookieAccepted\"}\n                                          acceptOnScrollPercentage={5}\n                                          style={{background: \"rgba(255,255,255,0.95)\",zIndex:'9999999'}}\n                                          buttonStyle={{display: isMobile ? \"block\" : \"none\", backgroundColor:'#0036ff', color: 'white', marginTop: isMobile ? \"0px\" : \"15px\"}}\n                                        >\n                                          <Flex flexDirection={'row'} alignItems={['flex-start','center']} justifyContent={'flex-start'} maxHeight={['150px','initial']} style={ isMobile ? {overflowY:'scroll'} : null }>\n                                            <Image display={['none','block']} src={'images/cookie.svg'} width={'42px'} height={'42px'} />\n                                            <Text pl={[0,3]} color={'dark-gray'} fontSize={1} textAlign={'justify'}>\n                                              This website or its third-party tools process personal data (e.g. browsing data or IP addresses) and use cookies or other identifiers, which are necessary for its functioning and required to achieve the purposes illustrated in the cookie policy. To learn more, please refer to the <Link href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'} target={'_blank'} rel=\"nofollow noopener noreferrer\" hoverColor={'blue'}>cookie policy</Link>.\n                                              You accept the use of cookies or other identifiers by closing or dismissing this notice, by scrolling this page, by clicking a link or button or by continuing to browse otherwise.\n                                            </Text>\n                                          </Flex>\n                                        </CookieConsent>\n                                      </Suspense>\n                                    }\n                                  ></Route>\n                                  <Route exact path=\"/terms-of-service\">\n                                    <Tos />\n                                  </Route>\n                                  <Route>\n                                    <PageNotFound />\n                                  </Route>\n                                </Switch>\n                              ) : null}\n                            </Route>\n                          </Switch>\n                          <TransactionToastUtil\n                            transactions={transactions}\n                            themeMode={this.state.themeMode}\n                          />\n                        </Box>\n                      )}}\n                    </RimbleWeb3.Consumer>\n                  </RimbleWeb3>\n                );\n              }}\n            </Web3Consumer>\n          </Web3Provider>\n        </ThemeProvider>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport * as Sentry from '@sentry/browser';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\n\nif (window.location.hostname !== 'localhost') {\n  Sentry.init({\n    dsn: \"https://56f5c0bce273442390d7f25698fefe53@sentry.io/1547544\",\n    beforeSend(event, hint) {\n      let output = event;\n      const error = hint.originalException;\n      if (error && error.message){\n        if (error.message.match(/Failed to subscribe to new newBlockHeaders/i)){\n          output = false;\n        }\n      }\n      return output;\n    }\n  });\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TableRow extends Component {\n  render() {\n    const FieldComponent = this.props.fieldComponent;\n    const isInteractive = typeof this.props.handleClick === 'function';\n    return (\n      <DashboardCard\n        cardProps={{\n          mb:2,\n          width:1,\n          px:[2,4],\n          py:[2,'12px']\n        }}\n        id={this.props.cardId}\n        {...this.props.rowProps}\n        className={this.props.token}\n        isInteractive={isInteractive}\n        handleClick={ isInteractive ? e => this.props.handleClick(this.props) : null }\n      >\n        <Flex\n          flexDirection={'row'}\n          id={this.props.rowId}\n        >\n          {\n            this.props.cols.map((colInfo,colIndex) => {\n              if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile)){\n                return null;\n              }\n              return (\n                <Flex\n                  key={`col-${colIndex}`}\n                  {...colInfo.props}\n                >\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    {...colInfo.parentProps}\n                  >\n                    {\n                      colInfo.fields.map((fieldInfo,fieldIndex) => {\n                        if (fieldInfo.visible === false || (fieldInfo.mobile === false && this.props.isMobile)){\n                          return null;\n                        }\n                        return (\n                          <Flex\n                            height={'100%'}\n                            flexDirection={'column'}\n                            alignItems={'flex-start'}\n                            justifyContent={'center'}\n                            {...fieldInfo.parentProps}\n                            style={fieldInfo.style || {\n                              overflow:'hidden'\n                            }}\n                            width={colInfo.fields.length>1 ? 'auto' : 1}\n                            id={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                            key={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                          >\n                            <FieldComponent\n                              {...this.props}\n                              fieldInfo={fieldInfo}\n                              colProps={colInfo.props}\n                              parentId={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                            />\n                          </Flex>\n                        );\n                      })\n                    }\n                  </Flex>\n                </Flex>\n              )\n            })\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default TableRow;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\n\nclass TableHeader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        px={[2,4]}\n        pb={[2,3]}\n        flexDirection={'row'}\n      >\n        {\n          this.props.cols.map((colInfo,colIndex) => {\n            // Skip non-mobile columns\n            if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile)){\n              return null;\n            }\n\n            return (colInfo.title && colInfo.title.length) ? (\n              <TableCellHeader\n                {...this.props}\n                {...colInfo.props}\n                desc={colInfo.desc}\n                title={colInfo.title}\n                key={`col-header-${colIndex}`}\n              >\n                {colInfo.title}\n              </TableCellHeader>\n            ) : (\n              <Flex key={`col-header-${colIndex}`} {...colInfo.props}></Flex>\n            )\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableHeader;\n","import React, { Component } from 'react';\nimport styles from './Migrate.module.scss';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\nimport { Box, Flex, Text, Icon, Checkbox, Input, Link, Image } from \"rimble-ui\";\n\nclass Migrate extends Component {\n\n  state = {\n    nonce:0,\n    loading:true,\n    action:'migrate',\n    processing:{\n      approve:{\n        txHash:null,\n        loading:false\n      },\n      migrate:{\n        txHash:null,\n        loading:false\n      },\n      redeem:{\n        txHash:null,\n        loading:false\n      }\n    },\n    inputValue:{},\n    usePermit:false,\n    oldTokenName:null,\n    oldIdleTokens:null,\n    skipMigration:false,\n    buttonDisabled:true,\n    migrationEnabled:null,\n    fastBalanceSelector:{},\n    oldContractBalance:null,\n    biconomyLimitReached:false,\n    metaTransactionsEnabled:true,\n    oldContractTokenDecimals:null,\n    migrationContractApproved:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  toggleSkipMigration = (skipMigration) => {\n    this.setState({\n      skipMigration\n    });\n\n    if (typeof this.props.toggleSkipMigration === 'function'){\n      this.props.toggleSkipMigration(skipMigration);\n    }\n  }\n\n  changeInputValue = (e) => {\n    if (!this.state.action){\n      return false;\n    }\n    const amount = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: null\n      },\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!this.state.action){\n      return false;\n    }\n    if (!amount){\n      amount = this.state.inputValue[this.state.action];\n    }\n    let buttonDisabled = true;\n    if (amount){\n      buttonDisabled = amount.lte(0);\n      switch (this.state.action){\n        case 'migrate':\n        case 'redeem':\n          buttonDisabled = buttonDisabled || amount.gt(this.state.oldIdleTokens);\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  setInputValue = () => {\n    if (!this.state.action || this.state.fastBalanceSelector[this.state.action] === null){\n      return false;\n    }\n\n    let amount = null;\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n\n    switch(this.state.action){\n      case 'migrate':\n      case 'redeem':\n        amount = this.state.oldIdleTokens ? this.functionsUtil.BNify(this.state.oldIdleTokens).times(selectedPercentage) : null;\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  setFastBalanceSelector = (percentage) => {\n    if (!this.state.action){\n      return false;\n    }\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: percentage\n      }\n    }));\n  }\n\n  executeAction = async () => {\n\n    const inputValue = this.state.inputValue[this.state.action];\n\n    if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)){\n      return false;\n    }\n\n    const loading = true;\n\n    switch (this.state.action){\n      case 'redeem':\n\n        if (!this.props.tokenConfig.migration || !this.props.tokenConfig.migration.oldContract){\n          return false;\n        }\n\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n\n        const idleTokenToRedeem = this.functionsUtil.normalizeTokenAmount(inputValue,18);\n\n        // Get amounts for best allocations\n        const _skipRebalance = true;\n        let paramsForRedeem = null;\n\n        /*\n        if (this.props.account){\n          const callParams = { from: this.props.account, gas: this.props.web3.utils.toBN(5000000) };\n          paramsForRedeem = await this.functionsUtil.genericContractCall(oldContractName,'getParamsForRedeemIdleToken',[idleTokenToRedeem, _skipRebalance],callParams);\n        }\n        */\n\n        const _clientProtocolAmountsRedeem = paramsForRedeem && paramsForRedeem.length ? paramsForRedeem[1] : [];\n        const gasLimitRedeem = _clientProtocolAmountsRedeem.length && _clientProtocolAmountsRedeem.indexOf('0') === -1 ? this.functionsUtil.BNify(1500000) : this.functionsUtil.BNify(1000000);\n\n        const callbackRedeem = (tx,error) => {\n          const txSucceeded = tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: `Redeem_old`,\n            eventAction: this.props.selectedToken,\n            eventLabel: tx.status,\n            eventValue: parseInt(inputValue)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (txSucceeded){\n            this.setState((prevState) => ({\n              inputValue:{\n                ...prevState.inputValue,\n                [this.state.action]: this.functionsUtil.BNify(0)\n              }\n            }));\n          }\n        };\n\n        const callbackReceiptRedeem = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                ...prevState.processing[this.state.action],\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.props.contractMethodSendWrapper(oldContractName, 'redeemIdleToken', [\n          idleTokenToRedeem, _skipRebalance, _clientProtocolAmountsRedeem\n        ], null, callbackRedeem, callbackReceiptRedeem, gasLimitRedeem);\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        [this.state.action]:{\n          ...prevState.processing[this.state.action],\n          loading\n        }\n      }\n    }));\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n    this.checkMigration();\n  }\n\n  componentDidMount(){\n    \n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const biconomyChanged = prevProps.biconomy !== this.props.biconomy;\n    const usePermitChanged = prevProps.usePermit !== this.props.usePermit;\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken || (!prevProps.tokenConfig && this.props.tokenConfig);\n\n    if (tokenChanged || accountChanged || biconomyChanged || usePermitChanged){\n      this.checkMigration();\n    }\n\n    const actionChanged = this.state.action !== prevState.action;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector[this.state.action] !== prevState.fastBalanceSelector[this.state.action];\n    if (actionChanged || fastBalanceSelectorChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (contractApprovedChanged){\n      // console.log(this.props.selectedToken,'contractApprovedChanged',this.state.migrationContractApproved);\n      if (typeof this.props.callbackApprove === 'function'){\n        this.props.callbackApprove(this.state.migrationContractApproved);\n      }\n    }\n  }\n\n  toggleMetaTransactionsEnabled = (metaTransactionsEnabled) => {\n    this.setState({\n      metaTransactionsEnabled\n    });\n  }\n\n  checkMigrationContractApproved = async () => {\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.migrationContract){\n      const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n      const migrationContractName = migrationContractInfo.name;\n      const migrationContract = this.functionsUtil.getContractByName(migrationContractName);\n      if (migrationContract){\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n        const tokenApproved = await this.functionsUtil.checkTokenApproved(oldContractName,migrationContractInfo.address,this.props.account);\n        return tokenApproved;\n      }\n    }\n    return false;\n  }\n\n  checkMigration = async () => {\n\n    if (!this.props.tokenConfig || !this.props.account){\n      return false;\n    }\n\n    let loading = true;\n    this.setState({\n      loading,\n      processing:{\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n\n    let migrationEnabled = false;\n    let oldTokenName = 'idleTokens';\n    let oldIdleTokensConverted = null;\n    let oldContractTokenDecimals = null;\n    let migrationContractApproved = false;\n    let oldTokenPrice = this.functionsUtil.BNify(0);\n    let oldIdleTokens = this.functionsUtil.BNify(0);\n    let oldContractBalance = this.functionsUtil.BNify(0);\n    const getTokenPrice = this.props.getTokenPrice !== undefined ? this.props.getTokenPrice : true;\n\n    // Check migration contract enabled and balance\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.enabled){\n      const oldContractInfo = this.props.tokenConfig.migration.oldContract;\n      const oldContractABI = oldContractInfo.abi;\n      const oldContractName = oldContractInfo.name;\n      let oldContract = this.functionsUtil.getContractByName(oldContractName);\n\n      // Initialize contract\n      if (!oldContract && oldContractABI){\n        oldContract = await this.props.initContract(oldContractName,oldContractInfo.address,oldContractABI);\n      }\n\n      let migrationContract = this.functionsUtil.getContractByName(this.props.tokenConfig.migration.migrationContract.name);\n\n      if (!migrationContract && this.props.tokenConfig.migration.migrationContract.abi){\n        migrationContract = await this.props.initContract(this.props.tokenConfig.migration.migrationContract.name,this.props.tokenConfig.migration.migrationContract.address,this.props.tokenConfig.migration.migrationContract.abi);\n      }\n\n      if (oldContract && migrationContract){\n\n        oldTokenName = this.props.tokenConfig.migration.oldContract.token;\n\n        [\n          oldContractTokenDecimals,\n          migrationContractApproved,\n          oldContractBalance,\n          oldTokenPrice,\n        ] = await Promise.all([\n          // Get old contract token decimals\n          this.functionsUtil.getTokenDecimals(oldContractName),\n          // Check migration contract approval\n          this.checkMigrationContractApproved(),\n          // Check old contractBalance\n          this.functionsUtil.getContractBalance(oldContractName,this.props.account),\n          // Get token price\n          (getTokenPrice ? this.functionsUtil.genericContractCall(oldContractName,'tokenPrice') : null)\n        ]);\n\n        // console.log('Migration',oldContractName,migrationContractApproved,this.props.selectedToken,oldContractBalance ? oldContractBalance.toString() : null,oldTokenPrice ? oldTokenPrice.toString() : null);\n\n        if (oldContractBalance){\n          // Convert old idleTokens\n          oldIdleTokens = this.functionsUtil.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          if (oldTokenPrice){\n            oldTokenPrice = this.functionsUtil.fixTokenDecimals(oldTokenPrice,this.props.tokenConfig.decimals);\n            oldIdleTokensConverted = this.functionsUtil.BNify(oldIdleTokens).times(this.functionsUtil.BNify(oldTokenPrice));\n          }\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.functionsUtil.BNify(oldContractBalance).gt(0);\n        }\n      }\n    }\n    \n    loading = false;\n\n    // If use Permit don't ask for Approve\n    const usePermit = this.props.usePermit;\n\n    const newState = {\n      loading,\n      usePermit,\n      oldTokenName,\n      oldIdleTokens,\n      migrationEnabled,\n      oldContractBalance,\n      oldIdleTokensConverted,\n      oldContractTokenDecimals,\n      migrationContractApproved\n    };\n\n    if (this.props.biconomy){\n      const biconomyLimits = await this.functionsUtil.checkBiconomyLimits(this.props.account);\n      if (biconomyLimits && !biconomyLimits.allowed){\n        newState.biconomyLimitReached = true;\n      }\n    }\n\n    if (typeof this.props.migrationEnabledCallback === 'function'){\n      this.props.migrationEnabledCallback(migrationEnabled);\n    }\n\n    // console.log('checkMigration',this.props.selectedToken,'usePermit',this.props.usePermit,'migrationContractApproved',newState.migrationContractApproved);\n\n    // Set migration contract balance\n    return this.setState(newState);\n  }\n\n  disapproveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n      this.disableERC20(null,this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address);\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n  }\n\n  approveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      if (!migrationContractApproved){\n\n        const callbackApprove = (tx,error) => {\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: 'approve',\n            eventLabel: tx ? tx.status : null\n          };\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // console.log('callbackApprove',tx,error);\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            migrationContractApproved: txSucceeded, // True\n            processing: {\n              ...prevState.processing,\n              approve:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n            this.props.callbackApprove(tx);\n          }\n\n          this.checkMigration();\n        };\n\n        const callbackReceiptApprove = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              approve:{\n                ...prevState.processing.approve,\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.functionsUtil.enableERC20(this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address,callbackApprove,callbackReceiptApprove);\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            approve:{\n              txHash:null,\n              loading:true\n            }\n          },\n          migrationContractApproved:false\n        }));\n      } else {\n        this.setState({\n          migrationContractApproved:true\n        });\n      }\n    }\n  }\n\n  migrate = async (e,migrationMethod) => {\n    e.preventDefault();\n\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      // const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      // if (!migrationContractApproved){\n      //   return this.approveMigration();\n      // } else {\n        const callbackMigrate = (tx,error) => {\n\n          if (!error && tx && tx.status === 'error'){\n            error = {\n              message:'Unknown error'\n            };\n          } else if (!tx && error){\n            tx = {\n              status:'error'\n            };\n          }\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: migrationMethod,\n            eventLabel: tx ? tx.status : null,\n            eventValue: parseInt(oldIdleTokens)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          // console.log('callbackMigrate',tx,tx.status,txSucceeded,error,this.props.migrationCallback);\n\n          if (txSucceeded){\n            // Toast message\n            window.toastProvider.addMessage(`Migration completed`, {\n              secondaryMessage: `Your funds has been migrated`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"success\",\n            });\n\n            if (this.props.migrationCallback && typeof this.props.migrationCallback === 'function'){\n              this.props.migrationCallback(tx);\n            }\n\n          } else { // Show migration error toast only for real error\n            window.toastProvider.addMessage(`Migration error`, {\n              secondaryMessage: `The migration has failed, try again...`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n            });\n\n            // Check migration if failed\n            this.checkMigration();\n          }\n\n          this.setState((prevState) => ({\n            migrationEnabled:txSucceeded ? false : true,\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n        }\n\n        const callbackReceiptMigrate = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                ...prevState.processing.migrate,\n                txHash\n              }\n            }\n          }));\n        };\n\n        const callbackPermit = () => {\n          if (typeof this.props.callbackPermit === 'function'){\n            this.props.callbackPermit();\n          }\n        }\n\n        const useMetaTx = this.props.biconomy && this.state.metaTransactionsEnabled && !this.state.biconomyLimitReached;\n\n        // Call migration contract function to migrate funds\n        const oldIdleTokens = this.state.oldIdleTokens;\n        const toMigrate = this.props.showBalanceSelector ? this.functionsUtil.integerValue(this.functionsUtil.normalizeTokenAmount(this.state.inputValue[this.state.action],this.state.oldContractTokenDecimals)) : this.functionsUtil.integerValue(this.state.oldContractBalance);\n        // const toMigrate =  this.functionsUtil.normalizeTokenAmount('1',this.state.oldContractTokenDecimals).toString(); // TEST AMOUNT\n\n        let _skipRebalance = typeof this.props.tokenConfig.skipMintForDeposit !== 'undefined' ? this.props.tokenConfig.skipMintForDeposit : this.functionsUtil.getGlobalConfig(['contract','methods','migrate','skipRebalance']);\n\n        // Mint if someone mint over X amount\n        let minAmountForRebalance = null;\n        \n        if (_skipRebalance){\n\n          // Check if the amount is over a certain amount to rebalance the pool\n          if (useMetaTx){\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalanceMetaTx']);\n          } else {\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalance']);\n          }\n\n          if (minAmountForRebalance){\n            const amountToDeposit = await this.functionsUtil.convertTokenBalance(oldIdleTokens,this.props.selectedToken,this.props.tokenConfig,false);\n            if (amountToDeposit.gte(this.functionsUtil.BNify(minAmountForRebalance))){\n              _skipRebalance = false;\n            }\n          }\n        }\n\n        let migrationParams = this.props.migrationParams ? this.props.migrationParams : [toMigrate,this.props.tokenConfig.migration.oldContract.address,this.props.tokenConfig.idle.address,this.props.tokenConfig.address,_skipRebalance];\n\n        if (typeof migrationParams === 'function'){\n          migrationParams = migrationParams(toMigrate);\n        }\n\n        // Check if Biconomy is enabled\n        if (useMetaTx){\n          const functionSignature = migrationContract.methods[migrationMethod](...migrationParams).encodeABI();\n          this.functionsUtil.sendBiconomyTxWithPersonalSign(migrationContractInfo.name, functionSignature, callbackMigrate, callbackReceiptMigrate);\n          // this.functionsUtil.sendBiconomyTx(migrationContractInfo.name, migrationContractInfo.address, functionSignature, callbackMigrate, callbackReceiptMigrate);\n        } else {\n          const permitContract = this.functionsUtil.getContractByName(this.props.tokenConfig.name);\n          const functionInfo = migrationContractInfo.functions.find( f => f.name === migrationMethod );\n          const nonceMethod = this.functionsUtil.getGlobalConfig(['permit',this.props.tokenConfig.name,'nonceMethod']);\n          if (this.props.usePermit && permitContract){\n            const expiry = Math.round(new Date().getTime() / 1000 + 3600);\n            const nonce = nonceMethod ? await permitContract.methods[nonceMethod](this.props.account).call() : null;\n            this.functionsUtil.signPermit(this.props.tokenConfig.name, this.props.account, migrationContractInfo.name, functionInfo.permitName, migrationParams, nonce, expiry, callbackMigrate, callbackReceiptMigrate, callbackPermit);\n          } else {\n            // Send migration tx\n            this.functionsUtil.contractMethodSendWrapper(migrationContractInfo.name, migrationMethod, migrationParams, callbackMigrate, callbackReceiptMigrate);\n          }\n        }\n\n        // debugger;\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            migrate:{\n              txHash:null,\n              loading:true\n            }\n          }\n        }));\n      // }\n    }\n\n    return false;\n  }\n\n  render() {\n\n    if (!this.props.tokenConfig || !this.props.selectedToken){\n      return null;\n    }\n\n    const contractApproved = this.props.usePermit || this.state.migrationContractApproved;\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationEnabled = batchMigrationInfo.enabled && typeof batchMigrationInfo.props.availableTokens[this.props.tokenConfig.idle.token] !== 'undefined';\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    // console.log('contractApproved',contractApproved,this.props.usePermit,this.state.migrationContractApproved);\n\n    const SkipMigrationComponent = (props) => (\n      <DashboardCard\n        cardProps={{\n          pt:2,\n          pb:3,\n          px:2,\n          mb:2,\n          display:'flex',\n          alignItems:'center',\n          flexDirection:'column',\n          justifyContent:'center',\n          mt:this.state.skipMigration ? 3 : 2,\n        }}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={'FastForward'}\n          />\n        </Flex>\n        <Checkbox\n          required={false}\n          checked={this.state.skipMigration}\n          label={`Skip migration and deposit in Idle v4`}\n          onChange={ e => this.toggleSkipMigration(e.target.checked) }\n        />\n      </DashboardCard>\n    );\n\n    const biconomyEnabled = this.functionsUtil.getGlobalConfig(['network','providers','biconomy','enabled']) && !this.state.biconomyLimitReached;\n\n    return (\n      this.state.loading && this.props.account ? (\n        <DashboardCard\n          cardProps={{\n            p:3,\n            mt:3,\n            minHeight:'195px',\n            style:{\n              display:'flex',\n              alignItems:'center',\n              justifyContent:'center'\n            }\n          }}\n        >\n          <FlexLoader\n            flexProps={{\n              flexDirection:'row'\n            }}\n            loaderProps={{\n              size:'30px'\n            }}\n            textProps={{\n              ml:2\n            }}\n            text={'Checking migration...'}\n          />\n        </DashboardCard>\n      ) : (\n        (this.state.migrationEnabled && !this.state.skipMigration) ? (\n          <Box width={1}>\n            {\n              !this.props.isMigrationTool &&\n              <Flex\n                mt={3}\n                flexDirection={'column'}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  >\n                    <Icon\n                      size={'2.3em'}\n                      color={'cellText'}\n                      name={ this.props.isMigrationTool ? 'SwapHoriz' : 'Warning' }\n                    />\n                    <Text\n                      mt={1}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      { this.props.migrateTextBefore !== null ? this.props.migrateTextBefore : null }\n                      { this.props.migrateTextBefore !== null &&\n                        <br />\n                      }\n                      You { !this.props.isMigrationTool ? 'still' : '' } have <strong>{this.state.oldIdleTokens.toFixed(4)} {this.state.oldTokenName} {this.state.oldIdleTokensConverted ? `(${this.state.oldIdleTokensConverted.toFixed(4)} ${this.props.selectedToken})` : ''}</strong> to migrate.<br />\n                      { this.props.migrateText !== null ? this.props.migrateText : 'Please use the section below to migrate or redeem your old tokens.' }\n                    </Text>\n                  </Flex>\n                </DashboardCard>\n              </Flex>\n            }\n            {\n              (this.props.showActions === undefined || this.props.showActions) && \n                <Flex\n                  mt={2}\n                  flexDirection={'column'}\n                >\n                  {\n                    !this.props.isMigrationTool && \n                      <SkipMigrationComponent />\n                  }\n                  <Text mb={2}>\n                    Choose the action:\n                  </Text>\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('migrate');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'migrate' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'migrate'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Migrate\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('redeem');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'redeem' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'redeem'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Redeem\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n            }\n            {\n              this.state.action === 'migrate' ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  flexDirection={'column'}\n                >\n                  {\n                    (batchMigrationEnabled && batchMigrationDepositEnabled && !this.props.isMigrationTool) &&\n                      <Flex\n                        mb={3}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <Link\n                          textAlign={'center'}\n                          hoverColor={'primary'}\n                          href={`/#/dashboard/tools/${batchMigrationInfo.route}/${this.props.tokenConfig.idle.token}`}\n                        >\n                          Gas fees too high? Save gas with our Batch Migrator!\n                        </Link>\n                        <Icon\n                          ml={1}\n                          size={'1em'}\n                          color={'primary'}\n                          name={'LocalGasStation'}\n                        />\n                      </Flex>\n                  }\n                  {\n                    contractApproved ? (\n                      this.state.processing.migrate.loading ? (\n                        <Flex\n                          mt={3}\n                          flexDirection={'column'}\n                        >\n                          <TxProgressBar\n                            web3={this.props.web3}\n                            hash={this.state.processing.migrate.txHash}\n                            endMessage={`Finalizing migration request...`}\n                            cancelTransaction={this.cancelTransaction.bind(this)}\n                            waitText={ this.props.waitText ? this.props.waitText : 'Migration estimated in'}\n                            sendingMessage={ this.props.biconomy && this.state.metaTransactionsEnabled ? 'Sending meta-transaction...' : 'Sending transaction...' }\n                          />\n                        </Flex>\n                      ) : this.props.showBalanceSelector ? (\n                        <Flex\n                          mt={1}\n                          flexDirection={'column'}\n                        >\n                          <Flex\n                            mb={3}\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              mb={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                            >\n                              {\n                                this.props.balanceSelectorInfo && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                  >\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      textAlign={'left'}\n                                      style={{\n                                        maxWidth:'100%',\n                                        overflow:'hidden',\n                                        whiteSpace:'nowrap',\n                                        textOverflow:'ellipsis'\n                                      }}\n                                      color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                                    >\n                                      {this.props.balanceSelectorInfo.text}\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                              {\n                                this.state.oldIdleTokens && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'flex-end'}\n                                  >\n                                    <Link\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      color={'dark-gray'}\n                                      textAlign={'right'}\n                                      hoverColor={'copyColor'}\n                                      onClick={ (e) => this.setFastBalanceSelector(100) }\n                                    >\n                                      Balance: {this.state.oldIdleTokens.toFixed(6)} {this.props.selectedToken}\n                                    </Link>\n                                  </Flex>\n                                )\n                              }\n                            </Flex>\n                            <Input\n                              min={0}\n                              type={\"number\"}\n                              required={true}\n                              height={'3.4em'}\n                              borderRadius={2}\n                              fontWeight={500}\n                              borderColor={'cardBorder'}\n                              backgroundColor={'cardBg'}\n                              boxShadow={'none !important'}\n                              placeholder={'Insert amount'}\n                              onChange={this.changeInputValue.bind(this)}\n                              border={`1px solid ${this.props.theme.colors.divider}`}\n                              value={this.state.inputValue[this.state.action] ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toFixed() : ''}\n                            />\n                            <Flex\n                              mt={2}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              {\n                                [25,50,75,100].map( percentage => (\n                                  <FastBalanceSelector\n                                    percentage={percentage}\n                                    key={`selector_${percentage}`}\n                                    onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                                    isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(percentage)}\n                                  />\n                                ))\n                              }\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            mt={1}\n                            width={1}\n                            alignItems={'center'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      width:[1,0.5],\n                                      disabled:this.state.buttonDisabled,\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                          </Flex>\n                        </Flex>\n                      ) : (\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:2,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            {\n                              this.props.migrationImage ? (\n                                <Image\n                                  {...this.props.migrationImage}\n                                />\n                              ) : (\n                                <Icon\n                                  size={'2.3em'}\n                                  color={'cellText'}\n                                  name={ this.props.migrationIcon ? this.props.migrationIcon : (this.props.isMigrationTool ? 'SwapHoriz' : 'Repeat') }\n                                />\n                              )\n                            }\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                this.props.migrationText ? (\n                                  <Text.span\n                                    migrationTextProps={this.props.migrationTextProps}\n                                    dangerouslySetInnerHTML={{\n                                      __html:this.props.migrationText\n                                    }}\n                                  >\n                                  </Text.span>\n                                ) : (\n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    You are one step away from the migration of your { this.props.isMigrationTool ? this.state.oldIdleTokens.toFixed(4) : 'old' } {this.state.oldTokenName}{ this.props.isMigrationTool ? ` into the Idle ${this.props.tokenConfig.token} ${this.props.selectedStrategy} strategy` : '' }!\n                                  </Text.span>\n                                )\n                              }\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                            {\n                              biconomyEnabled && \n                                <Flex\n                                  py={3}\n                                  px={2}\n                                  mt={2}\n                                  width={1}\n                                  borderRadius={2}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                  backgroundColor={'dashboardBg'}\n                                  border={`1px solid ${this.props.theme.colors.boxBorder}`}\n                                >\n                                  <Text\n                                    mt={1}\n                                    fontSize={1}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    {\n                                      this.props.biconomy ?\n                                        `Meta-Transactions allow you to migrate without spending a dime! But, if you are stuck, please disable it and try again.`\n                                      :\n                                        'Your wallet does not support Meta-transactions, you are still able to migrate with a normal transaction.'\n                                    }\n                                  </Text>\n                                  {\n                                  this.props.biconomy &&\n                                    <Checkbox\n                                      mt={2}\n                                      required={false}\n                                      label={\"Migrate with Meta-Transaction\"}\n                                      checked={this.state.metaTransactionsEnabled}\n                                      onChange={ e => this.toggleMetaTransactionsEnabled(e.target.checked) }\n                                    />\n                                  }\n                                </Flex>\n                            }\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      mt:3,\n                                      width:[1,0.5],\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      )\n                    ) : this.state.processing.approve.loading ? (\n                      <Flex\n                        mt={3}\n                        flexDirection={'column'}\n                      >\n                        <TxProgressBar\n                          web3={this.props.web3}\n                          waitText={`Approve estimated in`}\n                          hash={this.state.processing.approve.txHash}\n                          endMessage={`Finalizing approve request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      </Flex>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          mt:2,\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            size={'2.3em'}\n                            name={'LockOpen'}\n                            color={'cellText'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              this.props.approveText ? this.props.approveText : `To migrate your ${ !this.props.isMigrationTool ? 'old' : '' } ${this.state.oldTokenName} you need to approve our Smart-Contract first.`\n                            }\n                          </Text>\n                          <RoundButton\n                            buttonProps={{\n                              mt:3,\n                              width:[1,1/2]\n                            }}\n                            handleClick={this.approveMigration.bind(this)}\n                          >\n                            Approve\n                          </RoundButton>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  }\n                </Flex>\n              ) : (\n                !this.state.processing[this.state.action].loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <Input\n                      min={0}\n                      type={\"number\"}\n                      required={true}\n                      height={'3.4em'}\n                      borderRadius={2}\n                      fontWeight={500}\n                      className={styles.input}\n                      borderColor={'cardBorder'}\n                      backgroundColor={'cardBg'}\n                      boxShadow={'none !important'}\n                      onChange={this.changeInputValue.bind(this)}\n                      border={`1px solid ${this.props.theme.colors.divider}`}\n                      placeholder={`Insert ${this.state.oldTokenName} amount`}\n                      value={this.state.inputValue[this.state.action] !== null ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toString() : ''}\n                    />\n                    <Flex\n                      mt={3}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'space-between'}\n                    >\n                      <FastBalanceSelector\n                        percentage={25}\n                        onMouseDown={()=>this.setFastBalanceSelector(25)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(25)}\n                      />\n                      <FastBalanceSelector\n                        percentage={50}\n                        onMouseDown={()=>this.setFastBalanceSelector(50)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(50)}\n                      />\n                      <FastBalanceSelector\n                        percentage={75}\n                        onMouseDown={()=>this.setFastBalanceSelector(75)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(75)}\n                      />\n                      <FastBalanceSelector\n                        percentage={100}\n                        onMouseDown={()=>this.setFastBalanceSelector(100)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(100)}\n                      />\n                    </Flex>\n                    <Flex\n                      mt={3}\n                      justifyContent={'center'}\n                    >\n                      <RoundButton\n                        buttonProps={{\n                          width:[1,1/2],\n                          disabled:this.state.buttonDisabled,\n                          style:{\n                            textTransform:'capitalize'\n                          }\n                        }}\n                        handleClick={this.state.buttonDisabled ? null : this.executeAction.bind(this) }\n                      >\n                        {this.state.action}\n                      </RoundButton>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mt={4}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      web3={this.props.web3}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      hash={this.state.processing[this.state.action].txHash}\n                      endMessage={`Finalizing ${this.state.action} request...`}\n                      waitText={`${this.functionsUtil.capitalize(this.state.action)} estimated in`}\n                    />\n                  </Flex>\n                )\n              )\n            }\n          </Box>\n        ) : (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'column'}\n            justifyContent={'center'}\n          >\n            {\n              (!this.props.isMigrationTool && this.state.migrationEnabled) && \n                <SkipMigrationComponent />\n            }\n            {\n              this.props.children ? this.props.children : null\n            }\n          </Flex>\n        )\n      )\n    )\n  }\n}\n\nexport default Migrate;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport AssetField from '../AssetField/AssetField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass AssetsList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    return (\n      <Flex id=\"assets-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"assets-list\" flexDirection={'column'}>\n          {\n            enabledTokens.map(token => {\n              const tokenConfig = this.props.availableTokens[token];\n              if (!tokenConfig){\n                return null;\n              }\n              return (\n                <TableRow\n                  token={token}\n                  {...this.props}\n                  key={`asset-${token}`}\n                  tokenConfig={tokenConfig}\n                  rowId={`asset-col-${token}`}\n                  cardId={`asset-card-${token}`}\n                  fieldComponent={this.props.fieldComponent || AssetField}\n                />\n              );\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default AssetsList;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__38P6I\",\"link\":\"Footer_link__13yZU\"};","import { Flex, Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass VariationNumber extends Component {\n\n  render() {\n\n    const IconDirection = () => (\n      <Icon\n        color={ this.props.direction === 'up' ?  '#6dd400' : '#f7b500' }\n        name={ this.props.direction === 'up' ?  'ArrowDropUp' : 'ArrowDropDown' }\n        size={ this.props.iconSize ? this.props.iconSize : ( this.props.isMobile ? '1.4em' : '2em') }\n      />\n    );\n\n    return (\n      <Flex\n        alignItems={'center'}\n        flexDirection={'row'}\n        width={ this.props.width ? this.props.width : 1 }\n        justifyContent={this.props.justifyContent ? this.props.justifyContent : 'center'}\n      >\n        {\n          (!this.props.iconPos || this.props.iconPos==='left') &&\n            <IconDirection />\n        }\n        {this.props.children}\n        {\n          this.props.iconPos==='right' &&\n            <IconDirection />\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default VariationNumber;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchInput\":\"GenericSelector_searchInput__vl2hJ\",\"genericSelector\":\"GenericSelector_genericSelector__1Nqkd\",\"dark\":\"GenericSelector_dark__zCOnP\",\"searchInputHidden\":\"GenericSelector_searchInputHidden__2Zm1B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading-dots\":\"LoadingSpinner_loading-dots__2-3YZ\",\"loading-dots--dot\":\"LoadingSpinner_loading-dots--dot__2Y25C\",\"dot-keyframes\":\"LoadingSpinner_dot-keyframes__3SU_M\"};","import React from \"react\";\nimport styles from './ModalCard.module.scss';\nimport { Box, Flex, Card, Button, Heading, Image } from \"rimble-ui\";\n\nconst ModalCard = ({children, closeFunc, ...props}) => (\n  <Card\n    p={0}\n    border={0}\n    mx={'auto'}\n    my={'auto'}\n    height={'auto'}\n    borderRadius={2}\n    overflow={'auto'}\n    width={ props.width ? props.width : 'auto' }\n    minWidth={ props.minWidth ? props.minWidth : 'auto' }\n    maxWidth={ props.maxWidth ? props.maxWidth : '960px'}\n  >\n    <Box\n      top={'0'}\n      zIndex={1}\n      right={'0'}\n      position={\"absolute\"}\n    >\n      <Button.Text\n        icononly\n        icon={\"Close\"}\n        size={'2.5em'}\n        onClick={closeFunc}\n        mainColor={ props.mainColor ? props.mainColor :  'copyColor' }\n      />\n    </Box>\n    <Flex\n      height={'100%'}\n      flex={'1 1 auto'}\n      flexDirection={'column'}\n      className={[ props.bgLayer ? styles.bg : null]}\n      style={{\n        overflow: 'auto',\n        backgroundRepeat:'no-repeat',\n        backgroundPosition:'bottom right',\n        backgroundSize: !props.background ? '65%' : null,\n        backgroundImage:'url(/images/bg-bottom-right.png)',\n        background: props.background ? props.background : null,\n      }}\n      backgroundColor={'cardBg'}\n    >\n      {children}\n    </Flex>\n  </Card>\n);\n\nModalCard.Header = (props) => (\n  <Box\n    width={1}\n    mb={[2,3]}\n    pb={[2,2]}\n    pt={ props.pt ? props.pt : (props.icon ? 3 : [5,3]) }\n    borderBottom={ props.borderBottom ? props.borderBottom : '1px solid #eee' }\n  >\n    <Flex\n      px={[1,2]}\n      alignItems={'center'}\n      flexDirection={'column'}\n    >\n      { props.icon && <Image width={ props.iconHeight ? props.iconHeight : '50px' } src={props.icon} /> }\n      <Heading.h3\n        mb={0}\n        fontSize={[3,3]}\n        color={'copyColor'}\n        textAlign={'center'}\n        mt={props.icon ? 2 : 0}\n        fontFamily={'sansSerif'}\n        {...props.titleProps}\n      >\n        {props.title}\n      </Heading.h3>\n      {\n        props.subtitle &&\n        <Heading.h4\n          pt={[1,2]}\n          fontWeight={2}\n          fontSize={[2,2]}\n          lineHeight={1.5}\n          color={'dark-gray'}\n          textAlign={'center'}\n          {...props.subtitleProps}\n        >\n          {props.subtitle}\n        </Heading.h4>\n      }\n      {\n        props.subtitle2 &&\n        <Heading.h4 pt={0} fontSize={[2,2]} textAlign={'center'} fontWeight={2} lineHeight={1.5} color={'dark-gray'}>\n          {props.subtitle2}\n        </Heading.h4>\n      }\n    </Flex>\n  </Box>\n);\n\nModalCard.Body = ({children, ...props}) => (\n  <Box\n    width={1}\n    px={[3,5]}\n    {...props}\n  >\n    {children}\n  </Box>\n);\n/*\nModalCard.Body = ({children, ...props}) => (\n  <Flex flex={'1 1 auto'} style={{ overflow: 'auto' }} >\n    <Box width={1} px={[4,5]} py={[3,4]} m={'auto'}>\n      {children}\n    </Box>\n  </Flex>\n);\n*/\n\nModalCard.Footer = ({children, ...props}) => (\n  <Flex\n    flex={'1 0 auto'}\n    justifyContent={'center'}\n    borderTop={1}\n    borderColor={'light-gray'}\n    px={[0,3]}\n    py={3}\n  >\n    {children}\n  </Flex>\n);\n\n\nModalCard.BackButton = ({onClick, ...props}) => (\n  <Box\n    position={'absolute'}\n    top={'0'}\n    left={'0'}\n    m={3}\n    bg={'white'}\n  >\n    <Button.Outline\n      onClick={onClick}\n      icononly\n      icon={'ArrowBack'}\n      size={'2.5em'}\n    />\n  </Box>\n);\n\nexport default ModalCard;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Box,\n  Button,\n  Flex,\n  Image\n} from \"rimble-ui\";\nimport Select from 'react-select';\nimport ModalCard from './ModalCard';\nimport ImageButton from '../../ImageButton/ImageButton';\nimport styles from './Header.module.scss';\nimport globalConfigs from '../../configs/globalConfigs';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass BuyModal extends React.Component {\n\n  state = {\n    selectedMethod:null,\n    availableMethods:[],\n    selectedCountry:null,\n    selectedProvider:null,\n    availableProviders:null,\n    selectedToken:this.props.buyToken,\n  }\n\n  async loadRemoteResources() {\n\n    if (!this.state.selectedToken){\n      return false;\n    }\n\n    // Load payments providers external remote resources\n    Object.keys(globalConfigs.payments.providers).forEach((provider,i) => {\n\n      const providerInfo = globalConfigs.payments.providers[provider];\n      if (providerInfo.enabled && providerInfo.remoteResources && (providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1)){\n        \n        const remoteResources = providerInfo.remoteResources;\n\n        Object.keys(remoteResources).forEach((url,j) => {\n\n          const resourceType = url.split('.').pop().toLowerCase();\n\n          switch (resourceType){\n            case 'js':\n              const scriptID = `script_${provider}_${j}_${this.state.selectedToken}`;\n\n              if (!document.getElementById(scriptID)){\n                const script = document.createElement(\"script\");\n                const remoteResourceParams = remoteResources[url];\n                const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n                const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n                if (precall && typeof precall === 'function'){\n                  precall(this.state,globalConfigs,providerInfo);\n                }\n\n                if (callback && typeof callback === 'function'){\n                  if (script.readyState) {  // only required for IE <9\n                    script.onreadystatechange = function() {\n                      if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                        script.onreadystatechange = null;\n                        callback();\n                      }\n                    };\n                  } else {  //Others\n                    script.onload = callback;\n                  }\n                }\n\n                script.id = scriptID;\n                script.className = `script_${provider}`;\n                script.src = url;\n                script.async = true;\n\n                if (remoteResourceParams && remoteResourceParams.parentElement){\n                  remoteResourceParams.parentElement.appendChild(script)\n                } else {\n                  document.head.appendChild(script);\n                }\n              }\n            break;\n            case 'css':\n              const stylesheetId = `stylesheet_${provider}_${j}`;\n\n              if (!document.getElementById(stylesheetId)){\n                const style = document.createElement(\"link\");\n\n                style.id = stylesheetId;\n                style.rel = 'stylesheet';\n                style.href = url;\n\n                document.head.appendChild(style);\n              }\n            break;\n            default:\n            break;\n          }\n        });\n      }\n    });\n  }\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadAvailableMethods(){\n    const availableMethods = {};\n    const availableMethodsKeys = this.props.availableMethods && this.props.availableMethods.length ? this.props.availableMethods : Object.keys(globalConfigs.payments.methods);\n\n    availableMethodsKeys.forEach(method => {\n      const availableProviders = this.getAvailablePaymentProviders(method,this.state.selectedToken);\n      if (availableProviders && availableProviders.length>0){\n        const methodInfo = globalConfigs.payments.methods[method];\n        methodInfo.availableProviders = availableProviders;\n        availableMethods[method] = methodInfo;\n      }\n    });\n\n    this.setState({\n      availableMethods\n    });\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n\n    this.loadAvailableMethods();\n    this.loadRemoteResources();\n  }\n\n  async componentDidMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps) {\n\n    this.loadUtils();\n\n    if ( this.props.buyToken && prevProps.buyToken !== this.props.buyToken){\n      this.selectToken(null,this.props.buyToken);\n    }\n  }\n\n  renderPaymentMethod = async (e,provider,buyParams) => {\n\n    const onSuccess = async (tx) => {\n      // Toast message\n      window.toastProvider.addMessage(`Deposit completed`, {\n        secondaryMessage: `Your ${this.state.selectedToken} have been deposited`,\n        colorTheme: 'light',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"success\",\n      });\n\n      this.props.getAccountBalance();\n    };\n\n    const onClose = async (e) => {\n      return true;\n    }\n\n    const paymentProvider = globalConfigs.payments.providers[provider];\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(this.props,globalConfigs,buyParams,onSuccess,onClose) : null;\n\n    // Render the Payment Provider\n    switch (provider){\n      default:\n        if (typeof paymentProvider.render === 'function'){\n          const currentState = Object.assign({},this.state);\n          paymentProvider.render(initParams,null,currentState,globalConfigs);\n        }\n      break;\n    }\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_provider',\n        eventLabel: provider\n      });\n\n      this.closeModal(e);\n    } else {\n      this.closeModal(e);\n    }\n  }\n\n  goBack = (e) => {\n    e.preventDefault();\n\n    if (this.state.selectedProvider){\n      this.setState({\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedMethod){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedToken){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n        selectedToken:this.props.buyToken,\n      });\n    } else {\n      this.resetModal();\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      selectedMethod:null,\n      selectedCountry:null,\n      selectedProvider:null,\n      availableProviders:null,\n      selectedToken:this.props.buyToken\n    });\n\n    this.componentWillMount();\n  }\n\n  closeModal = (e) => {\n    this.resetModal();\n    if (!this.props.showInline && typeof this.props.closeModal === 'function'){\n      this.props.closeModal();\n    }\n  }\n\n  getProviderInfo = (provider) => {\n    if (!globalConfigs.payments.providers[provider]){\n      return false;\n    }\n    let providerInfo = globalConfigs.payments.providers[provider];\n    if (typeof providerInfo.getInfo === 'function'){\n      const newProviderInfo = providerInfo.getInfo(this.state);\n      if (newProviderInfo && Object.keys(newProviderInfo).length){\n        providerInfo = Object.assign(providerInfo,newProviderInfo);\n      }\n    }\n    return providerInfo;\n  }\n\n  getDefaultPaymentProvider = (selectedMethod) => {\n    const paymentMethod = this.state.availableMethods[selectedMethod];\n    if (paymentMethod && paymentMethod.defaultProvider){\n      return paymentMethod.defaultProvider;\n    }\n    return null;\n  }\n\n  getAvailablePaymentProviders = (selectedMethod,selectedToken) => {\n    const availableProviders = [];\n\n    Object.keys(globalConfigs.payments.providers).map((provider,i) => {\n      const providerInfo = globalConfigs.payments.providers[provider];\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(selectedMethod) !== -1;\n      const providerSupportToken = selectedToken ? providerInfo.supportedTokens.indexOf(selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n      if (providerInfo.enabled && providerSupportMethod && providerSupportToken ){\n        availableProviders.push(provider);\n      }\n      return provider;\n    });\n\n    const defaultPaymentProvider = this.getDefaultPaymentProvider(selectedMethod);\n\n    if (defaultPaymentProvider && this.state.availableMethods[selectedMethod].showDefaultOnly && availableProviders.indexOf(defaultPaymentProvider) !== -1){\n      return [defaultPaymentProvider];\n    }\n\n    return availableProviders;\n  }\n\n  selectProvider = (e,selectedProvider) => {\n    if (e){\n      e.preventDefault();\n    }\n    \n    if (!selectedProvider || !globalConfigs.payments.providers[selectedProvider]){\n      return this.setState({\n        selectedProvider:null\n      });\n    }\n\n    const providerInfo = globalConfigs.payments.providers[selectedProvider];\n    if (providerInfo){\n\n      if (this.state.selectedToken){\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      const ethAvailable = providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1;\n      const tokenAvailable = providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1;\n\n      // Show tokens to buy if more are available or if the selected one is not\n      const availableTokens = [];\n      if ( (ethAvailable && tokenAvailable) || !tokenAvailable ){\n        if (ethAvailable){\n          availableTokens.push(globalConfigs.baseToken);\n        }\n        if (tokenAvailable){\n          availableTokens.push(this.props.selectedToken);\n        }\n      } else {\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      this.setState({\n        availableTokens,\n        selectedProvider\n      });\n    }\n  }\n\n  selectMethod = (e,selectedMethod) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    if (Object.keys(this.state.availableMethods).indexOf(selectedMethod) !== -1){\n      const availableProviders = this.getAvailablePaymentProviders(selectedMethod,this.state.selectedToken);\n\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_method',\n        eventLabel: selectedMethod\n      });\n\n      this.setState({\n        availableProviders,\n        selectedMethod\n      });\n    }\n  }\n\n  selectToken = (e,selectedToken) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Buy',\n      eventAction: 'select_token',\n      eventLabel: selectedToken\n    });\n\n    this.setState({ selectedToken }, async () => {\n      if (this.state.selectedProvider){\n        return this.renderPaymentMethod(e,this.state.selectedProvider,this.state);\n      } else {\n        this.loadRemoteResources();\n      }\n    });\n  }\n\n  handleCountryChange = selectedCountry => {\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled && selectedCountry){\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_country',\n        eventLabel: selectedCountry.value\n      });\n    }\n\n    this.setState({\n      selectedCountry\n    });\n  }\n\n  getAvailableCountries = () => {\n    const availableCountries = {};\n    this.state.availableProviders.forEach((provider,i) => {\n      const providerInfo = this.getProviderInfo(provider);\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(this.state.selectedMethod) !== -1;\n      const providerSupportToken = this.state.selectedToken ? providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n\n      // Skip disabled provider, not supported selected method or not supported token\n      if (!providerInfo.enabled || !providerSupportMethod || !providerSupportToken ){\n        return;\n      }\n\n      // Get available providers and countries\n      providerInfo.supportedCountries.forEach((countryCode,j) => {\n        if (!availableCountries[countryCode]){\n          availableCountries[countryCode] = {\n            providers:[],\n            label:globalConfigs.countries[countryCode],\n            value:countryCode\n          };\n        }\n        availableCountries[countryCode].providers.push(provider);\n      });\n    });\n\n    return Object.values(availableCountries);\n  }\n\n  render() {\n\n    let title = null;\n    if (this.state.selectedToken === null){\n      title = 'BUY TOKEN';\n    } else {\n      title = 'BUY '+this.state.selectedToken;\n      if (this.state.selectedMethod !== null){\n        title += ' - '+this.state.availableMethods[this.state.selectedMethod].props.caption;\n      }\n    }\n\n    let availableTokens = this.props.availableTokens && Object.keys(this.props.availableTokens).length>0 ? [globalConfigs.baseToken,...Object.keys(this.props.availableTokens)] : [globalConfigs.baseToken];\n\n    // Show all tokens\n    if (this.props.showAllTokens){\n      availableTokens = [];\n      Object.keys(globalConfigs.payments.providers).forEach( provider => {\n        const providerInfo = globalConfigs.payments.providers[provider];\n        if (providerInfo.supportedTokens){\n          providerInfo.supportedTokens.forEach(token => {\n            if (!availableTokens.includes(token)){\n              availableTokens.push(token);\n            }\n          })\n        }\n      });\n    }\n\n    const InnerComponent = props => (\n      <Box minWidth={ this.props.showInline ? 'auto' : ['auto','35em'] }>\n      {\n        this.state.selectedToken === null ? (\n          <Box mb={2}>\n            <Text\n              mb={[2,3]}\n              fontWeight={2}\n              textAlign={'center'}\n              fontSize={[2, this.props.showInline ? 2 : 3]}\n            >\n              Which token do you want to buy?\n            </Text>\n            <Flex\n              mb={4}\n              style={{\n                flexWrap:'wrap'\n              }}\n              alignItems={'center'}\n              justifyContent={'center'}\n              flexDirection={['column','row']}\n            >\n            {\n              availableTokens.map((token,i) => {\n                return (\n                  <ImageButton\n                    caption={token}\n                    key={`token_${token}`}\n                    isMobile={this.props.isMobile}\n                    imageSrc={`images/tokens/${token}.svg`}\n                    handleClick={ e => { this.selectToken(e,token); } }\n                    imageProps={ this.props.isMobile ? {height:'42px'} : {p:[2,3],height:'80px'}}\n                    buttonProps={ !this.props.isMobile ? {\n                      style:{\n                        'flex':'0 0 170px'\n                      }\n                    } : null}\n                  />\n                );\n              })\n            }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === null ? (\n          <Box>\n            <Flex mb={3} flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n              {\n                !this.props.showInline &&\n                  <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n              }\n              <Text textAlign={'center'} fontWeight={500} fontSize={[2, this.props.showInline ? 2 : 3]} my={0}>\n                {\n                  this.props.showInline && this.props.buyToken ? `Ops... you don't have any ${this.props.buyToken} in your wallet, how do you prefer do buy some?` : `How do you prefer to buy ${this.state.selectedToken}?`\n                }\n              </Text>\n            </Flex>\n            <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n              {\n                Object.keys(this.state.availableMethods).map((method,i) => {\n                  const methodInfo = this.state.availableMethods[method];\n                  let imageProps = methodInfo.props && methodInfo.props.imageProps ? methodInfo.props.imageProps : {};\n                  const imagePropsExtended = this.props.isMobile ? {height:'42px'} : {height:'70px'};\n                  imageProps = Object.assign(imageProps,imagePropsExtended);\n\n                  return (\n                    <ImageButton\n                      {...methodInfo.props}\n                      buttonProps={{\n                        border:2\n                      }}\n                      key={`method_${method}`}\n                      imageProps={ imageProps }\n                      isMobile={ this.props.isMobile }\n                      handleClick={ e => this.selectMethod(e,method) }\n                    />\n                  );\n                })\n              }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === 'wallet' ? (\n              <Box mt={2} mb={3}>\n                <Text textAlign={'center'} fontWeight={3} fontSize={2} my={0}>\n                  <Box width={'100%'}>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableProviders.length > 0 ?\n                          (\n                            <Box>\n                              <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                                Choose your preferred payment provider:\n                              </Text>\n                              {\n                                this.state.availableProviders.map((provider,i) => {\n                                  const providerInfo = this.getProviderInfo(provider);\n                                  return (\n                                    <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => { this.renderPaymentMethod(e,provider,this.state); } } />\n                                  );\n                                })\n                              }\n                            </Box>\n                          )\n                        : (\n                          <Text textAlign={'center'} fontWeight={3} fontSize={2} my={2}>\n                            Sorry, there are no providers available for the selected method.\n                          </Text>\n                        )\n                      }\n                      </Flex>\n                    </Box>\n                </Text>\n              </Box>\n            ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              {\n                !this.state.selectedProvider &&\n                <Box\n                  mb={3}\n                  maxWidth={ this.props.showInline ? '35em' : 'initial' }\n                  width={ (this.props.showInline && !this.props.isMobile) ? 0.72 : 1 }\n                >\n                  {\n                    !this.props.showInline &&\n                      <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n                        <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n                      </Flex>\n                  }\n                  <Text textAlign={'center'} fontWeight={ this.props.showInline ? 2 : 3 } fontSize={2} mb={2}>\n                    Select your country:\n                  </Text>\n                  <Select\n                    bg={'#162e4d'}\n                    backgroundColor={'#162e4d'}\n                    value={this.state.selectedCountry}\n                    placeholder={'Select your country'}\n                    onChange={this.handleCountryChange}\n                    options={this.getAvailableCountries()}\n                    maxWidth={ this.props.showInline && !this.props.isMobile ? '25em' : 'auto' }\n                    noOptionsMessage={ (inputValue) => 'For European countries select Europe' }\n                    className={this.props.themeMode === 'light' ? styles.select : styles.selectDark}\n                  />\n                </Box>\n              }\n              <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'} minHeight={'200px'}>\n                {\n                  !this.state.selectedProvider ?\n                    this.state.selectedCountry !== null ? (\n                      <Box width={'100%'}>\n                        <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                          Choose your preferred payment provider:\n                        </Text>\n                        <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                        {\n                          this.state.selectedCountry.providers.length > 0 ?\n                            this.state.selectedCountry.providers.map((provider,i) => {\n                              const providerInfo = this.getProviderInfo(provider);\n                              return (\n                                <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => {this.selectProvider(e,provider) } } />\n                              );\n                            })\n                          : (\n                            <Text textAlign={'center'} fontWeight={3} fontSize={2} mb={2}>\n                              Sorry, there are no providers available for the selected method.\n                            </Text>\n                          )\n                        }\n                        </Flex>\n                      </Box>\n                    ) : (\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={2}>\n                        Select the country to load the payment providers.\n                      </Text>\n                    )\n                  : false && this.state.availableTokens && this.state.availableTokens.length > 0 && (\n                    <Box mb={2}>\n                      <Flex justifyContent={'center'} my={2}>\n                        <Image src={ globalConfigs.payments.providers[this.state.selectedProvider].imageSrc } height={'35px'} />\n                      </Flex>\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                        Choose which token do you want to buy:\n                      </Text>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableTokens.map((token,i) => {\n                          return (\n                            <ImageButton key={`token_${token}`} imageSrc={`images/tokens/${token}.svg`} caption={token} imageProps={{p:[2,3],height:'80px'}} handleClick={ e => { this.selectToken(e,token); } } />\n                          );\n                        })\n                      }\n                      </Flex>\n                    </Box>\n                  )\n                }\n              </Flex>\n            </Flex>\n          )\n      }\n        {\n          this.props.showInline && this.state.selectedToken !== null  && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n            <Flex\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Button\n                my={2}\n                mx={[0, 2]}\n                size={'medium'}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.goBack(e) }\n              >\n                GO BACK\n              </Button>\n            </Flex>\n          )\n        }\n      </Box>\n    );\n\n    if (this.props.showInline){\n      return (\n        <InnerComponent\n          {...this.props}\n        />\n      );\n    }\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          <ModalCard.Header title={title}>\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <InnerComponent/>\n          </ModalCard.Body>\n          <ModalCard.Footer>\n            <Flex px={[2,0]} flexDirection={['column', 'row']} width={1} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.closeModal(e) }\n                size={this.props.isMobile ? 'small' : 'medium'}\n              >\n              CLOSE\n              </Button>\n              {\n                this.state.selectedToken !== null && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n                  <Button\n                    my={2}\n                    mx={[0, 2]}\n                    borderRadius={4}\n                    onClick={ e => this.goBack(e) }\n                    className={styles.gradientButton}\n                    size={this.props.isMobile ? 'small' : 'medium'}\n                  >\n                    GO BACK\n                  </Button>\n                )\n              }\n            </Flex>\n          </ModalCard.Footer>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default BuyModal;","import {\n  Link as RouterLink,\n} from \"react-router-dom\";\nimport ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport styles from './Footer.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Heading, Image, Link } from 'rimble-ui';\n\nclass Footer extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  render() {\n    const currYear = new Date().getFullYear();\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n    const columnWidth = governanceEnabled ? 1/4 : 1/3;\n    return (\n      <Flex\n        pl={0}\n        id={\"footer\"}\n        alignItems={'center'}\n        flexDirection={'column'}\n        className={styles.footer}\n        backgroundColor={'white'}\n        justifyContent={'flex-start'}\n      >\n        <Flex\n          width={1}\n          px={[3,6]}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            height={['auto','100%']}\n            alignItems={'flex-start'}\n            maxWidth={['35em','70em']}\n            justifyContent={'flex-start'}\n            flexDirection={['column','row']}\n          >\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Resources\n              </Heading.h3>\n              <Flex width={1} flexDirection={'column'}>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://developers.idle.finance'}\n                >\n                  <span role=\"img\" aria-label=\"documentation\">📚</span> Documentation\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.notion.so/idlelabs/Idle-Finance-Brand-Assets-fd63e4161cb64c999531646c7549bc4b'}\n                >\n                  <span role=\"img\" aria-label=\"brand-assets\">🎨</span> Brand Assets\n                </ExtLink>\n                <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                  <RouterLink\n                    color={'blue'}\n                    to=\"/terms-of-service\"\n                    className={styles.link}\n                  >\n                    <Text\n                      fontWeight={3}\n                      color={'blue'}\n                      fontSize={[3,2]}\n                      hoverColor={'blue'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                    >\n                      <span role=\"img\" aria-label=\"terms-of-service\">📑</span> Terms of Service\n                    </Text>\n                  </RouterLink>\n                </Flex>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749'}\n                >\n                  <span role=\"img\" aria-label=\"privacy-policy\">🕵️‍♂️</span> Privacy Policy\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'}\n                >\n                  <span role=\"img\" aria-label=\"cookie-policy\">🍪</span> Cookie Policy\n                </ExtLink>\n              </Flex>\n            </Flex>\n            {\n              governanceEnabled && \n                <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n                  <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                    Governance\n                  </Heading.h3>\n                  <Flex width={1} flexDirection={'column'}>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        to={\"/governance\"}\n                        className={styles.link}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-overview\">🏛</span> Overview\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/proposals\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-proposals\">💡</span> Proposals\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/leaderboard\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-leaderboard\">📋</span> Leaderboard\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://gov.idle.finance/\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🤝</span> Forum\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://www.notion.so/idlelabs/ffe8115b7b53489ab0a7f84e656e4bb0?v=916250f54ff24daabad72cf095fd6d88\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🌎</span> Team\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                  </Flex>\n                </Flex>\n            }\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Start a Conversation\n              </Heading.h3>\n              <Link textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>\n                <span role=\"img\" aria-label=\"email\">✉️</span> info@idle.finance\n              </Link>\n            </Flex>\n            <Flex width={[1,columnWidth]} flexDirection={'column'}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Explore\n              </Heading.h3>\n              <Flex flexDirection={'row'} justifyContent={['space-evenly','flex-start']}>\n                <ExtLink href=\"https://twitter.com/idlefinance\">\n                  <Image src=\"images/social/twitter.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://t.me/idlefinance\">\n                  <Image src=\"images/social/telegram.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://discord.gg/mpySAJp\">\n                  <Image src=\"images/social/discord.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://medium.com/@idlefinance\">\n                  <Image src=\"images/social/medium.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://github.com/Idle-Labs/\">\n                  <Image src=\"images/social/github.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://www.linkedin.com/company/idlefinance\">\n                  <Image src=\"images/social/linkedin.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://defipulse.com/defi-list\">\n                  <Image src=\"images/social/defi-pulse.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n              </Flex>\n            </Flex>\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n          height={['auto','100%']}\n          flexDirection={'column'}\n          alignItems={['center','flex-end']}\n          justifyContent={['center','flex-end']}\n        >\n          <Flex\n            p={2}\n            width={1}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={'dark-blue'}\n            flexDirection={['column','row']}\n          >\n            <Text\n              color={'white'}\n              textAlign={['center','flex-end']}\n            >\n              &copy; {currYear} - Idle Labs Inc.\n            </Text>\n            <RouterLink\n              color={'blue'}\n              to={'/terms-of-service'}\n              style={{textDecoration:'none'}}\n            >\n              <Text\n                pl={2}\n                color={'#0df'}\n                textAlign={['center','flex-end']}\n              >\n                Terms of Service\n              </Text>\n            </RouterLink>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport styles from './TableCellHeader.module.scss';\nimport { Flex, Heading, Icon, Link, Tooltip } from \"rimble-ui\";\n\nclass TableCellHeader extends Component {\n  render() {\n\n    const ColTitle = (props) => (\n      <Heading.h4\n        fontWeight={[3,4]}\n        color={'cellTitle'}\n        style={{\n          width:'100%',\n          whiteSpace:'nowrap'\n        }}\n        fontSize={['10px',3]}\n        lineHeight={'initial'}\n        {...props}\n      >\n        {props.children}\n      </Heading.h4>\n    );\n\n    return (\n      <Flex\n        width={this.props.width}\n      >\n        {\n          (this.props.desc && this.props.desc.length>1) ? (\n            <Flex\n              alignItems={'center'}\n            >\n              <ColTitle\n                {...this.props}\n              />\n              <Link\n                style={{\n                  cursor:'pointer'\n                }}\n                onClick={ e => this.props.openTooltipModal(this.props.title,this.props.desc) }\n              >\n                <Tooltip\n                  placement={'top'}\n                  message={'Click to read the description'}\n                >\n                  <Icon\n                    ml={1}\n                    name={\"Info\"}\n                    color={'cellTitle'}\n                    className={styles.tooltip}\n                    size={ this.props.isMobile ? '1em' : '1.2em'}\n                  />\n                </Tooltip>\n              </Link>\n            </Flex>\n          ) : (\n            <ColTitle\n              {...this.props}\n            />\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableCellHeader;\n","import React, { Component } from 'react';\nimport { Flex, Text, Icon } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass CardIconButton extends Component {\n  render() {\n    const cardProps = Object.assign({\n      py:1,\n      width:'auto',\n      px:['12px',3],\n    },this.props.cardProps);\n\n    return (\n       <DashboardCard\n         cardProps={cardProps}\n         isInteractive={true}\n         isActive={this.props.isActive}\n         handleClick={this.props.handleClick}\n       >\n         <Flex\n           my={1}\n           alignItems={'center'}\n           flexDirection={'row'}\n           justifyContent={'center'}\n         >\n          {\n            this.props.useIconOnly ? (\n              <Icon\n                align={'center'}\n                name={this.props.icon}\n                size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                color={ this.props.iconColor ? this.props.iconColor : 'redeem' }\n              />\n            ) : (\n             <Flex\n               mr={2}\n               p={['4px','7px']}\n               borderRadius={'50%'}\n               alignItems={'center'}\n               justifyContent={'center'}\n               backgroundColor={ this.props.iconBgColor ? this.props.iconBgColor : this.props.theme.colors.transactions.actionBg.redeem }\n             >\n               <Icon\n                 align={'center'}\n                 name={this.props.icon}\n                 size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                 color={ this.props.iconColor ? this.props.iconColor : 'redeem' }\n               />\n             </Flex>\n            )\n          }\n           <Text\n             fontWeight={3}\n             fontSize={[1,3]}\n             {...this.props.textProps}\n           >\n             {this.props.text}\n           </Text>\n         </Flex>\n       </DashboardCard>\n    );\n  }\n}\n\nexport default CardIconButton;","import { Line } from '@nivo/line';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport { linearGradientDef } from '@nivo/core'\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport CustomTooltip from '../CustomTooltip/CustomTooltip';\nimport VariationNumber from '../VariationNumber/VariationNumber';\nimport AllocationChart from '../AllocationChart/AllocationChart';\nimport CustomTooltipRow from '../CustomTooltip/CustomTooltipRow';\nimport { Image, Text, Loader, Button, Tooltip, Icon, Flex } from \"rimble-ui\";\n\nclass AssetField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized && this.props.contractsInitialized;\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || accountChanged || transactionsChanged || (contractInitialized && !this.state.ready)){\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.loadField();\n      });\n    } else if (mobileChanged || themeModeChanged){\n      const oldState = Object.assign({},this.state);\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n    // Exit if component unmounted\n    // console.log('loadField',this.props.fieldInfo.name,this.props.account,this.props.token,this.props.tokenConfig);\n\n    if (this.componentUnmounted || !this.props.token || !this.props.tokenConfig){\n      return false;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    // const addCurveApy = typeof this.props.addCurveApy !== 'undefined' ? this.props.addCurveApy : false;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        case 'tokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              tokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'govTokens':\n          const govTokens = this.functionsUtil.getTokenGovTokens(this.props.tokenConfig);\n          const getGovTokensDistributionSpeed = await this.functionsUtil.getGovTokensDistributionSpeed(this.props.tokenConfig);\n          this.setStateSafe({\n            govTokens,\n            getGovTokensDistributionSpeed\n          });\n        break;\n        case 'tokenPrice':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenPrice = '-';\n            if (typeof this.props.tokenConfig.showPrice === 'undefined' || this.props.tokenConfig.showPrice){\n              tokenPrice = output.toString();\n            }\n            this.setStateSafe({\n              tokenPrice\n            });\n          }\n        break;\n        case 'fee':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              fee:output.toString()\n            });\n          }\n        break;\n        case 'amountToMigrate':\n          const {\n            oldContractBalanceFormatted\n          } = await this.functionsUtil.checkMigration(this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (setState && oldContractBalanceFormatted){\n            this.setStateSafe({\n              amountToMigrate:oldContractBalanceFormatted.toString()\n            });\n            output = oldContractBalanceFormatted;\n          }\n        break;\n        case 'amountLent':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              amountLent:output.toString()\n            });\n          }\n        break;\n        case 'idleTokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              idleTokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'redeemableBalanceCounterCurve':\n          const {\n            redeemableBalanceCurveEnd,\n            redeemableBalanceCurveStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceCurveStart && redeemableBalanceCurveEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceCurveEnd,\n                redeemableBalanceCurveStart\n              });\n            }\n\n            output = {\n              redeemableBalanceCurveEnd,\n              redeemableBalanceCurveStart\n            };\n          }\n        break;\n        case 'redeemableBalanceCounter':\n          const {\n            redeemableBalanceEnd,\n            redeemableBalanceStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceStart && redeemableBalanceEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceEnd,\n                redeemableBalanceStart\n              });\n            }\n\n            output = {\n              redeemableBalanceEnd,\n              redeemableBalanceStart\n            };\n          }\n        break;\n        case 'earnings':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earnings:output.toString()\n            });\n          }\n        break;\n        case 'feesCounter':\n          const [earningsCounter,feePercentage] = await Promise.all([\n            this.loadField('earningsCounter'),\n            this.functionsUtil.getTokenFees(this.props.tokenConfig)\n          ]);\n\n          if (earningsCounter && earningsCounter.earningsStart && earningsCounter.earningsEnd && feePercentage){\n\n            const feesStart = earningsCounter.earningsStart.times(feePercentage);\n            const feesEnd = earningsCounter.earningsEnd.times(feePercentage);\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                feesEnd,\n                feesStart\n              });\n            }\n\n            output = {\n              feesEnd,\n              feesStart\n            };\n          }\n        break;\n        case 'earningsCounterCurve':\n          const [curveApy,earningsCurveStart,amountLentCurve] = await Promise.all([\n            this.functionsUtil.getCurveAPY(),\n            this.functionsUtil.loadAssetField('earningsCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLentCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n          if (amountLentCurve && earningsCurveStart && curveApy){\n            const earningsCurveEnd = amountLentCurve.gt(0) ? amountLentCurve.times(curveApy.div(100)).plus(earningsCurveStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsCurveEnd,\n                earningsCurveStart\n              });\n            }\n\n            output = {\n              earningsCurveEnd,\n              earningsCurveStart\n            };\n          }\n        break;\n        case 'earningsCounter':\n          const [tokenAPY2,earningsStart,amountLent2] = await Promise.all([\n            this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('earnings',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLent',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n          if (amountLent2 && earningsStart && tokenAPY2){\n            const earningsEnd = amountLent2.gt(0) ? amountLent2.times(tokenAPY2.div(100)).plus(earningsStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsEnd,\n                earningsStart\n              });\n            }\n\n            output = {\n              earningsEnd,\n              earningsStart\n            };\n          }\n        break;\n        case 'redeemableBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              redeemableBalance:output.toString()\n            });\n          }\n        break;\n        case 'score':\n          const tokenScore = await this.functionsUtil.getTokenScore(this.props.tokenConfig,isRisk);\n          if (setState){\n            this.setStateSafe({\n              score:tokenScore ? tokenScore : false\n            });\n          }\n          output = tokenScore;\n        break;\n        case 'pool':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              poolSize:output.toString()\n            });\n          }\n        break;\n        case 'earningsPercCurve':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPercCurveDirection:parseFloat(output)>0 ? 'up' : 'down',\n              earningsPercCurve:parseFloat(output).toFixed(decimals)\n            });\n          }\n        break;\n        case 'earningsPerc':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPerc:parseFloat(output).toFixed(decimals),\n              earningsPercDirection:parseFloat(output)>0 ? 'up' : 'down'\n            });\n          }\n        break;\n        case 'apr':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenAPR = '-';\n            if (typeof this.props.tokenConfig.showAPR === 'undefined' || this.props.tokenConfig.showAPR){\n              tokenAPR = parseFloat(output).toFixed(decimals);\n            }\n            this.setStateSafe({\n              tokenAPR\n            });\n          }\n        break;\n        case 'oldApy':\n          if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.oldContract){\n            const oldTokenConfig = Object.assign({},this.props.tokenConfig);\n            oldTokenConfig.idle = Object.assign({},this.props.tokenConfig.migration.oldContract);\n            oldTokenConfig.protocols = Object.values(this.props.tokenConfig.protocols);\n\n            // Override token with name\n            oldTokenConfig.idle.token = oldTokenConfig.idle.name;\n\n            // Replace protocols with old protocols\n            if (oldTokenConfig.migration.oldProtocols){\n              oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n                const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n                if (foundProtocol){\n                  const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                  oldTokenConfig.protocols[protocolPos] = oldProtocol;\n                }\n              });\n            }\n\n            output = await this.functionsUtil.loadAssetField('apy',this.props.token,oldTokenConfig,this.props.account,false);\n\n          } else {\n            output = await this.loadField('apyNoGov');\n          }\n\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                oldAPY:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                oldAPY:false\n              });\n            }\n          }\n        break;\n        case 'apyNoGov':\n          output = await this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,false);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                tokenAPYNoGov:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPYNoGov:false\n              });\n            }\n          }\n        break;\n        case 'curveApy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveApy:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveApy:false\n              });\n            }\n          }\n        break;\n        case 'curveAvgSlippage':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveAvgSlippage:(parseFloat(output)*100).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveAvgSlippage:false\n              });\n            }\n          }\n        break;\n\n        case 'apy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              const tokenAPY = parseFloat(output).toFixed(decimals);\n              const showTooltip = !this.props.isMobile && (fieldInfo.showTooltip !== undefined && fieldInfo.showTooltip);\n              const govTokensAprs = showTooltip ? await this.functionsUtil.getGovTokensAprs(this.props.token,this.props.tokenConfig) : null;\n              this.setStateSafe({\n                tokenAPY,\n                govTokensAprs\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPY:false\n              });\n            }\n          }\n        break;\n        case 'allocationChart':\n          let allocationChartWidth = 0;\n          let allocationChartHeight = 0;\n\n          const resizeAllocationChart = () => {\n            const allocationChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (allocationChartRowElement){\n              const $allocationChartRowElement = window.jQuery(allocationChartRowElement);\n              allocationChartWidth = $allocationChartRowElement.innerWidth()-parseFloat($allocationChartRowElement.css('padding-right'))-parseFloat($allocationChartRowElement.css('padding-left'));\n              allocationChartHeight = $allocationChartRowElement.innerHeight();\n\n              // Make it a square\n              allocationChartWidth = parseInt(allocationChartWidth)>0 ? Math.min(allocationChartWidth,allocationChartHeight) : allocationChartHeight;\n              allocationChartHeight = allocationChartWidth;\n\n\n              if (allocationChartWidth !== this.state.allocationChartWidth){\n                if (setState){\n                  this.setStateSafe({\n                    allocationChartWidth,\n                    allocationChartHeight\n                  });\n                }\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAllocationChart();\n          window.removeEventListener('resize', resizeAllocationChart.bind(this));\n          window.addEventListener('resize', resizeAllocationChart.bind(this));\n\n          if (setState){\n            this.setStateSafe({\n              allocationChartWidth,\n              allocationChartHeight\n            });\n          }\n        break;\n        case 'aprChart':\n          // Set start timestamp for v3 tokens\n          const aprChartEndTimestamp = isRisk ? this.functionsUtil.getGlobalConfig(['stats','versions','v3','endTimestamp']) : null;\n          const aprChartStartTimestamp = isRisk ? aprChartEndTimestamp-(7*24*60*60) : Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).format('DD/MM/YYYY 00:00:00'),'DD/MM/YYYY HH:mm:ss').subtract(7,'days')._d.getTime()/1000));\n\n          // Check for cached data\n          let aprChartData = null;\n          const cachedDataKey = `aprChart_${this.props.tokenConfig.address}_${isRisk}`;\n          const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n\n          aprChartData = [{\n            id:this.props.token,\n            color: this.props.color ? this.props.color : 'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'color','hsl']).join(',')+')',\n            data: []\n          }];\n\n          if (cachedData !== null){\n            aprChartData = cachedData;\n          } else {\n\n            // FAKE CHART DATA\n            if (this.props.token === 'COMP'){\n              aprChartData[0].data = [];\n              const startTimestamp = new Date().getTime();\n              let y = 20;\n              for (var i=0; i<=16; i++) {\n                const mDate = this.functionsUtil.strToMoment(startTimestamp).add(i,'day');\n                const x = mDate.format(\"YYYY/MM/DD HH:mm\");\n                // Grow\n                if ((i>=5 && i<=10) || (i>=13)){\n                  y+=Math.random()*4+2; // Risk\n                  // y+=Math.random()*7+4; // Best\n                // Decrease\n                } else {\n                  y-=Math.random()*3+1; // Risk\n                  // y-=Math.random()*3+1; // Best\n                }\n                aprChartData[0].data.push({x,y});\n              }\n            } else {\n              const frequencySeconds = this.functionsUtil.getFrequencySeconds('hour',12);\n              const apiResultsAprChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,aprChartStartTimestamp,aprChartEndTimestamp,false,frequencySeconds);\n\n              // if (isRisk){\n              //   debugger;\n              // }\n\n              apiResultsAprChart.forEach((d,i) => {\n                const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const y = parseFloat(this.functionsUtil.fixTokenDecimals(d.idleRate,18));\n                aprChartData[0].data.push({ x, y });\n              });\n            }\n\n            this.functionsUtil.setCachedData(cachedDataKey,aprChartData);\n          }\n\n\n          // Add same value\n          if (aprChartData[0].data.length === 1){\n            const newPoint = Object.assign({},aprChartData[0].data[0]);\n            newPoint.x = this.functionsUtil.strToMoment(newPoint,\"YYYY/MM/DD HH:mm\").add(1,'hours').format(\"YYYY/MM/DD HH:mm\")\n            aprChartData[0].data.push(newPoint);\n          }\n\n          let aprChartWidth = 0;\n          let aprChartHeight = 0;\n\n          const resizeAprChart = () => {\n            const aprChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (aprChartRowElement){\n              const $aprChartRowElement = window.jQuery(aprChartRowElement);\n              aprChartWidth = $aprChartRowElement.innerWidth()-parseFloat($aprChartRowElement.css('padding-right'))-parseFloat($aprChartRowElement.css('padding-left'));\n              aprChartHeight = $aprChartRowElement.innerHeight();\n              if (aprChartWidth !== this.state.aprChartWidth || !this.state.aprChartHeight){\n                this.setStateSafe({\n                  aprChartWidth,\n                  aprChartHeight: this.state.aprChartHeight ? this.state.aprChartHeight : aprChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAprChart();\n          window.removeEventListener('resize', resizeAprChart.bind(this));\n          window.addEventListener('resize', resizeAprChart.bind(this));\n\n          // Set chart type\n          const aprChartType = Line;\n\n          const aprChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            axisLeft:null,\n            animate:false,\n            axisBottom:null,\n            enableArea:true,\n            areaOpacity:0.1,\n            curve:'monotoneX',\n            enableGridX:false,\n            enableGridY:false,\n            pointBorderWidth:2,\n            isInteractive:true,\n            colors:d => d.color,\n            defs:[\n              linearGradientDef('gradientArea', [\n                  { offset: 0, color: '#faf047' },\n                  { offset: 50, color: '#e4b400' },\n              ])\n            ],\n            enableSlices:this.props.isMobile ? false : 'x',\n            yFormat:value => parseFloat(value).toFixed(2)+'%',\n            fill:[\n              { match: { id: this.props.token } , id: 'gradientArea' },\n            ],\n            margin: { top: 10, right: 0, bottom: 0, left: 0 },\n            sliceTooltip:(slideData) => {\n              const { slice } = slideData;\n              const point = slice.points[0];\n              return (\n                <CustomTooltip\n                  point={point}\n                >\n                  {\n                  typeof slice.points === 'object' && slice.points.length &&\n                    slice.points.map(point => {\n                      const protocolName = point.serieId;\n                      const protocolEarning = point.data.yFormatted;\n                      // const protocolApy = point.data.apy;\n                      return (\n                        <CustomTooltipRow\n                          key={point.id}\n                          color={point.color}\n                          label={protocolName}\n                          value={protocolEarning}\n                        />\n                      );\n                    })\n                  }\n                </CustomTooltip>\n              );\n            }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                aprChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              aprChartType,\n              aprChartData,\n              aprChartProps,\n              aprChartWidth,\n              aprChartHeight\n            });\n          }\n          output = aprChartData;\n        break;\n        case 'performanceChart':\n          let firstTokenPrice = null;\n          let firstIdleBlock = null;\n          /*\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const performanceChartRowElement = document.getElementById(this.props.rowId) ? document.getElementById(this.props.rowId) : document.getElementById(this.props.parentId);\n          if (performanceChartRowElement){\n            performanceChartWidth = parseFloat(performanceChartRowElement.offsetWidth)>0 ? performanceChartRowElement.offsetWidth* (this.props.colProps ? this.props.colProps.width : 1) : 0;\n            performanceChartHeight = parseFloat(performanceChartRowElement.offsetHeight);\n          }\n          */\n\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const resizePerformanceChart = () => {\n            const PerformanceChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (PerformanceChartRowElement){\n              const $PerformanceChartRowElement = window.jQuery(PerformanceChartRowElement);\n              performanceChartWidth = $PerformanceChartRowElement.innerWidth()-parseFloat($PerformanceChartRowElement.css('padding-right'))-parseFloat($PerformanceChartRowElement.css('padding-left'));\n              performanceChartHeight = $PerformanceChartRowElement.innerHeight();\n              if (performanceChartWidth !== this.state.performanceChartWidth || !this.state.performanceChartHeight){\n                this.setStateSafe({\n                  performanceChartWidth,\n                  performanceChartHeight: this.state.performanceChartHeight ? this.state.performanceChartHeight : performanceChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizePerformanceChart();\n          window.removeEventListener('resize', resizePerformanceChart.bind(this));\n          window.addEventListener('resize', resizePerformanceChart.bind(this));\n\n          const apr_end_date = this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).subtract(1,'day').format('YYYY-MM-DD 23:59'),'YYYY-MM-DD HH:mm');\n          const apr_start_date = apr_end_date.clone().subtract(1,'week');\n\n          // Set start timestamp for v3 tokens\n          const apr_start_timestamp =  Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(apr_start_date._d.getTime()/1000));\n          // const apr_end_timestamp = parseInt(apr_end_date._d.getTime()/1000);\n\n          let apiResultsPerformanceChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,apr_start_timestamp,null,false,43200);\n\n          const idleTokenPerformance = apiResultsPerformanceChart.map((d,i) => {\n            let y = 0;\n            const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n            const tokenPrice = this.functionsUtil.fixTokenDecimals(d.idlePrice,this.props.tokenConfig.decimals);\n\n            if (!firstTokenPrice){\n              firstTokenPrice = tokenPrice;\n            } else {\n              y = parseFloat(tokenPrice.div(firstTokenPrice).minus(1).times(100));\n            }\n\n            if (firstIdleBlock === null){\n              firstIdleBlock = parseInt(d.blocknumber);\n            }\n\n            return { x, y };\n          });\n\n          const performanceChartData = [{\n            id:'Idle',\n            color: 'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'color','hsl']).join(',')+')',\n            data: idleTokenPerformance\n          }];\n\n          // Set chart type\n          const performanceChartType = Line;\n\n          const performanceChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            animate:false,\n            axisLeft:null,\n            axisBottom:null,\n            enableArea:true,\n            enableGridX:false,\n            enableGridY:false,\n            curve:'monotoneX',\n            enableSlices:false,\n            pointBorderWidth:1,\n            colors:d => d.color,\n            pointLabelYOffset:-12,\n            margin: { top: 0, right: 0, bottom: 0, left: 0 }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                performanceChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              performanceChartType,\n              performanceChartData,\n              performanceChartProps,\n              performanceChartWidth,\n              performanceChartHeight\n            });\n          }\n          output = performanceChartData;\n        break;\n        case 'custom':\n          const path = fieldInfo.path;\n          output = this.functionsUtil.getArrayPath(path,this.props.tokenConfig);\n          if (output){\n            this.setStateSafe({\n              [fieldName]:output\n            });\n          }\n        break;\n        default:\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              ready:true,\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n    return output;\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n    let output = null;\n\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n      \n    const maxPrecision = fieldProps && fieldProps.maxPrecision ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const minPrecision = fieldProps && fieldProps.minPrecision ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    switch (fieldInfo.name){\n      case 'iconTooltip':\n        const icon1 = this.props.tokenConfig && this.props.tokenConfig.icon ? this.props.tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Tooltip\n            placement={'top'}\n            message={this.props.token}\n            {...fieldInfo.tooltipProps}\n          >\n            <Image src={icon1} {...fieldProps} />\n          </Tooltip>\n        );\n      break;\n      case 'icon':\n        const icon2 = this.props.tokenConfig && this.props.tokenConfig.icon ? this.props.tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Image src={icon2} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        output = (\n          <Text {...fieldProps}>{this.props.token}</Text>\n        );\n      break;\n      case 'strategyIcon':\n        const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'icon']);\n        if (strategyIcon){\n          output = (\n            <Image src={strategyIcon} {...fieldProps} />\n          );\n        }\n      break;\n      case 'strategyName':\n        const strategyName = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'title']);\n        output = (\n          <Text {...fieldProps}>{strategyName}</Text>\n        );\n      break;\n      case 'tokenBalance':\n        output = this.state.tokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenBalance} />\n        ) : loader\n      break;\n      case 'fee':\n        output = this.state.fee ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.fee} />\n        ) : loader\n      break;\n      case 'tokenPrice':\n        output = this.state.tokenPrice ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenPrice} />\n        ) : loader\n      break;\n      case 'amountToMigrate':\n        output = this.state.amountToMigrate ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.amountToMigrate} />\n        ) : loader\n      break;\n      case 'idleTokenBalance':\n        output = this.state.idleTokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.idleTokenBalance} />\n        ) : loader\n      break;\n      case 'redeemableBalanceCounterCurve':\n        output = this.state.ready && this.state.redeemableBalanceCurveStart && this.state.redeemableBalanceCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceCurveEnd)}\n            start={parseFloat(this.state.redeemableBalanceCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalanceCounter':\n        output = this.state.ready && this.state.redeemableBalanceStart && this.state.redeemableBalanceEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceEnd)}\n            start={parseFloat(this.state.redeemableBalanceStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'feesCounter':\n        output = this.state.ready && this.state.feesStart && this.state.feesEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.feesEnd)}\n            start={parseFloat(this.state.feesStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounterCurve':\n        output = this.state.ready && this.state.earningsCurveStart && this.state.earningsCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsCurveEnd)}\n            start={parseFloat(this.state.earningsCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounter':\n        output = this.state.ready && this.state.earningsStart && this.state.earningsEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsEnd)}\n            start={parseFloat(this.state.earningsStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalance':\n        output = this.state.redeemableBalance ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.redeemableBalance} />\n        ) : loader\n      break;\n      case 'govTokens':\n        output = this.state.govTokens ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n          >\n            {\n              Object.values(this.state.govTokens).map( (govTokenConfig,govTokenIndex) => (\n                <AssetField\n                  token={govTokenConfig.token}\n                  tokenConfig={govTokenConfig}\n                  key={`asset_${govTokenIndex}`}\n                  fieldInfo={{\n                    name:'iconTooltip',\n                    tooltipProps:{\n                      message:`${govTokenConfig.token}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govTokenConfig.token] ? `: ${this.state.getGovTokensDistributionSpeed[govTokenConfig.token].toFixed(decimals)}/${govTokenConfig.distributionFrequency} (for the whole pool)` : '')\n                    },\n                    props:{\n                      borderRadius:'50%',\n                      position:'relative',\n                      height:['1.1em','2em'],\n                      ml:govTokenIndex ? '-10px' : 0,\n                      zIndex:Object.values(this.state.govTokens).length-govTokenIndex,\n                      boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                    }\n                  }}\n                />\n              ))\n            }\n          </Flex>\n        ) : loader\n      break;\n      case 'amountLentCurve':\n        output = this.state.amountLentCurve ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLentCurve} />\n        ) : loader\n      break;\n      case 'amountLent':\n        output = this.state.amountLent ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLent} />\n        ) : loader\n      break;\n      case 'pool':\n        output = this.state.poolSize ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.poolSize} />\n        ) : loader\n      break;\n      case 'score':\n        // console.log('score',this.state.score);\n        output = this.state.score !== undefined && this.state.score !== null ? (\n          <SmartNumber {...fieldProps} decimals={1} number={this.state.score} />\n        ) : loader\n      break;\n      case 'earningsPerc':\n        output = this.state.earningsPerc ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsPercCurve':\n        output = this.state.earningsPercCurve ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercCurveDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsCurve':\n        output = this.state.earningsCurve ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earningsCurve}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'earnings':\n        output = this.state.earnings ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earnings}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'idleDistribution':\n        const governanceTokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n        const idleTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',governanceTokenName]);\n        output = this.state.idleDistribution ? (\n          <Text {...fieldProps}>+{this.state.idleDistribution.toFixed(decimals)} IDLE/{idleTokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'userDistributionSpeed':\n        output = this.state.userDistributionSpeed ? (\n          <Text {...fieldProps}>{this.state.userDistributionSpeed.toFixed(decimals)}/{this.props.tokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'distributionSpeed':\n        output = this.state.distributionSpeed ? (\n          <Text {...fieldProps}>{this.state.distributionSpeed.toFixed(decimals)}</Text>\n        ) : loader\n      break;\n      case 'apr':\n        output = this.state.tokenAPR ? (\n          <Text {...fieldProps}>{this.state.tokenAPR}{!isNaN(parseFloat(this.state.tokenAPR)) ? '%' : ''}</Text>\n        ) : loader\n      break;\n      case 'oldApy':\n        output = this.state.oldAPY !== undefined ? (\n          <Text {...fieldProps}>{this.state.oldAPY !== false ? this.state.oldAPY : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apyNoGov':\n        output = this.state.tokenAPYNoGov !== undefined ? (\n          <Text {...fieldProps}>{this.state.tokenAPYNoGov !== false ? this.state.tokenAPYNoGov : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveApy':\n        output = this.state.curveApy !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveApy !== false ? this.state.curveApy : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveAvgSlippage':\n        output = this.state.curveAvgSlippage !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveAvgSlippage !== false ? this.state.curveAvgSlippage : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apy':\n        output = this.state.tokenAPY !== undefined ? (\n          <Flex\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text {...fieldProps}>{this.state.tokenAPY !== false ? this.state.tokenAPY : '-' }<small>%</small></Text>\n            {\n              this.state.govTokensAprs && Object.keys(this.state.govTokensAprs).length>0 && \n                <AssetField\n                  fieldInfo={{\n                    name:'tooltip',\n                    props:{\n                      iconProps:{\n                        ml:1\n                      },\n                      placement:'top',\n                      message:Object.keys(this.state.govTokensAprs).map( govToken => {\n                        const distributionFrequency = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'distributionFrequency']);\n                        const tooltipMode = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'aprTooltipMode']);\n                        let value = this.state.govTokensAprs[govToken].toFixed(decimals);\n                        switch (tooltipMode){\n                          default:\n                          case 'apr':\n                            value += '%';\n                          break;\n                          case 'distribution':\n                            value = `${value}/${distributionFrequency}`;\n                          break;\n                        }\n                        return `${govToken}: ${value}`\n                      }).join('; ')\n                    }\n                  }}\n                />\n            }\n          </Flex>\n        ) : loader\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <Button {...fieldProps} onClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</Button>\n        );\n      break;\n      case 'performanceChart':\n        output = this.state.performanceChartData ? (\n          <GenericChart\n            {...this.state.performanceChartProps}\n            type={this.state.performanceChartType}\n            data={this.state.performanceChartData}\n            width={this.state.performanceChartWidth}\n            height={this.state.performanceChartHeight}\n          />\n        ) : loader\n      break;\n      case 'allocationChart':\n        output = this.state.allocationChartWidth && this.state.allocationChartHeight ? (\n          <AllocationChart\n            {...this.props}\n            loaderProps={{\n              size:'20px'\n            }}\n            loaderText={''}\n            selectedToken={this.props.token}\n            width={this.state.allocationChartWidth}\n            height={this.state.allocationChartHeight}\n            inline={typeof this.props.inline !== 'undefined' ? this.props.inline : true}\n            showLoader={typeof this.props.showLoader !== 'undefined' ? this.props.showLoader : false}\n          />\n        ) : loader\n      break;\n      case 'tooltip':\n        output = (\n          <Tooltip\n            {...fieldProps}\n          >\n            <Icon\n              ml={2}\n              name={\"Info\"}\n              size={'1em'}\n              color={'cellTitle'}\n              {...fieldProps.iconProps}\n            />\n          </Tooltip>\n        );\n      break;\n      case 'aprChart':\n        output = this.state.aprChartData ? (\n          <GenericChart\n            {...this.state.aprChartProps}\n            type={this.state.aprChartType}\n            data={this.state.aprChartData}\n            width={this.state.aprChartWidth}\n            height={this.state.aprChartHeight}\n          />\n        ) : loader\n      break;\n      case 'custom':\n        let CustomComponent = null;\n        let customValue = this.state[fieldInfo.name];\n        switch (fieldInfo.type){\n          case 'number':\n            customValue = this.functionsUtil.BNify(customValue).toString();\n            CustomComponent = SmartNumber;\n            fieldProps.number = customValue;\n          break;\n          case 'icon':\n            CustomComponent = Icon;\n            fieldProps.name = customValue;\n            const customFieldName = Object.values(fieldInfo.path).pop();\n            if (this.props.tokenConfig[`${customFieldName}Props`]){\n              const customFieldProps = this.props.tokenConfig[`${customFieldName}Props`];\n              // Replace props\n              if (customFieldProps && Object.keys(customFieldProps).length){\n                Object.keys(customFieldProps).forEach(p => {\n                  fieldProps[p] = customFieldProps[p];\n                });\n              }\n            }\n          break;\n          default:\n            CustomComponent = Text;\n          break;\n        }\n        output = customValue ? (\n          <CustomComponent {...fieldProps}>{customValue}</CustomComponent>\n        ) : loader\n      break;\n      default:\n        let formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>{formattedValue}</Text>\n        ) : loader\n      break;\n    }\n    return output;\n  }\n}\n\nexport default AssetField;\n"],"sourceRoot":""}